

Microchip MPLAB XC8 Assembler V2.30 build 20200825195618 
                                                                                               Sat Oct 10 00:58:28 2020

Microchip MPLAB XC8 C Compiler v2.30 (Free license) build 20200825195618 Og1 
     1                           	processor	18F46K42
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=3
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=3
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=3
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=3
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=2
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=2
    36                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=3
    40                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=3
    41                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=3
    42                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=2
    43                           	psect	text31,global,reloc=2,class=CODE,delta=1
    44                           	psect	text32,global,reloc=2,class=CODE,delta=1
    45                           	psect	text33,global,reloc=2,class=CODE,delta=1
    46                           	psect	text34,global,reloc=2,class=CODE,delta=1
    47                           	psect	text35,global,reloc=2,class=CODE,delta=1
    48                           	psect	text36,global,reloc=2,class=CODE,delta=1
    49                           	psect	text37,global,reloc=2,class=CODE,delta=1
    50                           	psect	text38,global,reloc=2,class=CODE,delta=1
    51                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    52                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    53                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    54                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    55  0000                     
    56                           ; Version 2.20
    57                           ; Generated 05/05/2020 GMT
    58                           ; 
    59                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    60                           ; All rights reserved.
    61                           ; 
    62                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    63                           ; 
    64                           ; Redistribution and use in source and binary forms, with or without modification, are
    65                           ; permitted provided that the following conditions are met:
    66                           ; 
    67                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    68                           ;        conditions and the following disclaimer.
    69                           ; 
    70                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    71                           ;        of conditions and the following disclaimer in the documentation and/or other
    72                           ;        materials provided with the distribution.
    73                           ; 
    74                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    75                           ;        software without specific prior written permission.
    76                           ; 
    77                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    78                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    79                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    80                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    81                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    82                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    83                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    84                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    85                           ; 
    86                           ; 
    87                           ; Code-generator required, PIC18F46K42 Definitions
    88                           ; 
    89                           ; SFR Addresses
    90  0000                     
    91 ;; Function _UART2_DefaultFramingErrorHandler is unused but had its address taken
    92  0000                     
    93 ;; Function _UART2_DefaultOverrunErrorHandler is unused but had its address taken
    94  0000                     
    95 ;; Function _UART2_DefaultErrorHandler is unused but had its address taken
    96  0000                     
    97                           	psect	nvBANK0
    98  0000D3                     __pnvBANK0:
    99                           	callstack 0
   100  0000D3                     _UART2_ErrorHandler:
   101                           	callstack 0
   102  0000D3                     	ds	2
   103  0000D5                     _UART2_OverrunErrorHandler:
   104                           	callstack 0
   105  0000D5                     	ds	2
   106  0000D7                     _UART2_FramingErrorHandler:
   107                           	callstack 0
   108  0000D7                     	ds	2
   109  0000                     _PMD7	set	14791
   110  0000                     _PMD6	set	14790
   111  0000                     _PMD5	set	14789
   112  0000                     _PMD4	set	14788
   113  0000                     _PMD3	set	14787
   114  0000                     _PMD2	set	14786
   115  0000                     _PMD1	set	14785
   116  0000                     _PMD0	set	14784
   117  0000                     _OSCTUNE	set	14814
   118  0000                     _OSCFRQ	set	14815
   119  0000                     _OSCEN	set	14813
   120  0000                     _OSCCON3	set	14811
   121  0000                     _OSCCON1	set	14809
   122  0000                     _PIR6bits	set	14758
   123  0000                     _RB6PPS	set	14862
   124  0000                     _U2RXPPS	set	15080
   125  0000                     _INLVLE	set	14980
   126  0000                     _INLVLD	set	14964
   127  0000                     _INLVLC	set	14948
   128  0000                     _INLVLB	set	14932
   129  0000                     _INLVLA	set	14916
   130  0000                     _SLRCONE	set	14979
   131  0000                     _SLRCOND	set	14963
   132  0000                     _SLRCONC	set	14947
   133  0000                     _SLRCONB	set	14931
   134  0000                     _SLRCONA	set	14915
   135  0000                     _ODCOND	set	14962
   136  0000                     _ODCONC	set	14946
   137  0000                     _ODCONB	set	14930
   138  0000                     _ODCONA	set	14914
   139  0000                     _ODCONE	set	14978
   140  0000                     _RD1I2C	set	14971
   141  0000                     _RD0I2C	set	14970
   142  0000                     _RC4I2C	set	14955
   143  0000                     _RC3I2C	set	14954
   144  0000                     _RB2I2C	set	14939
   145  0000                     _RB1I2C	set	14938
   146  0000                     _WPUC	set	14945
   147  0000                     _WPUA	set	14913
   148  0000                     _WPUB	set	14929
   149  0000                     _WPUE	set	14977
   150  0000                     _WPUD	set	14961
   151  0000                     _ANSELA	set	14912
   152  0000                     _ANSELE	set	14976
   153  0000                     _ANSELB	set	14928
   154  0000                     _ANSELC	set	14944
   155  0000                     _ANSELD	set	14960
   156  0000                     _U2TXB	set	15826
   157  0000                     _U2RXB	set	15824
   158  0000                     _U2ERRIRbits	set	15841
   159  0000                     _U2CON0bits	set	15834
   160  0000                     _U2ERRIE	set	15842
   161  0000                     _U2ERRIR	set	15841
   162  0000                     _U2UIR	set	15840
   163  0000                     _U2FIFO	set	15839
   164  0000                     _U2BRGH	set	15838
   165  0000                     _U2BRGL	set	15837
   166  0000                     _U2CON2	set	15836
   167  0000                     _U2CON1	set	15835
   168  0000                     _U2CON0	set	15834
   169  0000                     _U2P3L	set	15832
   170  0000                     _U2P2L	set	15830
   171  0000                     _U2P1L	set	15828
   172  0000                     _TRISD	set	16325
   173  0000                     _TRISC	set	16324
   174  0000                     _TRISB	set	16323
   175  0000                     _TRISA	set	16322
   176  0000                     _TRISE	set	16326
   177  0000                     _LATC	set	16316
   178  0000                     _LATB	set	16315
   179  0000                     _LATA	set	16314
   180  0000                     _LATD	set	16317
   181  0000                     _LATE	set	16318
   182                           
   183                           	psect	mediumconst
   184  00FE88                     __pmediumconst:
   185                           	callstack 0
   186  00FE88  00                 	db	0
   187  00FE89                     STR_5:
   188                           
   189                           ; BSR set to: 57
   190  00FE89  0A                 	db	10
   191  00FE8A  0D                 	db	13
   192  00FE8B  20                 	db	32
   193  00FE8C  48                 	db	72	;'H'
   194  00FE8D  69                 	db	105	;'i'
   195  00FE8E  20                 	db	32
   196  00FE8F  09                 	db	9
   197  00FE90  20                 	db	32
   198  00FE91  6D                 	db	109	;'m'
   199  00FE92  79                 	db	121	;'y'
   200  00FE93  20                 	db	32
   201  00FE94  09                 	db	9
   202  00FE95  20                 	db	32
   203  00FE96  6E                 	db	110	;'n'
   204  00FE97  61                 	db	97	;'a'
   205  00FE98  6D                 	db	109	;'m'
   206  00FE99  65                 	db	101	;'e'
   207  00FE9A  20                 	db	32
   208  00FE9B  09                 	db	9
   209  00FE9C  20                 	db	32
   210  00FE9D  69                 	db	105	;'i'
   211  00FE9E  73                 	db	115	;'s'
   212  00FE9F  20                 	db	32
   213  00FEA0  09                 	db	9
   214  00FEA1  20                 	db	32
   215  00FEA2  69                 	db	105	;'i'
   216  00FEA3  73                 	db	115	;'s'
   217  00FEA4  20                 	db	32
   218  00FEA5  09                 	db	9
   219  00FEA6  09                 	db	9
   220  00FEA7  09                 	db	9
   221  00FEA8  09                 	db	9
   222  00FEA9  20                 	db	32
   223  00FEAA  6D                 	db	109	;'m'
   224  00FEAB  69                 	db	105	;'i'
   225  00FEAC  6B                 	db	107	;'k'
   226  00FEAD  65                 	db	101	;'e'
   227  00FEAE  2E                 	db	46
   228  00FEAF  20                 	db	32
   229  00FEB0  0A                 	db	10
   230  00FEB1  0D                 	db	13
   231  00FEB2  20                 	db	32
   232  00FEB3  57                 	db	87	;'W'
   233  00FEB4  68                 	db	104	;'h'
   234  00FEB5  61                 	db	97	;'a'
   235  00FEB6  74                 	db	116	;'t'
   236  00FEB7  20                 	db	32
   237  00FEB8  09                 	db	9
   238  00FEB9  20                 	db	32
   239  00FEBA  69                 	db	105	;'i'
   240  00FEBB  73                 	db	115	;'s'
   241  00FEBC  20                 	db	32
   242  00FEBD  0A                 	db	10
   243  00FEBE  0D                 	db	13
   244  00FEBF  0A                 	db	10
   245  00FEC0  0D                 	db	13
   246  00FEC1  0A                 	db	10
   247  00FEC2  0D                 	db	13
   248  00FEC3  20                 	db	32
   249  00FEC4  09                 	db	9
   250  00FEC5  09                 	db	9
   251  00FEC6  20                 	db	32
   252  00FEC7  79                 	db	121	;'y'
   253  00FEC8  6F                 	db	111	;'o'
   254  00FEC9  75                 	db	117	;'u'
   255  00FECA  72                 	db	114	;'r'
   256  00FECB  73                 	db	115	;'s'
   257  00FECC  20                 	db	32
   258  00FECD  09                 	db	9
   259  00FECE  20                 	db	32
   260  00FECF  0A                 	db	10
   261  00FED0  0D                 	db	13
   262  00FED1  20                 	db	32
   263  00FED2  3F                 	db	63	;'?'
   264  00FED3  00                 	db	0
   265  00FED4                     STR_4:
   266                           
   267                           ; BSR set to: 57
   268  00FED4  0A                 	db	10
   269  00FED5  0D                 	db	13
   270  00FED6  20                 	db	32
   271  00FED7  30                 	db	48	;'0'
   272  00FED8  31                 	db	49	;'1'
   273  00FED9  32                 	db	50	;'2'
   274  00FEDA  33                 	db	51	;'3'
   275  00FEDB  34                 	db	52	;'4'
   276  00FEDC  35                 	db	53	;'5'
   277  00FEDD  36                 	db	54	;'6'
   278  00FEDE  37                 	db	55	;'7'
   279  00FEDF  38                 	db	56	;'8'
   280  00FEE0  39                 	db	57	;'9'
   281  00FEE1  30                 	db	48	;'0'
   282  00FEE2  31                 	db	49	;'1'
   283  00FEE3  32                 	db	50	;'2'
   284  00FEE4  33                 	db	51	;'3'
   285  00FEE5  34                 	db	52	;'4'
   286  00FEE6  35                 	db	53	;'5'
   287  00FEE7  36                 	db	54	;'6'
   288  00FEE8  37                 	db	55	;'7'
   289  00FEE9  38                 	db	56	;'8'
   290  00FEEA  39                 	db	57	;'9'
   291  00FEEB  30                 	db	48	;'0'
   292  00FEEC  31                 	db	49	;'1'
   293  00FEED  32                 	db	50	;'2'
   294  00FEEE  33                 	db	51	;'3'
   295  00FEEF  34                 	db	52	;'4'
   296  00FEF0  35                 	db	53	;'5'
   297  00FEF1  36                 	db	54	;'6'
   298  00FEF2  37                 	db	55	;'7'
   299  00FEF3  38                 	db	56	;'8'
   300  00FEF4  39                 	db	57	;'9'
   301  00FEF5  30                 	db	48	;'0'
   302  00FEF6  31                 	db	49	;'1'
   303  00FEF7  32                 	db	50	;'2'
   304  00FEF8  33                 	db	51	;'3'
   305  00FEF9  34                 	db	52	;'4'
   306  00FEFA  35                 	db	53	;'5'
   307  00FEFB  36                 	db	54	;'6'
   308  00FEFC  37                 	db	55	;'7'
   309  00FEFD  38                 	db	56	;'8'
   310  00FEFE  39                 	db	57	;'9'
   311  00FEFF  30                 	db	48	;'0'
   312  00FF00  31                 	db	49	;'1'
   313  00FF01  32                 	db	50	;'2'
   314  00FF02  33                 	db	51	;'3'
   315  00FF03  34                 	db	52	;'4'
   316  00FF04  35                 	db	53	;'5'
   317  00FF05  36                 	db	54	;'6'
   318  00FF06  37                 	db	55	;'7'
   319  00FF07  38                 	db	56	;'8'
   320  00FF08  39                 	db	57	;'9'
   321  00FF09  30                 	db	48	;'0'
   322  00FF0A  31                 	db	49	;'1'
   323  00FF0B  32                 	db	50	;'2'
   324  00FF0C  33                 	db	51	;'3'
   325  00FF0D  34                 	db	52	;'4'
   326  00FF0E  35                 	db	53	;'5'
   327  00FF0F  36                 	db	54	;'6'
   328  00FF10  37                 	db	55	;'7'
   329  00FF11  38                 	db	56	;'8'
   330  00FF12  39                 	db	57	;'9'
   331  00FF13  20                 	db	32
   332  00FF14  0A                 	db	10
   333  00FF15  0D                 	db	13
   334  00FF16  00                 	db	0
   335  00FF17                     STR_3:
   336                           
   337                           ; BSR set to: 57
   338  00FF17  0A                 	db	10
   339  00FF18  0D                 	db	13
   340  00FF19  20                 	db	32
   341  00FF1A  54                 	db	84	;'T'
   342  00FF1B  68                 	db	104	;'h'
   343  00FF1C  65                 	db	101	;'e'
   344  00FF1D  20                 	db	32
   345  00FF1E  61                 	db	97	;'a'
   346  00FF1F  6E                 	db	110	;'n'
   347  00FF20  73                 	db	115	;'s'
   348  00FF21  77                 	db	119	;'w'
   349  00FF22  65                 	db	101	;'e'
   350  00FF23  72                 	db	114	;'r'
   351  00FF24  20                 	db	32
   352  00FF25  77                 	db	119	;'w'
   353  00FF26  69                 	db	105	;'i'
   354  00FF27  74                 	db	116	;'t'
   355  00FF28  68                 	db	104	;'h'
   356  00FF29  20                 	db	32
   357  00FF2A  30                 	db	48	;'0'
   358  00FF2B  31                 	db	49	;'1'
   359  00FF2C  32                 	db	50	;'2'
   360  00FF2D  2E                 	db	46
   361  00FF2E  33                 	db	51	;'3'
   362  00FF2F  20                 	db	32
   363  00FF30  69                 	db	105	;'i'
   364  00FF31  73                 	db	115	;'s'
   365  00FF32  20                 	db	32
   366  00FF33  3A                 	db	58	;':'
   367  00FF34  20                 	db	32
   368  00FF35  25                 	db	37
   369  00FF36  30                 	db	48	;'0'
   370  00FF37  31                 	db	49	;'1'
   371  00FF38  32                 	db	50	;'2'
   372  00FF39  2E                 	db	46
   373  00FF3A  33                 	db	51	;'3'
   374  00FF3B  66                 	db	102	;'f'
   375  00FF3C  20                 	db	32
   376  00FF3D  00                 	db	0
   377  00FF3E                     STR_2:
   378                           
   379                           ; BSR set to: 57
   380  00FF3E  0A                 	db	10
   381  00FF3F  0D                 	db	13
   382  00FF40  20                 	db	32
   383  00FF41  54                 	db	84	;'T'
   384  00FF42  68                 	db	104	;'h'
   385  00FF43  65                 	db	101	;'e'
   386  00FF44  20                 	db	32
   387  00FF45  61                 	db	97	;'a'
   388  00FF46  6E                 	db	110	;'n'
   389  00FF47  73                 	db	115	;'s'
   390  00FF48  77                 	db	119	;'w'
   391  00FF49  65                 	db	101	;'e'
   392  00FF4A  72                 	db	114	;'r'
   393  00FF4B  20                 	db	32
   394  00FF4C  77                 	db	119	;'w'
   395  00FF4D  69                 	db	105	;'i'
   396  00FF4E  74                 	db	116	;'t'
   397  00FF4F  68                 	db	104	;'h'
   398  00FF50  20                 	db	32
   399  00FF51  31                 	db	49	;'1'
   400  00FF52  32                 	db	50	;'2'
   401  00FF53  2E                 	db	46
   402  00FF54  33                 	db	51	;'3'
   403  00FF55  20                 	db	32
   404  00FF56  69                 	db	105	;'i'
   405  00FF57  73                 	db	115	;'s'
   406  00FF58  20                 	db	32
   407  00FF59  3A                 	db	58	;':'
   408  00FF5A  20                 	db	32
   409  00FF5B  25                 	db	37
   410  00FF5C  31                 	db	49	;'1'
   411  00FF5D  32                 	db	50	;'2'
   412  00FF5E  2E                 	db	46
   413  00FF5F  33                 	db	51	;'3'
   414  00FF60  66                 	db	102	;'f'
   415  00FF61  20                 	db	32
   416  00FF62  00                 	db	0
   417  00FF63                     STR_1:
   418                           
   419                           ; BSR set to: 57
   420  00FF63  0A                 	db	10
   421  00FF64  0D                 	db	13
   422  00FF65  20                 	db	32
   423  00FF66  54                 	db	84	;'T'
   424  00FF67  68                 	db	104	;'h'
   425  00FF68  65                 	db	101	;'e'
   426  00FF69  20                 	db	32
   427  00FF6A  61                 	db	97	;'a'
   428  00FF6B  6E                 	db	110	;'n'
   429  00FF6C  73                 	db	115	;'s'
   430  00FF6D  77                 	db	119	;'w'
   431  00FF6E  65                 	db	101	;'e'
   432  00FF6F  72                 	db	114	;'r'
   433  00FF70  20                 	db	32
   434  00FF71  77                 	db	119	;'w'
   435  00FF72  69                 	db	105	;'i'
   436  00FF73  74                 	db	116	;'t'
   437  00FF74  68                 	db	104	;'h'
   438  00FF75  20                 	db	32
   439  00FF76  32                 	db	50	;'2'
   440  00FF77  2E                 	db	46
   441  00FF78  33                 	db	51	;'3'
   442  00FF79  20                 	db	32
   443  00FF7A  69                 	db	105	;'i'
   444  00FF7B  73                 	db	115	;'s'
   445  00FF7C  20                 	db	32
   446  00FF7D  3A                 	db	58	;':'
   447  00FF7E  20                 	db	32
   448  00FF7F  25                 	db	37
   449  00FF80  32                 	db	50	;'2'
   450  00FF81  2E                 	db	46
   451  00FF82  33                 	db	51	;'3'
   452  00FF83  66                 	db	102	;'f'
   453  00FF84  20                 	db	32
   454  00FF85  00                 	db	0
   455  00FF86                     STR_7:
   456                           
   457                           ; BSR set to: 57
   458  00FF86  0A                 	db	10
   459  00FF87  0D                 	db	13
   460  00FF88  0A                 	db	10
   461  00FF89  0D                 	db	13
   462  00FF8A  20                 	db	32
   463  00FF8B  31                 	db	49	;'1'
   464  00FF8C  20                 	db	32
   465  00FF8D  09                 	db	9
   466  00FF8E  20                 	db	32
   467  00FF8F  25                 	db	37
   468  00FF90  30                 	db	48	;'0'
   469  00FF91  2E                 	db	46
   470  00FF92  32                 	db	50	;'2'
   471  00FF93  66                 	db	102	;'f'
   472  00FF94  20                 	db	32
   473  00FF95  20                 	db	32
   474  00FF96  09                 	db	9
   475  00FF97  20                 	db	32
   476  00FF98  25                 	db	37
   477  00FF99  30                 	db	48	;'0'
   478  00FF9A  2E                 	db	46
   479  00FF9B  32                 	db	50	;'2'
   480  00FF9C  66                 	db	102	;'f'
   481  00FF9D  20                 	db	32
   482  00FF9E  20                 	db	32
   483  00FF9F  09                 	db	9
   484  00FFA0  09                 	db	9
   485  00FFA1  20                 	db	32
   486  00FFA2  25                 	db	37
   487  00FFA3  30                 	db	48	;'0'
   488  00FFA4  2E                 	db	46
   489  00FFA5  32                 	db	50	;'2'
   490  00FFA6  66                 	db	102	;'f'
   491  00FFA7  00                 	db	0
   492  00FFA8                     STR_8:
   493                           
   494                           ; BSR set to: 57
   495  00FFA8  0A                 	db	10
   496  00FFA9  0D                 	db	13
   497  00FFAA  0A                 	db	10
   498  00FFAB  0D                 	db	13
   499  00FFAC  20                 	db	32
   500  00FFAD  32                 	db	50	;'2'
   501  00FFAE  20                 	db	32
   502  00FFAF  09                 	db	9
   503  00FFB0  20                 	db	32
   504  00FFB1  25                 	db	37
   505  00FFB2  30                 	db	48	;'0'
   506  00FFB3  2E                 	db	46
   507  00FFB4  32                 	db	50	;'2'
   508  00FFB5  66                 	db	102	;'f'
   509  00FFB6  20                 	db	32
   510  00FFB7  20                 	db	32
   511  00FFB8  09                 	db	9
   512  00FFB9  20                 	db	32
   513  00FFBA  25                 	db	37
   514  00FFBB  30                 	db	48	;'0'
   515  00FFBC  2E                 	db	46
   516  00FFBD  32                 	db	50	;'2'
   517  00FFBE  66                 	db	102	;'f'
   518  00FFBF  20                 	db	32
   519  00FFC0  20                 	db	32
   520  00FFC1  09                 	db	9
   521  00FFC2  20                 	db	32
   522  00FFC3  25                 	db	37
   523  00FFC4  30                 	db	48	;'0'
   524  00FFC5  2E                 	db	46
   525  00FFC6  32                 	db	50	;'2'
   526  00FFC7  66                 	db	102	;'f'
   527  00FFC8  00                 	db	0
   528  00FFC9                     STR_6:
   529                           
   530                           ; BSR set to: 57
   531  00FFC9  0A                 	db	10
   532  00FFCA  0D                 	db	13
   533  00FFCB  20                 	db	32
   534  00FFCC  20                 	db	32
   535  00FFCD  20                 	db	32
   536  00FFCE  20                 	db	32
   537  00FFCF  20                 	db	32
   538  00FFD0  20                 	db	32
   539  00FFD1  09                 	db	9
   540  00FFD2  20                 	db	32
   541  00FFD3  58                 	db	88	;'X'
   542  00FFD4  20                 	db	32
   543  00FFD5  20                 	db	32
   544  00FFD6  20                 	db	32
   545  00FFD7  20                 	db	32
   546  00FFD8  20                 	db	32
   547  00FFD9  09                 	db	9
   548  00FFDA  09                 	db	9
   549  00FFDB  20                 	db	32
   550  00FFDC  59                 	db	89	;'Y'
   551  00FFDD  20                 	db	32
   552  00FFDE  20                 	db	32
   553  00FFDF  20                 	db	32
   554  00FFE0  20                 	db	32
   555  00FFE1  20                 	db	32
   556  00FFE2  09                 	db	9
   557  00FFE3  09                 	db	9
   558  00FFE4  20                 	db	32
   559  00FFE5  5A                 	db	90	;'Z'
   560  00FFE6  00                 	db	0
   561  00FFE7                     STR_9:
   562                           
   563                           ; BSR set to: 57
   564  00FFE7  49                 	db	73	;'I'
   565  00FFE8  4E                 	db	78	;'N'
   566  00FFE9  46                 	db	70	;'F'
   567  00FFEA  00                 	db	0
   568  00FFEB                     STR_13:
   569                           
   570                           ; BSR set to: 57
   571  00FFEB  4E                 	db	78	;'N'
   572  00FFEC  41                 	db	65	;'A'
   573  00FFED  4E                 	db	78	;'N'
   574  00FFEE  00                 	db	0
   575  00FFEF                     STR_10:
   576                           
   577                           ; BSR set to: 57
   578  00FFEF  69                 	db	105	;'i'
   579  00FFF0  6E                 	db	110	;'n'
   580  00FFF1  66                 	db	102	;'f'
   581  00FFF2  00                 	db	0
   582  00FFF3                     STR_14:
   583                           
   584                           ; BSR set to: 57
   585  00FFF3  6E                 	db	110	;'n'
   586  00FFF4  61                 	db	97	;'a'
   587  00FFF5  6E                 	db	110	;'n'
   588  00FFF6  00                 	db	0
   589  00FFF7                     STR_17:
   590                           
   591                           ; BSR set to: 57
   592  00FFF7  6C                 	db	108	;'l'
   593  00FFF8  66                 	db	102	;'f'
   594  00FFF9  00                 	db	0
   595  00FFFA  00                 	db	0	; dummy byte at the end
   596  0000                     
   597                           ; #config settings
   598                           
   599                           	psect	cinit
   600  00CC82                     __pcinit:
   601                           	callstack 0
   602  00CC82                     start_initialization:
   603                           	callstack 0
   604  00CC82                     __initialization:
   605                           	callstack 0
   606                           
   607                           ; Clear objects allocated to BANK1 (80 bytes)
   608  00CC82  EE00  F100         	lfsr	0,__pbssBANK1
   609  00CC86  0E50               	movlw	80
   610  00CC88                     clear_0:
   611  00CC88  6AEE               	clrf	postinc0,c
   612  00CC8A  06E8               	decf	wreg,f,c
   613  00CC8C  E1FD               	bnz	clear_0
   614                           
   615                           ; Clear objects allocated to BANK0 (17 bytes)
   616  00CC8E  EE00  F0C2         	lfsr	0,__pbssBANK0
   617  00CC92  0E11               	movlw	17
   618  00CC94                     clear_1:
   619  00CC94  6AEE               	clrf	postinc0,c
   620  00CC96  06E8               	decf	wreg,f,c
   621  00CC98  E1FD               	bnz	clear_1
   622  00CC9A                     end_of_initialization:
   623                           	callstack 0
   624  00CC9A                     __end_of__initialization:
   625                           	callstack 0
   626  00CC9A  0100               	movlb	0
   627  00CC9C  EF36  F06C         	goto	_main	;jump to C main() function
   628                           
   629                           	psect	bssBANK0
   630  0000C2                     __pbssBANK0:
   631                           	callstack 0
   632  0000C2                     floorf@F527:
   633                           	callstack 0
   634  0000C2                     	ds	4
   635  0000C6                     ___fpclassifyf@F465:
   636                           	callstack 0
   637  0000C6                     	ds	4
   638  0000CA                     _nout:
   639                           	callstack 0
   640  0000CA                     	ds	2
   641  0000CC                     _width:
   642                           	callstack 0
   643  0000CC                     	ds	2
   644  0000CE                     _prec:
   645                           	callstack 0
   646  0000CE                     	ds	2
   647  0000D0                     _flags:
   648                           	callstack 0
   649  0000D0                     	ds	2
   650  0000D2                     _uart2RxLastError:
   651                           	callstack 0
   652  0000D2                     	ds	1
   653                           
   654                           	psect	bssBANK1
   655  000100                     __pbssBANK1:
   656                           	callstack 0
   657  000100                     _dbuf:
   658                           	callstack 0
   659  000100                     	ds	80
   660                           
   661                           	psect	cstackBANK0
   662  000060                     __pcstackBANK0:
   663                           	callstack 0
   664  000060                     _efgtoa$910:
   665                           	callstack 0
   666                           
   667                           ; 2 bytes @ 0x0
   668  000060                     	ds	2
   669  000062                     _efgtoa$911:
   670                           	callstack 0
   671                           
   672                           ; 2 bytes @ 0x2
   673  000062                     	ds	2
   674  000064                     _efgtoa$916:
   675                           	callstack 0
   676                           
   677                           ; 2 bytes @ 0x4
   678  000064                     	ds	2
   679  000066                     _efgtoa$920:
   680                           	callstack 0
   681                           
   682                           ; 2 bytes @ 0x6
   683  000066                     	ds	2
   684  000068                     _efgtoa$921:
   685                           	callstack 0
   686                           
   687                           ; 2 bytes @ 0x8
   688  000068                     	ds	2
   689  00006A                     _efgtoa$922:
   690                           	callstack 0
   691                           
   692                           ; 2 bytes @ 0xA
   693  00006A                     	ds	2
   694  00006C                     efgtoa@t:
   695                           	callstack 0
   696                           
   697                           ; 2 bytes @ 0xC
   698  00006C                     	ds	2
   699  00006E                     efgtoa@pp:
   700                           	callstack 0
   701                           
   702                           ; 2 bytes @ 0xE
   703  00006E                     	ds	2
   704  000070                     efgtoa@ne:
   705                           	callstack 0
   706                           
   707                           ; 2 bytes @ 0x10
   708  000070                     	ds	2
   709  000072                     efgtoa@m:
   710                           	callstack 0
   711                           
   712                           ; 2 bytes @ 0x12
   713  000072                     	ds	2
   714  000074                     efgtoa@ou:
   715                           	callstack 0
   716                           
   717                           ; 4 bytes @ 0x14
   718  000074                     	ds	4
   719  000078                     efgtoa@d:
   720                           	callstack 0
   721                           
   722                           ; 2 bytes @ 0x18
   723  000078                     	ds	2
   724  00007A                     efgtoa@sign:
   725                           	callstack 0
   726                           
   727                           ; 2 bytes @ 0x1A
   728  00007A                     	ds	2
   729  00007C                     efgtoa@p:
   730                           	callstack 0
   731                           
   732                           ; 2 bytes @ 0x1C
   733  00007C                     	ds	2
   734  00007E                     efgtoa@w:
   735                           	callstack 0
   736                           
   737                           ; 2 bytes @ 0x1E
   738  00007E                     	ds	2
   739  000080                     efgtoa@nmode:
   740                           	callstack 0
   741                           
   742                           ; 1 bytes @ 0x20
   743  000080                     	ds	1
   744  000081                     efgtoa@mode:
   745                           	callstack 0
   746                           
   747                           ; 1 bytes @ 0x21
   748  000081                     	ds	1
   749  000082                     efgtoa@h:
   750                           	callstack 0
   751                           
   752                           ; 4 bytes @ 0x22
   753  000082                     	ds	4
   754  000086                     efgtoa@l:
   755                           	callstack 0
   756                           
   757                           ; 4 bytes @ 0x26
   758  000086                     	ds	4
   759  00008A                     efgtoa@i:
   760                           	callstack 0
   761                           
   762                           ; 2 bytes @ 0x2A
   763  00008A                     	ds	2
   764  00008C                     efgtoa@g:
   765                           	callstack 0
   766                           
   767                           ; 4 bytes @ 0x2C
   768  00008C                     	ds	4
   769  000090                     efgtoa@e:
   770                           	callstack 0
   771                           
   772                           ; 2 bytes @ 0x30
   773  000090                     	ds	2
   774  000092                     efgtoa@n:
   775                           	callstack 0
   776                           
   777                           ; 2 bytes @ 0x32
   778  000092                     	ds	2
   779  000094                     efgtoa@u:
   780                           	callstack 0
   781                           
   782                           ; 4 bytes @ 0x34
   783  000094                     	ds	4
   784  000098                     ?_printf:
   785                           	callstack 0
   786  000098                     printf@fmt:
   787                           	callstack 0
   788                           
   789                           ; 2 bytes @ 0x38
   790  000098                     	ds	14
   791  0000A6                     main@a:
   792                           	callstack 0
   793                           
   794                           ; 4 bytes @ 0x46
   795  0000A6                     	ds	4
   796  0000AA                     main@b:
   797                           	callstack 0
   798                           
   799                           ; 4 bytes @ 0x4A
   800  0000AA                     	ds	4
   801  0000AE                     main@c:
   802                           	callstack 0
   803                           
   804                           ; 4 bytes @ 0x4E
   805  0000AE                     	ds	4
   806  0000B2                     main@d:
   807                           	callstack 0
   808                           
   809                           ; 4 bytes @ 0x52
   810  0000B2                     	ds	4
   811  0000B6                     main@e:
   812                           	callstack 0
   813                           
   814                           ; 4 bytes @ 0x56
   815  0000B6                     	ds	4
   816  0000BA                     main@f:
   817                           	callstack 0
   818                           
   819                           ; 4 bytes @ 0x5A
   820  0000BA                     	ds	4
   821  0000BE                     main@x:
   822                           	callstack 0
   823                           
   824                           ; 4 bytes @ 0x5E
   825  0000BE                     	ds	4
   826                           
   827                           	psect	cstackCOMRAM
   828  000001                     __pcstackCOMRAM:
   829                           	callstack 0
   830  000001                     ?_strlen:
   831                           	callstack 0
   832  000001                     ?___fpclassifyf:
   833                           	callstack 0
   834  000001                     ?_isupper:
   835                           	callstack 0
   836  000001                     ?_isdigit:
   837                           	callstack 0
   838  000001                     ?_strncmp:
   839                           	callstack 0
   840  000001                     ?_isspace:
   841                           	callstack 0
   842  000001                     ?___wmul:
   843                           	callstack 0
   844  000001                     ?___awdiv:
   845                           	callstack 0
   846  000001                     ?___awmod:
   847                           	callstack 0
   848  000001                     ?___fladd:
   849                           	callstack 0
   850  000001                     ?___fldiv:
   851                           	callstack 0
   852  000001                     ?___flmul:
   853                           	callstack 0
   854  000001                     ?___flneg:
   855                           	callstack 0
   856  000001                     ?___fltol:
   857                           	callstack 0
   858  000001                     UART2_Write@txData:
   859                           	callstack 0
   860  000001                     UART2_SetFramingErrorHandler@interruptHandler:
   861                           	callstack 0
   862  000001                     UART2_SetOverrunErrorHandler@interruptHandler:
   863                           	callstack 0
   864  000001                     UART2_SetErrorHandler@interruptHandler:
   865                           	callstack 0
   866  000001                     ___wmul@multiplier:
   867                           	callstack 0
   868  000001                     ___awdiv@dividend:
   869                           	callstack 0
   870  000001                     ___awmod@dividend:
   871                           	callstack 0
   872  000001                     isdigit@c:
   873                           	callstack 0
   874  000001                     isspace@c:
   875                           	callstack 0
   876  000001                     isupper@c:
   877                           	callstack 0
   878  000001                     strcpy@dest:
   879                           	callstack 0
   880  000001                     strlen@s:
   881                           	callstack 0
   882  000001                     strncmp@_l:
   883                           	callstack 0
   884  000001                     ___fleq@ff1:
   885                           	callstack 0
   886  000001                     ___flneg@f1:
   887                           	callstack 0
   888  000001                     ___fltol@f1:
   889                           	callstack 0
   890  000001                     ___fladd@b:
   891                           	callstack 0
   892  000001                     ___fldiv@b:
   893                           	callstack 0
   894  000001                     ___flmul@b:
   895                           	callstack 0
   896  000001                     ___fpclassifyf@x:
   897                           	callstack 0
   898                           
   899                           ; 4 bytes @ 0x0
   900  000001                     	ds	1
   901  000002                     putch@txData:
   902                           	callstack 0
   903                           
   904                           ; 1 bytes @ 0x1
   905  000002                     	ds	1
   906  000003                     ??_isupper:
   907  000003                     ??_isdigit:
   908  000003                     ??_isspace:
   909  000003                     ___wmul@multiplicand:
   910                           	callstack 0
   911  000003                     ___awdiv@divisor:
   912                           	callstack 0
   913  000003                     ___awmod@divisor:
   914                           	callstack 0
   915  000003                     fputc@c:
   916                           	callstack 0
   917  000003                     strcpy@src:
   918                           	callstack 0
   919  000003                     strlen@a:
   920                           	callstack 0
   921  000003                     strncmp@_r:
   922                           	callstack 0
   923                           
   924                           ; 2 bytes @ 0x2
   925  000003                     	ds	2
   926  000005                     ??___fpclassifyf:
   927  000005                     ??_strcpy:
   928  000005                     ??___fltol:
   929  000005                     ___awdiv@counter:
   930                           	callstack 0
   931  000005                     ___awmod@counter:
   932                           	callstack 0
   933  000005                     ___wmul@product:
   934                           	callstack 0
   935  000005                     fputc@fp:
   936                           	callstack 0
   937  000005                     strncmp@n:
   938                           	callstack 0
   939  000005                     ___fleq@ff2:
   940                           	callstack 0
   941  000005                     ___fladd@a:
   942                           	callstack 0
   943  000005                     ___fldiv@a:
   944                           	callstack 0
   945  000005                     ___flmul@a:
   946                           	callstack 0
   947                           
   948                           ; 4 bytes @ 0x4
   949  000005                     	ds	1
   950  000006                     ___awdiv@sign:
   951                           	callstack 0
   952  000006                     ___awmod@sign:
   953                           	callstack 0
   954                           
   955                           ; 1 bytes @ 0x5
   956  000006                     	ds	1
   957  000007                     ??_fputc:
   958  000007                     ??_strncmp:
   959  000007                     ?_tolower:
   960                           	callstack 0
   961  000007                     _isspace$1006:
   962                           	callstack 0
   963  000007                     ___awdiv@quotient:
   964                           	callstack 0
   965  000007                     strcpy@s:
   966                           	callstack 0
   967  000007                     tolower@c:
   968                           	callstack 0
   969                           
   970                           ; 2 bytes @ 0x6
   971  000007                     	ds	1
   972  000008                     ?_atoi:
   973                           	callstack 0
   974  000008                     atoi@s:
   975                           	callstack 0
   976  000008                     strncmp@l:
   977                           	callstack 0
   978                           
   979                           ; 2 bytes @ 0x7
   980  000008                     	ds	1
   981  000009                     ??___fladd:
   982  000009                     ??___fldiv:
   983  000009                     ??___flmul:
   984  000009                     ??_tolower:
   985  000009                     ??___fleq:
   986  000009                     ___fltol@sign1:
   987                           	callstack 0
   988  000009                     ___fpclassifyf@e:
   989                           	callstack 0
   990  000009                     strcpy@d:
   991                           	callstack 0
   992                           
   993                           ; 2 bytes @ 0x8
   994  000009                     	ds	1
   995  00000A                     ??_atoi:
   996  00000A                     ___fltol@exp1:
   997                           	callstack 0
   998  00000A                     strncmp@r:
   999                           	callstack 0
  1000                           
  1001                           ; 2 bytes @ 0x9
  1002  00000A                     	ds	1
  1003  00000B                     ___fpclassifyf@u:
  1004                           	callstack 0
  1005                           
  1006                           ; 4 bytes @ 0xA
  1007  00000B                     	ds	1
  1008  00000C                     fputs@s:
  1009                           	callstack 0
  1010                           
  1011                           ; 2 bytes @ 0xB
  1012  00000C                     	ds	1
  1013  00000D                     ___fladd@signs:
  1014                           	callstack 0
  1015  00000D                     ___flmul@sign:
  1016                           	callstack 0
  1017  00000D                     _tolower$1064:
  1018                           	callstack 0
  1019  00000D                     ___fldiv@rem:
  1020                           	callstack 0
  1021                           
  1022                           ; 4 bytes @ 0xC
  1023  00000D                     	ds	1
  1024  00000E                     ___fladd@aexp:
  1025                           	callstack 0
  1026  00000E                     atoi@neg:
  1027                           	callstack 0
  1028  00000E                     fputs@fp:
  1029                           	callstack 0
  1030  00000E                     ___flmul@grs:
  1031                           	callstack 0
  1032                           
  1033                           ; 4 bytes @ 0xD
  1034  00000E                     	ds	1
  1035  00000F                     ___fladd@bexp:
  1036                           	callstack 0
  1037                           
  1038                           ; 1 bytes @ 0xE
  1039  00000F                     	ds	1
  1040  000010                     ___fladd@grs:
  1041                           	callstack 0
  1042  000010                     fputs@c:
  1043                           	callstack 0
  1044  000010                     _atoi$975:
  1045                           	callstack 0
  1046                           
  1047                           ; 2 bytes @ 0xF
  1048  000010                     	ds	1
  1049  000011                     ___fldiv@sign:
  1050                           	callstack 0
  1051  000011                     fputs@i:
  1052                           	callstack 0
  1053                           
  1054                           ; 2 bytes @ 0x10
  1055  000011                     	ds	1
  1056  000012                     ___flmul@aexp:
  1057                           	callstack 0
  1058  000012                     ___fldiv@new_exp:
  1059                           	callstack 0
  1060  000012                     _atoi$977:
  1061                           	callstack 0
  1062                           
  1063                           ; 2 bytes @ 0x11
  1064  000012                     	ds	1
  1065  000013                     ?_pad:
  1066                           	callstack 0
  1067  000013                     ___flmul@bexp:
  1068                           	callstack 0
  1069  000013                     pad@fp:
  1070                           	callstack 0
  1071                           
  1072                           ; 2 bytes @ 0x12
  1073  000013                     	ds	1
  1074  000014                     _atoi$976:
  1075                           	callstack 0
  1076  000014                     ___fldiv@grs:
  1077                           	callstack 0
  1078  000014                     ___flmul@prod:
  1079                           	callstack 0
  1080                           
  1081                           ; 4 bytes @ 0x13
  1082  000014                     	ds	1
  1083  000015                     pad@buf:
  1084                           	callstack 0
  1085  000015                     atoi@n:
  1086                           	callstack 0
  1087                           
  1088                           ; 2 bytes @ 0x14
  1089  000015                     	ds	2
  1090  000017                     pad@p:
  1091                           	callstack 0
  1092                           
  1093                           ; 2 bytes @ 0x16
  1094  000017                     	ds	1
  1095  000018                     ___fldiv@bexp:
  1096                           	callstack 0
  1097  000018                     ___flmul@temp:
  1098                           	callstack 0
  1099                           
  1100                           ; 2 bytes @ 0x17
  1101  000018                     	ds	1
  1102  000019                     ??_pad:
  1103  000019                     ___fldiv@aexp:
  1104                           	callstack 0
  1105                           
  1106                           ; 1 bytes @ 0x18
  1107  000019                     	ds	1
  1108  00001A                     ?___flsub:
  1109                           	callstack 0
  1110  00001A                     ?_floorf:
  1111                           	callstack 0
  1112  00001A                     pad@i:
  1113                           	callstack 0
  1114  00001A                     ___flge@ff1:
  1115                           	callstack 0
  1116  00001A                     ___flsub@b:
  1117                           	callstack 0
  1118  00001A                     floorf@x:
  1119                           	callstack 0
  1120                           
  1121                           ; 4 bytes @ 0x19
  1122  00001A                     	ds	2
  1123  00001C                     pad@w:
  1124                           	callstack 0
  1125                           
  1126                           ; 2 bytes @ 0x1B
  1127  00001C                     	ds	2
  1128  00001E                     ??_floorf:
  1129  00001E                     ___flge@ff2:
  1130                           	callstack 0
  1131  00001E                     ___flsub@a:
  1132                           	callstack 0
  1133                           
  1134                           ; 4 bytes @ 0x1D
  1135  00001E                     	ds	4
  1136  000022                     ??___flge:
  1137                           
  1138                           ; 1 bytes @ 0x21
  1139  000022                     	ds	2
  1140  000024                     floorf@m:
  1141                           	callstack 0
  1142                           
  1143                           ; 4 bytes @ 0x23
  1144  000024                     	ds	4
  1145  000028                     floorf@e:
  1146                           	callstack 0
  1147                           
  1148                           ; 2 bytes @ 0x27
  1149  000028                     	ds	2
  1150  00002A                     floorf@u:
  1151                           	callstack 0
  1152                           
  1153                           ; 4 bytes @ 0x29
  1154  00002A                     	ds	4
  1155  00002E                     ?_efgtoa:
  1156                           	callstack 0
  1157  00002E                     efgtoa@fp:
  1158                           	callstack 0
  1159                           
  1160                           ; 2 bytes @ 0x2D
  1161  00002E                     	ds	2
  1162  000030                     efgtoa@f:
  1163                           	callstack 0
  1164                           
  1165                           ; 4 bytes @ 0x2F
  1166  000030                     	ds	4
  1167  000034                     efgtoa@c:
  1168                           	callstack 0
  1169                           
  1170                           ; 1 bytes @ 0x33
  1171  000034                     	ds	1
  1172  000035                     ??_efgtoa:
  1173                           
  1174                           ; 1 bytes @ 0x34
  1175  000035                     	ds	5
  1176  00003A                     ?_vfpfcnvrt:
  1177                           	callstack 0
  1178  00003A                     vfpfcnvrt@fp:
  1179                           	callstack 0
  1180                           
  1181                           ; 2 bytes @ 0x39
  1182  00003A                     	ds	2
  1183  00003C                     vfpfcnvrt@fmt:
  1184                           	callstack 0
  1185                           
  1186                           ; 2 bytes @ 0x3B
  1187  00003C                     	ds	2
  1188  00003E                     vfpfcnvrt@ap:
  1189                           	callstack 0
  1190                           
  1191                           ; 2 bytes @ 0x3D
  1192  00003E                     	ds	2
  1193  000040                     ??_vfpfcnvrt:
  1194                           
  1195                           ; 1 bytes @ 0x3F
  1196  000040                     	ds	4
  1197  000044                     vfpfcnvrt@done:
  1198                           	callstack 0
  1199                           
  1200                           ; 2 bytes @ 0x43
  1201  000044                     	ds	2
  1202  000046                     _vfpfcnvrt$936:
  1203                           	callstack 0
  1204                           
  1205                           ; 2 bytes @ 0x45
  1206  000046                     	ds	2
  1207  000048                     _vfpfcnvrt$937:
  1208                           	callstack 0
  1209                           
  1210                           ; 2 bytes @ 0x47
  1211  000048                     	ds	2
  1212  00004A                     _vfpfcnvrt$941:
  1213                           	callstack 0
  1214                           
  1215                           ; 2 bytes @ 0x49
  1216  00004A                     	ds	2
  1217  00004C                     vfpfcnvrt@f:
  1218                           	callstack 0
  1219                           
  1220                           ; 4 bytes @ 0x4B
  1221  00004C                     	ds	4
  1222  000050                     vfpfcnvrt@ct:
  1223                           	callstack 0
  1224                           
  1225                           ; 3 bytes @ 0x4F
  1226  000050                     	ds	3
  1227  000053                     vfpfcnvrt@c:
  1228                           	callstack 0
  1229                           
  1230                           ; 1 bytes @ 0x52
  1231  000053                     	ds	1
  1232  000054                     ?_vfprintf:
  1233                           	callstack 0
  1234  000054                     vfprintf@fp:
  1235                           	callstack 0
  1236                           
  1237                           ; 2 bytes @ 0x53
  1238  000054                     	ds	2
  1239  000056                     vfprintf@fmt:
  1240                           	callstack 0
  1241                           
  1242                           ; 2 bytes @ 0x55
  1243  000056                     	ds	2
  1244  000058                     vfprintf@ap:
  1245                           	callstack 0
  1246                           
  1247                           ; 2 bytes @ 0x57
  1248  000058                     	ds	2
  1249  00005A                     vfprintf@cfmt:
  1250                           	callstack 0
  1251                           
  1252                           ; 2 bytes @ 0x59
  1253  00005A                     	ds	2
  1254  00005C                     
  1255                           ; 1 bytes @ 0x5B
  1256  00005C                     	ds	2
  1257  00005E                     printf@ap:
  1258                           	callstack 0
  1259                           
  1260                           ; 2 bytes @ 0x5D
  1261  00005E                     	ds	2
  1262  000060                     
  1263                           ; 1 bytes @ 0x5F
  1264 ;;
  1265 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1266 ;;
  1267 ;; *************** function _main *****************
  1268 ;; Defined at:
  1269 ;;		line 10 in file "main.c"
  1270 ;; Parameters:    Size  Location     Type
  1271 ;;		None
  1272 ;; Auto vars:     Size  Location     Type
  1273 ;;  x               4   94[BANK0 ] float 
  1274 ;;  f               4   90[BANK0 ] float 
  1275 ;;  e               4   86[BANK0 ] float 
  1276 ;;  d               4   82[BANK0 ] float 
  1277 ;;  c               4   78[BANK0 ] float 
  1278 ;;  b               4   74[BANK0 ] float 
  1279 ;;  a               4   70[BANK0 ] float 
  1280 ;; Return value:  Size  Location     Type
  1281 ;;                  1    wreg      void 
  1282 ;; Registers used:
  1283 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1284 ;; Tracked objects:
  1285 ;;		On entry : 0/0
  1286 ;;		On exit  : 0/0
  1287 ;;		Unchanged: 0/0
  1288 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1289 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1290 ;;      Locals:         0      28       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1291 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1292 ;;      Totals:         0      28       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1293 ;;Total ram usage:       28 bytes
  1294 ;; Hardware stack levels required when called:    9
  1295 ;; This function calls:
  1296 ;;		_SYSTEM_Initialize
  1297 ;;		_printf
  1298 ;; This function is called by:
  1299 ;;		Startup code after reset
  1300 ;; This function uses a non-reentrant model
  1301 ;;
  1302                           
  1303                           	psect	text0
  1304  00D86C                     __ptext0:
  1305                           	callstack 0
  1306  00D86C                     _main:
  1307                           	callstack 22
  1308  00D86C                     
  1309                           ;main.c: 13:     SYSTEM_Initialize();
  1310  00D86C  EC1F  F066         	call	_SYSTEM_Initialize	;wreg free
  1311  00D870                     
  1312                           ;main.c: 15:     float x= 112/3.0;
  1313  00D870  0E55               	movlw	85
  1314  00D872  0100               	movlb	0	; () banked
  1315  00D874  6FBE               	movwf	main@x& (0+255),b
  1316  00D876  0E55               	movlw	85
  1317  00D878  6FBF               	movwf	(main@x+1)& (0+255),b
  1318  00D87A  0E15               	movlw	21
  1319  00D87C  6FC0               	movwf	(main@x+2)& (0+255),b
  1320  00D87E  0E42               	movlw	66
  1321  00D880  6FC1               	movwf	(main@x+3)& (0+255),b
  1322  00D882                     
  1323                           ; BSR set to: 0
  1324                           ;main.c: 17:     printf("\n\r The answer with 2.3 is : %2.3f ", x);
  1325  00D882  0E63               	movlw	low STR_1
  1326  00D884  6F98               	movwf	printf@fmt& (0+255),b
  1327  00D886  0EFF               	movlw	high STR_1
  1328  00D888  6F99               	movwf	(printf@fmt+1)& (0+255),b
  1329  00D88A  C0BE  F09A         	movff	main@x,?_printf+2
  1330  00D88E  C0BF  F09B         	movff	main@x+1,?_printf+3
  1331  00D892  C0C0  F09C         	movff	main@x+2,?_printf+4
  1332  00D896  C0C1  F09D         	movff	main@x+3,?_printf+5
  1333  00D89A  EC62  F066         	call	_printf	;wreg free
  1334  00D89E                     
  1335                           ;main.c: 18:     printf("\n\r The answer with 12.3 is : %12.3f ", x);
  1336  00D89E  0E3E               	movlw	low STR_2
  1337  00D8A0  0100               	movlb	0	; () banked
  1338  00D8A2  6F98               	movwf	printf@fmt& (0+255),b
  1339  00D8A4  0EFF               	movlw	high STR_2
  1340  00D8A6  6F99               	movwf	(printf@fmt+1)& (0+255),b
  1341  00D8A8  C0BE  F09A         	movff	main@x,?_printf+2
  1342  00D8AC  C0BF  F09B         	movff	main@x+1,?_printf+3
  1343  00D8B0  C0C0  F09C         	movff	main@x+2,?_printf+4
  1344  00D8B4  C0C1  F09D         	movff	main@x+3,?_printf+5
  1345  00D8B8  EC62  F066         	call	_printf	;wreg free
  1346  00D8BC                     
  1347                           ;main.c: 19:     printf("\n\r The answer with 012.3 is : %012.3f ", x);
  1348  00D8BC  0E17               	movlw	low STR_3
  1349  00D8BE  0100               	movlb	0	; () banked
  1350  00D8C0  6F98               	movwf	printf@fmt& (0+255),b
  1351  00D8C2  0EFF               	movlw	high STR_3
  1352  00D8C4  6F99               	movwf	(printf@fmt+1)& (0+255),b
  1353  00D8C6  C0BE  F09A         	movff	main@x,?_printf+2
  1354  00D8CA  C0BF  F09B         	movff	main@x+1,?_printf+3
  1355  00D8CE  C0C0  F09C         	movff	main@x+2,?_printf+4
  1356  00D8D2  C0C1  F09D         	movff	main@x+3,?_printf+5
  1357  00D8D6  EC62  F066         	call	_printf	;wreg free
  1358  00D8DA                     
  1359                           ;main.c: 22:     printf("\n\r 0123456789012345678901234567890123456789012345678901234567
      +                          89 \n\r");
  1360  00D8DA  0ED4               	movlw	low STR_4
  1361  00D8DC  0100               	movlb	0	; () banked
  1362  00D8DE  6F98               	movwf	printf@fmt& (0+255),b
  1363  00D8E0  0EFE               	movlw	high STR_4
  1364  00D8E2  6F99               	movwf	(printf@fmt+1)& (0+255),b
  1365  00D8E4  EC62  F066         	call	_printf	;wreg free
  1366  00D8E8                     
  1367                           ;main.c: 23:     printf("\n\r Hi \t my \t name \t is \t is \t\t\t\t mike. \n\r What \t i
      +                          s \n\r\n\r\n\r \t\t yours \t \n\r ?");
  1368  00D8E8  0E89               	movlw	low STR_5
  1369  00D8EA  0100               	movlb	0	; () banked
  1370  00D8EC  6F98               	movwf	printf@fmt& (0+255),b
  1371  00D8EE  0EFE               	movlw	high STR_5
  1372  00D8F0  6F99               	movwf	(printf@fmt+1)& (0+255),b
  1373  00D8F2  EC62  F066         	call	_printf	;wreg free
  1374  00D8F6                     
  1375                           ;main.c: 29:     float a=117.0/9, b=15.78/1.73, c=127.8/2.89, d=278.3/14.1, e=1571.0/4.1
      +                          7, f=22.0/7;
  1376  00D8F6  0E00               	movlw	0
  1377  00D8F8  0100               	movlb	0	; () banked
  1378  00D8FA  6FA6               	movwf	main@a& (0+255),b
  1379  00D8FC  0E00               	movlw	0
  1380  00D8FE  6FA7               	movwf	(main@a+1)& (0+255),b
  1381  00D900  0E50               	movlw	80
  1382  00D902  6FA8               	movwf	(main@a+2)& (0+255),b
  1383  00D904  0E41               	movlw	65
  1384  00D906  6FA9               	movwf	(main@a+3)& (0+255),b
  1385  00D908                     
  1386                           ; BSR set to: 0
  1387  00D908  0E34               	movlw	52
  1388  00D90A  6FAA               	movwf	main@b& (0+255),b
  1389  00D90C  0EF1               	movlw	241
  1390  00D90E  6FAB               	movwf	(main@b+1)& (0+255),b
  1391  00D910  0E11               	movlw	17
  1392  00D912  6FAC               	movwf	(main@b+2)& (0+255),b
  1393  00D914  0E41               	movlw	65
  1394  00D916  6FAD               	movwf	(main@b+3)& (0+255),b
  1395  00D918                     
  1396                           ; BSR set to: 0
  1397  00D918  0EC5               	movlw	197
  1398  00D91A  6FAE               	movwf	main@c& (0+255),b
  1399  00D91C  0EE2               	movlw	226
  1400  00D91E  6FAF               	movwf	(main@c+1)& (0+255),b
  1401  00D920  0E30               	movlw	48
  1402  00D922  6FB0               	movwf	(main@c+2)& (0+255),b
  1403  00D924  0E42               	movlw	66
  1404  00D926  6FB1               	movwf	(main@c+3)& (0+255),b
  1405  00D928                     
  1406                           ; BSR set to: 0
  1407  00D928  0E95               	movlw	149
  1408  00D92A  6FB2               	movwf	main@d& (0+255),b
  1409  00D92C  0EE6               	movlw	230
  1410  00D92E  6FB3               	movwf	(main@d+1)& (0+255),b
  1411  00D930  0E9D               	movlw	157
  1412  00D932  6FB4               	movwf	(main@d+2)& (0+255),b
  1413  00D934  0E41               	movlw	65
  1414  00D936  6FB5               	movwf	(main@d+3)& (0+255),b
  1415  00D938                     
  1416                           ; BSR set to: 0
  1417  00D938  0E8B               	movlw	139
  1418  00D93A  6FB6               	movwf	main@e& (0+255),b
  1419  00D93C  0E5E               	movlw	94
  1420  00D93E  6FB7               	movwf	(main@e+1)& (0+255),b
  1421  00D940  0EBC               	movlw	188
  1422  00D942  6FB8               	movwf	(main@e+2)& (0+255),b
  1423  00D944  0E43               	movlw	67
  1424  00D946  6FB9               	movwf	(main@e+3)& (0+255),b
  1425  00D948                     
  1426                           ; BSR set to: 0
  1427  00D948  0E92               	movlw	146
  1428  00D94A  6FBA               	movwf	main@f& (0+255),b
  1429  00D94C  0E24               	movlw	36
  1430  00D94E  6FBB               	movwf	(main@f+1)& (0+255),b
  1431  00D950  0E49               	movlw	73
  1432  00D952  6FBC               	movwf	(main@f+2)& (0+255),b
  1433  00D954  0E40               	movlw	64
  1434  00D956  6FBD               	movwf	(main@f+3)& (0+255),b
  1435  00D958                     
  1436                           ; BSR set to: 0
  1437                           ;main.c: 32:     printf("\n\r      \t X     \t\t Y     \t\t Z");
  1438  00D958  0EC9               	movlw	low STR_6
  1439  00D95A  6F98               	movwf	printf@fmt& (0+255),b
  1440  00D95C  0EFF               	movlw	high STR_6
  1441  00D95E  6F99               	movwf	(printf@fmt+1)& (0+255),b
  1442  00D960  EC62  F066         	call	_printf	;wreg free
  1443  00D964                     
  1444                           ;main.c: 33:     printf("\n\r\n\r 1 \t %0.2f  \t %0.2f  \t\t %0.2f",a,b,c);
  1445  00D964  0E86               	movlw	low STR_7
  1446  00D966  0100               	movlb	0	; () banked
  1447  00D968  6F98               	movwf	printf@fmt& (0+255),b
  1448  00D96A  0EFF               	movlw	high STR_7
  1449  00D96C  6F99               	movwf	(printf@fmt+1)& (0+255),b
  1450  00D96E  C0A6  F09A         	movff	main@a,?_printf+2
  1451  00D972  C0A7  F09B         	movff	main@a+1,?_printf+3
  1452  00D976  C0A8  F09C         	movff	main@a+2,?_printf+4
  1453  00D97A  C0A9  F09D         	movff	main@a+3,?_printf+5
  1454  00D97E  C0AA  F09E         	movff	main@b,?_printf+6
  1455  00D982  C0AB  F09F         	movff	main@b+1,?_printf+7
  1456  00D986  C0AC  F0A0         	movff	main@b+2,?_printf+8
  1457  00D98A  C0AD  F0A1         	movff	main@b+3,?_printf+9
  1458  00D98E  C0AE  F0A2         	movff	main@c,?_printf+10
  1459  00D992  C0AF  F0A3         	movff	main@c+1,?_printf+11
  1460  00D996  C0B0  F0A4         	movff	main@c+2,?_printf+12
  1461  00D99A  C0B1  F0A5         	movff	main@c+3,?_printf+13
  1462  00D99E  EC62  F066         	call	_printf	;wreg free
  1463  00D9A2                     
  1464                           ;main.c: 34:     printf("\n\r\n\r 2 \t %0.2f  \t %0.2f  \t %0.2f",d,e,f);
  1465  00D9A2  0EA8               	movlw	low STR_8
  1466  00D9A4  0100               	movlb	0	; () banked
  1467  00D9A6  6F98               	movwf	printf@fmt& (0+255),b
  1468  00D9A8  0EFF               	movlw	high STR_8
  1469  00D9AA  6F99               	movwf	(printf@fmt+1)& (0+255),b
  1470  00D9AC  C0B2  F09A         	movff	main@d,?_printf+2
  1471  00D9B0  C0B3  F09B         	movff	main@d+1,?_printf+3
  1472  00D9B4  C0B4  F09C         	movff	main@d+2,?_printf+4
  1473  00D9B8  C0B5  F09D         	movff	main@d+3,?_printf+5
  1474  00D9BC  C0B6  F09E         	movff	main@e,?_printf+6
  1475  00D9C0  C0B7  F09F         	movff	main@e+1,?_printf+7
  1476  00D9C4  C0B8  F0A0         	movff	main@e+2,?_printf+8
  1477  00D9C8  C0B9  F0A1         	movff	main@e+3,?_printf+9
  1478  00D9CC  C0BA  F0A2         	movff	main@f,?_printf+10
  1479  00D9D0  C0BB  F0A3         	movff	main@f+1,?_printf+11
  1480  00D9D4  C0BC  F0A4         	movff	main@f+2,?_printf+12
  1481  00D9D8  C0BD  F0A5         	movff	main@f+3,?_printf+13
  1482  00D9DC  EC62  F066         	call	_printf	;wreg free
  1483  00D9E0                     l254:
  1484  00D9E0  EFF0  F06C         	goto	l254
  1485  00D9E4  EFFE  F07F         	goto	start
  1486  00D9E8                     __end_of_main:
  1487                           	callstack 0
  1488                           
  1489 ;; *************** function _printf *****************
  1490 ;; Defined at:
  1491 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\printf.c"
  1492 ;; Parameters:    Size  Location     Type
  1493 ;;  fmt             2   56[BANK0 ] PTR const unsigned char 
  1494 ;;		 -> STR_8(33), STR_7(34), STR_6(30), STR_5(75), 
  1495 ;;		 -> STR_4(67), STR_3(39), STR_2(37), STR_1(35), 
  1496 ;; Auto vars:     Size  Location     Type
  1497 ;;  ap              2   93[COMRAM] PTR void [1]
  1498 ;;		 -> ?_printf(2), 
  1499 ;;  ret             2    0        int 
  1500 ;; Return value:  Size  Location     Type
  1501 ;;                  2   56[BANK0 ] int 
  1502 ;; Registers used:
  1503 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1504 ;; Tracked objects:
  1505 ;;		On entry : 0/0
  1506 ;;		On exit  : 0/0
  1507 ;;		Unchanged: 0/0
  1508 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1509 ;;      Params:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1510 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1511 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1512 ;;      Totals:         4      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1513 ;;Total ram usage:       18 bytes
  1514 ;; Hardware stack levels used:    1
  1515 ;; Hardware stack levels required when called:    8
  1516 ;; This function calls:
  1517 ;;		_vfprintf
  1518 ;; This function is called by:
  1519 ;;		_main
  1520 ;; This function uses a non-reentrant model
  1521 ;;
  1522                           
  1523                           	psect	text1
  1524  00CCC4                     __ptext1:
  1525                           	callstack 0
  1526  00CCC4                     _printf:
  1527                           	callstack 22
  1528  00CCC4  0E9A               	movlw	low (?_printf+2)
  1529  00CCC6  6E5E               	movwf	printf@ap^0,c
  1530  00CCC8  0E00               	movlw	high (?_printf+2)
  1531  00CCCA  6E5F               	movwf	(printf@ap+1)^0,c
  1532  00CCCC  0E00               	movlw	0
  1533  00CCCE  6E54               	movwf	vfprintf@fp^0,c
  1534  00CCD0  0E00               	movlw	0
  1535  00CCD2  6E55               	movwf	(vfprintf@fp+1)^0,c
  1536  00CCD4  C098  F056         	movff	printf@fmt,vfprintf@fmt
  1537  00CCD8  C099  F057         	movff	printf@fmt+1,vfprintf@fmt+1
  1538  00CCDC  0E5E               	movlw	low printf@ap
  1539  00CCDE  6E58               	movwf	vfprintf@ap^0,c
  1540  00CCE0  0E00               	movlw	high printf@ap
  1541  00CCE2  6E59               	movwf	(vfprintf@ap+1)^0,c
  1542  00CCE4  ECC8  F067         	call	_vfprintf	;wreg free
  1543  00CCE8  0012               	return		;funcret
  1544  00CCEA                     __end_of_printf:
  1545                           	callstack 0
  1546                           
  1547 ;; *************** function _vfprintf *****************
  1548 ;; Defined at:
  1549 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c"
  1550 ;; Parameters:    Size  Location     Type
  1551 ;;  fp              2   83[COMRAM] PTR struct _IO_FILE
  1552 ;;		 -> NULL(0), 
  1553 ;;  fmt             2   85[COMRAM] PTR const unsigned char 
  1554 ;;		 -> STR_8(33), STR_7(34), STR_6(30), STR_5(75), 
  1555 ;;		 -> STR_4(67), STR_3(39), STR_2(37), STR_1(35), 
  1556 ;;  ap              2   87[COMRAM] PTR PTR void 
  1557 ;;		 -> printf@ap(2), 
  1558 ;; Auto vars:     Size  Location     Type
  1559 ;;  cfmt            2   89[COMRAM] PTR unsigned char 
  1560 ;;		 -> STR_8(33), STR_7(34), STR_6(30), STR_5(75), 
  1561 ;;		 -> STR_4(67), STR_3(39), STR_2(37), STR_1(35), 
  1562 ;; Return value:  Size  Location     Type
  1563 ;;                  2   83[COMRAM] int 
  1564 ;; Registers used:
  1565 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1566 ;; Tracked objects:
  1567 ;;		On entry : 0/0
  1568 ;;		On exit  : 0/0
  1569 ;;		Unchanged: 0/0
  1570 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1571 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1572 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1573 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1574 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1575 ;;Total ram usage:        8 bytes
  1576 ;; Hardware stack levels used:    1
  1577 ;; Hardware stack levels required when called:    7
  1578 ;; This function calls:
  1579 ;;		_vfpfcnvrt
  1580 ;; This function is called by:
  1581 ;;		_printf
  1582 ;; This function uses a non-reentrant model
  1583 ;;
  1584                           
  1585                           	psect	text2
  1586  00CF90                     __ptext2:
  1587                           	callstack 0
  1588  00CF90                     _vfprintf:
  1589                           	callstack 22
  1590  00CF90                     
  1591                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.30\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  1592  00CF90  C056  F05A         	movff	vfprintf@fmt,vfprintf@cfmt
  1593  00CF94  C057  F05B         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1594  00CF98                     
  1595                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  1596  00CF98  0E00               	movlw	0
  1597  00CF9A  0100               	movlb	0	; () banked
  1598  00CF9C  6FCB               	movwf	(_nout+1)& (0+255),b
  1599  00CF9E  0E00               	movlw	0
  1600  00CFA0  6FCA               	movwf	_nout& (0+255),b
  1601                           
  1602                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  1603  00CFA2  EFE6  F067         	goto	l4123
  1604  00CFA6                     l4121:
  1605                           
  1606                           ; BSR set to: 0
  1607                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  1608  00CFA6  C054  F03A         	movff	vfprintf@fp,vfpfcnvrt@fp
  1609  00CFAA  C055  F03B         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1610  00CFAE  0E5A               	movlw	low vfprintf@cfmt
  1611  00CFB0  6E3C               	movwf	vfpfcnvrt@fmt^0,c
  1612  00CFB2  0E00               	movlw	high vfprintf@cfmt
  1613  00CFB4  6E3D               	movwf	(vfpfcnvrt@fmt+1)^0,c
  1614  00CFB6  C058  F03E         	movff	vfprintf@ap,vfpfcnvrt@ap
  1615  00CFBA  C059  F03F         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1616  00CFBE  EC28  F075         	call	_vfpfcnvrt	;wreg free
  1617  00CFC2  503A               	movf	?_vfpfcnvrt^0,w,c
  1618  00CFC4  0100               	movlb	0	; () banked
  1619  00CFC6  27CA               	addwf	_nout& (0+255),f,b
  1620  00CFC8  503B               	movf	(?_vfpfcnvrt+1)^0,w,c
  1621  00CFCA  23CB               	addwfc	(_nout+1)& (0+255),f,b
  1622  00CFCC                     l4123:
  1623                           
  1624                           ; BSR set to: 0
  1625                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  1626  00CFCC  0060  F16B  FFF6   	movff	vfprintf@cfmt,tblptrl
  1627  00CFD2  0060  F16F  FFF7   	movff	vfprintf@cfmt+1,tblptrh
  1628  00CFD8                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1629  00CFD8  6AF8               	clrf	tblptru,c
  1630  00CFDA                     	endif
  1631  00CFDA                     	if	0	;tblptru may be non-zero
  1632  00CFDA                     	endif
  1633  00CFDA  0008               	tblrd		*
  1634  00CFDC  50F5               	movf	tablat,w,c
  1635  00CFDE  0900               	iorlw	0
  1636  00CFE0  A4D8               	btfss	status,2,c
  1637  00CFE2  EFF5  F067         	goto	u4811
  1638  00CFE6  EFF7  F067         	goto	u4810
  1639  00CFEA                     u4811:
  1640  00CFEA  EFD3  F067         	goto	l4121
  1641  00CFEE                     u4810:
  1642  00CFEE                     
  1643                           ; BSR set to: 0
  1644                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  1645  00CFEE  C0CA  F054         	movff	_nout,?_vfprintf
  1646  00CFF2  C0CB  F055         	movff	_nout+1,?_vfprintf+1
  1647  00CFF6                     
  1648                           ; BSR set to: 0
  1649  00CFF6  0012               	return		;funcret
  1650  00CFF8                     __end_of_vfprintf:
  1651                           	callstack 0
  1652                           
  1653 ;; *************** function _vfpfcnvrt *****************
  1654 ;; Defined at:
  1655 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c"
  1656 ;; Parameters:    Size  Location     Type
  1657 ;;  fp              2   57[COMRAM] PTR struct _IO_FILE
  1658 ;;		 -> NULL(0), 
  1659 ;;  fmt             2   59[COMRAM] PTR PTR unsigned char 
  1660 ;;		 -> vfprintf@cfmt(2), 
  1661 ;;  ap              2   61[COMRAM] PTR PTR void 
  1662 ;;		 -> printf@ap(2), 
  1663 ;; Auto vars:     Size  Location     Type
  1664 ;;  llu             8    0        unsigned long long 
  1665 ;;  ll              8    0        long long 
  1666 ;;  f               4   75[COMRAM] long long 
  1667 ;;  ct              3   79[COMRAM] unsigned char [3]
  1668 ;;  vp              3    0        PTR void 
  1669 ;;  cp              3    0        PTR unsigned char 
  1670 ;;  done            2   67[COMRAM] int 
  1671 ;;  i               2    0        int 
  1672 ;;  c               1   82[COMRAM] unsigned char 
  1673 ;; Return value:  Size  Location     Type
  1674 ;;                  2   57[COMRAM] int 
  1675 ;; Registers used:
  1676 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1677 ;; Tracked objects:
  1678 ;;		On entry : 0/0
  1679 ;;		On exit  : 0/0
  1680 ;;		Unchanged: 0/0
  1681 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1682 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1683 ;;      Locals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1684 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1685 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1686 ;;Total ram usage:       26 bytes
  1687 ;; Hardware stack levels used:    1
  1688 ;; Hardware stack levels required when called:    6
  1689 ;; This function calls:
  1690 ;;		_atoi
  1691 ;;		_efgtoa
  1692 ;;		_fputc
  1693 ;;		_isdigit
  1694 ;;		_isupper
  1695 ;;		_strncmp
  1696 ;;		_tolower
  1697 ;; This function is called by:
  1698 ;;		_vfprintf
  1699 ;; This function uses a non-reentrant model
  1700 ;;
  1701                           
  1702                           	psect	text3
  1703  00EA50                     __ptext3:
  1704                           	callstack 0
  1705  00EA50                     _vfpfcnvrt:
  1706                           	callstack 22
  1707  00EA50                     
  1708                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.30\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.30\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.30\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          0\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  1709  00EA50  0060  F0F3  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  1710  00EA56  0060  F0F7  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  1711  00EA5C  006F FF7B FFF6     	movff	postinc2,tblptrl
  1712  00EA62  006F FF77 FFF7     	movff	postdec2,tblptrh
  1713  00EA68                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1714  00EA68  6AF8               	clrf	tblptru,c
  1715  00EA6A                     	endif
  1716  00EA6A                     	if	0	;tblptru may be non-zero
  1717  00EA6A                     	endif
  1718  00EA6A  0008               	tblrd		*
  1719  00EA6C  50F5               	movf	tablat,w,c
  1720  00EA6E  0A25               	xorlw	37
  1721  00EA70  A4D8               	btfss	status,2,c
  1722  00EA72  EF3D  F075         	goto	u4601
  1723  00EA76  EF3F  F075         	goto	u4600
  1724  00EA7A                     u4601:
  1725  00EA7A  EFCC  F078         	goto	l4059
  1726  00EA7E                     u4600:
  1727  00EA7E                     
  1728                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  1729  00EA7E  0060  F0F3  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  1730  00EA84  0060  F0F7  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  1731  00EA8A  2ADE               	incf	postinc2,f,c
  1732  00EA8C  0E00               	movlw	0
  1733  00EA8E  22DD               	addwfc	postdec2,f,c
  1734  00EA90                     
  1735                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  1736  00EA90  0E00               	movlw	0
  1737  00EA92  0100               	movlb	0	; () banked
  1738  00EA94  6FCD               	movwf	(_width+1)& (0+255),b
  1739  00EA96  0E00               	movlw	0
  1740  00EA98  6FCC               	movwf	_width& (0+255),b
  1741  00EA9A  C0CC  F0D0         	movff	_width,_flags
  1742  00EA9E  C0CD  F0D1         	movff	_width+1,_flags+1
  1743  00EAA2                     
  1744                           ; BSR set to: 0
  1745                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  1746  00EAA2  69CE               	setf	_prec& (0+255),b
  1747  00EAA4  69CF               	setf	(_prec+1)& (0+255),b
  1748  00EAA6                     
  1749                           ; BSR set to: 0
  1750                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 710:         done
      +                           = 0;
  1751  00EAA6  0E00               	movlw	0
  1752  00EAA8  6E45               	movwf	(vfpfcnvrt@done+1)^0,c
  1753  00EAAA  0E00               	movlw	0
  1754  00EAAC  6E44               	movwf	vfpfcnvrt@done^0,c
  1755                           
  1756                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 711:         whil
      +                          e (!done) {
  1757  00EAAE  EFAB  F075         	goto	l3963
  1758  00EAB2                     l3937:
  1759                           
  1760                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 714:             
      +                                  flags |= (1 << 0);
  1761  00EAB2  0100               	movlb	0	; () banked
  1762  00EAB4  81D0               	bsf	_flags& (0+255),0,b
  1763  00EAB6                     l3939:
  1764                           
  1765                           ; BSR set to: 0
  1766                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 715:             
      +                                  ++*fmt;
  1767  00EAB6  0060  F0F3  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  1768  00EABC  0060  F0F7  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  1769  00EAC2  2ADE               	incf	postinc2,f,c
  1770  00EAC4  0E00               	movlw	0
  1771  00EAC6  22DD               	addwfc	postdec2,f,c
  1772                           
  1773                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 716:             
      +                                  break;
  1774  00EAC8  EFAB  F075         	goto	l3963
  1775  00EACC                     l3941:
  1776                           
  1777                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 718:             
      +                                  flags |= (1 << 1);
  1778  00EACC  0100               	movlb	0	; () banked
  1779  00EACE  83D0               	bsf	_flags& (0+255),1,b
  1780  00EAD0  EF5B  F075         	goto	l3939
  1781  00EAD4                     l3945:
  1782                           
  1783                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 722:             
      +                                  flags |= (1 << 2);
  1784  00EAD4  0100               	movlb	0	; () banked
  1785  00EAD6  85D0               	bsf	_flags& (0+255),2,b
  1786  00EAD8  EF5B  F075         	goto	l3939
  1787  00EADC                     l3949:
  1788                           
  1789                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 726:             
      +                                  flags |= (1 << 3);
  1790  00EADC  0100               	movlb	0	; () banked
  1791  00EADE  87D0               	bsf	_flags& (0+255),3,b
  1792  00EAE0  EF5B  F075         	goto	l3939
  1793  00EAE4                     l3953:
  1794                           
  1795                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 730:             
      +                                  flags |= (1 << 4);
  1796  00EAE4  0100               	movlb	0	; () banked
  1797  00EAE6  89D0               	bsf	_flags& (0+255),4,b
  1798  00EAE8  EF5B  F075         	goto	l3939
  1799  00EAEC                     l3957:
  1800                           
  1801                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 734:             
      +                                  done = 1;
  1802  00EAEC  0E00               	movlw	0
  1803  00EAEE  6E45               	movwf	(vfpfcnvrt@done+1)^0,c
  1804  00EAF0  0E01               	movlw	1
  1805  00EAF2  6E44               	movwf	vfpfcnvrt@done^0,c
  1806                           
  1807                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 735:             
      +                                  break;
  1808  00EAF4  EFAB  F075         	goto	l3963
  1809  00EAF8                     l3961:
  1810  00EAF8  0060  F0F3  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  1811  00EAFE  0060  F0F7  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  1812  00EB04  006F FF7B FFF6     	movff	postinc2,tblptrl
  1813  00EB0A  006F FF77 FFF7     	movff	postdec2,tblptrh
  1814  00EB10                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1815  00EB10  6AF8               	clrf	tblptru,c
  1816  00EB12                     	endif
  1817  00EB12                     	if	0	;tblptru may be non-zero
  1818  00EB12                     	endif
  1819  00EB12  0008               	tblrd		*
  1820  00EB14  50F5               	movf	tablat,w,c
  1821  00EB16  6E40               	movwf	??_vfpfcnvrt^0,c
  1822  00EB18  6A41               	clrf	(??_vfpfcnvrt+1)^0,c
  1823                           
  1824                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1825                           ; Switch size 1, requested type "simple"
  1826                           ; Number of cases is 1, Range of values is 0 to 0
  1827                           ; switch strategies available:
  1828                           ; Name         Instructions Cycles
  1829                           ; simple_byte            4     3 (average)
  1830                           ;	Chosen strategy is simple_byte
  1831  00EB1A  5041               	movf	(??_vfpfcnvrt+1)^0,w,c
  1832  00EB1C  0A00               	xorlw	0	; case 0
  1833  00EB1E  B4D8               	btfsc	status,2,c
  1834  00EB20  EF94  F075         	goto	l4245
  1835  00EB24  EF76  F075         	goto	l3957
  1836  00EB28                     l4245:
  1837                           
  1838                           ; Switch size 1, requested type "simple"
  1839                           ; Number of cases is 5, Range of values is 32 to 48
  1840                           ; switch strategies available:
  1841                           ; Name         Instructions Cycles
  1842                           ; simple_byte           16     9 (average)
  1843                           ;	Chosen strategy is simple_byte
  1844  00EB28  5040               	movf	??_vfpfcnvrt^0,w,c
  1845  00EB2A  0A20               	xorlw	32	; case 32
  1846  00EB2C  B4D8               	btfsc	status,2,c
  1847  00EB2E  EF6E  F075         	goto	l3949
  1848  00EB32  0A03               	xorlw	3	; case 35
  1849  00EB34  B4D8               	btfsc	status,2,c
  1850  00EB36  EF72  F075         	goto	l3953
  1851  00EB3A  0A08               	xorlw	8	; case 43
  1852  00EB3C  B4D8               	btfsc	status,2,c
  1853  00EB3E  EF6A  F075         	goto	l3945
  1854  00EB42  0A06               	xorlw	6	; case 45
  1855  00EB44  B4D8               	btfsc	status,2,c
  1856  00EB46  EF59  F075         	goto	l3937
  1857  00EB4A  0A1D               	xorlw	29	; case 48
  1858  00EB4C  B4D8               	btfsc	status,2,c
  1859  00EB4E  EF66  F075         	goto	l3941
  1860  00EB52  EF76  F075         	goto	l3957
  1861  00EB56                     l3963:
  1862                           
  1863                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 711:         whil
      +                          e (!done) {
  1864  00EB56  5044               	movf	vfpfcnvrt@done^0,w,c
  1865  00EB58  1045               	iorwf	(vfpfcnvrt@done+1)^0,w,c
  1866  00EB5A  B4D8               	btfsc	status,2,c
  1867  00EB5C  EFB2  F075         	goto	u4611
  1868  00EB60  EFB4  F075         	goto	u4610
  1869  00EB64                     u4611:
  1870  00EB64  EF7C  F075         	goto	l3961
  1871  00EB68                     u4610:
  1872  00EB68                     
  1873                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 738:         if (
      +                          flags & (1 << 0)) {
  1874  00EB68  0100               	movlb	0	; () banked
  1875  00EB6A  A1D0               	btfss	_flags& (0+255),0,b
  1876  00EB6C  EFBA  F075         	goto	u4621
  1877  00EB70  EFBC  F075         	goto	u4620
  1878  00EB74                     u4621:
  1879  00EB74  EFBD  F075         	goto	l3967
  1880  00EB78                     u4620:
  1881  00EB78                     
  1882                           ; BSR set to: 0
  1883                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 739:             
      +                          flags &= ~(1 << 1);
  1884  00EB78  93D0               	bcf	_flags& (0+255),1,b
  1885  00EB7A                     l3967:
  1886                           
  1887                           ; BSR set to: 0
  1888                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 745:         if (
      +                          (*fmt)[0] == '*') {
  1889  00EB7A  0060  F0F3  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  1890  00EB80  0060  F0F7  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  1891  00EB86  006F FF7B FFF6     	movff	postinc2,tblptrl
  1892  00EB8C  006F FF77 FFF7     	movff	postdec2,tblptrh
  1893  00EB92                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1894  00EB92  6AF8               	clrf	tblptru,c
  1895  00EB94                     	endif
  1896  00EB94                     	if	0	;tblptru may be non-zero
  1897  00EB94                     	endif
  1898  00EB94  0008               	tblrd		*
  1899  00EB96  50F5               	movf	tablat,w,c
  1900  00EB98  0A2A               	xorlw	42
  1901  00EB9A  A4D8               	btfss	status,2,c
  1902  00EB9C  EFD2  F075         	goto	u4631
  1903  00EBA0  EFD4  F075         	goto	u4630
  1904  00EBA4                     u4631:
  1905  00EBA4  EF07  F076         	goto	l3975
  1906  00EBA8                     u4630:
  1907  00EBA8                     
  1908                           ; BSR set to: 0
  1909                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 746:             
      +                          ++*fmt;
  1910  00EBA8  0060  F0F3  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  1911  00EBAE  0060  F0F7  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  1912  00EBB4  2ADE               	incf	postinc2,f,c
  1913  00EBB6  0E00               	movlw	0
  1914  00EBB8  22DD               	addwfc	postdec2,f,c
  1915                           
  1916                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 747:             
      +                          width = (*(int *)__va_arg(*(int **)ap, (int)0));
  1917  00EBBA  0060  F0FB  FFD9   	movff	vfpfcnvrt@ap,fsr2l
  1918  00EBC0  0060  F0FF  FFDA   	movff	vfpfcnvrt@ap+1,fsr2h
  1919  00EBC6  006F FF7C  F040    	movff	indf2,??_vfpfcnvrt
  1920  00EBCC  0E02               	movlw	2
  1921  00EBCE  26DE               	addwf	postinc2,f,c
  1922  00EBD0  006F FF7C  F041    	movff	indf2,??_vfpfcnvrt+1
  1923  00EBD6  0E00               	movlw	0
  1924  00EBD8  22DD               	addwfc	postdec2,f,c
  1925  00EBDA  0060  F103  FFD9   	movff	??_vfpfcnvrt,fsr2l
  1926  00EBE0  0060  F107  FFDA   	movff	??_vfpfcnvrt+1,fsr2h
  1927  00EBE6  006F FF78  F0CC    	movff	postinc2,_width
  1928  00EBEC  006F FF74  F0CD    	movff	postdec2,_width+1
  1929  00EBF2                     
  1930                           ; BSR set to: 0
  1931                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 748:             
      +                          if (width < 0) {
  1932  00EBF2  BFCD               	btfsc	(_width+1)& (0+255),7,b
  1933  00EBF4  EF00  F076         	goto	u4640
  1934  00EBF8  EFFE  F075         	goto	u4641
  1935  00EBFC                     u4641:
  1936  00EBFC  EF55  F076         	goto	l3985
  1937  00EC00                     u4640:
  1938  00EC00                     
  1939                           ; BSR set to: 0
  1940                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 749:             
      +                              flags |= (1 << 0);
  1941  00EC00  81D0               	bsf	_flags& (0+255),0,b
  1942                           
  1943                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 750:             
      +                              width = -width;
  1944  00EC02  6DCC               	negf	_width& (0+255),b
  1945  00EC04  1FCD               	comf	(_width+1)& (0+255),f,b
  1946  00EC06  B0D8               	btfsc	status,0,c
  1947  00EC08  2BCD               	incf	(_width+1)& (0+255),f,b
  1948  00EC0A  EF55  F076         	goto	l3985
  1949  00EC0E                     l3975:
  1950                           
  1951                           ; BSR set to: 0
  1952                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 753:             
      +                          width = atoi(*fmt);
  1953  00EC0E  0060  F0F3  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  1954  00EC14  0060  F0F7  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  1955  00EC1A  006F FF78  F008    	movff	postinc2,atoi@s
  1956  00EC20  006F FF74  F009    	movff	postdec2,atoi@s+1
  1957  00EC26  ECF4  F06C         	call	_atoi	;wreg free
  1958  00EC2A  C008  F0CC         	movff	?_atoi,_width
  1959  00EC2E  C009  F0CD         	movff	?_atoi+1,_width+1
  1960                           
  1961                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 754:             
      +                          while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  1962  00EC32  EF24  F076         	goto	l3979
  1963  00EC36                     l3977:
  1964                           
  1965                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 755:             
      +                              ++*fmt;
  1966  00EC36  0060  F0F3  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  1967  00EC3C  0060  F0F7  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  1968  00EC42  2ADE               	incf	postinc2,f,c
  1969  00EC44  0E00               	movlw	0
  1970  00EC46  22DD               	addwfc	postdec2,f,c
  1971  00EC48                     l3979:
  1972  00EC48  0ED0               	movlw	208
  1973  00EC4A  6E40               	movwf	??_vfpfcnvrt^0,c
  1974  00EC4C  0EFF               	movlw	255
  1975  00EC4E  6E41               	movwf	(??_vfpfcnvrt+1)^0,c
  1976  00EC50  0060  F0F3  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  1977  00EC56  0060  F0F7  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  1978  00EC5C  006F FF7B FFF6     	movff	postinc2,tblptrl
  1979  00EC62  006F FF77 FFF7     	movff	postdec2,tblptrh
  1980  00EC68                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1981  00EC68  6AF8               	clrf	tblptru,c
  1982  00EC6A                     	endif
  1983  00EC6A                     	if	0	;tblptru may be non-zero
  1984  00EC6A                     	endif
  1985  00EC6A  0008               	tblrd		*
  1986  00EC6C  50F5               	movf	tablat,w,c
  1987  00EC6E  6E42               	movwf	(??_vfpfcnvrt+2)^0,c
  1988  00EC70  6A43               	clrf	(??_vfpfcnvrt+3)^0,c
  1989  00EC72  5040               	movf	??_vfpfcnvrt^0,w,c
  1990  00EC74  2642               	addwf	(??_vfpfcnvrt+2)^0,f,c
  1991  00EC76  5041               	movf	(??_vfpfcnvrt+1)^0,w,c
  1992  00EC78  2243               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  1993  00EC7A  5043               	movf	(??_vfpfcnvrt+3)^0,w,c
  1994  00EC7C  E10A               	bnz	u4650
  1995  00EC7E  0E0A               	movlw	10
  1996  00EC80  5C42               	subwf	(??_vfpfcnvrt+2)^0,w,c
  1997  00EC82  A0D8               	btfss	status,0,c
  1998  00EC84  EF46  F076         	goto	u4651
  1999  00EC88  EF49  F076         	goto	u4650
  2000  00EC8C                     u4651:
  2001  00EC8C  0E01               	movlw	1
  2002  00EC8E  EF4A  F076         	goto	u4660
  2003  00EC92                     u4650:
  2004  00EC92  0E00               	movlw	0
  2005  00EC94                     u4660:
  2006  00EC94  6E46               	movwf	_vfpfcnvrt$936^0,c
  2007  00EC96  6A47               	clrf	(_vfpfcnvrt$936+1)^0,c
  2008  00EC98  5046               	movf	_vfpfcnvrt$936^0,w,c
  2009  00EC9A  1047               	iorwf	(_vfpfcnvrt$936+1)^0,w,c
  2010  00EC9C  A4D8               	btfss	status,2,c
  2011  00EC9E  EF53  F076         	goto	u4671
  2012  00ECA2  EF55  F076         	goto	u4670
  2013  00ECA6                     u4671:
  2014  00ECA6  EF1B  F076         	goto	l3977
  2015  00ECAA                     u4670:
  2016  00ECAA                     l3985:
  2017                           
  2018                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 762:         if (
      +                          (*fmt)[0] == '.') {
  2019  00ECAA  0060  F0F3  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  2020  00ECB0  0060  F0F7  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  2021  00ECB6  006F FF7B FFF6     	movff	postinc2,tblptrl
  2022  00ECBC  006F FF77 FFF7     	movff	postdec2,tblptrh
  2023  00ECC2                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2024  00ECC2  6AF8               	clrf	tblptru,c
  2025  00ECC4                     	endif
  2026  00ECC4                     	if	0	;tblptru may be non-zero
  2027  00ECC4                     	endif
  2028  00ECC4  0008               	tblrd		*
  2029  00ECC6  50F5               	movf	tablat,w,c
  2030  00ECC8  0A2E               	xorlw	46
  2031  00ECCA  A4D8               	btfss	status,2,c
  2032  00ECCC  EF6A  F076         	goto	u4681
  2033  00ECD0  EF6C  F076         	goto	u4680
  2034  00ECD4                     u4681:
  2035  00ECD4  EF06  F077         	goto	l4005
  2036  00ECD8                     u4680:
  2037  00ECD8                     
  2038                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 763:             
      +                          prec = 0;
  2039  00ECD8  0E00               	movlw	0
  2040  00ECDA  0100               	movlb	0	; () banked
  2041  00ECDC  6FCF               	movwf	(_prec+1)& (0+255),b
  2042  00ECDE  0E00               	movlw	0
  2043  00ECE0  6FCE               	movwf	_prec& (0+255),b
  2044  00ECE2                     
  2045                           ; BSR set to: 0
  2046                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 764:             
      +                          ++*fmt;
  2047  00ECE2  0060  F0F3  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  2048  00ECE8  0060  F0F7  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  2049  00ECEE  2ADE               	incf	postinc2,f,c
  2050  00ECF0  0E00               	movlw	0
  2051  00ECF2  22DD               	addwfc	postdec2,f,c
  2052  00ECF4                     
  2053                           ; BSR set to: 0
  2054                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 765:             
      +                          if ((*fmt)[0] == '*') {
  2055  00ECF4  0060  F0F3  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  2056  00ECFA  0060  F0F7  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  2057  00ED00  006F FF7B FFF6     	movff	postinc2,tblptrl
  2058  00ED06  006F FF77 FFF7     	movff	postdec2,tblptrh
  2059  00ED0C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2060  00ED0C  6AF8               	clrf	tblptru,c
  2061  00ED0E                     	endif
  2062  00ED0E                     	if	0	;tblptru may be non-zero
  2063  00ED0E                     	endif
  2064  00ED0E  0008               	tblrd		*
  2065  00ED10  50F5               	movf	tablat,w,c
  2066  00ED12  0A2A               	xorlw	42
  2067  00ED14  A4D8               	btfss	status,2,c
  2068  00ED16  EF8F  F076         	goto	u4691
  2069  00ED1A  EF91  F076         	goto	u4690
  2070  00ED1E                     u4691:
  2071  00ED1E  EFB8  F076         	goto	l3995
  2072  00ED22                     u4690:
  2073  00ED22                     
  2074                           ; BSR set to: 0
  2075                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 766:             
      +                              ++*fmt;
  2076  00ED22  0060  F0F3  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  2077  00ED28  0060  F0F7  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  2078  00ED2E  2ADE               	incf	postinc2,f,c
  2079  00ED30  0E00               	movlw	0
  2080  00ED32  22DD               	addwfc	postdec2,f,c
  2081                           
  2082                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 767:             
      +                              prec = (*(int *)__va_arg(*(int **)ap, (int)0));
  2083  00ED34  0060  F0FB  FFD9   	movff	vfpfcnvrt@ap,fsr2l
  2084  00ED3A  0060  F0FF  FFDA   	movff	vfpfcnvrt@ap+1,fsr2h
  2085  00ED40  006F FF7C  F040    	movff	indf2,??_vfpfcnvrt
  2086  00ED46  0E02               	movlw	2
  2087  00ED48  26DE               	addwf	postinc2,f,c
  2088  00ED4A  006F FF7C  F041    	movff	indf2,??_vfpfcnvrt+1
  2089  00ED50  0E00               	movlw	0
  2090  00ED52  22DD               	addwfc	postdec2,f,c
  2091  00ED54  0060  F103  FFD9   	movff	??_vfpfcnvrt,fsr2l
  2092  00ED5A  0060  F107  FFDA   	movff	??_vfpfcnvrt+1,fsr2h
  2093  00ED60  006F FF78  F0CE    	movff	postinc2,_prec
  2094  00ED66  006F FF74  F0CF    	movff	postdec2,_prec+1
  2095                           
  2096                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 768:             
      +                          } else {
  2097  00ED6C  EF06  F077         	goto	l4005
  2098  00ED70                     l3995:
  2099                           
  2100                           ; BSR set to: 0
  2101                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 769:             
      +                              prec = atoi(*fmt);
  2102  00ED70  0060  F0F3  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  2103  00ED76  0060  F0F7  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  2104  00ED7C  006F FF78  F008    	movff	postinc2,atoi@s
  2105  00ED82  006F FF74  F009    	movff	postdec2,atoi@s+1
  2106  00ED88  ECF4  F06C         	call	_atoi	;wreg free
  2107  00ED8C  C008  F0CE         	movff	?_atoi,_prec
  2108  00ED90  C009  F0CF         	movff	?_atoi+1,_prec+1
  2109                           
  2110                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 770:             
      +                              while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  2111  00ED94  EFD5  F076         	goto	l3999
  2112  00ED98                     l3997:
  2113                           
  2114                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 771:             
      +                                  ++*fmt;
  2115  00ED98  0060  F0F3  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  2116  00ED9E  0060  F0F7  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  2117  00EDA4  2ADE               	incf	postinc2,f,c
  2118  00EDA6  0E00               	movlw	0
  2119  00EDA8  22DD               	addwfc	postdec2,f,c
  2120  00EDAA                     l3999:
  2121  00EDAA  0ED0               	movlw	208
  2122  00EDAC  6E40               	movwf	??_vfpfcnvrt^0,c
  2123  00EDAE  0EFF               	movlw	255
  2124  00EDB0  6E41               	movwf	(??_vfpfcnvrt+1)^0,c
  2125  00EDB2  0060  F0F3  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  2126  00EDB8  0060  F0F7  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  2127  00EDBE  006F FF7B FFF6     	movff	postinc2,tblptrl
  2128  00EDC4  006F FF77 FFF7     	movff	postdec2,tblptrh
  2129  00EDCA                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2130  00EDCA  6AF8               	clrf	tblptru,c
  2131  00EDCC                     	endif
  2132  00EDCC                     	if	0	;tblptru may be non-zero
  2133  00EDCC                     	endif
  2134  00EDCC  0008               	tblrd		*
  2135  00EDCE  50F5               	movf	tablat,w,c
  2136  00EDD0  6E42               	movwf	(??_vfpfcnvrt+2)^0,c
  2137  00EDD2  6A43               	clrf	(??_vfpfcnvrt+3)^0,c
  2138  00EDD4  5040               	movf	??_vfpfcnvrt^0,w,c
  2139  00EDD6  2642               	addwf	(??_vfpfcnvrt+2)^0,f,c
  2140  00EDD8  5041               	movf	(??_vfpfcnvrt+1)^0,w,c
  2141  00EDDA  2243               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  2142  00EDDC  5043               	movf	(??_vfpfcnvrt+3)^0,w,c
  2143  00EDDE  E10A               	bnz	u4700
  2144  00EDE0  0E0A               	movlw	10
  2145  00EDE2  5C42               	subwf	(??_vfpfcnvrt+2)^0,w,c
  2146  00EDE4  A0D8               	btfss	status,0,c
  2147  00EDE6  EFF7  F076         	goto	u4701
  2148  00EDEA  EFFA  F076         	goto	u4700
  2149  00EDEE                     u4701:
  2150  00EDEE  0E01               	movlw	1
  2151  00EDF0  EFFB  F076         	goto	u4710
  2152  00EDF4                     u4700:
  2153  00EDF4  0E00               	movlw	0
  2154  00EDF6                     u4710:
  2155  00EDF6  6E48               	movwf	_vfpfcnvrt$937^0,c
  2156  00EDF8  6A49               	clrf	(_vfpfcnvrt$937+1)^0,c
  2157  00EDFA  5048               	movf	_vfpfcnvrt$937^0,w,c
  2158  00EDFC  1049               	iorwf	(_vfpfcnvrt$937+1)^0,w,c
  2159  00EDFE  A4D8               	btfss	status,2,c
  2160  00EE00  EF04  F077         	goto	u4721
  2161  00EE04  EF06  F077         	goto	u4720
  2162  00EE08                     u4721:
  2163  00EE08  EFCC  F076         	goto	l3997
  2164  00EE0C                     u4720:
  2165  00EE0C                     l4005:
  2166                           
  2167                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 779:         ct[0
      +                          ] = (char)tolower((int)(*fmt)[0]);
  2168  00EE0C  0060  F0F3  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  2169  00EE12  0060  F0F7  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  2170  00EE18  006F FF7B FFF6     	movff	postinc2,tblptrl
  2171  00EE1E  006F FF77 FFF7     	movff	postdec2,tblptrh
  2172  00EE24                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2173  00EE24  6AF8               	clrf	tblptru,c
  2174  00EE26                     	endif
  2175  00EE26                     	if	0	;tblptru may be non-zero
  2176  00EE26                     	endif
  2177  00EE26  0008               	tblrd		*
  2178  00EE28  50F5               	movf	tablat,w,c
  2179  00EE2A  6E07               	movwf	tolower@c^0,c
  2180  00EE2C  6A08               	clrf	(tolower@c+1)^0,c
  2181  00EE2E  EC98  F067         	call	_tolower	;wreg free
  2182  00EE32  5007               	movf	?_tolower^0,w,c
  2183  00EE34  6E50               	movwf	vfpfcnvrt@ct^0,c
  2184  00EE36                     
  2185                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 780:         if (
      +                          ct[0]) {
  2186  00EE36  5050               	movf	vfpfcnvrt@ct^0,w,c
  2187  00EE38  B4D8               	btfsc	status,2,c
  2188  00EE3A  EF21  F077         	goto	u4731
  2189  00EE3E  EF23  F077         	goto	u4730
  2190  00EE42                     u4731:
  2191  00EE42  EF69  F077         	goto	l4015
  2192  00EE46                     u4730:
  2193  00EE46                     
  2194                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 781:             
      +                          ct[1] = (char)tolower((int)(*fmt)[1]);
  2195  00EE46  0060  F0F3  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  2196  00EE4C  0060  F0F7  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  2197  00EE52  006F FF78  F040    	movff	postinc2,??_vfpfcnvrt
  2198  00EE58  006F FF74  F041    	movff	postdec2,??_vfpfcnvrt+1
  2199  00EE5E  0E01               	movlw	1
  2200  00EE60  2640               	addwf	??_vfpfcnvrt^0,f,c
  2201  00EE62  0E00               	movlw	0
  2202  00EE64  2241               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  2203  00EE66  0060  F103  FFF6   	movff	??_vfpfcnvrt,tblptrl
  2204  00EE6C  0060  F107  FFF7   	movff	??_vfpfcnvrt+1,tblptrh
  2205  00EE72                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2206  00EE72  6AF8               	clrf	tblptru,c
  2207  00EE74                     	endif
  2208  00EE74                     	if	0	;tblptru may be non-zero
  2209  00EE74                     	endif
  2210  00EE74  0008               	tblrd		*
  2211  00EE76  50F5               	movf	tablat,w,c
  2212  00EE78  6E07               	movwf	tolower@c^0,c
  2213  00EE7A  6A08               	clrf	(tolower@c+1)^0,c
  2214  00EE7C  EC98  F067         	call	_tolower	;wreg free
  2215  00EE80  5007               	movf	?_tolower^0,w,c
  2216  00EE82  6E51               	movwf	(vfpfcnvrt@ct+1)^0,c
  2217  00EE84                     
  2218                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 782:             
      +                          if (ct[1]) {
  2219  00EE84  5051               	movf	(vfpfcnvrt@ct+1)^0,w,c
  2220  00EE86  B4D8               	btfsc	status,2,c
  2221  00EE88  EF48  F077         	goto	u4741
  2222  00EE8C  EF4A  F077         	goto	u4740
  2223  00EE90                     u4741:
  2224  00EE90  EF69  F077         	goto	l4015
  2225  00EE94                     u4740:
  2226  00EE94                     
  2227                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 783:             
      +                              ct[2] = (char)tolower((int)(*fmt)[2]);
  2228  00EE94  0060  F0F3  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  2229  00EE9A  0060  F0F7  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  2230  00EEA0  006F FF78  F040    	movff	postinc2,??_vfpfcnvrt
  2231  00EEA6  006F FF74  F041    	movff	postdec2,??_vfpfcnvrt+1
  2232  00EEAC  0E02               	movlw	2
  2233  00EEAE  2640               	addwf	??_vfpfcnvrt^0,f,c
  2234  00EEB0  0E00               	movlw	0
  2235  00EEB2  2241               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  2236  00EEB4  0060  F103  FFF6   	movff	??_vfpfcnvrt,tblptrl
  2237  00EEBA  0060  F107  FFF7   	movff	??_vfpfcnvrt+1,tblptrh
  2238  00EEC0                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2239  00EEC0  6AF8               	clrf	tblptru,c
  2240  00EEC2                     	endif
  2241  00EEC2                     	if	0	;tblptru may be non-zero
  2242  00EEC2                     	endif
  2243  00EEC2  0008               	tblrd		*
  2244  00EEC4  50F5               	movf	tablat,w,c
  2245  00EEC6  6E07               	movwf	tolower@c^0,c
  2246  00EEC8  6A08               	clrf	(tolower@c+1)^0,c
  2247  00EECA  EC98  F067         	call	_tolower	;wreg free
  2248  00EECE  5007               	movf	?_tolower^0,w,c
  2249  00EED0  6E52               	movwf	(vfpfcnvrt@ct+2)^0,c
  2250  00EED2                     l4015:
  2251                           
  2252                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 942:         if (
      +                          ct[0] == 'f') {
  2253  00EED2  0E66               	movlw	102
  2254  00EED4  1850               	xorwf	vfpfcnvrt@ct^0,w,c
  2255  00EED6  A4D8               	btfss	status,2,c
  2256  00EED8  EF70  F077         	goto	u4751
  2257  00EEDC  EF72  F077         	goto	u4750
  2258  00EEE0                     u4751:
  2259  00EEE0  EFC4  F077         	goto	l4027
  2260  00EEE4                     u4750:
  2261  00EEE4                     
  2262                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 944:             
      +                          c = (*fmt)[0];
  2263  00EEE4  0060  F0F3  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  2264  00EEEA  0060  F0F7  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  2265  00EEF0  006F FF7B FFF6     	movff	postinc2,tblptrl
  2266  00EEF6  006F FF77 FFF7     	movff	postdec2,tblptrh
  2267  00EEFC                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2268  00EEFC  6AF8               	clrf	tblptru,c
  2269  00EEFE                     	endif
  2270  00EEFE                     	if	0	;tblptru may be non-zero
  2271  00EEFE                     	endif
  2272  00EEFE  0008               	tblrd		*
  2273  00EF00  006F FFD4  F053    	movff	tablat,vfpfcnvrt@c
  2274  00EF06                     
  2275                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 945:             
      +                          ++*fmt;
  2276  00EF06  0060  F0F3  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  2277  00EF0C  0060  F0F7  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  2278  00EF12  2ADE               	incf	postinc2,f,c
  2279  00EF14  0E00               	movlw	0
  2280  00EF16  22DD               	addwfc	postdec2,f,c
  2281  00EF18                     
  2282                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 946:             
      +                          f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  2283  00EF18  0060  F0FB  FFD9   	movff	vfpfcnvrt@ap,fsr2l
  2284  00EF1E  0060  F0FF  FFDA   	movff	vfpfcnvrt@ap+1,fsr2h
  2285  00EF24  006F FF7C  F040    	movff	indf2,??_vfpfcnvrt
  2286  00EF2A  0E04               	movlw	4
  2287  00EF2C  26DE               	addwf	postinc2,f,c
  2288  00EF2E  006F FF7C  F041    	movff	indf2,??_vfpfcnvrt+1
  2289  00EF34  0E00               	movlw	0
  2290  00EF36  22DD               	addwfc	postdec2,f,c
  2291  00EF38  0060  F103  FFD9   	movff	??_vfpfcnvrt,fsr2l
  2292  00EF3E  0060  F107  FFDA   	movff	??_vfpfcnvrt+1,fsr2h
  2293  00EF44  006F FF78  F04C    	movff	postinc2,vfpfcnvrt@f
  2294  00EF4A  006F FF78  F04D    	movff	postinc2,vfpfcnvrt@f+1
  2295  00EF50  006F FF78  F04E    	movff	postinc2,vfpfcnvrt@f+2
  2296  00EF56  006F FF78  F04F    	movff	postinc2,vfpfcnvrt@f+3
  2297  00EF5C                     
  2298                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 948:             
      +                          return efgtoa(fp, f, c);
  2299  00EF5C  C03A  F02E         	movff	vfpfcnvrt@fp,efgtoa@fp
  2300  00EF60  C03B  F02F         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  2301  00EF64  C04C  F030         	movff	vfpfcnvrt@f,efgtoa@f
  2302  00EF68  C04D  F031         	movff	vfpfcnvrt@f+1,efgtoa@f+1
  2303  00EF6C  C04E  F032         	movff	vfpfcnvrt@f+2,efgtoa@f+2
  2304  00EF70  C04F  F033         	movff	vfpfcnvrt@f+3,efgtoa@f+3
  2305  00EF74  C053  F034         	movff	vfpfcnvrt@c,efgtoa@c
  2306  00EF78  ECEF  F078         	call	_efgtoa	;wreg free
  2307  00EF7C  C02E  F03A         	movff	?_efgtoa,?_vfpfcnvrt
  2308  00EF80  C02F  F03B         	movff	?_efgtoa+1,?_vfpfcnvrt+1
  2309  00EF84  EFEE  F078         	goto	l1116
  2310  00EF88                     l4027:
  2311                           
  2312                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 950:         if (
      +                          !strncmp(ct, "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  2313  00EF88  0E50               	movlw	low vfpfcnvrt@ct
  2314  00EF8A  6E01               	movwf	strncmp@_l^0,c
  2315  00EF8C  0E00               	movlw	high vfpfcnvrt@ct
  2316  00EF8E  6E02               	movwf	(strncmp@_l+1)^0,c
  2317  00EF90  0EF7               	movlw	low STR_17
  2318  00EF92  6E03               	movwf	strncmp@_r^0,c
  2319  00EF94  0EFF               	movlw	high STR_17
  2320  00EF96  6E04               	movwf	(strncmp@_r+1)^0,c
  2321  00EF98  0E00               	movlw	0
  2322  00EF9A  6E06               	movwf	(strncmp@n+1)^0,c
  2323  00EF9C  0E02               	movlw	2
  2324  00EF9E  6E05               	movwf	strncmp@n^0,c
  2325  00EFA0  EC38  F06A         	call	_strncmp	;wreg free
  2326  00EFA4  5001               	movf	?_strncmp^0,w,c
  2327  00EFA6  1002               	iorwf	(?_strncmp+1)^0,w,c
  2328  00EFA8  A4D8               	btfss	status,2,c
  2329  00EFAA  EFD9  F077         	goto	u4761
  2330  00EFAE  EFDB  F077         	goto	u4760
  2331  00EFB2                     u4761:
  2332  00EFB2  EF8D  F078         	goto	l4043
  2333  00EFB6                     u4760:
  2334  00EFB6                     
  2335                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 953:             
      +                          if ((0 ? isupper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
  2336  00EFB6  0060  F0F3  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  2337  00EFBC  0060  F0F7  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  2338  00EFC2  006F FF78  F040    	movff	postinc2,??_vfpfcnvrt
  2339  00EFC8  006F FF74  F041    	movff	postdec2,??_vfpfcnvrt+1
  2340  00EFCE  0E01               	movlw	1
  2341  00EFD0  2640               	addwf	??_vfpfcnvrt^0,f,c
  2342  00EFD2  0E00               	movlw	0
  2343  00EFD4  2241               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  2344  00EFD6  0060  F103  FFF6   	movff	??_vfpfcnvrt,tblptrl
  2345  00EFDC  0060  F107  FFF7   	movff	??_vfpfcnvrt+1,tblptrh
  2346  00EFE2                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2347  00EFE2  6AF8               	clrf	tblptru,c
  2348  00EFE4                     	endif
  2349  00EFE4                     	if	0	;tblptru may be non-zero
  2350  00EFE4                     	endif
  2351  00EFE4  0008               	tblrd		*
  2352  00EFE6  006F FFD4  F053    	movff	tablat,vfpfcnvrt@c
  2353  00EFEC  0EBF               	movlw	191
  2354  00EFEE  6E40               	movwf	??_vfpfcnvrt^0,c
  2355  00EFF0  0EFF               	movlw	255
  2356  00EFF2  6E41               	movwf	(??_vfpfcnvrt+1)^0,c
  2357  00EFF4  0060  F0F3  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  2358  00EFFA  0060  F0F7  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  2359  00F000  006F FF7B FFF6     	movff	postinc2,tblptrl
  2360  00F006  006F FF77 FFF7     	movff	postdec2,tblptrh
  2361  00F00C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2362  00F00C  6AF8               	clrf	tblptru,c
  2363  00F00E                     	endif
  2364  00F00E                     	if	0	;tblptru may be non-zero
  2365  00F00E                     	endif
  2366  00F00E  0008               	tblrd		*
  2367  00F010  50F5               	movf	tablat,w,c
  2368  00F012  6E42               	movwf	(??_vfpfcnvrt+2)^0,c
  2369  00F014  6A43               	clrf	(??_vfpfcnvrt+3)^0,c
  2370  00F016  5040               	movf	??_vfpfcnvrt^0,w,c
  2371  00F018  2642               	addwf	(??_vfpfcnvrt+2)^0,f,c
  2372  00F01A  5041               	movf	(??_vfpfcnvrt+1)^0,w,c
  2373  00F01C  2243               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  2374  00F01E  5043               	movf	(??_vfpfcnvrt+3)^0,w,c
  2375  00F020  E10A               	bnz	u4770
  2376  00F022  0E1A               	movlw	26
  2377  00F024  5C42               	subwf	(??_vfpfcnvrt+2)^0,w,c
  2378  00F026  A0D8               	btfss	status,0,c
  2379  00F028  EF18  F078         	goto	u4771
  2380  00F02C  EF1B  F078         	goto	u4770
  2381  00F030                     u4771:
  2382  00F030  0E01               	movlw	1
  2383  00F032  EF1C  F078         	goto	u4780
  2384  00F036                     u4770:
  2385  00F036  0E00               	movlw	0
  2386  00F038                     u4780:
  2387  00F038  6E4A               	movwf	_vfpfcnvrt$941^0,c
  2388  00F03A  6A4B               	clrf	(_vfpfcnvrt$941+1)^0,c
  2389  00F03C  504A               	movf	_vfpfcnvrt$941^0,w,c
  2390  00F03E  104B               	iorwf	(_vfpfcnvrt$941+1)^0,w,c
  2391  00F040  B4D8               	btfsc	status,2,c
  2392  00F042  EF25  F078         	goto	u4791
  2393  00F046  EF27  F078         	goto	u4790
  2394  00F04A                     u4791:
  2395  00F04A  EF4B  F078         	goto	l4037
  2396  00F04E                     u4790:
  2397  00F04E                     
  2398                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 954:             
      +                              f = (*(long double *)__va_arg(*(long double **)ap, (long double)0));
  2399  00F04E  0060  F0FB  FFD9   	movff	vfpfcnvrt@ap,fsr2l
  2400  00F054  0060  F0FF  FFDA   	movff	vfpfcnvrt@ap+1,fsr2h
  2401  00F05A  006F FF7C  F040    	movff	indf2,??_vfpfcnvrt
  2402  00F060  0E04               	movlw	4
  2403  00F062  26DE               	addwf	postinc2,f,c
  2404  00F064  006F FF7C  F041    	movff	indf2,??_vfpfcnvrt+1
  2405  00F06A  0E00               	movlw	0
  2406  00F06C  22DD               	addwfc	postdec2,f,c
  2407  00F06E  0060  F103  FFD9   	movff	??_vfpfcnvrt,fsr2l
  2408  00F074  0060  F107  FFDA   	movff	??_vfpfcnvrt+1,fsr2h
  2409  00F07A  006F FF78  F04C    	movff	postinc2,vfpfcnvrt@f
  2410  00F080  006F FF78  F04D    	movff	postinc2,vfpfcnvrt@f+1
  2411  00F086  006F FF78  F04E    	movff	postinc2,vfpfcnvrt@f+2
  2412  00F08C  006F FF78  F04F    	movff	postinc2,vfpfcnvrt@f+3
  2413                           
  2414                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 955:             
      +                          } else {
  2415  00F092  EF6D  F078         	goto	l1123
  2416  00F096                     l4037:
  2417                           
  2418                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 956:             
      +                              f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  2419  00F096  0060  F0FB  FFD9   	movff	vfpfcnvrt@ap,fsr2l
  2420  00F09C  0060  F0FF  FFDA   	movff	vfpfcnvrt@ap+1,fsr2h
  2421  00F0A2  006F FF7C  F040    	movff	indf2,??_vfpfcnvrt
  2422  00F0A8  0E04               	movlw	4
  2423  00F0AA  26DE               	addwf	postinc2,f,c
  2424  00F0AC  006F FF7C  F041    	movff	indf2,??_vfpfcnvrt+1
  2425  00F0B2  0E00               	movlw	0
  2426  00F0B4  22DD               	addwfc	postdec2,f,c
  2427  00F0B6  0060  F103  FFD9   	movff	??_vfpfcnvrt,fsr2l
  2428  00F0BC  0060  F107  FFDA   	movff	??_vfpfcnvrt+1,fsr2h
  2429  00F0C2  006F FF78  F04C    	movff	postinc2,vfpfcnvrt@f
  2430  00F0C8  006F FF78  F04D    	movff	postinc2,vfpfcnvrt@f+1
  2431  00F0CE  006F FF78  F04E    	movff	postinc2,vfpfcnvrt@f+2
  2432  00F0D4  006F FF78  F04F    	movff	postinc2,vfpfcnvrt@f+3
  2433  00F0DA                     l1123:
  2434                           
  2435                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 958:             
      +                          *fmt += ((sizeof("lf")/sizeof("lf"[0]))-1);
  2436  00F0DA  0E02               	movlw	2
  2437  00F0DC  0060  F0F3  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  2438  00F0E2  0060  F0F7  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  2439  00F0E8  26DE               	addwf	postinc2,f,c
  2440  00F0EA  0E00               	movlw	0
  2441  00F0EC  22DD               	addwfc	postdec2,f,c
  2442  00F0EE                     
  2443                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 960:             
      +                          return efgtoa(fp, f, c);
  2444  00F0EE  C03A  F02E         	movff	vfpfcnvrt@fp,efgtoa@fp
  2445  00F0F2  C03B  F02F         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  2446  00F0F6  C04C  F030         	movff	vfpfcnvrt@f,efgtoa@f
  2447  00F0FA  C04D  F031         	movff	vfpfcnvrt@f+1,efgtoa@f+1
  2448  00F0FE  C04E  F032         	movff	vfpfcnvrt@f+2,efgtoa@f+2
  2449  00F102  C04F  F033         	movff	vfpfcnvrt@f+3,efgtoa@f+3
  2450  00F106  C053  F034         	movff	vfpfcnvrt@c,efgtoa@c
  2451  00F10A  ECEF  F078         	call	_efgtoa	;wreg free
  2452  00F10E  C02E  F03A         	movff	?_efgtoa,?_vfpfcnvrt
  2453  00F112  C02F  F03B         	movff	?_efgtoa+1,?_vfpfcnvrt+1
  2454  00F116  EFEE  F078         	goto	l1116
  2455  00F11A                     l4043:
  2456                           
  2457                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  2458  00F11A  0060  F0F3  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  2459  00F120  0060  F0F7  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  2460  00F126  006F FF7B FFF6     	movff	postinc2,tblptrl
  2461  00F12C  006F FF77 FFF7     	movff	postdec2,tblptrh
  2462  00F132                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2463  00F132  6AF8               	clrf	tblptru,c
  2464  00F134                     	endif
  2465  00F134                     	if	0	;tblptru may be non-zero
  2466  00F134                     	endif
  2467  00F134  0008               	tblrd		*
  2468  00F136  50F5               	movf	tablat,w,c
  2469  00F138  0A25               	xorlw	37
  2470  00F13A  A4D8               	btfss	status,2,c
  2471  00F13C  EFA2  F078         	goto	u4801
  2472  00F140  EFA4  F078         	goto	u4800
  2473  00F144                     u4801:
  2474  00F144  EFBD  F078         	goto	l4053
  2475  00F148                     u4800:
  2476  00F148                     
  2477                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  2478  00F148  0060  F0F3  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  2479  00F14E  0060  F0F7  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  2480  00F154  2ADE               	incf	postinc2,f,c
  2481  00F156  0E00               	movlw	0
  2482  00F158  22DD               	addwfc	postdec2,f,c
  2483  00F15A                     
  2484                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  2485  00F15A  0E00               	movlw	0
  2486  00F15C  6E04               	movwf	(fputc@c+1)^0,c
  2487  00F15E  0E25               	movlw	37
  2488  00F160  6E03               	movwf	fputc@c^0,c
  2489  00F162  C03A  F005         	movff	vfpfcnvrt@fp,fputc@fp
  2490  00F166  C03B  F006         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2491  00F16A  EC7B  F068         	call	_fputc	;wreg free
  2492  00F16E                     l4049:
  2493                           
  2494                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  2495  00F16E  0E00               	movlw	0
  2496  00F170  6E3B               	movwf	(?_vfpfcnvrt+1)^0,c
  2497  00F172  0E01               	movlw	1
  2498  00F174  6E3A               	movwf	?_vfpfcnvrt^0,c
  2499  00F176  EFEE  F078         	goto	l1116
  2500  00F17A                     l4053:
  2501                           
  2502                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  2503  00F17A  0060  F0F3  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  2504  00F180  0060  F0F7  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  2505  00F186  2ADE               	incf	postinc2,f,c
  2506  00F188  0E00               	movlw	0
  2507  00F18A  22DD               	addwfc	postdec2,f,c
  2508  00F18C                     
  2509                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  2510  00F18C  0E00               	movlw	0
  2511  00F18E  6E3B               	movwf	(?_vfpfcnvrt+1)^0,c
  2512  00F190  0E00               	movlw	0
  2513  00F192  6E3A               	movwf	?_vfpfcnvrt^0,c
  2514  00F194  EFEE  F078         	goto	l1116
  2515  00F198                     l4059:
  2516                           
  2517                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  2518  00F198  0060  F0F3  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  2519  00F19E  0060  F0F7  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  2520  00F1A4  006F FF7B FFF6     	movff	postinc2,tblptrl
  2521  00F1AA  006F FF77 FFF7     	movff	postdec2,tblptrh
  2522  00F1B0                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2523  00F1B0  6AF8               	clrf	tblptru,c
  2524  00F1B2                     	endif
  2525  00F1B2                     	if	0	;tblptru may be non-zero
  2526  00F1B2                     	endif
  2527  00F1B2  0008               	tblrd		*
  2528  00F1B4  50F5               	movf	tablat,w,c
  2529  00F1B6  6E03               	movwf	fputc@c^0,c
  2530  00F1B8  6A04               	clrf	(fputc@c+1)^0,c
  2531  00F1BA  C03A  F005         	movff	vfpfcnvrt@fp,fputc@fp
  2532  00F1BE  C03B  F006         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2533  00F1C2  EC7B  F068         	call	_fputc	;wreg free
  2534  00F1C6                     
  2535                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  2536  00F1C6  0060  F0F3  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  2537  00F1CC  0060  F0F7  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  2538  00F1D2  2ADE               	incf	postinc2,f,c
  2539  00F1D4  0E00               	movlw	0
  2540  00F1D6  22DD               	addwfc	postdec2,f,c
  2541  00F1D8  EFB7  F078         	goto	l4049
  2542  00F1DC                     l1116:
  2543  00F1DC  0012               	return		;funcret
  2544  00F1DE                     __end_of_vfpfcnvrt:
  2545                           	callstack 0
  2546                           
  2547 ;; *************** function _strncmp *****************
  2548 ;; Defined at:
  2549 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\strncmp.c"
  2550 ;; Parameters:    Size  Location     Type
  2551 ;;  _l              2    0[COMRAM] PTR const unsigned char 
  2552 ;;		 -> vfpfcnvrt@ct(3), 
  2553 ;;  _r              2    2[COMRAM] PTR const unsigned char 
  2554 ;;		 -> STR_19(3), 
  2555 ;;  n               2    4[COMRAM] unsigned int 
  2556 ;; Auto vars:     Size  Location     Type
  2557 ;;  r               2    9[COMRAM] PTR const unsigned char 
  2558 ;;		 -> STR_19(3), 
  2559 ;;  l               2    7[COMRAM] PTR const unsigned char 
  2560 ;;		 -> vfpfcnvrt@ct(3), 
  2561 ;; Return value:  Size  Location     Type
  2562 ;;                  2    0[COMRAM] int 
  2563 ;; Registers used:
  2564 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  2565 ;; Tracked objects:
  2566 ;;		On entry : 0/0
  2567 ;;		On exit  : 0/0
  2568 ;;		Unchanged: 0/0
  2569 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2570 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2571 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2572 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2573 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2574 ;;Total ram usage:       11 bytes
  2575 ;; Hardware stack levels used:    1
  2576 ;; This function calls:
  2577 ;;		Nothing
  2578 ;; This function is called by:
  2579 ;;		_vfpfcnvrt
  2580 ;; This function uses a non-reentrant model
  2581 ;;
  2582                           
  2583                           	psect	text4
  2584  00D470                     __ptext4:
  2585                           	callstack 0
  2586  00D470                     _strncmp:
  2587                           	callstack 27
  2588  00D470  C001  F008         	movff	strncmp@_l,strncmp@l
  2589  00D474  C002  F009         	movff	strncmp@_l+1,strncmp@l+1
  2590  00D478  C003  F00A         	movff	strncmp@_r,strncmp@r
  2591  00D47C  C004  F00B         	movff	strncmp@_r+1,strncmp@r+1
  2592  00D480  0605               	decf	strncmp@n^0,f,c
  2593  00D482  A0D8               	btfss	status,0,c
  2594  00D484  0606               	decf	(strncmp@n+1)^0,f,c
  2595  00D486  2805               	incf	strncmp@n^0,w,c
  2596  00D488  E106               	bnz	u4551
  2597  00D48A  2806               	incf	(strncmp@n+1)^0,w,c
  2598  00D48C  A4D8               	btfss	status,2,c
  2599  00D48E  EF4B  F06A         	goto	u4551
  2600  00D492  EF4D  F06A         	goto	u4550
  2601  00D496                     u4551:
  2602  00D496  EF5A  F06A         	goto	l3909
  2603  00D49A                     u4550:
  2604  00D49A  0E00               	movlw	0
  2605  00D49C  6E02               	movwf	(?_strncmp+1)^0,c
  2606  00D49E  0E00               	movlw	0
  2607  00D4A0  6E01               	movwf	?_strncmp^0,c
  2608  00D4A2  EFB1  F06A         	goto	l1241
  2609  00D4A6                     l3907:
  2610  00D4A6  4A08               	infsnz	strncmp@l^0,f,c
  2611  00D4A8  2A09               	incf	(strncmp@l+1)^0,f,c
  2612  00D4AA  4A0A               	infsnz	strncmp@r^0,f,c
  2613  00D4AC  2A0B               	incf	(strncmp@r+1)^0,f,c
  2614  00D4AE  0605               	decf	strncmp@n^0,f,c
  2615  00D4B0  A0D8               	btfss	status,0,c
  2616  00D4B2  0606               	decf	(strncmp@n+1)^0,f,c
  2617  00D4B4                     l3909:
  2618  00D4B4  0060  F023  FFD9   	movff	strncmp@l,fsr2l
  2619  00D4BA  0060  F027  FFDA   	movff	strncmp@l+1,fsr2h
  2620  00D4C0  50DF               	movf	indf2,w,c
  2621  00D4C2  B4D8               	btfsc	status,2,c
  2622  00D4C4  EF66  F06A         	goto	u4561
  2623  00D4C8  EF68  F06A         	goto	u4560
  2624  00D4CC                     u4561:
  2625  00D4CC  EF9B  F06A         	goto	l3917
  2626  00D4D0                     u4560:
  2627  00D4D0  0060  F02B  FFF6   	movff	strncmp@r,tblptrl
  2628  00D4D6  0060  F02F  FFF7   	movff	strncmp@r+1,tblptrh
  2629  00D4DC                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2630  00D4DC  6AF8               	clrf	tblptru,c
  2631  00D4DE                     	endif
  2632  00D4DE                     	if	0	;tblptru may be non-zero
  2633  00D4DE                     	endif
  2634  00D4DE  0008               	tblrd		*
  2635  00D4E0  50F5               	movf	tablat,w,c
  2636  00D4E2  0900               	iorlw	0
  2637  00D4E4  B4D8               	btfsc	status,2,c
  2638  00D4E6  EF77  F06A         	goto	u4571
  2639  00D4EA  EF79  F06A         	goto	u4570
  2640  00D4EE                     u4571:
  2641  00D4EE  EF9B  F06A         	goto	l3917
  2642  00D4F2                     u4570:
  2643  00D4F2  5005               	movf	strncmp@n^0,w,c
  2644  00D4F4  1006               	iorwf	(strncmp@n+1)^0,w,c
  2645  00D4F6  B4D8               	btfsc	status,2,c
  2646  00D4F8  EF80  F06A         	goto	u4581
  2647  00D4FC  EF82  F06A         	goto	u4580
  2648  00D500                     u4581:
  2649  00D500  EF9B  F06A         	goto	l3917
  2650  00D504                     u4580:
  2651  00D504  0060  F023  FFD9   	movff	strncmp@l,fsr2l
  2652  00D50A  0060  F027  FFDA   	movff	strncmp@l+1,fsr2h
  2653  00D510  50DF               	movf	indf2,w,c
  2654  00D512  6E07               	movwf	??_strncmp^0,c
  2655  00D514  0060  F02B  FFF6   	movff	strncmp@r,tblptrl
  2656  00D51A  0060  F02F  FFF7   	movff	strncmp@r+1,tblptrh
  2657  00D520                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2658  00D520  6AF8               	clrf	tblptru,c
  2659  00D522                     	endif
  2660  00D522                     	if	0	;tblptru may be non-zero
  2661  00D522                     	endif
  2662  00D522  0008               	tblrd		*
  2663  00D524  50F5               	movf	tablat,w,c
  2664  00D526  1807               	xorwf	??_strncmp^0,w,c
  2665  00D528  B4D8               	btfsc	status,2,c
  2666  00D52A  EF99  F06A         	goto	u4591
  2667  00D52E  EF9B  F06A         	goto	u4590
  2668  00D532                     u4591:
  2669  00D532  EF53  F06A         	goto	l3907
  2670  00D536                     u4590:
  2671  00D536                     l3917:
  2672  00D536  0060  F023  FFD9   	movff	strncmp@l,fsr2l
  2673  00D53C  0060  F027  FFDA   	movff	strncmp@l+1,fsr2h
  2674  00D542  50DF               	movf	indf2,w,c
  2675  00D544  6E07               	movwf	??_strncmp^0,c
  2676  00D546  0060  F02B  FFF6   	movff	strncmp@r,tblptrl
  2677  00D54C  0060  F02F  FFF7   	movff	strncmp@r+1,tblptrh
  2678  00D552                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2679  00D552  6AF8               	clrf	tblptru,c
  2680  00D554                     	endif
  2681  00D554                     	if	0	;tblptru may be non-zero
  2682  00D554                     	endif
  2683  00D554  0008               	tblrd		*
  2684  00D556  50F5               	movf	tablat,w,c
  2685  00D558  5C07               	subwf	??_strncmp^0,w,c
  2686  00D55A  6E01               	movwf	?_strncmp^0,c
  2687  00D55C  6A02               	clrf	(?_strncmp+1)^0,c
  2688  00D55E  A0D8               	btfss	status,0,c
  2689  00D560  0602               	decf	(?_strncmp+1)^0,f,c
  2690  00D562                     l1241:
  2691  00D562  0012               	return		;funcret
  2692  00D564                     __end_of_strncmp:
  2693                           	callstack 0
  2694                           
  2695 ;; *************** function _efgtoa *****************
  2696 ;; Defined at:
  2697 ;;		line 332 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c"
  2698 ;; Parameters:    Size  Location     Type
  2699 ;;  fp              2   45[COMRAM] PTR struct _IO_FILE
  2700 ;;		 -> NULL(0), 
  2701 ;;  f               4   47[COMRAM] PTR struct _IO_FILE
  2702 ;;  c               1   51[COMRAM] unsigned char 
  2703 ;; Auto vars:     Size  Location     Type
  2704 ;;  u               4   52[BANK0 ] unsigned char 
  2705 ;;  g               4   44[BANK0 ] unsigned char 
  2706 ;;  l               4   38[BANK0 ] unsigned char 
  2707 ;;  h               4   34[BANK0 ] unsigned char 
  2708 ;;  ou              4   20[BANK0 ] unsigned char 
  2709 ;;  n               2   50[BANK0 ] int 
  2710 ;;  e               2   48[BANK0 ] int 
  2711 ;;  i               2   42[BANK0 ] int 
  2712 ;;  w               2   30[BANK0 ] int 
  2713 ;;  p               2   28[BANK0 ] int 
  2714 ;;  sign            2   26[BANK0 ] int 
  2715 ;;  d               2   24[BANK0 ] int 
  2716 ;;  m               2   18[BANK0 ] int 
  2717 ;;  ne              2   16[BANK0 ] int 
  2718 ;;  pp              2   14[BANK0 ] int 
  2719 ;;  t               2   12[BANK0 ] int 
  2720 ;;  mode            1   33[BANK0 ] unsigned char 
  2721 ;;  nmode           1   32[BANK0 ] unsigned char 
  2722 ;; Return value:  Size  Location     Type
  2723 ;;                  2   45[COMRAM] int 
  2724 ;; Registers used:
  2725 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2726 ;; Tracked objects:
  2727 ;;		On entry : 0/0
  2728 ;;		On exit  : 0/0
  2729 ;;		Unchanged: 0/0
  2730 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2731 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2732 ;;      Locals:         0      56       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2733 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2734 ;;      Totals:        12      56       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2735 ;;Total ram usage:       68 bytes
  2736 ;; Hardware stack levels used:    1
  2737 ;; Hardware stack levels required when called:    5
  2738 ;; This function calls:
  2739 ;;		___awdiv
  2740 ;;		___awmod
  2741 ;;		___fladd
  2742 ;;		___fldiv
  2743 ;;		___fleq
  2744 ;;		___flge
  2745 ;;		___flmul
  2746 ;;		___flneg
  2747 ;;		___flsub
  2748 ;;		___fltol
  2749 ;;		___fpclassifyf
  2750 ;;		_floorf
  2751 ;;		_isupper
  2752 ;;		_pad
  2753 ;;		_strcpy
  2754 ;;		_tolower
  2755 ;; This function is called by:
  2756 ;;		_vfpfcnvrt
  2757 ;; This function uses a non-reentrant model
  2758 ;;
  2759                           
  2760                           	psect	text5
  2761  00F1DE                     __ptext5:
  2762                           	callstack 0
  2763  00F1DE                     _efgtoa:
  2764                           	callstack 22
  2765  00F1DE                     
  2766                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 332: static int e
      +                          fgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v2.30\pic\sources\
      +                          c99\common\doprnt.c: 333: {;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\
      +                          doprnt.c: 334:     char mode, nmode;;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c9
      +                          9\common\doprnt.c: 335:     int d, e, i, m, n, ne, p, pp, sign, t, w;;C:\Program Files\M
      +                          icrochip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 336:     long double g, h, l, ou, u;
  2767  00F1DE  0E00               	movlw	0
  2768  00F1E0  0100               	movlb	0	; () banked
  2769  00F1E2  6F7B               	movwf	(efgtoa@sign+1)& (0+255),b
  2770  00F1E4  0E00               	movlw	0
  2771  00F1E6  6F7A               	movwf	efgtoa@sign& (0+255),b
  2772  00F1E8                     
  2773                           ; BSR set to: 0
  2774                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 340:     g = f;
  2775  00F1E8  C030  F08C         	movff	efgtoa@f,efgtoa@g
  2776  00F1EC  C031  F08D         	movff	efgtoa@f+1,efgtoa@g+1
  2777  00F1F0  C032  F08E         	movff	efgtoa@f+2,efgtoa@g+2
  2778  00F1F4  C033  F08F         	movff	efgtoa@f+3,efgtoa@g+3
  2779  00F1F8                     
  2780                           ; BSR set to: 0
  2781                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 341:     if (g < 
      +                          0.0) {
  2782  00F1F8  BF8F               	btfsc	(efgtoa@g+3)& (0+255),7,b
  2783  00F1FA  EF03  F079         	goto	u3940
  2784  00F1FE  EF01  F079         	goto	u3941
  2785  00F202                     u3941:
  2786  00F202  EF19  F079         	goto	l3561
  2787  00F206                     u3940:
  2788  00F206                     
  2789                           ; BSR set to: 0
  2790                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 342:         sign
      +                           = 1;
  2791  00F206  0E00               	movlw	0
  2792  00F208  6F7B               	movwf	(efgtoa@sign+1)& (0+255),b
  2793  00F20A  0E01               	movlw	1
  2794  00F20C  6F7A               	movwf	efgtoa@sign& (0+255),b
  2795  00F20E                     
  2796                           ; BSR set to: 0
  2797                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 343:         g = 
      +                          -g;
  2798  00F20E  C08C  F001         	movff	efgtoa@g,___flneg@f1
  2799  00F212  C08D  F002         	movff	efgtoa@g+1,___flneg@f1+1
  2800  00F216  C08E  F003         	movff	efgtoa@g+2,___flneg@f1+2
  2801  00F21A  C08F  F004         	movff	efgtoa@g+3,___flneg@f1+3
  2802  00F21E  ECA6  F066         	call	___flneg	;wreg free
  2803  00F222  C001  F08C         	movff	?___flneg,efgtoa@g
  2804  00F226  C002  F08D         	movff	?___flneg+1,efgtoa@g+1
  2805  00F22A  C003  F08E         	movff	?___flneg+2,efgtoa@g+2
  2806  00F22E  C004  F08F         	movff	?___flneg+3,efgtoa@g+3
  2807  00F232                     l3561:
  2808                           
  2809                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 347:     n = 0;
  2810  00F232  0E00               	movlw	0
  2811  00F234  0100               	movlb	0	; () banked
  2812  00F236  6F93               	movwf	(efgtoa@n+1)& (0+255),b
  2813  00F238  0E00               	movlw	0
  2814  00F23A  6F92               	movwf	efgtoa@n& (0+255),b
  2815  00F23C                     
  2816                           ; BSR set to: 0
  2817                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 348:     w = widt
      +                          h;
  2818  00F23C  C0CC  F07E         	movff	_width,efgtoa@w
  2819  00F240  C0CD  F07F         	movff	_width+1,efgtoa@w+1
  2820  00F244                     
  2821                           ; BSR set to: 0
  2822                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 349:     if (sign
      +                           || (flags & (1 << 2))) {
  2823  00F244  517A               	movf	efgtoa@sign& (0+255),w,b
  2824  00F246  117B               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  2825  00F248  A4D8               	btfss	status,2,c
  2826  00F24A  EF29  F079         	goto	u3951
  2827  00F24E  EF2B  F079         	goto	u3950
  2828  00F252                     u3951:
  2829  00F252  EF32  F079         	goto	l3569
  2830  00F256                     u3950:
  2831  00F256                     
  2832                           ; BSR set to: 0
  2833  00F256  A5D0               	btfss	_flags& (0+255),2,b
  2834  00F258  EF30  F079         	goto	u3961
  2835  00F25C  EF32  F079         	goto	u3960
  2836  00F260                     u3961:
  2837  00F260  EF4C  F079         	goto	l3581
  2838  00F264                     u3960:
  2839  00F264                     l3569:
  2840                           
  2841                           ; BSR set to: 0
  2842                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 350:         dbuf
      +                          [n] = sign ? '-' : '+';
  2843  00F264  517A               	movf	efgtoa@sign& (0+255),w,b
  2844  00F266  117B               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  2845  00F268  A4D8               	btfss	status,2,c
  2846  00F26A  EF39  F079         	goto	u3971
  2847  00F26E  EF3B  F079         	goto	u3970
  2848  00F272                     u3971:
  2849  00F272  EF41  F079         	goto	l3573
  2850  00F276                     u3970:
  2851  00F276                     
  2852                           ; BSR set to: 0
  2853  00F276  0E00               	movlw	0
  2854  00F278  6F61               	movwf	(_efgtoa$910+1)& (0+255),b
  2855  00F27A  0E2B               	movlw	43
  2856  00F27C  6F60               	movwf	_efgtoa$910& (0+255),b
  2857  00F27E  EF45  F079         	goto	l3575
  2858  00F282                     l3573:
  2859                           
  2860                           ; BSR set to: 0
  2861  00F282  0E00               	movlw	0
  2862  00F284  6F61               	movwf	(_efgtoa$910+1)& (0+255),b
  2863  00F286  0E2D               	movlw	45
  2864  00F288  6F60               	movwf	_efgtoa$910& (0+255),b
  2865  00F28A                     l3575:
  2866                           
  2867                           ; BSR set to: 0
  2868  00F28A  C060  F100         	movff	_efgtoa$910,_dbuf
  2869  00F28E                     
  2870                           ; BSR set to: 0
  2871                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 351:         ++n;
  2872  00F28E  4B92               	infsnz	efgtoa@n& (0+255),f,b
  2873  00F290  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  2874  00F292                     
  2875                           ; BSR set to: 0
  2876                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 352:         --w;
  2877  00F292  077E               	decf	efgtoa@w& (0+255),f,b
  2878  00F294  A0D8               	btfss	status,0,c
  2879  00F296  077F               	decf	(efgtoa@w+1)& (0+255),f,b
  2880  00F298                     l3581:
  2881                           
  2882                           ; BSR set to: 0
  2883                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 357:         if (
      +                          (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  2884  00F298  C08C  F001         	movff	efgtoa@g,___fpclassifyf@x
  2885  00F29C  C08D  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  2886  00F2A0  C08E  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  2887  00F2A4  C08F  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  2888  00F2A8  ECB2  F06A         	call	___fpclassifyf	;wreg free
  2889  00F2AC  0401               	decf	?___fpclassifyf^0,w,c
  2890  00F2AE  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  2891  00F2B0  A4D8               	btfss	status,2,c
  2892  00F2B2  EF5D  F079         	goto	u3981
  2893  00F2B6  EF5F  F079         	goto	u3980
  2894  00F2BA                     u3981:
  2895  00F2BA  EFB6  F079         	goto	l3599
  2896  00F2BE                     u3980:
  2897  00F2BE  0EBF               	movlw	191
  2898  00F2C0  6E35               	movwf	??_efgtoa^0,c
  2899  00F2C2  0EFF               	movlw	255
  2900  00F2C4  6E36               	movwf	(??_efgtoa+1)^0,c
  2901  00F2C6  5034               	movf	efgtoa@c^0,w,c
  2902  00F2C8  6E37               	movwf	(??_efgtoa+2)^0,c
  2903  00F2CA  6A38               	clrf	(??_efgtoa+3)^0,c
  2904  00F2CC  5035               	movf	??_efgtoa^0,w,c
  2905  00F2CE  2637               	addwf	(??_efgtoa+2)^0,f,c
  2906  00F2D0  5036               	movf	(??_efgtoa+1)^0,w,c
  2907  00F2D2  2238               	addwfc	(??_efgtoa+3)^0,f,c
  2908  00F2D4  5038               	movf	(??_efgtoa+3)^0,w,c
  2909  00F2D6  E10A               	bnz	u3990
  2910  00F2D8  0E1A               	movlw	26
  2911  00F2DA  5C37               	subwf	(??_efgtoa+2)^0,w,c
  2912  00F2DC  A0D8               	btfss	status,0,c
  2913  00F2DE  EF73  F079         	goto	u3991
  2914  00F2E2  EF76  F079         	goto	u3990
  2915  00F2E6                     u3991:
  2916  00F2E6  0E01               	movlw	1
  2917  00F2E8  EF77  F079         	goto	u4000
  2918  00F2EC                     u3990:
  2919  00F2EC  0E00               	movlw	0
  2920  00F2EE                     u4000:
  2921  00F2EE  0100               	movlb	0	; () banked
  2922  00F2F0  6F62               	movwf	_efgtoa$911& (0+255),b
  2923  00F2F2  6B63               	clrf	(_efgtoa$911+1)& (0+255),b
  2924  00F2F4                     
  2925                           ; BSR set to: 0
  2926  00F2F4  5162               	movf	_efgtoa$911& (0+255),w,b
  2927  00F2F6  1163               	iorwf	(_efgtoa$911+1)& (0+255),w,b
  2928  00F2F8  B4D8               	btfsc	status,2,c
  2929  00F2FA  EF81  F079         	goto	u4011
  2930  00F2FE  EF83  F079         	goto	u4010
  2931  00F302                     u4011:
  2932  00F302  EF91  F079         	goto	l3591
  2933  00F306                     u4010:
  2934  00F306                     
  2935                           ; BSR set to: 0
  2936                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 358:             
      +                          strcpy(&dbuf[n], "INF");
  2937  00F306  0E00               	movlw	low _dbuf
  2938  00F308  2592               	addwf	efgtoa@n& (0+255),w,b
  2939  00F30A  6E01               	movwf	strcpy@dest^0,c
  2940  00F30C  0E01               	movlw	high _dbuf
  2941  00F30E  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2942  00F310  6E02               	movwf	(strcpy@dest+1)^0,c
  2943  00F312  0EE7               	movlw	low STR_9
  2944  00F314  6E03               	movwf	strcpy@src^0,c
  2945  00F316  0EFF               	movlw	high STR_9
  2946  00F318  6E04               	movwf	(strcpy@src+1)^0,c
  2947  00F31A  ECFC  F067         	call	_strcpy	;wreg free
  2948                           
  2949                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 359:         } el
      +                          se {
  2950  00F31E  EF9D  F079         	goto	l3593
  2951  00F322                     l3591:
  2952                           
  2953                           ; BSR set to: 0
  2954                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 360:             
      +                          strcpy(&dbuf[n], "inf");
  2955  00F322  0E00               	movlw	low _dbuf
  2956  00F324  2592               	addwf	efgtoa@n& (0+255),w,b
  2957  00F326  6E01               	movwf	strcpy@dest^0,c
  2958  00F328  0E01               	movlw	high _dbuf
  2959  00F32A  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2960  00F32C  6E02               	movwf	(strcpy@dest+1)^0,c
  2961  00F32E  0EEF               	movlw	low STR_10
  2962  00F330  6E03               	movwf	strcpy@src^0,c
  2963  00F332  0EFF               	movlw	high STR_10
  2964  00F334  6E04               	movwf	(strcpy@src+1)^0,c
  2965  00F336  ECFC  F067         	call	_strcpy	;wreg free
  2966  00F33A                     l3593:
  2967                           
  2968                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 362:         w -=
      +                           ((sizeof("inf")/sizeof("inf"[0]))-1);
  2969  00F33A  0100               	movlb	0	; () banked
  2970  00F33C  0EFD               	movlw	253
  2971  00F33E  277E               	addwf	efgtoa@w& (0+255),f,b
  2972  00F340  0EFF               	movlw	255
  2973  00F342  237F               	addwfc	(efgtoa@w+1)& (0+255),f,b
  2974  00F344                     
  2975                           ; BSR set to: 0
  2976                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 363:         retu
      +                          rn pad(fp, &dbuf[0], w);
  2977  00F344  C02E  F013         	movff	efgtoa@fp,pad@fp
  2978  00F348  C02F  F014         	movff	efgtoa@fp+1,pad@fp+1
  2979  00F34C  0E00               	movlw	low _dbuf
  2980  00F34E  6E15               	movwf	pad@buf^0,c
  2981  00F350  0E01               	movlw	high _dbuf
  2982  00F352  6E16               	movwf	(pad@buf+1)^0,c
  2983  00F354  C07E  F017         	movff	efgtoa@w,pad@p
  2984  00F358  C07F  F018         	movff	efgtoa@w+1,pad@p+1
  2985  00F35C  ECD5  F069         	call	_pad	;wreg free
  2986  00F360  C013  F02E         	movff	?_pad,?_efgtoa
  2987  00F364  C014  F02F         	movff	?_pad+1,?_efgtoa+1
  2988  00F368  EF43  F07F         	goto	l1002
  2989  00F36C                     l3599:
  2990                           
  2991                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 366:         if (
      +                          (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  2992  00F36C  C08C  F001         	movff	efgtoa@g,___fpclassifyf@x
  2993  00F370  C08D  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  2994  00F374  C08E  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  2995  00F378  C08F  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  2996  00F37C  ECB2  F06A         	call	___fpclassifyf	;wreg free
  2997  00F380  5001               	movf	?___fpclassifyf^0,w,c
  2998  00F382  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  2999  00F384  A4D8               	btfss	status,2,c
  3000  00F386  EFC7  F079         	goto	u4021
  3001  00F38A  EFC9  F079         	goto	u4020
  3002  00F38E                     u4021:
  3003  00F38E  EF20  F07A         	goto	l3617
  3004  00F392                     u4020:
  3005  00F392  0EBF               	movlw	191
  3006  00F394  6E35               	movwf	??_efgtoa^0,c
  3007  00F396  0EFF               	movlw	255
  3008  00F398  6E36               	movwf	(??_efgtoa+1)^0,c
  3009  00F39A  5034               	movf	efgtoa@c^0,w,c
  3010  00F39C  6E37               	movwf	(??_efgtoa+2)^0,c
  3011  00F39E  6A38               	clrf	(??_efgtoa+3)^0,c
  3012  00F3A0  5035               	movf	??_efgtoa^0,w,c
  3013  00F3A2  2637               	addwf	(??_efgtoa+2)^0,f,c
  3014  00F3A4  5036               	movf	(??_efgtoa+1)^0,w,c
  3015  00F3A6  2238               	addwfc	(??_efgtoa+3)^0,f,c
  3016  00F3A8  5038               	movf	(??_efgtoa+3)^0,w,c
  3017  00F3AA  E10A               	bnz	u4030
  3018  00F3AC  0E1A               	movlw	26
  3019  00F3AE  5C37               	subwf	(??_efgtoa+2)^0,w,c
  3020  00F3B0  A0D8               	btfss	status,0,c
  3021  00F3B2  EFDD  F079         	goto	u4031
  3022  00F3B6  EFE0  F079         	goto	u4030
  3023  00F3BA                     u4031:
  3024  00F3BA  0E01               	movlw	1
  3025  00F3BC  EFE1  F079         	goto	u4040
  3026  00F3C0                     u4030:
  3027  00F3C0  0E00               	movlw	0
  3028  00F3C2                     u4040:
  3029  00F3C2  0100               	movlb	0	; () banked
  3030  00F3C4  6F64               	movwf	_efgtoa$916& (0+255),b
  3031  00F3C6  6B65               	clrf	(_efgtoa$916+1)& (0+255),b
  3032  00F3C8                     
  3033                           ; BSR set to: 0
  3034  00F3C8  5164               	movf	_efgtoa$916& (0+255),w,b
  3035  00F3CA  1165               	iorwf	(_efgtoa$916+1)& (0+255),w,b
  3036  00F3CC  B4D8               	btfsc	status,2,c
  3037  00F3CE  EFEB  F079         	goto	u4051
  3038  00F3D2  EFED  F079         	goto	u4050
  3039  00F3D6                     u4051:
  3040  00F3D6  EFFB  F079         	goto	l3609
  3041  00F3DA                     u4050:
  3042  00F3DA                     
  3043                           ; BSR set to: 0
  3044                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 367:             
      +                          strcpy(&dbuf[n], "NAN");
  3045  00F3DA  0E00               	movlw	low _dbuf
  3046  00F3DC  2592               	addwf	efgtoa@n& (0+255),w,b
  3047  00F3DE  6E01               	movwf	strcpy@dest^0,c
  3048  00F3E0  0E01               	movlw	high _dbuf
  3049  00F3E2  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3050  00F3E4  6E02               	movwf	(strcpy@dest+1)^0,c
  3051  00F3E6  0EEB               	movlw	low STR_13
  3052  00F3E8  6E03               	movwf	strcpy@src^0,c
  3053  00F3EA  0EFF               	movlw	high STR_13
  3054  00F3EC  6E04               	movwf	(strcpy@src+1)^0,c
  3055  00F3EE  ECFC  F067         	call	_strcpy	;wreg free
  3056                           
  3057                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 368:         } el
      +                          se {
  3058  00F3F2  EF07  F07A         	goto	l3611
  3059  00F3F6                     l3609:
  3060                           
  3061                           ; BSR set to: 0
  3062                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 369:             
      +                          strcpy(&dbuf[n], "nan");
  3063  00F3F6  0E00               	movlw	low _dbuf
  3064  00F3F8  2592               	addwf	efgtoa@n& (0+255),w,b
  3065  00F3FA  6E01               	movwf	strcpy@dest^0,c
  3066  00F3FC  0E01               	movlw	high _dbuf
  3067  00F3FE  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3068  00F400  6E02               	movwf	(strcpy@dest+1)^0,c
  3069  00F402  0EF3               	movlw	low STR_14
  3070  00F404  6E03               	movwf	strcpy@src^0,c
  3071  00F406  0EFF               	movlw	high STR_14
  3072  00F408  6E04               	movwf	(strcpy@src+1)^0,c
  3073  00F40A  ECFC  F067         	call	_strcpy	;wreg free
  3074  00F40E                     l3611:
  3075                           
  3076                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 371:         w -=
      +                           ((sizeof("inf")/sizeof("inf"[0]))-1);
  3077  00F40E  0100               	movlb	0	; () banked
  3078  00F410  0EFD               	movlw	253
  3079  00F412  277E               	addwf	efgtoa@w& (0+255),f,b
  3080  00F414  0EFF               	movlw	255
  3081  00F416  237F               	addwfc	(efgtoa@w+1)& (0+255),f,b
  3082  00F418                     
  3083                           ; BSR set to: 0
  3084                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 372:         retu
      +                          rn pad(fp, &dbuf[0], w);
  3085  00F418  C02E  F013         	movff	efgtoa@fp,pad@fp
  3086  00F41C  C02F  F014         	movff	efgtoa@fp+1,pad@fp+1
  3087  00F420  0E00               	movlw	low _dbuf
  3088  00F422  6E15               	movwf	pad@buf^0,c
  3089  00F424  0E01               	movlw	high _dbuf
  3090  00F426  6E16               	movwf	(pad@buf+1)^0,c
  3091  00F428  C07E  F017         	movff	efgtoa@w,pad@p
  3092  00F42C  C07F  F018         	movff	efgtoa@w+1,pad@p+1
  3093  00F430  ECD5  F069         	call	_pad	;wreg free
  3094  00F434  C013  F02E         	movff	?_pad,?_efgtoa
  3095  00F438  C014  F02F         	movff	?_pad+1,?_efgtoa+1
  3096  00F43C  EF43  F07F         	goto	l1002
  3097  00F440                     l3617:
  3098                           
  3099                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 376:     u = 1.0;
  3100  00F440  0E00               	movlw	0
  3101  00F442  0100               	movlb	0	; () banked
  3102  00F444  6F94               	movwf	efgtoa@u& (0+255),b
  3103  00F446  0E00               	movlw	0
  3104  00F448  6F95               	movwf	(efgtoa@u+1)& (0+255),b
  3105  00F44A  0E80               	movlw	128
  3106  00F44C  6F96               	movwf	(efgtoa@u+2)& (0+255),b
  3107  00F44E  0E3F               	movlw	63
  3108  00F450  6F97               	movwf	(efgtoa@u+3)& (0+255),b
  3109                           
  3110                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 377:     e = 0;
  3111  00F452  0E00               	movlw	0
  3112  00F454  6F91               	movwf	(efgtoa@e+1)& (0+255),b
  3113  00F456  0E00               	movlw	0
  3114  00F458  6F90               	movwf	efgtoa@e& (0+255),b
  3115  00F45A                     
  3116                           ; BSR set to: 0
  3117                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 378:     if (!(g 
      +                          == 0.0)) {
  3118  00F45A  C08C  F001         	movff	efgtoa@g,___fleq@ff1
  3119  00F45E  C08D  F002         	movff	efgtoa@g+1,___fleq@ff1+1
  3120  00F462  C08E  F003         	movff	efgtoa@g+2,___fleq@ff1+2
  3121  00F466  C08F  F004         	movff	efgtoa@g+3,___fleq@ff1+3
  3122  00F46A  0E00               	movlw	0
  3123  00F46C  6E05               	movwf	___fleq@ff2^0,c
  3124  00F46E  0E00               	movlw	0
  3125  00F470  6E06               	movwf	(___fleq@ff2+1)^0,c
  3126  00F472  0E00               	movlw	0
  3127  00F474  6E07               	movwf	(___fleq@ff2+2)^0,c
  3128  00F476  0E00               	movlw	0
  3129  00F478  6E08               	movwf	(___fleq@ff2+3)^0,c
  3130  00F47A  ECC6  F068         	call	___fleq	;wreg free
  3131  00F47E  B0D8               	btfsc	status,0,c
  3132  00F480  EF44  F07A         	goto	u4061
  3133  00F484  EF46  F07A         	goto	u4060
  3134  00F488                     u4061:
  3135  00F488  EFC9  F07A         	goto	l3635
  3136  00F48C                     u4060:
  3137  00F48C  EF65  F07A         	goto	l3627
  3138  00F490                     l3623:
  3139                           
  3140                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 380:             
      +                          u = u*10.0;
  3141  00F490  C094  F001         	movff	efgtoa@u,___flmul@b
  3142  00F494  C095  F002         	movff	efgtoa@u+1,___flmul@b+1
  3143  00F498  C096  F003         	movff	efgtoa@u+2,___flmul@b+2
  3144  00F49C  C097  F004         	movff	efgtoa@u+3,___flmul@b+3
  3145  00F4A0  0E00               	movlw	0
  3146  00F4A2  6E05               	movwf	___flmul@a^0,c
  3147  00F4A4  0E00               	movlw	0
  3148  00F4A6  6E06               	movwf	(___flmul@a+1)^0,c
  3149  00F4A8  0E20               	movlw	32
  3150  00F4AA  6E07               	movwf	(___flmul@a+2)^0,c
  3151  00F4AC  0E41               	movlw	65
  3152  00F4AE  6E08               	movwf	(___flmul@a+3)^0,c
  3153  00F4B0  ECA1  F070         	call	___flmul	;wreg free
  3154  00F4B4  C001  F094         	movff	?___flmul,efgtoa@u
  3155  00F4B8  C002  F095         	movff	?___flmul+1,efgtoa@u+1
  3156  00F4BC  C003  F096         	movff	?___flmul+2,efgtoa@u+2
  3157  00F4C0  C004  F097         	movff	?___flmul+3,efgtoa@u+3
  3158  00F4C4                     
  3159                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 381:             
      +                          ++e;
  3160  00F4C4  0100               	movlb	0	; () banked
  3161  00F4C6  4B90               	infsnz	efgtoa@e& (0+255),f,b
  3162  00F4C8  2B91               	incf	(efgtoa@e+1)& (0+255),f,b
  3163  00F4CA                     l3627:
  3164                           
  3165                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 379:         whil
      +                          e (!(g < (u*10.0))) {
  3166  00F4CA  C08C  F01A         	movff	efgtoa@g,___flge@ff1
  3167  00F4CE  C08D  F01B         	movff	efgtoa@g+1,___flge@ff1+1
  3168  00F4D2  C08E  F01C         	movff	efgtoa@g+2,___flge@ff1+2
  3169  00F4D6  C08F  F01D         	movff	efgtoa@g+3,___flge@ff1+3
  3170  00F4DA  0E00               	movlw	0
  3171  00F4DC  6E05               	movwf	___flmul@a^0,c
  3172  00F4DE  0E00               	movlw	0
  3173  00F4E0  6E06               	movwf	(___flmul@a+1)^0,c
  3174  00F4E2  0E20               	movlw	32
  3175  00F4E4  6E07               	movwf	(___flmul@a+2)^0,c
  3176  00F4E6  0E41               	movlw	65
  3177  00F4E8  6E08               	movwf	(___flmul@a+3)^0,c
  3178  00F4EA  C094  F001         	movff	efgtoa@u,___flmul@b
  3179  00F4EE  C095  F002         	movff	efgtoa@u+1,___flmul@b+1
  3180  00F4F2  C096  F003         	movff	efgtoa@u+2,___flmul@b+2
  3181  00F4F6  C097  F004         	movff	efgtoa@u+3,___flmul@b+3
  3182  00F4FA  ECA1  F070         	call	___flmul	;wreg free
  3183  00F4FE  C001  F01E         	movff	?___flmul,___flge@ff2
  3184  00F502  C002  F01F         	movff	?___flmul+1,___flge@ff2+1
  3185  00F506  C003  F020         	movff	?___flmul+2,___flge@ff2+2
  3186  00F50A  C004  F021         	movff	?___flmul+3,___flge@ff2+3
  3187  00F50E  EC31  F06B         	call	___flge	;wreg free
  3188  00F512  B0D8               	btfsc	status,0,c
  3189  00F514  EF8E  F07A         	goto	u4071
  3190  00F518  EF90  F07A         	goto	u4070
  3191  00F51C                     u4071:
  3192  00F51C  EF48  F07A         	goto	l3623
  3193  00F520                     u4070:
  3194  00F520  EFB0  F07A         	goto	l3633
  3195  00F524                     l3629:
  3196                           
  3197                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 384:             
      +                          u = u/10.0;
  3198  00F524  C094  F001         	movff	efgtoa@u,___fldiv@b
  3199  00F528  C095  F002         	movff	efgtoa@u+1,___fldiv@b+1
  3200  00F52C  C096  F003         	movff	efgtoa@u+2,___fldiv@b+2
  3201  00F530  C097  F004         	movff	efgtoa@u+3,___fldiv@b+3
  3202  00F534  0E00               	movlw	0
  3203  00F536  6E05               	movwf	___fldiv@a^0,c
  3204  00F538  0E00               	movlw	0
  3205  00F53A  6E06               	movwf	(___fldiv@a+1)^0,c
  3206  00F53C  0E20               	movlw	32
  3207  00F53E  6E07               	movwf	(___fldiv@a+2)^0,c
  3208  00F540  0E41               	movlw	65
  3209  00F542  6E08               	movwf	(___fldiv@a+3)^0,c
  3210  00F544  ECD4  F06E         	call	___fldiv	;wreg free
  3211  00F548  C001  F094         	movff	?___fldiv,efgtoa@u
  3212  00F54C  C002  F095         	movff	?___fldiv+1,efgtoa@u+1
  3213  00F550  C003  F096         	movff	?___fldiv+2,efgtoa@u+2
  3214  00F554  C004  F097         	movff	?___fldiv+3,efgtoa@u+3
  3215  00F558                     
  3216                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 385:             
      +                          --e;
  3217  00F558  0100               	movlb	0	; () banked
  3218  00F55A  0790               	decf	efgtoa@e& (0+255),f,b
  3219  00F55C  A0D8               	btfss	status,0,c
  3220  00F55E  0791               	decf	(efgtoa@e+1)& (0+255),f,b
  3221  00F560                     l3633:
  3222                           
  3223                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 383:         whil
      +                          e (g < u) {
  3224  00F560  C08C  F01A         	movff	efgtoa@g,___flge@ff1
  3225  00F564  C08D  F01B         	movff	efgtoa@g+1,___flge@ff1+1
  3226  00F568  C08E  F01C         	movff	efgtoa@g+2,___flge@ff1+2
  3227  00F56C  C08F  F01D         	movff	efgtoa@g+3,___flge@ff1+3
  3228  00F570  C094  F01E         	movff	efgtoa@u,___flge@ff2
  3229  00F574  C095  F01F         	movff	efgtoa@u+1,___flge@ff2+1
  3230  00F578  C096  F020         	movff	efgtoa@u+2,___flge@ff2+2
  3231  00F57C  C097  F021         	movff	efgtoa@u+3,___flge@ff2+3
  3232  00F580  EC31  F06B         	call	___flge	;wreg free
  3233  00F584  A0D8               	btfss	status,0,c
  3234  00F586  EFC7  F07A         	goto	u4081
  3235  00F58A  EFC9  F07A         	goto	u4080
  3236  00F58E                     u4081:
  3237  00F58E  EF92  F07A         	goto	l3629
  3238  00F592                     u4080:
  3239  00F592                     l3635:
  3240                           
  3241                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 390:     mode = (
      +                          char)tolower((int)c);
  3242  00F592  C034  F007         	movff	efgtoa@c,tolower@c
  3243  00F596  6A08               	clrf	(tolower@c+1)^0,c
  3244  00F598  EC98  F067         	call	_tolower	;wreg free
  3245  00F59C  5007               	movf	?_tolower^0,w,c
  3246  00F59E  0100               	movlb	0	; () banked
  3247  00F5A0  6F81               	movwf	efgtoa@mode& (0+255),b
  3248  00F5A2                     
  3249                           ; BSR set to: 0
  3250                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 391:     nmode = 
      +                          mode;
  3251  00F5A2  C081  F080         	movff	efgtoa@mode,efgtoa@nmode
  3252  00F5A6                     
  3253                           ; BSR set to: 0
  3254                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 392:     if (mode
      +                           == 'g') {
  3255  00F5A6  0E67               	movlw	103
  3256  00F5A8  1981               	xorwf	efgtoa@mode& (0+255),w,b
  3257  00F5AA  A4D8               	btfss	status,2,c
  3258  00F5AC  EFDA  F07A         	goto	u4091
  3259  00F5B0  EFDC  F07A         	goto	u4090
  3260  00F5B4                     u4091:
  3261  00F5B4  EF02  F07B         	goto	l3649
  3262  00F5B8                     u4090:
  3263  00F5B8                     
  3264                           ; BSR set to: 0
  3265                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 393:   if (prec =
      +                          = 0) {
  3266  00F5B8  51CE               	movf	_prec& (0+255),w,b
  3267  00F5BA  11CF               	iorwf	(_prec+1)& (0+255),w,b
  3268  00F5BC  A4D8               	btfss	status,2,c
  3269  00F5BE  EFE3  F07A         	goto	u4101
  3270  00F5C2  EFE5  F07A         	goto	u4100
  3271  00F5C6                     u4101:
  3272  00F5C6  EFE9  F07A         	goto	l3645
  3273  00F5CA                     u4100:
  3274  00F5CA                     
  3275                           ; BSR set to: 0
  3276                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 394:    prec = 1;
  3277  00F5CA  0E00               	movlw	0
  3278  00F5CC  6FCF               	movwf	(_prec+1)& (0+255),b
  3279  00F5CE  0E01               	movlw	1
  3280  00F5D0  6FCE               	movwf	_prec& (0+255),b
  3281  00F5D2                     l3645:
  3282                           
  3283                           ; BSR set to: 0
  3284                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 396:         p = 
      +                          (0 < prec) ? prec : 6;
  3285  00F5D2  BFCF               	btfsc	(_prec+1)& (0+255),7,b
  3286  00F5D4  EFF6  F07A         	goto	u4110
  3287  00F5D8  51CF               	movf	(_prec+1)& (0+255),w,b
  3288  00F5DA  E106               	bnz	u4111
  3289  00F5DC  05CE               	decf	_prec& (0+255),w,b
  3290  00F5DE  B0D8               	btfsc	status,0,c
  3291  00F5E0  EFF4  F07A         	goto	u4111
  3292  00F5E4  EFF6  F07A         	goto	u4110
  3293  00F5E8                     u4111:
  3294  00F5E8  EFFC  F07A         	goto	l1020
  3295  00F5EC                     u4110:
  3296  00F5EC                     l3647:
  3297                           
  3298                           ; BSR set to: 0
  3299  00F5EC  0E00               	movlw	0
  3300  00F5EE  6F7D               	movwf	(efgtoa@p+1)& (0+255),b
  3301  00F5F0  0E06               	movlw	6
  3302  00F5F2  6F7C               	movwf	efgtoa@p& (0+255),b
  3303  00F5F4  EF0B  F07B         	goto	l3655
  3304  00F5F8                     l1020:
  3305                           
  3306                           ; BSR set to: 0
  3307  00F5F8  C0CE  F07C         	movff	_prec,efgtoa@p
  3308  00F5FC  C0CF  F07D         	movff	_prec+1,efgtoa@p+1
  3309  00F600  EF0B  F07B         	goto	l3655
  3310  00F604                     l3649:
  3311                           
  3312                           ; BSR set to: 0
  3313                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 398:         p = 
      +                          (prec < 0) ? 6 : prec;
  3314  00F604  BFCF               	btfsc	(_prec+1)& (0+255),7,b
  3315  00F606  EF07  F07B         	goto	u4121
  3316  00F60A  EF09  F07B         	goto	u4120
  3317  00F60E                     u4121:
  3318  00F60E  EFF6  F07A         	goto	l3647
  3319  00F612                     u4120:
  3320  00F612  EFFC  F07A         	goto	l1020
  3321  00F616                     l3655:
  3322                           
  3323                           ; BSR set to: 0
  3324                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 402:     if (mode
      +                           == 'g') {
  3325  00F616  0E67               	movlw	103
  3326  00F618  1981               	xorwf	efgtoa@mode& (0+255),w,b
  3327  00F61A  A4D8               	btfss	status,2,c
  3328  00F61C  EF12  F07B         	goto	u4131
  3329  00F620  EF14  F07B         	goto	u4130
  3330  00F624                     u4131:
  3331  00F624  EF43  F07B         	goto	l3665
  3332  00F628                     u4130:
  3333  00F628                     
  3334                           ; BSR set to: 0
  3335                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 403:         if (
      +                          !(e < -4) && !((p - 1) < e)) {
  3336  00F628  AF91               	btfss	(efgtoa@e+1)& (0+255),7,b
  3337  00F62A  EF22  F07B         	goto	u4140
  3338  00F62E  0EFC               	movlw	252
  3339  00F630  5D90               	subwf	efgtoa@e& (0+255),w,b
  3340  00F632  0EFF               	movlw	255
  3341  00F634  5991               	subwfb	(efgtoa@e+1)& (0+255),w,b
  3342  00F636  A0D8               	btfss	status,0,c
  3343  00F638  EF20  F07B         	goto	u4141
  3344  00F63C  EF22  F07B         	goto	u4140
  3345  00F640                     u4141:
  3346  00F640  EF41  F07B         	goto	l3663
  3347  00F644                     u4140:
  3348  00F644                     
  3349                           ; BSR set to: 0
  3350  00F644  0EFF               	movlw	255
  3351  00F646  6E35               	movwf	??_efgtoa^0,c
  3352  00F648  0EFF               	movlw	255
  3353  00F64A  6E36               	movwf	(??_efgtoa+1)^0,c
  3354  00F64C  C07C  F037         	movff	efgtoa@p,??_efgtoa+2
  3355  00F650  C07D  F038         	movff	efgtoa@p+1,??_efgtoa+3
  3356  00F654  5035               	movf	??_efgtoa^0,w,c
  3357  00F656  2637               	addwf	(??_efgtoa+2)^0,f,c
  3358  00F658  5036               	movf	(??_efgtoa+1)^0,w,c
  3359  00F65A  2238               	addwfc	(??_efgtoa+3)^0,f,c
  3360  00F65C  5190               	movf	efgtoa@e& (0+255),w,b
  3361  00F65E  5C37               	subwf	(??_efgtoa+2)^0,w,c
  3362  00F660  5038               	movf	(??_efgtoa+3)^0,w,c
  3363  00F662  0A80               	xorlw	128
  3364  00F664  6E39               	movwf	(??_efgtoa+4)^0,c
  3365  00F666  5191               	movf	(efgtoa@e+1)& (0+255),w,b
  3366  00F668  0A80               	xorlw	128
  3367  00F66A  5839               	subwfb	(??_efgtoa+4)^0,w,c
  3368  00F66C  A0D8               	btfss	status,0,c
  3369  00F66E  EF3B  F07B         	goto	u4151
  3370  00F672  EF3D  F07B         	goto	u4150
  3371  00F676                     u4151:
  3372  00F676  EF41  F07B         	goto	l3663
  3373  00F67A                     u4150:
  3374  00F67A                     
  3375                           ; BSR set to: 0
  3376                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 404:             
      +                          nmode = 'f';
  3377  00F67A  0E66               	movlw	102
  3378  00F67C  6F80               	movwf	efgtoa@nmode& (0+255),b
  3379                           
  3380                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 405:         } el
      +                          se {
  3381  00F67E  EF43  F07B         	goto	l3665
  3382  00F682                     l3663:
  3383                           
  3384                           ; BSR set to: 0
  3385                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 406:             
      +                          nmode = 'e';
  3386  00F682  0E65               	movlw	101
  3387  00F684  6F80               	movwf	efgtoa@nmode& (0+255),b
  3388  00F686                     l3665:
  3389                           
  3390                           ; BSR set to: 0
  3391                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 411:     m = p;
  3392  00F686  C07C  F072         	movff	efgtoa@p,efgtoa@m
  3393  00F68A  C07D  F073         	movff	efgtoa@p+1,efgtoa@m+1
  3394  00F68E                     
  3395                           ; BSR set to: 0
  3396                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 412:     if (!(mo
      +                          de == 'g') || ((nmode == 'f') && (e < 0))) {
  3397  00F68E  0E67               	movlw	103
  3398  00F690  1981               	xorwf	efgtoa@mode& (0+255),w,b
  3399  00F692  A4D8               	btfss	status,2,c
  3400  00F694  EF4E  F07B         	goto	u4161
  3401  00F698  EF50  F07B         	goto	u4160
  3402  00F69C                     u4161:
  3403  00F69C  EF60  F07B         	goto	l3673
  3404  00F6A0                     u4160:
  3405  00F6A0                     
  3406                           ; BSR set to: 0
  3407  00F6A0  0E66               	movlw	102
  3408  00F6A2  1980               	xorwf	efgtoa@nmode& (0+255),w,b
  3409  00F6A4  A4D8               	btfss	status,2,c
  3410  00F6A6  EF57  F07B         	goto	u4171
  3411  00F6AA  EF59  F07B         	goto	u4170
  3412  00F6AE                     u4171:
  3413  00F6AE  EF62  F07B         	goto	l3675
  3414  00F6B2                     u4170:
  3415  00F6B2                     
  3416                           ; BSR set to: 0
  3417  00F6B2  BF91               	btfsc	(efgtoa@e+1)& (0+255),7,b
  3418  00F6B4  EF60  F07B         	goto	u4180
  3419  00F6B8  EF5E  F07B         	goto	u4181
  3420  00F6BC                     u4181:
  3421  00F6BC  EF62  F07B         	goto	l3675
  3422  00F6C0                     u4180:
  3423  00F6C0                     l3673:
  3424                           
  3425                           ; BSR set to: 0
  3426                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 413:         ++m;
  3427  00F6C0  4B72               	infsnz	efgtoa@m& (0+255),f,b
  3428  00F6C2  2B73               	incf	(efgtoa@m+1)& (0+255),f,b
  3429  00F6C4                     l3675:
  3430                           
  3431                           ; BSR set to: 0
  3432                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 417:     if (nmod
      +                          e == 'f') {
  3433  00F6C4  0E66               	movlw	102
  3434  00F6C6  1980               	xorwf	efgtoa@nmode& (0+255),w,b
  3435  00F6C8  A4D8               	btfss	status,2,c
  3436  00F6CA  EF69  F07B         	goto	u4191
  3437  00F6CE  EF6B  F07B         	goto	u4190
  3438  00F6D2                     u4191:
  3439  00F6D2  EF8B  F07B         	goto	l3685
  3440  00F6D6                     u4190:
  3441  00F6D6                     
  3442                           ; BSR set to: 0
  3443                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 418:         if (
      +                          e < 0) {
  3444  00F6D6  BF91               	btfsc	(efgtoa@e+1)& (0+255),7,b
  3445  00F6D8  EF72  F07B         	goto	u4200
  3446  00F6DC  EF70  F07B         	goto	u4201
  3447  00F6E0                     u4201:
  3448  00F6E0  EF7E  F07B         	goto	l3681
  3449  00F6E4                     u4200:
  3450  00F6E4                     
  3451                           ; BSR set to: 0
  3452                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 419:             
      +                          u = 1.0;
  3453  00F6E4  0E00               	movlw	0
  3454  00F6E6  6F94               	movwf	efgtoa@u& (0+255),b
  3455  00F6E8  0E00               	movlw	0
  3456  00F6EA  6F95               	movwf	(efgtoa@u+1)& (0+255),b
  3457  00F6EC  0E80               	movlw	128
  3458  00F6EE  6F96               	movwf	(efgtoa@u+2)& (0+255),b
  3459  00F6F0  0E3F               	movlw	63
  3460  00F6F2  6F97               	movwf	(efgtoa@u+3)& (0+255),b
  3461                           
  3462                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 420:             
      +                          e = 0;
  3463  00F6F4  0E00               	movlw	0
  3464  00F6F6  6F91               	movwf	(efgtoa@e+1)& (0+255),b
  3465  00F6F8  0E00               	movlw	0
  3466  00F6FA  6F90               	movwf	efgtoa@e& (0+255),b
  3467  00F6FC                     l3681:
  3468                           
  3469                           ; BSR set to: 0
  3470                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 422:         if (
      +                          !(mode == 'g')) {
  3471  00F6FC  0E67               	movlw	103
  3472  00F6FE  1981               	xorwf	efgtoa@mode& (0+255),w,b
  3473  00F700  B4D8               	btfsc	status,2,c
  3474  00F702  EF85  F07B         	goto	u4211
  3475  00F706  EF87  F07B         	goto	u4210
  3476  00F70A                     u4211:
  3477  00F70A  EF8B  F07B         	goto	l3685
  3478  00F70E                     u4210:
  3479  00F70E                     
  3480                           ; BSR set to: 0
  3481                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 423:             
      +                          m += e;
  3482  00F70E  5190               	movf	efgtoa@e& (0+255),w,b
  3483  00F710  2772               	addwf	efgtoa@m& (0+255),f,b
  3484  00F712  5191               	movf	(efgtoa@e+1)& (0+255),w,b
  3485  00F714  2373               	addwfc	(efgtoa@m+1)& (0+255),f,b
  3486  00F716                     l3685:
  3487                           
  3488                           ; BSR set to: 0
  3489                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 428:     i = 0;
  3490  00F716  0E00               	movlw	0
  3491  00F718  6F8B               	movwf	(efgtoa@i+1)& (0+255),b
  3492  00F71A  0E00               	movlw	0
  3493  00F71C  6F8A               	movwf	efgtoa@i& (0+255),b
  3494  00F71E                     
  3495                           ; BSR set to: 0
  3496                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 429:     h = g;
  3497  00F71E  C08C  F082         	movff	efgtoa@g,efgtoa@h
  3498  00F722  C08D  F083         	movff	efgtoa@g+1,efgtoa@h+1
  3499  00F726  C08E  F084         	movff	efgtoa@g+2,efgtoa@h+2
  3500  00F72A  C08F  F085         	movff	efgtoa@g+3,efgtoa@h+3
  3501  00F72E                     
  3502                           ; BSR set to: 0
  3503                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 430:     ou = u;
  3504  00F72E  C094  F074         	movff	efgtoa@u,efgtoa@ou
  3505  00F732  C095  F075         	movff	efgtoa@u+1,efgtoa@ou+1
  3506  00F736  C096  F076         	movff	efgtoa@u+2,efgtoa@ou+2
  3507  00F73A  C097  F077         	movff	efgtoa@u+3,efgtoa@ou+3
  3508                           
  3509                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 431:     while (i
      +                           < m) {
  3510  00F73E  EF1C  F07C         	goto	l3699
  3511  00F742                     l3691:
  3512                           
  3513                           ; BSR set to: 0
  3514                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 432:         l = 
      +                          floorf(h/u);
  3515  00F742  C082  F001         	movff	efgtoa@h,___fldiv@b
  3516  00F746  C083  F002         	movff	efgtoa@h+1,___fldiv@b+1
  3517  00F74A  C084  F003         	movff	efgtoa@h+2,___fldiv@b+2
  3518  00F74E  C085  F004         	movff	efgtoa@h+3,___fldiv@b+3
  3519  00F752  C094  F005         	movff	efgtoa@u,___fldiv@a
  3520  00F756  C095  F006         	movff	efgtoa@u+1,___fldiv@a+1
  3521  00F75A  C096  F007         	movff	efgtoa@u+2,___fldiv@a+2
  3522  00F75E  C097  F008         	movff	efgtoa@u+3,___fldiv@a+3
  3523  00F762  ECD4  F06E         	call	___fldiv	;wreg free
  3524  00F766  C001  F01A         	movff	?___fldiv,floorf@x
  3525  00F76A  C002  F01B         	movff	?___fldiv+1,floorf@x+1
  3526  00F76E  C003  F01C         	movff	?___fldiv+2,floorf@x+2
  3527  00F772  C004  F01D         	movff	?___fldiv+3,floorf@x+3
  3528  00F776  ECCB  F06D         	call	_floorf	;wreg free
  3529  00F77A  C01A  F086         	movff	?_floorf,efgtoa@l
  3530  00F77E  C01B  F087         	movff	?_floorf+1,efgtoa@l+1
  3531  00F782  C01C  F088         	movff	?_floorf+2,efgtoa@l+2
  3532  00F786  C01D  F089         	movff	?_floorf+3,efgtoa@l+3
  3533                           
  3534                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 433:         d = 
      +                          (int)l;
  3535  00F78A  C086  F001         	movff	efgtoa@l,___fltol@f1
  3536  00F78E  C087  F002         	movff	efgtoa@l+1,___fltol@f1+1
  3537  00F792  C088  F003         	movff	efgtoa@l+2,___fltol@f1+2
  3538  00F796  C089  F004         	movff	efgtoa@l+3,___fltol@f1+3
  3539  00F79A  ECB3  F06B         	call	___fltol	;wreg free
  3540  00F79E  C001  F078         	movff	?___fltol,efgtoa@d
  3541  00F7A2  C002  F079         	movff	?___fltol+1,efgtoa@d+1
  3542  00F7A6                     
  3543                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 434:         h -=
      +                           l*u;
  3544  00F7A6  C082  F01A         	movff	efgtoa@h,___flsub@b
  3545  00F7AA  C083  F01B         	movff	efgtoa@h+1,___flsub@b+1
  3546  00F7AE  C084  F01C         	movff	efgtoa@h+2,___flsub@b+2
  3547  00F7B2  C085  F01D         	movff	efgtoa@h+3,___flsub@b+3
  3548  00F7B6  C094  F005         	movff	efgtoa@u,___flmul@a
  3549  00F7BA  C095  F006         	movff	efgtoa@u+1,___flmul@a+1
  3550  00F7BE  C096  F007         	movff	efgtoa@u+2,___flmul@a+2
  3551  00F7C2  C097  F008         	movff	efgtoa@u+3,___flmul@a+3
  3552  00F7C6  C086  F001         	movff	efgtoa@l,___flmul@b
  3553  00F7CA  C087  F002         	movff	efgtoa@l+1,___flmul@b+1
  3554  00F7CE  C088  F003         	movff	efgtoa@l+2,___flmul@b+2
  3555  00F7D2  C089  F004         	movff	efgtoa@l+3,___flmul@b+3
  3556  00F7D6  ECA1  F070         	call	___flmul	;wreg free
  3557  00F7DA  C001  F01E         	movff	?___flmul,___flsub@a
  3558  00F7DE  C002  F01F         	movff	?___flmul+1,___flsub@a+1
  3559  00F7E2  C003  F020         	movff	?___flmul+2,___flsub@a+2
  3560  00F7E6  C004  F021         	movff	?___flmul+3,___flsub@a+3
  3561  00F7EA  EC1D  F067         	call	___flsub	;wreg free
  3562  00F7EE  C01A  F082         	movff	?___flsub,efgtoa@h
  3563  00F7F2  C01B  F083         	movff	?___flsub+1,efgtoa@h+1
  3564  00F7F6  C01C  F084         	movff	?___flsub+2,efgtoa@h+2
  3565  00F7FA  C01D  F085         	movff	?___flsub+3,efgtoa@h+3
  3566  00F7FE                     
  3567                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 435:         u = 
      +                          u/10.0;
  3568  00F7FE  C094  F001         	movff	efgtoa@u,___fldiv@b
  3569  00F802  C095  F002         	movff	efgtoa@u+1,___fldiv@b+1
  3570  00F806  C096  F003         	movff	efgtoa@u+2,___fldiv@b+2
  3571  00F80A  C097  F004         	movff	efgtoa@u+3,___fldiv@b+3
  3572  00F80E  0E00               	movlw	0
  3573  00F810  6E05               	movwf	___fldiv@a^0,c
  3574  00F812  0E00               	movlw	0
  3575  00F814  6E06               	movwf	(___fldiv@a+1)^0,c
  3576  00F816  0E20               	movlw	32
  3577  00F818  6E07               	movwf	(___fldiv@a+2)^0,c
  3578  00F81A  0E41               	movlw	65
  3579  00F81C  6E08               	movwf	(___fldiv@a+3)^0,c
  3580  00F81E  ECD4  F06E         	call	___fldiv	;wreg free
  3581  00F822  C001  F094         	movff	?___fldiv,efgtoa@u
  3582  00F826  C002  F095         	movff	?___fldiv+1,efgtoa@u+1
  3583  00F82A  C003  F096         	movff	?___fldiv+2,efgtoa@u+2
  3584  00F82E  C004  F097         	movff	?___fldiv+3,efgtoa@u+3
  3585  00F832                     
  3586                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 436:         ++i;
  3587  00F832  0100               	movlb	0	; () banked
  3588  00F834  4B8A               	infsnz	efgtoa@i& (0+255),f,b
  3589  00F836  2B8B               	incf	(efgtoa@i+1)& (0+255),f,b
  3590  00F838                     l3699:
  3591                           
  3592                           ; BSR set to: 0
  3593                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 431:     while (i
      +                           < m) {
  3594  00F838  5172               	movf	efgtoa@m& (0+255),w,b
  3595  00F83A  5D8A               	subwf	efgtoa@i& (0+255),w,b
  3596  00F83C  518B               	movf	(efgtoa@i+1)& (0+255),w,b
  3597  00F83E  0A80               	xorlw	128
  3598  00F840  6E35               	movwf	??_efgtoa^0,c
  3599  00F842  5173               	movf	(efgtoa@m+1)& (0+255),w,b
  3600  00F844  0A80               	xorlw	128
  3601  00F846  5835               	subwfb	??_efgtoa^0,w,c
  3602  00F848  A0D8               	btfss	status,0,c
  3603  00F84A  EF29  F07C         	goto	u4221
  3604  00F84E  EF2B  F07C         	goto	u4220
  3605  00F852                     u4221:
  3606  00F852  EFA1  F07B         	goto	l3691
  3607  00F856                     u4220:
  3608  00F856                     
  3609                           ; BSR set to: 0
  3610                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 440:     l = u*5.
      +                          0;
  3611  00F856  C094  F001         	movff	efgtoa@u,___flmul@b
  3612  00F85A  C095  F002         	movff	efgtoa@u+1,___flmul@b+1
  3613  00F85E  C096  F003         	movff	efgtoa@u+2,___flmul@b+2
  3614  00F862  C097  F004         	movff	efgtoa@u+3,___flmul@b+3
  3615  00F866  0E00               	movlw	0
  3616  00F868  6E05               	movwf	___flmul@a^0,c
  3617  00F86A  0E00               	movlw	0
  3618  00F86C  6E06               	movwf	(___flmul@a+1)^0,c
  3619  00F86E  0EA0               	movlw	160
  3620  00F870  6E07               	movwf	(___flmul@a+2)^0,c
  3621  00F872  0E40               	movlw	64
  3622  00F874  6E08               	movwf	(___flmul@a+3)^0,c
  3623  00F876  ECA1  F070         	call	___flmul	;wreg free
  3624  00F87A  C001  F086         	movff	?___flmul,efgtoa@l
  3625  00F87E  C002  F087         	movff	?___flmul+1,efgtoa@l+1
  3626  00F882  C003  F088         	movff	?___flmul+2,efgtoa@l+2
  3627  00F886  C004  F089         	movff	?___flmul+3,efgtoa@l+3
  3628  00F88A                     
  3629                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 441:     if (h < 
      +                          l) {
  3630  00F88A  C082  F01A         	movff	efgtoa@h,___flge@ff1
  3631  00F88E  C083  F01B         	movff	efgtoa@h+1,___flge@ff1+1
  3632  00F892  C084  F01C         	movff	efgtoa@h+2,___flge@ff1+2
  3633  00F896  C085  F01D         	movff	efgtoa@h+3,___flge@ff1+3
  3634  00F89A  C086  F01E         	movff	efgtoa@l,___flge@ff2
  3635  00F89E  C087  F01F         	movff	efgtoa@l+1,___flge@ff2+1
  3636  00F8A2  C088  F020         	movff	efgtoa@l+2,___flge@ff2+2
  3637  00F8A6  C089  F021         	movff	efgtoa@l+3,___flge@ff2+3
  3638  00F8AA  EC31  F06B         	call	___flge	;wreg free
  3639  00F8AE  B0D8               	btfsc	status,0,c
  3640  00F8B0  EF5C  F07C         	goto	u4231
  3641  00F8B4  EF5E  F07C         	goto	u4230
  3642  00F8B8                     u4231:
  3643  00F8B8  EF69  F07C         	goto	l3707
  3644  00F8BC                     u4230:
  3645  00F8BC                     
  3646                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 442:         l = 
      +                          0.0;
  3647  00F8BC  0E00               	movlw	0
  3648  00F8BE  0100               	movlb	0	; () banked
  3649  00F8C0  6F86               	movwf	efgtoa@l& (0+255),b
  3650  00F8C2  0E00               	movlw	0
  3651  00F8C4  6F87               	movwf	(efgtoa@l+1)& (0+255),b
  3652  00F8C6  0E00               	movlw	0
  3653  00F8C8  6F88               	movwf	(efgtoa@l+2)& (0+255),b
  3654  00F8CA  0E00               	movlw	0
  3655  00F8CC  6F89               	movwf	(efgtoa@l+3)& (0+255),b
  3656                           
  3657                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 443:     } else {
  3658  00F8CE  EF92  F07C         	goto	l3713
  3659  00F8D2                     l3707:
  3660                           
  3661                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 445:         if (
      +                          (h == l) && !(d % 2)) {
  3662  00F8D2  C082  F001         	movff	efgtoa@h,___fleq@ff1
  3663  00F8D6  C083  F002         	movff	efgtoa@h+1,___fleq@ff1+1
  3664  00F8DA  C084  F003         	movff	efgtoa@h+2,___fleq@ff1+2
  3665  00F8DE  C085  F004         	movff	efgtoa@h+3,___fleq@ff1+3
  3666  00F8E2  C086  F005         	movff	efgtoa@l,___fleq@ff2
  3667  00F8E6  C087  F006         	movff	efgtoa@l+1,___fleq@ff2+1
  3668  00F8EA  C088  F007         	movff	efgtoa@l+2,___fleq@ff2+2
  3669  00F8EE  C089  F008         	movff	efgtoa@l+3,___fleq@ff2+3
  3670  00F8F2  ECC6  F068         	call	___fleq	;wreg free
  3671  00F8F6  A0D8               	btfss	status,0,c
  3672  00F8F8  EF80  F07C         	goto	u4241
  3673  00F8FC  EF82  F07C         	goto	u4240
  3674  00F900                     u4241:
  3675  00F900  EF92  F07C         	goto	l3713
  3676  00F904                     u4240:
  3677  00F904  0100               	movlb	0	; () banked
  3678  00F906  B178               	btfsc	efgtoa@d& (0+255),0,b
  3679  00F908  EF88  F07C         	goto	u4251
  3680  00F90C  EF8A  F07C         	goto	u4250
  3681  00F910                     u4251:
  3682  00F910  EF92  F07C         	goto	l3713
  3683  00F914                     u4250:
  3684  00F914                     
  3685                           ; BSR set to: 0
  3686                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 446:             
      +                          l = 0.0;
  3687  00F914  0E00               	movlw	0
  3688  00F916  6F86               	movwf	efgtoa@l& (0+255),b
  3689  00F918  0E00               	movlw	0
  3690  00F91A  6F87               	movwf	(efgtoa@l+1)& (0+255),b
  3691  00F91C  0E00               	movlw	0
  3692  00F91E  6F88               	movwf	(efgtoa@l+2)& (0+255),b
  3693  00F920  0E00               	movlw	0
  3694  00F922  6F89               	movwf	(efgtoa@l+3)& (0+255),b
  3695  00F924                     l3713:
  3696                           
  3697                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 451:     h = g + 
      +                          l;
  3698  00F924  C08C  F001         	movff	efgtoa@g,___fladd@b
  3699  00F928  C08D  F002         	movff	efgtoa@g+1,___fladd@b+1
  3700  00F92C  C08E  F003         	movff	efgtoa@g+2,___fladd@b+2
  3701  00F930  C08F  F004         	movff	efgtoa@g+3,___fladd@b+3
  3702  00F934  C086  F005         	movff	efgtoa@l,___fladd@a
  3703  00F938  C087  F006         	movff	efgtoa@l+1,___fladd@a+1
  3704  00F93C  C088  F007         	movff	efgtoa@l+2,___fladd@a+2
  3705  00F940  C089  F008         	movff	efgtoa@l+3,___fladd@a+3
  3706  00F944  ECC8  F072         	call	___fladd	;wreg free
  3707  00F948  C001  F082         	movff	?___fladd,efgtoa@h
  3708  00F94C  C002  F083         	movff	?___fladd+1,efgtoa@h+1
  3709  00F950  C003  F084         	movff	?___fladd+2,efgtoa@h+2
  3710  00F954  C004  F085         	movff	?___fladd+3,efgtoa@h+3
  3711  00F958                     
  3712                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 453:  if (h >= (o
      +                          u*10.0)) {
  3713  00F958  C082  F01A         	movff	efgtoa@h,___flge@ff1
  3714  00F95C  C083  F01B         	movff	efgtoa@h+1,___flge@ff1+1
  3715  00F960  C084  F01C         	movff	efgtoa@h+2,___flge@ff1+2
  3716  00F964  C085  F01D         	movff	efgtoa@h+3,___flge@ff1+3
  3717  00F968  0E00               	movlw	0
  3718  00F96A  6E05               	movwf	___flmul@a^0,c
  3719  00F96C  0E00               	movlw	0
  3720  00F96E  6E06               	movwf	(___flmul@a+1)^0,c
  3721  00F970  0E20               	movlw	32
  3722  00F972  6E07               	movwf	(___flmul@a+2)^0,c
  3723  00F974  0E41               	movlw	65
  3724  00F976  6E08               	movwf	(___flmul@a+3)^0,c
  3725  00F978  C074  F001         	movff	efgtoa@ou,___flmul@b
  3726  00F97C  C075  F002         	movff	efgtoa@ou+1,___flmul@b+1
  3727  00F980  C076  F003         	movff	efgtoa@ou+2,___flmul@b+2
  3728  00F984  C077  F004         	movff	efgtoa@ou+3,___flmul@b+3
  3729  00F988  ECA1  F070         	call	___flmul	;wreg free
  3730  00F98C  C001  F01E         	movff	?___flmul,___flge@ff2
  3731  00F990  C002  F01F         	movff	?___flmul+1,___flge@ff2+1
  3732  00F994  C003  F020         	movff	?___flmul+2,___flge@ff2+2
  3733  00F998  C004  F021         	movff	?___flmul+3,___flge@ff2+3
  3734  00F99C  EC31  F06B         	call	___flge	;wreg free
  3735  00F9A0  A0D8               	btfss	status,0,c
  3736  00F9A2  EFD5  F07C         	goto	u4261
  3737  00F9A6  EFD7  F07C         	goto	u4260
  3738  00F9AA                     u4261:
  3739  00F9AA  EF00  F07D         	goto	l3725
  3740  00F9AE                     u4260:
  3741  00F9AE                     
  3742                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 454:   e++;
  3743  00F9AE  0100               	movlb	0	; () banked
  3744  00F9B0  4B90               	infsnz	efgtoa@e& (0+255),f,b
  3745  00F9B2  2B91               	incf	(efgtoa@e+1)& (0+255),f,b
  3746  00F9B4                     
  3747                           ; BSR set to: 0
  3748                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 455:   ou *= 10.0
      +                          ;
  3749  00F9B4  C074  F001         	movff	efgtoa@ou,___flmul@b
  3750  00F9B8  C075  F002         	movff	efgtoa@ou+1,___flmul@b+1
  3751  00F9BC  C076  F003         	movff	efgtoa@ou+2,___flmul@b+2
  3752  00F9C0  C077  F004         	movff	efgtoa@ou+3,___flmul@b+3
  3753  00F9C4  0E00               	movlw	0
  3754  00F9C6  6E05               	movwf	___flmul@a^0,c
  3755  00F9C8  0E00               	movlw	0
  3756  00F9CA  6E06               	movwf	(___flmul@a+1)^0,c
  3757  00F9CC  0E20               	movlw	32
  3758  00F9CE  6E07               	movwf	(___flmul@a+2)^0,c
  3759  00F9D0  0E41               	movlw	65
  3760  00F9D2  6E08               	movwf	(___flmul@a+3)^0,c
  3761  00F9D4  ECA1  F070         	call	___flmul	;wreg free
  3762  00F9D8  C001  F074         	movff	?___flmul,efgtoa@ou
  3763  00F9DC  C002  F075         	movff	?___flmul+1,efgtoa@ou+1
  3764  00F9E0  C003  F076         	movff	?___flmul+2,efgtoa@ou+2
  3765  00F9E4  C004  F077         	movff	?___flmul+3,efgtoa@ou+3
  3766  00F9E8                     
  3767                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 456:   if (nmode 
      +                          == 'f') {
  3768  00F9E8  0E66               	movlw	102
  3769  00F9EA  0100               	movlb	0	; () banked
  3770  00F9EC  1980               	xorwf	efgtoa@nmode& (0+255),w,b
  3771  00F9EE  A4D8               	btfss	status,2,c
  3772  00F9F0  EFFC  F07C         	goto	u4271
  3773  00F9F4  EFFE  F07C         	goto	u4270
  3774  00F9F8                     u4271:
  3775  00F9F8  EF00  F07D         	goto	l3725
  3776  00F9FC                     u4270:
  3777  00F9FC                     
  3778                           ; BSR set to: 0
  3779                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 458:    m++;
  3780  00F9FC  4B72               	infsnz	efgtoa@m& (0+255),f,b
  3781  00F9FE  2B73               	incf	(efgtoa@m+1)& (0+255),f,b
  3782  00FA00                     l3725:
  3783                           
  3784                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 463:     u = ou;
  3785  00FA00  C074  F094         	movff	efgtoa@ou,efgtoa@u
  3786  00FA04  C075  F095         	movff	efgtoa@ou+1,efgtoa@u+1
  3787  00FA08  C076  F096         	movff	efgtoa@ou+2,efgtoa@u+2
  3788  00FA0C  C077  F097         	movff	efgtoa@ou+3,efgtoa@u+3
  3789  00FA10                     
  3790                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 464:     ne = (nm
      +                          ode == 'e') ? 0 : e;
  3791  00FA10  0E65               	movlw	101
  3792  00FA12  0100               	movlb	0	; () banked
  3793  00FA14  1980               	xorwf	efgtoa@nmode& (0+255),w,b
  3794  00FA16  B4D8               	btfsc	status,2,c
  3795  00FA18  EF10  F07D         	goto	u4281
  3796  00FA1C  EF12  F07D         	goto	u4280
  3797  00FA20                     u4281:
  3798  00FA20  EF18  F07D         	goto	l3731
  3799  00FA24                     u4280:
  3800  00FA24                     
  3801                           ; BSR set to: 0
  3802  00FA24  C090  F070         	movff	efgtoa@e,efgtoa@ne
  3803  00FA28  C091  F071         	movff	efgtoa@e+1,efgtoa@ne+1
  3804  00FA2C  EF1C  F07D         	goto	l1048
  3805  00FA30                     l3731:
  3806                           
  3807                           ; BSR set to: 0
  3808  00FA30  0E00               	movlw	0
  3809  00FA32  6F71               	movwf	(efgtoa@ne+1)& (0+255),b
  3810  00FA34  0E00               	movlw	0
  3811  00FA36  6F70               	movwf	efgtoa@ne& (0+255),b
  3812  00FA38                     l1048:
  3813                           
  3814                           ; BSR set to: 0
  3815                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 465:     pp = 0;
  3816  00FA38  0E00               	movlw	0
  3817  00FA3A  6F6F               	movwf	(efgtoa@pp+1)& (0+255),b
  3818  00FA3C  0E00               	movlw	0
  3819  00FA3E  6F6E               	movwf	efgtoa@pp& (0+255),b
  3820                           
  3821                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 466:     t = 0;
  3822  00FA40  0E00               	movlw	0
  3823  00FA42  6F6D               	movwf	(efgtoa@t+1)& (0+255),b
  3824  00FA44  0E00               	movlw	0
  3825  00FA46  6F6C               	movwf	efgtoa@t& (0+255),b
  3826                           
  3827                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 467:     i = 0;
  3828  00FA48  0E00               	movlw	0
  3829  00FA4A  6F8B               	movwf	(efgtoa@i+1)& (0+255),b
  3830  00FA4C  0E00               	movlw	0
  3831  00FA4E  6F8A               	movwf	efgtoa@i& (0+255),b
  3832                           
  3833                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 468:     while ((
      +                          i < m) && (n < (80 - 5))) {
  3834  00FA50  EF17  F07E         	goto	l3781
  3835  00FA54                     l3733:
  3836                           
  3837                           ; BSR set to: 0
  3838                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 469:         l = 
      +                          floorf(h/u);
  3839  00FA54  C082  F001         	movff	efgtoa@h,___fldiv@b
  3840  00FA58  C083  F002         	movff	efgtoa@h+1,___fldiv@b+1
  3841  00FA5C  C084  F003         	movff	efgtoa@h+2,___fldiv@b+2
  3842  00FA60  C085  F004         	movff	efgtoa@h+3,___fldiv@b+3
  3843  00FA64  C094  F005         	movff	efgtoa@u,___fldiv@a
  3844  00FA68  C095  F006         	movff	efgtoa@u+1,___fldiv@a+1
  3845  00FA6C  C096  F007         	movff	efgtoa@u+2,___fldiv@a+2
  3846  00FA70  C097  F008         	movff	efgtoa@u+3,___fldiv@a+3
  3847  00FA74  ECD4  F06E         	call	___fldiv	;wreg free
  3848  00FA78  C001  F01A         	movff	?___fldiv,floorf@x
  3849  00FA7C  C002  F01B         	movff	?___fldiv+1,floorf@x+1
  3850  00FA80  C003  F01C         	movff	?___fldiv+2,floorf@x+2
  3851  00FA84  C004  F01D         	movff	?___fldiv+3,floorf@x+3
  3852  00FA88  ECCB  F06D         	call	_floorf	;wreg free
  3853  00FA8C  C01A  F086         	movff	?_floorf,efgtoa@l
  3854  00FA90  C01B  F087         	movff	?_floorf+1,efgtoa@l+1
  3855  00FA94  C01C  F088         	movff	?_floorf+2,efgtoa@l+2
  3856  00FA98  C01D  F089         	movff	?_floorf+3,efgtoa@l+3
  3857                           
  3858                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 470:         d = 
      +                          (int)l;
  3859  00FA9C  C086  F001         	movff	efgtoa@l,___fltol@f1
  3860  00FAA0  C087  F002         	movff	efgtoa@l+1,___fltol@f1+1
  3861  00FAA4  C088  F003         	movff	efgtoa@l+2,___fltol@f1+2
  3862  00FAA8  C089  F004         	movff	efgtoa@l+3,___fltol@f1+3
  3863  00FAAC  ECB3  F06B         	call	___fltol	;wreg free
  3864  00FAB0  C001  F078         	movff	?___fltol,efgtoa@d
  3865  00FAB4  C002  F079         	movff	?___fltol+1,efgtoa@d+1
  3866  00FAB8                     
  3867                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 471:         if (
      +                          !(flags & (1 << 4)) && !d && (mode == 'g') && (ne < 0)) {
  3868  00FAB8  0100               	movlb	0	; () banked
  3869  00FABA  B9D0               	btfsc	_flags& (0+255),4,b
  3870  00FABC  EF62  F07D         	goto	u4291
  3871  00FAC0  EF64  F07D         	goto	u4290
  3872  00FAC4                     u4291:
  3873  00FAC4  EF81  F07D         	goto	l3745
  3874  00FAC8                     u4290:
  3875  00FAC8                     
  3876                           ; BSR set to: 0
  3877  00FAC8  5178               	movf	efgtoa@d& (0+255),w,b
  3878  00FACA  1179               	iorwf	(efgtoa@d+1)& (0+255),w,b
  3879  00FACC  A4D8               	btfss	status,2,c
  3880  00FACE  EF6B  F07D         	goto	u4301
  3881  00FAD2  EF6D  F07D         	goto	u4300
  3882  00FAD6                     u4301:
  3883  00FAD6  EF81  F07D         	goto	l3745
  3884  00FADA                     u4300:
  3885  00FADA                     
  3886                           ; BSR set to: 0
  3887  00FADA  0E67               	movlw	103
  3888  00FADC  1981               	xorwf	efgtoa@mode& (0+255),w,b
  3889  00FADE  A4D8               	btfss	status,2,c
  3890  00FAE0  EF74  F07D         	goto	u4311
  3891  00FAE4  EF76  F07D         	goto	u4310
  3892  00FAE8                     u4311:
  3893  00FAE8  EF81  F07D         	goto	l3745
  3894  00FAEC                     u4310:
  3895  00FAEC                     
  3896                           ; BSR set to: 0
  3897  00FAEC  BF71               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  3898  00FAEE  EF7D  F07D         	goto	u4320
  3899  00FAF2  EF7B  F07D         	goto	u4321
  3900  00FAF6                     u4321:
  3901  00FAF6  EF81  F07D         	goto	l3745
  3902  00FAFA                     u4320:
  3903  00FAFA                     
  3904                           ; BSR set to: 0
  3905                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 472:             
      +                          ++t;
  3906  00FAFA  4B6C               	infsnz	efgtoa@t& (0+255),f,b
  3907  00FAFC  2B6D               	incf	(efgtoa@t+1)& (0+255),f,b
  3908                           
  3909                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 473:         } el
      +                          se {
  3910  00FAFE  EFCB  F07D         	goto	l3773
  3911  00FB02                     l3745:
  3912                           
  3913                           ; BSR set to: 0
  3914                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 474:             
      +                          if (!pp && (ne < 0)) {
  3915  00FB02  516E               	movf	efgtoa@pp& (0+255),w,b
  3916  00FB04  116F               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  3917  00FB06  A4D8               	btfss	status,2,c
  3918  00FB08  EF88  F07D         	goto	u4331
  3919  00FB0C  EF8A  F07D         	goto	u4330
  3920  00FB10                     u4331:
  3921  00FB10  EFB4  F07D         	goto	l3765
  3922  00FB14                     u4330:
  3923  00FB14                     
  3924                           ; BSR set to: 0
  3925  00FB14  BF71               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  3926  00FB16  EF91  F07D         	goto	u4340
  3927  00FB1A  EF8F  F07D         	goto	u4341
  3928  00FB1E                     u4341:
  3929  00FB1E  EFB4  F07D         	goto	l3765
  3930  00FB22                     u4340:
  3931  00FB22                     
  3932                           ; BSR set to: 0
  3933                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 475:             
      +                              dbuf[n++] = '.';
  3934  00FB22  0E00               	movlw	low _dbuf
  3935  00FB24  2592               	addwf	efgtoa@n& (0+255),w,b
  3936  00FB26  6ED9               	movwf	fsr2l,c
  3937  00FB28  0E01               	movlw	high _dbuf
  3938  00FB2A  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3939  00FB2C  6EDA               	movwf	fsr2h,c
  3940  00FB2E  0E2E               	movlw	46
  3941  00FB30  6EDF               	movwf	indf2,c
  3942  00FB32                     
  3943                           ; BSR set to: 0
  3944  00FB32  4B92               	infsnz	efgtoa@n& (0+255),f,b
  3945  00FB34  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  3946  00FB36                     
  3947                           ; BSR set to: 0
  3948                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 476:             
      +                              --w;
  3949  00FB36  077E               	decf	efgtoa@w& (0+255),f,b
  3950  00FB38  A0D8               	btfss	status,0,c
  3951  00FB3A  077F               	decf	(efgtoa@w+1)& (0+255),f,b
  3952  00FB3C                     
  3953                           ; BSR set to: 0
  3954                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 477:             
      +                              pp = 1;
  3955  00FB3C  0E00               	movlw	0
  3956  00FB3E  6F6F               	movwf	(efgtoa@pp+1)& (0+255),b
  3957  00FB40  0E01               	movlw	1
  3958  00FB42  6F6E               	movwf	efgtoa@pp& (0+255),b
  3959  00FB44  EFB4  F07D         	goto	l3765
  3960  00FB48                     l3757:
  3961                           
  3962                           ; BSR set to: 0
  3963                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 480:             
      +                              dbuf[n++] = '0';
  3964  00FB48  0E00               	movlw	low _dbuf
  3965  00FB4A  2592               	addwf	efgtoa@n& (0+255),w,b
  3966  00FB4C  6ED9               	movwf	fsr2l,c
  3967  00FB4E  0E01               	movlw	high _dbuf
  3968  00FB50  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3969  00FB52  6EDA               	movwf	fsr2h,c
  3970  00FB54  0E30               	movlw	48
  3971  00FB56  6EDF               	movwf	indf2,c
  3972  00FB58                     
  3973                           ; BSR set to: 0
  3974  00FB58  4B92               	infsnz	efgtoa@n& (0+255),f,b
  3975  00FB5A  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  3976  00FB5C                     
  3977                           ; BSR set to: 0
  3978                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 481:             
      +                              --w;
  3979  00FB5C  077E               	decf	efgtoa@w& (0+255),f,b
  3980  00FB5E  A0D8               	btfss	status,0,c
  3981  00FB60  077F               	decf	(efgtoa@w+1)& (0+255),f,b
  3982  00FB62                     
  3983                           ; BSR set to: 0
  3984                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 482:             
      +                              --t;
  3985  00FB62  076C               	decf	efgtoa@t& (0+255),f,b
  3986  00FB64  A0D8               	btfss	status,0,c
  3987  00FB66  076D               	decf	(efgtoa@t+1)& (0+255),f,b
  3988  00FB68                     l3765:
  3989                           
  3990                           ; BSR set to: 0
  3991                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 479:             
      +                          while (t) {
  3992  00FB68  516C               	movf	efgtoa@t& (0+255),w,b
  3993  00FB6A  116D               	iorwf	(efgtoa@t+1)& (0+255),w,b
  3994  00FB6C  A4D8               	btfss	status,2,c
  3995  00FB6E  EFBB  F07D         	goto	u4351
  3996  00FB72  EFBD  F07D         	goto	u4350
  3997  00FB76                     u4351:
  3998  00FB76  EFA4  F07D         	goto	l3757
  3999  00FB7A                     u4350:
  4000  00FB7A                     
  4001                           ; BSR set to: 0
  4002                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 484:             
      +                          dbuf[n++] = (char)((int)'0' + d);
  4003  00FB7A  0E00               	movlw	low _dbuf
  4004  00FB7C  2592               	addwf	efgtoa@n& (0+255),w,b
  4005  00FB7E  6ED9               	movwf	fsr2l,c
  4006  00FB80  0E01               	movlw	high _dbuf
  4007  00FB82  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4008  00FB84  6EDA               	movwf	fsr2h,c
  4009  00FB86  5178               	movf	efgtoa@d& (0+255),w,b
  4010  00FB88  0F30               	addlw	48
  4011  00FB8A  6EDF               	movwf	indf2,c
  4012  00FB8C                     
  4013                           ; BSR set to: 0
  4014  00FB8C  4B92               	infsnz	efgtoa@n& (0+255),f,b
  4015  00FB8E  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  4016  00FB90                     
  4017                           ; BSR set to: 0
  4018                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 485:             
      +                          --w;
  4019  00FB90  077E               	decf	efgtoa@w& (0+255),f,b
  4020  00FB92  A0D8               	btfss	status,0,c
  4021  00FB94  077F               	decf	(efgtoa@w+1)& (0+255),f,b
  4022  00FB96                     l3773:
  4023                           
  4024                           ; BSR set to: 0
  4025                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 487:         h -=
      +                           l*u;
  4026  00FB96  C082  F01A         	movff	efgtoa@h,___flsub@b
  4027  00FB9A  C083  F01B         	movff	efgtoa@h+1,___flsub@b+1
  4028  00FB9E  C084  F01C         	movff	efgtoa@h+2,___flsub@b+2
  4029  00FBA2  C085  F01D         	movff	efgtoa@h+3,___flsub@b+3
  4030  00FBA6  C094  F005         	movff	efgtoa@u,___flmul@a
  4031  00FBAA  C095  F006         	movff	efgtoa@u+1,___flmul@a+1
  4032  00FBAE  C096  F007         	movff	efgtoa@u+2,___flmul@a+2
  4033  00FBB2  C097  F008         	movff	efgtoa@u+3,___flmul@a+3
  4034  00FBB6  C086  F001         	movff	efgtoa@l,___flmul@b
  4035  00FBBA  C087  F002         	movff	efgtoa@l+1,___flmul@b+1
  4036  00FBBE  C088  F003         	movff	efgtoa@l+2,___flmul@b+2
  4037  00FBC2  C089  F004         	movff	efgtoa@l+3,___flmul@b+3
  4038  00FBC6  ECA1  F070         	call	___flmul	;wreg free
  4039  00FBCA  C001  F01E         	movff	?___flmul,___flsub@a
  4040  00FBCE  C002  F01F         	movff	?___flmul+1,___flsub@a+1
  4041  00FBD2  C003  F020         	movff	?___flmul+2,___flsub@a+2
  4042  00FBD6  C004  F021         	movff	?___flmul+3,___flsub@a+3
  4043  00FBDA  EC1D  F067         	call	___flsub	;wreg free
  4044  00FBDE  C01A  F082         	movff	?___flsub,efgtoa@h
  4045  00FBE2  C01B  F083         	movff	?___flsub+1,efgtoa@h+1
  4046  00FBE6  C01C  F084         	movff	?___flsub+2,efgtoa@h+2
  4047  00FBEA  C01D  F085         	movff	?___flsub+3,efgtoa@h+3
  4048  00FBEE                     
  4049                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 488:         u = 
      +                          u/10.0;
  4050  00FBEE  C094  F001         	movff	efgtoa@u,___fldiv@b
  4051  00FBF2  C095  F002         	movff	efgtoa@u+1,___fldiv@b+1
  4052  00FBF6  C096  F003         	movff	efgtoa@u+2,___fldiv@b+2
  4053  00FBFA  C097  F004         	movff	efgtoa@u+3,___fldiv@b+3
  4054  00FBFE  0E00               	movlw	0
  4055  00FC00  6E05               	movwf	___fldiv@a^0,c
  4056  00FC02  0E00               	movlw	0
  4057  00FC04  6E06               	movwf	(___fldiv@a+1)^0,c
  4058  00FC06  0E20               	movlw	32
  4059  00FC08  6E07               	movwf	(___fldiv@a+2)^0,c
  4060  00FC0A  0E41               	movlw	65
  4061  00FC0C  6E08               	movwf	(___fldiv@a+3)^0,c
  4062  00FC0E  ECD4  F06E         	call	___fldiv	;wreg free
  4063  00FC12  C001  F094         	movff	?___fldiv,efgtoa@u
  4064  00FC16  C002  F095         	movff	?___fldiv+1,efgtoa@u+1
  4065  00FC1A  C003  F096         	movff	?___fldiv+2,efgtoa@u+2
  4066  00FC1E  C004  F097         	movff	?___fldiv+3,efgtoa@u+3
  4067  00FC22                     
  4068                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 489:         --ne
      +                          ;
  4069  00FC22  0100               	movlb	0	; () banked
  4070  00FC24  0770               	decf	efgtoa@ne& (0+255),f,b
  4071  00FC26  A0D8               	btfss	status,0,c
  4072  00FC28  0771               	decf	(efgtoa@ne+1)& (0+255),f,b
  4073  00FC2A                     
  4074                           ; BSR set to: 0
  4075                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 490:         ++i;
  4076  00FC2A  4B8A               	infsnz	efgtoa@i& (0+255),f,b
  4077  00FC2C  2B8B               	incf	(efgtoa@i+1)& (0+255),f,b
  4078  00FC2E                     l3781:
  4079                           
  4080                           ; BSR set to: 0
  4081                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 468:     while ((
      +                          i < m) && (n < (80 - 5))) {
  4082  00FC2E  5172               	movf	efgtoa@m& (0+255),w,b
  4083  00FC30  5D8A               	subwf	efgtoa@i& (0+255),w,b
  4084  00FC32  518B               	movf	(efgtoa@i+1)& (0+255),w,b
  4085  00FC34  0A80               	xorlw	128
  4086  00FC36  6E35               	movwf	??_efgtoa^0,c
  4087  00FC38  5173               	movf	(efgtoa@m+1)& (0+255),w,b
  4088  00FC3A  0A80               	xorlw	128
  4089  00FC3C  5835               	subwfb	??_efgtoa^0,w,c
  4090  00FC3E  B0D8               	btfsc	status,0,c
  4091  00FC40  EF24  F07E         	goto	u4361
  4092  00FC44  EF26  F07E         	goto	u4360
  4093  00FC48                     u4361:
  4094  00FC48  EF34  F07E         	goto	l3785
  4095  00FC4C                     u4360:
  4096  00FC4C                     
  4097                           ; BSR set to: 0
  4098  00FC4C  BF93               	btfsc	(efgtoa@n+1)& (0+255),7,b
  4099  00FC4E  EF32  F07E         	goto	u4371
  4100  00FC52  5193               	movf	(efgtoa@n+1)& (0+255),w,b
  4101  00FC54  E109               	bnz	u4370
  4102  00FC56  0E4B               	movlw	75
  4103  00FC58  5D92               	subwf	efgtoa@n& (0+255),w,b
  4104  00FC5A  A0D8               	btfss	status,0,c
  4105  00FC5C  EF32  F07E         	goto	u4371
  4106  00FC60  EF34  F07E         	goto	u4370
  4107  00FC64                     u4371:
  4108  00FC64  EF2A  F07D         	goto	l3733
  4109  00FC68                     u4370:
  4110  00FC68                     l3785:
  4111                           
  4112                           ; BSR set to: 0
  4113                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 492:     if (!pp 
      +                          && (flags & (1 << 4))) {
  4114  00FC68  516E               	movf	efgtoa@pp& (0+255),w,b
  4115  00FC6A  116F               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  4116  00FC6C  A4D8               	btfss	status,2,c
  4117  00FC6E  EF3B  F07E         	goto	u4381
  4118  00FC72  EF3D  F07E         	goto	u4380
  4119  00FC76                     u4381:
  4120  00FC76  EF4E  F07E         	goto	l3793
  4121  00FC7A                     u4380:
  4122  00FC7A                     
  4123                           ; BSR set to: 0
  4124  00FC7A  A9D0               	btfss	_flags& (0+255),4,b
  4125  00FC7C  EF42  F07E         	goto	u4391
  4126  00FC80  EF44  F07E         	goto	u4390
  4127  00FC84                     u4391:
  4128  00FC84  EF4E  F07E         	goto	l3793
  4129  00FC88                     u4390:
  4130  00FC88                     
  4131                           ; BSR set to: 0
  4132                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 493:         dbuf
      +                          [n++] = '.';
  4133  00FC88  0E00               	movlw	low _dbuf
  4134  00FC8A  2592               	addwf	efgtoa@n& (0+255),w,b
  4135  00FC8C  6ED9               	movwf	fsr2l,c
  4136  00FC8E  0E01               	movlw	high _dbuf
  4137  00FC90  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4138  00FC92  6EDA               	movwf	fsr2h,c
  4139  00FC94  0E2E               	movlw	46
  4140  00FC96  6EDF               	movwf	indf2,c
  4141  00FC98                     
  4142                           ; BSR set to: 0
  4143  00FC98  4B92               	infsnz	efgtoa@n& (0+255),f,b
  4144  00FC9A  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  4145  00FC9C                     l3793:
  4146                           
  4147                           ; BSR set to: 0
  4148                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 495:     dbuf[n] 
      +                          = '\0';
  4149  00FC9C  0E00               	movlw	low _dbuf
  4150  00FC9E  2592               	addwf	efgtoa@n& (0+255),w,b
  4151  00FCA0  6ED9               	movwf	fsr2l,c
  4152  00FCA2  0E01               	movlw	high _dbuf
  4153  00FCA4  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4154  00FCA6  6EDA               	movwf	fsr2h,c
  4155  00FCA8  0E00               	movlw	0
  4156  00FCAA  6EDF               	movwf	indf2,c
  4157  00FCAC                     
  4158                           ; BSR set to: 0
  4159                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 498:     if (nmod
      +                          e == 'e') {
  4160  00FCAC  0E65               	movlw	101
  4161  00FCAE  1980               	xorwf	efgtoa@nmode& (0+255),w,b
  4162  00FCB0  A4D8               	btfss	status,2,c
  4163  00FCB2  EF5D  F07E         	goto	u4401
  4164  00FCB6  EF5F  F07E         	goto	u4400
  4165  00FCBA                     u4401:
  4166  00FCBA  EF31  F07F         	goto	l3855
  4167  00FCBE                     u4400:
  4168  00FCBE                     
  4169                           ; BSR set to: 0
  4170                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 499:         i = 
      +                          sizeof(dbuf) - 1;
  4171  00FCBE  0E00               	movlw	0
  4172  00FCC0  6F8B               	movwf	(efgtoa@i+1)& (0+255),b
  4173  00FCC2  0E4F               	movlw	79
  4174  00FCC4  6F8A               	movwf	efgtoa@i& (0+255),b
  4175  00FCC6                     
  4176                           ; BSR set to: 0
  4177                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 500:         dbuf
      +                          [i] = '\0';
  4178  00FCC6  0E00               	movlw	low _dbuf
  4179  00FCC8  258A               	addwf	efgtoa@i& (0+255),w,b
  4180  00FCCA  6ED9               	movwf	fsr2l,c
  4181  00FCCC  0E01               	movlw	high _dbuf
  4182  00FCCE  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4183  00FCD0  6EDA               	movwf	fsr2h,c
  4184  00FCD2  0E00               	movlw	0
  4185  00FCD4  6EDF               	movwf	indf2,c
  4186  00FCD6                     
  4187                           ; BSR set to: 0
  4188                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 501:         sign
      +                           = 0;
  4189  00FCD6  0E00               	movlw	0
  4190  00FCD8  6F7B               	movwf	(efgtoa@sign+1)& (0+255),b
  4191  00FCDA  0E00               	movlw	0
  4192  00FCDC  6F7A               	movwf	efgtoa@sign& (0+255),b
  4193  00FCDE                     
  4194                           ; BSR set to: 0
  4195                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 502:         if (
      +                          e < 0) {
  4196  00FCDE  BF91               	btfsc	(efgtoa@e+1)& (0+255),7,b
  4197  00FCE0  EF76  F07E         	goto	u4410
  4198  00FCE4  EF74  F07E         	goto	u4411
  4199  00FCE8                     u4411:
  4200  00FCE8  EF7E  F07E         	goto	l3809
  4201  00FCEC                     u4410:
  4202  00FCEC                     
  4203                           ; BSR set to: 0
  4204                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 503:             
      +                          sign = 1;
  4205  00FCEC  0E00               	movlw	0
  4206  00FCEE  6F7B               	movwf	(efgtoa@sign+1)& (0+255),b
  4207  00FCF0  0E01               	movlw	1
  4208  00FCF2  6F7A               	movwf	efgtoa@sign& (0+255),b
  4209  00FCF4                     
  4210                           ; BSR set to: 0
  4211                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 504:             
      +                          e = -e;
  4212  00FCF4  6D90               	negf	efgtoa@e& (0+255),b
  4213  00FCF6  1F91               	comf	(efgtoa@e+1)& (0+255),f,b
  4214  00FCF8  B0D8               	btfsc	status,0,c
  4215  00FCFA  2B91               	incf	(efgtoa@e+1)& (0+255),f,b
  4216  00FCFC                     l3809:
  4217                           
  4218                           ; BSR set to: 0
  4219                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 506:         p = 
      +                          2;
  4220  00FCFC  0E00               	movlw	0
  4221  00FCFE  6F7D               	movwf	(efgtoa@p+1)& (0+255),b
  4222  00FD00  0E02               	movlw	2
  4223  00FD02  6F7C               	movwf	efgtoa@p& (0+255),b
  4224                           
  4225                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 507:         whil
      +                          e (e || (0 < p)) {
  4226  00FD04  EFAF  F07E         	goto	l3821
  4227  00FD08                     l3811:
  4228                           
  4229                           ; BSR set to: 0
  4230                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 508:             
      +                          --i;
  4231  00FD08  078A               	decf	efgtoa@i& (0+255),f,b
  4232  00FD0A  A0D8               	btfss	status,0,c
  4233  00FD0C  078B               	decf	(efgtoa@i+1)& (0+255),f,b
  4234  00FD0E                     
  4235                           ; BSR set to: 0
  4236                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 509:             
      +                          dbuf[i] = '0' + (e % 10);
  4237  00FD0E  0E00               	movlw	low _dbuf
  4238  00FD10  258A               	addwf	efgtoa@i& (0+255),w,b
  4239  00FD12  6ED9               	movwf	fsr2l,c
  4240  00FD14  0E01               	movlw	high _dbuf
  4241  00FD16  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4242  00FD18  6EDA               	movwf	fsr2h,c
  4243  00FD1A  C090  F001         	movff	efgtoa@e,___awmod@dividend
  4244  00FD1E  C091  F002         	movff	efgtoa@e+1,___awmod@dividend+1
  4245  00FD22  0E00               	movlw	0
  4246  00FD24  6E04               	movwf	(___awmod@divisor+1)^0,c
  4247  00FD26  0E0A               	movlw	10
  4248  00FD28  6E03               	movwf	___awmod@divisor^0,c
  4249  00FD2A  EC1B  F069         	call	___awmod	;wreg free
  4250  00FD2E  5001               	movf	?___awmod^0,w,c
  4251  00FD30  0F30               	addlw	48
  4252  00FD32  6EDF               	movwf	indf2,c
  4253  00FD34                     
  4254                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 510:             
      +                          e = e / 10;
  4255  00FD34  C090  F001         	movff	efgtoa@e,___awdiv@dividend
  4256  00FD38  C091  F002         	movff	efgtoa@e+1,___awdiv@dividend+1
  4257  00FD3C  0E00               	movlw	0
  4258  00FD3E  6E04               	movwf	(___awdiv@divisor+1)^0,c
  4259  00FD40  0E0A               	movlw	10
  4260  00FD42  6E03               	movwf	___awdiv@divisor^0,c
  4261  00FD44  EC73  F069         	call	___awdiv	;wreg free
  4262  00FD48  C001  F090         	movff	?___awdiv,efgtoa@e
  4263  00FD4C  C002  F091         	movff	?___awdiv+1,efgtoa@e+1
  4264  00FD50                     
  4265                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 511:             
      +                          --p;
  4266  00FD50  0100               	movlb	0	; () banked
  4267  00FD52  077C               	decf	efgtoa@p& (0+255),f,b
  4268  00FD54  A0D8               	btfss	status,0,c
  4269  00FD56  077D               	decf	(efgtoa@p+1)& (0+255),f,b
  4270  00FD58                     
  4271                           ; BSR set to: 0
  4272                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 512:             
      +                          --w;
  4273  00FD58  077E               	decf	efgtoa@w& (0+255),f,b
  4274  00FD5A  A0D8               	btfss	status,0,c
  4275  00FD5C  077F               	decf	(efgtoa@w+1)& (0+255),f,b
  4276  00FD5E                     l3821:
  4277                           
  4278                           ; BSR set to: 0
  4279                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 507:         whil
      +                          e (e || (0 < p)) {
  4280  00FD5E  5190               	movf	efgtoa@e& (0+255),w,b
  4281  00FD60  1191               	iorwf	(efgtoa@e+1)& (0+255),w,b
  4282  00FD62  A4D8               	btfss	status,2,c
  4283  00FD64  EFB6  F07E         	goto	u4421
  4284  00FD68  EFB8  F07E         	goto	u4420
  4285  00FD6C                     u4421:
  4286  00FD6C  EF84  F07E         	goto	l3811
  4287  00FD70                     u4420:
  4288  00FD70                     
  4289                           ; BSR set to: 0
  4290  00FD70  BF7D               	btfsc	(efgtoa@p+1)& (0+255),7,b
  4291  00FD72  EFC5  F07E         	goto	u4430
  4292  00FD76  517D               	movf	(efgtoa@p+1)& (0+255),w,b
  4293  00FD78  E106               	bnz	u4431
  4294  00FD7A  057C               	decf	efgtoa@p& (0+255),w,b
  4295  00FD7C  B0D8               	btfsc	status,0,c
  4296  00FD7E  EFC3  F07E         	goto	u4431
  4297  00FD82  EFC5  F07E         	goto	u4430
  4298  00FD86                     u4431:
  4299  00FD86  EF84  F07E         	goto	l3811
  4300  00FD8A                     u4430:
  4301  00FD8A                     
  4302                           ; BSR set to: 0
  4303                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 514:         --i;
  4304  00FD8A  078A               	decf	efgtoa@i& (0+255),f,b
  4305  00FD8C  A0D8               	btfss	status,0,c
  4306  00FD8E  078B               	decf	(efgtoa@i+1)& (0+255),f,b
  4307  00FD90                     
  4308                           ; BSR set to: 0
  4309                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 515:         dbuf
      +                          [i] = sign ? '-' : '+';
  4310  00FD90  517A               	movf	efgtoa@sign& (0+255),w,b
  4311  00FD92  117B               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  4312  00FD94  A4D8               	btfss	status,2,c
  4313  00FD96  EFCF  F07E         	goto	u4441
  4314  00FD9A  EFD1  F07E         	goto	u4440
  4315  00FD9E                     u4441:
  4316  00FD9E  EFD7  F07E         	goto	l3831
  4317  00FDA2                     u4440:
  4318  00FDA2                     
  4319                           ; BSR set to: 0
  4320  00FDA2  0E00               	movlw	0
  4321  00FDA4  6F67               	movwf	(_efgtoa$920+1)& (0+255),b
  4322  00FDA6  0E2B               	movlw	43
  4323  00FDA8  6F66               	movwf	_efgtoa$920& (0+255),b
  4324  00FDAA  EFDB  F07E         	goto	l3833
  4325  00FDAE                     l3831:
  4326                           
  4327                           ; BSR set to: 0
  4328  00FDAE  0E00               	movlw	0
  4329  00FDB0  6F67               	movwf	(_efgtoa$920+1)& (0+255),b
  4330  00FDB2  0E2D               	movlw	45
  4331  00FDB4  6F66               	movwf	_efgtoa$920& (0+255),b
  4332  00FDB6                     l3833:
  4333                           
  4334                           ; BSR set to: 0
  4335  00FDB6  0E00               	movlw	low _dbuf
  4336  00FDB8  258A               	addwf	efgtoa@i& (0+255),w,b
  4337  00FDBA  6ED9               	movwf	fsr2l,c
  4338  00FDBC  0E01               	movlw	high _dbuf
  4339  00FDBE  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4340  00FDC0  6EDA               	movwf	fsr2h,c
  4341  00FDC2  0060  F19B  FFDF   	movff	_efgtoa$920,indf2
  4342  00FDC8                     
  4343                           ; BSR set to: 0
  4344                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 516:         --w;
  4345  00FDC8  077E               	decf	efgtoa@w& (0+255),f,b
  4346  00FDCA  A0D8               	btfss	status,0,c
  4347  00FDCC  077F               	decf	(efgtoa@w+1)& (0+255),f,b
  4348  00FDCE                     
  4349                           ; BSR set to: 0
  4350                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 518:         dbuf
      +                          [i] = (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
  4351  00FDCE  078A               	decf	efgtoa@i& (0+255),f,b
  4352  00FDD0  A0D8               	btfss	status,0,c
  4353  00FDD2  078B               	decf	(efgtoa@i+1)& (0+255),f,b
  4354  00FDD4                     
  4355                           ; BSR set to: 0
  4356  00FDD4  0EBF               	movlw	191
  4357  00FDD6  6E35               	movwf	??_efgtoa^0,c
  4358  00FDD8  0EFF               	movlw	255
  4359  00FDDA  6E36               	movwf	(??_efgtoa+1)^0,c
  4360  00FDDC  5034               	movf	efgtoa@c^0,w,c
  4361  00FDDE  6E37               	movwf	(??_efgtoa+2)^0,c
  4362  00FDE0  6A38               	clrf	(??_efgtoa+3)^0,c
  4363  00FDE2  5035               	movf	??_efgtoa^0,w,c
  4364  00FDE4  2637               	addwf	(??_efgtoa+2)^0,f,c
  4365  00FDE6  5036               	movf	(??_efgtoa+1)^0,w,c
  4366  00FDE8  2238               	addwfc	(??_efgtoa+3)^0,f,c
  4367  00FDEA  5038               	movf	(??_efgtoa+3)^0,w,c
  4368  00FDEC  E10A               	bnz	u4450
  4369  00FDEE  0E1A               	movlw	26
  4370  00FDF0  5C37               	subwf	(??_efgtoa+2)^0,w,c
  4371  00FDF2  A0D8               	btfss	status,0,c
  4372  00FDF4  EFFE  F07E         	goto	u4451
  4373  00FDF8  EF01  F07F         	goto	u4450
  4374  00FDFC                     u4451:
  4375  00FDFC  0E01               	movlw	1
  4376  00FDFE  EF02  F07F         	goto	u4460
  4377  00FE02                     u4450:
  4378  00FE02  0E00               	movlw	0
  4379  00FE04                     u4460:
  4380  00FE04  6F6A               	movwf	_efgtoa$922& (0+255),b
  4381  00FE06  6B6B               	clrf	(_efgtoa$922+1)& (0+255),b
  4382  00FE08                     
  4383                           ; BSR set to: 0
  4384  00FE08  516A               	movf	_efgtoa$922& (0+255),w,b
  4385  00FE0A  116B               	iorwf	(_efgtoa$922+1)& (0+255),w,b
  4386  00FE0C  A4D8               	btfss	status,2,c
  4387  00FE0E  EF0B  F07F         	goto	u4471
  4388  00FE12  EF0D  F07F         	goto	u4470
  4389  00FE16                     u4471:
  4390  00FE16  EF13  F07F         	goto	l3847
  4391  00FE1A                     u4470:
  4392  00FE1A                     
  4393                           ; BSR set to: 0
  4394  00FE1A  0E00               	movlw	0
  4395  00FE1C  6F69               	movwf	(_efgtoa$921+1)& (0+255),b
  4396  00FE1E  0E65               	movlw	101
  4397  00FE20  6F68               	movwf	_efgtoa$921& (0+255),b
  4398  00FE22  EF17  F07F         	goto	l3849
  4399  00FE26                     l3847:
  4400                           
  4401                           ; BSR set to: 0
  4402  00FE26  0E00               	movlw	0
  4403  00FE28  6F69               	movwf	(_efgtoa$921+1)& (0+255),b
  4404  00FE2A  0E45               	movlw	69
  4405  00FE2C  6F68               	movwf	_efgtoa$921& (0+255),b
  4406  00FE2E                     l3849:
  4407                           
  4408                           ; BSR set to: 0
  4409  00FE2E  0E00               	movlw	low _dbuf
  4410  00FE30  258A               	addwf	efgtoa@i& (0+255),w,b
  4411  00FE32  6ED9               	movwf	fsr2l,c
  4412  00FE34  0E01               	movlw	high _dbuf
  4413  00FE36  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4414  00FE38  6EDA               	movwf	fsr2h,c
  4415  00FE3A  0060  F1A3  FFDF   	movff	_efgtoa$921,indf2
  4416  00FE40                     
  4417                           ; BSR set to: 0
  4418                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 519:         --w;
  4419  00FE40  077E               	decf	efgtoa@w& (0+255),f,b
  4420  00FE42  A0D8               	btfss	status,0,c
  4421  00FE44  077F               	decf	(efgtoa@w+1)& (0+255),f,b
  4422  00FE46                     
  4423                           ; BSR set to: 0
  4424                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 520:         strc
      +                          py(&dbuf[n], &dbuf[i]);
  4425  00FE46  0E00               	movlw	low _dbuf
  4426  00FE48  2592               	addwf	efgtoa@n& (0+255),w,b
  4427  00FE4A  6E01               	movwf	strcpy@dest^0,c
  4428  00FE4C  0E01               	movlw	high _dbuf
  4429  00FE4E  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4430  00FE50  6E02               	movwf	(strcpy@dest+1)^0,c
  4431  00FE52  0E00               	movlw	low _dbuf
  4432  00FE54  258A               	addwf	efgtoa@i& (0+255),w,b
  4433  00FE56  6E03               	movwf	strcpy@src^0,c
  4434  00FE58  0E01               	movlw	high _dbuf
  4435  00FE5A  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4436  00FE5C  6E04               	movwf	(strcpy@src+1)^0,c
  4437  00FE5E  ECFC  F067         	call	_strcpy	;wreg free
  4438  00FE62                     l3855:
  4439                           
  4440                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 524:     return p
      +                          ad(fp, &dbuf[0], w);
  4441  00FE62  C02E  F013         	movff	efgtoa@fp,pad@fp
  4442  00FE66  C02F  F014         	movff	efgtoa@fp+1,pad@fp+1
  4443  00FE6A  0E00               	movlw	low _dbuf
  4444  00FE6C  6E15               	movwf	pad@buf^0,c
  4445  00FE6E  0E01               	movlw	high _dbuf
  4446  00FE70  6E16               	movwf	(pad@buf+1)^0,c
  4447  00FE72  C07E  F017         	movff	efgtoa@w,pad@p
  4448  00FE76  C07F  F018         	movff	efgtoa@w+1,pad@p+1
  4449  00FE7A  ECD5  F069         	call	_pad	;wreg free
  4450  00FE7E  C013  F02E         	movff	?_pad,?_efgtoa
  4451  00FE82  C014  F02F         	movff	?_pad+1,?_efgtoa+1
  4452  00FE86                     l1002:
  4453  00FE86  0012               	return		;funcret
  4454  00FE88                     __end_of_efgtoa:
  4455                           	callstack 0
  4456                           
  4457 ;; *************** function _tolower *****************
  4458 ;; Defined at:
  4459 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\tolower.c"
  4460 ;; Parameters:    Size  Location     Type
  4461 ;;  c               2    6[COMRAM] int 
  4462 ;; Auto vars:     Size  Location     Type
  4463 ;;		None
  4464 ;; Return value:  Size  Location     Type
  4465 ;;                  2    6[COMRAM] int 
  4466 ;; Registers used:
  4467 ;;		wreg, status,2, status,0
  4468 ;; Tracked objects:
  4469 ;;		On entry : 0/0
  4470 ;;		On exit  : 0/0
  4471 ;;		Unchanged: 0/0
  4472 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4473 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4474 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4475 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4476 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4477 ;;Total ram usage:        8 bytes
  4478 ;; Hardware stack levels used:    1
  4479 ;; Hardware stack levels required when called:    1
  4480 ;; This function calls:
  4481 ;;		_isupper
  4482 ;; This function is called by:
  4483 ;;		_efgtoa
  4484 ;;		_vfpfcnvrt
  4485 ;; This function uses a non-reentrant model
  4486 ;;
  4487                           
  4488                           	psect	text6
  4489  00CF30                     __ptext6:
  4490                           	callstack 0
  4491  00CF30                     _tolower:
  4492                           	callstack 26
  4493  00CF30  0EBF               	movlw	191
  4494  00CF32  6E09               	movwf	??_tolower^0,c
  4495  00CF34  0EFF               	movlw	255
  4496  00CF36  6E0A               	movwf	(??_tolower+1)^0,c
  4497  00CF38  C007  F00B         	movff	tolower@c,??_tolower+2
  4498  00CF3C  C008  F00C         	movff	tolower@c+1,??_tolower+3
  4499  00CF40  5009               	movf	??_tolower^0,w,c
  4500  00CF42  260B               	addwf	(??_tolower+2)^0,f,c
  4501  00CF44  500A               	movf	(??_tolower+1)^0,w,c
  4502  00CF46  220C               	addwfc	(??_tolower+3)^0,f,c
  4503  00CF48  500C               	movf	(??_tolower+3)^0,w,c
  4504  00CF4A  E10A               	bnz	u3770
  4505  00CF4C  0E1A               	movlw	26
  4506  00CF4E  5C0B               	subwf	(??_tolower+2)^0,w,c
  4507  00CF50  A0D8               	btfss	status,0,c
  4508  00CF52  EFAD  F067         	goto	u3771
  4509  00CF56  EFB0  F067         	goto	u3770
  4510  00CF5A                     u3771:
  4511  00CF5A  0E01               	movlw	1
  4512  00CF5C  EFB1  F067         	goto	u3780
  4513  00CF60                     u3770:
  4514  00CF60  0E00               	movlw	0
  4515  00CF62                     u3780:
  4516  00CF62  6E0D               	movwf	_tolower$1064^0,c
  4517  00CF64  6A0E               	clrf	(_tolower$1064+1)^0,c
  4518  00CF66  500D               	movf	_tolower$1064^0,w,c
  4519  00CF68  100E               	iorwf	(_tolower$1064+1)^0,w,c
  4520  00CF6A  B4D8               	btfsc	status,2,c
  4521  00CF6C  EFBA  F067         	goto	u3791
  4522  00CF70  EFBC  F067         	goto	u3790
  4523  00CF74                     u3791:
  4524  00CF74  EFC3  F067         	goto	l1251
  4525  00CF78                     u3790:
  4526  00CF78  0E20               	movlw	32
  4527  00CF7A  1007               	iorwf	tolower@c^0,w,c
  4528  00CF7C  6E07               	movwf	?_tolower^0,c
  4529  00CF7E  5008               	movf	(tolower@c+1)^0,w,c
  4530  00CF80  6E08               	movwf	(?_tolower+1)^0,c
  4531  00CF82  EFC7  F067         	goto	l1256
  4532  00CF86                     l1251:
  4533  00CF86  C007  F007         	movff	tolower@c,?_tolower
  4534  00CF8A  C008  F008         	movff	tolower@c+1,?_tolower+1
  4535  00CF8E                     l1256:
  4536  00CF8E  0012               	return		;funcret
  4537  00CF90                     __end_of_tolower:
  4538                           	callstack 0
  4539                           
  4540 ;; *************** function _isupper *****************
  4541 ;; Defined at:
  4542 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\isupper.c"
  4543 ;; Parameters:    Size  Location     Type
  4544 ;;  c               2    0[COMRAM] int 
  4545 ;; Auto vars:     Size  Location     Type
  4546 ;;		None
  4547 ;; Return value:  Size  Location     Type
  4548 ;;                  2    0[COMRAM] int 
  4549 ;; Registers used:
  4550 ;;		wreg, status,2, status,0
  4551 ;; Tracked objects:
  4552 ;;		On entry : 0/0
  4553 ;;		On exit  : 0/0
  4554 ;;		Unchanged: 0/0
  4555 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4556 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4557 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4558 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4559 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4560 ;;Total ram usage:        6 bytes
  4561 ;; Hardware stack levels used:    1
  4562 ;; This function calls:
  4563 ;;		Nothing
  4564 ;; This function is called by:
  4565 ;;		_efgtoa
  4566 ;;		_vfpfcnvrt
  4567 ;;		_tolower
  4568 ;; This function uses a non-reentrant model
  4569 ;;
  4570                           
  4571                           	psect	text7
  4572  00CD84                     __ptext7:
  4573                           	callstack 0
  4574  00CD84                     _isupper:
  4575                           	callstack 26
  4576  00CD84  0EBF               	movlw	191
  4577  00CD86  6E03               	movwf	??_isupper^0,c
  4578  00CD88  0EFF               	movlw	255
  4579  00CD8A  6E04               	movwf	(??_isupper+1)^0,c
  4580  00CD8C  C001  F005         	movff	isupper@c,??_isupper+2
  4581  00CD90  C002  F006         	movff	isupper@c+1,??_isupper+3
  4582  00CD94  5003               	movf	??_isupper^0,w,c
  4583  00CD96  2605               	addwf	(??_isupper+2)^0,f,c
  4584  00CD98  5004               	movf	(??_isupper+1)^0,w,c
  4585  00CD9A  2206               	addwfc	(??_isupper+3)^0,f,c
  4586  00CD9C  5006               	movf	(??_isupper+3)^0,w,c
  4587  00CD9E  E10A               	bnz	u2920
  4588  00CDA0  0E1A               	movlw	26
  4589  00CDA2  5C05               	subwf	(??_isupper+2)^0,w,c
  4590  00CDA4  A0D8               	btfss	status,0,c
  4591  00CDA6  EFD7  F066         	goto	u2921
  4592  00CDAA  EFDA  F066         	goto	u2920
  4593  00CDAE                     u2921:
  4594  00CDAE  0E01               	movlw	1
  4595  00CDB0  EFDB  F066         	goto	u2930
  4596  00CDB4                     u2920:
  4597  00CDB4  0E00               	movlw	0
  4598  00CDB6                     u2930:
  4599  00CDB6  6E01               	movwf	?_isupper^0,c
  4600  00CDB8  6A02               	clrf	(?_isupper+1)^0,c
  4601  00CDBA  0012               	return		;funcret
  4602  00CDBC                     __end_of_isupper:
  4603                           	callstack 0
  4604                           
  4605 ;; *************** function _strcpy *****************
  4606 ;; Defined at:
  4607 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\strcpy.c"
  4608 ;; Parameters:    Size  Location     Type
  4609 ;;  dest            2    0[COMRAM] PTR unsigned char 
  4610 ;;		 -> dbuf(80), 
  4611 ;;  src             2    2[COMRAM] PTR const unsigned char 
  4612 ;;		 -> STR_14(4), STR_13(4), STR_10(4), STR_9(4), 
  4613 ;;		 -> dbuf(80), 
  4614 ;; Auto vars:     Size  Location     Type
  4615 ;;  d               2    8[COMRAM] PTR unsigned char 
  4616 ;;		 -> dbuf(80), 
  4617 ;;  s               2    6[COMRAM] PTR const unsigned char 
  4618 ;;		 -> STR_14(4), STR_13(4), STR_10(4), STR_9(4), 
  4619 ;;		 -> dbuf(80), 
  4620 ;; Return value:  Size  Location     Type
  4621 ;;                  2    0[COMRAM] PTR unsigned char 
  4622 ;; Registers used:
  4623 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  4624 ;; Tracked objects:
  4625 ;;		On entry : 0/0
  4626 ;;		On exit  : 0/0
  4627 ;;		Unchanged: 0/0
  4628 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4629 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4630 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4631 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4632 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4633 ;;Total ram usage:       10 bytes
  4634 ;; Hardware stack levels used:    1
  4635 ;; This function calls:
  4636 ;;		Nothing
  4637 ;; This function is called by:
  4638 ;;		_efgtoa
  4639 ;; This function uses a non-reentrant model
  4640 ;;
  4641                           
  4642                           	psect	text8
  4643  00CFF8                     __ptext8:
  4644                           	callstack 0
  4645  00CFF8                     _strcpy:
  4646                           	callstack 26
  4647  00CFF8  C003  F007         	movff	strcpy@src,strcpy@s
  4648  00CFFC  C004  F008         	movff	strcpy@src+1,strcpy@s+1
  4649  00D000  C001  F009         	movff	strcpy@dest,strcpy@d
  4650  00D004  C002  F00A         	movff	strcpy@dest+1,strcpy@d+1
  4651  00D008                     l3495:
  4652  00D008  5007               	movf	strcpy@s^0,w,c
  4653  00D00A  6E05               	movwf	??_strcpy^0,c
  4654  00D00C  5008               	movf	(strcpy@s+1)^0,w,c
  4655  00D00E  6E06               	movwf	(??_strcpy+1)^0,c
  4656  00D010  4A07               	infsnz	strcpy@s^0,f,c
  4657  00D012  2A08               	incf	(strcpy@s+1)^0,f,c
  4658  00D014  0060  F017  FFF6   	movff	??_strcpy,tblptrl
  4659  00D01A  0060  F01B  FFF7   	movff	??_strcpy+1,tblptrh
  4660  00D020  0E00               	movlw	low (__mediumconst shr (0+16))
  4661  00D022  6EF8               	movwf	tblptru,c
  4662  00D024  0060  F027  FFD9   	movff	strcpy@d,fsr2l
  4663  00D02A  0060  F02B  FFDA   	movff	strcpy@d+1,fsr2h
  4664  00D030  4A09               	infsnz	strcpy@d^0,f,c
  4665  00D032  2A0A               	incf	(strcpy@d+1)^0,f,c
  4666  00D034  0E0F               	movlw	(high __ramtop+-1)
  4667  00D036  64F7               	cpfsgt	tblptrh,c
  4668  00D038  D003               	bra	u3757
  4669  00D03A  0008               	tblrd		*
  4670  00D03C  50F5               	movf	tablat,w,c
  4671  00D03E  D007               	bra	u3750
  4672  00D040                     u3757:
  4673  00D040  006F FFDB FFE9     	movff	tblptrl,fsr0l
  4674  00D046  006F FFDF FFEA     	movff	tblptrh,fsr0h
  4675  00D04C  50EF               	movf	indf0,w,c
  4676  00D04E                     u3750:
  4677  00D04E  6EDF               	movwf	indf2,c
  4678  00D050  50DF               	movf	indf2,w,c
  4679  00D052  A4D8               	btfss	status,2,c
  4680  00D054  EF2E  F068         	goto	u3761
  4681  00D058  EF30  F068         	goto	u3760
  4682  00D05C                     u3761:
  4683  00D05C  EF04  F068         	goto	l3495
  4684  00D060                     u3760:
  4685  00D060  0012               	return		;funcret
  4686  00D062                     __end_of_strcpy:
  4687                           	callstack 0
  4688                           
  4689 ;; *************** function _pad *****************
  4690 ;; Defined at:
  4691 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c"
  4692 ;; Parameters:    Size  Location     Type
  4693 ;;  fp              2   18[COMRAM] PTR struct _IO_FILE
  4694 ;;		 -> NULL(0), 
  4695 ;;  buf             2   20[COMRAM] PTR unsigned char 
  4696 ;;		 -> dbuf(80), 
  4697 ;;  p               2   22[COMRAM] int 
  4698 ;; Auto vars:     Size  Location     Type
  4699 ;;  w               2   27[COMRAM] int 
  4700 ;;  i               2   25[COMRAM] int 
  4701 ;; Return value:  Size  Location     Type
  4702 ;;                  2   18[COMRAM] int 
  4703 ;; Registers used:
  4704 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4705 ;; Tracked objects:
  4706 ;;		On entry : 0/0
  4707 ;;		On exit  : 0/0
  4708 ;;		Unchanged: 0/0
  4709 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4710 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4711 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4712 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4713 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4714 ;;Total ram usage:       11 bytes
  4715 ;; Hardware stack levels used:    1
  4716 ;; Hardware stack levels required when called:    4
  4717 ;; This function calls:
  4718 ;;		_fputc
  4719 ;;		_fputs
  4720 ;;		_strlen
  4721 ;; This function is called by:
  4722 ;;		_efgtoa
  4723 ;; This function uses a non-reentrant model
  4724 ;;
  4725                           
  4726                           	psect	text9
  4727  00D3AA                     __ptext9:
  4728                           	callstack 0
  4729  00D3AA                     _pad:
  4730                           	callstack 22
  4731  00D3AA                     
  4732                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  4733  00D3AA  0100               	movlb	0	; () banked
  4734  00D3AC  A1D0               	btfss	_flags& (0+255),0,b
  4735  00D3AE  EFDB  F069         	goto	u3641
  4736  00D3B2  EFDD  F069         	goto	u3640
  4737  00D3B6                     u3641:
  4738  00D3B6  EFE7  F069         	goto	l3453
  4739  00D3BA                     u3640:
  4740  00D3BA                     
  4741                           ; BSR set to: 0
  4742                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  4743  00D3BA  C015  F00C         	movff	pad@buf,fputs@s
  4744  00D3BE  C016  F00D         	movff	pad@buf+1,fputs@s+1
  4745  00D3C2  C013  F00E         	movff	pad@fp,fputs@fp
  4746  00D3C6  C014  F00F         	movff	pad@fp+1,fputs@fp+1
  4747  00D3CA  ECFB  F066         	call	_fputs	;wreg free
  4748  00D3CE                     l3453:
  4749                           
  4750                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  4751  00D3CE  BE18               	btfsc	(pad@p+1)^0,7,c
  4752  00D3D0  EFEC  F069         	goto	u3651
  4753  00D3D4  EFEE  F069         	goto	u3650
  4754  00D3D8                     u3651:
  4755  00D3D8  EFF4  F069         	goto	l3457
  4756  00D3DC                     u3650:
  4757  00D3DC  C017  F01C         	movff	pad@p,pad@w
  4758  00D3E0  C018  F01D         	movff	pad@p+1,pad@w+1
  4759  00D3E4  EFF8  F069         	goto	l979
  4760  00D3E8                     l3457:
  4761  00D3E8  0E00               	movlw	0
  4762  00D3EA  6E1D               	movwf	(pad@w+1)^0,c
  4763  00D3EC  0E00               	movlw	0
  4764  00D3EE  6E1C               	movwf	pad@w^0,c
  4765  00D3F0                     l979:
  4766                           
  4767                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  4768  00D3F0  0E00               	movlw	0
  4769  00D3F2  6E1B               	movwf	(pad@i+1)^0,c
  4770  00D3F4  0E00               	movlw	0
  4771  00D3F6  6E1A               	movwf	pad@i^0,c
  4772                           
  4773                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  4774  00D3F8  EF0A  F06A         	goto	l3463
  4775  00D3FC                     l3459:
  4776                           
  4777                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  4778  00D3FC  0E00               	movlw	0
  4779  00D3FE  6E04               	movwf	(fputc@c+1)^0,c
  4780  00D400  0E20               	movlw	32
  4781  00D402  6E03               	movwf	fputc@c^0,c
  4782  00D404  C013  F005         	movff	pad@fp,fputc@fp
  4783  00D408  C014  F006         	movff	pad@fp+1,fputc@fp+1
  4784  00D40C  EC7B  F068         	call	_fputc	;wreg free
  4785  00D410                     
  4786                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 86:         ++i;
  4787  00D410  4A1A               	infsnz	pad@i^0,f,c
  4788  00D412  2A1B               	incf	(pad@i+1)^0,f,c
  4789  00D414                     l3463:
  4790                           
  4791                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  4792  00D414  501C               	movf	pad@w^0,w,c
  4793  00D416  5C1A               	subwf	pad@i^0,w,c
  4794  00D418  501B               	movf	(pad@i+1)^0,w,c
  4795  00D41A  0A80               	xorlw	128
  4796  00D41C  6E19               	movwf	??_pad^0,c
  4797  00D41E  501D               	movf	(pad@w+1)^0,w,c
  4798  00D420  0A80               	xorlw	128
  4799  00D422  5819               	subwfb	??_pad^0,w,c
  4800  00D424  A0D8               	btfss	status,0,c
  4801  00D426  EF17  F06A         	goto	u3661
  4802  00D42A  EF19  F06A         	goto	u3660
  4803  00D42E                     u3661:
  4804  00D42E  EFFE  F069         	goto	l3459
  4805  00D432                     u3660:
  4806  00D432                     
  4807                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  4808  00D432  0100               	movlb	0	; () banked
  4809  00D434  B1D0               	btfsc	_flags& (0+255),0,b
  4810  00D436  EF1F  F06A         	goto	u3671
  4811  00D43A  EF21  F06A         	goto	u3670
  4812  00D43E                     u3671:
  4813  00D43E  EF2B  F06A         	goto	l3467
  4814  00D442                     u3670:
  4815  00D442                     
  4816                           ; BSR set to: 0
  4817                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  4818  00D442  C015  F00C         	movff	pad@buf,fputs@s
  4819  00D446  C016  F00D         	movff	pad@buf+1,fputs@s+1
  4820  00D44A  C013  F00E         	movff	pad@fp,fputs@fp
  4821  00D44E  C014  F00F         	movff	pad@fp+1,fputs@fp+1
  4822  00D452  ECFB  F066         	call	_fputs	;wreg free
  4823  00D456                     l3467:
  4824                           
  4825                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  4826  00D456  C015  F001         	movff	pad@buf,strlen@s
  4827  00D45A  C016  F002         	movff	pad@buf+1,strlen@s+1
  4828  00D45E  ECDE  F066         	call	_strlen	;wreg free
  4829  00D462  501C               	movf	pad@w^0,w,c
  4830  00D464  2401               	addwf	?_strlen^0,w,c
  4831  00D466  6E13               	movwf	?_pad^0,c
  4832  00D468  501D               	movf	(pad@w+1)^0,w,c
  4833  00D46A  2002               	addwfc	(?_strlen+1)^0,w,c
  4834  00D46C  6E14               	movwf	(?_pad+1)^0,c
  4835  00D46E  0012               	return		;funcret
  4836  00D470                     __end_of_pad:
  4837                           	callstack 0
  4838                           
  4839 ;; *************** function _strlen *****************
  4840 ;; Defined at:
  4841 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\strlen.c"
  4842 ;; Parameters:    Size  Location     Type
  4843 ;;  s               2    0[COMRAM] PTR const unsigned char 
  4844 ;;		 -> dbuf(80), 
  4845 ;; Auto vars:     Size  Location     Type
  4846 ;;  a               2    2[COMRAM] PTR const unsigned char 
  4847 ;;		 -> dbuf(80), 
  4848 ;; Return value:  Size  Location     Type
  4849 ;;                  2    0[COMRAM] unsigned int 
  4850 ;; Registers used:
  4851 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4852 ;; Tracked objects:
  4853 ;;		On entry : 0/0
  4854 ;;		On exit  : 0/0
  4855 ;;		Unchanged: 0/0
  4856 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4857 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4858 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4859 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4860 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4861 ;;Total ram usage:        4 bytes
  4862 ;; Hardware stack levels used:    1
  4863 ;; This function calls:
  4864 ;;		Nothing
  4865 ;; This function is called by:
  4866 ;;		_pad
  4867 ;; This function uses a non-reentrant model
  4868 ;;
  4869                           
  4870                           	psect	text10
  4871  00CDBC                     __ptext10:
  4872                           	callstack 0
  4873  00CDBC                     _strlen:
  4874                           	callstack 25
  4875  00CDBC  C001  F003         	movff	strlen@s,strlen@a
  4876  00CDC0  C002  F004         	movff	strlen@s+1,strlen@a+1
  4877  00CDC4  EFE6  F066         	goto	l2989
  4878  00CDC8                     l2987:
  4879  00CDC8  4A01               	infsnz	strlen@s^0,f,c
  4880  00CDCA  2A02               	incf	(strlen@s+1)^0,f,c
  4881  00CDCC                     l2989:
  4882  00CDCC  0060  F007  FFD9   	movff	strlen@s,fsr2l
  4883  00CDD2  0060  F00B  FFDA   	movff	strlen@s+1,fsr2h
  4884  00CDD8  50DF               	movf	indf2,w,c
  4885  00CDDA  A4D8               	btfss	status,2,c
  4886  00CDDC  EFF2  F066         	goto	u2911
  4887  00CDE0  EFF4  F066         	goto	u2910
  4888  00CDE4                     u2911:
  4889  00CDE4  EFE4  F066         	goto	l2987
  4890  00CDE8                     u2910:
  4891  00CDE8  5003               	movf	strlen@a^0,w,c
  4892  00CDEA  5C01               	subwf	strlen@s^0,w,c
  4893  00CDEC  6E01               	movwf	?_strlen^0,c
  4894  00CDEE  5004               	movf	(strlen@a+1)^0,w,c
  4895  00CDF0  5802               	subwfb	(strlen@s+1)^0,w,c
  4896  00CDF2  6E02               	movwf	(?_strlen+1)^0,c
  4897  00CDF4  0012               	return		;funcret
  4898  00CDF6                     __end_of_strlen:
  4899                           	callstack 0
  4900                           
  4901 ;; *************** function _fputs *****************
  4902 ;; Defined at:
  4903 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\nf_fputs.c"
  4904 ;; Parameters:    Size  Location     Type
  4905 ;;  s               2   11[COMRAM] PTR const unsigned char 
  4906 ;;		 -> dbuf(80), 
  4907 ;;  fp              2   13[COMRAM] PTR struct _IO_FILE
  4908 ;;		 -> NULL(0), 
  4909 ;; Auto vars:     Size  Location     Type
  4910 ;;  i               2   16[COMRAM] int 
  4911 ;;  c               1   15[COMRAM] unsigned char 
  4912 ;; Return value:  Size  Location     Type
  4913 ;;                  2   11[COMRAM] int 
  4914 ;; Registers used:
  4915 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4916 ;; Tracked objects:
  4917 ;;		On entry : 0/0
  4918 ;;		On exit  : 0/0
  4919 ;;		Unchanged: 0/0
  4920 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4921 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4922 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4923 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4924 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4925 ;;Total ram usage:        7 bytes
  4926 ;; Hardware stack levels used:    1
  4927 ;; Hardware stack levels required when called:    3
  4928 ;; This function calls:
  4929 ;;		_fputc
  4930 ;; This function is called by:
  4931 ;;		_pad
  4932 ;; This function uses a non-reentrant model
  4933 ;;
  4934                           
  4935                           	psect	text11
  4936  00CDF6                     __ptext11:
  4937                           	callstack 0
  4938  00CDF6                     _fputs:
  4939                           	callstack 22
  4940  00CDF6  0E00               	movlw	0
  4941  00CDF8  6E12               	movwf	(fputs@i+1)^0,c
  4942  00CDFA  0E00               	movlw	0
  4943  00CDFC  6E11               	movwf	fputs@i^0,c
  4944  00CDFE  EF0C  F067         	goto	l2983
  4945  00CE02                     l2979:
  4946  00CE02  C010  F003         	movff	fputs@c,fputc@c
  4947  00CE06  6A04               	clrf	(fputc@c+1)^0,c
  4948  00CE08  C00E  F005         	movff	fputs@fp,fputc@fp
  4949  00CE0C  C00F  F006         	movff	fputs@fp+1,fputc@fp+1
  4950  00CE10  EC7B  F068         	call	_fputc	;wreg free
  4951  00CE14  4A11               	infsnz	fputs@i^0,f,c
  4952  00CE16  2A12               	incf	(fputs@i+1)^0,f,c
  4953  00CE18                     l2983:
  4954  00CE18  5011               	movf	fputs@i^0,w,c
  4955  00CE1A  240C               	addwf	fputs@s^0,w,c
  4956  00CE1C  6ED9               	movwf	fsr2l,c
  4957  00CE1E  5012               	movf	(fputs@i+1)^0,w,c
  4958  00CE20  200D               	addwfc	(fputs@s+1)^0,w,c
  4959  00CE22  6EDA               	movwf	fsr2h,c
  4960  00CE24  50DF               	movf	indf2,w,c
  4961  00CE26  6E10               	movwf	fputs@c^0,c
  4962  00CE28  5010               	movf	fputs@c^0,w,c
  4963  00CE2A  A4D8               	btfss	status,2,c
  4964  00CE2C  EF1A  F067         	goto	u2901
  4965  00CE30  EF1C  F067         	goto	u2900
  4966  00CE34                     u2901:
  4967  00CE34  EF01  F067         	goto	l2979
  4968  00CE38                     u2900:
  4969  00CE38  0012               	return		;funcret
  4970  00CE3A                     __end_of_fputs:
  4971                           	callstack 0
  4972                           
  4973 ;; *************** function _fputc *****************
  4974 ;; Defined at:
  4975 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\nf_fputc.c"
  4976 ;; Parameters:    Size  Location     Type
  4977 ;;  c               2    2[COMRAM] int 
  4978 ;;  fp              2    4[COMRAM] PTR struct _IO_FILE
  4979 ;;		 -> NULL(0), 
  4980 ;; Auto vars:     Size  Location     Type
  4981 ;;		None
  4982 ;; Return value:  Size  Location     Type
  4983 ;;                  2    2[COMRAM] int 
  4984 ;; Registers used:
  4985 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4986 ;; Tracked objects:
  4987 ;;		On entry : 0/0
  4988 ;;		On exit  : 0/0
  4989 ;;		Unchanged: 0/0
  4990 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4991 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4992 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4993 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4994 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4995 ;;Total ram usage:        9 bytes
  4996 ;; Hardware stack levels used:    1
  4997 ;; Hardware stack levels required when called:    2
  4998 ;; This function calls:
  4999 ;;		_putch
  5000 ;; This function is called by:
  5001 ;;		_pad
  5002 ;;		_vfpfcnvrt
  5003 ;;		_fputs
  5004 ;; This function uses a non-reentrant model
  5005 ;;
  5006                           
  5007                           	psect	text12
  5008  00D0F6                     __ptext12:
  5009                           	callstack 0
  5010  00D0F6                     _fputc:
  5011                           	callstack 25
  5012  00D0F6  5005               	movf	fputc@fp^0,w,c
  5013  00D0F8  1006               	iorwf	(fputc@fp+1)^0,w,c
  5014  00D0FA  B4D8               	btfsc	status,2,c
  5015  00D0FC  EF82  F068         	goto	u2471
  5016  00D100  EF84  F068         	goto	u2470
  5017  00D104                     u2471:
  5018  00D104  EF8D  F068         	goto	l2765
  5019  00D108                     u2470:
  5020  00D108  5005               	movf	fputc@fp^0,w,c
  5021  00D10A  1006               	iorwf	(fputc@fp+1)^0,w,c
  5022  00D10C  A4D8               	btfss	status,2,c
  5023  00D10E  EF8B  F068         	goto	u2481
  5024  00D112  EF8D  F068         	goto	u2480
  5025  00D116                     u2481:
  5026  00D116  EF92  F068         	goto	l2767
  5027  00D11A                     u2480:
  5028  00D11A                     l2765:
  5029  00D11A  5003               	movf	fputc@c^0,w,c
  5030  00D11C  EC1A  F066         	call	_putch
  5031  00D120  EFC5  F068         	goto	l1217
  5032  00D124                     l2767:
  5033  00D124  EE20 F004          	lfsr	2,4
  5034  00D128  5005               	movf	fputc@fp^0,w,c
  5035  00D12A  26D9               	addwf	fsr2l,f,c
  5036  00D12C  5006               	movf	(fputc@fp+1)^0,w,c
  5037  00D12E  22DA               	addwfc	fsr2h,f,c
  5038  00D130  50DE               	movf	postinc2,w,c
  5039  00D132  10DE               	iorwf	postinc2,w,c
  5040  00D134  B4D8               	btfsc	status,2,c
  5041  00D136  EF9F  F068         	goto	u2491
  5042  00D13A  EFA1  F068         	goto	u2490
  5043  00D13E                     u2491:
  5044  00D13E  EFBC  F068         	goto	l2771
  5045  00D142                     u2490:
  5046  00D142  EE20 F004          	lfsr	2,4
  5047  00D146  5005               	movf	fputc@fp^0,w,c
  5048  00D148  26D9               	addwf	fsr2l,f,c
  5049  00D14A  5006               	movf	(fputc@fp+1)^0,w,c
  5050  00D14C  22DA               	addwfc	fsr2h,f,c
  5051  00D14E  EE10 F002          	lfsr	1,2
  5052  00D152  5005               	movf	fputc@fp^0,w,c
  5053  00D154  26E1               	addwf	fsr1l,f,c
  5054  00D156  5006               	movf	(fputc@fp+1)^0,w,c
  5055  00D158  22E2               	addwfc	fsr1h,f,c
  5056  00D15A  50DE               	movf	postinc2,w,c
  5057  00D15C  5CE6               	subwf	postinc1,w,c
  5058  00D15E  50E6               	movf	postinc1,w,c
  5059  00D160  0A80               	xorlw	128
  5060  00D162  6E0B               	movwf	(??_fputc+4)^0,c
  5061  00D164  50DE               	movf	postinc2,w,c
  5062  00D166  0A80               	xorlw	128
  5063  00D168  580B               	subwfb	(??_fputc+4)^0,w,c
  5064  00D16A  B0D8               	btfsc	status,0,c
  5065  00D16C  EFBA  F068         	goto	u2501
  5066  00D170  EFBC  F068         	goto	u2500
  5067  00D174                     u2501:
  5068  00D174  EFC5  F068         	goto	l1217
  5069  00D178                     u2500:
  5070  00D178                     l2771:
  5071  00D178  EE20 F002          	lfsr	2,2
  5072  00D17C  5005               	movf	fputc@fp^0,w,c
  5073  00D17E  26D9               	addwf	fsr2l,f,c
  5074  00D180  5006               	movf	(fputc@fp+1)^0,w,c
  5075  00D182  22DA               	addwfc	fsr2h,f,c
  5076  00D184  2ADE               	incf	postinc2,f,c
  5077  00D186  0E00               	movlw	0
  5078  00D188  22DD               	addwfc	postdec2,f,c
  5079  00D18A                     l1217:
  5080  00D18A  0012               	return		;funcret
  5081  00D18C                     __end_of_fputc:
  5082                           	callstack 0
  5083                           
  5084 ;; *************** function _putch *****************
  5085 ;; Defined at:
  5086 ;;		line 175 in file "mcc_generated_files/uart2.c"
  5087 ;; Parameters:    Size  Location     Type
  5088 ;;  txData          1    wreg     unsigned char 
  5089 ;; Auto vars:     Size  Location     Type
  5090 ;;  txData          1    1[COMRAM] unsigned char 
  5091 ;; Return value:  Size  Location     Type
  5092 ;;                  1    wreg      void 
  5093 ;; Registers used:
  5094 ;;		wreg, status,2, cstack
  5095 ;; Tracked objects:
  5096 ;;		On entry : 0/0
  5097 ;;		On exit  : 0/0
  5098 ;;		Unchanged: 0/0
  5099 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5100 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5101 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5102 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5103 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5104 ;;Total ram usage:        1 bytes
  5105 ;; Hardware stack levels used:    1
  5106 ;; Hardware stack levels required when called:    1
  5107 ;; This function calls:
  5108 ;;		_UART2_Write
  5109 ;; This function is called by:
  5110 ;;		_fputc
  5111 ;; This function uses a non-reentrant model
  5112 ;;
  5113                           
  5114                           	psect	text13
  5115  00CC34                     __ptext13:
  5116                           	callstack 0
  5117  00CC34                     _putch:
  5118                           	callstack 25
  5119                           
  5120                           ;incstack = 0
  5121                           ;putch@txData stored from wreg
  5122  00CC34  6E02               	movwf	putch@txData^0,c
  5123  00CC36                     
  5124                           ;mcc_generated_files/uart2.c: 175: void putch(char txData);mcc_generated_files/uart2.c: 
      +                          176: {;mcc_generated_files/uart2.c: 177:     UART2_Write(txData);
  5125  00CC36  5002               	movf	putch@txData^0,w,c
  5126  00CC38  EC34  F066         	call	_UART2_Write
  5127  00CC3C  0012               	return		;funcret
  5128  00CC3E                     __end_of_putch:
  5129                           	callstack 0
  5130                           
  5131 ;; *************** function _UART2_Write *****************
  5132 ;; Defined at:
  5133 ;;		line 161 in file "mcc_generated_files/uart2.c"
  5134 ;; Parameters:    Size  Location     Type
  5135 ;;  txData          1    wreg     unsigned char 
  5136 ;; Auto vars:     Size  Location     Type
  5137 ;;  txData          1    0[COMRAM] unsigned char 
  5138 ;; Return value:  Size  Location     Type
  5139 ;;                  1    wreg      void 
  5140 ;; Registers used:
  5141 ;;		wreg
  5142 ;; Tracked objects:
  5143 ;;		On entry : 0/0
  5144 ;;		On exit  : 0/0
  5145 ;;		Unchanged: 0/0
  5146 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5147 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5148 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5149 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5150 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5151 ;;Total ram usage:        1 bytes
  5152 ;; Hardware stack levels used:    1
  5153 ;; This function calls:
  5154 ;;		Nothing
  5155 ;; This function is called by:
  5156 ;;		_putch
  5157 ;; This function uses a non-reentrant model
  5158 ;;
  5159                           
  5160                           	psect	text14
  5161  00CC68                     __ptext14:
  5162                           	callstack 0
  5163  00CC68                     _UART2_Write:
  5164                           	callstack 25
  5165                           
  5166                           ;incstack = 0
  5167                           ;UART2_Write@txData stored from wreg
  5168  00CC68  6E01               	movwf	UART2_Write@txData^0,c
  5169  00CC6A                     l83:
  5170                           
  5171                           ;mcc_generated_files/uart2.c: 163:     while(0 == PIR6bits.U2TXIF)
  5172  00CC6A  0139               	movlb	57	; () banked
  5173  00CC6C  A7A6               	btfss	166,3,b	;volatile
  5174  00CC6E  EF3B  F066         	goto	u2461
  5175  00CC72  EF3D  F066         	goto	u2460
  5176  00CC76                     u2461:
  5177  00CC76  EF35  F066         	goto	l83
  5178  00CC7A                     u2460:
  5179  00CC7A                     
  5180                           ; BSR set to: 57
  5181                           ;mcc_generated_files/uart2.c: 167:     U2TXB = txData;
  5182  00CC7A  0060  F007  FDD2   	movff	UART2_Write@txData,15826	;volatile
  5183  00CC80                     
  5184                           ; BSR set to: 57
  5185  00CC80  0012               	return		;funcret
  5186  00CC82                     __end_of_UART2_Write:
  5187                           	callstack 0
  5188                           
  5189 ;; *************** function _floorf *****************
  5190 ;; Defined at:
  5191 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\floorf.c"
  5192 ;; Parameters:    Size  Location     Type
  5193 ;;  x               4   25[COMRAM] float 
  5194 ;; Auto vars:     Size  Location     Type
  5195 ;;  u               4   41[COMRAM] struct .
  5196 ;;  m               4   35[COMRAM] unsigned long 
  5197 ;;  e               2   39[COMRAM] int 
  5198 ;; Return value:  Size  Location     Type
  5199 ;;                  4   25[COMRAM] float 
  5200 ;; Registers used:
  5201 ;;		wreg, status,2, status,0
  5202 ;; Tracked objects:
  5203 ;;		On entry : 0/0
  5204 ;;		On exit  : 0/0
  5205 ;;		Unchanged: 0/0
  5206 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5207 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5208 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5209 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5210 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5211 ;;Total ram usage:       20 bytes
  5212 ;; Hardware stack levels used:    1
  5213 ;; This function calls:
  5214 ;;		Nothing
  5215 ;; This function is called by:
  5216 ;;		_efgtoa
  5217 ;; This function uses a non-reentrant model
  5218 ;;
  5219                           
  5220                           	psect	text15
  5221  00DB96                     __ptext15:
  5222                           	callstack 0
  5223  00DB96                     _floorf:
  5224                           	callstack 26
  5225  00DB96  C0C2  F02A         	movff	floorf@F527,floorf@u
  5226  00DB9A  C0C3  F02B         	movff	floorf@F527+1,floorf@u+1
  5227  00DB9E  C0C4  F02C         	movff	floorf@F527+2,floorf@u+2
  5228  00DBA2  C0C5  F02D         	movff	floorf@F527+3,floorf@u+3
  5229  00DBA6  C01A  F02A         	movff	floorf@x,floorf@u
  5230  00DBAA  C01B  F02B         	movff	floorf@x+1,floorf@u+1
  5231  00DBAE  C01C  F02C         	movff	floorf@x+2,floorf@u+2
  5232  00DBB2  C01D  F02D         	movff	floorf@x+3,floorf@u+3
  5233  00DBB6  0E81               	movlw	129
  5234  00DBB8  6E1E               	movwf	??_floorf^0,c
  5235  00DBBA  0EFF               	movlw	255
  5236  00DBBC  6E1F               	movwf	(??_floorf+1)^0,c
  5237  00DBBE  C02A  F020         	movff	floorf@u,??_floorf+2
  5238  00DBC2  C02B  F021         	movff	floorf@u+1,??_floorf+3
  5239  00DBC6  C02C  F022         	movff	floorf@u+2,??_floorf+4
  5240  00DBCA  C02D  F023         	movff	floorf@u+3,??_floorf+5
  5241  00DBCE  0E18               	movlw	24
  5242  00DBD0  EFEF  F06D         	goto	u3800
  5243  00DBD4                     u3805:
  5244  00DBD4  90D8               	bcf	status,0,c
  5245  00DBD6  3223               	rrcf	(??_floorf+5)^0,f,c
  5246  00DBD8  3222               	rrcf	(??_floorf+4)^0,f,c
  5247  00DBDA  3221               	rrcf	(??_floorf+3)^0,f,c
  5248  00DBDC  3220               	rrcf	(??_floorf+2)^0,f,c
  5249  00DBDE                     u3800:
  5250  00DBDE  2EE8               	decfsz	wreg,f,c
  5251  00DBE0  EFEA  F06D         	goto	u3805
  5252  00DBE4  5020               	movf	(??_floorf+2)^0,w,c
  5253  00DBE6  241E               	addwf	??_floorf^0,w,c
  5254  00DBE8  6E28               	movwf	floorf@e^0,c
  5255  00DBEA  0E00               	movlw	0
  5256  00DBEC  201F               	addwfc	(??_floorf+1)^0,w,c
  5257  00DBEE  6E29               	movwf	(floorf@e+1)^0,c
  5258  00DBF0  BE29               	btfsc	(floorf@e+1)^0,7,c
  5259  00DBF2  EF04  F06E         	goto	u3811
  5260  00DBF6  5029               	movf	(floorf@e+1)^0,w,c
  5261  00DBF8  E109               	bnz	u3810
  5262  00DBFA  0E17               	movlw	23
  5263  00DBFC  5C28               	subwf	floorf@e^0,w,c
  5264  00DBFE  A0D8               	btfss	status,0,c
  5265  00DC00  EF04  F06E         	goto	u3811
  5266  00DC04  EF06  F06E         	goto	u3810
  5267  00DC08                     u3811:
  5268  00DC08  EF10  F06E         	goto	l3513
  5269  00DC0C                     u3810:
  5270  00DC0C                     l3511:
  5271  00DC0C  C01A  F01A         	movff	floorf@x,?_floorf
  5272  00DC10  C01B  F01B         	movff	floorf@x+1,?_floorf+1
  5273  00DC14  C01C  F01C         	movff	floorf@x+2,?_floorf+2
  5274  00DC18  C01D  F01D         	movff	floorf@x+3,?_floorf+3
  5275  00DC1C  EFD3  F06E         	goto	l1178
  5276  00DC20                     l3513:
  5277  00DC20  BE29               	btfsc	(floorf@e+1)^0,7,c
  5278  00DC22  EF15  F06E         	goto	u3821
  5279  00DC26  EF17  F06E         	goto	u3820
  5280  00DC2A                     u3821:
  5281  00DC2A  EF87  F06E         	goto	l3523
  5282  00DC2E                     u3820:
  5283  00DC2E  C028  F01E         	movff	floorf@e,??_floorf
  5284  00DC32  0EFF               	movlw	255
  5285  00DC34  6E1F               	movwf	(??_floorf+1)^0,c
  5286  00DC36  0EFF               	movlw	255
  5287  00DC38  6E20               	movwf	(??_floorf+2)^0,c
  5288  00DC3A  0E7F               	movlw	127
  5289  00DC3C  6E21               	movwf	(??_floorf+3)^0,c
  5290  00DC3E  0E00               	movlw	0
  5291  00DC40  6E22               	movwf	(??_floorf+4)^0,c
  5292  00DC42                     u3835:
  5293  00DC42  661E               	tstfsz	??_floorf^0,c
  5294  00DC44  EF26  F06E         	goto	u3836
  5295  00DC48  EF2E  F06E         	goto	u3837
  5296  00DC4C                     u3836:
  5297  00DC4C  3422               	rlcf	(??_floorf+4)^0,w,c
  5298  00DC4E  3222               	rrcf	(??_floorf+4)^0,f,c
  5299  00DC50  3221               	rrcf	(??_floorf+3)^0,f,c
  5300  00DC52  3220               	rrcf	(??_floorf+2)^0,f,c
  5301  00DC54  321F               	rrcf	(??_floorf+1)^0,f,c
  5302  00DC56  2E1E               	decfsz	??_floorf^0,f,c
  5303  00DC58  EF21  F06E         	goto	u3835
  5304  00DC5C                     u3837:
  5305  00DC5C  C01F  F024         	movff	??_floorf+1,floorf@m
  5306  00DC60  C020  F025         	movff	??_floorf+2,floorf@m+1
  5307  00DC64  C021  F026         	movff	??_floorf+3,floorf@m+2
  5308  00DC68  C022  F027         	movff	??_floorf+4,floorf@m+3
  5309  00DC6C  5024               	movf	floorf@m^0,w,c
  5310  00DC6E  142A               	andwf	floorf@u^0,w,c
  5311  00DC70  6E1E               	movwf	??_floorf^0,c
  5312  00DC72  5025               	movf	(floorf@m+1)^0,w,c
  5313  00DC74  142B               	andwf	(floorf@u+1)^0,w,c
  5314  00DC76  6E1F               	movwf	(??_floorf+1)^0,c
  5315  00DC78  5026               	movf	(floorf@m+2)^0,w,c
  5316  00DC7A  142C               	andwf	(floorf@u+2)^0,w,c
  5317  00DC7C  6E20               	movwf	(??_floorf+2)^0,c
  5318  00DC7E  5027               	movf	(floorf@m+3)^0,w,c
  5319  00DC80  142D               	andwf	(floorf@u+3)^0,w,c
  5320  00DC82  6E21               	movwf	(??_floorf+3)^0,c
  5321  00DC84  501E               	movf	??_floorf^0,w,c
  5322  00DC86  101F               	iorwf	(??_floorf+1)^0,w,c
  5323  00DC88  1020               	iorwf	(??_floorf+2)^0,w,c
  5324  00DC8A  1021               	iorwf	(??_floorf+3)^0,w,c
  5325  00DC8C  A4D8               	btfss	status,2,c
  5326  00DC8E  EF4B  F06E         	goto	u3841
  5327  00DC92  EF4D  F06E         	goto	u3840
  5328  00DC96                     u3841:
  5329  00DC96  EF4F  F06E         	goto	l3519
  5330  00DC9A                     u3840:
  5331  00DC9A  EF06  F06E         	goto	l3511
  5332  00DC9E                     l3519:
  5333  00DC9E  C02A  F01E         	movff	floorf@u,??_floorf
  5334  00DCA2  C02B  F01F         	movff	floorf@u+1,??_floorf+1
  5335  00DCA6  C02C  F020         	movff	floorf@u+2,??_floorf+2
  5336  00DCAA  C02D  F021         	movff	floorf@u+3,??_floorf+3
  5337  00DCAE  0E20               	movlw	32
  5338  00DCB0  EF5F  F06E         	goto	u3850
  5339  00DCB4                     u3855:
  5340  00DCB4  90D8               	bcf	status,0,c
  5341  00DCB6  3221               	rrcf	(??_floorf+3)^0,f,c
  5342  00DCB8  3220               	rrcf	(??_floorf+2)^0,f,c
  5343  00DCBA  321F               	rrcf	(??_floorf+1)^0,f,c
  5344  00DCBC  321E               	rrcf	??_floorf^0,f,c
  5345  00DCBE                     u3850:
  5346  00DCBE  2EE8               	decfsz	wreg,f,c
  5347  00DCC0  EF5A  F06E         	goto	u3855
  5348  00DCC4  501E               	movf	??_floorf^0,w,c
  5349  00DCC6  101F               	iorwf	(??_floorf+1)^0,w,c
  5350  00DCC8  1020               	iorwf	(??_floorf+2)^0,w,c
  5351  00DCCA  1021               	iorwf	(??_floorf+3)^0,w,c
  5352  00DCCC  B4D8               	btfsc	status,2,c
  5353  00DCCE  EF6B  F06E         	goto	u3861
  5354  00DCD2  EF6D  F06E         	goto	u3860
  5355  00DCD6                     u3861:
  5356  00DCD6  EF75  F06E         	goto	l1181
  5357  00DCDA                     u3860:
  5358  00DCDA  5024               	movf	floorf@m^0,w,c
  5359  00DCDC  262A               	addwf	floorf@u^0,f,c
  5360  00DCDE  5025               	movf	(floorf@m+1)^0,w,c
  5361  00DCE0  222B               	addwfc	(floorf@u+1)^0,f,c
  5362  00DCE2  5026               	movf	(floorf@m+2)^0,w,c
  5363  00DCE4  222C               	addwfc	(floorf@u+2)^0,f,c
  5364  00DCE6  5027               	movf	(floorf@m+3)^0,w,c
  5365  00DCE8  222D               	addwfc	(floorf@u+3)^0,f,c
  5366  00DCEA                     l1181:
  5367  00DCEA  1C24               	comf	floorf@m^0,w,c
  5368  00DCEC  6E1E               	movwf	??_floorf^0,c
  5369  00DCEE  1C25               	comf	(floorf@m+1)^0,w,c
  5370  00DCF0  6E1F               	movwf	(??_floorf+1)^0,c
  5371  00DCF2  1C26               	comf	(floorf@m+2)^0,w,c
  5372  00DCF4  6E20               	movwf	(??_floorf+2)^0,c
  5373  00DCF6  1C27               	comf	(floorf@m+3)^0,w,c
  5374  00DCF8  6E21               	movwf	(??_floorf+3)^0,c
  5375  00DCFA  501E               	movf	??_floorf^0,w,c
  5376  00DCFC  162A               	andwf	floorf@u^0,f,c
  5377  00DCFE  501F               	movf	(??_floorf+1)^0,w,c
  5378  00DD00  162B               	andwf	(floorf@u+1)^0,f,c
  5379  00DD02  5020               	movf	(??_floorf+2)^0,w,c
  5380  00DD04  162C               	andwf	(floorf@u+2)^0,f,c
  5381  00DD06  5021               	movf	(??_floorf+3)^0,w,c
  5382  00DD08  162D               	andwf	(floorf@u+3)^0,f,c
  5383  00DD0A  EFCB  F06E         	goto	l3531
  5384  00DD0E                     l3523:
  5385  00DD0E  C02A  F01E         	movff	floorf@u,??_floorf
  5386  00DD12  C02B  F01F         	movff	floorf@u+1,??_floorf+1
  5387  00DD16  C02C  F020         	movff	floorf@u+2,??_floorf+2
  5388  00DD1A  C02D  F021         	movff	floorf@u+3,??_floorf+3
  5389  00DD1E  0E20               	movlw	32
  5390  00DD20  EF97  F06E         	goto	u3870
  5391  00DD24                     u3875:
  5392  00DD24  90D8               	bcf	status,0,c
  5393  00DD26  3221               	rrcf	(??_floorf+3)^0,f,c
  5394  00DD28  3220               	rrcf	(??_floorf+2)^0,f,c
  5395  00DD2A  321F               	rrcf	(??_floorf+1)^0,f,c
  5396  00DD2C  321E               	rrcf	??_floorf^0,f,c
  5397  00DD2E                     u3870:
  5398  00DD2E  2EE8               	decfsz	wreg,f,c
  5399  00DD30  EF92  F06E         	goto	u3875
  5400  00DD34  501E               	movf	??_floorf^0,w,c
  5401  00DD36  101F               	iorwf	(??_floorf+1)^0,w,c
  5402  00DD38  1020               	iorwf	(??_floorf+2)^0,w,c
  5403  00DD3A  1021               	iorwf	(??_floorf+3)^0,w,c
  5404  00DD3C  A4D8               	btfss	status,2,c
  5405  00DD3E  EFA3  F06E         	goto	u3881
  5406  00DD42  EFA5  F06E         	goto	u3880
  5407  00DD46                     u3881:
  5408  00DD46  EFAF  F06E         	goto	l3527
  5409  00DD4A                     u3880:
  5410  00DD4A  0E00               	movlw	0
  5411  00DD4C  6E2A               	movwf	floorf@u^0,c
  5412  00DD4E  0E00               	movlw	0
  5413  00DD50  6E2B               	movwf	(floorf@u+1)^0,c
  5414  00DD52  0E00               	movlw	0
  5415  00DD54  6E2C               	movwf	(floorf@u+2)^0,c
  5416  00DD56  0E00               	movlw	0
  5417  00DD58  6E2D               	movwf	(floorf@u+3)^0,c
  5418  00DD5A  EFCB  F06E         	goto	l3531
  5419  00DD5E                     l3527:
  5420  00DD5E  90D8               	bcf	status,0,c
  5421  00DD60  342A               	rlcf	floorf@u^0,w,c
  5422  00DD62  6E1E               	movwf	??_floorf^0,c
  5423  00DD64  342B               	rlcf	(floorf@u+1)^0,w,c
  5424  00DD66  6E1F               	movwf	(??_floorf+1)^0,c
  5425  00DD68  342C               	rlcf	(floorf@u+2)^0,w,c
  5426  00DD6A  6E20               	movwf	(??_floorf+2)^0,c
  5427  00DD6C  342D               	rlcf	(floorf@u+3)^0,w,c
  5428  00DD6E  6E21               	movwf	(??_floorf+3)^0,c
  5429  00DD70  501E               	movf	??_floorf^0,w,c
  5430  00DD72  101F               	iorwf	(??_floorf+1)^0,w,c
  5431  00DD74  1020               	iorwf	(??_floorf+2)^0,w,c
  5432  00DD76  1021               	iorwf	(??_floorf+3)^0,w,c
  5433  00DD78  B4D8               	btfsc	status,2,c
  5434  00DD7A  EFC1  F06E         	goto	u3891
  5435  00DD7E  EFC3  F06E         	goto	u3890
  5436  00DD82                     u3891:
  5437  00DD82  EFCB  F06E         	goto	l3531
  5438  00DD86                     u3890:
  5439  00DD86  0E00               	movlw	0
  5440  00DD88  6E2A               	movwf	floorf@u^0,c
  5441  00DD8A  0E00               	movlw	0
  5442  00DD8C  6E2B               	movwf	(floorf@u+1)^0,c
  5443  00DD8E  0E80               	movlw	128
  5444  00DD90  6E2C               	movwf	(floorf@u+2)^0,c
  5445  00DD92  0EBF               	movlw	191
  5446  00DD94  6E2D               	movwf	(floorf@u+3)^0,c
  5447  00DD96                     l3531:
  5448  00DD96  C02A  F01A         	movff	floorf@u,?_floorf
  5449  00DD9A  C02B  F01B         	movff	floorf@u+1,?_floorf+1
  5450  00DD9E  C02C  F01C         	movff	floorf@u+2,?_floorf+2
  5451  00DDA2  C02D  F01D         	movff	floorf@u+3,?_floorf+3
  5452  00DDA6                     l1178:
  5453  00DDA6  0012               	return		;funcret
  5454  00DDA8                     __end_of_floorf:
  5455                           	callstack 0
  5456                           
  5457 ;; *************** function ___fpclassifyf *****************
  5458 ;; Defined at:
  5459 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\__fpclassifyf.c"
  5460 ;; Parameters:    Size  Location     Type
  5461 ;;  x               4    0[COMRAM] float 
  5462 ;; Auto vars:     Size  Location     Type
  5463 ;;  u               4   10[COMRAM] struct .
  5464 ;;  e               2    8[COMRAM] int 
  5465 ;; Return value:  Size  Location     Type
  5466 ;;                  2    0[COMRAM] int 
  5467 ;; Registers used:
  5468 ;;		wreg, status,2, status,0
  5469 ;; Tracked objects:
  5470 ;;		On entry : 0/0
  5471 ;;		On exit  : 0/0
  5472 ;;		Unchanged: 0/0
  5473 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5474 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5475 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5476 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5477 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5478 ;;Total ram usage:       14 bytes
  5479 ;; Hardware stack levels used:    1
  5480 ;; This function calls:
  5481 ;;		Nothing
  5482 ;; This function is called by:
  5483 ;;		_efgtoa
  5484 ;; This function uses a non-reentrant model
  5485 ;;
  5486                           
  5487                           	psect	text16
  5488  00D564                     __ptext16:
  5489                           	callstack 0
  5490  00D564                     ___fpclassifyf:
  5491                           	callstack 26
  5492  00D564  C0C6  F00B         	movff	___fpclassifyf@F465,___fpclassifyf@u
  5493  00D568  C0C7  F00C         	movff	___fpclassifyf@F465+1,___fpclassifyf@u+1
  5494  00D56C  C0C8  F00D         	movff	___fpclassifyf@F465+2,___fpclassifyf@u+2
  5495  00D570  C0C9  F00E         	movff	___fpclassifyf@F465+3,___fpclassifyf@u+3
  5496  00D574  C001  F00B         	movff	___fpclassifyf@x,___fpclassifyf@u
  5497  00D578  C002  F00C         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  5498  00D57C  C003  F00D         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  5499  00D580  C004  F00E         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  5500  00D584  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  5501  00D588  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  5502  00D58C  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  5503  00D590  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  5504  00D594  0E18               	movlw	24
  5505  00D596  EFD2  F06A         	goto	u3680
  5506  00D59A                     u3685:
  5507  00D59A  90D8               	bcf	status,0,c
  5508  00D59C  3208               	rrcf	(??___fpclassifyf+3)^0,f,c
  5509  00D59E  3207               	rrcf	(??___fpclassifyf+2)^0,f,c
  5510  00D5A0  3206               	rrcf	(??___fpclassifyf+1)^0,f,c
  5511  00D5A2  3205               	rrcf	??___fpclassifyf^0,f,c
  5512  00D5A4                     u3680:
  5513  00D5A4  2EE8               	decfsz	wreg,f,c
  5514  00D5A6  EFCD  F06A         	goto	u3685
  5515  00D5AA  5005               	movf	??___fpclassifyf^0,w,c
  5516  00D5AC  6E09               	movwf	___fpclassifyf@e^0,c
  5517  00D5AE  6A0A               	clrf	(___fpclassifyf@e+1)^0,c
  5518  00D5B0  5009               	movf	___fpclassifyf@e^0,w,c
  5519  00D5B2  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  5520  00D5B4  A4D8               	btfss	status,2,c
  5521  00D5B6  EFDF  F06A         	goto	u3691
  5522  00D5BA  EFE1  F06A         	goto	u3690
  5523  00D5BE                     u3691:
  5524  00D5BE  EF01  F06B         	goto	l3483
  5525  00D5C2                     u3690:
  5526  00D5C2  90D8               	bcf	status,0,c
  5527  00D5C4  340B               	rlcf	___fpclassifyf@u^0,w,c
  5528  00D5C6  6E05               	movwf	??___fpclassifyf^0,c
  5529  00D5C8  340C               	rlcf	(___fpclassifyf@u+1)^0,w,c
  5530  00D5CA  6E06               	movwf	(??___fpclassifyf+1)^0,c
  5531  00D5CC  340D               	rlcf	(___fpclassifyf@u+2)^0,w,c
  5532  00D5CE  6E07               	movwf	(??___fpclassifyf+2)^0,c
  5533  00D5D0  340E               	rlcf	(___fpclassifyf@u+3)^0,w,c
  5534  00D5D2  6E08               	movwf	(??___fpclassifyf+3)^0,c
  5535  00D5D4  5005               	movf	??___fpclassifyf^0,w,c
  5536  00D5D6  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  5537  00D5D8  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  5538  00D5DA  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  5539  00D5DC  A4D8               	btfss	status,2,c
  5540  00D5DE  EFF3  F06A         	goto	u3701
  5541  00D5E2  EFF5  F06A         	goto	u3700
  5542  00D5E6                     u3701:
  5543  00D5E6  EFFB  F06A         	goto	l3479
  5544  00D5EA                     u3700:
  5545  00D5EA  0E00               	movlw	0
  5546  00D5EC  6E02               	movwf	(?___fpclassifyf+1)^0,c
  5547  00D5EE  0E02               	movlw	2
  5548  00D5F0  6E01               	movwf	?___fpclassifyf^0,c
  5549  00D5F2  EF30  F06B         	goto	l1140
  5550  00D5F6                     l3479:
  5551  00D5F6  0E00               	movlw	0
  5552  00D5F8  6E02               	movwf	(?___fpclassifyf+1)^0,c
  5553  00D5FA  0E03               	movlw	3
  5554  00D5FC  6E01               	movwf	?___fpclassifyf^0,c
  5555  00D5FE  EF30  F06B         	goto	l1140
  5556  00D602                     l3483:
  5557  00D602  2809               	incf	___fpclassifyf@e^0,w,c
  5558  00D604  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  5559  00D606  A4D8               	btfss	status,2,c
  5560  00D608  EF08  F06B         	goto	u3711
  5561  00D60C  EF0A  F06B         	goto	u3710
  5562  00D610                     u3711:
  5563  00D610  EF2C  F06B         	goto	l3489
  5564  00D614                     u3710:
  5565  00D614  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  5566  00D618  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  5567  00D61C  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  5568  00D620  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  5569  00D624  0E09               	movlw	9
  5570  00D626                     u3725:
  5571  00D626  90D8               	bcf	status,0,c
  5572  00D628  3605               	rlcf	??___fpclassifyf^0,f,c
  5573  00D62A  3606               	rlcf	(??___fpclassifyf+1)^0,f,c
  5574  00D62C  3607               	rlcf	(??___fpclassifyf+2)^0,f,c
  5575  00D62E  3608               	rlcf	(??___fpclassifyf+3)^0,f,c
  5576  00D630  2EE8               	decfsz	wreg,f,c
  5577  00D632  EF13  F06B         	goto	u3725
  5578  00D636  5005               	movf	??___fpclassifyf^0,w,c
  5579  00D638  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  5580  00D63A  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  5581  00D63C  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  5582  00D63E  B4D8               	btfsc	status,2,c
  5583  00D640  EF24  F06B         	goto	u3731
  5584  00D644  EF27  F06B         	goto	u3730
  5585  00D648                     u3731:
  5586  00D648  0E01               	movlw	1
  5587  00D64A  EF28  F06B         	goto	u3740
  5588  00D64E                     u3730:
  5589  00D64E  0E00               	movlw	0
  5590  00D650                     u3740:
  5591  00D650  6E01               	movwf	?___fpclassifyf^0,c
  5592  00D652  6A02               	clrf	(?___fpclassifyf+1)^0,c
  5593  00D654  EF30  F06B         	goto	l1140
  5594  00D658                     l3489:
  5595  00D658  0E00               	movlw	0
  5596  00D65A  6E02               	movwf	(?___fpclassifyf+1)^0,c
  5597  00D65C  0E04               	movlw	4
  5598  00D65E  6E01               	movwf	?___fpclassifyf^0,c
  5599  00D660                     l1140:
  5600  00D660  0012               	return		;funcret
  5601  00D662                     __end_of___fpclassifyf:
  5602                           	callstack 0
  5603                           
  5604 ;; *************** function ___fltol *****************
  5605 ;; Defined at:
  5606 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\fltol.c"
  5607 ;; Parameters:    Size  Location     Type
  5608 ;;  f1              4    0[COMRAM] int 
  5609 ;; Auto vars:     Size  Location     Type
  5610 ;;  exp1            1    9[COMRAM] unsigned char 
  5611 ;;  sign1           1    8[COMRAM] unsigned char 
  5612 ;; Return value:  Size  Location     Type
  5613 ;;                  4    0[COMRAM] long 
  5614 ;; Registers used:
  5615 ;;		wreg, status,2, status,0
  5616 ;; Tracked objects:
  5617 ;;		On entry : 0/0
  5618 ;;		On exit  : 0/0
  5619 ;;		Unchanged: 0/0
  5620 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5621 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5622 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5623 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5624 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5625 ;;Total ram usage:       10 bytes
  5626 ;; Hardware stack levels used:    1
  5627 ;; This function calls:
  5628 ;;		Nothing
  5629 ;; This function is called by:
  5630 ;;		_efgtoa
  5631 ;; This function uses a non-reentrant model
  5632 ;;
  5633                           
  5634                           	psect	text17
  5635  00D766                     __ptext17:
  5636                           	callstack 0
  5637  00D766                     ___fltol:
  5638                           	callstack 26
  5639  00D766  3403               	rlcf	(___fltol@f1+2)^0,w,c
  5640  00D768  3404               	rlcf	(___fltol@f1+3)^0,w,c
  5641  00D76A  6E0A               	movwf	___fltol@exp1^0,c
  5642  00D76C  500A               	movf	___fltol@exp1^0,w,c
  5643  00D76E  A4D8               	btfss	status,2,c
  5644  00D770  EFBC  F06B         	goto	u3571
  5645  00D774  EFBE  F06B         	goto	u3570
  5646  00D778                     u3571:
  5647  00D778  EFC8  F06B         	goto	l3411
  5648  00D77C                     u3570:
  5649  00D77C                     l3407:
  5650  00D77C  0E00               	movlw	0
  5651  00D77E  6E01               	movwf	?___fltol^0,c
  5652  00D780  0E00               	movlw	0
  5653  00D782  6E02               	movwf	(?___fltol+1)^0,c
  5654  00D784  0E00               	movlw	0
  5655  00D786  6E03               	movwf	(?___fltol+2)^0,c
  5656  00D788  0E00               	movlw	0
  5657  00D78A  6E04               	movwf	(?___fltol+3)^0,c
  5658  00D78C  EF35  F06C         	goto	l557
  5659  00D790                     l3411:
  5660  00D790  C001  F005         	movff	___fltol@f1,??___fltol
  5661  00D794  C002  F006         	movff	___fltol@f1+1,??___fltol+1
  5662  00D798  C003  F007         	movff	___fltol@f1+2,??___fltol+2
  5663  00D79C  C004  F008         	movff	___fltol@f1+3,??___fltol+3
  5664  00D7A0  0E20               	movlw	32
  5665  00D7A2  EFD8  F06B         	goto	u3580
  5666  00D7A6                     u3585:
  5667  00D7A6  90D8               	bcf	status,0,c
  5668  00D7A8  3208               	rrcf	(??___fltol+3)^0,f,c
  5669  00D7AA  3207               	rrcf	(??___fltol+2)^0,f,c
  5670  00D7AC  3206               	rrcf	(??___fltol+1)^0,f,c
  5671  00D7AE  3205               	rrcf	??___fltol^0,f,c
  5672  00D7B0                     u3580:
  5673  00D7B0  2EE8               	decfsz	wreg,f,c
  5674  00D7B2  EFD3  F06B         	goto	u3585
  5675  00D7B6  5005               	movf	??___fltol^0,w,c
  5676  00D7B8  6E09               	movwf	___fltol@sign1^0,c
  5677  00D7BA  8E03               	bsf	(___fltol@f1+2)^0,7,c
  5678  00D7BC  0EFF               	movlw	255
  5679  00D7BE  1601               	andwf	___fltol@f1^0,f,c
  5680  00D7C0  0EFF               	movlw	255
  5681  00D7C2  1602               	andwf	(___fltol@f1+1)^0,f,c
  5682  00D7C4  0EFF               	movlw	255
  5683  00D7C6  1603               	andwf	(___fltol@f1+2)^0,f,c
  5684  00D7C8  0E00               	movlw	0
  5685  00D7CA  1604               	andwf	(___fltol@f1+3)^0,f,c
  5686  00D7CC  0E96               	movlw	150
  5687  00D7CE  5E0A               	subwf	___fltol@exp1^0,f,c
  5688  00D7D0  BE0A               	btfsc	___fltol@exp1^0,7,c
  5689  00D7D2  EFEF  F06B         	goto	u3590
  5690  00D7D6  EFED  F06B         	goto	u3591
  5691  00D7DA                     u3591:
  5692  00D7DA  EF05  F06C         	goto	l3431
  5693  00D7DE                     u3590:
  5694  00D7DE  500A               	movf	___fltol@exp1^0,w,c
  5695  00D7E0  0A80               	xorlw	128
  5696  00D7E2  0F97               	addlw	151
  5697  00D7E4  B0D8               	btfsc	status,0,c
  5698  00D7E6  EFF7  F06B         	goto	u3601
  5699  00D7EA  EFF9  F06B         	goto	u3600
  5700  00D7EE                     u3601:
  5701  00D7EE  EFFB  F06B         	goto	l3427
  5702  00D7F2                     u3600:
  5703  00D7F2  EFBE  F06B         	goto	l3407
  5704  00D7F6                     l3427:
  5705  00D7F6  90D8               	bcf	status,0,c
  5706  00D7F8  3204               	rrcf	(___fltol@f1+3)^0,f,c
  5707  00D7FA  3203               	rrcf	(___fltol@f1+2)^0,f,c
  5708  00D7FC  3202               	rrcf	(___fltol@f1+1)^0,f,c
  5709  00D7FE  3201               	rrcf	___fltol@f1^0,f,c
  5710  00D800  3E0A               	incfsz	___fltol@exp1^0,f,c
  5711  00D802  EFFB  F06B         	goto	l3427
  5712  00D806  EF1D  F06C         	goto	l3441
  5713  00D80A                     l3431:
  5714  00D80A  0E1F               	movlw	31
  5715  00D80C  640A               	cpfsgt	___fltol@exp1^0,c
  5716  00D80E  EF0B  F06C         	goto	u3611
  5717  00D812  EF0D  F06C         	goto	u3610
  5718  00D816                     u3611:
  5719  00D816  EF15  F06C         	goto	l3439
  5720  00D81A                     u3610:
  5721  00D81A  EFBE  F06B         	goto	l3407
  5722  00D81E                     l3437:
  5723  00D81E  90D8               	bcf	status,0,c
  5724  00D820  3601               	rlcf	___fltol@f1^0,f,c
  5725  00D822  3602               	rlcf	(___fltol@f1+1)^0,f,c
  5726  00D824  3603               	rlcf	(___fltol@f1+2)^0,f,c
  5727  00D826  3604               	rlcf	(___fltol@f1+3)^0,f,c
  5728  00D828  060A               	decf	___fltol@exp1^0,f,c
  5729  00D82A                     l3439:
  5730  00D82A  500A               	movf	___fltol@exp1^0,w,c
  5731  00D82C  A4D8               	btfss	status,2,c
  5732  00D82E  EF1B  F06C         	goto	u3621
  5733  00D832  EF1D  F06C         	goto	u3620
  5734  00D836                     u3621:
  5735  00D836  EF0F  F06C         	goto	l3437
  5736  00D83A                     u3620:
  5737  00D83A                     l3441:
  5738  00D83A  5009               	movf	___fltol@sign1^0,w,c
  5739  00D83C  B4D8               	btfsc	status,2,c
  5740  00D83E  EF23  F06C         	goto	u3631
  5741  00D842  EF25  F06C         	goto	u3630
  5742  00D846                     u3631:
  5743  00D846  EF2D  F06C         	goto	l3445
  5744  00D84A                     u3630:
  5745  00D84A  1E04               	comf	(___fltol@f1+3)^0,f,c
  5746  00D84C  1E03               	comf	(___fltol@f1+2)^0,f,c
  5747  00D84E  1E02               	comf	(___fltol@f1+1)^0,f,c
  5748  00D850  6C01               	negf	___fltol@f1^0,c
  5749  00D852  0E00               	movlw	0
  5750  00D854  2202               	addwfc	(___fltol@f1+1)^0,f,c
  5751  00D856  2203               	addwfc	(___fltol@f1+2)^0,f,c
  5752  00D858  2204               	addwfc	(___fltol@f1+3)^0,f,c
  5753  00D85A                     l3445:
  5754  00D85A  C001  F001         	movff	___fltol@f1,?___fltol
  5755  00D85E  C002  F002         	movff	___fltol@f1+1,?___fltol+1
  5756  00D862  C003  F003         	movff	___fltol@f1+2,?___fltol+2
  5757  00D866  C004  F004         	movff	___fltol@f1+3,?___fltol+3
  5758  00D86A                     l557:
  5759  00D86A  0012               	return		;funcret
  5760  00D86C                     __end_of___fltol:
  5761                           	callstack 0
  5762                           
  5763 ;; *************** function ___flsub *****************
  5764 ;; Defined at:
  5765 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\sprcadd.c"
  5766 ;; Parameters:    Size  Location     Type
  5767 ;;  b               4   25[COMRAM] long 
  5768 ;;  a               4   29[COMRAM] long 
  5769 ;; Auto vars:     Size  Location     Type
  5770 ;;		None
  5771 ;; Return value:  Size  Location     Type
  5772 ;;                  4   25[COMRAM] long 
  5773 ;; Registers used:
  5774 ;;		wreg, status,2, status,0, cstack
  5775 ;; Tracked objects:
  5776 ;;		On entry : 0/0
  5777 ;;		On exit  : 0/0
  5778 ;;		Unchanged: 0/0
  5779 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5780 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5781 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5782 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5783 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5784 ;;Total ram usage:        8 bytes
  5785 ;; Hardware stack levels used:    1
  5786 ;; Hardware stack levels required when called:    1
  5787 ;; This function calls:
  5788 ;;		___fladd
  5789 ;; This function is called by:
  5790 ;;		_efgtoa
  5791 ;; This function uses a non-reentrant model
  5792 ;;
  5793                           
  5794                           	psect	text18
  5795  00CE3A                     __ptext18:
  5796                           	callstack 0
  5797  00CE3A                     ___flsub:
  5798                           	callstack 25
  5799  00CE3A  0E00               	movlw	0
  5800  00CE3C  1A1E               	xorwf	___flsub@a^0,f,c
  5801  00CE3E  0E00               	movlw	0
  5802  00CE40  1A1F               	xorwf	(___flsub@a+1)^0,f,c
  5803  00CE42  0E00               	movlw	0
  5804  00CE44  1A20               	xorwf	(___flsub@a+2)^0,f,c
  5805  00CE46  0E80               	movlw	128
  5806  00CE48  1A21               	xorwf	(___flsub@a+3)^0,f,c
  5807  00CE4A  C01A  F001         	movff	___flsub@b,___fladd@b
  5808  00CE4E  C01B  F002         	movff	___flsub@b+1,___fladd@b+1
  5809  00CE52  C01C  F003         	movff	___flsub@b+2,___fladd@b+2
  5810  00CE56  C01D  F004         	movff	___flsub@b+3,___fladd@b+3
  5811  00CE5A  C01E  F005         	movff	___flsub@a,___fladd@a
  5812  00CE5E  C01F  F006         	movff	___flsub@a+1,___fladd@a+1
  5813  00CE62  C020  F007         	movff	___flsub@a+2,___fladd@a+2
  5814  00CE66  C021  F008         	movff	___flsub@a+3,___fladd@a+3
  5815  00CE6A  ECC8  F072         	call	___fladd	;wreg free
  5816  00CE6E  C001  F01A         	movff	?___fladd,?___flsub
  5817  00CE72  C002  F01B         	movff	?___fladd+1,?___flsub+1
  5818  00CE76  C003  F01C         	movff	?___fladd+2,?___flsub+2
  5819  00CE7A  C004  F01D         	movff	?___fladd+3,?___flsub+3
  5820  00CE7E  0012               	return		;funcret
  5821  00CE80                     __end_of___flsub:
  5822                           	callstack 0
  5823                           
  5824 ;; *************** function ___fladd *****************
  5825 ;; Defined at:
  5826 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\sprcadd.c"
  5827 ;; Parameters:    Size  Location     Type
  5828 ;;  b               4    0[COMRAM] long 
  5829 ;;  a               4    4[COMRAM] long 
  5830 ;; Auto vars:     Size  Location     Type
  5831 ;;  grs             1   15[COMRAM] unsigned char 
  5832 ;;  bexp            1   14[COMRAM] unsigned char 
  5833 ;;  aexp            1   13[COMRAM] unsigned char 
  5834 ;;  signs           1   12[COMRAM] unsigned char 
  5835 ;; Return value:  Size  Location     Type
  5836 ;;                  4    0[COMRAM] unsigned char 
  5837 ;; Registers used:
  5838 ;;		wreg, status,2, status,0
  5839 ;; Tracked objects:
  5840 ;;		On entry : 0/0
  5841 ;;		On exit  : 0/0
  5842 ;;		Unchanged: 0/0
  5843 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5844 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5845 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5846 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5847 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5848 ;;Total ram usage:       16 bytes
  5849 ;; Hardware stack levels used:    1
  5850 ;; This function calls:
  5851 ;;		Nothing
  5852 ;; This function is called by:
  5853 ;;		___flsub
  5854 ;;		_efgtoa
  5855 ;; This function uses a non-reentrant model
  5856 ;;
  5857                           
  5858                           	psect	text19
  5859  00E590                     __ptext19:
  5860                           	callstack 0
  5861  00E590                     ___fladd:
  5862                           	callstack 25
  5863  00E590  5004               	movf	(___fladd@b+3)^0,w,c
  5864  00E592  0B80               	andlw	128
  5865  00E594  6E0D               	movwf	___fladd@signs^0,c
  5866  00E596  5004               	movf	(___fladd@b+3)^0,w,c
  5867  00E598  2404               	addwf	(___fladd@b+3)^0,w,c
  5868  00E59A  6E0F               	movwf	___fladd@bexp^0,c
  5869  00E59C  AE03               	btfss	(___fladd@b+2)^0,7,c
  5870  00E59E  EFD3  F072         	goto	u2511
  5871  00E5A2  EFD5  F072         	goto	u2510
  5872  00E5A6                     u2511:
  5873  00E5A6  EFD6  F072         	goto	l2781
  5874  00E5AA                     u2510:
  5875  00E5AA  800F               	bsf	___fladd@bexp^0,0,c
  5876  00E5AC                     l2781:
  5877  00E5AC  500F               	movf	___fladd@bexp^0,w,c
  5878  00E5AE  B4D8               	btfsc	status,2,c
  5879  00E5B0  EFDC  F072         	goto	u2521
  5880  00E5B4  EFDE  F072         	goto	u2520
  5881  00E5B8                     u2521:
  5882  00E5B8  EFF3  F072         	goto	l2791
  5883  00E5BC                     u2520:
  5884  00E5BC  280F               	incf	___fladd@bexp^0,w,c
  5885  00E5BE  A4D8               	btfss	status,2,c
  5886  00E5C0  EFE4  F072         	goto	u2531
  5887  00E5C4  EFE6  F072         	goto	u2530
  5888  00E5C8                     u2531:
  5889  00E5C8  EFEE  F072         	goto	l2787
  5890  00E5CC                     u2530:
  5891  00E5CC  0E00               	movlw	0
  5892  00E5CE  6E01               	movwf	___fladd@b^0,c
  5893  00E5D0  0E00               	movlw	0
  5894  00E5D2  6E02               	movwf	(___fladd@b+1)^0,c
  5895  00E5D4  0E00               	movlw	0
  5896  00E5D6  6E03               	movwf	(___fladd@b+2)^0,c
  5897  00E5D8  0E00               	movlw	0
  5898  00E5DA  6E04               	movwf	(___fladd@b+3)^0,c
  5899  00E5DC                     l2787:
  5900  00E5DC  8E03               	bsf	(___fladd@b+2)^0,7,c
  5901  00E5DE  0E00               	movlw	0
  5902  00E5E0  6E04               	movwf	(___fladd@b+3)^0,c
  5903  00E5E2  EFFB  F072         	goto	l2793
  5904  00E5E6                     l2791:
  5905  00E5E6  0E00               	movlw	0
  5906  00E5E8  6E01               	movwf	___fladd@b^0,c
  5907  00E5EA  0E00               	movlw	0
  5908  00E5EC  6E02               	movwf	(___fladd@b+1)^0,c
  5909  00E5EE  0E00               	movlw	0
  5910  00E5F0  6E03               	movwf	(___fladd@b+2)^0,c
  5911  00E5F2  0E00               	movlw	0
  5912  00E5F4  6E04               	movwf	(___fladd@b+3)^0,c
  5913  00E5F6                     l2793:
  5914  00E5F6  5008               	movf	(___fladd@a+3)^0,w,c
  5915  00E5F8  0B80               	andlw	128
  5916  00E5FA  6E0E               	movwf	___fladd@aexp^0,c
  5917  00E5FC  500D               	movf	___fladd@signs^0,w,c
  5918  00E5FE  180E               	xorwf	___fladd@aexp^0,w,c
  5919  00E600  B4D8               	btfsc	status,2,c
  5920  00E602  EF05  F073         	goto	u2541
  5921  00E606  EF07  F073         	goto	u2540
  5922  00E60A                     u2541:
  5923  00E60A  EF08  F073         	goto	l2799
  5924  00E60E                     u2540:
  5925  00E60E  8C0D               	bsf	___fladd@signs^0,6,c
  5926  00E610                     l2799:
  5927  00E610  5008               	movf	(___fladd@a+3)^0,w,c
  5928  00E612  2408               	addwf	(___fladd@a+3)^0,w,c
  5929  00E614  6E0E               	movwf	___fladd@aexp^0,c
  5930  00E616  AE07               	btfss	(___fladd@a+2)^0,7,c
  5931  00E618  EF10  F073         	goto	u2551
  5932  00E61C  EF12  F073         	goto	u2550
  5933  00E620                     u2551:
  5934  00E620  EF13  F073         	goto	l2805
  5935  00E624                     u2550:
  5936  00E624  800E               	bsf	___fladd@aexp^0,0,c
  5937  00E626                     l2805:
  5938  00E626  500E               	movf	___fladd@aexp^0,w,c
  5939  00E628  B4D8               	btfsc	status,2,c
  5940  00E62A  EF19  F073         	goto	u2561
  5941  00E62E  EF1B  F073         	goto	u2560
  5942  00E632                     u2561:
  5943  00E632  EF30  F073         	goto	l2815
  5944  00E636                     u2560:
  5945  00E636  280E               	incf	___fladd@aexp^0,w,c
  5946  00E638  A4D8               	btfss	status,2,c
  5947  00E63A  EF21  F073         	goto	u2571
  5948  00E63E  EF23  F073         	goto	u2570
  5949  00E642                     u2571:
  5950  00E642  EF2B  F073         	goto	l2811
  5951  00E646                     u2570:
  5952  00E646  0E00               	movlw	0
  5953  00E648  6E05               	movwf	___fladd@a^0,c
  5954  00E64A  0E00               	movlw	0
  5955  00E64C  6E06               	movwf	(___fladd@a+1)^0,c
  5956  00E64E  0E00               	movlw	0
  5957  00E650  6E07               	movwf	(___fladd@a+2)^0,c
  5958  00E652  0E00               	movlw	0
  5959  00E654  6E08               	movwf	(___fladd@a+3)^0,c
  5960  00E656                     l2811:
  5961  00E656  8E07               	bsf	(___fladd@a+2)^0,7,c
  5962  00E658  0E00               	movlw	0
  5963  00E65A  6E08               	movwf	(___fladd@a+3)^0,c
  5964  00E65C  EF38  F073         	goto	l2817
  5965  00E660                     l2815:
  5966  00E660  0E00               	movlw	0
  5967  00E662  6E05               	movwf	___fladd@a^0,c
  5968  00E664  0E00               	movlw	0
  5969  00E666  6E06               	movwf	(___fladd@a+1)^0,c
  5970  00E668  0E00               	movlw	0
  5971  00E66A  6E07               	movwf	(___fladd@a+2)^0,c
  5972  00E66C  0E00               	movlw	0
  5973  00E66E  6E08               	movwf	(___fladd@a+3)^0,c
  5974  00E670                     l2817:
  5975  00E670  500F               	movf	___fladd@bexp^0,w,c
  5976  00E672  5C0E               	subwf	___fladd@aexp^0,w,c
  5977  00E674  B0D8               	btfsc	status,0,c
  5978  00E676  EF3F  F073         	goto	u2581
  5979  00E67A  EF41  F073         	goto	u2580
  5980  00E67E                     u2581:
  5981  00E67E  EF68  F073         	goto	l2853
  5982  00E682                     u2580:
  5983  00E682  AC0D               	btfss	___fladd@signs^0,6,c
  5984  00E684  EF46  F073         	goto	u2591
  5985  00E688  EF48  F073         	goto	u2590
  5986  00E68C                     u2591:
  5987  00E68C  EF4A  F073         	goto	l2823
  5988  00E690                     u2590:
  5989  00E690  0E80               	movlw	128
  5990  00E692  1A0D               	xorwf	___fladd@signs^0,f,c
  5991  00E694                     l2823:
  5992  00E694  C00F  F010         	movff	___fladd@bexp,___fladd@grs
  5993  00E698  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  5994  00E69C  C010  F00E         	movff	___fladd@grs,___fladd@aexp
  5995  00E6A0  C001  F010         	movff	___fladd@b,___fladd@grs
  5996  00E6A4  C005  F001         	movff	___fladd@a,___fladd@b
  5997  00E6A8  C010  F005         	movff	___fladd@grs,___fladd@a
  5998  00E6AC  C002  F010         	movff	___fladd@b+1,___fladd@grs
  5999  00E6B0  C006  F002         	movff	___fladd@a+1,___fladd@b+1
  6000  00E6B4  C010  F006         	movff	___fladd@grs,___fladd@a+1
  6001  00E6B8  C003  F010         	movff	___fladd@b+2,___fladd@grs
  6002  00E6BC  C007  F003         	movff	___fladd@a+2,___fladd@b+2
  6003  00E6C0  C010  F007         	movff	___fladd@grs,___fladd@a+2
  6004  00E6C4  C004  F010         	movff	___fladd@b+3,___fladd@grs
  6005  00E6C8  C008  F004         	movff	___fladd@a+3,___fladd@b+3
  6006  00E6CC  C010  F008         	movff	___fladd@grs,___fladd@a+3
  6007  00E6D0                     l2853:
  6008  00E6D0  0E00               	movlw	0
  6009  00E6D2  6E10               	movwf	___fladd@grs^0,c
  6010  00E6D4  500F               	movf	___fladd@bexp^0,w,c
  6011  00E6D6  C00E  F009         	movff	___fladd@aexp,??___fladd
  6012  00E6DA  6A0A               	clrf	(??___fladd+1)^0,c
  6013  00E6DC  5E09               	subwf	??___fladd^0,f,c
  6014  00E6DE  0E00               	movlw	0
  6015  00E6E0  5A0A               	subwfb	(??___fladd+1)^0,f,c
  6016  00E6E2  BE0A               	btfsc	(??___fladd+1)^0,7,c
  6017  00E6E4  EF7D  F073         	goto	u2601
  6018  00E6E8  500A               	movf	(??___fladd+1)^0,w,c
  6019  00E6EA  E109               	bnz	u2600
  6020  00E6EC  0E1A               	movlw	26
  6021  00E6EE  5C09               	subwf	??___fladd^0,w,c
  6022  00E6F0  A0D8               	btfss	status,0,c
  6023  00E6F2  EF7D  F073         	goto	u2601
  6024  00E6F6  EF7F  F073         	goto	u2600
  6025  00E6FA                     u2601:
  6026  00E6FA  EFB6  F073         	goto	l789
  6027  00E6FE                     u2600:
  6028  00E6FE  5001               	movf	___fladd@b^0,w,c
  6029  00E700  1002               	iorwf	(___fladd@b+1)^0,w,c
  6030  00E702  1003               	iorwf	(___fladd@b+2)^0,w,c
  6031  00E704  1004               	iorwf	(___fladd@b+3)^0,w,c
  6032  00E706  A4D8               	btfss	status,2,c
  6033  00E708  EF88  F073         	goto	u2611
  6034  00E70C  EF8B  F073         	goto	u2610
  6035  00E710                     u2611:
  6036  00E710  0E01               	movlw	1
  6037  00E712  EF8C  F073         	goto	u2620
  6038  00E716                     u2610:
  6039  00E716  0E00               	movlw	0
  6040  00E718                     u2620:
  6041  00E718  6E10               	movwf	___fladd@grs^0,c
  6042  00E71A  0E00               	movlw	0
  6043  00E71C  6E01               	movwf	___fladd@b^0,c
  6044  00E71E  0E00               	movlw	0
  6045  00E720  6E02               	movwf	(___fladd@b+1)^0,c
  6046  00E722  0E00               	movlw	0
  6047  00E724  6E03               	movwf	(___fladd@b+2)^0,c
  6048  00E726  0E00               	movlw	0
  6049  00E728  6E04               	movwf	(___fladd@b+3)^0,c
  6050  00E72A  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  6051  00E72E  EFBF  F073         	goto	l788
  6052  00E732                     l790:
  6053  00E732  A010               	btfss	___fladd@grs^0,0,c
  6054  00E734  EF9E  F073         	goto	u2631
  6055  00E738  EFA0  F073         	goto	u2630
  6056  00E73C                     u2631:
  6057  00E73C  EFA6  F073         	goto	l2865
  6058  00E740                     u2630:
  6059  00E740  90D8               	bcf	status,0,c
  6060  00E742  3010               	rrcf	___fladd@grs^0,w,c
  6061  00E744  0901               	iorlw	1
  6062  00E746  6E10               	movwf	___fladd@grs^0,c
  6063  00E748  EFA8  F073         	goto	l2867
  6064  00E74C                     l2865:
  6065  00E74C  90D8               	bcf	status,0,c
  6066  00E74E  3210               	rrcf	___fladd@grs^0,f,c
  6067  00E750                     l2867:
  6068  00E750  A001               	btfss	___fladd@b^0,0,c
  6069  00E752  EFAD  F073         	goto	u2641
  6070  00E756  EFAF  F073         	goto	u2640
  6071  00E75A                     u2641:
  6072  00E75A  EFB0  F073         	goto	l2871
  6073  00E75E                     u2640:
  6074  00E75E  8E10               	bsf	___fladd@grs^0,7,c
  6075  00E760                     l2871:
  6076  00E760  3404               	rlcf	(___fladd@b+3)^0,w,c
  6077  00E762  3204               	rrcf	(___fladd@b+3)^0,f,c
  6078  00E764  3203               	rrcf	(___fladd@b+2)^0,f,c
  6079  00E766  3202               	rrcf	(___fladd@b+1)^0,f,c
  6080  00E768  3201               	rrcf	___fladd@b^0,f,c
  6081  00E76A  2A0F               	incf	___fladd@bexp^0,f,c
  6082  00E76C                     l789:
  6083  00E76C  500E               	movf	___fladd@aexp^0,w,c
  6084  00E76E  5C0F               	subwf	___fladd@bexp^0,w,c
  6085  00E770  A0D8               	btfss	status,0,c
  6086  00E772  EFBD  F073         	goto	u2651
  6087  00E776  EFBF  F073         	goto	u2650
  6088  00E77A                     u2651:
  6089  00E77A  EF99  F073         	goto	l790
  6090  00E77E                     u2650:
  6091  00E77E                     l788:
  6092  00E77E  BC0D               	btfsc	___fladd@signs^0,6,c
  6093  00E780  EFC4  F073         	goto	u2661
  6094  00E784  EFC6  F073         	goto	u2660
  6095  00E788                     u2661:
  6096  00E788  EF06  F074         	goto	l2899
  6097  00E78C                     u2660:
  6098  00E78C  500F               	movf	___fladd@bexp^0,w,c
  6099  00E78E  A4D8               	btfss	status,2,c
  6100  00E790  EFCC  F073         	goto	u2671
  6101  00E794  EFCE  F073         	goto	u2670
  6102  00E798                     u2671:
  6103  00E798  EFD8  F073         	goto	l2881
  6104  00E79C                     u2670:
  6105  00E79C  0E00               	movlw	0
  6106  00E79E  6E01               	movwf	?___fladd^0,c
  6107  00E7A0  0E00               	movlw	0
  6108  00E7A2  6E02               	movwf	(?___fladd+1)^0,c
  6109  00E7A4  0E00               	movlw	0
  6110  00E7A6  6E03               	movwf	(?___fladd+2)^0,c
  6111  00E7A8  0E00               	movlw	0
  6112  00E7AA  6E04               	movwf	(?___fladd+3)^0,c
  6113  00E7AC  EF27  F075         	goto	l797
  6114  00E7B0                     l2881:
  6115  00E7B0  5005               	movf	___fladd@a^0,w,c
  6116  00E7B2  2601               	addwf	___fladd@b^0,f,c
  6117  00E7B4  5006               	movf	(___fladd@a+1)^0,w,c
  6118  00E7B6  2202               	addwfc	(___fladd@b+1)^0,f,c
  6119  00E7B8  5007               	movf	(___fladd@a+2)^0,w,c
  6120  00E7BA  2203               	addwfc	(___fladd@b+2)^0,f,c
  6121  00E7BC  5008               	movf	(___fladd@a+3)^0,w,c
  6122  00E7BE  2204               	addwfc	(___fladd@b+3)^0,f,c
  6123  00E7C0  A004               	btfss	(___fladd@b+3)^0,0,c
  6124  00E7C2  EFE5  F073         	goto	u2681
  6125  00E7C6  EFE7  F073         	goto	u2680
  6126  00E7CA                     u2681:
  6127  00E7CA  EF93  F074         	goto	l2935
  6128  00E7CE                     u2680:
  6129  00E7CE  A010               	btfss	___fladd@grs^0,0,c
  6130  00E7D0  EFEC  F073         	goto	u2691
  6131  00E7D4  EFEE  F073         	goto	u2690
  6132  00E7D8                     u2691:
  6133  00E7D8  EFF4  F073         	goto	l2889
  6134  00E7DC                     u2690:
  6135  00E7DC  90D8               	bcf	status,0,c
  6136  00E7DE  3010               	rrcf	___fladd@grs^0,w,c
  6137  00E7E0  0901               	iorlw	1
  6138  00E7E2  6E10               	movwf	___fladd@grs^0,c
  6139  00E7E4  EFF6  F073         	goto	l2891
  6140  00E7E8                     l2889:
  6141  00E7E8  90D8               	bcf	status,0,c
  6142  00E7EA  3210               	rrcf	___fladd@grs^0,f,c
  6143  00E7EC                     l2891:
  6144  00E7EC  A001               	btfss	___fladd@b^0,0,c
  6145  00E7EE  EFFB  F073         	goto	u2701
  6146  00E7F2  EFFD  F073         	goto	u2700
  6147  00E7F6                     u2701:
  6148  00E7F6  EFFE  F073         	goto	l2895
  6149  00E7FA                     u2700:
  6150  00E7FA  8E10               	bsf	___fladd@grs^0,7,c
  6151  00E7FC                     l2895:
  6152  00E7FC  3404               	rlcf	(___fladd@b+3)^0,w,c
  6153  00E7FE  3204               	rrcf	(___fladd@b+3)^0,f,c
  6154  00E800  3203               	rrcf	(___fladd@b+2)^0,f,c
  6155  00E802  3202               	rrcf	(___fladd@b+1)^0,f,c
  6156  00E804  3201               	rrcf	___fladd@b^0,f,c
  6157  00E806  2A0F               	incf	___fladd@bexp^0,f,c
  6158  00E808  EF93  F074         	goto	l2935
  6159  00E80C                     l2899:
  6160  00E80C  5005               	movf	___fladd@a^0,w,c
  6161  00E80E  5C01               	subwf	___fladd@b^0,w,c
  6162  00E810  5006               	movf	(___fladd@a+1)^0,w,c
  6163  00E812  5802               	subwfb	(___fladd@b+1)^0,w,c
  6164  00E814  5007               	movf	(___fladd@a+2)^0,w,c
  6165  00E816  5803               	subwfb	(___fladd@b+2)^0,w,c
  6166  00E818  5004               	movf	(___fladd@b+3)^0,w,c
  6167  00E81A  0A80               	xorlw	128
  6168  00E81C  6E09               	movwf	??___fladd^0,c
  6169  00E81E  5008               	movf	(___fladd@a+3)^0,w,c
  6170  00E820  0A80               	xorlw	128
  6171  00E822  5809               	subwfb	??___fladd^0,w,c
  6172  00E824  B0D8               	btfsc	status,0,c
  6173  00E826  EF17  F074         	goto	u2711
  6174  00E82A  EF19  F074         	goto	u2710
  6175  00E82E                     u2711:
  6176  00E82E  EF44  F074         	goto	l2909
  6177  00E832                     u2710:
  6178  00E832  5001               	movf	___fladd@b^0,w,c
  6179  00E834  5C05               	subwf	___fladd@a^0,w,c
  6180  00E836  6E09               	movwf	??___fladd^0,c
  6181  00E838  5002               	movf	(___fladd@b+1)^0,w,c
  6182  00E83A  5806               	subwfb	(___fladd@a+1)^0,w,c
  6183  00E83C  6E0A               	movwf	(??___fladd+1)^0,c
  6184  00E83E  5003               	movf	(___fladd@b+2)^0,w,c
  6185  00E840  5807               	subwfb	(___fladd@a+2)^0,w,c
  6186  00E842  6E0B               	movwf	(??___fladd+2)^0,c
  6187  00E844  5004               	movf	(___fladd@b+3)^0,w,c
  6188  00E846  5808               	subwfb	(___fladd@a+3)^0,w,c
  6189  00E848  6E0C               	movwf	(??___fladd+3)^0,c
  6190  00E84A  0EFF               	movlw	255
  6191  00E84C  2409               	addwf	??___fladd^0,w,c
  6192  00E84E  6E01               	movwf	___fladd@b^0,c
  6193  00E850  0EFF               	movlw	255
  6194  00E852  200A               	addwfc	(??___fladd+1)^0,w,c
  6195  00E854  6E02               	movwf	(___fladd@b+1)^0,c
  6196  00E856  0EFF               	movlw	255
  6197  00E858  200B               	addwfc	(??___fladd+2)^0,w,c
  6198  00E85A  6E03               	movwf	(___fladd@b+2)^0,c
  6199  00E85C  0EFF               	movlw	255
  6200  00E85E  200C               	addwfc	(??___fladd+3)^0,w,c
  6201  00E860  6E04               	movwf	(___fladd@b+3)^0,c
  6202  00E862  0E80               	movlw	128
  6203  00E864  1A0D               	xorwf	___fladd@signs^0,f,c
  6204  00E866  6C10               	negf	___fladd@grs^0,c
  6205  00E868  5010               	movf	___fladd@grs^0,w,c
  6206  00E86A  A4D8               	btfss	status,2,c
  6207  00E86C  EF3A  F074         	goto	u2721
  6208  00E870  EF3C  F074         	goto	u2720
  6209  00E874                     u2721:
  6210  00E874  EF4C  F074         	goto	l805
  6211  00E878                     u2720:
  6212  00E878  0E01               	movlw	1
  6213  00E87A  2601               	addwf	___fladd@b^0,f,c
  6214  00E87C  0E00               	movlw	0
  6215  00E87E  2202               	addwfc	(___fladd@b+1)^0,f,c
  6216  00E880  2203               	addwfc	(___fladd@b+2)^0,f,c
  6217  00E882  2204               	addwfc	(___fladd@b+3)^0,f,c
  6218  00E884  EF4C  F074         	goto	l805
  6219  00E888                     l2909:
  6220  00E888  5005               	movf	___fladd@a^0,w,c
  6221  00E88A  5E01               	subwf	___fladd@b^0,f,c
  6222  00E88C  5006               	movf	(___fladd@a+1)^0,w,c
  6223  00E88E  5A02               	subwfb	(___fladd@b+1)^0,f,c
  6224  00E890  5007               	movf	(___fladd@a+2)^0,w,c
  6225  00E892  5A03               	subwfb	(___fladd@b+2)^0,f,c
  6226  00E894  5008               	movf	(___fladd@a+3)^0,w,c
  6227  00E896  5A04               	subwfb	(___fladd@b+3)^0,f,c
  6228  00E898                     l805:
  6229  00E898  5001               	movf	___fladd@b^0,w,c
  6230  00E89A  1002               	iorwf	(___fladd@b+1)^0,w,c
  6231  00E89C  1003               	iorwf	(___fladd@b+2)^0,w,c
  6232  00E89E  1004               	iorwf	(___fladd@b+3)^0,w,c
  6233  00E8A0  A4D8               	btfss	status,2,c
  6234  00E8A2  EF55  F074         	goto	u2731
  6235  00E8A6  EF57  F074         	goto	u2730
  6236  00E8AA                     u2731:
  6237  00E8AA  EF8C  F074         	goto	l2933
  6238  00E8AE                     u2730:
  6239  00E8AE  5010               	movf	___fladd@grs^0,w,c
  6240  00E8B0  A4D8               	btfss	status,2,c
  6241  00E8B2  EF5D  F074         	goto	u2741
  6242  00E8B6  EF5F  F074         	goto	u2740
  6243  00E8BA                     u2741:
  6244  00E8BA  EF8C  F074         	goto	l2933
  6245  00E8BE                     u2740:
  6246  00E8BE  0E00               	movlw	0
  6247  00E8C0  6E01               	movwf	?___fladd^0,c
  6248  00E8C2  0E00               	movlw	0
  6249  00E8C4  6E02               	movwf	(?___fladd+1)^0,c
  6250  00E8C6  0E00               	movlw	0
  6251  00E8C8  6E03               	movwf	(?___fladd+2)^0,c
  6252  00E8CA  0E00               	movlw	0
  6253  00E8CC  6E04               	movwf	(?___fladd+3)^0,c
  6254  00E8CE  EF27  F075         	goto	l797
  6255  00E8D2                     l2917:
  6256  00E8D2  90D8               	bcf	status,0,c
  6257  00E8D4  3601               	rlcf	___fladd@b^0,f,c
  6258  00E8D6  3602               	rlcf	(___fladd@b+1)^0,f,c
  6259  00E8D8  3603               	rlcf	(___fladd@b+2)^0,f,c
  6260  00E8DA  3604               	rlcf	(___fladd@b+3)^0,f,c
  6261  00E8DC  AE10               	btfss	___fladd@grs^0,7,c
  6262  00E8DE  EF73  F074         	goto	u2751
  6263  00E8E2  EF75  F074         	goto	u2750
  6264  00E8E6                     u2751:
  6265  00E8E6  EF76  F074         	goto	l2923
  6266  00E8EA                     u2750:
  6267  00E8EA  8001               	bsf	___fladd@b^0,0,c
  6268  00E8EC                     l2923:
  6269  00E8EC  A010               	btfss	___fladd@grs^0,0,c
  6270  00E8EE  EF7B  F074         	goto	u2761
  6271  00E8F2  EF7D  F074         	goto	u2760
  6272  00E8F6                     u2761:
  6273  00E8F6  EF81  F074         	goto	l2927
  6274  00E8FA                     u2760:
  6275  00E8FA  80D8               	bsf	status,0,c
  6276  00E8FC  3610               	rlcf	___fladd@grs^0,f,c
  6277  00E8FE  EF83  F074         	goto	l2929
  6278  00E902                     l2927:
  6279  00E902  90D8               	bcf	status,0,c
  6280  00E904  3610               	rlcf	___fladd@grs^0,f,c
  6281  00E906                     l2929:
  6282  00E906  500F               	movf	___fladd@bexp^0,w,c
  6283  00E908  B4D8               	btfsc	status,2,c
  6284  00E90A  EF89  F074         	goto	u2771
  6285  00E90E  EF8B  F074         	goto	u2770
  6286  00E912                     u2771:
  6287  00E912  EF8C  F074         	goto	l2933
  6288  00E916                     u2770:
  6289  00E916  060F               	decf	___fladd@bexp^0,f,c
  6290  00E918                     l2933:
  6291  00E918  AE03               	btfss	(___fladd@b+2)^0,7,c
  6292  00E91A  EF91  F074         	goto	u2781
  6293  00E91E  EF93  F074         	goto	u2780
  6294  00E922                     u2781:
  6295  00E922  EF69  F074         	goto	l2917
  6296  00E926                     u2780:
  6297  00E926                     l2935:
  6298  00E926  0E00               	movlw	0
  6299  00E928  6E0E               	movwf	___fladd@aexp^0,c
  6300  00E92A  AE10               	btfss	___fladd@grs^0,7,c
  6301  00E92C  EF9A  F074         	goto	u2791
  6302  00E930  EF9C  F074         	goto	u2790
  6303  00E934                     u2791:
  6304  00E934  EFB4  F074         	goto	l814
  6305  00E938                     u2790:
  6306  00E938  C010  F009         	movff	___fladd@grs,??___fladd
  6307  00E93C  0E7F               	movlw	127
  6308  00E93E  1609               	andwf	??___fladd^0,f,c
  6309  00E940  B4D8               	btfsc	status,2,c
  6310  00E942  EFA5  F074         	goto	u2801
  6311  00E946  EFA7  F074         	goto	u2800
  6312  00E94A                     u2801:
  6313  00E94A  EFAB  F074         	goto	l815
  6314  00E94E                     u2800:
  6315  00E94E                     l2941:
  6316  00E94E  0E01               	movlw	1
  6317  00E950  6E0E               	movwf	___fladd@aexp^0,c
  6318  00E952  EFB4  F074         	goto	l814
  6319  00E956                     l815:
  6320  00E956  A001               	btfss	___fladd@b^0,0,c
  6321  00E958  EFB0  F074         	goto	u2811
  6322  00E95C  EFB2  F074         	goto	u2810
  6323  00E960                     u2811:
  6324  00E960  EFB4  F074         	goto	l814
  6325  00E964                     u2810:
  6326  00E964  EFA7  F074         	goto	l2941
  6327  00E968                     l814:
  6328  00E968  500E               	movf	___fladd@aexp^0,w,c
  6329  00E96A  B4D8               	btfsc	status,2,c
  6330  00E96C  EFBA  F074         	goto	u2821
  6331  00E970  EFBC  F074         	goto	u2820
  6332  00E974                     u2821:
  6333  00E974  EFE7  F074         	goto	l2953
  6334  00E978                     u2820:
  6335  00E978  0E01               	movlw	1
  6336  00E97A  2601               	addwf	___fladd@b^0,f,c
  6337  00E97C  0E00               	movlw	0
  6338  00E97E  2202               	addwfc	(___fladd@b+1)^0,f,c
  6339  00E980  2203               	addwfc	(___fladd@b+2)^0,f,c
  6340  00E982  2204               	addwfc	(___fladd@b+3)^0,f,c
  6341  00E984  A004               	btfss	(___fladd@b+3)^0,0,c
  6342  00E986  EFC7  F074         	goto	u2831
  6343  00E98A  EFC9  F074         	goto	u2830
  6344  00E98E                     u2831:
  6345  00E98E  EFE7  F074         	goto	l2953
  6346  00E992                     u2830:
  6347  00E992  C001  F009         	movff	___fladd@b,??___fladd
  6348  00E996  C002  F00A         	movff	___fladd@b+1,??___fladd+1
  6349  00E99A  C003  F00B         	movff	___fladd@b+2,??___fladd+2
  6350  00E99E  C004  F00C         	movff	___fladd@b+3,??___fladd+3
  6351  00E9A2  340C               	rlcf	(??___fladd+3)^0,w,c
  6352  00E9A4  320C               	rrcf	(??___fladd+3)^0,f,c
  6353  00E9A6  320B               	rrcf	(??___fladd+2)^0,f,c
  6354  00E9A8  320A               	rrcf	(??___fladd+1)^0,f,c
  6355  00E9AA  3209               	rrcf	??___fladd^0,f,c
  6356  00E9AC  C009  F001         	movff	??___fladd,___fladd@b
  6357  00E9B0  C00A  F002         	movff	??___fladd+1,___fladd@b+1
  6358  00E9B4  C00B  F003         	movff	??___fladd+2,___fladd@b+2
  6359  00E9B8  C00C  F004         	movff	??___fladd+3,___fladd@b+3
  6360  00E9BC  280F               	incf	___fladd@bexp^0,w,c
  6361  00E9BE  B4D8               	btfsc	status,2,c
  6362  00E9C0  EFE4  F074         	goto	u2841
  6363  00E9C4  EFE6  F074         	goto	u2840
  6364  00E9C8                     u2841:
  6365  00E9C8  EFE7  F074         	goto	l2953
  6366  00E9CC                     u2840:
  6367  00E9CC  2A0F               	incf	___fladd@bexp^0,f,c
  6368  00E9CE                     l2953:
  6369  00E9CE  280F               	incf	___fladd@bexp^0,w,c
  6370  00E9D0  B4D8               	btfsc	status,2,c
  6371  00E9D2  EFED  F074         	goto	u2851
  6372  00E9D6  EFEF  F074         	goto	u2850
  6373  00E9DA                     u2851:
  6374  00E9DA  EFF7  F074         	goto	l2957
  6375  00E9DE                     u2850:
  6376  00E9DE  500F               	movf	___fladd@bexp^0,w,c
  6377  00E9E0  A4D8               	btfss	status,2,c
  6378  00E9E2  EFF5  F074         	goto	u2861
  6379  00E9E6  EFF7  F074         	goto	u2860
  6380  00E9EA                     u2861:
  6381  00E9EA  EF09  F075         	goto	l2961
  6382  00E9EE                     u2860:
  6383  00E9EE                     l2957:
  6384  00E9EE  0E00               	movlw	0
  6385  00E9F0  6E01               	movwf	___fladd@b^0,c
  6386  00E9F2  0E00               	movlw	0
  6387  00E9F4  6E02               	movwf	(___fladd@b+1)^0,c
  6388  00E9F6  0E00               	movlw	0
  6389  00E9F8  6E03               	movwf	(___fladd@b+2)^0,c
  6390  00E9FA  0E00               	movlw	0
  6391  00E9FC  6E04               	movwf	(___fladd@b+3)^0,c
  6392  00E9FE  500F               	movf	___fladd@bexp^0,w,c
  6393  00EA00  A4D8               	btfss	status,2,c
  6394  00EA02  EF05  F075         	goto	u2871
  6395  00EA06  EF07  F075         	goto	u2870
  6396  00EA0A                     u2871:
  6397  00EA0A  EF09  F075         	goto	l2961
  6398  00EA0E                     u2870:
  6399  00EA0E  0E00               	movlw	0
  6400  00EA10  6E0D               	movwf	___fladd@signs^0,c
  6401  00EA12                     l2961:
  6402  00EA12  A00F               	btfss	___fladd@bexp^0,0,c
  6403  00EA14  EF0E  F075         	goto	u2881
  6404  00EA18  EF10  F075         	goto	u2880
  6405  00EA1C                     u2881:
  6406  00EA1C  EF13  F075         	goto	l2965
  6407  00EA20                     u2880:
  6408  00EA20  8E03               	bsf	(___fladd@b+2)^0,7,c
  6409  00EA22  EF14  F075         	goto	l2967
  6410  00EA26                     l2965:
  6411  00EA26  9E03               	bcf	(___fladd@b+2)^0,7,c
  6412  00EA28                     l2967:
  6413  00EA28  90D8               	bcf	status,0,c
  6414  00EA2A  300F               	rrcf	___fladd@bexp^0,w,c
  6415  00EA2C  6E04               	movwf	(___fladd@b+3)^0,c
  6416  00EA2E  AE0D               	btfss	___fladd@signs^0,7,c
  6417  00EA30  EF1C  F075         	goto	u2891
  6418  00EA34  EF1E  F075         	goto	u2890
  6419  00EA38                     u2891:
  6420  00EA38  EF1F  F075         	goto	l2973
  6421  00EA3C                     u2890:
  6422  00EA3C  8E04               	bsf	(___fladd@b+3)^0,7,c
  6423  00EA3E                     l2973:
  6424  00EA3E  C001  F001         	movff	___fladd@b,?___fladd
  6425  00EA42  C002  F002         	movff	___fladd@b+1,?___fladd+1
  6426  00EA46  C003  F003         	movff	___fladd@b+2,?___fladd+2
  6427  00EA4A  C004  F004         	movff	___fladd@b+3,?___fladd+3
  6428  00EA4E                     l797:
  6429  00EA4E  0012               	return		;funcret
  6430  00EA50                     __end_of___fladd:
  6431                           	callstack 0
  6432                           
  6433 ;; *************** function ___flneg *****************
  6434 ;; Defined at:
  6435 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\flneg.c"
  6436 ;; Parameters:    Size  Location     Type
  6437 ;;  f1              4    0[COMRAM] unsigned char 
  6438 ;; Auto vars:     Size  Location     Type
  6439 ;;		None
  6440 ;; Return value:  Size  Location     Type
  6441 ;;                  4    0[COMRAM] unsigned char 
  6442 ;; Registers used:
  6443 ;;		wreg, status,2, status,0
  6444 ;; Tracked objects:
  6445 ;;		On entry : 0/0
  6446 ;;		On exit  : 0/0
  6447 ;;		Unchanged: 0/0
  6448 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6449 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6450 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6451 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6452 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6453 ;;Total ram usage:        4 bytes
  6454 ;; Hardware stack levels used:    1
  6455 ;; This function calls:
  6456 ;;		Nothing
  6457 ;; This function is called by:
  6458 ;;		_efgtoa
  6459 ;; This function uses a non-reentrant model
  6460 ;;
  6461                           
  6462                           	psect	text20
  6463  00CD4C                     __ptext20:
  6464                           	callstack 0
  6465  00CD4C                     ___flneg:
  6466                           	callstack 26
  6467  00CD4C  5001               	movf	___flneg@f1^0,w,c
  6468  00CD4E  1002               	iorwf	(___flneg@f1+1)^0,w,c
  6469  00CD50  1003               	iorwf	(___flneg@f1+2)^0,w,c
  6470  00CD52  1004               	iorwf	(___flneg@f1+3)^0,w,c
  6471  00CD54  B4D8               	btfsc	status,2,c
  6472  00CD56  EFAF  F066         	goto	u3561
  6473  00CD5A  EFB1  F066         	goto	u3560
  6474  00CD5E                     u3561:
  6475  00CD5E  EFB9  F066         	goto	l3401
  6476  00CD62                     u3560:
  6477  00CD62  0E00               	movlw	0
  6478  00CD64  1A01               	xorwf	___flneg@f1^0,f,c
  6479  00CD66  0E00               	movlw	0
  6480  00CD68  1A02               	xorwf	(___flneg@f1+1)^0,f,c
  6481  00CD6A  0E00               	movlw	0
  6482  00CD6C  1A03               	xorwf	(___flneg@f1+2)^0,f,c
  6483  00CD6E  0E80               	movlw	128
  6484  00CD70  1A04               	xorwf	(___flneg@f1+3)^0,f,c
  6485  00CD72                     l3401:
  6486  00CD72  C001  F001         	movff	___flneg@f1,?___flneg
  6487  00CD76  C002  F002         	movff	___flneg@f1+1,?___flneg+1
  6488  00CD7A  C003  F003         	movff	___flneg@f1+2,?___flneg+2
  6489  00CD7E  C004  F004         	movff	___flneg@f1+3,?___flneg+3
  6490  00CD82  0012               	return		;funcret
  6491  00CD84                     __end_of___flneg:
  6492                           	callstack 0
  6493                           
  6494 ;; *************** function ___flmul *****************
  6495 ;; Defined at:
  6496 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\sprcmul.c"
  6497 ;; Parameters:    Size  Location     Type
  6498 ;;  b               4    0[COMRAM] unsigned char 
  6499 ;;  a               4    4[COMRAM] unsigned char 
  6500 ;; Auto vars:     Size  Location     Type
  6501 ;;  prod            4   19[COMRAM] struct .
  6502 ;;  grs             4   13[COMRAM] unsigned long 
  6503 ;;  temp            2   23[COMRAM] struct .
  6504 ;;  bexp            1   18[COMRAM] unsigned char 
  6505 ;;  aexp            1   17[COMRAM] unsigned char 
  6506 ;;  sign            1   12[COMRAM] unsigned char 
  6507 ;; Return value:  Size  Location     Type
  6508 ;;                  4    0[COMRAM] unsigned char 
  6509 ;; Registers used:
  6510 ;;		wreg, status,2, status,0, prodl, prodh
  6511 ;; Tracked objects:
  6512 ;;		On entry : 0/0
  6513 ;;		On exit  : 0/0
  6514 ;;		Unchanged: 0/0
  6515 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6516 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6517 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6518 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6519 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6520 ;;Total ram usage:       25 bytes
  6521 ;; Hardware stack levels used:    1
  6522 ;; This function calls:
  6523 ;;		Nothing
  6524 ;; This function is called by:
  6525 ;;		_efgtoa
  6526 ;; This function uses a non-reentrant model
  6527 ;;
  6528                           
  6529                           	psect	text21
  6530  00E142                     __ptext21:
  6531                           	callstack 0
  6532  00E142                     ___flmul:
  6533                           	callstack 26
  6534  00E142  5004               	movf	(___flmul@b+3)^0,w,c
  6535  00E144  0B80               	andlw	128
  6536  00E146  6E0D               	movwf	___flmul@sign^0,c
  6537  00E148  5004               	movf	(___flmul@b+3)^0,w,c
  6538  00E14A  2404               	addwf	(___flmul@b+3)^0,w,c
  6539  00E14C  6E13               	movwf	___flmul@bexp^0,c
  6540  00E14E  AE03               	btfss	(___flmul@b+2)^0,7,c
  6541  00E150  EFAC  F070         	goto	u3171
  6542  00E154  EFAE  F070         	goto	u3170
  6543  00E158                     u3171:
  6544  00E158  EFAF  F070         	goto	l3149
  6545  00E15C                     u3170:
  6546  00E15C  8013               	bsf	___flmul@bexp^0,0,c
  6547  00E15E                     l3149:
  6548  00E15E  5013               	movf	___flmul@bexp^0,w,c
  6549  00E160  B4D8               	btfsc	status,2,c
  6550  00E162  EFB5  F070         	goto	u3181
  6551  00E166  EFB7  F070         	goto	u3180
  6552  00E16A                     u3181:
  6553  00E16A  EFCA  F070         	goto	l3157
  6554  00E16E                     u3180:
  6555  00E16E  2813               	incf	___flmul@bexp^0,w,c
  6556  00E170  A4D8               	btfss	status,2,c
  6557  00E172  EFBD  F070         	goto	u3191
  6558  00E176  EFBF  F070         	goto	u3190
  6559  00E17A                     u3191:
  6560  00E17A  EFC7  F070         	goto	l3155
  6561  00E17E                     u3190:
  6562  00E17E  0E00               	movlw	0
  6563  00E180  6E01               	movwf	___flmul@b^0,c
  6564  00E182  0E00               	movlw	0
  6565  00E184  6E02               	movwf	(___flmul@b+1)^0,c
  6566  00E186  0E00               	movlw	0
  6567  00E188  6E03               	movwf	(___flmul@b+2)^0,c
  6568  00E18A  0E00               	movlw	0
  6569  00E18C  6E04               	movwf	(___flmul@b+3)^0,c
  6570  00E18E                     l3155:
  6571  00E18E  8E03               	bsf	(___flmul@b+2)^0,7,c
  6572  00E190  EFD2  F070         	goto	l3159
  6573  00E194                     l3157:
  6574  00E194  0E00               	movlw	0
  6575  00E196  6E01               	movwf	___flmul@b^0,c
  6576  00E198  0E00               	movlw	0
  6577  00E19A  6E02               	movwf	(___flmul@b+1)^0,c
  6578  00E19C  0E00               	movlw	0
  6579  00E19E  6E03               	movwf	(___flmul@b+2)^0,c
  6580  00E1A0  0E00               	movlw	0
  6581  00E1A2  6E04               	movwf	(___flmul@b+3)^0,c
  6582  00E1A4                     l3159:
  6583  00E1A4  5008               	movf	(___flmul@a+3)^0,w,c
  6584  00E1A6  0B80               	andlw	128
  6585  00E1A8  1A0D               	xorwf	___flmul@sign^0,f,c
  6586  00E1AA  5008               	movf	(___flmul@a+3)^0,w,c
  6587  00E1AC  2408               	addwf	(___flmul@a+3)^0,w,c
  6588  00E1AE  6E12               	movwf	___flmul@aexp^0,c
  6589  00E1B0  AE07               	btfss	(___flmul@a+2)^0,7,c
  6590  00E1B2  EFDD  F070         	goto	u3201
  6591  00E1B6  EFDF  F070         	goto	u3200
  6592  00E1BA                     u3201:
  6593  00E1BA  EFE0  F070         	goto	l3167
  6594  00E1BE                     u3200:
  6595  00E1BE  8012               	bsf	___flmul@aexp^0,0,c
  6596  00E1C0                     l3167:
  6597  00E1C0  5012               	movf	___flmul@aexp^0,w,c
  6598  00E1C2  B4D8               	btfsc	status,2,c
  6599  00E1C4  EFE6  F070         	goto	u3211
  6600  00E1C8  EFE8  F070         	goto	u3210
  6601  00E1CC                     u3211:
  6602  00E1CC  EFFB  F070         	goto	l3175
  6603  00E1D0                     u3210:
  6604  00E1D0  2812               	incf	___flmul@aexp^0,w,c
  6605  00E1D2  A4D8               	btfss	status,2,c
  6606  00E1D4  EFEE  F070         	goto	u3221
  6607  00E1D8  EFF0  F070         	goto	u3220
  6608  00E1DC                     u3221:
  6609  00E1DC  EFF8  F070         	goto	l3173
  6610  00E1E0                     u3220:
  6611  00E1E0  0E00               	movlw	0
  6612  00E1E2  6E05               	movwf	___flmul@a^0,c
  6613  00E1E4  0E00               	movlw	0
  6614  00E1E6  6E06               	movwf	(___flmul@a+1)^0,c
  6615  00E1E8  0E00               	movlw	0
  6616  00E1EA  6E07               	movwf	(___flmul@a+2)^0,c
  6617  00E1EC  0E00               	movlw	0
  6618  00E1EE  6E08               	movwf	(___flmul@a+3)^0,c
  6619  00E1F0                     l3173:
  6620  00E1F0  8E07               	bsf	(___flmul@a+2)^0,7,c
  6621  00E1F2  EF03  F071         	goto	l874
  6622  00E1F6                     l3175:
  6623  00E1F6  0E00               	movlw	0
  6624  00E1F8  6E05               	movwf	___flmul@a^0,c
  6625  00E1FA  0E00               	movlw	0
  6626  00E1FC  6E06               	movwf	(___flmul@a+1)^0,c
  6627  00E1FE  0E00               	movlw	0
  6628  00E200  6E07               	movwf	(___flmul@a+2)^0,c
  6629  00E202  0E00               	movlw	0
  6630  00E204  6E08               	movwf	(___flmul@a+3)^0,c
  6631  00E206                     l874:
  6632  00E206  5012               	movf	___flmul@aexp^0,w,c
  6633  00E208  B4D8               	btfsc	status,2,c
  6634  00E20A  EF09  F071         	goto	u3231
  6635  00E20E  EF0B  F071         	goto	u3230
  6636  00E212                     u3231:
  6637  00E212  EF13  F071         	goto	l3179
  6638  00E216                     u3230:
  6639  00E216  5013               	movf	___flmul@bexp^0,w,c
  6640  00E218  A4D8               	btfss	status,2,c
  6641  00E21A  EF11  F071         	goto	u3241
  6642  00E21E  EF13  F071         	goto	u3240
  6643  00E222                     u3241:
  6644  00E222  EF1D  F071         	goto	l3183
  6645  00E226                     u3240:
  6646  00E226                     l3179:
  6647  00E226  0E00               	movlw	0
  6648  00E228  6E01               	movwf	?___flmul^0,c
  6649  00E22A  0E00               	movlw	0
  6650  00E22C  6E02               	movwf	(?___flmul+1)^0,c
  6651  00E22E  0E00               	movlw	0
  6652  00E230  6E03               	movwf	(?___flmul+2)^0,c
  6653  00E232  0E00               	movlw	0
  6654  00E234  6E04               	movwf	(?___flmul+3)^0,c
  6655  00E236  EFC7  F072         	goto	l878
  6656  00E23A                     l3183:
  6657  00E23A  5007               	movf	(___flmul@a+2)^0,w,c
  6658  00E23C  0201               	mulwf	___flmul@b^0,c
  6659  00E23E  006F FFCC  F018    	movff	prodl,___flmul@temp
  6660  00E244  006F FFD0  F019    	movff	prodh,___flmul@temp+1
  6661  00E24A  5018               	movf	___flmul@temp^0,w,c
  6662  00E24C  6E0E               	movwf	___flmul@grs^0,c
  6663  00E24E  6A0F               	clrf	(___flmul@grs+1)^0,c
  6664  00E250  6A10               	clrf	(___flmul@grs+2)^0,c
  6665  00E252  6A11               	clrf	(___flmul@grs+3)^0,c
  6666  00E254  5019               	movf	(___flmul@temp+1)^0,w,c
  6667  00E256  6E14               	movwf	___flmul@prod^0,c
  6668  00E258  6A15               	clrf	(___flmul@prod+1)^0,c
  6669  00E25A  6A16               	clrf	(___flmul@prod+2)^0,c
  6670  00E25C  6A17               	clrf	(___flmul@prod+3)^0,c
  6671  00E25E  5006               	movf	(___flmul@a+1)^0,w,c
  6672  00E260  0202               	mulwf	(___flmul@b+1)^0,c
  6673  00E262  006F FFCC  F018    	movff	prodl,___flmul@temp
  6674  00E268  006F FFD0  F019    	movff	prodh,___flmul@temp+1
  6675  00E26E  5018               	movf	___flmul@temp^0,w,c
  6676  00E270  260E               	addwf	___flmul@grs^0,f,c
  6677  00E272  0E00               	movlw	0
  6678  00E274  220F               	addwfc	(___flmul@grs+1)^0,f,c
  6679  00E276  2210               	addwfc	(___flmul@grs+2)^0,f,c
  6680  00E278  2211               	addwfc	(___flmul@grs+3)^0,f,c
  6681  00E27A  5019               	movf	(___flmul@temp+1)^0,w,c
  6682  00E27C  2614               	addwf	___flmul@prod^0,f,c
  6683  00E27E  0E00               	movlw	0
  6684  00E280  2215               	addwfc	(___flmul@prod+1)^0,f,c
  6685  00E282  2216               	addwfc	(___flmul@prod+2)^0,f,c
  6686  00E284  2217               	addwfc	(___flmul@prod+3)^0,f,c
  6687  00E286  5005               	movf	___flmul@a^0,w,c
  6688  00E288  0203               	mulwf	(___flmul@b+2)^0,c
  6689  00E28A  006F FFCC  F018    	movff	prodl,___flmul@temp
  6690  00E290  006F FFD0  F019    	movff	prodh,___flmul@temp+1
  6691  00E296  5018               	movf	___flmul@temp^0,w,c
  6692  00E298  260E               	addwf	___flmul@grs^0,f,c
  6693  00E29A  0E00               	movlw	0
  6694  00E29C  220F               	addwfc	(___flmul@grs+1)^0,f,c
  6695  00E29E  2210               	addwfc	(___flmul@grs+2)^0,f,c
  6696  00E2A0  2211               	addwfc	(___flmul@grs+3)^0,f,c
  6697  00E2A2  5019               	movf	(___flmul@temp+1)^0,w,c
  6698  00E2A4  2614               	addwf	___flmul@prod^0,f,c
  6699  00E2A6  0E00               	movlw	0
  6700  00E2A8  2215               	addwfc	(___flmul@prod+1)^0,f,c
  6701  00E2AA  2216               	addwfc	(___flmul@prod+2)^0,f,c
  6702  00E2AC  2217               	addwfc	(___flmul@prod+3)^0,f,c
  6703  00E2AE  C010  F011         	movff	___flmul@grs+2,___flmul@grs+3
  6704  00E2B2  C00F  F010         	movff	___flmul@grs+1,___flmul@grs+2
  6705  00E2B6  C00E  F00F         	movff	___flmul@grs,___flmul@grs+1
  6706  00E2BA  6A0E               	clrf	___flmul@grs^0,c
  6707  00E2BC  5005               	movf	___flmul@a^0,w,c
  6708  00E2BE  0202               	mulwf	(___flmul@b+1)^0,c
  6709  00E2C0  006F FFCC  F018    	movff	prodl,___flmul@temp
  6710  00E2C6  006F FFD0  F019    	movff	prodh,___flmul@temp+1
  6711  00E2CC  5018               	movf	___flmul@temp^0,w,c
  6712  00E2CE  260E               	addwf	___flmul@grs^0,f,c
  6713  00E2D0  5019               	movf	(___flmul@temp+1)^0,w,c
  6714  00E2D2  220F               	addwfc	(___flmul@grs+1)^0,f,c
  6715  00E2D4  0E00               	movlw	0
  6716  00E2D6  2210               	addwfc	(___flmul@grs+2)^0,f,c
  6717  00E2D8  0E00               	movlw	0
  6718  00E2DA  2211               	addwfc	(___flmul@grs+3)^0,f,c
  6719  00E2DC  5006               	movf	(___flmul@a+1)^0,w,c
  6720  00E2DE  0201               	mulwf	___flmul@b^0,c
  6721  00E2E0  006F FFCC  F018    	movff	prodl,___flmul@temp
  6722  00E2E6  006F FFD0  F019    	movff	prodh,___flmul@temp+1
  6723  00E2EC  5018               	movf	___flmul@temp^0,w,c
  6724  00E2EE  260E               	addwf	___flmul@grs^0,f,c
  6725  00E2F0  5019               	movf	(___flmul@temp+1)^0,w,c
  6726  00E2F2  220F               	addwfc	(___flmul@grs+1)^0,f,c
  6727  00E2F4  0E00               	movlw	0
  6728  00E2F6  2210               	addwfc	(___flmul@grs+2)^0,f,c
  6729  00E2F8  0E00               	movlw	0
  6730  00E2FA  2211               	addwfc	(___flmul@grs+3)^0,f,c
  6731  00E2FC  C010  F011         	movff	___flmul@grs+2,___flmul@grs+3
  6732  00E300  C00F  F010         	movff	___flmul@grs+1,___flmul@grs+2
  6733  00E304  C00E  F00F         	movff	___flmul@grs,___flmul@grs+1
  6734  00E308  6A0E               	clrf	___flmul@grs^0,c
  6735  00E30A  5005               	movf	___flmul@a^0,w,c
  6736  00E30C  0201               	mulwf	___flmul@b^0,c
  6737  00E30E  006F FFCC  F018    	movff	prodl,___flmul@temp
  6738  00E314  006F FFD0  F019    	movff	prodh,___flmul@temp+1
  6739  00E31A  5018               	movf	___flmul@temp^0,w,c
  6740  00E31C  260E               	addwf	___flmul@grs^0,f,c
  6741  00E31E  5019               	movf	(___flmul@temp+1)^0,w,c
  6742  00E320  220F               	addwfc	(___flmul@grs+1)^0,f,c
  6743  00E322  0E00               	movlw	0
  6744  00E324  2210               	addwfc	(___flmul@grs+2)^0,f,c
  6745  00E326  0E00               	movlw	0
  6746  00E328  2211               	addwfc	(___flmul@grs+3)^0,f,c
  6747  00E32A  5007               	movf	(___flmul@a+2)^0,w,c
  6748  00E32C  0202               	mulwf	(___flmul@b+1)^0,c
  6749  00E32E  006F FFCC  F018    	movff	prodl,___flmul@temp
  6750  00E334  006F FFD0  F019    	movff	prodh,___flmul@temp+1
  6751  00E33A  5018               	movf	___flmul@temp^0,w,c
  6752  00E33C  2614               	addwf	___flmul@prod^0,f,c
  6753  00E33E  5019               	movf	(___flmul@temp+1)^0,w,c
  6754  00E340  2215               	addwfc	(___flmul@prod+1)^0,f,c
  6755  00E342  0E00               	movlw	0
  6756  00E344  2216               	addwfc	(___flmul@prod+2)^0,f,c
  6757  00E346  0E00               	movlw	0
  6758  00E348  2217               	addwfc	(___flmul@prod+3)^0,f,c
  6759  00E34A  5006               	movf	(___flmul@a+1)^0,w,c
  6760  00E34C  0203               	mulwf	(___flmul@b+2)^0,c
  6761  00E34E  006F FFCC  F018    	movff	prodl,___flmul@temp
  6762  00E354  006F FFD0  F019    	movff	prodh,___flmul@temp+1
  6763  00E35A  5018               	movf	___flmul@temp^0,w,c
  6764  00E35C  2614               	addwf	___flmul@prod^0,f,c
  6765  00E35E  5019               	movf	(___flmul@temp+1)^0,w,c
  6766  00E360  2215               	addwfc	(___flmul@prod+1)^0,f,c
  6767  00E362  0E00               	movlw	0
  6768  00E364  2216               	addwfc	(___flmul@prod+2)^0,f,c
  6769  00E366  0E00               	movlw	0
  6770  00E368  2217               	addwfc	(___flmul@prod+3)^0,f,c
  6771  00E36A  5007               	movf	(___flmul@a+2)^0,w,c
  6772  00E36C  0203               	mulwf	(___flmul@b+2)^0,c
  6773  00E36E  006F FFCC  F018    	movff	prodl,___flmul@temp
  6774  00E374  006F FFD0  F019    	movff	prodh,___flmul@temp+1
  6775  00E37A  5018               	movf	___flmul@temp^0,w,c
  6776  00E37C  6E09               	movwf	??___flmul^0,c
  6777  00E37E  5019               	movf	(___flmul@temp+1)^0,w,c
  6778  00E380  6E0A               	movwf	(??___flmul+1)^0,c
  6779  00E382  6A0B               	clrf	(??___flmul+2)^0,c
  6780  00E384  6A0C               	clrf	(??___flmul+3)^0,c
  6781  00E386  C00B  F00C         	movff	??___flmul+2,??___flmul+3
  6782  00E38A  C00A  F00B         	movff	??___flmul+1,??___flmul+2
  6783  00E38E  C009  F00A         	movff	??___flmul,??___flmul+1
  6784  00E392  6A09               	clrf	??___flmul^0,c
  6785  00E394  5009               	movf	??___flmul^0,w,c
  6786  00E396  2614               	addwf	___flmul@prod^0,f,c
  6787  00E398  500A               	movf	(??___flmul+1)^0,w,c
  6788  00E39A  2215               	addwfc	(___flmul@prod+1)^0,f,c
  6789  00E39C  500B               	movf	(??___flmul+2)^0,w,c
  6790  00E39E  2216               	addwfc	(___flmul@prod+2)^0,f,c
  6791  00E3A0  500C               	movf	(??___flmul+3)^0,w,c
  6792  00E3A2  2217               	addwfc	(___flmul@prod+3)^0,f,c
  6793  00E3A4  C00E  F009         	movff	___flmul@grs,??___flmul
  6794  00E3A8  C00F  F00A         	movff	___flmul@grs+1,??___flmul+1
  6795  00E3AC  C010  F00B         	movff	___flmul@grs+2,??___flmul+2
  6796  00E3B0  C011  F00C         	movff	___flmul@grs+3,??___flmul+3
  6797  00E3B4  0E19               	movlw	25
  6798  00E3B6  EFE2  F071         	goto	u3250
  6799  00E3BA                     u3255:
  6800  00E3BA  90D8               	bcf	status,0,c
  6801  00E3BC  320C               	rrcf	(??___flmul+3)^0,f,c
  6802  00E3BE  320B               	rrcf	(??___flmul+2)^0,f,c
  6803  00E3C0  320A               	rrcf	(??___flmul+1)^0,f,c
  6804  00E3C2  3209               	rrcf	??___flmul^0,f,c
  6805  00E3C4                     u3250:
  6806  00E3C4  2EE8               	decfsz	wreg,f,c
  6807  00E3C6  EFDD  F071         	goto	u3255
  6808  00E3CA  5009               	movf	??___flmul^0,w,c
  6809  00E3CC  2614               	addwf	___flmul@prod^0,f,c
  6810  00E3CE  500A               	movf	(??___flmul+1)^0,w,c
  6811  00E3D0  2215               	addwfc	(___flmul@prod+1)^0,f,c
  6812  00E3D2  500B               	movf	(??___flmul+2)^0,w,c
  6813  00E3D4  2216               	addwfc	(___flmul@prod+2)^0,f,c
  6814  00E3D6  500C               	movf	(??___flmul+3)^0,w,c
  6815  00E3D8  2217               	addwfc	(___flmul@prod+3)^0,f,c
  6816  00E3DA  C010  F011         	movff	___flmul@grs+2,___flmul@grs+3
  6817  00E3DE  C00F  F010         	movff	___flmul@grs+1,___flmul@grs+2
  6818  00E3E2  C00E  F00F         	movff	___flmul@grs,___flmul@grs+1
  6819  00E3E6  6A0E               	clrf	___flmul@grs^0,c
  6820  00E3E8  5012               	movf	___flmul@aexp^0,w,c
  6821  00E3EA  C013  F009         	movff	___flmul@bexp,??___flmul
  6822  00E3EE  6A0A               	clrf	(??___flmul+1)^0,c
  6823  00E3F0  2609               	addwf	??___flmul^0,f,c
  6824  00E3F2  0E00               	movlw	0
  6825  00E3F4  220A               	addwfc	(??___flmul+1)^0,f,c
  6826  00E3F6  0E82               	movlw	130
  6827  00E3F8  2409               	addwf	??___flmul^0,w,c
  6828  00E3FA  6E18               	movwf	___flmul@temp^0,c
  6829  00E3FC  0EFF               	movlw	255
  6830  00E3FE  200A               	addwfc	(??___flmul+1)^0,w,c
  6831  00E400  6E19               	movwf	(___flmul@temp+1)^0,c
  6832  00E402  EF18  F072         	goto	l3231
  6833  00E406                     l3225:
  6834  00E406  90D8               	bcf	status,0,c
  6835  00E408  3614               	rlcf	___flmul@prod^0,f,c
  6836  00E40A  3615               	rlcf	(___flmul@prod+1)^0,f,c
  6837  00E40C  3616               	rlcf	(___flmul@prod+2)^0,f,c
  6838  00E40E  3617               	rlcf	(___flmul@prod+3)^0,f,c
  6839  00E410  AE11               	btfss	(___flmul@grs+3)^0,7,c
  6840  00E412  EF0D  F072         	goto	u3261
  6841  00E416  EF0F  F072         	goto	u3260
  6842  00E41A                     u3261:
  6843  00E41A  EF10  F072         	goto	l881
  6844  00E41E                     u3260:
  6845  00E41E  8014               	bsf	___flmul@prod^0,0,c
  6846  00E420                     l881:
  6847  00E420  90D8               	bcf	status,0,c
  6848  00E422  360E               	rlcf	___flmul@grs^0,f,c
  6849  00E424  360F               	rlcf	(___flmul@grs+1)^0,f,c
  6850  00E426  3610               	rlcf	(___flmul@grs+2)^0,f,c
  6851  00E428  3611               	rlcf	(___flmul@grs+3)^0,f,c
  6852  00E42A  0618               	decf	___flmul@temp^0,f,c
  6853  00E42C  A0D8               	btfss	status,0,c
  6854  00E42E  0619               	decf	(___flmul@temp+1)^0,f,c
  6855  00E430                     l3231:
  6856  00E430  AE16               	btfss	(___flmul@prod+2)^0,7,c
  6857  00E432  EF1D  F072         	goto	u3271
  6858  00E436  EF1F  F072         	goto	u3270
  6859  00E43A                     u3271:
  6860  00E43A  EF03  F072         	goto	l3225
  6861  00E43E                     u3270:
  6862  00E43E  0E00               	movlw	0
  6863  00E440  6E12               	movwf	___flmul@aexp^0,c
  6864  00E442  AE11               	btfss	(___flmul@grs+3)^0,7,c
  6865  00E444  EF26  F072         	goto	u3281
  6866  00E448  EF28  F072         	goto	u3280
  6867  00E44C                     u3281:
  6868  00E44C  EF4C  F072         	goto	l883
  6869  00E450                     u3280:
  6870  00E450  0EFF               	movlw	255
  6871  00E452  140E               	andwf	___flmul@grs^0,w,c
  6872  00E454  6E09               	movwf	??___flmul^0,c
  6873  00E456  0EFF               	movlw	255
  6874  00E458  140F               	andwf	(___flmul@grs+1)^0,w,c
  6875  00E45A  6E0A               	movwf	(??___flmul+1)^0,c
  6876  00E45C  0EFF               	movlw	255
  6877  00E45E  1410               	andwf	(___flmul@grs+2)^0,w,c
  6878  00E460  6E0B               	movwf	(??___flmul+2)^0,c
  6879  00E462  0E7F               	movlw	127
  6880  00E464  1411               	andwf	(___flmul@grs+3)^0,w,c
  6881  00E466  6E0C               	movwf	(??___flmul+3)^0,c
  6882  00E468  5009               	movf	??___flmul^0,w,c
  6883  00E46A  100A               	iorwf	(??___flmul+1)^0,w,c
  6884  00E46C  100B               	iorwf	(??___flmul+2)^0,w,c
  6885  00E46E  100C               	iorwf	(??___flmul+3)^0,w,c
  6886  00E470  B4D8               	btfsc	status,2,c
  6887  00E472  EF3D  F072         	goto	u3291
  6888  00E476  EF3F  F072         	goto	u3290
  6889  00E47A                     u3291:
  6890  00E47A  EF43  F072         	goto	l884
  6891  00E47E                     u3290:
  6892  00E47E                     l3239:
  6893  00E47E  0E01               	movlw	1
  6894  00E480  6E12               	movwf	___flmul@aexp^0,c
  6895  00E482  EF4C  F072         	goto	l883
  6896  00E486                     l884:
  6897  00E486  A014               	btfss	___flmul@prod^0,0,c
  6898  00E488  EF48  F072         	goto	u3301
  6899  00E48C  EF4A  F072         	goto	u3300
  6900  00E490                     u3301:
  6901  00E490  EF4C  F072         	goto	l883
  6902  00E494                     u3300:
  6903  00E494  EF3F  F072         	goto	l3239
  6904  00E498                     l883:
  6905  00E498  5012               	movf	___flmul@aexp^0,w,c
  6906  00E49A  B4D8               	btfsc	status,2,c
  6907  00E49C  EF52  F072         	goto	u3311
  6908  00E4A0  EF54  F072         	goto	u3310
  6909  00E4A4                     u3311:
  6910  00E4A4  EF78  F072         	goto	l3251
  6911  00E4A8                     u3310:
  6912  00E4A8  0E01               	movlw	1
  6913  00E4AA  2614               	addwf	___flmul@prod^0,f,c
  6914  00E4AC  0E00               	movlw	0
  6915  00E4AE  2215               	addwfc	(___flmul@prod+1)^0,f,c
  6916  00E4B0  2216               	addwfc	(___flmul@prod+2)^0,f,c
  6917  00E4B2  2217               	addwfc	(___flmul@prod+3)^0,f,c
  6918  00E4B4  A017               	btfss	(___flmul@prod+3)^0,0,c
  6919  00E4B6  EF5F  F072         	goto	u3321
  6920  00E4BA  EF61  F072         	goto	u3320
  6921  00E4BE                     u3321:
  6922  00E4BE  EF78  F072         	goto	l3251
  6923  00E4C2                     u3320:
  6924  00E4C2  C014  F009         	movff	___flmul@prod,??___flmul
  6925  00E4C6  C015  F00A         	movff	___flmul@prod+1,??___flmul+1
  6926  00E4CA  C016  F00B         	movff	___flmul@prod+2,??___flmul+2
  6927  00E4CE  C017  F00C         	movff	___flmul@prod+3,??___flmul+3
  6928  00E4D2  340C               	rlcf	(??___flmul+3)^0,w,c
  6929  00E4D4  320C               	rrcf	(??___flmul+3)^0,f,c
  6930  00E4D6  320B               	rrcf	(??___flmul+2)^0,f,c
  6931  00E4D8  320A               	rrcf	(??___flmul+1)^0,f,c
  6932  00E4DA  3209               	rrcf	??___flmul^0,f,c
  6933  00E4DC  C009  F014         	movff	??___flmul,___flmul@prod
  6934  00E4E0  C00A  F015         	movff	??___flmul+1,___flmul@prod+1
  6935  00E4E4  C00B  F016         	movff	??___flmul+2,___flmul@prod+2
  6936  00E4E8  C00C  F017         	movff	??___flmul+3,___flmul@prod+3
  6937  00E4EC  4A18               	infsnz	___flmul@temp^0,f,c
  6938  00E4EE  2A19               	incf	(___flmul@temp+1)^0,f,c
  6939  00E4F0                     l3251:
  6940  00E4F0  BE19               	btfsc	(___flmul@temp+1)^0,7,c
  6941  00E4F2  EF83  F072         	goto	u3331
  6942  00E4F6  5019               	movf	(___flmul@temp+1)^0,w,c
  6943  00E4F8  E108               	bnz	u3330
  6944  00E4FA  2818               	incf	___flmul@temp^0,w,c
  6945  00E4FC  A0D8               	btfss	status,0,c
  6946  00E4FE  EF83  F072         	goto	u3331
  6947  00E502  EF85  F072         	goto	u3330
  6948  00E506                     u3331:
  6949  00E506  EF8F  F072         	goto	l3255
  6950  00E50A                     u3330:
  6951  00E50A  0E00               	movlw	0
  6952  00E50C  6E14               	movwf	___flmul@prod^0,c
  6953  00E50E  0E00               	movlw	0
  6954  00E510  6E15               	movwf	(___flmul@prod+1)^0,c
  6955  00E512  0E80               	movlw	128
  6956  00E514  6E16               	movwf	(___flmul@prod+2)^0,c
  6957  00E516  0E7F               	movlw	127
  6958  00E518  6E17               	movwf	(___flmul@prod+3)^0,c
  6959  00E51A  EFBD  F072         	goto	l3267
  6960  00E51E                     l3255:
  6961  00E51E  BE19               	btfsc	(___flmul@temp+1)^0,7,c
  6962  00E520  EF9C  F072         	goto	u3340
  6963  00E524  5019               	movf	(___flmul@temp+1)^0,w,c
  6964  00E526  E106               	bnz	u3341
  6965  00E528  0418               	decf	___flmul@temp^0,w,c
  6966  00E52A  B0D8               	btfsc	status,0,c
  6967  00E52C  EF9A  F072         	goto	u3341
  6968  00E530  EF9C  F072         	goto	u3340
  6969  00E534                     u3341:
  6970  00E534  EFA8  F072         	goto	l891
  6971  00E538                     u3340:
  6972  00E538  0E00               	movlw	0
  6973  00E53A  6E14               	movwf	___flmul@prod^0,c
  6974  00E53C  0E00               	movlw	0
  6975  00E53E  6E15               	movwf	(___flmul@prod+1)^0,c
  6976  00E540  0E00               	movlw	0
  6977  00E542  6E16               	movwf	(___flmul@prod+2)^0,c
  6978  00E544  0E00               	movlw	0
  6979  00E546  6E17               	movwf	(___flmul@prod+3)^0,c
  6980  00E548  0E00               	movlw	0
  6981  00E54A  6E0D               	movwf	___flmul@sign^0,c
  6982  00E54C  EFBD  F072         	goto	l3267
  6983  00E550                     l891:
  6984  00E550  C018  F013         	movff	___flmul@temp,___flmul@bexp
  6985  00E554  0EFF               	movlw	255
  6986  00E556  1614               	andwf	___flmul@prod^0,f,c
  6987  00E558  0EFF               	movlw	255
  6988  00E55A  1615               	andwf	(___flmul@prod+1)^0,f,c
  6989  00E55C  0E7F               	movlw	127
  6990  00E55E  1616               	andwf	(___flmul@prod+2)^0,f,c
  6991  00E560  0E00               	movlw	0
  6992  00E562  1617               	andwf	(___flmul@prod+3)^0,f,c
  6993  00E564  A013               	btfss	___flmul@bexp^0,0,c
  6994  00E566  EFB7  F072         	goto	u3351
  6995  00E56A  EFB9  F072         	goto	u3350
  6996  00E56E                     u3351:
  6997  00E56E  EFBA  F072         	goto	l3265
  6998  00E572                     u3350:
  6999  00E572  8E16               	bsf	(___flmul@prod+2)^0,7,c
  7000  00E574                     l3265:
  7001  00E574  90D8               	bcf	status,0,c
  7002  00E576  3013               	rrcf	___flmul@bexp^0,w,c
  7003  00E578  6E17               	movwf	(___flmul@prod+3)^0,c
  7004  00E57A                     l3267:
  7005  00E57A  500D               	movf	___flmul@sign^0,w,c
  7006  00E57C  1217               	iorwf	(___flmul@prod+3)^0,f,c
  7007  00E57E  C014  F001         	movff	___flmul@prod,?___flmul
  7008  00E582  C015  F002         	movff	___flmul@prod+1,?___flmul+1
  7009  00E586  C016  F003         	movff	___flmul@prod+2,?___flmul+2
  7010  00E58A  C017  F004         	movff	___flmul@prod+3,?___flmul+3
  7011  00E58E                     l878:
  7012  00E58E  0012               	return		;funcret
  7013  00E590                     __end_of___flmul:
  7014                           	callstack 0
  7015                           
  7016 ;; *************** function ___flge *****************
  7017 ;; Defined at:
  7018 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\flge.c"
  7019 ;; Parameters:    Size  Location     Type
  7020 ;;  ff1             4   25[COMRAM] unsigned char 
  7021 ;;  ff2             4   29[COMRAM] unsigned char 
  7022 ;; Auto vars:     Size  Location     Type
  7023 ;;		None
  7024 ;; Return value:  Size  Location     Type
  7025 ;;		None               void
  7026 ;; Registers used:
  7027 ;;		wreg, status,2, status,0
  7028 ;; Tracked objects:
  7029 ;;		On entry : 0/0
  7030 ;;		On exit  : 0/0
  7031 ;;		Unchanged: 0/0
  7032 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7033 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7034 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7035 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7036 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7037 ;;Total ram usage:       12 bytes
  7038 ;; Hardware stack levels used:    1
  7039 ;; This function calls:
  7040 ;;		Nothing
  7041 ;; This function is called by:
  7042 ;;		_efgtoa
  7043 ;; This function uses a non-reentrant model
  7044 ;;
  7045                           
  7046                           	psect	text22
  7047  00D662                     __ptext22:
  7048                           	callstack 0
  7049  00D662                     ___flge:
  7050                           	callstack 26
  7051  00D662  0E00               	movlw	0
  7052  00D664  141A               	andwf	___flge@ff1^0,w,c
  7053  00D666  6E22               	movwf	??___flge^0,c
  7054  00D668  0E00               	movlw	0
  7055  00D66A  141B               	andwf	(___flge@ff1+1)^0,w,c
  7056  00D66C  6E23               	movwf	(??___flge+1)^0,c
  7057  00D66E  0E80               	movlw	128
  7058  00D670  141C               	andwf	(___flge@ff1+2)^0,w,c
  7059  00D672  6E24               	movwf	(??___flge+2)^0,c
  7060  00D674  0E7F               	movlw	127
  7061  00D676  141D               	andwf	(___flge@ff1+3)^0,w,c
  7062  00D678  6E25               	movwf	(??___flge+3)^0,c
  7063  00D67A  5022               	movf	??___flge^0,w,c
  7064  00D67C  1023               	iorwf	(??___flge+1)^0,w,c
  7065  00D67E  1024               	iorwf	(??___flge+2)^0,w,c
  7066  00D680  1025               	iorwf	(??___flge+3)^0,w,c
  7067  00D682  A4D8               	btfss	status,2,c
  7068  00D684  EF46  F06B         	goto	u3511
  7069  00D688  EF48  F06B         	goto	u3510
  7070  00D68C                     u3511:
  7071  00D68C  EF50  F06B         	goto	l3379
  7072  00D690                     u3510:
  7073  00D690  0E00               	movlw	0
  7074  00D692  6E1A               	movwf	___flge@ff1^0,c
  7075  00D694  0E00               	movlw	0
  7076  00D696  6E1B               	movwf	(___flge@ff1+1)^0,c
  7077  00D698  0E00               	movlw	0
  7078  00D69A  6E1C               	movwf	(___flge@ff1+2)^0,c
  7079  00D69C  0E00               	movlw	0
  7080  00D69E  6E1D               	movwf	(___flge@ff1+3)^0,c
  7081  00D6A0                     l3379:
  7082  00D6A0  0E00               	movlw	0
  7083  00D6A2  141E               	andwf	___flge@ff2^0,w,c
  7084  00D6A4  6E22               	movwf	??___flge^0,c
  7085  00D6A6  0E00               	movlw	0
  7086  00D6A8  141F               	andwf	(___flge@ff2+1)^0,w,c
  7087  00D6AA  6E23               	movwf	(??___flge+1)^0,c
  7088  00D6AC  0E80               	movlw	128
  7089  00D6AE  1420               	andwf	(___flge@ff2+2)^0,w,c
  7090  00D6B0  6E24               	movwf	(??___flge+2)^0,c
  7091  00D6B2  0E7F               	movlw	127
  7092  00D6B4  1421               	andwf	(___flge@ff2+3)^0,w,c
  7093  00D6B6  6E25               	movwf	(??___flge+3)^0,c
  7094  00D6B8  5022               	movf	??___flge^0,w,c
  7095  00D6BA  1023               	iorwf	(??___flge+1)^0,w,c
  7096  00D6BC  1024               	iorwf	(??___flge+2)^0,w,c
  7097  00D6BE  1025               	iorwf	(??___flge+3)^0,w,c
  7098  00D6C0  A4D8               	btfss	status,2,c
  7099  00D6C2  EF65  F06B         	goto	u3521
  7100  00D6C6  EF67  F06B         	goto	u3520
  7101  00D6CA                     u3521:
  7102  00D6CA  EF6F  F06B         	goto	l3383
  7103  00D6CE                     u3520:
  7104  00D6CE  0E00               	movlw	0
  7105  00D6D0  6E1E               	movwf	___flge@ff2^0,c
  7106  00D6D2  0E00               	movlw	0
  7107  00D6D4  6E1F               	movwf	(___flge@ff2+1)^0,c
  7108  00D6D6  0E00               	movlw	0
  7109  00D6D8  6E20               	movwf	(___flge@ff2+2)^0,c
  7110  00D6DA  0E00               	movlw	0
  7111  00D6DC  6E21               	movwf	(___flge@ff2+3)^0,c
  7112  00D6DE                     l3383:
  7113  00D6DE  AE1D               	btfss	(___flge@ff1+3)^0,7,c
  7114  00D6E0  EF74  F06B         	goto	u3531
  7115  00D6E4  EF76  F06B         	goto	u3530
  7116  00D6E8                     u3531:
  7117  00D6E8  EF7F  F06B         	goto	l3387
  7118  00D6EC                     u3530:
  7119  00D6EC  6C1A               	negf	___flge@ff1^0,c
  7120  00D6EE  1E1B               	comf	(___flge@ff1+1)^0,f,c
  7121  00D6F0  B0D8               	btfsc	status,0,c
  7122  00D6F2  2A1B               	incf	(___flge@ff1+1)^0,f,c
  7123  00D6F4  1E1C               	comf	(___flge@ff1+2)^0,f,c
  7124  00D6F6  B0D8               	btfsc	status,0,c
  7125  00D6F8  2A1C               	incf	(___flge@ff1+2)^0,f,c
  7126  00D6FA  0E80               	movlw	128
  7127  00D6FC  561D               	subfwb	(___flge@ff1+3)^0,f,c
  7128  00D6FE                     l3387:
  7129  00D6FE  AE21               	btfss	(___flge@ff2+3)^0,7,c
  7130  00D700  EF84  F06B         	goto	u3541
  7131  00D704  EF86  F06B         	goto	u3540
  7132  00D708                     u3541:
  7133  00D708  EF8F  F06B         	goto	l525
  7134  00D70C                     u3540:
  7135  00D70C  6C1E               	negf	___flge@ff2^0,c
  7136  00D70E  1E1F               	comf	(___flge@ff2+1)^0,f,c
  7137  00D710  B0D8               	btfsc	status,0,c
  7138  00D712  2A1F               	incf	(___flge@ff2+1)^0,f,c
  7139  00D714  1E20               	comf	(___flge@ff2+2)^0,f,c
  7140  00D716  B0D8               	btfsc	status,0,c
  7141  00D718  2A20               	incf	(___flge@ff2+2)^0,f,c
  7142  00D71A  0E80               	movlw	128
  7143  00D71C  5621               	subfwb	(___flge@ff2+3)^0,f,c
  7144  00D71E                     l525:
  7145  00D71E  0E00               	movlw	0
  7146  00D720  1A1A               	xorwf	___flge@ff1^0,f,c
  7147  00D722  0E00               	movlw	0
  7148  00D724  1A1B               	xorwf	(___flge@ff1+1)^0,f,c
  7149  00D726  0E00               	movlw	0
  7150  00D728  1A1C               	xorwf	(___flge@ff1+2)^0,f,c
  7151  00D72A  0E80               	movlw	128
  7152  00D72C  1A1D               	xorwf	(___flge@ff1+3)^0,f,c
  7153  00D72E  0E00               	movlw	0
  7154  00D730  1A1E               	xorwf	___flge@ff2^0,f,c
  7155  00D732  0E00               	movlw	0
  7156  00D734  1A1F               	xorwf	(___flge@ff2+1)^0,f,c
  7157  00D736  0E00               	movlw	0
  7158  00D738  1A20               	xorwf	(___flge@ff2+2)^0,f,c
  7159  00D73A  0E80               	movlw	128
  7160  00D73C  1A21               	xorwf	(___flge@ff2+3)^0,f,c
  7161  00D73E  501E               	movf	___flge@ff2^0,w,c
  7162  00D740  5C1A               	subwf	___flge@ff1^0,w,c
  7163  00D742  501F               	movf	(___flge@ff2+1)^0,w,c
  7164  00D744  581B               	subwfb	(___flge@ff1+1)^0,w,c
  7165  00D746  5020               	movf	(___flge@ff2+2)^0,w,c
  7166  00D748  581C               	subwfb	(___flge@ff1+2)^0,w,c
  7167  00D74A  5021               	movf	(___flge@ff2+3)^0,w,c
  7168  00D74C  581D               	subwfb	(___flge@ff1+3)^0,w,c
  7169  00D74E  B0D8               	btfsc	status,0,c
  7170  00D750  EFAC  F06B         	goto	u3551
  7171  00D754  EFAE  F06B         	goto	u3550
  7172  00D758                     u3551:
  7173  00D758  EFB1  F06B         	goto	l3393
  7174  00D75C                     u3550:
  7175  00D75C  90D8               	bcf	status,0,c
  7176  00D75E  EFB2  F06B         	goto	l530
  7177  00D762                     l3393:
  7178  00D762  80D8               	bsf	status,0,c
  7179  00D764                     l530:
  7180  00D764  0012               	return		;funcret
  7181  00D766                     __end_of___flge:
  7182                           	callstack 0
  7183                           
  7184 ;; *************** function ___fleq *****************
  7185 ;; Defined at:
  7186 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\fleq.c"
  7187 ;; Parameters:    Size  Location     Type
  7188 ;;  ff1             4    0[COMRAM] unsigned char 
  7189 ;;  ff2             4    4[COMRAM] unsigned char 
  7190 ;; Auto vars:     Size  Location     Type
  7191 ;;		None
  7192 ;; Return value:  Size  Location     Type
  7193 ;;		None               void
  7194 ;; Registers used:
  7195 ;;		wreg, status,2, status,0
  7196 ;; Tracked objects:
  7197 ;;		On entry : 0/0
  7198 ;;		On exit  : 0/0
  7199 ;;		Unchanged: 0/0
  7200 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7201 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7202 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7203 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7204 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7205 ;;Total ram usage:       12 bytes
  7206 ;; Hardware stack levels used:    1
  7207 ;; This function calls:
  7208 ;;		Nothing
  7209 ;; This function is called by:
  7210 ;;		_efgtoa
  7211 ;; This function uses a non-reentrant model
  7212 ;;
  7213                           
  7214                           	psect	text23
  7215  00D18C                     __ptext23:
  7216                           	callstack 0
  7217  00D18C                     ___fleq:
  7218                           	callstack 26
  7219  00D18C  0E00               	movlw	0
  7220  00D18E  1401               	andwf	___fleq@ff1^0,w,c
  7221  00D190  6E09               	movwf	??___fleq^0,c
  7222  00D192  0E00               	movlw	0
  7223  00D194  1402               	andwf	(___fleq@ff1+1)^0,w,c
  7224  00D196  6E0A               	movwf	(??___fleq+1)^0,c
  7225  00D198  0E80               	movlw	128
  7226  00D19A  1403               	andwf	(___fleq@ff1+2)^0,w,c
  7227  00D19C  6E0B               	movwf	(??___fleq+2)^0,c
  7228  00D19E  0E7F               	movlw	127
  7229  00D1A0  1404               	andwf	(___fleq@ff1+3)^0,w,c
  7230  00D1A2  6E0C               	movwf	(??___fleq+3)^0,c
  7231  00D1A4  5009               	movf	??___fleq^0,w,c
  7232  00D1A6  100A               	iorwf	(??___fleq+1)^0,w,c
  7233  00D1A8  100B               	iorwf	(??___fleq+2)^0,w,c
  7234  00D1AA  100C               	iorwf	(??___fleq+3)^0,w,c
  7235  00D1AC  A4D8               	btfss	status,2,c
  7236  00D1AE  EFDB  F068         	goto	u3481
  7237  00D1B2  EFDD  F068         	goto	u3480
  7238  00D1B6                     u3481:
  7239  00D1B6  EFE5  F068         	goto	l3363
  7240  00D1BA                     u3480:
  7241  00D1BA  0E00               	movlw	0
  7242  00D1BC  6E01               	movwf	___fleq@ff1^0,c
  7243  00D1BE  0E00               	movlw	0
  7244  00D1C0  6E02               	movwf	(___fleq@ff1+1)^0,c
  7245  00D1C2  0E00               	movlw	0
  7246  00D1C4  6E03               	movwf	(___fleq@ff1+2)^0,c
  7247  00D1C6  0E00               	movlw	0
  7248  00D1C8  6E04               	movwf	(___fleq@ff1+3)^0,c
  7249  00D1CA                     l3363:
  7250  00D1CA  0E00               	movlw	0
  7251  00D1CC  1405               	andwf	___fleq@ff2^0,w,c
  7252  00D1CE  6E09               	movwf	??___fleq^0,c
  7253  00D1D0  0E00               	movlw	0
  7254  00D1D2  1406               	andwf	(___fleq@ff2+1)^0,w,c
  7255  00D1D4  6E0A               	movwf	(??___fleq+1)^0,c
  7256  00D1D6  0E80               	movlw	128
  7257  00D1D8  1407               	andwf	(___fleq@ff2+2)^0,w,c
  7258  00D1DA  6E0B               	movwf	(??___fleq+2)^0,c
  7259  00D1DC  0E7F               	movlw	127
  7260  00D1DE  1408               	andwf	(___fleq@ff2+3)^0,w,c
  7261  00D1E0  6E0C               	movwf	(??___fleq+3)^0,c
  7262  00D1E2  5009               	movf	??___fleq^0,w,c
  7263  00D1E4  100A               	iorwf	(??___fleq+1)^0,w,c
  7264  00D1E6  100B               	iorwf	(??___fleq+2)^0,w,c
  7265  00D1E8  100C               	iorwf	(??___fleq+3)^0,w,c
  7266  00D1EA  A4D8               	btfss	status,2,c
  7267  00D1EC  EFFA  F068         	goto	u3491
  7268  00D1F0  EFFC  F068         	goto	u3490
  7269  00D1F4                     u3491:
  7270  00D1F4  EF04  F069         	goto	l3367
  7271  00D1F8                     u3490:
  7272  00D1F8  0E00               	movlw	0
  7273  00D1FA  6E05               	movwf	___fleq@ff2^0,c
  7274  00D1FC  0E00               	movlw	0
  7275  00D1FE  6E06               	movwf	(___fleq@ff2+1)^0,c
  7276  00D200  0E00               	movlw	0
  7277  00D202  6E07               	movwf	(___fleq@ff2+2)^0,c
  7278  00D204  0E00               	movlw	0
  7279  00D206  6E08               	movwf	(___fleq@ff2+3)^0,c
  7280  00D208                     l3367:
  7281  00D208  5005               	movf	___fleq@ff2^0,w,c
  7282  00D20A  1801               	xorwf	___fleq@ff1^0,w,c
  7283  00D20C  E10F               	bnz	u3500
  7284  00D20E  5006               	movf	(___fleq@ff2+1)^0,w,c
  7285  00D210  1802               	xorwf	(___fleq@ff1+1)^0,w,c
  7286  00D212  E10C               	bnz	u3500
  7287  00D214  5007               	movf	(___fleq@ff2+2)^0,w,c
  7288  00D216  1803               	xorwf	(___fleq@ff1+2)^0,w,c
  7289  00D218  E109               	bnz	u3500
  7290  00D21A  5008               	movf	(___fleq@ff2+3)^0,w,c
  7291  00D21C  1804               	xorwf	(___fleq@ff1+3)^0,w,c
  7292  00D21E  B4D8               	btfsc	status,2,c
  7293  00D220  EF14  F069         	goto	u3501
  7294  00D224  EF16  F069         	goto	u3500
  7295  00D228                     u3501:
  7296  00D228  EF19  F069         	goto	l3371
  7297  00D22C                     u3500:
  7298  00D22C  90D8               	bcf	status,0,c
  7299  00D22E  EF1A  F069         	goto	l519
  7300  00D232                     l3371:
  7301  00D232  80D8               	bsf	status,0,c
  7302  00D234                     l519:
  7303  00D234  0012               	return		;funcret
  7304  00D236                     __end_of___fleq:
  7305                           	callstack 0
  7306                           
  7307 ;; *************** function ___fldiv *****************
  7308 ;; Defined at:
  7309 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\sprcdiv.c"
  7310 ;; Parameters:    Size  Location     Type
  7311 ;;  b               4    0[COMRAM] unsigned char 
  7312 ;;  a               4    4[COMRAM] unsigned char 
  7313 ;; Auto vars:     Size  Location     Type
  7314 ;;  grs             4   19[COMRAM] unsigned long 
  7315 ;;  rem             4   12[COMRAM] unsigned long 
  7316 ;;  new_exp         2   17[COMRAM] short 
  7317 ;;  aexp            1   24[COMRAM] unsigned char 
  7318 ;;  bexp            1   23[COMRAM] unsigned char 
  7319 ;;  sign            1   16[COMRAM] unsigned char 
  7320 ;; Return value:  Size  Location     Type
  7321 ;;                  4    0[COMRAM] unsigned char 
  7322 ;; Registers used:
  7323 ;;		wreg, status,2, status,0
  7324 ;; Tracked objects:
  7325 ;;		On entry : 0/0
  7326 ;;		On exit  : 0/0
  7327 ;;		Unchanged: 0/0
  7328 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7329 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7330 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7331 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7332 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7333 ;;Total ram usage:       25 bytes
  7334 ;; Hardware stack levels used:    1
  7335 ;; This function calls:
  7336 ;;		Nothing
  7337 ;; This function is called by:
  7338 ;;		_efgtoa
  7339 ;; This function uses a non-reentrant model
  7340 ;;
  7341                           
  7342                           	psect	text24
  7343  00DDA8                     __ptext24:
  7344                           	callstack 0
  7345  00DDA8                     ___fldiv:
  7346                           	callstack 26
  7347  00DDA8  5004               	movf	(___fldiv@b+3)^0,w,c
  7348  00DDAA  0B80               	andlw	128
  7349  00DDAC  6E11               	movwf	___fldiv@sign^0,c
  7350  00DDAE  5004               	movf	(___fldiv@b+3)^0,w,c
  7351  00DDB0  2404               	addwf	(___fldiv@b+3)^0,w,c
  7352  00DDB2  6E18               	movwf	___fldiv@bexp^0,c
  7353  00DDB4  AE03               	btfss	(___fldiv@b+2)^0,7,c
  7354  00DDB6  EFDF  F06E         	goto	u2941
  7355  00DDBA  EFE1  F06E         	goto	u2940
  7356  00DDBE                     u2941:
  7357  00DDBE  EFE2  F06E         	goto	l3011
  7358  00DDC2                     u2940:
  7359  00DDC2  8018               	bsf	___fldiv@bexp^0,0,c
  7360  00DDC4                     l3011:
  7361  00DDC4  5018               	movf	___fldiv@bexp^0,w,c
  7362  00DDC6  B4D8               	btfsc	status,2,c
  7363  00DDC8  EFE8  F06E         	goto	u2951
  7364  00DDCC  EFEA  F06E         	goto	u2950
  7365  00DDD0                     u2951:
  7366  00DDD0  EFFF  F06E         	goto	l3021
  7367  00DDD4                     u2950:
  7368  00DDD4  2818               	incf	___fldiv@bexp^0,w,c
  7369  00DDD6  A4D8               	btfss	status,2,c
  7370  00DDD8  EFF0  F06E         	goto	u2961
  7371  00DDDC  EFF2  F06E         	goto	u2960
  7372  00DDE0                     u2961:
  7373  00DDE0  EFFA  F06E         	goto	l3017
  7374  00DDE4                     u2960:
  7375  00DDE4  0E00               	movlw	0
  7376  00DDE6  6E01               	movwf	___fldiv@b^0,c
  7377  00DDE8  0E00               	movlw	0
  7378  00DDEA  6E02               	movwf	(___fldiv@b+1)^0,c
  7379  00DDEC  0E00               	movlw	0
  7380  00DDEE  6E03               	movwf	(___fldiv@b+2)^0,c
  7381  00DDF0  0E00               	movlw	0
  7382  00DDF2  6E04               	movwf	(___fldiv@b+3)^0,c
  7383  00DDF4                     l3017:
  7384  00DDF4  8E03               	bsf	(___fldiv@b+2)^0,7,c
  7385  00DDF6  0E00               	movlw	0
  7386  00DDF8  6E04               	movwf	(___fldiv@b+3)^0,c
  7387  00DDFA  EF07  F06F         	goto	l3023
  7388  00DDFE                     l3021:
  7389  00DDFE  0E00               	movlw	0
  7390  00DE00  6E01               	movwf	___fldiv@b^0,c
  7391  00DE02  0E00               	movlw	0
  7392  00DE04  6E02               	movwf	(___fldiv@b+1)^0,c
  7393  00DE06  0E00               	movlw	0
  7394  00DE08  6E03               	movwf	(___fldiv@b+2)^0,c
  7395  00DE0A  0E00               	movlw	0
  7396  00DE0C  6E04               	movwf	(___fldiv@b+3)^0,c
  7397  00DE0E                     l3023:
  7398  00DE0E  5008               	movf	(___fldiv@a+3)^0,w,c
  7399  00DE10  0B80               	andlw	128
  7400  00DE12  1A11               	xorwf	___fldiv@sign^0,f,c
  7401  00DE14  5008               	movf	(___fldiv@a+3)^0,w,c
  7402  00DE16  2408               	addwf	(___fldiv@a+3)^0,w,c
  7403  00DE18  6E19               	movwf	___fldiv@aexp^0,c
  7404  00DE1A  AE07               	btfss	(___fldiv@a+2)^0,7,c
  7405  00DE1C  EF12  F06F         	goto	u2971
  7406  00DE20  EF14  F06F         	goto	u2970
  7407  00DE24                     u2971:
  7408  00DE24  EF15  F06F         	goto	l3031
  7409  00DE28                     u2970:
  7410  00DE28  8019               	bsf	___fldiv@aexp^0,0,c
  7411  00DE2A                     l3031:
  7412  00DE2A  5019               	movf	___fldiv@aexp^0,w,c
  7413  00DE2C  B4D8               	btfsc	status,2,c
  7414  00DE2E  EF1B  F06F         	goto	u2981
  7415  00DE32  EF1D  F06F         	goto	u2980
  7416  00DE36                     u2981:
  7417  00DE36  EF32  F06F         	goto	l3041
  7418  00DE3A                     u2980:
  7419  00DE3A  2819               	incf	___fldiv@aexp^0,w,c
  7420  00DE3C  A4D8               	btfss	status,2,c
  7421  00DE3E  EF23  F06F         	goto	u2991
  7422  00DE42  EF25  F06F         	goto	u2990
  7423  00DE46                     u2991:
  7424  00DE46  EF2D  F06F         	goto	l3037
  7425  00DE4A                     u2990:
  7426  00DE4A  0E00               	movlw	0
  7427  00DE4C  6E05               	movwf	___fldiv@a^0,c
  7428  00DE4E  0E00               	movlw	0
  7429  00DE50  6E06               	movwf	(___fldiv@a+1)^0,c
  7430  00DE52  0E00               	movlw	0
  7431  00DE54  6E07               	movwf	(___fldiv@a+2)^0,c
  7432  00DE56  0E00               	movlw	0
  7433  00DE58  6E08               	movwf	(___fldiv@a+3)^0,c
  7434  00DE5A                     l3037:
  7435  00DE5A  8E07               	bsf	(___fldiv@a+2)^0,7,c
  7436  00DE5C  0E00               	movlw	0
  7437  00DE5E  6E08               	movwf	(___fldiv@a+3)^0,c
  7438  00DE60  EF3A  F06F         	goto	l3043
  7439  00DE64                     l3041:
  7440  00DE64  0E00               	movlw	0
  7441  00DE66  6E05               	movwf	___fldiv@a^0,c
  7442  00DE68  0E00               	movlw	0
  7443  00DE6A  6E06               	movwf	(___fldiv@a+1)^0,c
  7444  00DE6C  0E00               	movlw	0
  7445  00DE6E  6E07               	movwf	(___fldiv@a+2)^0,c
  7446  00DE70  0E00               	movlw	0
  7447  00DE72  6E08               	movwf	(___fldiv@a+3)^0,c
  7448  00DE74                     l3043:
  7449  00DE74  5005               	movf	___fldiv@a^0,w,c
  7450  00DE76  1006               	iorwf	(___fldiv@a+1)^0,w,c
  7451  00DE78  1007               	iorwf	(___fldiv@a+2)^0,w,c
  7452  00DE7A  1008               	iorwf	(___fldiv@a+3)^0,w,c
  7453  00DE7C  A4D8               	btfss	status,2,c
  7454  00DE7E  EF43  F06F         	goto	u3001
  7455  00DE82  EF45  F06F         	goto	u3000
  7456  00DE86                     u3001:
  7457  00DE86  EF5D  F06F         	goto	l3055
  7458  00DE8A                     u3000:
  7459  00DE8A  0E00               	movlw	0
  7460  00DE8C  6E01               	movwf	___fldiv@b^0,c
  7461  00DE8E  0E00               	movlw	0
  7462  00DE90  6E02               	movwf	(___fldiv@b+1)^0,c
  7463  00DE92  0E00               	movlw	0
  7464  00DE94  6E03               	movwf	(___fldiv@b+2)^0,c
  7465  00DE96  0E00               	movlw	0
  7466  00DE98  6E04               	movwf	(___fldiv@b+3)^0,c
  7467  00DE9A  0E80               	movlw	128
  7468  00DE9C  1203               	iorwf	(___fldiv@b+2)^0,f,c
  7469  00DE9E  0E7F               	movlw	127
  7470  00DEA0  1204               	iorwf	(___fldiv@b+3)^0,f,c
  7471  00DEA2                     l3049:
  7472  00DEA2  5011               	movf	___fldiv@sign^0,w,c
  7473  00DEA4  1204               	iorwf	(___fldiv@b+3)^0,f,c
  7474  00DEA6  C001  F001         	movff	___fldiv@b,?___fldiv
  7475  00DEAA  C002  F002         	movff	___fldiv@b+1,?___fldiv+1
  7476  00DEAE  C003  F003         	movff	___fldiv@b+2,?___fldiv+2
  7477  00DEB2  C004  F004         	movff	___fldiv@b+3,?___fldiv+3
  7478  00DEB6  EFA0  F070         	goto	l842
  7479  00DEBA                     l3055:
  7480  00DEBA  5018               	movf	___fldiv@bexp^0,w,c
  7481  00DEBC  A4D8               	btfss	status,2,c
  7482  00DEBE  EF63  F06F         	goto	u3011
  7483  00DEC2  EF65  F06F         	goto	u3010
  7484  00DEC6                     u3011:
  7485  00DEC6  EF6F  F06F         	goto	l3063
  7486  00DECA                     u3010:
  7487  00DECA  0E00               	movlw	0
  7488  00DECC  6E01               	movwf	?___fldiv^0,c
  7489  00DECE  0E00               	movlw	0
  7490  00DED0  6E02               	movwf	(?___fldiv+1)^0,c
  7491  00DED2  0E00               	movlw	0
  7492  00DED4  6E03               	movwf	(?___fldiv+2)^0,c
  7493  00DED6  0E00               	movlw	0
  7494  00DED8  6E04               	movwf	(?___fldiv+3)^0,c
  7495  00DEDA  EFA0  F070         	goto	l842
  7496  00DEDE                     l3063:
  7497  00DEDE  5019               	movf	___fldiv@aexp^0,w,c
  7498  00DEE0  C018  F009         	movff	___fldiv@bexp,??___fldiv
  7499  00DEE4  6A0A               	clrf	(??___fldiv+1)^0,c
  7500  00DEE6  5E09               	subwf	??___fldiv^0,f,c
  7501  00DEE8  0E00               	movlw	0
  7502  00DEEA  5A0A               	subwfb	(??___fldiv+1)^0,f,c
  7503  00DEEC  0E7F               	movlw	127
  7504  00DEEE  2409               	addwf	??___fldiv^0,w,c
  7505  00DEF0  6E12               	movwf	___fldiv@new_exp^0,c
  7506  00DEF2  0E00               	movlw	0
  7507  00DEF4  200A               	addwfc	(??___fldiv+1)^0,w,c
  7508  00DEF6  6E13               	movwf	(___fldiv@new_exp+1)^0,c
  7509  00DEF8  C001  F00D         	movff	___fldiv@b,___fldiv@rem
  7510  00DEFC  C002  F00E         	movff	___fldiv@b+1,___fldiv@rem+1
  7511  00DF00  C003  F00F         	movff	___fldiv@b+2,___fldiv@rem+2
  7512  00DF04  C004  F010         	movff	___fldiv@b+3,___fldiv@rem+3
  7513  00DF08  0E00               	movlw	0
  7514  00DF0A  6E01               	movwf	___fldiv@b^0,c
  7515  00DF0C  0E00               	movlw	0
  7516  00DF0E  6E02               	movwf	(___fldiv@b+1)^0,c
  7517  00DF10  0E00               	movlw	0
  7518  00DF12  6E03               	movwf	(___fldiv@b+2)^0,c
  7519  00DF14  0E00               	movlw	0
  7520  00DF16  6E04               	movwf	(___fldiv@b+3)^0,c
  7521  00DF18  0E00               	movlw	0
  7522  00DF1A  6E14               	movwf	___fldiv@grs^0,c
  7523  00DF1C  0E00               	movlw	0
  7524  00DF1E  6E15               	movwf	(___fldiv@grs+1)^0,c
  7525  00DF20  0E00               	movlw	0
  7526  00DF22  6E16               	movwf	(___fldiv@grs+2)^0,c
  7527  00DF24  0E00               	movlw	0
  7528  00DF26  6E17               	movwf	(___fldiv@grs+3)^0,c
  7529  00DF28  0E00               	movlw	0
  7530  00DF2A  6E19               	movwf	___fldiv@aexp^0,c
  7531  00DF2C  EFD0  F06F         	goto	l844
  7532  00DF30                     l3073:
  7533  00DF30  5019               	movf	___fldiv@aexp^0,w,c
  7534  00DF32  B4D8               	btfsc	status,2,c
  7535  00DF34  EF9E  F06F         	goto	u3021
  7536  00DF38  EFA0  F06F         	goto	u3020
  7537  00DF3C                     u3021:
  7538  00DF3C  EFB7  F06F         	goto	l3081
  7539  00DF40                     u3020:
  7540  00DF40  90D8               	bcf	status,0,c
  7541  00DF42  360D               	rlcf	___fldiv@rem^0,f,c
  7542  00DF44  360E               	rlcf	(___fldiv@rem+1)^0,f,c
  7543  00DF46  360F               	rlcf	(___fldiv@rem+2)^0,f,c
  7544  00DF48  3610               	rlcf	(___fldiv@rem+3)^0,f,c
  7545  00DF4A  90D8               	bcf	status,0,c
  7546  00DF4C  3601               	rlcf	___fldiv@b^0,f,c
  7547  00DF4E  3602               	rlcf	(___fldiv@b+1)^0,f,c
  7548  00DF50  3603               	rlcf	(___fldiv@b+2)^0,f,c
  7549  00DF52  3604               	rlcf	(___fldiv@b+3)^0,f,c
  7550  00DF54  AE17               	btfss	(___fldiv@grs+3)^0,7,c
  7551  00DF56  EFAF  F06F         	goto	u3031
  7552  00DF5A  EFB1  F06F         	goto	u3030
  7553  00DF5E                     u3031:
  7554  00DF5E  EFB2  F06F         	goto	l847
  7555  00DF62                     u3030:
  7556  00DF62  8001               	bsf	___fldiv@b^0,0,c
  7557  00DF64                     l847:
  7558  00DF64  90D8               	bcf	status,0,c
  7559  00DF66  3614               	rlcf	___fldiv@grs^0,f,c
  7560  00DF68  3615               	rlcf	(___fldiv@grs+1)^0,f,c
  7561  00DF6A  3616               	rlcf	(___fldiv@grs+2)^0,f,c
  7562  00DF6C  3617               	rlcf	(___fldiv@grs+3)^0,f,c
  7563  00DF6E                     l3081:
  7564  00DF6E  5005               	movf	___fldiv@a^0,w,c
  7565  00DF70  5C0D               	subwf	___fldiv@rem^0,w,c
  7566  00DF72  5006               	movf	(___fldiv@a+1)^0,w,c
  7567  00DF74  580E               	subwfb	(___fldiv@rem+1)^0,w,c
  7568  00DF76  5007               	movf	(___fldiv@a+2)^0,w,c
  7569  00DF78  580F               	subwfb	(___fldiv@rem+2)^0,w,c
  7570  00DF7A  5008               	movf	(___fldiv@a+3)^0,w,c
  7571  00DF7C  5810               	subwfb	(___fldiv@rem+3)^0,w,c
  7572  00DF7E  A0D8               	btfss	status,0,c
  7573  00DF80  EFC4  F06F         	goto	u3041
  7574  00DF84  EFC6  F06F         	goto	u3040
  7575  00DF88                     u3041:
  7576  00DF88  EFCF  F06F         	goto	l3087
  7577  00DF8C                     u3040:
  7578  00DF8C  8C17               	bsf	(___fldiv@grs+3)^0,6,c
  7579  00DF8E  5005               	movf	___fldiv@a^0,w,c
  7580  00DF90  5E0D               	subwf	___fldiv@rem^0,f,c
  7581  00DF92  5006               	movf	(___fldiv@a+1)^0,w,c
  7582  00DF94  5A0E               	subwfb	(___fldiv@rem+1)^0,f,c
  7583  00DF96  5007               	movf	(___fldiv@a+2)^0,w,c
  7584  00DF98  5A0F               	subwfb	(___fldiv@rem+2)^0,f,c
  7585  00DF9A  5008               	movf	(___fldiv@a+3)^0,w,c
  7586  00DF9C  5A10               	subwfb	(___fldiv@rem+3)^0,f,c
  7587  00DF9E                     l3087:
  7588  00DF9E  2A19               	incf	___fldiv@aexp^0,f,c
  7589  00DFA0                     l844:
  7590  00DFA0  0E19               	movlw	25
  7591  00DFA2  6419               	cpfsgt	___fldiv@aexp^0,c
  7592  00DFA4  EFD6  F06F         	goto	u3051
  7593  00DFA8  EFD8  F06F         	goto	u3050
  7594  00DFAC                     u3051:
  7595  00DFAC  EF98  F06F         	goto	l3073
  7596  00DFB0                     u3050:
  7597  00DFB0  500D               	movf	___fldiv@rem^0,w,c
  7598  00DFB2  100E               	iorwf	(___fldiv@rem+1)^0,w,c
  7599  00DFB4  100F               	iorwf	(___fldiv@rem+2)^0,w,c
  7600  00DFB6  1010               	iorwf	(___fldiv@rem+3)^0,w,c
  7601  00DFB8  B4D8               	btfsc	status,2,c
  7602  00DFBA  EFE1  F06F         	goto	u3061
  7603  00DFBE  EFE3  F06F         	goto	u3060
  7604  00DFC2                     u3061:
  7605  00DFC2  EFFB  F06F         	goto	l3099
  7606  00DFC6                     u3060:
  7607  00DFC6  8014               	bsf	___fldiv@grs^0,0,c
  7608  00DFC8  EFFB  F06F         	goto	l3099
  7609  00DFCC                     l3093:
  7610  00DFCC  90D8               	bcf	status,0,c
  7611  00DFCE  3601               	rlcf	___fldiv@b^0,f,c
  7612  00DFD0  3602               	rlcf	(___fldiv@b+1)^0,f,c
  7613  00DFD2  3603               	rlcf	(___fldiv@b+2)^0,f,c
  7614  00DFD4  3604               	rlcf	(___fldiv@b+3)^0,f,c
  7615  00DFD6  AE17               	btfss	(___fldiv@grs+3)^0,7,c
  7616  00DFD8  EFF0  F06F         	goto	u3071
  7617  00DFDC  EFF2  F06F         	goto	u3070
  7618  00DFE0                     u3071:
  7619  00DFE0  EFF3  F06F         	goto	l853
  7620  00DFE4                     u3070:
  7621  00DFE4  8001               	bsf	___fldiv@b^0,0,c
  7622  00DFE6                     l853:
  7623  00DFE6  90D8               	bcf	status,0,c
  7624  00DFE8  3614               	rlcf	___fldiv@grs^0,f,c
  7625  00DFEA  3615               	rlcf	(___fldiv@grs+1)^0,f,c
  7626  00DFEC  3616               	rlcf	(___fldiv@grs+2)^0,f,c
  7627  00DFEE  3617               	rlcf	(___fldiv@grs+3)^0,f,c
  7628  00DFF0  0612               	decf	___fldiv@new_exp^0,f,c
  7629  00DFF2  A0D8               	btfss	status,0,c
  7630  00DFF4  0613               	decf	(___fldiv@new_exp+1)^0,f,c
  7631  00DFF6                     l3099:
  7632  00DFF6  AE03               	btfss	(___fldiv@b+2)^0,7,c
  7633  00DFF8  EF00  F070         	goto	u3081
  7634  00DFFC  EF02  F070         	goto	u3080
  7635  00E000                     u3081:
  7636  00E000  EFE6  F06F         	goto	l3093
  7637  00E004                     u3080:
  7638  00E004  0E00               	movlw	0
  7639  00E006  6E19               	movwf	___fldiv@aexp^0,c
  7640  00E008  AE17               	btfss	(___fldiv@grs+3)^0,7,c
  7641  00E00A  EF09  F070         	goto	u3091
  7642  00E00E  EF0B  F070         	goto	u3090
  7643  00E012                     u3091:
  7644  00E012  EF2F  F070         	goto	l855
  7645  00E016                     u3090:
  7646  00E016  0EFF               	movlw	255
  7647  00E018  1414               	andwf	___fldiv@grs^0,w,c
  7648  00E01A  6E09               	movwf	??___fldiv^0,c
  7649  00E01C  0EFF               	movlw	255
  7650  00E01E  1415               	andwf	(___fldiv@grs+1)^0,w,c
  7651  00E020  6E0A               	movwf	(??___fldiv+1)^0,c
  7652  00E022  0EFF               	movlw	255
  7653  00E024  1416               	andwf	(___fldiv@grs+2)^0,w,c
  7654  00E026  6E0B               	movwf	(??___fldiv+2)^0,c
  7655  00E028  0E7F               	movlw	127
  7656  00E02A  1417               	andwf	(___fldiv@grs+3)^0,w,c
  7657  00E02C  6E0C               	movwf	(??___fldiv+3)^0,c
  7658  00E02E  5009               	movf	??___fldiv^0,w,c
  7659  00E030  100A               	iorwf	(??___fldiv+1)^0,w,c
  7660  00E032  100B               	iorwf	(??___fldiv+2)^0,w,c
  7661  00E034  100C               	iorwf	(??___fldiv+3)^0,w,c
  7662  00E036  B4D8               	btfsc	status,2,c
  7663  00E038  EF20  F070         	goto	u3101
  7664  00E03C  EF22  F070         	goto	u3100
  7665  00E040                     u3101:
  7666  00E040  EF26  F070         	goto	l856
  7667  00E044                     u3100:
  7668  00E044                     l3107:
  7669  00E044  0E01               	movlw	1
  7670  00E046  6E19               	movwf	___fldiv@aexp^0,c
  7671  00E048  EF2F  F070         	goto	l855
  7672  00E04C                     l856:
  7673  00E04C  A001               	btfss	___fldiv@b^0,0,c
  7674  00E04E  EF2B  F070         	goto	u3111
  7675  00E052  EF2D  F070         	goto	u3110
  7676  00E056                     u3111:
  7677  00E056  EF2F  F070         	goto	l855
  7678  00E05A                     u3110:
  7679  00E05A  EF22  F070         	goto	l3107
  7680  00E05E                     l855:
  7681  00E05E  5019               	movf	___fldiv@aexp^0,w,c
  7682  00E060  B4D8               	btfsc	status,2,c
  7683  00E062  EF35  F070         	goto	u3121
  7684  00E066  EF37  F070         	goto	u3120
  7685  00E06A                     u3121:
  7686  00E06A  EF5B  F070         	goto	l3119
  7687  00E06E                     u3120:
  7688  00E06E  0E01               	movlw	1
  7689  00E070  2601               	addwf	___fldiv@b^0,f,c
  7690  00E072  0E00               	movlw	0
  7691  00E074  2202               	addwfc	(___fldiv@b+1)^0,f,c
  7692  00E076  2203               	addwfc	(___fldiv@b+2)^0,f,c
  7693  00E078  2204               	addwfc	(___fldiv@b+3)^0,f,c
  7694  00E07A  A004               	btfss	(___fldiv@b+3)^0,0,c
  7695  00E07C  EF42  F070         	goto	u3131
  7696  00E080  EF44  F070         	goto	u3130
  7697  00E084                     u3131:
  7698  00E084  EF5B  F070         	goto	l3119
  7699  00E088                     u3130:
  7700  00E088  C001  F009         	movff	___fldiv@b,??___fldiv
  7701  00E08C  C002  F00A         	movff	___fldiv@b+1,??___fldiv+1
  7702  00E090  C003  F00B         	movff	___fldiv@b+2,??___fldiv+2
  7703  00E094  C004  F00C         	movff	___fldiv@b+3,??___fldiv+3
  7704  00E098  340C               	rlcf	(??___fldiv+3)^0,w,c
  7705  00E09A  320C               	rrcf	(??___fldiv+3)^0,f,c
  7706  00E09C  320B               	rrcf	(??___fldiv+2)^0,f,c
  7707  00E09E  320A               	rrcf	(??___fldiv+1)^0,f,c
  7708  00E0A0  3209               	rrcf	??___fldiv^0,f,c
  7709  00E0A2  C009  F001         	movff	??___fldiv,___fldiv@b
  7710  00E0A6  C00A  F002         	movff	??___fldiv+1,___fldiv@b+1
  7711  00E0AA  C00B  F003         	movff	??___fldiv+2,___fldiv@b+2
  7712  00E0AE  C00C  F004         	movff	??___fldiv+3,___fldiv@b+3
  7713  00E0B2  4A12               	infsnz	___fldiv@new_exp^0,f,c
  7714  00E0B4  2A13               	incf	(___fldiv@new_exp+1)^0,f,c
  7715  00E0B6                     l3119:
  7716  00E0B6  BE13               	btfsc	(___fldiv@new_exp+1)^0,7,c
  7717  00E0B8  EF66  F070         	goto	u3141
  7718  00E0BC  5013               	movf	(___fldiv@new_exp+1)^0,w,c
  7719  00E0BE  E108               	bnz	u3140
  7720  00E0C0  2812               	incf	___fldiv@new_exp^0,w,c
  7721  00E0C2  A0D8               	btfss	status,0,c
  7722  00E0C4  EF66  F070         	goto	u3141
  7723  00E0C8  EF68  F070         	goto	u3140
  7724  00E0CC                     u3141:
  7725  00E0CC  EF73  F070         	goto	l3123
  7726  00E0D0                     u3140:
  7727  00E0D0  0E00               	movlw	0
  7728  00E0D2  6E13               	movwf	(___fldiv@new_exp+1)^0,c
  7729  00E0D4  6812               	setf	___fldiv@new_exp^0,c
  7730  00E0D6  0E00               	movlw	0
  7731  00E0D8  6E01               	movwf	___fldiv@b^0,c
  7732  00E0DA  0E00               	movlw	0
  7733  00E0DC  6E02               	movwf	(___fldiv@b+1)^0,c
  7734  00E0DE  0E00               	movlw	0
  7735  00E0E0  6E03               	movwf	(___fldiv@b+2)^0,c
  7736  00E0E2  0E00               	movlw	0
  7737  00E0E4  6E04               	movwf	(___fldiv@b+3)^0,c
  7738  00E0E6                     l3123:
  7739  00E0E6  BE13               	btfsc	(___fldiv@new_exp+1)^0,7,c
  7740  00E0E8  EF80  F070         	goto	u3150
  7741  00E0EC  5013               	movf	(___fldiv@new_exp+1)^0,w,c
  7742  00E0EE  E106               	bnz	u3151
  7743  00E0F0  0412               	decf	___fldiv@new_exp^0,w,c
  7744  00E0F2  B0D8               	btfsc	status,0,c
  7745  00E0F4  EF7E  F070         	goto	u3151
  7746  00E0F8  EF80  F070         	goto	u3150
  7747  00E0FC                     u3151:
  7748  00E0FC  EF8E  F070         	goto	l3127
  7749  00E100                     u3150:
  7750  00E100  0E00               	movlw	0
  7751  00E102  6E13               	movwf	(___fldiv@new_exp+1)^0,c
  7752  00E104  0E00               	movlw	0
  7753  00E106  6E12               	movwf	___fldiv@new_exp^0,c
  7754  00E108  0E00               	movlw	0
  7755  00E10A  6E01               	movwf	___fldiv@b^0,c
  7756  00E10C  0E00               	movlw	0
  7757  00E10E  6E02               	movwf	(___fldiv@b+1)^0,c
  7758  00E110  0E00               	movlw	0
  7759  00E112  6E03               	movwf	(___fldiv@b+2)^0,c
  7760  00E114  0E00               	movlw	0
  7761  00E116  6E04               	movwf	(___fldiv@b+3)^0,c
  7762  00E118  0E00               	movlw	0
  7763  00E11A  6E11               	movwf	___fldiv@sign^0,c
  7764  00E11C                     l3127:
  7765  00E11C  C012  F018         	movff	___fldiv@new_exp,___fldiv@bexp
  7766  00E120  A018               	btfss	___fldiv@bexp^0,0,c
  7767  00E122  EF95  F070         	goto	u3161
  7768  00E126  EF97  F070         	goto	u3160
  7769  00E12A                     u3161:
  7770  00E12A  EF9A  F070         	goto	l3133
  7771  00E12E                     u3160:
  7772  00E12E  8E03               	bsf	(___fldiv@b+2)^0,7,c
  7773  00E130  EF9B  F070         	goto	l3135
  7774  00E134                     l3133:
  7775  00E134  9E03               	bcf	(___fldiv@b+2)^0,7,c
  7776  00E136                     l3135:
  7777  00E136  90D8               	bcf	status,0,c
  7778  00E138  3018               	rrcf	___fldiv@bexp^0,w,c
  7779  00E13A  6E04               	movwf	(___fldiv@b+3)^0,c
  7780  00E13C  EF51  F06F         	goto	l3049
  7781  00E140                     l842:
  7782  00E140  0012               	return		;funcret
  7783  00E142                     __end_of___fldiv:
  7784                           	callstack 0
  7785                           
  7786 ;; *************** function ___awmod *****************
  7787 ;; Defined at:
  7788 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\awmod.c"
  7789 ;; Parameters:    Size  Location     Type
  7790 ;;  dividend        2    0[COMRAM] int 
  7791 ;;  divisor         2    2[COMRAM] int 
  7792 ;; Auto vars:     Size  Location     Type
  7793 ;;  sign            1    5[COMRAM] unsigned char 
  7794 ;;  counter         1    4[COMRAM] unsigned char 
  7795 ;; Return value:  Size  Location     Type
  7796 ;;                  2    0[COMRAM] int 
  7797 ;; Registers used:
  7798 ;;		wreg, status,2, status,0
  7799 ;; Tracked objects:
  7800 ;;		On entry : 0/0
  7801 ;;		On exit  : 0/0
  7802 ;;		Unchanged: 0/0
  7803 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7804 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7805 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7806 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7807 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7808 ;;Total ram usage:        6 bytes
  7809 ;; Hardware stack levels used:    1
  7810 ;; This function calls:
  7811 ;;		Nothing
  7812 ;; This function is called by:
  7813 ;;		_efgtoa
  7814 ;; This function uses a non-reentrant model
  7815 ;;
  7816                           
  7817                           	psect	text25
  7818  00D236                     __ptext25:
  7819                           	callstack 0
  7820  00D236                     ___awmod:
  7821                           	callstack 26
  7822  00D236  0E00               	movlw	0
  7823  00D238  6E06               	movwf	___awmod@sign^0,c
  7824  00D23A  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
  7825  00D23C  EF24  F069         	goto	u3420
  7826  00D240  EF22  F069         	goto	u3421
  7827  00D244                     u3421:
  7828  00D244  EF2A  F069         	goto	l3331
  7829  00D248                     u3420:
  7830  00D248  6C01               	negf	___awmod@dividend^0,c
  7831  00D24A  1E02               	comf	(___awmod@dividend+1)^0,f,c
  7832  00D24C  B0D8               	btfsc	status,0,c
  7833  00D24E  2A02               	incf	(___awmod@dividend+1)^0,f,c
  7834  00D250  0E01               	movlw	1
  7835  00D252  6E06               	movwf	___awmod@sign^0,c
  7836  00D254                     l3331:
  7837  00D254  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
  7838  00D256  EF31  F069         	goto	u3430
  7839  00D25A  EF2F  F069         	goto	u3431
  7840  00D25E                     u3431:
  7841  00D25E  EF35  F069         	goto	l3335
  7842  00D262                     u3430:
  7843  00D262  6C03               	negf	___awmod@divisor^0,c
  7844  00D264  1E04               	comf	(___awmod@divisor+1)^0,f,c
  7845  00D266  B0D8               	btfsc	status,0,c
  7846  00D268  2A04               	incf	(___awmod@divisor+1)^0,f,c
  7847  00D26A                     l3335:
  7848  00D26A  5003               	movf	___awmod@divisor^0,w,c
  7849  00D26C  1004               	iorwf	(___awmod@divisor+1)^0,w,c
  7850  00D26E  B4D8               	btfsc	status,2,c
  7851  00D270  EF3C  F069         	goto	u3441
  7852  00D274  EF3E  F069         	goto	u3440
  7853  00D278                     u3441:
  7854  00D278  EF62  F069         	goto	l3351
  7855  00D27C                     u3440:
  7856  00D27C  0E01               	movlw	1
  7857  00D27E  6E05               	movwf	___awmod@counter^0,c
  7858  00D280  EF46  F069         	goto	l3341
  7859  00D284                     l3339:
  7860  00D284  90D8               	bcf	status,0,c
  7861  00D286  3603               	rlcf	___awmod@divisor^0,f,c
  7862  00D288  3604               	rlcf	(___awmod@divisor+1)^0,f,c
  7863  00D28A  2A05               	incf	___awmod@counter^0,f,c
  7864  00D28C                     l3341:
  7865  00D28C  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  7866  00D28E  EF4B  F069         	goto	u3451
  7867  00D292  EF4D  F069         	goto	u3450
  7868  00D296                     u3451:
  7869  00D296  EF42  F069         	goto	l3339
  7870  00D29A                     u3450:
  7871  00D29A                     l3343:
  7872  00D29A  5003               	movf	___awmod@divisor^0,w,c
  7873  00D29C  5C01               	subwf	___awmod@dividend^0,w,c
  7874  00D29E  5004               	movf	(___awmod@divisor+1)^0,w,c
  7875  00D2A0  5802               	subwfb	(___awmod@dividend+1)^0,w,c
  7876  00D2A2  A0D8               	btfss	status,0,c
  7877  00D2A4  EF56  F069         	goto	u3461
  7878  00D2A8  EF58  F069         	goto	u3460
  7879  00D2AC                     u3461:
  7880  00D2AC  EF5C  F069         	goto	l3347
  7881  00D2B0                     u3460:
  7882  00D2B0  5003               	movf	___awmod@divisor^0,w,c
  7883  00D2B2  5E01               	subwf	___awmod@dividend^0,f,c
  7884  00D2B4  5004               	movf	(___awmod@divisor+1)^0,w,c
  7885  00D2B6  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
  7886  00D2B8                     l3347:
  7887  00D2B8  90D8               	bcf	status,0,c
  7888  00D2BA  3204               	rrcf	(___awmod@divisor+1)^0,f,c
  7889  00D2BC  3203               	rrcf	___awmod@divisor^0,f,c
  7890  00D2BE  2E05               	decfsz	___awmod@counter^0,f,c
  7891  00D2C0  EF4D  F069         	goto	l3343
  7892  00D2C4                     l3351:
  7893  00D2C4  5006               	movf	___awmod@sign^0,w,c
  7894  00D2C6  B4D8               	btfsc	status,2,c
  7895  00D2C8  EF68  F069         	goto	u3471
  7896  00D2CC  EF6A  F069         	goto	u3470
  7897  00D2D0                     u3471:
  7898  00D2D0  EF6E  F069         	goto	l3355
  7899  00D2D4                     u3470:
  7900  00D2D4  6C01               	negf	___awmod@dividend^0,c
  7901  00D2D6  1E02               	comf	(___awmod@dividend+1)^0,f,c
  7902  00D2D8  B0D8               	btfsc	status,0,c
  7903  00D2DA  2A02               	incf	(___awmod@dividend+1)^0,f,c
  7904  00D2DC                     l3355:
  7905  00D2DC  C001  F001         	movff	___awmod@dividend,?___awmod
  7906  00D2E0  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  7907  00D2E4  0012               	return		;funcret
  7908  00D2E6                     __end_of___awmod:
  7909                           	callstack 0
  7910                           
  7911 ;; *************** function ___awdiv *****************
  7912 ;; Defined at:
  7913 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\awdiv.c"
  7914 ;; Parameters:    Size  Location     Type
  7915 ;;  dividend        2    0[COMRAM] int 
  7916 ;;  divisor         2    2[COMRAM] int 
  7917 ;; Auto vars:     Size  Location     Type
  7918 ;;  quotient        2    6[COMRAM] int 
  7919 ;;  sign            1    5[COMRAM] unsigned char 
  7920 ;;  counter         1    4[COMRAM] unsigned char 
  7921 ;; Return value:  Size  Location     Type
  7922 ;;                  2    0[COMRAM] int 
  7923 ;; Registers used:
  7924 ;;		wreg, status,2, status,0
  7925 ;; Tracked objects:
  7926 ;;		On entry : 0/0
  7927 ;;		On exit  : 0/0
  7928 ;;		Unchanged: 0/0
  7929 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7930 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7931 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7932 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7933 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7934 ;;Total ram usage:        8 bytes
  7935 ;; Hardware stack levels used:    1
  7936 ;; This function calls:
  7937 ;;		Nothing
  7938 ;; This function is called by:
  7939 ;;		_efgtoa
  7940 ;; This function uses a non-reentrant model
  7941 ;;
  7942                           
  7943                           	psect	text26
  7944  00D2E6                     __ptext26:
  7945                           	callstack 0
  7946  00D2E6                     ___awdiv:
  7947                           	callstack 26
  7948  00D2E6  0E00               	movlw	0
  7949  00D2E8  6E06               	movwf	___awdiv@sign^0,c
  7950  00D2EA  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
  7951  00D2EC  EF7C  F069         	goto	u3360
  7952  00D2F0  EF7A  F069         	goto	u3361
  7953  00D2F4                     u3361:
  7954  00D2F4  EF82  F069         	goto	l3287
  7955  00D2F8                     u3360:
  7956  00D2F8  6C03               	negf	___awdiv@divisor^0,c
  7957  00D2FA  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  7958  00D2FC  B0D8               	btfsc	status,0,c
  7959  00D2FE  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  7960  00D300  0E01               	movlw	1
  7961  00D302  6E06               	movwf	___awdiv@sign^0,c
  7962  00D304                     l3287:
  7963  00D304  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
  7964  00D306  EF89  F069         	goto	u3370
  7965  00D30A  EF87  F069         	goto	u3371
  7966  00D30E                     u3371:
  7967  00D30E  EF8F  F069         	goto	l3293
  7968  00D312                     u3370:
  7969  00D312  6C01               	negf	___awdiv@dividend^0,c
  7970  00D314  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  7971  00D316  B0D8               	btfsc	status,0,c
  7972  00D318  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  7973  00D31A  0E01               	movlw	1
  7974  00D31C  1A06               	xorwf	___awdiv@sign^0,f,c
  7975  00D31E                     l3293:
  7976  00D31E  0E00               	movlw	0
  7977  00D320  6E08               	movwf	(___awdiv@quotient+1)^0,c
  7978  00D322  0E00               	movlw	0
  7979  00D324  6E07               	movwf	___awdiv@quotient^0,c
  7980  00D326  5003               	movf	___awdiv@divisor^0,w,c
  7981  00D328  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  7982  00D32A  B4D8               	btfsc	status,2,c
  7983  00D32C  EF9A  F069         	goto	u3381
  7984  00D330  EF9C  F069         	goto	u3380
  7985  00D334                     u3381:
  7986  00D334  EFC4  F069         	goto	l3315
  7987  00D338                     u3380:
  7988  00D338  0E01               	movlw	1
  7989  00D33A  6E05               	movwf	___awdiv@counter^0,c
  7990  00D33C  EFA4  F069         	goto	l3301
  7991  00D340                     l3299:
  7992  00D340  90D8               	bcf	status,0,c
  7993  00D342  3603               	rlcf	___awdiv@divisor^0,f,c
  7994  00D344  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  7995  00D346  2A05               	incf	___awdiv@counter^0,f,c
  7996  00D348                     l3301:
  7997  00D348  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  7998  00D34A  EFA9  F069         	goto	u3391
  7999  00D34E  EFAB  F069         	goto	u3390
  8000  00D352                     u3391:
  8001  00D352  EFA0  F069         	goto	l3299
  8002  00D356                     u3390:
  8003  00D356                     l3303:
  8004  00D356  90D8               	bcf	status,0,c
  8005  00D358  3607               	rlcf	___awdiv@quotient^0,f,c
  8006  00D35A  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  8007  00D35C  5003               	movf	___awdiv@divisor^0,w,c
  8008  00D35E  5C01               	subwf	___awdiv@dividend^0,w,c
  8009  00D360  5004               	movf	(___awdiv@divisor+1)^0,w,c
  8010  00D362  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  8011  00D364  A0D8               	btfss	status,0,c
  8012  00D366  EFB7  F069         	goto	u3401
  8013  00D36A  EFB9  F069         	goto	u3400
  8014  00D36E                     u3401:
  8015  00D36E  EFBE  F069         	goto	l3311
  8016  00D372                     u3400:
  8017  00D372  5003               	movf	___awdiv@divisor^0,w,c
  8018  00D374  5E01               	subwf	___awdiv@dividend^0,f,c
  8019  00D376  5004               	movf	(___awdiv@divisor+1)^0,w,c
  8020  00D378  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  8021  00D37A  8007               	bsf	___awdiv@quotient^0,0,c
  8022  00D37C                     l3311:
  8023  00D37C  90D8               	bcf	status,0,c
  8024  00D37E  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  8025  00D380  3203               	rrcf	___awdiv@divisor^0,f,c
  8026  00D382  2E05               	decfsz	___awdiv@counter^0,f,c
  8027  00D384  EFAB  F069         	goto	l3303
  8028  00D388                     l3315:
  8029  00D388  5006               	movf	___awdiv@sign^0,w,c
  8030  00D38A  B4D8               	btfsc	status,2,c
  8031  00D38C  EFCA  F069         	goto	u3411
  8032  00D390  EFCC  F069         	goto	u3410
  8033  00D394                     u3411:
  8034  00D394  EFD0  F069         	goto	l3319
  8035  00D398                     u3410:
  8036  00D398  6C07               	negf	___awdiv@quotient^0,c
  8037  00D39A  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  8038  00D39C  B0D8               	btfsc	status,0,c
  8039  00D39E  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  8040  00D3A0                     l3319:
  8041  00D3A0  C007  F001         	movff	___awdiv@quotient,?___awdiv
  8042  00D3A4  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  8043  00D3A8  0012               	return		;funcret
  8044  00D3AA                     __end_of___awdiv:
  8045                           	callstack 0
  8046                           
  8047 ;; *************** function _atoi *****************
  8048 ;; Defined at:
  8049 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\atoi.c"
  8050 ;; Parameters:    Size  Location     Type
  8051 ;;  s               2    7[COMRAM] PTR const unsigned char 
  8052 ;;		 -> STR_8(33), STR_7(34), STR_6(30), STR_5(75), 
  8053 ;;		 -> STR_4(67), STR_3(39), STR_2(37), STR_1(35), 
  8054 ;; Auto vars:     Size  Location     Type
  8055 ;;  n               2   20[COMRAM] int 
  8056 ;;  neg             2   13[COMRAM] int 
  8057 ;; Return value:  Size  Location     Type
  8058 ;;                  2    7[COMRAM] int 
  8059 ;; Registers used:
  8060 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8061 ;; Tracked objects:
  8062 ;;		On entry : 0/0
  8063 ;;		On exit  : 0/0
  8064 ;;		Unchanged: 0/0
  8065 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8066 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8067 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8068 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8069 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8070 ;;Total ram usage:       15 bytes
  8071 ;; Hardware stack levels used:    1
  8072 ;; Hardware stack levels required when called:    1
  8073 ;; This function calls:
  8074 ;;		___wmul
  8075 ;;		_isdigit
  8076 ;;		_isspace
  8077 ;; This function is called by:
  8078 ;;		_vfpfcnvrt
  8079 ;; This function uses a non-reentrant model
  8080 ;;
  8081                           
  8082                           	psect	text27
  8083  00D9E8                     __ptext27:
  8084                           	callstack 0
  8085  00D9E8                     _atoi:
  8086                           	callstack 26
  8087  00D9E8  0E00               	movlw	0
  8088  00D9EA  6E16               	movwf	(atoi@n+1)^0,c
  8089  00D9EC  0E00               	movlw	0
  8090  00D9EE  6E15               	movwf	atoi@n^0,c
  8091  00D9F0  0E00               	movlw	0
  8092  00D9F2  6E0F               	movwf	(atoi@neg+1)^0,c
  8093  00D9F4  0E00               	movlw	0
  8094  00D9F6  6E0E               	movwf	atoi@neg^0,c
  8095  00D9F8  EF00  F06D         	goto	l3863
  8096  00D9FC                     l3861:
  8097  00D9FC  4A08               	infsnz	atoi@s^0,f,c
  8098  00D9FE  2A09               	incf	(atoi@s+1)^0,f,c
  8099  00DA00                     l3863:
  8100  00DA00  0E01               	movlw	1
  8101  00DA02  6E14               	movwf	_atoi$976^0,c
  8102  00DA04  0060  F023  FFF6   	movff	atoi@s,tblptrl
  8103  00DA0A  0060  F027  FFF7   	movff	atoi@s+1,tblptrh
  8104  00DA10                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  8105  00DA10  6AF8               	clrf	tblptru,c
  8106  00DA12                     	endif
  8107  00DA12                     	if	0	;tblptru may be non-zero
  8108  00DA12                     	endif
  8109  00DA12  0008               	tblrd		*
  8110  00DA14  50F5               	movf	tablat,w,c
  8111  00DA16  0A20               	xorlw	32
  8112  00DA18  B4D8               	btfsc	status,2,c
  8113  00DA1A  EF11  F06D         	goto	u4481
  8114  00DA1E  EF13  F06D         	goto	u4480
  8115  00DA22                     u4481:
  8116  00DA22  EF33  F06D         	goto	l3871
  8117  00DA26                     u4480:
  8118  00DA26  0EF7               	movlw	247
  8119  00DA28  6E0A               	movwf	??_atoi^0,c
  8120  00DA2A  0EFF               	movlw	255
  8121  00DA2C  6E0B               	movwf	(??_atoi+1)^0,c
  8122  00DA2E  0060  F023  FFF6   	movff	atoi@s,tblptrl
  8123  00DA34  0060  F027  FFF7   	movff	atoi@s+1,tblptrh
  8124  00DA3A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  8125  00DA3A  6AF8               	clrf	tblptru,c
  8126  00DA3C                     	endif
  8127  00DA3C                     	if	0	;tblptru may be non-zero
  8128  00DA3C                     	endif
  8129  00DA3C  0008               	tblrd		*
  8130  00DA3E  50F5               	movf	tablat,w,c
  8131  00DA40  6E0C               	movwf	(??_atoi+2)^0,c
  8132  00DA42  6A0D               	clrf	(??_atoi+3)^0,c
  8133  00DA44  500A               	movf	??_atoi^0,w,c
  8134  00DA46  260C               	addwf	(??_atoi+2)^0,f,c
  8135  00DA48  500B               	movf	(??_atoi+1)^0,w,c
  8136  00DA4A  220D               	addwfc	(??_atoi+3)^0,f,c
  8137  00DA4C  500D               	movf	(??_atoi+3)^0,w,c
  8138  00DA4E  E109               	bnz	u4490
  8139  00DA50  0E05               	movlw	5
  8140  00DA52  5C0C               	subwf	(??_atoi+2)^0,w,c
  8141  00DA54  A0D8               	btfss	status,0,c
  8142  00DA56  EF2F  F06D         	goto	u4491
  8143  00DA5A  EF31  F06D         	goto	u4490
  8144  00DA5E                     u4491:
  8145  00DA5E  EF33  F06D         	goto	l3871
  8146  00DA62                     u4490:
  8147  00DA62  0E00               	movlw	0
  8148  00DA64  6E14               	movwf	_atoi$976^0,c
  8149  00DA66                     l3871:
  8150  00DA66  C014  F010         	movff	_atoi$976,_atoi$975
  8151  00DA6A  6A11               	clrf	(_atoi$975+1)^0,c
  8152  00DA6C  5010               	movf	_atoi$975^0,w,c
  8153  00DA6E  1011               	iorwf	(_atoi$975+1)^0,w,c
  8154  00DA70  A4D8               	btfss	status,2,c
  8155  00DA72  EF3D  F06D         	goto	u4501
  8156  00DA76  EF3F  F06D         	goto	u4500
  8157  00DA7A                     u4501:
  8158  00DA7A  EFFE  F06C         	goto	l3861
  8159  00DA7E                     u4500:
  8160  00DA7E  EF49  F06D         	goto	l3881
  8161  00DA82                     l3877:
  8162  00DA82  0E00               	movlw	0
  8163  00DA84  6E0F               	movwf	(atoi@neg+1)^0,c
  8164  00DA86  0E01               	movlw	1
  8165  00DA88  6E0E               	movwf	atoi@neg^0,c
  8166  00DA8A                     l3879:
  8167  00DA8A  4A08               	infsnz	atoi@s^0,f,c
  8168  00DA8C  2A09               	incf	(atoi@s+1)^0,f,c
  8169  00DA8E  EF84  F06D         	goto	l3887
  8170  00DA92                     l3881:
  8171  00DA92  0060  F023  FFF6   	movff	atoi@s,tblptrl
  8172  00DA98  0060  F027  FFF7   	movff	atoi@s+1,tblptrh
  8173  00DA9E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  8174  00DA9E  6AF8               	clrf	tblptru,c
  8175  00DAA0                     	endif
  8176  00DAA0                     	if	0	;tblptru may be non-zero
  8177  00DAA0                     	endif
  8178  00DAA0  0008               	tblrd		*
  8179  00DAA2  50F5               	movf	tablat,w,c
  8180  00DAA4  6E0A               	movwf	??_atoi^0,c
  8181  00DAA6  6A0B               	clrf	(??_atoi+1)^0,c
  8182                           
  8183                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8184                           ; Switch size 1, requested type "simple"
  8185                           ; Number of cases is 1, Range of values is 0 to 0
  8186                           ; switch strategies available:
  8187                           ; Name         Instructions Cycles
  8188                           ; simple_byte            4     3 (average)
  8189                           ;	Chosen strategy is simple_byte
  8190  00DAA8  500B               	movf	(??_atoi+1)^0,w,c
  8191  00DAAA  0A00               	xorlw	0	; case 0
  8192  00DAAC  B4D8               	btfsc	status,2,c
  8193  00DAAE  EF5B  F06D         	goto	l4247
  8194  00DAB2  EF84  F06D         	goto	l3887
  8195  00DAB6                     l4247:
  8196                           
  8197                           ; Switch size 1, requested type "simple"
  8198                           ; Number of cases is 2, Range of values is 43 to 45
  8199                           ; switch strategies available:
  8200                           ; Name         Instructions Cycles
  8201                           ; simple_byte            7     4 (average)
  8202                           ;	Chosen strategy is simple_byte
  8203  00DAB6  500A               	movf	??_atoi^0,w,c
  8204  00DAB8  0A2B               	xorlw	43	; case 43
  8205  00DABA  B4D8               	btfsc	status,2,c
  8206  00DABC  EF45  F06D         	goto	l3879
  8207  00DAC0  0A06               	xorlw	6	; case 45
  8208  00DAC2  B4D8               	btfsc	status,2,c
  8209  00DAC4  EF41  F06D         	goto	l3877
  8210  00DAC8  EF84  F06D         	goto	l3887
  8211  00DACC                     l3883:
  8212  00DACC  C015  F001         	movff	atoi@n,___wmul@multiplier
  8213  00DAD0  C016  F002         	movff	atoi@n+1,___wmul@multiplier+1
  8214  00DAD4  0E00               	movlw	0
  8215  00DAD6  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  8216  00DAD8  0E0A               	movlw	10
  8217  00DADA  6E03               	movwf	___wmul@multiplicand^0,c
  8218  00DADC  EC75  F066         	call	___wmul	;wreg free
  8219  00DAE0  0060  F023  FFF6   	movff	atoi@s,tblptrl
  8220  00DAE6  0060  F027  FFF7   	movff	atoi@s+1,tblptrh
  8221  00DAEC                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  8222  00DAEC  6AF8               	clrf	tblptru,c
  8223  00DAEE                     	endif
  8224  00DAEE                     	if	0	;tblptru may be non-zero
  8225  00DAEE                     	endif
  8226  00DAEE  0008               	tblrd		*
  8227  00DAF0  50F5               	movf	tablat,w,c
  8228  00DAF2  5E01               	subwf	?___wmul^0,f,c
  8229  00DAF4  0E00               	movlw	0
  8230  00DAF6  5A02               	subwfb	(?___wmul+1)^0,f,c
  8231  00DAF8  0E30               	movlw	48
  8232  00DAFA  2401               	addwf	?___wmul^0,w,c
  8233  00DAFC  6E15               	movwf	atoi@n^0,c
  8234  00DAFE  0E00               	movlw	0
  8235  00DB00  2002               	addwfc	(?___wmul+1)^0,w,c
  8236  00DB02  6E16               	movwf	(atoi@n+1)^0,c
  8237  00DB04  EF45  F06D         	goto	l3879
  8238  00DB08                     l3887:
  8239  00DB08  0ED0               	movlw	208
  8240  00DB0A  6E0A               	movwf	??_atoi^0,c
  8241  00DB0C  0EFF               	movlw	255
  8242  00DB0E  6E0B               	movwf	(??_atoi+1)^0,c
  8243  00DB10  0060  F023  FFF6   	movff	atoi@s,tblptrl
  8244  00DB16  0060  F027  FFF7   	movff	atoi@s+1,tblptrh
  8245  00DB1C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  8246  00DB1C  6AF8               	clrf	tblptru,c
  8247  00DB1E                     	endif
  8248  00DB1E                     	if	0	;tblptru may be non-zero
  8249  00DB1E                     	endif
  8250  00DB1E  0008               	tblrd		*
  8251  00DB20  50F5               	movf	tablat,w,c
  8252  00DB22  6E0C               	movwf	(??_atoi+2)^0,c
  8253  00DB24  6A0D               	clrf	(??_atoi+3)^0,c
  8254  00DB26  500A               	movf	??_atoi^0,w,c
  8255  00DB28  260C               	addwf	(??_atoi+2)^0,f,c
  8256  00DB2A  500B               	movf	(??_atoi+1)^0,w,c
  8257  00DB2C  220D               	addwfc	(??_atoi+3)^0,f,c
  8258  00DB2E  500D               	movf	(??_atoi+3)^0,w,c
  8259  00DB30  E10A               	bnz	u4510
  8260  00DB32  0E0A               	movlw	10
  8261  00DB34  5C0C               	subwf	(??_atoi+2)^0,w,c
  8262  00DB36  A0D8               	btfss	status,0,c
  8263  00DB38  EFA0  F06D         	goto	u4511
  8264  00DB3C  EFA3  F06D         	goto	u4510
  8265  00DB40                     u4511:
  8266  00DB40  0E01               	movlw	1
  8267  00DB42  EFA4  F06D         	goto	u4520
  8268  00DB46                     u4510:
  8269  00DB46  0E00               	movlw	0
  8270  00DB48                     u4520:
  8271  00DB48  6E12               	movwf	_atoi$977^0,c
  8272  00DB4A  6A13               	clrf	(_atoi$977+1)^0,c
  8273  00DB4C  5012               	movf	_atoi$977^0,w,c
  8274  00DB4E  1013               	iorwf	(_atoi$977+1)^0,w,c
  8275  00DB50  A4D8               	btfss	status,2,c
  8276  00DB52  EFAD  F06D         	goto	u4531
  8277  00DB56  EFAF  F06D         	goto	u4530
  8278  00DB5A                     u4531:
  8279  00DB5A  EF66  F06D         	goto	l3883
  8280  00DB5E                     u4530:
  8281  00DB5E  500E               	movf	atoi@neg^0,w,c
  8282  00DB60  100F               	iorwf	(atoi@neg+1)^0,w,c
  8283  00DB62  A4D8               	btfss	status,2,c
  8284  00DB64  EFB6  F06D         	goto	u4541
  8285  00DB68  EFB8  F06D         	goto	u4540
  8286  00DB6C                     u4541:
  8287  00DB6C  EFC6  F06D         	goto	l1169
  8288  00DB70                     u4540:
  8289  00DB70  C015  F00A         	movff	atoi@n,??_atoi
  8290  00DB74  C016  F00B         	movff	atoi@n+1,??_atoi+1
  8291  00DB78  1E0A               	comf	??_atoi^0,f,c
  8292  00DB7A  1E0B               	comf	(??_atoi+1)^0,f,c
  8293  00DB7C  4A0A               	infsnz	??_atoi^0,f,c
  8294  00DB7E  2A0B               	incf	(??_atoi+1)^0,f,c
  8295  00DB80  C00A  F008         	movff	??_atoi,?_atoi
  8296  00DB84  C00B  F009         	movff	??_atoi+1,?_atoi+1
  8297  00DB88  EFCA  F06D         	goto	l1172
  8298  00DB8C                     l1169:
  8299  00DB8C  C015  F008         	movff	atoi@n,?_atoi
  8300  00DB90  C016  F009         	movff	atoi@n+1,?_atoi+1
  8301  00DB94                     l1172:
  8302  00DB94  0012               	return		;funcret
  8303  00DB96                     __end_of_atoi:
  8304                           	callstack 0
  8305                           
  8306 ;; *************** function _isspace *****************
  8307 ;; Defined at:
  8308 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\isspace.c"
  8309 ;; Parameters:    Size  Location     Type
  8310 ;;  c               2    0[COMRAM] int 
  8311 ;; Auto vars:     Size  Location     Type
  8312 ;;		None
  8313 ;; Return value:  Size  Location     Type
  8314 ;;                  2    0[COMRAM] int 
  8315 ;; Registers used:
  8316 ;;		wreg, status,2, status,0
  8317 ;; Tracked objects:
  8318 ;;		On entry : 0/0
  8319 ;;		On exit  : 0/0
  8320 ;;		Unchanged: 0/0
  8321 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8322 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8323 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8324 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8325 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8326 ;;Total ram usage:        7 bytes
  8327 ;; Hardware stack levels used:    1
  8328 ;; This function calls:
  8329 ;;		Nothing
  8330 ;; This function is called by:
  8331 ;;		_atoi
  8332 ;; This function uses a non-reentrant model
  8333 ;;
  8334                           
  8335                           	psect	text28
  8336  00CE80                     __ptext28:
  8337                           	callstack 0
  8338  00CE80                     _isspace:
  8339                           	callstack 26
  8340  00CE80  0E01               	movlw	1
  8341  00CE82  6E07               	movwf	_isspace$1006^0,c
  8342  00CE84  0E20               	movlw	32
  8343  00CE86  1801               	xorwf	isspace@c^0,w,c
  8344  00CE88  1002               	iorwf	(isspace@c+1)^0,w,c
  8345  00CE8A  B4D8               	btfsc	status,2,c
  8346  00CE8C  EF4A  F067         	goto	u3921
  8347  00CE90  EF4C  F067         	goto	u3920
  8348  00CE94                     u3921:
  8349  00CE94  EF65  F067         	goto	l3547
  8350  00CE98                     u3920:
  8351  00CE98  0EF7               	movlw	247
  8352  00CE9A  6E03               	movwf	??_isspace^0,c
  8353  00CE9C  0EFF               	movlw	255
  8354  00CE9E  6E04               	movwf	(??_isspace+1)^0,c
  8355  00CEA0  C001  F005         	movff	isspace@c,??_isspace+2
  8356  00CEA4  C002  F006         	movff	isspace@c+1,??_isspace+3
  8357  00CEA8  5003               	movf	??_isspace^0,w,c
  8358  00CEAA  2605               	addwf	(??_isspace+2)^0,f,c
  8359  00CEAC  5004               	movf	(??_isspace+1)^0,w,c
  8360  00CEAE  2206               	addwfc	(??_isspace+3)^0,f,c
  8361  00CEB0  5006               	movf	(??_isspace+3)^0,w,c
  8362  00CEB2  E109               	bnz	u3930
  8363  00CEB4  0E05               	movlw	5
  8364  00CEB6  5C05               	subwf	(??_isspace+2)^0,w,c
  8365  00CEB8  A0D8               	btfss	status,0,c
  8366  00CEBA  EF61  F067         	goto	u3931
  8367  00CEBE  EF63  F067         	goto	u3930
  8368  00CEC2                     u3931:
  8369  00CEC2  EF65  F067         	goto	l3547
  8370  00CEC6                     u3930:
  8371  00CEC6  0E00               	movlw	0
  8372  00CEC8  6E07               	movwf	_isspace$1006^0,c
  8373  00CECA                     l3547:
  8374  00CECA  C007  F001         	movff	_isspace$1006,?_isspace
  8375  00CECE  6A02               	clrf	(?_isspace+1)^0,c
  8376  00CED0  0012               	return		;funcret
  8377  00CED2                     __end_of_isspace:
  8378                           	callstack 0
  8379                           
  8380 ;; *************** function _isdigit *****************
  8381 ;; Defined at:
  8382 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\isdigit.c"
  8383 ;; Parameters:    Size  Location     Type
  8384 ;;  c               2    0[COMRAM] int 
  8385 ;; Auto vars:     Size  Location     Type
  8386 ;;		None
  8387 ;; Return value:  Size  Location     Type
  8388 ;;                  2    0[COMRAM] int 
  8389 ;; Registers used:
  8390 ;;		wreg, status,2, status,0
  8391 ;; Tracked objects:
  8392 ;;		On entry : 0/0
  8393 ;;		On exit  : 0/0
  8394 ;;		Unchanged: 0/0
  8395 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8396 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8397 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8398 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8399 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8400 ;;Total ram usage:        6 bytes
  8401 ;; Hardware stack levels used:    1
  8402 ;; This function calls:
  8403 ;;		Nothing
  8404 ;; This function is called by:
  8405 ;;		_vfpfcnvrt
  8406 ;;		_atoi
  8407 ;; This function uses a non-reentrant model
  8408 ;;
  8409                           
  8410                           	psect	text29
  8411  00CD14                     __ptext29:
  8412                           	callstack 0
  8413  00CD14                     _isdigit:
  8414                           	callstack 27
  8415  00CD14  0ED0               	movlw	208
  8416  00CD16  6E03               	movwf	??_isdigit^0,c
  8417  00CD18  0EFF               	movlw	255
  8418  00CD1A  6E04               	movwf	(??_isdigit+1)^0,c
  8419  00CD1C  C001  F005         	movff	isdigit@c,??_isdigit+2
  8420  00CD20  C002  F006         	movff	isdigit@c+1,??_isdigit+3
  8421  00CD24  5003               	movf	??_isdigit^0,w,c
  8422  00CD26  2605               	addwf	(??_isdigit+2)^0,f,c
  8423  00CD28  5004               	movf	(??_isdigit+1)^0,w,c
  8424  00CD2A  2206               	addwfc	(??_isdigit+3)^0,f,c
  8425  00CD2C  5006               	movf	(??_isdigit+3)^0,w,c
  8426  00CD2E  E10A               	bnz	u3900
  8427  00CD30  0E0A               	movlw	10
  8428  00CD32  5C05               	subwf	(??_isdigit+2)^0,w,c
  8429  00CD34  A0D8               	btfss	status,0,c
  8430  00CD36  EF9F  F066         	goto	u3901
  8431  00CD3A  EFA2  F066         	goto	u3900
  8432  00CD3E                     u3901:
  8433  00CD3E  0E01               	movlw	1
  8434  00CD40  EFA3  F066         	goto	u3910
  8435  00CD44                     u3900:
  8436  00CD44  0E00               	movlw	0
  8437  00CD46                     u3910:
  8438  00CD46  6E01               	movwf	?_isdigit^0,c
  8439  00CD48  6A02               	clrf	(?_isdigit+1)^0,c
  8440  00CD4A  0012               	return		;funcret
  8441  00CD4C                     __end_of_isdigit:
  8442                           	callstack 0
  8443                           
  8444 ;; *************** function ___wmul *****************
  8445 ;; Defined at:
  8446 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\Umul16.c"
  8447 ;; Parameters:    Size  Location     Type
  8448 ;;  multiplier      2    0[COMRAM] unsigned int 
  8449 ;;  multiplicand    2    2[COMRAM] unsigned int 
  8450 ;; Auto vars:     Size  Location     Type
  8451 ;;  product         2    4[COMRAM] unsigned int 
  8452 ;; Return value:  Size  Location     Type
  8453 ;;                  2    0[COMRAM] unsigned int 
  8454 ;; Registers used:
  8455 ;;		wreg, status,2, status,0, prodl, prodh
  8456 ;; Tracked objects:
  8457 ;;		On entry : 0/0
  8458 ;;		On exit  : 0/0
  8459 ;;		Unchanged: 0/0
  8460 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8461 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8462 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8463 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8464 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8465 ;;Total ram usage:        6 bytes
  8466 ;; Hardware stack levels used:    1
  8467 ;; This function calls:
  8468 ;;		Nothing
  8469 ;; This function is called by:
  8470 ;;		_atoi
  8471 ;; This function uses a non-reentrant model
  8472 ;;
  8473                           
  8474                           	psect	text30
  8475  00CCEA                     __ptext30:
  8476                           	callstack 0
  8477  00CCEA                     ___wmul:
  8478                           	callstack 26
  8479  00CCEA  5001               	movf	___wmul@multiplier^0,w,c
  8480  00CCEC  0203               	mulwf	___wmul@multiplicand^0,c
  8481  00CCEE  006F FFCC  F005    	movff	prodl,___wmul@product
  8482  00CCF4  006F FFD0  F006    	movff	prodh,___wmul@product+1
  8483  00CCFA  5001               	movf	___wmul@multiplier^0,w,c
  8484  00CCFC  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  8485  00CCFE  50F3               	movf	243,w,c
  8486  00CD00  2606               	addwf	(___wmul@product+1)^0,f,c
  8487  00CD02  5002               	movf	(___wmul@multiplier+1)^0,w,c
  8488  00CD04  0203               	mulwf	___wmul@multiplicand^0,c
  8489  00CD06  50F3               	movf	243,w,c
  8490  00CD08  2606               	addwf	(___wmul@product+1)^0,f,c
  8491  00CD0A  C005  F001         	movff	___wmul@product,?___wmul
  8492  00CD0E  C006  F002         	movff	___wmul@product+1,?___wmul+1
  8493  00CD12  0012               	return		;funcret
  8494  00CD14                     __end_of___wmul:
  8495                           	callstack 0
  8496                           
  8497 ;; *************** function _SYSTEM_Initialize *****************
  8498 ;; Defined at:
  8499 ;;		line 50 in file "mcc_generated_files/mcc.c"
  8500 ;; Parameters:    Size  Location     Type
  8501 ;;		None
  8502 ;; Auto vars:     Size  Location     Type
  8503 ;;		None
  8504 ;; Return value:  Size  Location     Type
  8505 ;;                  1    wreg      void 
  8506 ;; Registers used:
  8507 ;;		wreg, status,2, status,0, cstack
  8508 ;; Tracked objects:
  8509 ;;		On entry : 0/0
  8510 ;;		On exit  : 0/0
  8511 ;;		Unchanged: 0/0
  8512 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8513 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8514 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8515 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8516 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8517 ;;Total ram usage:        0 bytes
  8518 ;; Hardware stack levels used:    1
  8519 ;; Hardware stack levels required when called:    2
  8520 ;; This function calls:
  8521 ;;		_OSCILLATOR_Initialize
  8522 ;;		_PIN_MANAGER_Initialize
  8523 ;;		_PMD_Initialize
  8524 ;;		_UART2_Initialize
  8525 ;; This function is called by:
  8526 ;;		_main
  8527 ;; This function uses a non-reentrant model
  8528 ;;
  8529                           
  8530                           	psect	text31
  8531  00CC3E                     __ptext31:
  8532                           	callstack 0
  8533  00CC3E                     _SYSTEM_Initialize:
  8534                           	callstack 28
  8535  00CC3E                     
  8536                           ;mcc_generated_files/mcc.c: 52:     PMD_Initialize();
  8537  00CC3E  EC50  F066         	call	_PMD_Initialize	;wreg free
  8538                           
  8539                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
  8540  00CC42  EC31  F068         	call	_PIN_MANAGER_Initialize	;wreg free
  8541                           
  8542                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
  8543  00CC46  EC28  F066         	call	_OSCILLATOR_Initialize	;wreg free
  8544  00CC4A                     
  8545                           ;mcc_generated_files/mcc.c: 55:     UART2_Initialize();
  8546  00CC4A  EC69  F067         	call	_UART2_Initialize	;wreg free
  8547  00CC4E  0012               	return		;funcret
  8548  00CC50                     __end_of_SYSTEM_Initialize:
  8549                           	callstack 0
  8550                           
  8551 ;; *************** function _UART2_Initialize *****************
  8552 ;; Defined at:
  8553 ;;		line 66 in file "mcc_generated_files/uart2.c"
  8554 ;; Parameters:    Size  Location     Type
  8555 ;;		None
  8556 ;; Auto vars:     Size  Location     Type
  8557 ;;		None
  8558 ;; Return value:  Size  Location     Type
  8559 ;;                  1    wreg      void 
  8560 ;; Registers used:
  8561 ;;		wreg, status,2, status,0, cstack
  8562 ;; Tracked objects:
  8563 ;;		On entry : 0/0
  8564 ;;		On exit  : 0/0
  8565 ;;		Unchanged: 0/0
  8566 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8567 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8568 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8569 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8570 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8571 ;;Total ram usage:        0 bytes
  8572 ;; Hardware stack levels used:    1
  8573 ;; Hardware stack levels required when called:    1
  8574 ;; This function calls:
  8575 ;;		_UART2_SetErrorHandler
  8576 ;;		_UART2_SetFramingErrorHandler
  8577 ;;		_UART2_SetOverrunErrorHandler
  8578 ;; This function is called by:
  8579 ;;		_SYSTEM_Initialize
  8580 ;; This function uses a non-reentrant model
  8581 ;;
  8582                           
  8583                           	psect	text32
  8584  00CED2                     __ptext32:
  8585                           	callstack 0
  8586  00CED2                     _UART2_Initialize:
  8587                           	callstack 28
  8588  00CED2                     
  8589                           ;mcc_generated_files/uart2.c: 73:     U2P1L = 0x00;
  8590  00CED2  0E00               	movlw	0
  8591  00CED4  013D               	movlb	61	; () banked
  8592  00CED6  6FD4               	movwf	212,b	;volatile
  8593                           
  8594                           ;mcc_generated_files/uart2.c: 76:     U2P2L = 0x00;
  8595  00CED8  0E00               	movlw	0
  8596  00CEDA  6FD6               	movwf	214,b	;volatile
  8597                           
  8598                           ;mcc_generated_files/uart2.c: 79:     U2P3L = 0x00;
  8599  00CEDC  0E00               	movlw	0
  8600  00CEDE  6FD8               	movwf	216,b	;volatile
  8601                           
  8602                           ;mcc_generated_files/uart2.c: 82:     U2CON0 = 0xB0;
  8603  00CEE0  0EB0               	movlw	176
  8604  00CEE2  6FDA               	movwf	218,b	;volatile
  8605                           
  8606                           ;mcc_generated_files/uart2.c: 85:     U2CON1 = 0x80;
  8607  00CEE4  0E80               	movlw	128
  8608  00CEE6  6FDB               	movwf	219,b	;volatile
  8609                           
  8610                           ;mcc_generated_files/uart2.c: 88:     U2CON2 = 0x00;
  8611  00CEE8  0E00               	movlw	0
  8612  00CEEA  6FDC               	movwf	220,b	;volatile
  8613                           
  8614                           ;mcc_generated_files/uart2.c: 91:     U2BRGL = 0x19;
  8615  00CEEC  0E19               	movlw	25
  8616  00CEEE  6FDD               	movwf	221,b	;volatile
  8617                           
  8618                           ;mcc_generated_files/uart2.c: 94:     U2BRGH = 0x00;
  8619  00CEF0  0E00               	movlw	0
  8620  00CEF2  6FDE               	movwf	222,b	;volatile
  8621                           
  8622                           ;mcc_generated_files/uart2.c: 97:     U2FIFO = 0x00;
  8623  00CEF4  0E00               	movlw	0
  8624  00CEF6  6FDF               	movwf	223,b	;volatile
  8625                           
  8626                           ;mcc_generated_files/uart2.c: 100:     U2UIR = 0x00;
  8627  00CEF8  0E00               	movlw	0
  8628  00CEFA  6FE0               	movwf	224,b	;volatile
  8629                           
  8630                           ;mcc_generated_files/uart2.c: 103:     U2ERRIR = 0x00;
  8631  00CEFC  0E00               	movlw	0
  8632  00CEFE  6FE1               	movwf	225,b	;volatile
  8633                           
  8634                           ;mcc_generated_files/uart2.c: 106:     U2ERRIE = 0x00;
  8635  00CF00  0E00               	movlw	0
  8636  00CF02  6FE2               	movwf	226,b	;volatile
  8637  00CF04                     
  8638                           ; BSR set to: 61
  8639                           ;mcc_generated_files/uart2.c: 109:     UART2_SetFramingErrorHandler(UART2_DefaultFraming
      +                          ErrorHandler);
  8640  00CF04  0E00               	movlw	0
  8641  00CF06  6E01               	movwf	UART2_SetFramingErrorHandler@interruptHandler^0,c
  8642  00CF08  0E00               	movlw	0
  8643  00CF0A  6E02               	movwf	(UART2_SetFramingErrorHandler@interruptHandler+1)^0,c
  8644  00CF0C  EC10  F066         	call	_UART2_SetFramingErrorHandler	;wreg free
  8645  00CF10                     
  8646                           ;mcc_generated_files/uart2.c: 110:     UART2_SetOverrunErrorHandler(UART2_DefaultOverrun
      +                          ErrorHandler);
  8647  00CF10  0E00               	movlw	0
  8648  00CF12  6E01               	movwf	UART2_SetOverrunErrorHandler@interruptHandler^0,c
  8649  00CF14  0E00               	movlw	0
  8650  00CF16  6E02               	movwf	(UART2_SetOverrunErrorHandler@interruptHandler+1)^0,c
  8651  00CF18  EC15  F066         	call	_UART2_SetOverrunErrorHandler	;wreg free
  8652  00CF1C                     
  8653                           ;mcc_generated_files/uart2.c: 111:     UART2_SetErrorHandler(UART2_DefaultErrorHandler);
  8654  00CF1C  0E00               	movlw	0
  8655  00CF1E  6E01               	movwf	UART2_SetErrorHandler@interruptHandler^0,c
  8656  00CF20  0E00               	movlw	0
  8657  00CF22  6E02               	movwf	(UART2_SetErrorHandler@interruptHandler+1)^0,c
  8658  00CF24  EC0B  F066         	call	_UART2_SetErrorHandler	;wreg free
  8659  00CF28                     
  8660                           ;mcc_generated_files/uart2.c: 113:     uart2RxLastError.status = 0;
  8661  00CF28  0E00               	movlw	0
  8662  00CF2A  0100               	movlb	0	; () banked
  8663  00CF2C  6FD2               	movwf	_uart2RxLastError& (0+255),b	;volatile
  8664  00CF2E                     
  8665                           ; BSR set to: 0
  8666  00CF2E  0012               	return		;funcret
  8667  00CF30                     __end_of_UART2_Initialize:
  8668                           	callstack 0
  8669                           
  8670 ;; *************** function _UART2_SetOverrunErrorHandler *****************
  8671 ;; Defined at:
  8672 ;;		line 195 in file "mcc_generated_files/uart2.c"
  8673 ;; Parameters:    Size  Location     Type
  8674 ;;  interruptHan    2    0[COMRAM] PTR FTN()void 
  8675 ;;		 -> UART2_DefaultOverrunErrorHandler(1), 
  8676 ;; Auto vars:     Size  Location     Type
  8677 ;;		None
  8678 ;; Return value:  Size  Location     Type
  8679 ;;                  1    wreg      void 
  8680 ;; Registers used:
  8681 ;;		wreg, status,2, status,0
  8682 ;; Tracked objects:
  8683 ;;		On entry : 0/0
  8684 ;;		On exit  : 0/0
  8685 ;;		Unchanged: 0/0
  8686 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8687 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8688 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8689 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8690 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8691 ;;Total ram usage:        2 bytes
  8692 ;; Hardware stack levels used:    1
  8693 ;; This function calls:
  8694 ;;		Nothing
  8695 ;; This function is called by:
  8696 ;;		_UART2_Initialize
  8697 ;; This function uses a non-reentrant model
  8698 ;;
  8699                           
  8700                           	psect	text33
  8701  00CC2A                     __ptext33:
  8702                           	callstack 0
  8703  00CC2A                     _UART2_SetOverrunErrorHandler:
  8704                           	callstack 28
  8705  00CC2A                     
  8706                           ;mcc_generated_files/uart2.c: 196:     UART2_OverrunErrorHandler = interruptHandler;
  8707  00CC2A  C001  F0D5         	movff	UART2_SetOverrunErrorHandler@interruptHandler,_UART2_OverrunErrorHandler
  8708  00CC2E  C002  F0D6         	movff	UART2_SetOverrunErrorHandler@interruptHandler+1,_UART2_OverrunErrorHandler+1
  8709  00CC32  0012               	return		;funcret
  8710  00CC34                     __end_of_UART2_SetOverrunErrorHandler:
  8711                           	callstack 0
  8712                           
  8713 ;; *************** function _UART2_SetFramingErrorHandler *****************
  8714 ;; Defined at:
  8715 ;;		line 191 in file "mcc_generated_files/uart2.c"
  8716 ;; Parameters:    Size  Location     Type
  8717 ;;  interruptHan    2    0[COMRAM] PTR FTN()void 
  8718 ;;		 -> UART2_DefaultFramingErrorHandler(1), 
  8719 ;; Auto vars:     Size  Location     Type
  8720 ;;		None
  8721 ;; Return value:  Size  Location     Type
  8722 ;;                  1    wreg      void 
  8723 ;; Registers used:
  8724 ;;		wreg, status,2, status,0
  8725 ;; Tracked objects:
  8726 ;;		On entry : 0/0
  8727 ;;		On exit  : 0/0
  8728 ;;		Unchanged: 0/0
  8729 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8730 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8731 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8732 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8733 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8734 ;;Total ram usage:        2 bytes
  8735 ;; Hardware stack levels used:    1
  8736 ;; This function calls:
  8737 ;;		Nothing
  8738 ;; This function is called by:
  8739 ;;		_UART2_Initialize
  8740 ;; This function uses a non-reentrant model
  8741 ;;
  8742                           
  8743                           	psect	text34
  8744  00CC20                     __ptext34:
  8745                           	callstack 0
  8746  00CC20                     _UART2_SetFramingErrorHandler:
  8747                           	callstack 28
  8748  00CC20                     
  8749                           ;mcc_generated_files/uart2.c: 192:     UART2_FramingErrorHandler = interruptHandler;
  8750  00CC20  C001  F0D7         	movff	UART2_SetFramingErrorHandler@interruptHandler,_UART2_FramingErrorHandler
  8751  00CC24  C002  F0D8         	movff	UART2_SetFramingErrorHandler@interruptHandler+1,_UART2_FramingErrorHandler+1
  8752  00CC28  0012               	return		;funcret
  8753  00CC2A                     __end_of_UART2_SetFramingErrorHandler:
  8754                           	callstack 0
  8755                           
  8756 ;; *************** function _UART2_SetErrorHandler *****************
  8757 ;; Defined at:
  8758 ;;		line 199 in file "mcc_generated_files/uart2.c"
  8759 ;; Parameters:    Size  Location     Type
  8760 ;;  interruptHan    2    0[COMRAM] PTR FTN()void 
  8761 ;;		 -> UART2_DefaultErrorHandler(1), 
  8762 ;; Auto vars:     Size  Location     Type
  8763 ;;		None
  8764 ;; Return value:  Size  Location     Type
  8765 ;;                  1    wreg      void 
  8766 ;; Registers used:
  8767 ;;		wreg, status,2, status,0
  8768 ;; Tracked objects:
  8769 ;;		On entry : 0/0
  8770 ;;		On exit  : 0/0
  8771 ;;		Unchanged: 0/0
  8772 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8773 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8774 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8775 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8776 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8777 ;;Total ram usage:        2 bytes
  8778 ;; Hardware stack levels used:    1
  8779 ;; This function calls:
  8780 ;;		Nothing
  8781 ;; This function is called by:
  8782 ;;		_UART2_Initialize
  8783 ;; This function uses a non-reentrant model
  8784 ;;
  8785                           
  8786                           	psect	text35
  8787  00CC16                     __ptext35:
  8788                           	callstack 0
  8789  00CC16                     _UART2_SetErrorHandler:
  8790                           	callstack 28
  8791  00CC16                     
  8792                           ;mcc_generated_files/uart2.c: 200:     UART2_ErrorHandler = interruptHandler;
  8793  00CC16  C001  F0D3         	movff	UART2_SetErrorHandler@interruptHandler,_UART2_ErrorHandler
  8794  00CC1A  C002  F0D4         	movff	UART2_SetErrorHandler@interruptHandler+1,_UART2_ErrorHandler+1
  8795  00CC1E  0012               	return		;funcret
  8796  00CC20                     __end_of_UART2_SetErrorHandler:
  8797                           	callstack 0
  8798                           
  8799 ;; *************** function _PMD_Initialize *****************
  8800 ;; Defined at:
  8801 ;;		line 72 in file "mcc_generated_files/mcc.c"
  8802 ;; Parameters:    Size  Location     Type
  8803 ;;		None
  8804 ;; Auto vars:     Size  Location     Type
  8805 ;;		None
  8806 ;; Return value:  Size  Location     Type
  8807 ;;                  1    wreg      void 
  8808 ;; Registers used:
  8809 ;;		wreg, status,2
  8810 ;; Tracked objects:
  8811 ;;		On entry : 0/0
  8812 ;;		On exit  : 0/0
  8813 ;;		Unchanged: 0/0
  8814 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8815 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8816 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8817 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8818 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8819 ;;Total ram usage:        0 bytes
  8820 ;; Hardware stack levels used:    1
  8821 ;; This function calls:
  8822 ;;		Nothing
  8823 ;; This function is called by:
  8824 ;;		_SYSTEM_Initialize
  8825 ;; This function uses a non-reentrant model
  8826 ;;
  8827                           
  8828                           	psect	text36
  8829  00CCA0                     __ptext36:
  8830                           	callstack 0
  8831  00CCA0                     _PMD_Initialize:
  8832                           	callstack 29
  8833  00CCA0                     
  8834                           ;mcc_generated_files/mcc.c: 75:     PMD0 = 0x00;
  8835  00CCA0  0E00               	movlw	0
  8836  00CCA2  0139               	movlb	57	; () banked
  8837  00CCA4  6FC0               	movwf	192,b	;volatile
  8838                           
  8839                           ;mcc_generated_files/mcc.c: 77:     PMD1 = 0x00;
  8840  00CCA6  0E00               	movlw	0
  8841  00CCA8  6FC1               	movwf	193,b	;volatile
  8842                           
  8843                           ;mcc_generated_files/mcc.c: 79:     PMD2 = 0x00;
  8844  00CCAA  0E00               	movlw	0
  8845  00CCAC  6FC2               	movwf	194,b	;volatile
  8846                           
  8847                           ;mcc_generated_files/mcc.c: 81:     PMD3 = 0x00;
  8848  00CCAE  0E00               	movlw	0
  8849  00CCB0  6FC3               	movwf	195,b	;volatile
  8850                           
  8851                           ;mcc_generated_files/mcc.c: 83:     PMD4 = 0x00;
  8852  00CCB2  0E00               	movlw	0
  8853  00CCB4  6FC4               	movwf	196,b	;volatile
  8854                           
  8855                           ;mcc_generated_files/mcc.c: 85:     PMD5 = 0x00;
  8856  00CCB6  0E00               	movlw	0
  8857  00CCB8  6FC5               	movwf	197,b	;volatile
  8858                           
  8859                           ;mcc_generated_files/mcc.c: 87:     PMD6 = 0x00;
  8860  00CCBA  0E00               	movlw	0
  8861  00CCBC  6FC6               	movwf	198,b	;volatile
  8862                           
  8863                           ;mcc_generated_files/mcc.c: 89:     PMD7 = 0x00;
  8864  00CCBE  0E00               	movlw	0
  8865  00CCC0  6FC7               	movwf	199,b	;volatile
  8866  00CCC2                     
  8867                           ; BSR set to: 57
  8868  00CCC2  0012               	return		;funcret
  8869  00CCC4                     __end_of_PMD_Initialize:
  8870                           	callstack 0
  8871                           
  8872 ;; *************** function _PIN_MANAGER_Initialize *****************
  8873 ;; Defined at:
  8874 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  8875 ;; Parameters:    Size  Location     Type
  8876 ;;		None
  8877 ;; Auto vars:     Size  Location     Type
  8878 ;;		None
  8879 ;; Return value:  Size  Location     Type
  8880 ;;                  1    wreg      void 
  8881 ;; Registers used:
  8882 ;;		wreg, status,2
  8883 ;; Tracked objects:
  8884 ;;		On entry : 0/0
  8885 ;;		On exit  : 0/0
  8886 ;;		Unchanged: 0/0
  8887 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8888 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8889 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8890 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8891 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8892 ;;Total ram usage:        0 bytes
  8893 ;; Hardware stack levels used:    1
  8894 ;; This function calls:
  8895 ;;		Nothing
  8896 ;; This function is called by:
  8897 ;;		_SYSTEM_Initialize
  8898 ;; This function uses a non-reentrant model
  8899 ;;
  8900                           
  8901                           	psect	text37
  8902  00D062                     __ptext37:
  8903                           	callstack 0
  8904  00D062                     _PIN_MANAGER_Initialize:
  8905                           	callstack 29
  8906  00D062                     
  8907                           ;mcc_generated_files/pin_manager.c: 60:     LATE = 0x00;
  8908  00D062  0E00               	movlw	0
  8909  00D064  6EBE               	movwf	190,c	;volatile
  8910                           
  8911                           ;mcc_generated_files/pin_manager.c: 61:     LATD = 0x00;
  8912  00D066  0E00               	movlw	0
  8913  00D068  6EBD               	movwf	189,c	;volatile
  8914                           
  8915                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x00;
  8916  00D06A  0E00               	movlw	0
  8917  00D06C  6EBA               	movwf	186,c	;volatile
  8918                           
  8919                           ;mcc_generated_files/pin_manager.c: 63:     LATB = 0x00;
  8920  00D06E  0E00               	movlw	0
  8921  00D070  6EBB               	movwf	187,c	;volatile
  8922                           
  8923                           ;mcc_generated_files/pin_manager.c: 64:     LATC = 0x00;
  8924  00D072  0E00               	movlw	0
  8925  00D074  6EBC               	movwf	188,c	;volatile
  8926                           
  8927                           ;mcc_generated_files/pin_manager.c: 69:     TRISE = 0x07;
  8928  00D076  0E07               	movlw	7
  8929  00D078  6EC6               	movwf	198,c	;volatile
  8930  00D07A                     
  8931                           ;mcc_generated_files/pin_manager.c: 70:     TRISA = 0xFF;
  8932  00D07A  68C2               	setf	194,c	;volatile
  8933                           
  8934                           ;mcc_generated_files/pin_manager.c: 71:     TRISB = 0xBF;
  8935  00D07C  0EBF               	movlw	191
  8936  00D07E  6EC3               	movwf	195,c	;volatile
  8937  00D080                     
  8938                           ;mcc_generated_files/pin_manager.c: 72:     TRISC = 0xFF;
  8939  00D080  68C4               	setf	196,c	;volatile
  8940  00D082                     
  8941                           ;mcc_generated_files/pin_manager.c: 73:     TRISD = 0xFF;
  8942  00D082  68C5               	setf	197,c	;volatile
  8943  00D084                     
  8944                           ;mcc_generated_files/pin_manager.c: 78:     ANSELD = 0xFF;
  8945  00D084  013A               	movlb	58	; () banked
  8946  00D086  6970               	setf	112,b	;volatile
  8947  00D088                     
  8948                           ; BSR set to: 58
  8949                           ;mcc_generated_files/pin_manager.c: 79:     ANSELC = 0xFF;
  8950  00D088  6960               	setf	96,b	;volatile
  8951                           
  8952                           ;mcc_generated_files/pin_manager.c: 80:     ANSELB = 0x7F;
  8953  00D08A  0E7F               	movlw	127
  8954  00D08C  6F50               	movwf	80,b	;volatile
  8955                           
  8956                           ;mcc_generated_files/pin_manager.c: 81:     ANSELE = 0x07;
  8957  00D08E  0E07               	movlw	7
  8958  00D090  6F80               	movwf	128,b	;volatile
  8959  00D092                     
  8960                           ; BSR set to: 58
  8961                           ;mcc_generated_files/pin_manager.c: 82:     ANSELA = 0xFF;
  8962  00D092  6940               	setf	64,b	;volatile
  8963                           
  8964                           ;mcc_generated_files/pin_manager.c: 87:     WPUD = 0x00;
  8965  00D094  0E00               	movlw	0
  8966  00D096  6F71               	movwf	113,b	;volatile
  8967                           
  8968                           ;mcc_generated_files/pin_manager.c: 88:     WPUE = 0x00;
  8969  00D098  0E00               	movlw	0
  8970  00D09A  6F81               	movwf	129,b	;volatile
  8971                           
  8972                           ;mcc_generated_files/pin_manager.c: 89:     WPUB = 0x00;
  8973  00D09C  0E00               	movlw	0
  8974  00D09E  6F51               	movwf	81,b	;volatile
  8975                           
  8976                           ;mcc_generated_files/pin_manager.c: 90:     WPUA = 0x00;
  8977  00D0A0  0E00               	movlw	0
  8978  00D0A2  6F41               	movwf	65,b	;volatile
  8979                           
  8980                           ;mcc_generated_files/pin_manager.c: 91:     WPUC = 0x00;
  8981  00D0A4  0E00               	movlw	0
  8982  00D0A6  6F61               	movwf	97,b	;volatile
  8983                           
  8984                           ;mcc_generated_files/pin_manager.c: 96:     RB1I2C = 0x00;
  8985  00D0A8  0E00               	movlw	0
  8986  00D0AA  6F5A               	movwf	90,b	;volatile
  8987                           
  8988                           ;mcc_generated_files/pin_manager.c: 97:     RB2I2C = 0x00;
  8989  00D0AC  0E00               	movlw	0
  8990  00D0AE  6F5B               	movwf	91,b	;volatile
  8991                           
  8992                           ;mcc_generated_files/pin_manager.c: 98:     RC3I2C = 0x00;
  8993  00D0B0  0E00               	movlw	0
  8994  00D0B2  6F6A               	movwf	106,b	;volatile
  8995                           
  8996                           ;mcc_generated_files/pin_manager.c: 99:     RC4I2C = 0x00;
  8997  00D0B4  0E00               	movlw	0
  8998  00D0B6  6F6B               	movwf	107,b	;volatile
  8999                           
  9000                           ;mcc_generated_files/pin_manager.c: 100:     RD0I2C = 0x00;
  9001  00D0B8  0E00               	movlw	0
  9002  00D0BA  6F7A               	movwf	122,b	;volatile
  9003                           
  9004                           ;mcc_generated_files/pin_manager.c: 101:     RD1I2C = 0x00;
  9005  00D0BC  0E00               	movlw	0
  9006  00D0BE  6F7B               	movwf	123,b	;volatile
  9007                           
  9008                           ;mcc_generated_files/pin_manager.c: 106:     ODCONE = 0x00;
  9009  00D0C0  0E00               	movlw	0
  9010  00D0C2  6F82               	movwf	130,b	;volatile
  9011                           
  9012                           ;mcc_generated_files/pin_manager.c: 107:     ODCONA = 0x00;
  9013  00D0C4  0E00               	movlw	0
  9014  00D0C6  6F42               	movwf	66,b	;volatile
  9015                           
  9016                           ;mcc_generated_files/pin_manager.c: 108:     ODCONB = 0x00;
  9017  00D0C8  0E00               	movlw	0
  9018  00D0CA  6F52               	movwf	82,b	;volatile
  9019                           
  9020                           ;mcc_generated_files/pin_manager.c: 109:     ODCONC = 0x00;
  9021  00D0CC  0E00               	movlw	0
  9022  00D0CE  6F62               	movwf	98,b	;volatile
  9023                           
  9024                           ;mcc_generated_files/pin_manager.c: 110:     ODCOND = 0x00;
  9025  00D0D0  0E00               	movlw	0
  9026  00D0D2  6F72               	movwf	114,b	;volatile
  9027  00D0D4                     
  9028                           ; BSR set to: 58
  9029                           ;mcc_generated_files/pin_manager.c: 115:     SLRCONA = 0xFF;
  9030  00D0D4  6943               	setf	67,b	;volatile
  9031  00D0D6                     
  9032                           ; BSR set to: 58
  9033                           ;mcc_generated_files/pin_manager.c: 116:     SLRCONB = 0xFF;
  9034  00D0D6  6953               	setf	83,b	;volatile
  9035  00D0D8                     
  9036                           ; BSR set to: 58
  9037                           ;mcc_generated_files/pin_manager.c: 117:     SLRCONC = 0xFF;
  9038  00D0D8  6963               	setf	99,b	;volatile
  9039  00D0DA                     
  9040                           ; BSR set to: 58
  9041                           ;mcc_generated_files/pin_manager.c: 118:     SLRCOND = 0xFF;
  9042  00D0DA  6973               	setf	115,b	;volatile
  9043                           
  9044                           ;mcc_generated_files/pin_manager.c: 119:     SLRCONE = 0x07;
  9045  00D0DC  0E07               	movlw	7
  9046  00D0DE  6F83               	movwf	131,b	;volatile
  9047  00D0E0                     
  9048                           ; BSR set to: 58
  9049                           ;mcc_generated_files/pin_manager.c: 124:     INLVLA = 0xFF;
  9050  00D0E0  6944               	setf	68,b	;volatile
  9051  00D0E2                     
  9052                           ; BSR set to: 58
  9053                           ;mcc_generated_files/pin_manager.c: 125:     INLVLB = 0xFF;
  9054  00D0E2  6954               	setf	84,b	;volatile
  9055  00D0E4                     
  9056                           ; BSR set to: 58
  9057                           ;mcc_generated_files/pin_manager.c: 126:     INLVLC = 0xFF;
  9058  00D0E4  6964               	setf	100,b	;volatile
  9059  00D0E6                     
  9060                           ; BSR set to: 58
  9061                           ;mcc_generated_files/pin_manager.c: 127:     INLVLD = 0xFF;
  9062  00D0E6  6974               	setf	116,b	;volatile
  9063                           
  9064                           ;mcc_generated_files/pin_manager.c: 128:     INLVLE = 0x0F;
  9065  00D0E8  0E0F               	movlw	15
  9066  00D0EA  6F84               	movwf	132,b	;volatile
  9067                           
  9068                           ;mcc_generated_files/pin_manager.c: 137:     U2RXPPS = 0x0F;
  9069  00D0EC  0E0F               	movlw	15
  9070  00D0EE  6FE8               	movwf	232,b	;volatile
  9071                           
  9072                           ;mcc_generated_files/pin_manager.c: 138:     RB6PPS = 0x16;
  9073  00D0F0  0E16               	movlw	22
  9074  00D0F2  6F0E               	movwf	14,b	;volatile
  9075  00D0F4                     
  9076                           ; BSR set to: 58
  9077  00D0F4  0012               	return		;funcret
  9078  00D0F6                     __end_of_PIN_MANAGER_Initialize:
  9079                           	callstack 0
  9080                           
  9081 ;; *************** function _OSCILLATOR_Initialize *****************
  9082 ;; Defined at:
  9083 ;;		line 58 in file "mcc_generated_files/mcc.c"
  9084 ;; Parameters:    Size  Location     Type
  9085 ;;		None
  9086 ;; Auto vars:     Size  Location     Type
  9087 ;;		None
  9088 ;; Return value:  Size  Location     Type
  9089 ;;                  1    wreg      void 
  9090 ;; Registers used:
  9091 ;;		wreg, status,2
  9092 ;; Tracked objects:
  9093 ;;		On entry : 0/0
  9094 ;;		On exit  : 0/0
  9095 ;;		Unchanged: 0/0
  9096 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9097 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9098 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9099 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9100 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9101 ;;Total ram usage:        0 bytes
  9102 ;; Hardware stack levels used:    1
  9103 ;; This function calls:
  9104 ;;		Nothing
  9105 ;; This function is called by:
  9106 ;;		_SYSTEM_Initialize
  9107 ;; This function uses a non-reentrant model
  9108 ;;
  9109                           
  9110                           	psect	text38
  9111  00CC50                     __ptext38:
  9112                           	callstack 0
  9113  00CC50                     _OSCILLATOR_Initialize:
  9114                           	callstack 29
  9115  00CC50                     
  9116                           ;mcc_generated_files/mcc.c: 61:     OSCCON1 = 0x62;
  9117  00CC50  0E62               	movlw	98
  9118  00CC52  0139               	movlb	57	; () banked
  9119  00CC54  6FD9               	movwf	217,b	;volatile
  9120                           
  9121                           ;mcc_generated_files/mcc.c: 63:     OSCCON3 = 0x00;
  9122  00CC56  0E00               	movlw	0
  9123  00CC58  6FDB               	movwf	219,b	;volatile
  9124                           
  9125                           ;mcc_generated_files/mcc.c: 65:     OSCEN = 0x00;
  9126  00CC5A  0E00               	movlw	0
  9127  00CC5C  6FDD               	movwf	221,b	;volatile
  9128                           
  9129                           ;mcc_generated_files/mcc.c: 67:     OSCFRQ = 0x02;
  9130  00CC5E  0E02               	movlw	2
  9131  00CC60  6FDF               	movwf	223,b	;volatile
  9132                           
  9133                           ;mcc_generated_files/mcc.c: 69:     OSCTUNE = 0x00;
  9134  00CC62  0E00               	movlw	0
  9135  00CC64  6FDE               	movwf	222,b	;volatile
  9136  00CC66                     
  9137                           ; BSR set to: 57
  9138  00CC66  0012               	return		;funcret
  9139  00CC68                     __end_of_OSCILLATOR_Initialize:
  9140                           	callstack 0
  9141                           
  9142                           	psect	rparam
  9143  0000                     
  9144                           	psect	idloc
  9145                           
  9146                           ;Config register IDLOC0 @ 0x200000
  9147                           ;	unspecified, using default values
  9148  200000                     	org	2097152
  9149  200000  0FFF               	dw	4095
  9150                           
  9151                           ;Config register IDLOC1 @ 0x200002
  9152                           ;	unspecified, using default values
  9153  200002                     	org	2097154
  9154  200002  0FFF               	dw	4095
  9155                           
  9156                           ;Config register IDLOC2 @ 0x200004
  9157                           ;	unspecified, using default values
  9158  200004                     	org	2097156
  9159  200004  0FFF               	dw	4095
  9160                           
  9161                           ;Config register IDLOC3 @ 0x200006
  9162                           ;	unspecified, using default values
  9163  200006                     	org	2097158
  9164  200006  0FFF               	dw	4095
  9165                           
  9166                           ;Config register IDLOC4 @ 0x200008
  9167                           ;	unspecified, using default values
  9168  200008                     	org	2097160
  9169  200008  0FFF               	dw	4095
  9170                           
  9171                           ;Config register IDLOC5 @ 0x20000A
  9172                           ;	unspecified, using default values
  9173  20000A                     	org	2097162
  9174  20000A  0FFF               	dw	4095
  9175                           
  9176                           ;Config register IDLOC6 @ 0x20000C
  9177                           ;	unspecified, using default values
  9178  20000C                     	org	2097164
  9179  20000C  0FFF               	dw	4095
  9180                           
  9181                           ;Config register IDLOC7 @ 0x20000E
  9182                           ;	unspecified, using default values
  9183  20000E                     	org	2097166
  9184  20000E  0FFF               	dw	4095
  9185                           
  9186                           	psect	config
  9187                           
  9188                           ;Config register CONFIG1L @ 0x300000
  9189                           ;	External Oscillator Selection
  9190                           ;	FEXTOSC = OFF, Oscillator not enabled
  9191                           ;	Reset Oscillator Selection
  9192                           ;	RSTOSC = HFINTOSC_1MHZ, HFINTOSC with HFFRQ = 4 MHz and CDIV = 4:1
  9193  300000                     	org	3145728
  9194  300000  EC                 	db	236
  9195                           
  9196                           ;Config register CONFIG1H @ 0x300001
  9197                           ;	Clock out Enable bit
  9198                           ;	CLKOUTEN = ON, CLKOUT function is enabled
  9199                           ;	PRLOCKED One-Way Set Enable bit
  9200                           ;	PR1WAY = ON, PRLOCK bit can be cleared and set only once
  9201                           ;	Clock Switch Enable bit
  9202                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
  9203                           ;	Fail-Safe Clock Monitor Enable bit
  9204                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
  9205  300001                     	org	3145729
  9206  300001  FE                 	db	254
  9207                           
  9208                           ;Config register CONFIG2L @ 0x300002
  9209                           ;	MCLR Enable bit
  9210                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RE3 pin function is MCLR
  9211                           ;	Power-up timer selection bits
  9212                           ;	PWRTS = PWRT_OFF, PWRT is disabled
  9213                           ;	Multi-vector enable bit
  9214                           ;	MVECEN = OFF, Interrupt contoller does not use vector table to prioritze interrupts
  9215                           ;	IVTLOCK bit One-way set enable bit
  9216                           ;	IVT1WAY = ON, IVTLOCK bit can be cleared and set only once
  9217                           ;	Low Power BOR Enable bit
  9218                           ;	LPBOREN = OFF, ULPBOR disabled
  9219                           ;	Brown-out Reset Enable bits
  9220                           ;	BOREN = SBORDIS, Brown-out Reset enabled , SBOREN bit is ignored
  9221  300002                     	org	3145730
  9222  300002  F7                 	db	247
  9223                           
  9224                           ;Config register CONFIG2H @ 0x300003
  9225                           ;	Brown-out Reset Voltage Selection bits
  9226                           ;	BORV = VBOR_2P45, Brown-out Reset Voltage (VBOR) set to 2.45V
  9227                           ;	ZCD Disable bit
  9228                           ;	ZCD = OFF, ZCD disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCDCON
  9229                           ;	PPSLOCK bit One-Way Set Enable bit
  9230                           ;	PPS1WAY = ON, PPSLOCK bit can be cleared and set only once; PPS registers remain locke
      +                          d after one clear/set cycle
  9231                           ;	Stack Full/Underflow Reset Enable bit
  9232                           ;	STVREN = ON, Stack full/underflow will cause Reset
  9233                           ;	Debugger Enable bit
  9234                           ;	DEBUG = OFF, Background debugger disabled
  9235                           ;	Extended Instruction Set Enable bit
  9236                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
  9237  300003                     	org	3145731
  9238  300003  FF                 	db	255
  9239                           
  9240                           ;Config register CONFIG3L @ 0x300004
  9241                           ;	WDT Period selection bits
  9242                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  9243                           ;	WDT operating mode
  9244                           ;	WDTE = OFF, WDT Disabled; SWDTEN is ignored
  9245  300004                     	org	3145732
  9246  300004  9F                 	db	159
  9247                           
  9248                           ;Config register CONFIG3H @ 0x300005
  9249                           ;	WDT Window Select bits
  9250                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
  9251                           ;	WDT input clock selector
  9252                           ;	WDTCCS = SC, Software Control
  9253  300005                     	org	3145733
  9254  300005  FF                 	db	255
  9255                           
  9256                           ;Config register CONFIG4L @ 0x300006
  9257                           ;	Boot Block Size selection bits
  9258                           ;	BBSIZE = BBSIZE_512, Boot Block size is 512 words
  9259                           ;	Boot Block enable bit
  9260                           ;	BBEN = OFF, Boot block disabled
  9261                           ;	Storage Area Flash enable bit
  9262                           ;	SAFEN = OFF, SAF disabled
  9263                           ;	Application Block write protection bit
  9264                           ;	WRTAPP = OFF, Application Block not write protected
  9265  300006                     	org	3145734
  9266  300006  FF                 	db	255
  9267                           
  9268                           ;Config register CONFIG4H @ 0x300007
  9269                           ;	Configuration Register Write Protection bit
  9270                           ;	WRTB = OFF, Configuration registers (300000-30000Bh) not write-protected
  9271                           ;	Boot Block Write Protection bit
  9272                           ;	WRTC = OFF, Boot Block (000000-0007FFh) not write-protected
  9273                           ;	Data EEPROM Write Protection bit
  9274                           ;	WRTD = OFF, Data EEPROM not write-protected
  9275                           ;	SAF Write protection bit
  9276                           ;	WRTSAF = OFF, SAF not Write Protected
  9277                           ;	Low Voltage Programming Enable bit
  9278                           ;	LVP = ON, Low voltage programming enabled. MCLR/VPP pin function is MCLR. MCLRE config
      +                          uration bit is ignored
  9279  300007                     	org	3145735
  9280  300007  FF                 	db	255
  9281                           
  9282                           ;Config register CONFIG5L @ 0x300008
  9283                           ;	PFM and Data EEPROM Code Protection bit
  9284                           ;	CP = OFF, PFM and Data EEPROM code protection disabled
  9285  300008                     	org	3145736
  9286  300008  FF                 	db	255
  9287                           
  9288                           ;Config register CONFIG5H @ 0x300009
  9289                           ;	unspecified, using default values
  9290  300009                     	org	3145737
  9291  300009  FF                 	db	255
  9292                           tosu	equ	0x3FFF
  9293                           tosh	equ	0x3FFE
  9294                           tosl	equ	0x3FFD
  9295                           stkptr	equ	0x3FFC
  9296                           pclatu	equ	0x3FFB
  9297                           pclath	equ	0x3FFA
  9298                           pcl	equ	0x3FF9
  9299                           tblptru	equ	0x3FF8
  9300                           tblptrh	equ	0x3FF7
  9301                           tblptrl	equ	0x3FF6
  9302                           tablat	equ	0x3FF5
  9303                           prodh	equ	0x3FF4
  9304                           prodl	equ	0x3FF3
  9305                           indf0	equ	0x3FEF
  9306                           postinc0	equ	0x3FEE
  9307                           postdec0	equ	0x3FED
  9308                           preinc0	equ	0x3FEC
  9309                           plusw0	equ	0x3FEB
  9310                           fsr0h	equ	0x3FEA
  9311                           fsr0l	equ	0x3FE9
  9312                           wreg	equ	0x3FE8
  9313                           indf1	equ	0x3FE7
  9314                           postinc1	equ	0x3FE6
  9315                           postdec1	equ	0x3FE5
  9316                           preinc1	equ	0x3FE4
  9317                           plusw1	equ	0x3FE3
  9318                           fsr1h	equ	0x3FE2
  9319                           fsr1l	equ	0x3FE1
  9320                           bsr	equ	0x3FE0
  9321                           indf2	equ	0x3FDF
  9322                           postinc2	equ	0x3FDE
  9323                           postdec2	equ	0x3FDD
  9324                           preinc2	equ	0x3FDC
  9325                           plusw2	equ	0x3FDB
  9326                           fsr2h	equ	0x3FDA
  9327                           fsr2l	equ	0x3FD9
  9328                           status	equ	0x3FD8

Data Sizes:
    Strings     369
    Constant    0
    Data        0
    BSS         97
    Persistent  6
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     95      95
    BANK0           160     98     121
    BANK1           256      0      80
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0

Pointer List with Targets:

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_19(CODE[3]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_19(CODE[3]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(COMRAM[3]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(COMRAM[3]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_14(CODE[4]), STR_13(CODE[4]), STR_10(CODE[4]), STR_9(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_14(CODE[4]), STR_13(CODE[4]), STR_10(CODE[4]), STR_9(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S794_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 75
		 -> STR_8(CODE[33]), STR_7(CODE[34]), STR_6(CODE[30]), STR_5(CODE[75]), 
		 -> STR_4(CODE[67]), STR_3(CODE[39]), STR_2(CODE[37]), STR_1(CODE[35]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(COMRAM[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 75
		 -> STR_8(CODE[33]), STR_7(CODE[34]), STR_6(CODE[30]), STR_5(CODE[75]), 
		 -> STR_4(CODE[67]), STR_3(CODE[39]), STR_2(CODE[37]), STR_1(CODE[35]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 75
		 -> STR_8(CODE[33]), STR_7(CODE[34]), STR_6(CODE[30]), STR_5(CODE[75]), 
		 -> STR_4(CODE[67]), STR_3(CODE[39]), STR_2(CODE[37]), STR_1(CODE[35]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(COMRAM[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 75
		 -> STR_8(CODE[33]), STR_7(CODE[34]), STR_6(CODE[30]), STR_5(CODE[75]), 
		 -> STR_4(CODE[67]), STR_3(CODE[39]), STR_2(CODE[37]), STR_1(CODE[35]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    UART2_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART2_DefaultErrorHandler(), 

    UART2_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART2_DefaultOverrunErrorHandler(), 

    UART2_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART2_DefaultFramingErrorHandler(), 

    UART2_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), UART2_DefaultErrorHandler(), 

    UART2_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), UART2_DefaultOverrunErrorHandler(), 

    UART2_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), UART2_DefaultFramingErrorHandler(), 


Critical Paths under _main in COMRAM

    _main->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _efgtoa->_floorf
    _tolower->_isupper
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _putch->_UART2_Write
    _floorf->___fldiv
    ___flsub->___flmul
    ___flge->___flmul
    _atoi->_isspace
    _UART2_Initialize->_UART2_SetErrorHandler
    _UART2_Initialize->_UART2_SetFramingErrorHandler
    _UART2_Initialize->_UART2_SetOverrunErrorHandler

Critical Paths under _main in BANK0

    _main->_printf
    _vfpfcnvrt->_efgtoa

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                28    28      0   29443
                                             70 BANK0     28    28      0
                  _SYSTEM_Initialize
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                              18     4     14   28944
                                             91 COMRAM     4     4      0
                                             56 BANK0     14     0     14
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6   28274
                                             83 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           50    44      6   27883
                                             57 COMRAM    26    20      6
                               _atoi
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                            _strncmp
                            _tolower
 ---------------------------------------------------------------------------------
 (4) _strncmp                                             11     5      6     453
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (4) _efgtoa                                              68    61      7   22044
                                             45 COMRAM    12     5      7
                                              0 BANK0     56    56      0
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (4) _tolower                                              8     6      2     944
                                              6 COMRAM     8     6      2
                            _isupper
 ---------------------------------------------------------------------------------
 (5) _isupper                                              6     4      2     465
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _strcpy                                              10     6      4     856
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    3121
                                             18 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     166
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1213
                                             11 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4     812
                                              2 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0      44
                                              1 COMRAM     1     1      0
                        _UART2_Write
 ---------------------------------------------------------------------------------
 (6) _UART2_Write                                          1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) _floorf                                              20    16      4     490
                                             25 COMRAM    20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fpclassifyf                                       14    10      4     287
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (5) ___fltol                                             10     6      4     381
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8    2889
                                             25 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             16     8      8    2414
                                              0 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (5) ___flneg                                              4     0      4     121
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             25    17      8    2656
                                              0 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8     790
                                             25 COMRAM    12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fleq                                              12     4      8     646
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (5) ___fldiv                                             25    17      8    2007
                                              0 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4     448
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4     452
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (4) _atoi                                                15    13      2    1304
                                              7 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (5) _isspace                                              7     5      2     207
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              6     4      2     313
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     311
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     294
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                   _UART2_Initialize
 ---------------------------------------------------------------------------------
 (2) _UART2_Initialize                                     0     0      0     294
              _UART2_SetErrorHandler
       _UART2_SetFramingErrorHandler
       _UART2_SetOverrunErrorHandler
 ---------------------------------------------------------------------------------
 (3) _UART2_SetOverrunErrorHandler                         2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _UART2_SetFramingErrorHandler                         2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _UART2_SetErrorHandler                                2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _UART2_Initialize
       _UART2_SetErrorHandler
       _UART2_SetFramingErrorHandler
       _UART2_SetOverrunErrorHandler
   _printf
     _vfprintf
       _vfpfcnvrt
         _atoi
           ___wmul
           _isdigit
           _isspace
         _efgtoa
           ___awdiv
           ___awmod
           ___fladd
           ___fldiv
           ___fleq
           ___flge
             ___flmul (ARG)
           ___flmul
           ___flneg
           ___flsub
             ___fladd
             ___flmul (ARG)
           ___fltol
           ___fpclassifyf
           _floorf
             ___fldiv (ARG)
           _isupper
           _pad
             _fputc
               _putch
                 _UART2_Write
             _fputs
               _fputc
                 _putch
                   _UART2_Write
             _strlen
           _strcpy
           _tolower
             _isupper
         _fputc
           _putch
             _UART2_Write
         _isdigit
         _isupper
         _strncmp
         _tolower
           _isupper

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             FFF      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK15          100      0       0      30        0.0%
BANK15             100      0       0      31        0.0%
BITBANK14          100      0       0      28        0.0%
BANK14             100      0       0      29        0.0%
BITBANK13          100      0       0      36        0.0%
BANK13             100      0       0      27        0.0%
BITBANK12          100      0       0      35        0.0%
BANK12             100      0       0      26        0.0%
BITBANK11          100      0       0      34        0.0%
BANK11             100      0       0      25        0.0%
BITBANK10          100      0       0      33        0.0%
BANK10             100      0       0      24        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      50       7       31.2%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     62      79       5       75.6%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5F      5F       1      100.0%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     128      32        0.0%
DATA                 0      0     128       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.30 build 20200825195618 
Symbol Table                                                                                   Sat Oct 10 00:58:28 2020

                                ___fldiv@aexp 0019                                  ___fldiv@bexp 0018  
                                ___fldiv@sign 0011                                            l57 CF2E  
                                          l83 CC6A                                            l92 CC3C  
                                          l86 CC80                                  ___awdiv@sign 0006  
                         ___wmul@multiplicand 0003                                           l110 CC1E  
                                         l104 CC28                                           l107 CC32  
                                         l242 CC66                                           l260 CD12  
                                         l245 CCC2                                           l254 D9E0  
                                         l239 CC4E                                           l255 D9E0  
                                         l504 D2E4                                           l530 D764  
                                         l525 D71E                                           l534 CD82  
                                         l199 D0F4                                           l519 D234  
                                         l491 D3A8                                           l805 E898  
                                         l557 D86A                                           l814 E968  
                                         l830 CE7E                                           l815 E956  
                                         l842 E140                                           l844 DFA0  
                                         l853 DFE6                                           l790 E732  
                                         l855 E05E                                           l847 DF64  
                                         l856 E04C                                           l881 E420  
                                         l874 E206                                           l938 CCE8  
                                         l891 E550                                           l883 E498  
                                         l884 E486                                           l788 E77E  
                                         l797 EA4E                                           l789 E76C  
                                         l878 E58E                                           l982 D432  
                                         l984 D46E                                           l979 D3F0  
                                         _pad D3AA                       __size_of_PMD_Initialize 0024  
                                ___awmod@sign 0006                                           wreg 003FE8  
                                ___flmul@aexp 0012                                  ___flmul@bexp 0013  
                                ___flmul@sign 000D                                  ___flmul@temp 0018  
                                ___flmul@prod 0014                                  ___fltol@exp1 000A  
                                        l1002 FE86                                          l1020 F5F8  
                                        l1202 CDBA                                          l1130 CFF6  
                                        l1123 F0DA                                          l1140 D660  
                                        l1116 F1DC                                          l1231 D060  
                                        l1048 FA38                                          l3001 CD0A  
                                        l1217 D18A                                          l1225 CE38  
                                        l1241 D562                                          l1129 CFEE  
                                        l3011 DDC4                                          l1251 CF86  
                                        l1091 EB68                                          l1172 DB94  
                                        l3101 E004                                          l3013 DDD4  
                                        l3021 DDFE                                          l3005 DDA8  
                                        l1181 DCEA                                          l1237 CDF4  
                                        l3111 E06E                                          l3103 E008  
                                        l3031 DE2A                                          l3023 DE0E  
                                        l3015 DDE4                                          l3007 DDB4  
                                        l1256 CF8E                                          l1169 DB8C  
                                        l3121 E0D0                                          l3113 E07A  
                                        l3105 E016                                          l3033 DE3A  
                                        l3041 DE64                                          l3025 DE14  
                                        l3017 DDF4                                          l3009 DDC2  
                                        l3201 E2CC                                          l1178 DDA6  
                                        l3131 E12E                                          l3123 E0E6  
                                        l3115 E088                                          l3107 E044  
                                        l3051 DEA6                                          l3043 DE74  
                                        l3035 DE4A                                          l3027 DE1A  
                                        l3019 DDF6                                          l3211 E32A  
                                        l3203 E2DC                                          l4011 EE84  
                                        l4003 EDFA                                          l1188 CD4A  
                                        l1196 CED0                                          l4101 D0D8  
                                        l3301 D348                                          l3133 E134  
                                        l3125 E100                                          l3117 E0B2  
                                        l3045 DE8A                                          l3037 DE5A  
                                        l3029 DE28                                          l3221 E3DA  
                                        l3213 E34A                                          l3205 E2EC  
                                        l4021 EF18                                          l4013 EE94  
                                        l4005 EE0C                                          l4111 D0E6  
                                        l4103 D0DA                                          l3311 D37C  
                                        l3303 D356                                          l3135 E136  
                                        l3127 E11C                                          l3119 E0B6  
                                        l3071 DF28                                          l3063 DEDE  
                                        l3047 DE9A                                          l3055 DEBA  
                                        l3039 DE5C                                          l3231 E430  
                                        l3223 E3E8                                          l3215 E35A  
                                        l3207 E2FC                                          l3151 E16E  
                                        l3143 E142                                          l4023 EF5C  
                                        l4015 EED2                                          l4007 EE36  
                                        l4105 D0E0                                          l4113 CCA0  
                                        l3313 D382                                          l3305 D35C  
                                        l3129 E120                                          l3081 DF6E  
                                        l3073 DF30                                          l3065 DEF8  
                                        l3057 DECA                                          l3049 DEA2  
                                        l3233 E43E                                          l3225 E406  
                                        l3217 E37A                                          l3209 E31A  
                                        l3161 E1AA                                          l3153 E17E  
                                        l3145 E14E                                          l3401 CD72  
                                        l4033 F03C                                          l4017 EEE4  
                                        l4009 EE46                                          l4121 CFA6  
                                        l4115 CC50                                          l4107 D0E2  
                                        l3307 D372                                          l3315 D388  
                                        l3331 D254                                          l3323 D236  
                                        l3091 DFC6                                          l3083 DF8C  
                                        l3075 DF40                                          l3067 DF08  
                                        l3059 DECA                                          l3243 E4A8  
                                        l3251 E4F0                                          l3235 E442  
                                        l3227 E410                                          l3219 E3A4  
                                        l3171 E1E0                                          l3163 E1B0  
                                        l3155 E18E                                          l3147 E15C  
                                        l3411 D790                                          l4035 F04E  
                                        l4043 F11A                                          l4019 EF06  
                                        l4027 EF88                                          l4123 CFCC  
                                        l4109 D0E4                                          l3317 D398  
                                        l3309 D37A                                          l3341 D28C  
                                        l3333 D262                                          l3325 D23A  
                                        l3093 DFCC                                          l3085 DF8E  
                                        l3077 DF54                                          l3069 DF18  
                                        l3261 E564                                          l3253 E50A  
                                        l3245 E4B4                                          l3237 E450  
                                        l3229 E41E                                          l3173 E1F0  
                                        l3165 E1BE                                          l3157 E194  
                                        l3149 E15E                                          l3421 D7DE  
                                        l3413 D7BA                                          l3405 D766  
                                        l3501 CF66                                          l4061 F1C6  
                                        l4045 F148                                          l4053 F17A  
                                        l4037 F096                                          l4029 EFB6  
                                        l4117 CF90                                          l4151 CC4A  
                                        l3319 D3A0                                          l3343 D29A  
                                        l3351 D2C4                                          l3335 D26A  
                                        l3327 D248                                          l3095 DFD6  
                                        l3087 DF9E                                          l3079 DF62  
                                        l3263 E572                                          l3255 E51E  
                                        l3247 E4C2                                          l3239 E47E  
                                        l3191 E27A                                          l3183 E23A  
                                        l3175 E1F6                                          l3167 E1C0  
                                        l3159 E1A4                                          l3431 D80A  
                                        l3415 D7BC                                          l3407 D77C  
                                        l3511 DC0C                                          l3503 CF78  
                                        l4055 F18C                                          l4047 F15A  
                                        l4039 F0EE                                          l4119 CF98  
                                        l4081 CF28                                          l4073 CED2  
                                        l3281 D2EA                                          l3353 D2D4  
                                        l3345 D2B0                                          l3337 D27C  
                                        l3329 D250                                          l3097 DFE4  
                                        l3089 DFB0                                          l3361 D1BA  
                                        l3265 E574                                          l3257 E538  
                                        l3249 E4EC                                          l3193 E296  
                                        l3185 E24A                                          l3177 E216  
                                        l3169 E1D0                                          l2801 E616  
                                        l3273 CE3A                                          l3441 D83A  
                                        l3417 D7CC                                          l3521 DCDA  
                                        l3513 DC20                                          l3601 F392  
                                        l4049 F16E                                          l4153 CCC4  
                                        l4091 D084                                          l4083 D062  
                                        l4075 CF04                                          l3291 D31A  
                                        l3283 D2F8                                          l3355 D2DC  
                                        l3347 D2B8                                          l3339 D284  
                                        l3099 DFF6                                          l3371 D232  
                                        l3363 D1CA                                          l3259 E554  
                                        l3267 E57A                                          l3195 E2A2  
                                        l3187 E254                                          l3179 E226  
                                        l2811 E656                                          l2803 E624  
                                        l3275 CE4A                                          l3443 D84A  
                                        l3427 D7F6                                          l3419 D7D0  
                                        l3531 DD96                                          l3515 DC2E  
                                        l3523 DD0E                                          l3507 DB96  
                                        l3451 D3BA                                          l3611 F40E  
                                        l4059 F198                                          l4155 CCCC  
                                        l4171 D8BC                                          l4163 D86C  
                                        l4093 D088                                          l4085 D07A  
                                        l4077 CF10                                          l4149 CC3E  
                                        l3541 CE84                                          l3293 D31E  
                                        l3285 D300                                          l3349 D2BE  
                                        l3365 D1F8                                          l3381 D6CE  
                                        l3269 E57E                                          l3197 E2AE  
                                        l3189 E26E                                          l2901 E832  
                                        l2821 E690                                          l2813 E658  
                                        l2805 E626                                          l3445 D85A  
                                        l3437 D81E                                          l3429 D800  
                                        l3525 DD4A                                          l3509 DBB6  
                                        l3461 D410                                          l3453 D3CE  
                                        l3701 F856                                          l3613 F418  
                                        l3605 F3C8                                          l4245 EB28  
                                        l4181 D918                                          l4173 D8DA  
                                        l4165 D870                                          l4095 D092  
                                        l4087 D080                                          l4079 CF1C  
                                        l3535 CD14                                          l3543 CE98  
                                        l4247 DAB6                                          l3295 D326  
                                        l3287 D304                                          l3279 D2E6  
                                        l3367 D208                                          l3359 D18C  
                                        l3391 D75C                                          l3383 D6DE  
                                        l3375 D662                                          l3199 E2BC  
                                        l2911 E8AE                                          l2903 E866  
                                        l2831 E6A4                                          l2823 E694  
                                        l2807 E636                                          l2815 E660  
                                        l3439 D82A                                          l3471 D564  
                                        l3527 DD5E                                          l3519 DC9E  
                                        l3463 D414                                          l3455 D3DC  
                                        l3711 F914                                          l3703 F88A  
                                        l3631 F558                                          l3623 F490  
                                        l3607 F3DA                                          l3551 F1DE  
                                        l4191 D964                                          l4183 D928  
                                        l4175 D8E8                                          l4167 D882  
                                        l4097 D0D4                                          l4089 D082  
                                        l3545 CEC6                                          l3297 D338  
                                        l3289 D312                                          l3369 D22C  
                                        l3393 D762                                          l3385 D6EC  
                                        l3377 D690                                          l2921 E8EA  
                                        l2913 E8BE                                          l2905 E868  
                                        l2841 E6B8                                          l2833 E6A8  
                                        l2825 E698                                          l2817 E670  
                                        l2809 E646                                          l3473 D584  
                                        l3529 DD86                                          l2761 D0F6  
                                        l3465 D442                                          l3457 D3E8  
                                        l3449 D3AA                                          l3801 FCD6  
                                        l3721 F9E8                                          l3713 F924  
                                        l3705 F8BC                                          l3641 F5B8  
                                        l3633 F560                                          l3625 F4C4  
                                        l3609 F3F6                                          l3617 F440  
                                        l3561 F232                                          l3553 F1E8  
                                        l4193 D9A2                                          l4185 D938  
                                        l4177 D8F6                                          l4169 D89E  
                                        l4099 D0D6                                          l3547 CECA  
                                        l3539 CE80                                          l3299 D340  
                                        l3387 D6FE                                          l3379 D6A0  
                                        l2931 E916                                          l2923 E8EC  
                                        l2907 E878                                          l2851 E6CC  
                                        l2843 E6BC                                          l2835 E6AC  
                                        l2827 E69C                                          l2819 E682  
                                        l3475 D5C2                                          l3483 D602  
                                        l2755 CC6A                                          l2771 D178  
                                        l2763 D108                                          l3467 D456  
                                        l3459 D3FC                                          l3811 FD08  
                                        l3803 FCDE                                          l3731 FA30  
                                        l3723 F9FC                                          l3715 F958  
                                        l3707 F8D2                                          l3643 F5CA  
                                        l3627 F4CA                                          l3635 F592  
                                        l3619 F45A                                          l3571 F276  
                                        l3563 F23C                                          l3555 F1F8  
                                        l4187 D948                                          l4179 D908  
                                        l3389 D70C                                          l3397 CD4C  
                                        l2941 E94E                                          l2925 E8FA  
                                        l2917 E8D2                                          l2933 E918  
                                        l2909 E888                                          l2861 E72A  
                                        l2845 E6C0                                          l2837 E6B0  
                                        l2829 E6A0                                          l2853 E6D0  
                                        l2781 E5AC                                          l3485 D614  
                                        l3477 D5EA                                          l2757 CC7A  
                                        l2765 D11A                                          l3493 CFF8  
                                        l3813 FD0E                                          l3821 FD5E  
                                        l3805 FCEC                                          l3741 FAEC  
                                        l3733 FA54                                          l3717 F9AE  
                                        l3725 FA00                                          l3709 F904  
                                        l3661 F67A                                          l3645 F5D2  
                                        l3637 F5A2                                          l3629 F524  
                                        l3573 F282                                          l3581 F298  
                                        l3565 F244                                          l3557 F206  
                                        l3901 D470                                          l4189 D958  
                                        ?_pad 0013                                          l3399 CD62  
                                        l2951 E9CC                                          l2927 E902  
                                        l2919 E8DC                                          l2935 E926  
                                        l2871 E760                                          l2863 E740  
                                        l2855 E6D4                                          l2847 E6C4  
                                        l2839 E6B4                                          l2783 E5BC  
                                        l2791 E5E6                                          l2775 E590  
                                        l3479 D5F6                                          l2759 CC36  
                                        l2767 D124                                          l3495 D008  
                                        l3831 FDAE                                          l3823 FD70  
                                        l3815 FD34                                          l3807 FCF4  
                                        l3751 FB32                                          l3743 FAFA  
                                        l3735 FAB8                                          l3727 FA10  
                                        l3719 F9B4                                          l3671 F6B2  
                                        l3663 F682                                          l3655 F616  
                                        l3647 F5EC                                          l3639 F5A6  
                                        l3591 F322                                          l3583 F2BE  
                                        l3575 F28A                                          l3567 F256  
                                        l3559 F20E                                          l3911 D4D0  
                                        l3903 D49A                                          l3921 CC20  
                                        l2961 EA12                                          l2945 E978  
                                        l2953 E9CE                                          l2937 E92A  
                                        l2929 E906                                          l2881 E7B0  
                                        l2873 E76A                                          l2865 E74C  
                                        l2857 E6FE                                          l2849 E6C8  
                                        l2793 E5F6                                          l2785 E5CC  
                                        l2777 E59C                                          l3489 D658  
                                        l2769 D142                                          l3497 CF30  
                                        l3833 FDB6                                          l3825 FD8A  
                                        l3817 FD50                                          l3809 FCFC  
                                        l3761 FB5C                                          l3753 FB36  
                                        l3737 FAC8                                          l3745 FB02  
                                        l3729 FA24                                          l3681 F6FC  
                                        l3673 F6C0                                          l3657 F628  
                                        l3665 F686                                          l3649 F604  
                                        l3593 F33A                                          l3577 F28E  
                                        l3569 F264                                          l3913 D4F2  
                                        l3923 CC2A                                          l2971 EA3C  
                                        l2963 EA20                                          l2955 E9DE  
                                        l2947 E984                                          l2939 E938  
                                        l2891 E7EC                                          l2883 E7C0  
                                        l2875 E78C                                          l2867 E750  
                                        l2859 E71A                                          l2795 E5FC  
                                        l2787 E5DC                                          l2779 E5AA  
                                        l3851 FE40                                          l3843 FE08  
                                        l3835 FDC8                                          l3827 FD90  
                                        l3819 FD58                                          l3771 FB90  
                                        l3763 FB62                                          l3755 FB3C  
                                        l3747 FB14                                          l3739 FADA  
                                        l3691 F742                                          l3683 F70E  
                                        l3675 F6C4                                          l3667 F68E  
                                        l3659 F644                                          l3595 F344  
                                        l3587 F2F4                                          l3579 F292  
                                        l3915 D504                                          l3907 D4A6  
                                        l3931 EA90                                          l3925 CC16  
                                        l3861 D9FC                                          l2973 EA3E  
                                        l2965 EA26                                          l2957 E9EE  
                                        l2949 E992                                          l2893 E7FA  
                                        l2885 E7CE                                          l2877 E79C  
                                        l2869 E75E                                          l2797 E60E  
                                        l2789 E5DE                                          l2981 CE14  
                                        l3853 FE46                                          l3845 FE1A  
                                        l3837 FDCE                                          l3829 FDA2  
                                        l3757 FB48                                          l3749 FB22  
                                        l3765 FB68                                          l3773 FB96  
                                        l3781 FC2E                                          l3693 F7A6  
                                        l3677 F6D6                                          l3685 F716  
                                        l3669 F6A0                                          l3589 F306  
                                        l3917 D536                                          l3909 D4B4  
                                        l3941 EACC                                          l3933 EAA2  
                                        l3871 DA66                                          l3863 DA00  
                                        l2967 EA28                                          l2959 EA0E  
                                        l2895 E7FC                                          l2887 E7DC  
                                        l2799 E610                                          l2983 CE18  
                                        l2991 CDE8                                          l3847 FE26  
                                        l3839 FDD4                                          l3855 FE62  
                                        l3791 FC98                                          l3783 FC4C  
                                        l3775 FBEE                                          l3767 FB7A  
                                        l3759 FB58                                          l3695 F7FE  
                                        l3687 F71E                                          l3679 F6E4  
                                        l3599 F36C                                          l3935 EAA6  
                                        l3927 EA50                                          l3881 DA92  
                                        l3865 DA04                                          l2969 EA2E  
                                        l2897 E806                                          l2889 E7E8  
                                        l2977 CDF6                                          l2985 CDBC  
                                        l3849 FE2E                                          l3793 FC9C  
                                        l3785 FC68                                          l3777 FC22  
                                        l3769 FB8C                                          l3697 F832  
                                        l3689 F72E                                          l3961 EAF8  
                                        l3953 EAE4                                          l3945 EAD4  
                                        l3937 EAB2                                          l3929 EA7E  
                                        l3891 DB4C                                          l3883 DACC  
                                        l3875 DA6C                                          l3867 DA26  
                                        l3859 D9E8                                          l2899 E80C  
                                        l2979 CE02                                          l2987 CDC8  
                                        l2995 CD84                                          l3795 FCAC  
                                        l3787 FC7A                                          l3779 FC2A  
                                        l3699 F838                                          l3971 EBF2  
                                        l3939 EAB6                                          l3963 EB56  
                                        l3893 DB5E                                          l3877 DA82  
                                        l3869 DA62                                          l2989 CDCC  
                                        l3797 FCBE                                          l3789 FC88  
                                        l3973 EC00                                          l3965 EB78  
                                        l3957 EAEC                                          l3949 EADC  
                                        l2999 CCEA                                          l3895 DB70  
                                        l3887 DB08                                          l3879 DA8A  
                                        l3799 FCC6                                          l3991 ECF4  
                                        l3983 EC98                                          l3975 EC0E  
                                        l3967 EB7A                                          l3993 ED22  
                                        l3977 EC36                                          l3985 ECAA  
                                        l3969 EBA8                                          l3995 ED70  
                                        l3987 ECD8                                          l3979 EC48  
                                        l3997 ED98                                          l3989 ECE2  
                                        l3999 EDAA                                          STR_1 FF63  
                                        STR_2 FF3E                                          STR_3 FF17  
                                        STR_4 FED4                                          STR_5 FE89  
                                        STR_6 FFC9                                          STR_7 FF86  
                                        STR_8 FFA8                                          STR_9 FFE7  
                                        u3000 DE8A                                          u3001 DE86  
                                        u3010 DECA                                          u3011 DEC6  
                                        u3100 E044                                          u3020 DF40  
                                        u3101 E040                                          u3021 DF3C  
                                        _LATA 003FBA                                          u3110 E05A  
                                        u3030 DF62                                          _LATB 003FBB  
                                        u3111 E056                                          u3031 DF5E  
                                        _LATC 003FBC                                          u3120 E06E  
                                        u3040 DF8C                                          u3200 E1BE  
                                        u4000 F2EE                                          _LATD 003FBD  
                                        u3121 E06A                                          u3041 DF88  
                                        u3201 E1BA                                          _LATE 003FBE  
                                        u3130 E088                                          u3050 DFB0  
                                        u3210 E1D0                                          u4010 F306  
                                        u3131 E084                                          u3051 DFAC  
                                        u3211 E1CC                                          u4011 F302  
                                        u3140 E0D0                                          u3060 DFC6  
                                        u3300 E494                                          u3220 E1E0  
                                        u2500 D178                                          u4100 F5CA  
                                        u4020 F392                                          u3141 E0CC  
                                        u3061 DFC2                                          u3301 E490  
                                        u3221 E1DC                                          u2501 D174  
                                        u4101 F5C6                                          u4021 F38E  
                                        u3150 E100                                          u3070 DFE4  
                                        u3310 E4A8                                          u3230 E216  
                                        u2510 E5AA                                          u4110 F5EC  
                                        u4030 F3C0                                          u3151 E0FC  
                                        u3071 DFE0                                          u3311 E4A4  
                                        u3231 E212                                          u2511 E5A6  
                                        u4111 F5E8                                          u4031 F3BA  
                                        u3400 D372                                          u3160 E12E  
                                        u3080 E004                                          u3320 E4C2  
                                        u3240 E226                                          u2600 E6FE  
                                        u2520 E5BC                                          u4200 F6E4  
                                        u4120 F612                                          u4040 F3C2  
                                        u3401 D36E                                          u3161 E12A  
                                        u3081 E000                                          u3321 E4BE  
                                        u3241 E222                                          u2601 E6FA  
                                        u2521 E5B8                                          u4201 F6E0  
                                        u4121 F60E                                          u3410 D398  
                                        u3090 E016                                          u3330 E50A  
                                        u3250 E3C4                                          u3170 E15C  
                                        u2610 E716                                          u2530 E5CC  
                                        u4210 F70E                                          u4130 F628  
                                        u4050 F3DA                                          u3411 D394  
                                        u3091 E012                                          u3331 E506  
                                        u3171 E158                                          u2611 E710  
                                        u2531 E5C8                                          u4211 F70A  
                                        u4131 F624                                          u4051 F3D6  
                                        u3420 D248                                          u3500 D22C  
                                        u3340 E538                                          u3260 E41E  
                                        u3180 E16E                                          u2700 E7FA  
                                        u2620 E718                                          u2540 E60E  
                                        u2460 CC7A                                          u4300 FADA  
                                        u4220 F856                                          u4140 F644  
                                        u4060 F48C                                          u3421 D244  
                                        u3501 D228                                          u3341 E534  
                                        u3261 E41A                                          u3181 E16A  
                                        u2701 E7F6                                          u2541 E60A  
                                        u2461 CC76                                          u4301 FAD6  
                                        u4221 F852                                          u4141 F640  
                                        u4061 F488                                          u3430 D262  
                                        u3510 D690                                          u3350 E572  
                                        u3270 E43E                                          u3190 E17E  
                                        u2710 E832                                          u2630 E740  
                                        u2550 E624                                          u2470 D108  
                                        u4310 FAEC                                          u4230 F8BC  
                                        u4150 F67A                                          u4070 F520  
                                        u3431 D25E                                          u3511 D68C  
                                        u3351 E56E                                          u3271 E43A  
                                        u3255 E3BA                                          u3191 E17A  
                                        u2711 E82E                                          u2631 E73C  
                                        u2551 E620                                          u2471 D104  
                                        u4311 FAE8                                          u4231 F8B8  
                                        u4151 F676                                          u4071 F51C  
                                        u3360 D2F8                                          u3440 D27C  
                                        u3520 D6CE                                          u3280 E450  
                                        u2800 E94E                                          u2720 E878  
                                        u2640 E75E                                          u2560 E636  
                                        u3600 D7F2                                          u2480 D11A  
                                        u4400 FCBE                                          u4320 FAFA  
                                        u4240 F904                                          u4160 F6A0  
                                        u4080 F592                                          u3361 D2F4  
                                        u3441 D278                                          u3521 D6CA  
                                        u3281 E44C                                          u2801 E94A  
                                        u2721 E874                                          u2641 E75A  
                                        u2561 E632                                          u3601 D7EE  
                                        u2481 D116                                          u4401 FCBA  
                                        u4321 FAF6                                          u4241 F900  
                                        u4161 F69C                                          u4081 F58E  
                                        u3370 D312                                          u3450 D29A  
                                        u3530 D6EC                                          u3290 E47E  
                                        u2810 E964                                          u2730 E8AE  
                                        u2650 E77E                                          u2570 E646  
                                        u3610 D81A                                          u2490 D142  
                                        u4410 FCEC                                          u4330 FB14  
                                        u4250 F914                                          u4170 F6B2  
                                        u4090 F5B8                                          u3371 D30E  
                                        u3451 D296                                          u3531 D6E8  
                                        u3291 E47A                                          u2811 E960  
                                        u2731 E8AA                                          u2651 E77A  
                                        u2571 E642                                          u3611 D816  
                                        u2491 D13E                                          u4411 FCE8  
                                        u4331 FB10                                          u4251 F910  
                                        u4171 F6AE                                          u4091 F5B4  
                                        u4500 DA7E                                          u3380 D338  
                                        u3460 D2B0                                          u3540 D70C  
                                        u2820 E978                                          u2740 E8BE  
                                        u2660 E78C                                          u2580 E682  
                                        u3620 D83A                                          u3700 D5EA  
                                        u2900 CE38                                          u4420 FD70  
                                        u4340 FB22                                          u4260 F9AE  
                                        u4180 F6C0                                          u4501 DA7A  
                                        u3381 D334                                          u3461 D2AC  
                                        u3541 D708                                          u2821 E974  
                                        u2741 E8BA                                          u2661 E788  
                                        u2581 E67E                                          u3621 D836  
                                        u3701 D5E6                                          u2901 CE34  
                                        u4421 FD6C                                          u4341 FB1E  
                                        u4261 F9AA                                          u4181 F6BC  
                                        u4510 DB46                                          u3390 D356  
                                        u3470 D2D4                                          u3550 D75C  
                                        u2830 E992                                          u2750 E8EA  
                                        u2670 E79C                                          u2590 E690  
                                        u3630 D84A                                          u3710 D614  
                                        u2910 CDE8                                          u4430 FD8A  
                                        u4350 FB7A                                          u4270 F9FC  
                                        u4190 F6D6                                          u4511 DB40  
                                        u3391 D352                                          u3471 D2D0  
                                        u3551 D758                                          u2831 E98E  
                                        u2751 E8E6                                          u2671 E798  
                                        u2591 E68C                                          u3631 D846  
                                        u3711 D610                                          u2911 CDE4  
                                        u4431 FD86                                          u4351 FB76  
                                        u4271 F9F8                                          u4191 F6D2  
                                        u4520 DB48                                          u3480 D1BA  
                                        u3560 CD62                                          u2840 E9CC  
                                        u2760 E8FA                                          u2680 E7CE  
                                        u3800 DBDE                                          u3640 D3BA  
                                        u2920 CDB4                                          u4440 FDA2  
                                        u4360 FC4C                                          u4280 FA24  
                                        u4600 EA7E                                          u3481 D1B6  
                                        u3561 CD5E                                          u2841 E9C8  
                                        u2761 E8F6                                          u2681 E7CA  
                                        u3641 D3B6                                          u2921 CDAE  
                                        u4441 FD9E                                          u4361 FC48  
                                        u4281 FA20                                          u4601 EA7A  
                                        u4530 DB5E                                          u3490 D1F8  
                                        u2850 E9DE                                          u2770 E916  
                                        u2690 E7DC                                          u3570 D77C  
                                        u3730 D64E                                          u3810 DC0C  
                                        u3650 D3DC                                          u2930 CDB6  
                                        u4450 FE02                                          u4370 FC68  
                                        u4290 FAC8                                          u4610 EB68  
                                        u4531 DB5A                                          u3491 D1F4  
                                        u2851 E9DA                                          u2771 E912  
                                        u2691 E7D8                                          u3571 D778  
                                        u3731 D648                                          u3811 DC08  
                                        u3651 D3D8                                          u4451 FDFC  
                                        u4371 FC64                                          u4291 FAC4  
                                        u4611 EB64                                          u3900 CD44  
                                        u4540 DB70                                          u2940 DDC2  
                                        u2860 E9EE                                          u2780 E926  
                                        u3580 D7B0                                          u3740 D650  
                                        u3820 DC2E                                          u3660 D432  
                                        u4460 FE04                                          u4380 FC7A  
                                        u4700 EDF4                                          u4620 EB78  
                                        _PMD0 0039C0                                          u3901 CD3E  
                                        u4541 DB6C                                          u2941 DDBE  
                                        u2861 E9EA                                          u2781 E922  
                                        u3725 D626                                          u3821 DC2A  
                                        u3805 DBD4                                          u3661 D42E  
                                        u4381 FC76                                          u4701 EDEE  
                                        u4621 EB74                                          _PMD1 0039C1  
                                        u3910 CD46                                          u2950 DDD4  
                                        u2870 EA0E                                          u2790 E938  
                                        u3590 D7DE                                          u3670 D442  
                                        u3750 D04E                                          u4470 FE1A  
                                        u4390 FC88                                          u4550 D49A  
                                        u4710 EDF6                                          u4630 EBA8  
                                        _PMD2 0039C2                                          u2951 DDD0  
                                        u2871 EA0A                                          u2791 E934  
                                        u3591 D7DA                                          u3671 D43E  
                                        u4471 FE16                                          u4391 FC84  
                                        u4551 D496                                          u4631 EBA4  
                                        _PMD3 0039C3                                          u3920 CE98  
                                        u4480 DA26                                          u2960 DDE4  
                                        u2880 EA20                                          u3680 D5A4  
                                        u3840 DC9A                                          u3760 D060  
                                        u4560 D4D0                                          u4800 F148  
                                        u4720 EE0C                                          u4640 EC00  
                                        _PMD4 0039C4                                          u3921 CE94  
                                        u4481 DA22                                          u2961 DDE0  
                                        u2881 EA1C                                          u3585 D7A6  
                                        u3841 DC96                                          u3761 D05C  
                                        u4561 D4CC                                          u4801 F144  
                                        u4721 EE08                                          u4641 EBFC  
                                        _PMD5 0039C5                                          u3930 CEC6  
                                        u4490 DA62                                          u2970 DE28  
                                        u2890 EA3C                                          u3690 D5C2  
                                        u3850 DCBE                                          u3770 CF60  
                                        u4570 D4F2                                          u4730 EE46  
                                        u4650 EC92                                          u4810 CFEE  
                                        _PMD6 0039C6                                          u3931 CEC2  
                                        u4491 DA5E                                          u2971 DE24  
                                        u2891 EA38                                          u3691 D5BE  
                                        u3835 DC42                                          u3771 CF5A  
                                        u4571 D4EE                                          u4731 EE42  
                                        u4651 EC8C                                          u4811 CFEA  
                                        _PMD7 0039C7                                          u2980 DE3A  
                                        u3860 DCDA                                          u3836 DC4C  
                                        u3780 CF62                                          u3940 F206  
                                        u4580 D504                                          u4740 EE94  
                                        u4660 EC94                                          u2981 DE36  
                                        u3685 D59A                                          u3861 DCD6  
                                        u3837 DC5C                                          u3757 D040  
                                        u3941 F202                                          u4581 D500  
                                        u4741 EE90                                          u2990 DE4A  
                                        u3870 DD2E                                          u3790 CF78  
                                        u3950 F256                                          u4590 D536  
                                        u4750 EEE4                                          u4670 ECAA  
                                        u2991 DE46                                          u3855 DCB4  
                                        u3791 CF74                                          u3951 F252  
                                        u4591 D532                                          u4751 EEE0  
                                        u4671 ECA6                                          u3880 DD4A  
                                        u3960 F264                                          u4760 EFB6  
                                        u4680 ECD8                                          u3881 DD46  
                                        u3961 F260                                          u4761 EFB2  
                                        u4681 ECD4                                          u3890 DD86  
                                        u3970 F276                                          u4770 F036  
                                        u4690 ED22                                          u3891 DD82  
                                        u3875 DD24                                          u3971 F272  
                                        u4771 F030                                          u4691 ED1E  
                                        u3980 F2BE                                          u4780 F038  
                                        u3981 F2BA                                          u3990 F2EC  
                                        u4790 F04E                                          u3991 F2E6  
                                        u4791 F04A                                          _WPUA 003A41  
                                        _WPUB 003A51                                          _WPUC 003A61  
                                        _WPUD 003A71                                          _WPUE 003A81  
                                        _dbuf 0100                                          _atoi D9E8  
                                        _main D86C                                          _prec 00CE  
                                        _nout 00CA                                          pad@i 001A  
                                        pad@p 0017                                          fsr0h 003FEA  
                                        fsr1h 003FE2                                          indf0 003FEF  
                                        fsr2h 003FDA                                          fsr0l 003FE9  
                                        indf2 003FDF                                          fsr1l 003FE1  
                                        pad@w 001C                                          fsr2l 003FD9  
                               ___fpclassifyf D564                                          prodh 003FF4  
                                        prodl 003FF3                                          start FFFC  
                             ___fldiv@new_exp 0012                                  _tolower$1064 000D  
                                ___param_bank 000000                                         ??_pad 0019  
              __size_of_OSCILLATOR_Initialize 0018                 __end_of_OSCILLATOR_Initialize CC68  
                               ___fltol@sign1 0009                                         ?_atoi 0008  
                             __end_of___fladd EA50                                         ?_main 0001  
                             __end_of___fldiv E142                               __end_of___awdiv D3AA  
                             __end_of___flneg CD84                                         STR_10 FFEF  
                                       STR_13 FFEB                                         STR_14 FFF3  
                                       STR_17 FFF7                                         STR_19 FFF7  
                             __end_of___awmod D2E6                               __end_of___flmul E590  
                             __end_of___flsub CE80                               __end_of___fltol D86C  
                             ___awdiv@divisor 0003                                         _U2P1L 003DD4  
                                       _U2P2L 003DD6                                         _U2P3L 003DD8  
                                       _U2UIR 003DE0                                         _U2RXB 003DD0  
                                       _U2TXB 003DD2                               ___awdiv@counter 0005  
                                       _OSCEN 0039DD                                  vfpfcnvrt@fmt 003C  
                                       _TRISA 003FC2                                         _TRISB 003FC3  
                                       _TRISC 003FC4                                         _TRISD 003FC5  
                                       _TRISE 003FC6                                         _flags 00D0  
                                       _fputc D0F6                                         _fputs CDF6  
                             __end_of_isdigit CD4C                                         atoi@n 0015  
                                       pad@fp 0013                                         atoi@s 0008  
                                       _width 00CC                                         _putch CC34  
                                       main@a 00A6                                         main@b 00AA  
                                       main@c 00AE                                         main@d 00B2  
                                       main@e 00B6                                         main@f 00BA  
                                       main@x 00BE                               __end_of_isspace CED2  
                             __end_of_isupper CDBC                                         tablat 003FF5  
                                       status 003FD8                                ?___fpclassifyf 0001  
                             __end_of_tolower CF90                               __end_of_strncmp D564  
              ??_UART2_SetOverrunErrorHandler 0003                               __initialization CC82  
                                __end_of_atoi DB96                                  __end_of_main D9E8  
                                ?_UART2_Write 0001                                        ??_atoi 000A  
                                      ??_main 0060                                 __activetblptr 000003  
                                      ?_fputc 0003                                        ?_fputs 000C  
                            ___awdiv@dividend 0001                                        _ANSELA 003A40  
                                      ?_putch 0001                                        _ANSELB 003A50  
                                      _ANSELC 003A60                                        _ANSELD 003A70  
                                      _ANSELE 003A80                                        _RB1I2C 003A5A  
                                      _RB2I2C 003A5B                                        _RD0I2C 003A7A  
                                      _RC3I2C 003A6A                                        _RD1I2C 003A7B  
                                      _RC4I2C 003A6B                                        _U2CON0 003DDA  
                                      _U2CON1 003DDB                                        _U2CON2 003DDC  
                                      _U2BRGH 003DDE                                        _U2FIFO 003DDF  
                                      _U2BRGL 003DDD                                        _RB6PPS 003A0E  
                                      _ODCONA 003A42                                        _ODCONB 003A52  
                                      _ODCONC 003A62                                        _ODCOND 003A72  
                                      _ODCONE 003A82                                        _INLVLA 003A44  
                                      _INLVLB 003A54                                        _INLVLC 003A64  
                                      _INLVLD 003A74                                        _INLVLE 003A84  
                                      _OSCFRQ 0039DF                                 vfpfcnvrt@done 0044  
                            _UART2_Initialize CED2                     _UART2_OverrunErrorHandler 00D5  
                                vfprintf@cfmt 005A                                        ___flge D662  
                                      ___fleq D18C                                     ??___fladd 0009  
                                      ___wmul CCEA                                     ??___fldiv 0009  
                                   ??___awdiv 0005                                     ??___flneg 0005  
                                   ??___awmod 0005                                     ??___flmul 0009  
                                   ??___flsub 0022                                     ??___fltol 0005  
                                      _efgtoa F1DE                                        _floorf DB96  
                                      clear_0 CC88                                        clear_1 CC94  
                            ___awdiv@quotient 0007                               ___awmod@divisor 0003  
                             ___awmod@counter 0005                                        _printf CCC4  
                                      pad@buf 0015                                        _strcpy CFF8  
                                      _strlen CDBC                                        fputc@c 0003  
                              _PMD_Initialize CCA0                                        fputs@c 0010  
                                      fputs@i 0011                                        fputs@s 000C  
                                   ??_isdigit 0003                               ___fpclassifyf@e 0009  
                             ___fpclassifyf@u 000B                               ___fpclassifyf@x 0001  
                                __mediumconst FE88                                     ??_isspace 0003  
                                      tblptrh 003FF7                                     ??_isupper 0003  
                                      tblptrl 003FF6                                        tblptru 003FF8  
                            __end_of_vfprintf CFF8                                     ??_tolower 0009  
                                   ??_strncmp 0007                                    ___flge@ff1 001A  
                                  ___flge@ff2 001E                               ??___fpclassifyf 0005  
                           _SYSTEM_Initialize CC3E                                    ___fleq@ff1 0001  
                                  ___fleq@ff2 0005                                    __accesstop 0060  
                     __end_of__initialization CC9A                                    ___flneg@f1 0001  
                          ?_SYSTEM_Initialize 0001                                 ___rparam_used 000001  
                                  ___fltol@f1 0001                                __pcstackCOMRAM 0001  
                       _UART2_SetErrorHandler CC16                           ??_SYSTEM_Initialize 0003  
                               __end_of_fputc D18C                                 __end_of_fputs CE3A  
                               __end_of_putch CC3E                        __end_of_PMD_Initialize CCC4  
                                     ??_fputc 0007                     __end_of_SYSTEM_Initialize CC50  
                                     ??_fputs 0010                                       ??_putch 0002  
                                  __pbssBANK0 00C2                                    __pbssBANK1 0100  
                                  _efgtoa$910 0060                                    _efgtoa$911 0062  
                                  _efgtoa$920 0066                                    _efgtoa$921 0068  
                                  _efgtoa$922 006A                                    _efgtoa$916 0064  
                                     ?___flge 001A                                       ?___fleq 0001  
                                     ?___wmul 0001          __end_of_UART2_SetFramingErrorHandler CC2A  
       __size_of_UART2_SetFramingErrorHandler 000A                  _UART2_SetFramingErrorHandler CC20  
                                     ?_efgtoa 002E                                       ?_floorf 001A  
                                     ?_printf 0098                               ?_PMD_Initialize 0001  
                                     ?_strcpy 0001                                       ?_strlen 0001  
                                     _U2ERRIE 003DE2                                       _U2ERRIR 003DE1  
                        __size_of_UART2_Write 001A                                       _U2RXPPS 003AE8  
                                     _OSCCON1 0039D9                                       _OSCCON3 0039DB  
                          __size_of_vfpfcnvrt 078E                                       _OSCTUNE 0039DE  
                                     _SLRCONA 003A43                                       _SLRCONB 003A53  
                                     _SLRCONC 003A63                                       _SLRCOND 003A73  
                                     _SLRCONE 003A83                                       __Hparam 0000  
                      ?_UART2_SetErrorHandler 0001                                       __Lparam 0000  
                             __size_of___flge 0104                               __size_of___fleq 00AA  
                                     ___fladd E590                                       ___fldiv DDA8  
                                     ___awdiv D2E6                                       ___flneg CD4C  
                                     ___awmod D236                                       ___flmul E142  
                                     ___flsub CE3A                                       ___fltol D766  
                             __size_of___wmul 002A                                     ?_vfprintf 0054  
                             __size_of_efgtoa 0CAA                 ?_UART2_SetFramingErrorHandler 0001  
                             __size_of_floorf 0212                                       __pcinit CC82  
                                     __ramtop 1000                                       __ptext0 D86C  
                                     __ptext1 CCC4                                       __ptext2 CF90  
                                     __ptext3 EA50                                       __ptext4 D470  
                                     __ptext5 F1DE                                       __ptext6 CF30  
                                     __ptext7 CD84                                       __ptext8 CFF8  
                                     __ptext9 D3AA                               __size_of_printf 0026  
                             __size_of_strcpy 006A                               __size_of_strlen 003A  
            _UART2_DefaultOverrunErrorHandler 000000                         _OSCILLATOR_Initialize CC50  
                                __size_of_pad 00C6                                       _isdigit CD14  
                            ___awmod@dividend 0001                      ??_PIN_MANAGER_Initialize 0001  
                                     _isspace CE80                      __end_of_UART2_Initialize CF30  
                                     _isupper CD84                                       efgtoa@c 0034  
                                     efgtoa@d 0078                                       efgtoa@e 0090  
                                     efgtoa@f 0030                                       efgtoa@g 008C  
                                     efgtoa@h 0082                                       efgtoa@i 008A  
                                     efgtoa@l 0086                                       efgtoa@m 0072  
                                     efgtoa@n 0092                                       efgtoa@p 007C  
                                     efgtoa@t 006C                                       efgtoa@u 0094  
                                     efgtoa@w 007E                                       atoi@neg 000E  
                  __size_of_SYSTEM_Initialize 0012                                       _tolower CF30  
                                     _strncmp D470                          end_of_initialization CC9A  
                                     floorf@e 0028                                       floorf@m 0024  
                                     floorf@u 002A                                       floorf@x 001A  
                                     fputc@fp 0005                                       fputs@fp 000E  
                           __end_of_vfpfcnvrt F1DE                                    efgtoa@mode 0081  
                                  efgtoa@sign 007A                                       postdec2 003FDD  
                                     postinc0 003FEE                                       postinc1 003FE6  
                                     postinc2 003FDE                                    ??_vfprintf 005A  
                                     strcpy@d 0009                                       strlen@a 0003  
                                     strcpy@s 0007                                       strlen@s 0001  
                                 ___fladd@grs 0010                                   ___fldiv@grs 0014  
                                 ___fldiv@rem 000D                                   ___flmul@grs 000E  
                              __end_of___flge D766                                __end_of___fleq D236  
                                 vfpfcnvrt@ap 003E                                   vfpfcnvrt@ct 0050  
                                 vfpfcnvrt@fp 003A                                __end_of___wmul CD14  
                              __end_of_efgtoa FE88                                __end_of_floorf DDA8  
                      ?_OSCILLATOR_Initialize 0001                                    floorf@F527 00C2  
                              __end_of_printf CCEA                                __end_of_strcpy D062  
                              __end_of_strlen CDF6                ??_UART2_SetFramingErrorHandler 0003  
                         start_initialization CC82               __size_of_PIN_MANAGER_Initialize 0094  
                                 __end_of_pad D470                     _UART2_DefaultErrorHandler 000000  
                                 putch@txData 0002                         __end_of___fpclassifyf D662  
                                 vfprintf@fmt 0056                                      ??___flge 0022  
                                    ??___fleq 0009                              ??_PMD_Initialize 0001  
                                    ??___wmul 0005                                      ??_efgtoa 0035  
                                    ??_floorf 001E                             UART2_Write@txData 0001  
                                    ??_printf 005C                                      ??_strcpy 0005  
                                    ??_strlen 0003                                     ___fladd@a 0005  
                                   ___fladd@b 0001                                     ___fldiv@a 0005  
                                   ___fldiv@b 0001                                     ___flmul@a 0005  
                                   ___flmul@b 0001                                     ___flsub@a 001E  
                                   ___flsub@b 001A                     _UART2_FramingErrorHandler 00D7  
                               __pcstackBANK0 0060                       ??_UART2_SetErrorHandler 0003  
                                   __pnvBANK0 00D3                        _PIN_MANAGER_Initialize D062  
                               __pmediumconst FE88                                      ?___fladd 0001  
                                    ?___fldiv 0001                                      ?___awdiv 0001  
                                    ?___flneg 0001                                      ?___awmod 0001  
                                    ?___flmul 0001                                      ?___flsub 001A  
                                    ?___fltol 0001                                 ??_UART2_Write 0001  
                           __size_of_vfprintf 0068                                      ?_isdigit 0001  
                                    ?_isspace 0001                                      ?_isupper 0001  
                           ?_UART2_Initialize 0001                                      ?_tolower 0007  
                              __size_of_fputc 0096                                __size_of_fputs 0044  
                                    ?_strncmp 0001                            ??_UART2_Initialize 0003  
                              __size_of_putch 000A                              _uart2RxLastError 00D2  
                                 _U2ERRIRbits 003DE1                                ___wmul@product 0005  
       UART2_SetErrorHandler@interruptHandler 0001                                      _PIR6bits 0039A6  
                                   _vfpfcnvrt EA50                             ___wmul@multiplier 0001  
                          _UART2_ErrorHandler 00D3                           __end_of_UART2_Write CC82  
                                _isspace$1006 0007                                    vfpfcnvrt@c 0053  
                                  vfpfcnvrt@f 004C                                      __Hrparam 0000  
                                  vfprintf@ap 0058                                      __Lrparam 0000  
                                  vfprintf@fp 0054                       ??_OSCILLATOR_Initialize 0001  
                            __size_of___fladd 04C0                              __size_of___fldiv 039A  
                            __size_of___awdiv 00C4                              __size_of___flneg 0038  
                            __size_of___awmod 00B0                              __size_of___flmul 044E  
                            __size_of___flsub 0046                              __size_of___fltol 0106  
                                  ?_vfpfcnvrt 003A                            ___fpclassifyf@F465 00C6  
                                    _atoi$975 0010                                      _atoi$976 0014  
                                    _atoi$977 0012                              __size_of_isdigit 0038  
                            __size_of_isspace 0052                                      __ptext10 CDBC  
                                    __ptext11 CDF6                                      __ptext20 CD4C  
                                    __ptext12 D0F6                                      __ptext21 E142  
                                    __ptext13 CC34                                      __ptext30 CCEA  
                                    __ptext22 D662                                      __ptext14 CC68  
                                    __ptext31 CC3E                                      __ptext23 D18C  
                                    __ptext15 DB96                                      __ptext32 CED2  
                                    __ptext24 DDA8                                      __ptext16 D564  
                                    __ptext33 CC2A                                      __ptext25 D236  
                                    __ptext17 D766                                      __ptext34 CC20  
                                    __ptext26 D2E6                                      __ptext18 CE3A  
                                    __ptext35 CC16                                      __ptext27 D9E8  
                                    __ptext19 E590                                      __ptext36 CCA0  
                                    __ptext28 CE80                                      __ptext37 D062  
                                    __ptext29 CD14                                      __ptext38 CC50  
                            __size_of_isupper 0038                              __size_of_tolower 0060  
                                  _U2CON0bits 003DDA                                    strcpy@dest 0001  
                            __size_of_strncmp 00F4                                 __size_of_atoi 01AE  
                               __size_of_main 017C              _UART2_DefaultFramingErrorHandler 000000  
                                    efgtoa@fp 002E                                      efgtoa@ne 0070  
                                    efgtoa@pp 006E                                      efgtoa@ou 0074  
UART2_SetOverrunErrorHandler@interruptHandler 0001                                      _vfprintf CF90  
                                   printf@fmt 0098                                   _UART2_Write CC68  
                                    isdigit@c 0001          __end_of_UART2_SetOverrunErrorHandler CC34  
       __size_of_UART2_SetOverrunErrorHandler 000A                  _UART2_SetOverrunErrorHandler CC2A  
                                    isspace@c 0001                       ?_PIN_MANAGER_Initialize 0001  
                                   strcpy@src 0003                __size_of_UART2_SetErrorHandler 000A  
                                    isupper@c 0001                 __end_of_UART2_SetErrorHandler CC20  
                                   strncmp@_l 0001                                     strncmp@_r 0003  
                                 efgtoa@nmode 0080                                      printf@ap 005E  
UART2_SetFramingErrorHandler@interruptHandler 0001                                   ??_vfpfcnvrt 0040  
                               _vfpfcnvrt$941 004A                                 _vfpfcnvrt$936 0046  
                               _vfpfcnvrt$937 0048                                      tolower@c 0007  
                      __size_of___fpclassifyf 00FE                                      strncmp@l 0008  
                                    strncmp@n 0005                                      strncmp@r 000A  
                               ___fladd@signs 000D                __end_of_PIN_MANAGER_Initialize D0F6  
               ?_UART2_SetOverrunErrorHandler 0001                                  ___fladd@aexp 000E  
                                ___fladd@bexp 000F                     __size_of_UART2_Initialize 005E  
