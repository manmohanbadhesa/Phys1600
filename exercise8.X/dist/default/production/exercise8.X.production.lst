

Microchip MPLAB XC8 Assembler V2.30 build 20200825195618 
                                                                                               Sun Nov 08 04:46:09 2020

Microchip MPLAB XC8 C Compiler v2.30 (Free license) build 20200825195618 Og1 
     1                           	processor	18F46K42
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     7                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
     8                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=3
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=3
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=3
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=3
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=3
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=3
    46                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    47                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=3
    48                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    49                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    50                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    51  0000                     
    52                           ; Version 2.20
    53                           ; Generated 05/05/2020 GMT
    54                           ; 
    55                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    56                           ; All rights reserved.
    57                           ; 
    58                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    59                           ; 
    60                           ; Redistribution and use in source and binary forms, with or without modification, are
    61                           ; permitted provided that the following conditions are met:
    62                           ; 
    63                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    64                           ;        conditions and the following disclaimer.
    65                           ; 
    66                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    67                           ;        of conditions and the following disclaimer in the documentation and/or other
    68                           ;        materials provided with the distribution.
    69                           ; 
    70                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    71                           ;        software without specific prior written permission.
    72                           ; 
    73                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    74                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    75                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    76                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    77                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    78                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    79                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    80                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    81                           ; 
    82                           ; 
    83                           ; Code-generator required, PIC18F46K42 Definitions
    84                           ; 
    85                           ; SFR Addresses
    86  0000                     
    87                           	psect	idataBANK1
    88  001B80                     __pidataBANK1:
    89                           	callstack 0
    90                           
    91                           ;initializer for main@F16340
    92  001B80  68                 	db	104
    93  001B81  65                 	db	101
    94  001B82  6C                 	db	108
    95  001B83  6C                 	db	108
    96  001B84  6F                 	db	111
    97  001B85  00                 	db	0
    98                           
    99                           	psect	nvBANK0
   100  0000FE                     __pnvBANK0:
   101                           	callstack 0
   102  0000FE                     _UART2_FramingErrorHandler:
   103                           	callstack 0
   104  0000FE                     	ds	2
   105                           
   106                           	psect	nvBANK1
   107  000175                     __pnvBANK1:
   108                           	callstack 0
   109  000175                     _UART2_ErrorHandler:
   110                           	callstack 0
   111  000175                     	ds	2
   112  000177                     _UART2_OverrunErrorHandler:
   113                           	callstack 0
   114  000177                     	ds	2
   115  0000                     _PMD7	set	14791
   116  0000                     _PMD6	set	14790
   117  0000                     _PMD5	set	14789
   118  0000                     _PMD4	set	14788
   119  0000                     _PMD3	set	14787
   120  0000                     _PMD2	set	14786
   121  0000                     _PMD1	set	14785
   122  0000                     _PMD0	set	14784
   123  0000                     _OSCTUNE	set	14814
   124  0000                     _OSCFRQ	set	14815
   125  0000                     _OSCEN	set	14813
   126  0000                     _OSCCON3	set	14811
   127  0000                     _OSCCON1	set	14809
   128  0000                     _PIR6bits	set	14758
   129  0000                     _RB6PPS	set	14862
   130  0000                     _U2RXPPS	set	15080
   131  0000                     _INLVLE	set	14980
   132  0000                     _INLVLD	set	14964
   133  0000                     _INLVLC	set	14948
   134  0000                     _INLVLB	set	14932
   135  0000                     _INLVLA	set	14916
   136  0000                     _SLRCONE	set	14979
   137  0000                     _SLRCOND	set	14963
   138  0000                     _SLRCONC	set	14947
   139  0000                     _SLRCONB	set	14931
   140  0000                     _SLRCONA	set	14915
   141  0000                     _ODCOND	set	14962
   142  0000                     _ODCONC	set	14946
   143  0000                     _ODCONB	set	14930
   144  0000                     _ODCONA	set	14914
   145  0000                     _ODCONE	set	14978
   146  0000                     _RD1I2C	set	14971
   147  0000                     _RD0I2C	set	14970
   148  0000                     _RC4I2C	set	14955
   149  0000                     _RC3I2C	set	14954
   150  0000                     _RB2I2C	set	14939
   151  0000                     _RB1I2C	set	14938
   152  0000                     _WPUC	set	14945
   153  0000                     _WPUA	set	14913
   154  0000                     _WPUB	set	14929
   155  0000                     _WPUE	set	14977
   156  0000                     _WPUD	set	14961
   157  0000                     _ANSELA	set	14912
   158  0000                     _ANSELE	set	14976
   159  0000                     _ANSELB	set	14928
   160  0000                     _ANSELC	set	14944
   161  0000                     _ANSELD	set	14960
   162  0000                     _U2TXB	set	15826
   163  0000                     _U2RXB	set	15824
   164  0000                     _U2ERRIRbits	set	15841
   165  0000                     _U2CON0bits	set	15834
   166  0000                     _U2ERRIE	set	15842
   167  0000                     _U2ERRIR	set	15841
   168  0000                     _U2UIR	set	15840
   169  0000                     _U2FIFO	set	15839
   170  0000                     _U2BRGH	set	15838
   171  0000                     _U2BRGL	set	15837
   172  0000                     _U2CON2	set	15836
   173  0000                     _U2CON1	set	15835
   174  0000                     _U2CON0	set	15834
   175  0000                     _U2P3L	set	15832
   176  0000                     _U2P2L	set	15830
   177  0000                     _U2P1L	set	15828
   178  0000                     _TRISD	set	16325
   179  0000                     _TRISC	set	16324
   180  0000                     _TRISB	set	16323
   181  0000                     _TRISA	set	16322
   182  0000                     _TRISE	set	16326
   183  0000                     _LATC	set	16316
   184  0000                     _LATB	set	16315
   185  0000                     _LATA	set	16314
   186  0000                     _LATD	set	16317
   187  0000                     _LATE	set	16318
   188                           
   189                           	psect	smallconst
   190  001000                     __psmallconst:
   191                           	callstack 0
   192  001000  00                 	db	0
   193  001001                     STR_4:
   194  001001  0A                 	db	10
   195  001002  0D                 	db	13
   196  001003  46                 	db	70	;'F'
   197  001004  69                 	db	105	;'i'
   198  001005  72                 	db	114	;'r'
   199  001006  73                 	db	115	;'s'
   200  001007  74                 	db	116	;'t'
   201  001008  20                 	db	32
   202  001009  4E                 	db	78	;'N'
   203  00100A  61                 	db	97	;'a'
   204  00100B  6D                 	db	109	;'m'
   205  00100C  65                 	db	101	;'e'
   206  00100D  3A                 	db	58	;':'
   207  00100E  20                 	db	32
   208  00100F  25                 	db	37
   209  001010  73                 	db	115	;'s'
   210  001011  0A                 	db	10
   211  001012  0D                 	db	13
   212  001013  4C                 	db	76	;'L'
   213  001014  61                 	db	97	;'a'
   214  001015  73                 	db	115	;'s'
   215  001016  74                 	db	116	;'t'
   216  001017  20                 	db	32
   217  001018  4E                 	db	78	;'N'
   218  001019  61                 	db	97	;'a'
   219  00101A  6D                 	db	109	;'m'
   220  00101B  65                 	db	101	;'e'
   221  00101C  3A                 	db	58	;':'
   222  00101D  20                 	db	32
   223  00101E  25                 	db	37
   224  00101F  73                 	db	115	;'s'
   225  001020  00                 	db	0
   226  001021                     STR_1:
   227  001021  0A                 	db	10
   228  001022  0D                 	db	13
   229  001023  0A                 	db	10
   230  001024  0D                 	db	13
   231  001025  45                 	db	69	;'E'
   232  001026  6E                 	db	110	;'n'
   233  001027  74                 	db	116	;'t'
   234  001028  65                 	db	101	;'e'
   235  001029  72                 	db	114	;'r'
   236  00102A  20                 	db	32
   237  00102B  59                 	db	89	;'Y'
   238  00102C  6F                 	db	111	;'o'
   239  00102D  75                 	db	117	;'u'
   240  00102E  72                 	db	114	;'r'
   241  00102F  20                 	db	32
   242  001030  4E                 	db	78	;'N'
   243  001031  61                 	db	97	;'a'
   244  001032  6D                 	db	109	;'m'
   245  001033  65                 	db	101	;'e'
   246  001034  3A                 	db	58	;':'
   247  001035  0A                 	db	10
   248  001036  0D                 	db	13
   249  001037  3E                 	db	62	;'>'
   250  001038  00                 	db	0
   251  001039                     STR_6:
   252  001039  0A                 	db	10
   253  00103A  0D                 	db	13
   254  00103B  52                 	db	82	;'R'
   255  00103C  65                 	db	101	;'e'
   256  00103D  76                 	db	118	;'v'
   257  00103E  65                 	db	101	;'e'
   258  00103F  72                 	db	114	;'r'
   259  001040  73                 	db	115	;'s'
   260  001041  65                 	db	101	;'e'
   261  001042  64                 	db	100	;'d'
   262  001043  3A                 	db	58	;':'
   263  001044  20                 	db	32
   264  001045  25                 	db	37
   265  001046  73                 	db	115	;'s'
   266  001047  20                 	db	32
   267  001048  25                 	db	37
   268  001049  73                 	db	115	;'s'
   269  00104A  00                 	db	0
   270  00104B                     STR_7:
   271  00104B  25                 	db	37
   272  00104C  63                 	db	99	;'c'
   273  00104D  25                 	db	37
   274  00104E  63                 	db	99	;'c'
   275  00104F  25                 	db	37
   276  001050  63                 	db	99	;'c'
   277  001051  25                 	db	37
   278  001052  63                 	db	99	;'c'
   279  001053  00                 	db	0
   280  001054                     STR_10:
   281  001054  28                 	db	40
   282  001055  6E                 	db	110	;'n'
   283  001056  75                 	db	117	;'u'
   284  001057  6C                 	db	108	;'l'
   285  001058  6C                 	db	108	;'l'
   286  001059  29                 	db	41
   287  00105A  00                 	db	0
   288  00105B                     STR_3:
   289  00105B  00                 	db	0
   290  00105C  00                 	db	0
   291  00105D                     STR_2:
   292  00105D  20                 	db	32
   293  00105E  00                 	db	0
   294  00105F  00                 	db	0	; dummy byte at the end
   295  0000                     
   296                           ; #config settings
   297                           
   298                           	psect	cinit
   299  001A0A                     __pcinit:
   300                           	callstack 0
   301  001A0A                     start_initialization:
   302                           	callstack 0
   303  001A0A                     __initialization:
   304                           	callstack 0
   305                           
   306                           ; Initialize objects allocated to BANK1 (6 bytes)
   307                           ; load TBLPTR registers with __pidataBANK1
   308  001A0A  0E80               	movlw	low __pidataBANK1
   309  001A0C  6EF6               	movwf	tblptrl,c
   310  001A0E  0E1B               	movlw	high __pidataBANK1
   311  001A10  6EF7               	movwf	tblptrh,c
   312  001A12  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   313  001A14  6EF8               	movwf	tblptru,c
   314  001A16  EE00  F16F         	lfsr	0,__pdataBANK1
   315  001A1A  EE10 F006          	lfsr	1,6
   316  001A1E                     copy_data0:
   317  001A1E  0009               	tblrd		*+
   318  001A20  006F FFD7 FFEE     	movff	tablat,postinc0
   319  001A26  50E5               	movf	postdec1,w,c
   320  001A28  50E1               	movf	fsr1l,w,c
   321  001A2A  E1F9               	bnz	copy_data0
   322                           
   323                           ; Clear objects allocated to BANK1 (20 bytes)
   324  001A2C  EE00  F15B         	lfsr	0,__pbssBANK1
   325  001A30  0E14               	movlw	20
   326  001A32                     clear_0:
   327  001A32  6AEE               	clrf	postinc0,c
   328  001A34  06E8               	decf	wreg,f,c
   329  001A36  E1FD               	bnz	clear_0
   330                           
   331                           ; Clear objects allocated to BANK0 (3 bytes)
   332  001A38  0100               	movlb	0
   333  001A3A  6BFD               	clrf	(__pbssBANK0+2)& (0+255),b
   334  001A3C  6BFC               	clrf	(__pbssBANK0+1)& (0+255),b
   335  001A3E  6BFB               	clrf	__pbssBANK0& (0+255),b
   336  001A40                     end_of_initialization:
   337                           	callstack 0
   338  001A40                     __end_of__initialization:
   339                           	callstack 0
   340  001A40  0100               	movlb	0
   341  001A42  EF30  F008         	goto	_main	;jump to C main() function
   342                           
   343                           	psect	bssBANK0
   344  0000FB                     __pbssBANK0:
   345                           	callstack 0
   346  0000FB                     strtok@sp:
   347                           	callstack 0
   348  0000FB                     	ds	2
   349  0000FD                     _uart2RxLastError:
   350                           	callstack 0
   351  0000FD                     	ds	1
   352                           
   353                           	psect	bssBANK1
   354  00015B                     __pbssBANK1:
   355                           	callstack 0
   356  00015B                     	ds	20
   357                           
   358                           	psect	dataBANK1
   359  00016F                     __pdataBANK1:
   360                           	callstack 0
   361  00016F                     main@F16340:
   362                           	callstack 0
   363  00016F                     	ds	6
   364                           
   365                           	psect	cstackBANK1
   366  000100                     __pcstackBANK1:
   367                           	callstack 0
   368  000100                     main@caplast:
   369                           	callstack 0
   370                           
   371                           ; 51 bytes @ 0x0
   372  000100                     	ds	51
   373  000133                     main@FirstName:
   374                           	callstack 0
   375                           
   376                           ; 20 bytes @ 0x33
   377  000133                     	ds	20
   378  000147                     main@LastName:
   379                           	callstack 0
   380                           
   381                           ; 20 bytes @ 0x47
   382  000147                     	ds	20
   383                           
   384                           	psect	cstackBANK0
   385  000060                     __pcstackBANK0:
   386                           	callstack 0
   387  000060                     main@reversefirst:
   388                           	callstack 0
   389                           
   390                           ; 51 bytes @ 0x0
   391  000060                     	ds	51
   392  000093                     main@reverselast:
   393                           	callstack 0
   394                           
   395                           ; 51 bytes @ 0x33
   396  000093                     	ds	51
   397  0000C6                     main@capfirst:
   398                           	callstack 0
   399                           
   400                           ; 51 bytes @ 0x66
   401  0000C6                     	ds	51
   402  0000F9                     main@token:
   403                           	callstack 0
   404                           
   405                           ; 2 bytes @ 0x99
   406  0000F9                     	ds	2
   407                           
   408                           	psect	cstackCOMRAM
   409  000001                     __pcstackCOMRAM:
   410                           	callstack 0
   411  000001                     ??_islower:
   412  000001                     ?_strlen:
   413                           	callstack 0
   414  000001                     ?_strchr:
   415                           	callstack 0
   416  000001                     UART2_Write@txData:
   417                           	callstack 0
   418  000001                     toupper@c:
   419                           	callstack 0
   420  000001                     UART2_SetFramingErrorHandler@interruptHandler:
   421                           	callstack 0
   422  000001                     UART2_SetOverrunErrorHandler@interruptHandler:
   423                           	callstack 0
   424  000001                     UART2_SetErrorHandler@interruptHandler:
   425                           	callstack 0
   426  000001                     wait_for_ENTER@i:
   427                           	callstack 0
   428  000001                     ReadNUART2@holds_string:
   429                           	callstack 0
   430  000001                     strcpy@to:
   431                           	callstack 0
   432  000001                     strlen@s:
   433                           	callstack 0
   434  000001                     strchr@ptr:
   435                           	callstack 0
   436                           
   437                           ; 2 bytes @ 0x0
   438  000001                     	ds	1
   439  000002                     putch@txData:
   440                           	callstack 0
   441  000002                     _islower$932:
   442                           	callstack 0
   443                           
   444                           ; 1 bytes @ 0x1
   445  000002                     	ds	1
   446  000003                     ?_printf:
   447                           	callstack 0
   448  000003                     islower@c:
   449                           	callstack 0
   450  000003                     ReadNUART2@length_N:
   451                           	callstack 0
   452  000003                     printf@f:
   453                           	callstack 0
   454  000003                     strcpy@from:
   455                           	callstack 0
   456  000003                     strlen@cp:
   457                           	callstack 0
   458  000003                     strchr@chr:
   459                           	callstack 0
   460                           
   461                           ; 2 bytes @ 0x2
   462  000003                     	ds	2
   463  000005                     ??_ReadNUART2:
   464  000005                     ?_strspn:
   465                           	callstack 0
   466  000005                     ?_strcspn:
   467                           	callstack 0
   468  000005                     Reverse_String@string_in:
   469                           	callstack 0
   470  000005                     Caps@string_in:
   471                           	callstack 0
   472  000005                     strcpy@cp:
   473                           	callstack 0
   474  000005                     strcspn@s1:
   475                           	callstack 0
   476  000005                     strspn@s1:
   477                           	callstack 0
   478                           
   479                           ; 2 bytes @ 0x4
   480  000005                     	ds	2
   481  000007                     Reverse_String@string_out:
   482                           	callstack 0
   483  000007                     Caps@string_out:
   484                           	callstack 0
   485  000007                     ReadNUART2@letter:
   486                           	callstack 0
   487  000007                     strcspn@s2:
   488                           	callstack 0
   489  000007                     strspn@s2:
   490                           	callstack 0
   491                           
   492                           ; 2 bytes @ 0x6
   493  000007                     	ds	2
   494  000009                     ??_Caps:
   495  000009                     ??_Reverse_String:
   496  000009                     ??_strspn:
   497  000009                     ??_strcspn:
   498  000009                     ReadNUART2@i:
   499                           	callstack 0
   500                           
   501                           ; 2 bytes @ 0x8
   502  000009                     	ds	1
   503  00000A                     Caps@length:
   504                           	callstack 0
   505  00000A                     strcspn@i:
   506                           	callstack 0
   507  00000A                     strspn@i:
   508                           	callstack 0
   509                           
   510                           ; 2 bytes @ 0x9
   511  00000A                     	ds	1
   512  00000B                     Reverse_String@length:
   513                           	callstack 0
   514                           
   515                           ; 2 bytes @ 0xA
   516  00000B                     	ds	1
   517  00000C                     ?_strtok:
   518                           	callstack 0
   519  00000C                     Caps@i:
   520                           	callstack 0
   521  00000C                     strtok@s1:
   522                           	callstack 0
   523                           
   524                           ; 2 bytes @ 0xB
   525  00000C                     	ds	1
   526  00000D                     Reverse_String@i:
   527                           	callstack 0
   528                           
   529                           ; 2 bytes @ 0xC
   530  00000D                     	ds	1
   531  00000E                     printf@ap:
   532                           	callstack 0
   533  00000E                     strtok@s2:
   534                           	callstack 0
   535                           
   536                           ; 2 bytes @ 0xD
   537  00000E                     	ds	2
   538  000010                     printf@cp:
   539                           	callstack 0
   540                           
   541                           ; 2 bytes @ 0xF
   542  000010                     	ds	2
   543  000012                     printf@c:
   544                           	callstack 0
   545                           
   546                           ; 1 bytes @ 0x11
   547  000012                     	ds	1
   548  000013                     main@string2:
   549                           	callstack 0
   550                           
   551                           ; 20 bytes @ 0x12
   552  000013                     	ds	20
   553  000027                     main@inputstring:
   554                           	callstack 0
   555                           
   556                           ; 51 bytes @ 0x26
   557  000027                     	ds	51
   558  00005A                     main@string:
   559                           	callstack 0
   560                           
   561                           ; 6 bytes @ 0x59
   562  00005A                     	ds	6
   563                           
   564 ;;
   565 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   566 ;;
   567 ;; *************** function _main *****************
   568 ;; Defined at:
   569 ;;		line 21 in file "main.c"
   570 ;; Parameters:    Size  Location     Type
   571 ;;		None
   572 ;; Auto vars:     Size  Location     Type
   573 ;;  caplast        51    0[BANK1 ] unsigned char [51]
   574 ;;  capfirst       51  102[BANK0 ] unsigned char [51]
   575 ;;  inputstring    51   38[COMRAM] unsigned char [51]
   576 ;;  reverselast    51   51[BANK0 ] unsigned char [51]
   577 ;;  reversefirst   51    0[BANK0 ] unsigned char [51]
   578 ;;  outputstring   51    0        unsigned char [51]
   579 ;;  LastName       20   71[BANK1 ] unsigned char [20]
   580 ;;  FirstName      20   51[BANK1 ] unsigned char [20]
   581 ;;  string2        20   18[COMRAM] unsigned char [20]
   582 ;;  string          6   89[COMRAM] unsigned char [6]
   583 ;;  token           2  153[BANK0 ] PTR unsigned char 
   584 ;;		 -> NULL(0), main@inputstring(51), 
   585 ;;  intnumber       2    0        int 
   586 ;;  i               2    0        int 
   587 ;; Return value:  Size  Location     Type
   588 ;;                  1    wreg      void 
   589 ;; Registers used:
   590 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, cstack
   591 ;; Tracked objects:
   592 ;;		On entry : 0/0
   593 ;;		On exit  : 0/0
   594 ;;		Unchanged: 0/0
   595 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   596 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   597 ;;      Locals:        77     155      91       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   598 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   599 ;;      Totals:        77     155      91       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   600 ;;Total ram usage:      323 bytes
   601 ;; Hardware stack levels required when called:    4
   602 ;; This function calls:
   603 ;;		_Caps
   604 ;;		_ReadNUART2
   605 ;;		_Reverse_String
   606 ;;		_SYSTEM_Initialize
   607 ;;		_clearPuTTY
   608 ;;		_printf
   609 ;;		_strcpy
   610 ;;		_strtok
   611 ;;		_wait_for_ENTER
   612 ;; This function is called by:
   613 ;;		Startup code after reset
   614 ;; This function uses a non-reentrant model
   615 ;;
   616                           
   617                           	psect	text0
   618  001060                     __ptext0:
   619                           	callstack 0
   620  001060                     _main:
   621                           	callstack 27
   622  001060                     
   623                           ;main.c: 24: SYSTEM_Initialize();
   624  001060  ECA3  F00D         	call	_SYSTEM_Initialize	;wreg free
   625  001064                     
   626                           ;main.c: 25: int i, intnumber;;main.c: 26: clearPuTTY();
   627  001064  ECB0  F00B         	call	_clearPuTTY	;wreg free
   628  001068                     
   629                           ;main.c: 27: char string[]="hello", string2[20]="", inputstring[51],outputstring[51],rev
      +                          ersefirst[51],reverselast[51];
   630  001068  EE20  F16F         	lfsr	2,main@F16340
   631  00106C  EE10  F05A         	lfsr	1,main@string
   632  001070  0E05               	movlw	5
   633  001072                     u971:
   634  001072  006F FF6F FFE3     	movff	plusw2,plusw1
   635  001078  06E8               	decf	wreg,f,c
   636  00107A  E2FB               	bc	u971
   637  00107C  EE20  F013         	lfsr	2,main@string2
   638  001080  0E13               	movlw	19
   639  001082                     u981:
   640  001082  6ADE               	clrf	postinc2,c
   641  001084  06E8               	decf	wreg,f,c
   642  001086  E2FD               	bc	u981
   643  001088                     l1889:
   644                           
   645                           ;main.c: 42: {;main.c: 45: printf("\n\r\n\rEnter Your Name:\n\r>");
   646  001088  0E21               	movlw	low STR_1
   647  00108A  6E03               	movwf	printf@f^0,c
   648  00108C  0E10               	movlw	high STR_1
   649  00108E  6E04               	movwf	(printf@f+1)^0,c
   650  001090  ECF0  F008         	call	_printf	;wreg free
   651  001094                     
   652                           ;main.c: 46: ReadNUART2(inputstring,20);
   653  001094  0E27               	movlw	low main@inputstring
   654  001096  6E01               	movwf	ReadNUART2@holds_string^0,c
   655  001098  0E00               	movlw	high main@inputstring
   656  00109A  6E02               	movwf	(ReadNUART2@holds_string+1)^0,c
   657  00109C  0E00               	movlw	0
   658  00109E  6E04               	movwf	(ReadNUART2@length_N+1)^0,c
   659  0010A0  0E14               	movlw	20
   660  0010A2  6E03               	movwf	ReadNUART2@length_N^0,c
   661  0010A4  EC17  F00A         	call	_ReadNUART2	;wreg free
   662  0010A8                     
   663                           ;main.c: 49: token=strtok(inputstring," ");
   664  0010A8  0E27               	movlw	low main@inputstring
   665  0010AA  6E0C               	movwf	strtok@s1^0,c
   666  0010AC  0E00               	movlw	high main@inputstring
   667  0010AE  6E0D               	movwf	(strtok@s1+1)^0,c
   668  0010B0  0E5D               	movlw	low STR_2
   669  0010B2  6E0E               	movwf	strtok@s2^0,c
   670  0010B4  0E10               	movlw	high STR_2
   671  0010B6  6E0F               	movwf	(strtok@s2+1)^0,c
   672  0010B8  ECA0  F009         	call	_strtok	;wreg free
   673  0010BC  C00C  F0F9         	movff	?_strtok,main@token
   674  0010C0  C00D  F0FA         	movff	?_strtok+1,main@token+1
   675  0010C4                     
   676                           ;main.c: 50: if(token != (0)) strcpy(FirstName,token);
   677  0010C4  0100               	movlb	0	; () banked
   678  0010C6  51F9               	movf	main@token& (0+255),w,b
   679  0010C8  11FA               	iorwf	(main@token+1)& (0+255),w,b
   680  0010CA  B4D8               	btfsc	status,2,c
   681  0010CC  EF6A  F008         	goto	u991
   682  0010D0  EF6C  F008         	goto	u990
   683  0010D4                     u991:
   684  0010D4  EF76  F008         	goto	l1899
   685  0010D8                     u990:
   686  0010D8                     
   687                           ; BSR set to: 0
   688  0010D8  0E33               	movlw	low main@FirstName
   689  0010DA  6E01               	movwf	strcpy@to^0,c
   690  0010DC  0E01               	movlw	high main@FirstName
   691  0010DE  6E02               	movwf	(strcpy@to+1)^0,c
   692  0010E0  C0F9  F003         	movff	main@token,strcpy@from
   693  0010E4  C0FA  F004         	movff	main@token+1,strcpy@from+1
   694  0010E8  ECE3  F00C         	call	_strcpy	;wreg free
   695  0010EC                     l1899:
   696                           
   697                           ;main.c: 51: token=strtok((0),"\0");
   698  0010EC  0E00               	movlw	0
   699  0010EE  6E0C               	movwf	strtok@s1^0,c
   700  0010F0  0E00               	movlw	0
   701  0010F2  6E0D               	movwf	(strtok@s1+1)^0,c
   702  0010F4  0E5B               	movlw	low STR_3
   703  0010F6  6E0E               	movwf	strtok@s2^0,c
   704  0010F8  0E10               	movlw	high STR_3
   705  0010FA  6E0F               	movwf	(strtok@s2+1)^0,c
   706  0010FC  ECA0  F009         	call	_strtok	;wreg free
   707  001100  C00C  F0F9         	movff	?_strtok,main@token
   708  001104  C00D  F0FA         	movff	?_strtok+1,main@token+1
   709  001108                     
   710                           ;main.c: 52: if(token != (0)) strcpy(LastName,token);
   711  001108  0100               	movlb	0	; () banked
   712  00110A  51F9               	movf	main@token& (0+255),w,b
   713  00110C  11FA               	iorwf	(main@token+1)& (0+255),w,b
   714  00110E  B4D8               	btfsc	status,2,c
   715  001110  EF8C  F008         	goto	u1001
   716  001114  EF8E  F008         	goto	u1000
   717  001118                     u1001:
   718  001118  EF98  F008         	goto	l1905
   719  00111C                     u1000:
   720  00111C                     
   721                           ; BSR set to: 0
   722  00111C  0E47               	movlw	low main@LastName
   723  00111E  6E01               	movwf	strcpy@to^0,c
   724  001120  0E01               	movlw	high main@LastName
   725  001122  6E02               	movwf	(strcpy@to+1)^0,c
   726  001124  C0F9  F003         	movff	main@token,strcpy@from
   727  001128  C0FA  F004         	movff	main@token+1,strcpy@from+1
   728  00112C  ECE3  F00C         	call	_strcpy	;wreg free
   729  001130                     l1905:
   730                           
   731                           ;main.c: 54: printf("\n\rFirst Name: %s\n\rLast Name: %s",FirstName,LastName);
   732  001130  0E01               	movlw	low STR_4
   733  001132  6E03               	movwf	printf@f^0,c
   734  001134  0E10               	movlw	high STR_4
   735  001136  6E04               	movwf	(printf@f+1)^0,c
   736  001138  0E33               	movlw	low main@FirstName
   737  00113A  6E05               	movwf	(?_printf+2)^0,c
   738  00113C  0E01               	movlw	high main@FirstName
   739  00113E  6E06               	movwf	(?_printf+3)^0,c
   740  001140  0E47               	movlw	low main@LastName
   741  001142  6E07               	movwf	(?_printf+4)^0,c
   742  001144  0E01               	movlw	high main@LastName
   743  001146  6E08               	movwf	(?_printf+5)^0,c
   744  001148  ECF0  F008         	call	_printf	;wreg free
   745  00114C                     
   746                           ;main.c: 55: Caps(FirstName,capfirst);
   747  00114C  0E33               	movlw	low main@FirstName
   748  00114E  6E05               	movwf	Caps@string_in^0,c
   749  001150  0E01               	movlw	high main@FirstName
   750  001152  6E06               	movwf	(Caps@string_in+1)^0,c
   751  001154  0EC6               	movlw	low main@capfirst
   752  001156  6E07               	movwf	Caps@string_out^0,c
   753  001158  0E00               	movlw	high main@capfirst
   754  00115A  6E08               	movwf	(Caps@string_out+1)^0,c
   755  00115C  EC77  F00A         	call	_Caps	;wreg free
   756  001160                     
   757                           ;main.c: 56: Caps(LastName,caplast);
   758  001160  0E47               	movlw	low main@LastName
   759  001162  6E05               	movwf	Caps@string_in^0,c
   760  001164  0E01               	movlw	high main@LastName
   761  001166  6E06               	movwf	(Caps@string_in+1)^0,c
   762  001168  0E00               	movlw	low main@caplast
   763  00116A  6E07               	movwf	Caps@string_out^0,c
   764  00116C  0E01               	movlw	high main@caplast
   765  00116E  6E08               	movwf	(Caps@string_out+1)^0,c
   766  001170  EC77  F00A         	call	_Caps	;wreg free
   767  001174                     
   768                           ;main.c: 57: printf("\n\rFirst Name: %s\n\rLast Name: %s",capfirst,caplast);
   769  001174  0E01               	movlw	low STR_4
   770  001176  6E03               	movwf	printf@f^0,c
   771  001178  0E10               	movlw	high STR_4
   772  00117A  6E04               	movwf	(printf@f+1)^0,c
   773  00117C  0EC6               	movlw	low main@capfirst
   774  00117E  6E05               	movwf	(?_printf+2)^0,c
   775  001180  0E00               	movlw	high main@capfirst
   776  001182  6E06               	movwf	(?_printf+3)^0,c
   777  001184  0E00               	movlw	low main@caplast
   778  001186  6E07               	movwf	(?_printf+4)^0,c
   779  001188  0E01               	movlw	high main@caplast
   780  00118A  6E08               	movwf	(?_printf+5)^0,c
   781  00118C  ECF0  F008         	call	_printf	;wreg free
   782                           
   783                           ;main.c: 58: Reverse_String(capfirst,reversefirst);
   784  001190  0EC6               	movlw	low main@capfirst
   785  001192  6E05               	movwf	Reverse_String@string_in^0,c
   786  001194  0E00               	movlw	high main@capfirst
   787  001196  6E06               	movwf	(Reverse_String@string_in+1)^0,c
   788  001198  0E60               	movlw	low main@reversefirst
   789  00119A  6E07               	movwf	Reverse_String@string_out^0,c
   790  00119C  0E00               	movlw	high main@reversefirst
   791  00119E  6E08               	movwf	(Reverse_String@string_out+1)^0,c
   792  0011A0  EC6D  F00B         	call	_Reverse_String	;wreg free
   793                           
   794                           ;main.c: 59: Reverse_String(caplast,reverselast);
   795  0011A4  0E00               	movlw	low main@caplast
   796  0011A6  6E05               	movwf	Reverse_String@string_in^0,c
   797  0011A8  0E01               	movlw	high main@caplast
   798  0011AA  6E06               	movwf	(Reverse_String@string_in+1)^0,c
   799  0011AC  0E93               	movlw	low main@reverselast
   800  0011AE  6E07               	movwf	Reverse_String@string_out^0,c
   801  0011B0  0E00               	movlw	high main@reverselast
   802  0011B2  6E08               	movwf	(Reverse_String@string_out+1)^0,c
   803  0011B4  EC6D  F00B         	call	_Reverse_String	;wreg free
   804  0011B8                     
   805                           ;main.c: 60: printf("\n\rReversed: %s %s",reversefirst,reverselast);
   806  0011B8  0E39               	movlw	low STR_6
   807  0011BA  6E03               	movwf	printf@f^0,c
   808  0011BC  0E10               	movlw	high STR_6
   809  0011BE  6E04               	movwf	(printf@f+1)^0,c
   810  0011C0  0E60               	movlw	low main@reversefirst
   811  0011C2  6E05               	movwf	(?_printf+2)^0,c
   812  0011C4  0E00               	movlw	high main@reversefirst
   813  0011C6  6E06               	movwf	(?_printf+3)^0,c
   814  0011C8  0E93               	movlw	low main@reverselast
   815  0011CA  6E07               	movwf	(?_printf+4)^0,c
   816  0011CC  0E00               	movlw	high main@reverselast
   817  0011CE  6E08               	movwf	(?_printf+5)^0,c
   818  0011D0  ECF0  F008         	call	_printf	;wreg free
   819  0011D4                     
   820                           ;main.c: 62: wait_for_ENTER();
   821  0011D4  ECBB  F00C         	call	_wait_for_ENTER	;wreg free
   822  0011D8  EF44  F008         	goto	l1889
   823  0011DC  EFFE  F07F         	goto	start
   824  0011E0                     __end_of_main:
   825                           	callstack 0
   826                           
   827 ;; *************** function _wait_for_ENTER *****************
   828 ;; Defined at:
   829 ;;		line 5 in file "myUART.c"
   830 ;; Parameters:    Size  Location     Type
   831 ;;		None
   832 ;; Auto vars:     Size  Location     Type
   833 ;;  i               2    0[COMRAM] unsigned int 
   834 ;; Return value:  Size  Location     Type
   835 ;;                  1    wreg      void 
   836 ;; Registers used:
   837 ;;		wreg, status,2, status,0, pclath, tosl, cstack
   838 ;; Tracked objects:
   839 ;;		On entry : 0/0
   840 ;;		On exit  : 0/0
   841 ;;		Unchanged: 0/0
   842 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   843 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   844 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   845 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   846 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   847 ;;Total ram usage:        2 bytes
   848 ;; Hardware stack levels used:    1
   849 ;; Hardware stack levels required when called:    2
   850 ;; This function calls:
   851 ;;		_UART2_Read
   852 ;;		_UART2_is_rx_ready
   853 ;; This function is called by:
   854 ;;		_main
   855 ;; This function uses a non-reentrant model
   856 ;;
   857                           
   858                           	psect	text1
   859  001976                     __ptext1:
   860                           	callstack 0
   861  001976                     _wait_for_ENTER:
   862                           	callstack 28
   863  001976                     l1863:
   864  001976  EC98  F00D         	call	_UART2_is_rx_ready	;wreg free
   865  00197A  06E8               	decf	wreg,f,c
   866  00197C  B4D8               	btfsc	status,2,c
   867  00197E  EFC3  F00C         	goto	u941
   868  001982  EFC5  F00C         	goto	u940
   869  001986                     u941:
   870  001986  EFBB  F00C         	goto	l1863
   871  00198A                     u940:
   872  00198A  EFD8  F00C         	goto	l1875
   873  00198E                     l1865:
   874  00198E  0E00               	movlw	0
   875  001990  6E02               	movwf	(wait_for_ENTER@i+1)^0,c
   876  001992  0E00               	movlw	0
   877  001994  6E01               	movwf	wait_for_ENTER@i^0,c
   878  001996                     l1871:
   879  001996  4A01               	infsnz	wait_for_ENTER@i^0,f,c
   880  001998  2A02               	incf	(wait_for_ENTER@i+1)^0,f,c
   881  00199A  0E10               	movlw	16
   882  00199C  5C01               	subwf	wait_for_ENTER@i^0,w,c
   883  00199E  0E27               	movlw	39
   884  0019A0  5802               	subwfb	(wait_for_ENTER@i+1)^0,w,c
   885  0019A2  A0D8               	btfss	status,0,c
   886  0019A4  EFD6  F00C         	goto	u951
   887  0019A8  EFD8  F00C         	goto	u950
   888  0019AC                     u951:
   889  0019AC  EFCB  F00C         	goto	l1871
   890  0019B0                     u950:
   891  0019B0                     l1875:
   892  0019B0  ECD2  F00A         	call	_UART2_Read	;wreg free
   893  0019B4  0A0D               	xorlw	13
   894  0019B6  A4D8               	btfss	status,2,c
   895  0019B8  EFE0  F00C         	goto	u961
   896  0019BC  EFE2  F00C         	goto	u960
   897  0019C0                     u961:
   898  0019C0  EFC7  F00C         	goto	l1865
   899  0019C4                     u960:
   900  0019C4  0012               	return		;funcret
   901  0019C6                     __end_of_wait_for_ENTER:
   902                           	callstack 0
   903                           
   904 ;; *************** function _strtok *****************
   905 ;; Defined at:
   906 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\strtok.c"
   907 ;; Parameters:    Size  Location     Type
   908 ;;  s1              2   11[COMRAM] PTR unsigned char 
   909 ;;		 -> NULL(0), main@inputstring(51), 
   910 ;;  s2              2   13[COMRAM] PTR const unsigned char 
   911 ;;		 -> STR_3(2), STR_2(2), 
   912 ;; Auto vars:     Size  Location     Type
   913 ;;		None
   914 ;; Return value:  Size  Location     Type
   915 ;;                  2   11[COMRAM] PTR unsigned char 
   916 ;; Registers used:
   917 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   918 ;; Tracked objects:
   919 ;;		On entry : 0/0
   920 ;;		On exit  : 0/0
   921 ;;		Unchanged: 0/0
   922 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   923 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   924 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   925 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   926 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   927 ;;Total ram usage:        4 bytes
   928 ;; Hardware stack levels used:    1
   929 ;; Hardware stack levels required when called:    2
   930 ;; This function calls:
   931 ;;		_strcspn
   932 ;;		_strspn
   933 ;; This function is called by:
   934 ;;		_main
   935 ;; This function uses a non-reentrant model
   936 ;;
   937                           
   938                           	psect	text2
   939  001340                     __ptext2:
   940                           	callstack 0
   941  001340                     _strtok:
   942                           	callstack 28
   943  001340  500C               	movf	strtok@s1^0,w,c
   944  001342  100D               	iorwf	(strtok@s1+1)^0,w,c
   945  001344  A4D8               	btfss	status,2,c
   946  001346  EFA7  F009         	goto	u861
   947  00134A  EFA9  F009         	goto	u860
   948  00134E                     u861:
   949  00134E  EFAD  F009         	goto	l1082
   950  001352                     u860:
   951  001352  C0FB  F00C         	movff	strtok@sp,strtok@s1
   952  001356  C0FC  F00D         	movff	strtok@sp+1,strtok@s1+1
   953  00135A                     l1082:
   954  00135A  500C               	movf	strtok@s1^0,w,c
   955  00135C  100D               	iorwf	(strtok@s1+1)^0,w,c
   956  00135E  A4D8               	btfss	status,2,c
   957  001360  EFB4  F009         	goto	u871
   958  001364  EFB6  F009         	goto	u870
   959  001368                     u871:
   960  001368  EFBC  F009         	goto	l1803
   961  00136C                     u870:
   962  00136C  0E00               	movlw	0
   963  00136E  6E0C               	movwf	?_strtok^0,c
   964  001370  0E00               	movlw	0
   965  001372  6E0D               	movwf	(?_strtok+1)^0,c
   966  001374  EF16  F00A         	goto	l1084
   967  001378                     l1803:
   968  001378  C00C  F005         	movff	strtok@s1,strspn@s1
   969  00137C  C00D  F006         	movff	strtok@s1+1,strspn@s1+1
   970  001380  C00E  F007         	movff	strtok@s2,strspn@s2
   971  001384  C00F  F008         	movff	strtok@s2+1,strspn@s2+1
   972  001388  ECEF  F00B         	call	_strspn	;wreg free
   973  00138C  5005               	movf	?_strspn^0,w,c
   974  00138E  260C               	addwf	strtok@s1^0,f,c
   975  001390  5006               	movf	(?_strspn+1)^0,w,c
   976  001392  220D               	addwfc	(strtok@s1+1)^0,f,c
   977  001394  0060  F033  FFD9   	movff	strtok@s1,fsr2l
   978  00139A  0060  F037  FFDA   	movff	strtok@s1+1,fsr2h
   979  0013A0  50DF               	movf	indf2,w,c
   980  0013A2  A4D8               	btfss	status,2,c
   981  0013A4  EFD6  F009         	goto	u881
   982  0013A8  EFD8  F009         	goto	u880
   983  0013AC                     u881:
   984  0013AC  EFE3  F009         	goto	l1811
   985  0013B0                     u880:
   986  0013B0  0E00               	movlw	0
   987  0013B2  0100               	movlb	0	; () banked
   988  0013B4  6FFB               	movwf	strtok@sp& (0+255),b
   989  0013B6  0E00               	movlw	0
   990  0013B8  6FFC               	movwf	(strtok@sp+1)& (0+255),b
   991  0013BA  C0FB  F00C         	movff	strtok@sp,?_strtok
   992  0013BE  C0FC  F00D         	movff	strtok@sp+1,?_strtok+1
   993  0013C2  EF16  F00A         	goto	l1084
   994  0013C6                     l1811:
   995  0013C6  C00C  F005         	movff	strtok@s1,strcspn@s1
   996  0013CA  C00D  F006         	movff	strtok@s1+1,strcspn@s1+1
   997  0013CE  C00E  F007         	movff	strtok@s2,strcspn@s2
   998  0013D2  C00F  F008         	movff	strtok@s2+1,strcspn@s2+1
   999  0013D6  EC26  F00C         	call	_strcspn	;wreg free
  1000  0013DA  5005               	movf	?_strcspn^0,w,c
  1001  0013DC  240C               	addwf	strtok@s1^0,w,c
  1002  0013DE  0100               	movlb	0	; () banked
  1003  0013E0  6FFB               	movwf	strtok@sp& (0+255),b
  1004  0013E2  5006               	movf	(?_strcspn+1)^0,w,c
  1005  0013E4  200D               	addwfc	(strtok@s1+1)^0,w,c
  1006  0013E6  6FFC               	movwf	(strtok@sp+1)& (0+255),b
  1007  0013E8                     
  1008                           ; BSR set to: 0
  1009  0013E8  0060  F3EF  FFD9   	movff	strtok@sp,fsr2l
  1010  0013EE  0060  F3F3  FFDA   	movff	strtok@sp+1,fsr2h
  1011  0013F4  50DF               	movf	indf2,w,c
  1012  0013F6  B4D8               	btfsc	status,2,c
  1013  0013F8  EF00  F00A         	goto	u891
  1014  0013FC  EF02  F00A         	goto	u890
  1015  001400                     u891:
  1016  001400  EF0E  F00A         	goto	l1819
  1017  001404                     u890:
  1018  001404                     
  1019                           ; BSR set to: 0
  1020  001404  0060  F3EF  FFD9   	movff	strtok@sp,fsr2l
  1021  00140A  0060  F3F3  FFDA   	movff	strtok@sp+1,fsr2h
  1022  001410  0E00               	movlw	0
  1023  001412  6EDF               	movwf	indf2,c
  1024  001414                     
  1025                           ; BSR set to: 0
  1026  001414  4BFB               	infsnz	strtok@sp& (0+255),f,b
  1027  001416  2BFC               	incf	(strtok@sp+1)& (0+255),f,b
  1028  001418  EF12  F00A         	goto	l1087
  1029  00141C                     l1819:
  1030                           
  1031                           ; BSR set to: 0
  1032  00141C  0E00               	movlw	0
  1033  00141E  6FFB               	movwf	strtok@sp& (0+255),b
  1034  001420  0E00               	movlw	0
  1035  001422  6FFC               	movwf	(strtok@sp+1)& (0+255),b
  1036  001424                     l1087:
  1037                           
  1038                           ; BSR set to: 0
  1039  001424  C00C  F00C         	movff	strtok@s1,?_strtok
  1040  001428  C00D  F00D         	movff	strtok@s1+1,?_strtok+1
  1041  00142C                     l1084:
  1042  00142C  0012               	return		;funcret
  1043  00142E                     __end_of_strtok:
  1044                           	callstack 0
  1045                           
  1046 ;; *************** function _strspn *****************
  1047 ;; Defined at:
  1048 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\strspn.c"
  1049 ;; Parameters:    Size  Location     Type
  1050 ;;  s1              2    4[COMRAM] PTR const unsigned char 
  1051 ;;		 -> NULL(0), main@inputstring(51), 
  1052 ;;  s2              2    6[COMRAM] PTR const unsigned char 
  1053 ;;		 -> STR_3(2), STR_2(2), 
  1054 ;; Auto vars:     Size  Location     Type
  1055 ;;  i               2    9[COMRAM] unsigned int 
  1056 ;; Return value:  Size  Location     Type
  1057 ;;                  2    4[COMRAM] unsigned int 
  1058 ;; Registers used:
  1059 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1060 ;; Tracked objects:
  1061 ;;		On entry : 0/0
  1062 ;;		On exit  : 0/0
  1063 ;;		Unchanged: 0/0
  1064 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1065 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1066 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1067 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1068 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1069 ;;Total ram usage:        7 bytes
  1070 ;; Hardware stack levels used:    1
  1071 ;; Hardware stack levels required when called:    1
  1072 ;; This function calls:
  1073 ;;		_strchr
  1074 ;; This function is called by:
  1075 ;;		_strtok
  1076 ;; This function uses a non-reentrant model
  1077 ;;
  1078                           
  1079                           	psect	text3
  1080  0017DE                     __ptext3:
  1081                           	callstack 0
  1082  0017DE                     _strspn:
  1083                           	callstack 28
  1084  0017DE  0E00               	movlw	0
  1085  0017E0  6E0B               	movwf	(strspn@i+1)^0,c
  1086  0017E2  0E00               	movlw	0
  1087  0017E4  6E0A               	movwf	strspn@i^0,c
  1088  0017E6  EFF9  F00B         	goto	l1753
  1089  0017EA                     l1751:
  1090  0017EA  4A05               	infsnz	strspn@s1^0,f,c
  1091  0017EC  2A06               	incf	(strspn@s1+1)^0,f,c
  1092  0017EE  4A0A               	infsnz	strspn@i^0,f,c
  1093  0017F0  2A0B               	incf	(strspn@i+1)^0,f,c
  1094  0017F2                     l1753:
  1095  0017F2  0060  F017  FFD9   	movff	strspn@s1,fsr2l
  1096  0017F8  0060  F01B  FFDA   	movff	strspn@s1+1,fsr2h
  1097  0017FE  50DF               	movf	indf2,w,c
  1098  001800  B4D8               	btfsc	status,2,c
  1099  001802  EF05  F00C         	goto	u771
  1100  001806  EF07  F00C         	goto	u770
  1101  00180A                     u771:
  1102  00180A  EF21  F00C         	goto	l1112
  1103  00180E                     u770:
  1104  00180E  C007  F001         	movff	strspn@s2,strchr@ptr
  1105  001812  C008  F002         	movff	strspn@s2+1,strchr@ptr+1
  1106  001816  0060  F017  FFD9   	movff	strspn@s1,fsr2l
  1107  00181C  0060  F01B  FFDA   	movff	strspn@s1+1,fsr2h
  1108  001822  50DF               	movf	indf2,w,c
  1109  001824  6E09               	movwf	??_strspn^0,c
  1110  001826  5009               	movf	??_strspn^0,w,c
  1111  001828  6E03               	movwf	strchr@chr^0,c
  1112  00182A  6A04               	clrf	(strchr@chr+1)^0,c
  1113  00182C  EC5D  F00C         	call	_strchr	;wreg free
  1114  001830  5001               	movf	?_strchr^0,w,c
  1115  001832  1002               	iorwf	(?_strchr+1)^0,w,c
  1116  001834  A4D8               	btfss	status,2,c
  1117  001836  EF1F  F00C         	goto	u781
  1118  00183A  EF21  F00C         	goto	u780
  1119  00183E                     u781:
  1120  00183E  EFF5  F00B         	goto	l1751
  1121  001842                     u780:
  1122  001842                     l1112:
  1123  001842  C00A  F005         	movff	strspn@i,?_strspn
  1124  001846  C00B  F006         	movff	strspn@i+1,?_strspn+1
  1125  00184A  0012               	return		;funcret
  1126  00184C                     __end_of_strspn:
  1127                           	callstack 0
  1128                           
  1129 ;; *************** function _strcspn *****************
  1130 ;; Defined at:
  1131 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\strcspn.c"
  1132 ;; Parameters:    Size  Location     Type
  1133 ;;  s1              2    4[COMRAM] PTR const unsigned char 
  1134 ;;		 -> NULL(0), main@inputstring(51), 
  1135 ;;  s2              2    6[COMRAM] PTR const unsigned char 
  1136 ;;		 -> STR_3(2), STR_2(2), 
  1137 ;; Auto vars:     Size  Location     Type
  1138 ;;  i               2    9[COMRAM] unsigned int 
  1139 ;; Return value:  Size  Location     Type
  1140 ;;                  2    4[COMRAM] unsigned int 
  1141 ;; Registers used:
  1142 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1143 ;; Tracked objects:
  1144 ;;		On entry : 0/0
  1145 ;;		On exit  : 0/0
  1146 ;;		Unchanged: 0/0
  1147 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1148 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1149 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1150 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1151 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1152 ;;Total ram usage:        7 bytes
  1153 ;; Hardware stack levels used:    1
  1154 ;; Hardware stack levels required when called:    1
  1155 ;; This function calls:
  1156 ;;		_strchr
  1157 ;; This function is called by:
  1158 ;;		_strtok
  1159 ;; This function uses a non-reentrant model
  1160 ;;
  1161                           
  1162                           	psect	text4
  1163  00184C                     __ptext4:
  1164                           	callstack 0
  1165  00184C                     _strcspn:
  1166                           	callstack 28
  1167  00184C  0E00               	movlw	0
  1168  00184E  6E0B               	movwf	(strcspn@i+1)^0,c
  1169  001850  0E00               	movlw	0
  1170  001852  6E0A               	movwf	strcspn@i^0,c
  1171  001854  EF30  F00C         	goto	l1761
  1172  001858                     l1759:
  1173  001858  4A05               	infsnz	strcspn@s1^0,f,c
  1174  00185A  2A06               	incf	(strcspn@s1+1)^0,f,c
  1175  00185C  4A0A               	infsnz	strcspn@i^0,f,c
  1176  00185E  2A0B               	incf	(strcspn@i+1)^0,f,c
  1177  001860                     l1761:
  1178  001860  0060  F017  FFD9   	movff	strcspn@s1,fsr2l
  1179  001866  0060  F01B  FFDA   	movff	strcspn@s1+1,fsr2h
  1180  00186C  50DF               	movf	indf2,w,c
  1181  00186E  B4D8               	btfsc	status,2,c
  1182  001870  EF3C  F00C         	goto	u791
  1183  001874  EF3E  F00C         	goto	u790
  1184  001878                     u791:
  1185  001878  EF58  F00C         	goto	l1096
  1186  00187C                     u790:
  1187  00187C  C007  F001         	movff	strcspn@s2,strchr@ptr
  1188  001880  C008  F002         	movff	strcspn@s2+1,strchr@ptr+1
  1189  001884  0060  F017  FFD9   	movff	strcspn@s1,fsr2l
  1190  00188A  0060  F01B  FFDA   	movff	strcspn@s1+1,fsr2h
  1191  001890  50DF               	movf	indf2,w,c
  1192  001892  6E09               	movwf	??_strcspn^0,c
  1193  001894  5009               	movf	??_strcspn^0,w,c
  1194  001896  6E03               	movwf	strchr@chr^0,c
  1195  001898  6A04               	clrf	(strchr@chr+1)^0,c
  1196  00189A  EC5D  F00C         	call	_strchr	;wreg free
  1197  00189E  5001               	movf	?_strchr^0,w,c
  1198  0018A0  1002               	iorwf	(?_strchr+1)^0,w,c
  1199  0018A2  B4D8               	btfsc	status,2,c
  1200  0018A4  EF56  F00C         	goto	u801
  1201  0018A8  EF58  F00C         	goto	u800
  1202  0018AC                     u801:
  1203  0018AC  EF2C  F00C         	goto	l1759
  1204  0018B0                     u800:
  1205  0018B0                     l1096:
  1206  0018B0  C00A  F005         	movff	strcspn@i,?_strcspn
  1207  0018B4  C00B  F006         	movff	strcspn@i+1,?_strcspn+1
  1208  0018B8  0012               	return		;funcret
  1209  0018BA                     __end_of_strcspn:
  1210                           	callstack 0
  1211                           
  1212 ;; *************** function _strchr *****************
  1213 ;; Defined at:
  1214 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\strchr.c"
  1215 ;; Parameters:    Size  Location     Type
  1216 ;;  ptr             2    0[COMRAM] PTR const unsigned char 
  1217 ;;		 -> STR_3(2), STR_2(2), 
  1218 ;;  chr             2    2[COMRAM] int 
  1219 ;; Auto vars:     Size  Location     Type
  1220 ;;		None
  1221 ;; Return value:  Size  Location     Type
  1222 ;;                  2    0[COMRAM] PTR unsigned char 
  1223 ;; Registers used:
  1224 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  1225 ;; Tracked objects:
  1226 ;;		On entry : 0/0
  1227 ;;		On exit  : 0/0
  1228 ;;		Unchanged: 0/0
  1229 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1230 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1231 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1232 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1233 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1234 ;;Total ram usage:        4 bytes
  1235 ;; Hardware stack levels used:    1
  1236 ;; This function calls:
  1237 ;;		Nothing
  1238 ;; This function is called by:
  1239 ;;		_strcspn
  1240 ;;		_strspn
  1241 ;; This function uses a non-reentrant model
  1242 ;;
  1243                           
  1244                           	psect	text5
  1245  0018BA                     __ptext5:
  1246                           	callstack 0
  1247  0018BA                     _strchr:
  1248                           	callstack 28
  1249  0018BA                     l1100:
  1250  0018BA  0060  F007  FFF6   	movff	strchr@ptr,tblptrl
  1251  0018C0  0060  F00B  FFF7   	movff	strchr@ptr+1,tblptrh
  1252  0018C6                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1253  0018C6  6AF8               	clrf	tblptru,c
  1254  0018C8                     	endif
  1255  0018C8                     	if	0	;tblptru may be non-zero
  1256  0018C8                     	endif
  1257  0018C8  0008               	tblrd		*
  1258  0018CA  50F5               	movf	tablat,w,c
  1259  0018CC  1803               	xorwf	strchr@chr^0,w,c
  1260  0018CE  A4D8               	btfss	status,2,c
  1261  0018D0  EF6C  F00C         	goto	u561
  1262  0018D4  EF6E  F00C         	goto	u560
  1263  0018D8                     u561:
  1264  0018D8  EF74  F00C         	goto	l1605
  1265  0018DC                     u560:
  1266  0018DC  C001  F001         	movff	strchr@ptr,?_strchr
  1267  0018E0  C002  F002         	movff	strchr@ptr+1,?_strchr+1
  1268  0018E4  EF8B  F00C         	goto	l1102
  1269  0018E8                     l1605:
  1270  0018E8  0060  F007  FFF6   	movff	strchr@ptr,tblptrl
  1271  0018EE  0060  F00B  FFF7   	movff	strchr@ptr+1,tblptrh
  1272  0018F4  4A01               	infsnz	strchr@ptr^0,f,c
  1273  0018F6  2A02               	incf	(strchr@ptr+1)^0,f,c
  1274  0018F8                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1275  0018F8  6AF8               	clrf	tblptru,c
  1276  0018FA                     	endif
  1277  0018FA                     	if	0	;tblptru may be non-zero
  1278  0018FA                     	endif
  1279  0018FA  0008               	tblrd		*
  1280  0018FC  50F5               	movf	tablat,w,c
  1281  0018FE  0900               	iorlw	0
  1282  001900  A4D8               	btfss	status,2,c
  1283  001902  EF85  F00C         	goto	u571
  1284  001906  EF87  F00C         	goto	u570
  1285  00190A                     u571:
  1286  00190A  EF5D  F00C         	goto	l1100
  1287  00190E                     u570:
  1288  00190E  0E00               	movlw	0
  1289  001910  6E01               	movwf	?_strchr^0,c
  1290  001912  0E00               	movlw	0
  1291  001914  6E02               	movwf	(?_strchr+1)^0,c
  1292  001916                     l1102:
  1293  001916  0012               	return		;funcret
  1294  001918                     __end_of_strchr:
  1295                           	callstack 0
  1296                           
  1297 ;; *************** function _strcpy *****************
  1298 ;; Defined at:
  1299 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\strcpy.c"
  1300 ;; Parameters:    Size  Location     Type
  1301 ;;  to              2    0[COMRAM] PTR unsigned char 
  1302 ;;		 -> main@LastName(20), main@FirstName(20), 
  1303 ;;  from            2    2[COMRAM] PTR const unsigned char 
  1304 ;;		 -> NULL(0), main@inputstring(51), 
  1305 ;; Auto vars:     Size  Location     Type
  1306 ;;  cp              2    4[COMRAM] PTR unsigned char 
  1307 ;;		 -> main@LastName(20), main@FirstName(20), 
  1308 ;; Return value:  Size  Location     Type
  1309 ;;                  2    0[COMRAM] PTR unsigned char 
  1310 ;; Registers used:
  1311 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  1312 ;; Tracked objects:
  1313 ;;		On entry : 0/0
  1314 ;;		On exit  : 0/0
  1315 ;;		Unchanged: 0/0
  1316 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1317 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1318 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1319 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1320 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1321 ;;Total ram usage:        6 bytes
  1322 ;; Hardware stack levels used:    1
  1323 ;; This function calls:
  1324 ;;		Nothing
  1325 ;; This function is called by:
  1326 ;;		_main
  1327 ;; This function uses a non-reentrant model
  1328 ;;
  1329                           
  1330                           	psect	text6
  1331  0019C6                     __ptext6:
  1332                           	callstack 0
  1333  0019C6                     _strcpy:
  1334                           	callstack 30
  1335  0019C6  C001  F005         	movff	strcpy@to,strcpy@cp
  1336  0019CA  C002  F006         	movff	strcpy@to+1,strcpy@cp+1
  1337  0019CE  EFED  F00C         	goto	l1827
  1338  0019D2                     l1825:
  1339  0019D2  4A05               	infsnz	strcpy@cp^0,f,c
  1340  0019D4  2A06               	incf	(strcpy@cp+1)^0,f,c
  1341  0019D6  4A03               	infsnz	strcpy@from^0,f,c
  1342  0019D8  2A04               	incf	(strcpy@from+1)^0,f,c
  1343  0019DA                     l1827:
  1344  0019DA  0060  F00F  FFD9   	movff	strcpy@from,fsr2l
  1345  0019E0  0060  F013  FFDA   	movff	strcpy@from+1,fsr2h
  1346  0019E6  0060  F017  FFE1   	movff	strcpy@cp,fsr1l
  1347  0019EC  0060  F01B  FFE2   	movff	strcpy@cp+1,fsr1h
  1348  0019F2  006F FF7F FFE7     	movff	indf2,indf1
  1349  0019F8  50E7               	movf	indf1,w,c
  1350  0019FA  A4D8               	btfss	status,2,c
  1351  0019FC  EF02  F00D         	goto	u901
  1352  001A00  EF04  F00D         	goto	u900
  1353  001A04                     u901:
  1354  001A04  EFE9  F00C         	goto	l1825
  1355  001A08                     u900:
  1356  001A08  0012               	return		;funcret
  1357  001A0A                     __end_of_strcpy:
  1358                           	callstack 0
  1359                           
  1360 ;; *************** function _clearPuTTY *****************
  1361 ;; Defined at:
  1362 ;;		line 4 in file "putty.c"
  1363 ;; Parameters:    Size  Location     Type
  1364 ;;		None
  1365 ;; Auto vars:     Size  Location     Type
  1366 ;;		None
  1367 ;; Return value:  Size  Location     Type
  1368 ;;                  1    wreg      void 
  1369 ;; Registers used:
  1370 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1371 ;; Tracked objects:
  1372 ;;		On entry : 0/0
  1373 ;;		On exit  : 0/0
  1374 ;;		Unchanged: 0/0
  1375 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1376 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1377 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1378 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1379 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1380 ;;Total ram usage:        0 bytes
  1381 ;; Hardware stack levels used:    1
  1382 ;; Hardware stack levels required when called:    3
  1383 ;; This function calls:
  1384 ;;		_printf
  1385 ;; This function is called by:
  1386 ;;		_main
  1387 ;; This function uses a non-reentrant model
  1388 ;;
  1389                           
  1390                           	psect	text7
  1391  001760                     __ptext7:
  1392                           	callstack 0
  1393  001760                     _clearPuTTY:
  1394                           	callstack 27
  1395  001760                     
  1396                           ;putty.c: 6: printf("%c%c%c%c",27,'[','2','J');
  1397  001760  0E4B               	movlw	low STR_7
  1398  001762  6E03               	movwf	printf@f^0,c
  1399  001764  0E10               	movlw	high STR_7
  1400  001766  6E04               	movwf	(printf@f+1)^0,c
  1401  001768  0E00               	movlw	0
  1402  00176A  6E06               	movwf	(?_printf+3)^0,c
  1403  00176C  0E1B               	movlw	27
  1404  00176E  6E05               	movwf	(?_printf+2)^0,c
  1405  001770  0E00               	movlw	0
  1406  001772  6E08               	movwf	(?_printf+5)^0,c
  1407  001774  0E5B               	movlw	91
  1408  001776  6E07               	movwf	(?_printf+4)^0,c
  1409  001778  0E00               	movlw	0
  1410  00177A  6E0A               	movwf	(?_printf+7)^0,c
  1411  00177C  0E32               	movlw	50
  1412  00177E  6E09               	movwf	(?_printf+6)^0,c
  1413  001780  0E00               	movlw	0
  1414  001782  6E0C               	movwf	(?_printf+9)^0,c
  1415  001784  0E4A               	movlw	74
  1416  001786  6E0B               	movwf	(?_printf+8)^0,c
  1417  001788  ECF0  F008         	call	_printf	;wreg free
  1418                           
  1419                           ;putty.c: 7: printf("%c%c%c%c",27,'[','3','J');
  1420  00178C  0E4B               	movlw	low STR_7
  1421  00178E  6E03               	movwf	printf@f^0,c
  1422  001790  0E10               	movlw	high STR_7
  1423  001792  6E04               	movwf	(printf@f+1)^0,c
  1424  001794  0E00               	movlw	0
  1425  001796  6E06               	movwf	(?_printf+3)^0,c
  1426  001798  0E1B               	movlw	27
  1427  00179A  6E05               	movwf	(?_printf+2)^0,c
  1428  00179C  0E00               	movlw	0
  1429  00179E  6E08               	movwf	(?_printf+5)^0,c
  1430  0017A0  0E5B               	movlw	91
  1431  0017A2  6E07               	movwf	(?_printf+4)^0,c
  1432  0017A4  0E00               	movlw	0
  1433  0017A6  6E0A               	movwf	(?_printf+7)^0,c
  1434  0017A8  0E33               	movlw	51
  1435  0017AA  6E09               	movwf	(?_printf+6)^0,c
  1436  0017AC  0E00               	movlw	0
  1437  0017AE  6E0C               	movwf	(?_printf+9)^0,c
  1438  0017B0  0E4A               	movlw	74
  1439  0017B2  6E0B               	movwf	(?_printf+8)^0,c
  1440  0017B4  ECF0  F008         	call	_printf	;wreg free
  1441                           
  1442                           ;putty.c: 8: printf("%c%c%c",27,'[','H');
  1443  0017B8  0E4D               	movlw	low (STR_7+2)
  1444  0017BA  6E03               	movwf	printf@f^0,c
  1445  0017BC  0E10               	movlw	high (STR_7+2)
  1446  0017BE  6E04               	movwf	(printf@f+1)^0,c
  1447  0017C0  0E00               	movlw	0
  1448  0017C2  6E06               	movwf	(?_printf+3)^0,c
  1449  0017C4  0E1B               	movlw	27
  1450  0017C6  6E05               	movwf	(?_printf+2)^0,c
  1451  0017C8  0E00               	movlw	0
  1452  0017CA  6E08               	movwf	(?_printf+5)^0,c
  1453  0017CC  0E5B               	movlw	91
  1454  0017CE  6E07               	movwf	(?_printf+4)^0,c
  1455  0017D0  0E00               	movlw	0
  1456  0017D2  6E0A               	movwf	(?_printf+7)^0,c
  1457  0017D4  0E48               	movlw	72
  1458  0017D6  6E09               	movwf	(?_printf+6)^0,c
  1459  0017D8  ECF0  F008         	call	_printf	;wreg free
  1460  0017DC  0012               	return		;funcret
  1461  0017DE                     __end_of_clearPuTTY:
  1462                           	callstack 0
  1463                           
  1464 ;; *************** function _printf *****************
  1465 ;; Defined at:
  1466 ;;		line 477 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c"
  1467 ;; Parameters:    Size  Location     Type
  1468 ;;  f               2    2[COMRAM] PTR const unsigned char 
  1469 ;;		 -> STR_9(7), STR_8(9), STR_7(9), STR_6(18), 
  1470 ;;		 -> STR_5(32), STR_4(32), STR_1(24), 
  1471 ;; Auto vars:     Size  Location     Type
  1472 ;;  tmpval          4    0        struct .
  1473 ;;  cp              2   15[COMRAM] PTR const unsigned char 
  1474 ;;		 -> STR_10(7), ?_printf(2), main@reverselast(51), main@reversefirst(51), 
  1475 ;;		 -> main@caplast(51), main@capfirst(51), main@LastName(20), main@FirstName(20), 
  1476 ;;  ap              2   13[COMRAM] PTR void [1]
  1477 ;;		 -> ?_printf(2), 
  1478 ;;  len             2    0        unsigned int 
  1479 ;;  val             2    0        unsigned int 
  1480 ;;  c               1   17[COMRAM] unsigned char 
  1481 ;;  flag            1    0        unsigned char 
  1482 ;;  prec            1    0        char 
  1483 ;; Return value:  Size  Location     Type
  1484 ;;                  2    2[COMRAM] int 
  1485 ;; Registers used:
  1486 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1487 ;; Tracked objects:
  1488 ;;		On entry : 0/0
  1489 ;;		On exit  : 0/0
  1490 ;;		Unchanged: 0/0
  1491 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1492 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1493 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1494 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1495 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1496 ;;Total ram usage:       16 bytes
  1497 ;; Hardware stack levels used:    1
  1498 ;; Hardware stack levels required when called:    2
  1499 ;; This function calls:
  1500 ;;		_putch
  1501 ;; This function is called by:
  1502 ;;		_main
  1503 ;;		_clearPuTTY
  1504 ;; This function uses a non-reentrant model
  1505 ;;
  1506                           
  1507                           	psect	text8
  1508  0011E0                     __ptext8:
  1509                           	callstack 0
  1510  0011E0                     _printf:
  1511                           	callstack 28
  1512  0011E0                     
  1513                           ;doprnt.c: 479: va_list ap;;doprnt.c: 512: char c;;doprnt.c: 521: signed char prec;;dopr
      +                          nt.c: 525: unsigned char flag;;doprnt.c: 540: union {;doprnt.c: 541: unsigned long vd;;d
      +                          oprnt.c: 542: double integ;;doprnt.c: 543: } tmpval;;doprnt.c: 545: unsigned int val;;do
      +                          prnt.c: 546: unsigned len;;doprnt.c: 547: const char * cp;;doprnt.c: 550: *ap = __va_sta
      +                          rt();
  1514  0011E0  0E05               	movlw	low (?_printf+2)
  1515  0011E2  6E0E               	movwf	printf@ap^0,c
  1516  0011E4  0E00               	movlw	high (?_printf+2)
  1517  0011E6  6E0F               	movwf	(printf@ap+1)^0,c
  1518                           
  1519                           ;doprnt.c: 553: while((c = *f++)) {
  1520  0011E8  EF8A  F009         	goto	l1715
  1521  0011EC                     l1685:
  1522                           
  1523                           ;doprnt.c: 555: if(c != '%')
  1524  0011EC  0E25               	movlw	37
  1525  0011EE  1812               	xorwf	printf@c^0,w,c
  1526  0011F0  B4D8               	btfsc	status,2,c
  1527  0011F2  EFFD  F008         	goto	u661
  1528  0011F6  EFFF  F008         	goto	u660
  1529  0011FA                     u661:
  1530  0011FA  EF04  F009         	goto	l1689
  1531  0011FE                     u660:
  1532  0011FE                     
  1533                           ;doprnt.c: 557: {;doprnt.c: 558: (putch(c) );
  1534  0011FE  5012               	movf	printf@c^0,w,c
  1535  001200  ECAC  F00D         	call	_putch
  1536                           
  1537                           ;doprnt.c: 559: continue;
  1538  001204  EF8A  F009         	goto	l1715
  1539  001208                     l1689:
  1540                           
  1541                           ;doprnt.c: 661: switch(c = *f++) {
  1542  001208  EF6E  F009         	goto	l1713
  1543  00120C                     l1691:
  1544                           
  1545                           ;doprnt.c: 760: cp = (*(const char * *)__va_arg((*(const char * **)ap), (const char *)0)
      +                          );
  1546  00120C  0060  F03B  FFD9   	movff	printf@ap,fsr2l
  1547  001212  0060  F03F  FFDA   	movff	printf@ap+1,fsr2h
  1548  001218  006F FF78  F010    	movff	postinc2,printf@cp
  1549  00121E  006F FF74  F011    	movff	postdec2,printf@cp+1
  1550  001224  0E02               	movlw	2
  1551  001226  260E               	addwf	printf@ap^0,f,c
  1552  001228  0E00               	movlw	0
  1553  00122A  220F               	addwfc	(printf@ap+1)^0,f,c
  1554  00122C                     
  1555                           ;doprnt.c: 766: if(!cp)
  1556  00122C  5010               	movf	printf@cp^0,w,c
  1557  00122E  1011               	iorwf	(printf@cp+1)^0,w,c
  1558  001230  A4D8               	btfss	status,2,c
  1559  001232  EF1D  F009         	goto	u671
  1560  001236  EF1F  F009         	goto	u670
  1561  00123A                     u671:
  1562  00123A  EF3E  F009         	goto	l1703
  1563  00123E                     u670:
  1564  00123E                     
  1565                           ;doprnt.c: 767: cp = "(null)";
  1566  00123E  0E54               	movlw	low STR_10
  1567  001240  6E10               	movwf	printf@cp^0,c
  1568  001242  0E10               	movlw	high STR_10
  1569  001244  6E11               	movwf	(printf@cp+1)^0,c
  1570  001246  EF3E  F009         	goto	l1703
  1571  00124A                     l1699:
  1572                           
  1573                           ;doprnt.c: 804: (putch(*cp++) );
  1574  00124A  0060  F043  FFF6   	movff	printf@cp,tblptrl
  1575  001250  0060  F047  FFF7   	movff	printf@cp+1,tblptrh
  1576  001256  0E00               	movlw	low (__smallconst shr (0+16))
  1577  001258  6EF8               	movwf	tblptru,c
  1578  00125A  0E0F               	movlw	(high __ramtop+-1)
  1579  00125C  64F7               	cpfsgt	tblptrh,c
  1580  00125E  D003               	bra	u687
  1581  001260  0008               	tblrd		*
  1582  001262  50F5               	movf	tablat,w,c
  1583  001264  D007               	bra	u680
  1584  001266                     u687:
  1585  001266  006F FFDB FFE9     	movff	tblptrl,fsr0l
  1586  00126C  006F FFDF FFEA     	movff	tblptrh,fsr0h
  1587  001272  50EF               	movf	indf0,w,c
  1588  001274                     u680:
  1589  001274  ECAC  F00D         	call	_putch
  1590  001278  4A10               	infsnz	printf@cp^0,f,c
  1591  00127A  2A11               	incf	(printf@cp+1)^0,f,c
  1592  00127C                     l1703:
  1593  00127C  0060  F043  FFF6   	movff	printf@cp,tblptrl
  1594  001282  0060  F047  FFF7   	movff	printf@cp+1,tblptrh
  1595  001288  0E00               	movlw	low (__smallconst shr (0+16))
  1596  00128A  6EF8               	movwf	tblptru,c
  1597  00128C  0E0F               	movlw	(high __ramtop+-1)
  1598  00128E  64F7               	cpfsgt	tblptrh,c
  1599  001290  D003               	bra	u697
  1600  001292  0008               	tblrd		*
  1601  001294  50F5               	movf	tablat,w,c
  1602  001296  D007               	bra	u690
  1603  001298                     u697:
  1604  001298  006F FFDB FFE9     	movff	tblptrl,fsr0l
  1605  00129E  006F FFDF FFEA     	movff	tblptrh,fsr0h
  1606  0012A4  50EF               	movf	indf0,w,c
  1607  0012A6                     u690:
  1608  0012A6  0900               	iorlw	0
  1609  0012A8  A4D8               	btfss	status,2,c
  1610  0012AA  EF59  F009         	goto	u701
  1611  0012AE  EF5B  F009         	goto	u700
  1612  0012B2                     u701:
  1613  0012B2  EF25  F009         	goto	l1699
  1614  0012B6                     u700:
  1615  0012B6  EF8A  F009         	goto	l1715
  1616  0012BA                     l1705:
  1617                           
  1618                           ;doprnt.c: 825: c = (char)(*(int *)__va_arg((*(int **)ap), (int)0));
  1619  0012BA  0060  F03B  FFD9   	movff	printf@ap,fsr2l
  1620  0012C0  0060  F03F  FFDA   	movff	printf@ap+1,fsr2h
  1621  0012C6  50DF               	movf	indf2,w,c
  1622  0012C8  6E12               	movwf	printf@c^0,c
  1623  0012CA  0E02               	movlw	2
  1624  0012CC  260E               	addwf	printf@ap^0,f,c
  1625  0012CE  0E00               	movlw	0
  1626  0012D0  220F               	addwfc	(printf@ap+1)^0,f,c
  1627  0012D2                     l1709:
  1628                           
  1629                           ;doprnt.c: 835: (putch(c) );
  1630  0012D2  5012               	movf	printf@c^0,w,c
  1631  0012D4  ECAC  F00D         	call	_putch
  1632                           
  1633                           ;doprnt.c: 836: continue;
  1634  0012D8  EF8A  F009         	goto	l1715
  1635  0012DC                     l1713:
  1636  0012DC  0060  F00F  FFF6   	movff	printf@f,tblptrl
  1637  0012E2  0060  F013  FFF7   	movff	printf@f+1,tblptrh
  1638  0012E8  4A03               	infsnz	printf@f^0,f,c
  1639  0012EA  2A04               	incf	(printf@f+1)^0,f,c
  1640  0012EC                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1641  0012EC  6AF8               	clrf	tblptru,c
  1642  0012EE                     	endif
  1643  0012EE                     	if	0	;tblptru may be non-zero
  1644  0012EE                     	endif
  1645  0012EE  0008               	tblrd		*
  1646  0012F0  006F FFD4  F012    	movff	tablat,printf@c
  1647  0012F6  5012               	movf	printf@c^0,w,c
  1648                           
  1649                           ; Switch size 1, requested type "simple"
  1650                           ; Number of cases is 3, Range of values is 0 to 115
  1651                           ; switch strategies available:
  1652                           ; Name         Instructions Cycles
  1653                           ; simple_byte           10     6 (average)
  1654                           ;	Chosen strategy is simple_byte
  1655  0012F8  0A00               	xorlw	0	; case 0
  1656  0012FA  B4D8               	btfsc	status,2,c
  1657  0012FC  EF9F  F009         	goto	l389
  1658  001300  0A63               	xorlw	99	; case 99
  1659  001302  B4D8               	btfsc	status,2,c
  1660  001304  EF5D  F009         	goto	l1705
  1661  001308  0A10               	xorlw	16	; case 115
  1662  00130A  B4D8               	btfsc	status,2,c
  1663  00130C  EF06  F009         	goto	l1691
  1664  001310  EF69  F009         	goto	l1709
  1665  001314                     l1715:
  1666  001314  0060  F00F  FFF6   	movff	printf@f,tblptrl
  1667  00131A  0060  F013  FFF7   	movff	printf@f+1,tblptrh
  1668  001320  4A03               	infsnz	printf@f^0,f,c
  1669  001322  2A04               	incf	(printf@f+1)^0,f,c
  1670  001324                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1671  001324  6AF8               	clrf	tblptru,c
  1672  001326                     	endif
  1673  001326                     	if	0	;tblptru may be non-zero
  1674  001326                     	endif
  1675  001326  0008               	tblrd		*
  1676  001328  006F FFD4  F012    	movff	tablat,printf@c
  1677  00132E  5012               	movf	printf@c^0,w,c
  1678  001330  A4D8               	btfss	status,2,c
  1679  001332  EF9D  F009         	goto	u711
  1680  001336  EF9F  F009         	goto	u710
  1681  00133A                     u711:
  1682  00133A  EFF6  F008         	goto	l1685
  1683  00133E                     u710:
  1684  00133E                     l389:
  1685  00133E  0012               	return		;funcret
  1686  001340                     __end_of_printf:
  1687                           	callstack 0
  1688                           
  1689 ;; *************** function _putch *****************
  1690 ;; Defined at:
  1691 ;;		line 175 in file "mcc_generated_files/uart2.c"
  1692 ;; Parameters:    Size  Location     Type
  1693 ;;  txData          1    wreg     unsigned char 
  1694 ;; Auto vars:     Size  Location     Type
  1695 ;;  txData          1    1[COMRAM] unsigned char 
  1696 ;; Return value:  Size  Location     Type
  1697 ;;                  1    wreg      void 
  1698 ;; Registers used:
  1699 ;;		wreg, status,2, cstack
  1700 ;; Tracked objects:
  1701 ;;		On entry : 0/0
  1702 ;;		On exit  : 0/0
  1703 ;;		Unchanged: 0/0
  1704 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1705 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1706 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1707 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1708 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1709 ;;Total ram usage:        1 bytes
  1710 ;; Hardware stack levels used:    1
  1711 ;; Hardware stack levels required when called:    1
  1712 ;; This function calls:
  1713 ;;		_UART2_Write
  1714 ;; This function is called by:
  1715 ;;		_printf
  1716 ;; This function uses a non-reentrant model
  1717 ;;
  1718                           
  1719                           	psect	text9
  1720  001B58                     __ptext9:
  1721                           	callstack 0
  1722  001B58                     _putch:
  1723                           	callstack 28
  1724                           
  1725                           ;incstack = 0
  1726                           ;putch@txData stored from wreg
  1727  001B58  6E02               	movwf	putch@txData^0,c
  1728  001B5A                     
  1729                           ;uart2.c: 177: UART2_Write(txData);
  1730  001B5A  5002               	movf	putch@txData^0,w,c
  1731  001B5C  EC7F  F00D         	call	_UART2_Write
  1732  001B60  0012               	return		;funcret
  1733  001B62                     __end_of_putch:
  1734                           	callstack 0
  1735                           
  1736 ;; *************** function _UART2_Write *****************
  1737 ;; Defined at:
  1738 ;;		line 161 in file "mcc_generated_files/uart2.c"
  1739 ;; Parameters:    Size  Location     Type
  1740 ;;  txData          1    wreg     unsigned char 
  1741 ;; Auto vars:     Size  Location     Type
  1742 ;;  txData          1    0[COMRAM] unsigned char 
  1743 ;; Return value:  Size  Location     Type
  1744 ;;                  1    wreg      void 
  1745 ;; Registers used:
  1746 ;;		wreg
  1747 ;; Tracked objects:
  1748 ;;		On entry : 0/0
  1749 ;;		On exit  : 0/0
  1750 ;;		Unchanged: 0/0
  1751 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1752 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1753 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1754 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1755 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1756 ;;Total ram usage:        1 bytes
  1757 ;; Hardware stack levels used:    1
  1758 ;; This function calls:
  1759 ;;		Nothing
  1760 ;; This function is called by:
  1761 ;;		_putch
  1762 ;; This function uses a non-reentrant model
  1763 ;;
  1764                           
  1765                           	psect	text10
  1766  001AFE                     __ptext10:
  1767                           	callstack 0
  1768  001AFE                     _UART2_Write:
  1769                           	callstack 28
  1770                           
  1771                           ;incstack = 0
  1772                           ;UART2_Write@txData stored from wreg
  1773  001AFE  6E01               	movwf	UART2_Write@txData^0,c
  1774  001B00                     l175:
  1775  001B00  0139               	movlb	57	; () banked
  1776  001B02  A7A6               	btfss	166,3,b	;volatile
  1777  001B04  EF86  F00D         	goto	u551
  1778  001B08  EF88  F00D         	goto	u550
  1779  001B0C                     u551:
  1780  001B0C  EF80  F00D         	goto	l175
  1781  001B10                     u550:
  1782  001B10                     
  1783                           ; BSR set to: 57
  1784                           ;uart2.c: 165: };uart2.c: 167: U2TXB = txData;
  1785  001B10  0060  F007  FDD2   	movff	UART2_Write@txData,15826	;volatile
  1786  001B16                     
  1787                           ; BSR set to: 57
  1788  001B16  0012               	return		;funcret
  1789  001B18                     __end_of_UART2_Write:
  1790                           	callstack 0
  1791                           
  1792 ;; *************** function _SYSTEM_Initialize *****************
  1793 ;; Defined at:
  1794 ;;		line 50 in file "mcc_generated_files/mcc.c"
  1795 ;; Parameters:    Size  Location     Type
  1796 ;;		None
  1797 ;; Auto vars:     Size  Location     Type
  1798 ;;		None
  1799 ;; Return value:  Size  Location     Type
  1800 ;;                  1    wreg      void 
  1801 ;; Registers used:
  1802 ;;		wreg, status,2, status,0, cstack
  1803 ;; Tracked objects:
  1804 ;;		On entry : 0/0
  1805 ;;		On exit  : 0/0
  1806 ;;		Unchanged: 0/0
  1807 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1808 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1809 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1810 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1811 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1812 ;;Total ram usage:        0 bytes
  1813 ;; Hardware stack levels used:    1
  1814 ;; Hardware stack levels required when called:    2
  1815 ;; This function calls:
  1816 ;;		_OSCILLATOR_Initialize
  1817 ;;		_PIN_MANAGER_Initialize
  1818 ;;		_PMD_Initialize
  1819 ;;		_UART2_Initialize
  1820 ;; This function is called by:
  1821 ;;		_main
  1822 ;; This function uses a non-reentrant model
  1823 ;;
  1824                           
  1825                           	psect	text11
  1826  001B46                     __ptext11:
  1827                           	callstack 0
  1828  001B46                     _SYSTEM_Initialize:
  1829                           	callstack 28
  1830  001B46                     
  1831                           ;mcc.c: 52: PMD_Initialize();
  1832  001B46  EC6D  F00D         	call	_PMD_Initialize	;wreg free
  1833                           
  1834                           ;mcc.c: 53: PIN_MANAGER_Initialize();
  1835  001B4A  EC23  F00B         	call	_PIN_MANAGER_Initialize	;wreg free
  1836                           
  1837                           ;mcc.c: 54: OSCILLATOR_Initialize();
  1838  001B4E  EC8C  F00D         	call	_OSCILLATOR_Initialize	;wreg free
  1839  001B52                     
  1840                           ;mcc.c: 55: UART2_Initialize();
  1841  001B52  EC8C  F00C         	call	_UART2_Initialize	;wreg free
  1842  001B56  0012               	return		;funcret
  1843  001B58                     __end_of_SYSTEM_Initialize:
  1844                           	callstack 0
  1845                           
  1846 ;; *************** function _UART2_Initialize *****************
  1847 ;; Defined at:
  1848 ;;		line 66 in file "mcc_generated_files/uart2.c"
  1849 ;; Parameters:    Size  Location     Type
  1850 ;;		None
  1851 ;; Auto vars:     Size  Location     Type
  1852 ;;		None
  1853 ;; Return value:  Size  Location     Type
  1854 ;;                  1    wreg      void 
  1855 ;; Registers used:
  1856 ;;		wreg, status,2, status,0, cstack
  1857 ;; Tracked objects:
  1858 ;;		On entry : 0/0
  1859 ;;		On exit  : 0/0
  1860 ;;		Unchanged: 0/0
  1861 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1862 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1863 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1864 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1865 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1866 ;;Total ram usage:        0 bytes
  1867 ;; Hardware stack levels used:    1
  1868 ;; Hardware stack levels required when called:    1
  1869 ;; This function calls:
  1870 ;;		_UART2_SetErrorHandler
  1871 ;;		_UART2_SetFramingErrorHandler
  1872 ;;		_UART2_SetOverrunErrorHandler
  1873 ;; This function is called by:
  1874 ;;		_SYSTEM_Initialize
  1875 ;; This function uses a non-reentrant model
  1876 ;;
  1877                           
  1878                           	psect	text12
  1879  001918                     __ptext12:
  1880                           	callstack 0
  1881  001918                     _UART2_Initialize:
  1882                           	callstack 28
  1883  001918                     
  1884                           ;uart2.c: 73: U2P1L = 0x00;
  1885  001918  0E00               	movlw	0
  1886  00191A  013D               	movlb	61	; () banked
  1887  00191C  6FD4               	movwf	212,b	;volatile
  1888                           
  1889                           ;uart2.c: 76: U2P2L = 0x00;
  1890  00191E  0E00               	movlw	0
  1891  001920  6FD6               	movwf	214,b	;volatile
  1892                           
  1893                           ;uart2.c: 79: U2P3L = 0x00;
  1894  001922  0E00               	movlw	0
  1895  001924  6FD8               	movwf	216,b	;volatile
  1896                           
  1897                           ;uart2.c: 82: U2CON0 = 0xB0;
  1898  001926  0EB0               	movlw	176
  1899  001928  6FDA               	movwf	218,b	;volatile
  1900                           
  1901                           ;uart2.c: 85: U2CON1 = 0x80;
  1902  00192A  0E80               	movlw	128
  1903  00192C  6FDB               	movwf	219,b	;volatile
  1904                           
  1905                           ;uart2.c: 88: U2CON2 = 0x00;
  1906  00192E  0E00               	movlw	0
  1907  001930  6FDC               	movwf	220,b	;volatile
  1908                           
  1909                           ;uart2.c: 91: U2BRGL = 0x67;
  1910  001932  0E67               	movlw	103
  1911  001934  6FDD               	movwf	221,b	;volatile
  1912                           
  1913                           ;uart2.c: 94: U2BRGH = 0x00;
  1914  001936  0E00               	movlw	0
  1915  001938  6FDE               	movwf	222,b	;volatile
  1916                           
  1917                           ;uart2.c: 97: U2FIFO = 0x00;
  1918  00193A  0E00               	movlw	0
  1919  00193C  6FDF               	movwf	223,b	;volatile
  1920                           
  1921                           ;uart2.c: 100: U2UIR = 0x00;
  1922  00193E  0E00               	movlw	0
  1923  001940  6FE0               	movwf	224,b	;volatile
  1924                           
  1925                           ;uart2.c: 103: U2ERRIR = 0x00;
  1926  001942  0E00               	movlw	0
  1927  001944  6FE1               	movwf	225,b	;volatile
  1928                           
  1929                           ;uart2.c: 106: U2ERRIE = 0x00;
  1930  001946  0E00               	movlw	0
  1931  001948  6FE2               	movwf	226,b	;volatile
  1932  00194A                     
  1933                           ; BSR set to: 61
  1934                           ;uart2.c: 109: UART2_SetFramingErrorHandler(UART2_DefaultFramingErrorHandler);
  1935  00194A  0E88               	movlw	low _UART2_DefaultFramingErrorHandler
  1936  00194C  6E01               	movwf	UART2_SetFramingErrorHandler@interruptHandler^0,c
  1937  00194E  0E1B               	movlw	high _UART2_DefaultFramingErrorHandler
  1938  001950  6E02               	movwf	(UART2_SetFramingErrorHandler@interruptHandler+1)^0,c
  1939  001952  ECB6  F00D         	call	_UART2_SetFramingErrorHandler	;wreg free
  1940  001956                     
  1941                           ;uart2.c: 110: UART2_SetOverrunErrorHandler(UART2_DefaultOverrunErrorHandler);
  1942  001956  0E86               	movlw	low _UART2_DefaultOverrunErrorHandler
  1943  001958  6E01               	movwf	UART2_SetOverrunErrorHandler@interruptHandler^0,c
  1944  00195A  0E1B               	movlw	high _UART2_DefaultOverrunErrorHandler
  1945  00195C  6E02               	movwf	(UART2_SetOverrunErrorHandler@interruptHandler+1)^0,c
  1946  00195E  ECB1  F00D         	call	_UART2_SetOverrunErrorHandler	;wreg free
  1947  001962                     
  1948                           ;uart2.c: 111: UART2_SetErrorHandler(UART2_DefaultErrorHandler);
  1949  001962  0E8A               	movlw	low _UART2_DefaultErrorHandler
  1950  001964  6E01               	movwf	UART2_SetErrorHandler@interruptHandler^0,c
  1951  001966  0E1B               	movlw	high _UART2_DefaultErrorHandler
  1952  001968  6E02               	movwf	(UART2_SetErrorHandler@interruptHandler+1)^0,c
  1953  00196A  ECBB  F00D         	call	_UART2_SetErrorHandler	;wreg free
  1954  00196E                     
  1955                           ;uart2.c: 113: uart2RxLastError.status = 0;
  1956  00196E  0E00               	movlw	0
  1957  001970  0100               	movlb	0	; () banked
  1958  001972  6FFD               	movwf	_uart2RxLastError& (0+255),b	;volatile
  1959  001974                     
  1960                           ; BSR set to: 0
  1961  001974  0012               	return		;funcret
  1962  001976                     __end_of_UART2_Initialize:
  1963                           	callstack 0
  1964                           
  1965 ;; *************** function _UART2_SetOverrunErrorHandler *****************
  1966 ;; Defined at:
  1967 ;;		line 195 in file "mcc_generated_files/uart2.c"
  1968 ;; Parameters:    Size  Location     Type
  1969 ;;  interruptHan    2    0[COMRAM] PTR FTN()void 
  1970 ;;		 -> UART2_DefaultOverrunErrorHandler(1), 
  1971 ;; Auto vars:     Size  Location     Type
  1972 ;;		None
  1973 ;; Return value:  Size  Location     Type
  1974 ;;                  1    wreg      void 
  1975 ;; Registers used:
  1976 ;;		wreg, status,2, status,0
  1977 ;; Tracked objects:
  1978 ;;		On entry : 0/0
  1979 ;;		On exit  : 0/0
  1980 ;;		Unchanged: 0/0
  1981 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1982 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1983 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1984 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1985 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1986 ;;Total ram usage:        2 bytes
  1987 ;; Hardware stack levels used:    1
  1988 ;; This function calls:
  1989 ;;		Nothing
  1990 ;; This function is called by:
  1991 ;;		_UART2_Initialize
  1992 ;; This function uses a non-reentrant model
  1993 ;;
  1994                           
  1995                           	psect	text13
  1996  001B62                     __ptext13:
  1997                           	callstack 0
  1998  001B62                     _UART2_SetOverrunErrorHandler:
  1999                           	callstack 28
  2000  001B62                     
  2001                           ;uart2.c: 196: UART2_OverrunErrorHandler = interruptHandler;
  2002  001B62  C001  F177         	movff	UART2_SetOverrunErrorHandler@interruptHandler,_UART2_OverrunErrorHandler
  2003  001B66  C002  F178         	movff	UART2_SetOverrunErrorHandler@interruptHandler+1,_UART2_OverrunErrorHandler+1
  2004  001B6A  0012               	return		;funcret
  2005  001B6C                     __end_of_UART2_SetOverrunErrorHandler:
  2006                           	callstack 0
  2007                           
  2008 ;; *************** function _UART2_SetFramingErrorHandler *****************
  2009 ;; Defined at:
  2010 ;;		line 191 in file "mcc_generated_files/uart2.c"
  2011 ;; Parameters:    Size  Location     Type
  2012 ;;  interruptHan    2    0[COMRAM] PTR FTN()void 
  2013 ;;		 -> UART2_DefaultFramingErrorHandler(1), 
  2014 ;; Auto vars:     Size  Location     Type
  2015 ;;		None
  2016 ;; Return value:  Size  Location     Type
  2017 ;;                  1    wreg      void 
  2018 ;; Registers used:
  2019 ;;		wreg, status,2, status,0
  2020 ;; Tracked objects:
  2021 ;;		On entry : 0/0
  2022 ;;		On exit  : 0/0
  2023 ;;		Unchanged: 0/0
  2024 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2025 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2026 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2027 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2028 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2029 ;;Total ram usage:        2 bytes
  2030 ;; Hardware stack levels used:    1
  2031 ;; This function calls:
  2032 ;;		Nothing
  2033 ;; This function is called by:
  2034 ;;		_UART2_Initialize
  2035 ;; This function uses a non-reentrant model
  2036 ;;
  2037                           
  2038                           	psect	text14
  2039  001B6C                     __ptext14:
  2040                           	callstack 0
  2041  001B6C                     _UART2_SetFramingErrorHandler:
  2042                           	callstack 28
  2043  001B6C                     
  2044                           ;uart2.c: 192: UART2_FramingErrorHandler = interruptHandler;
  2045  001B6C  C001  F0FE         	movff	UART2_SetFramingErrorHandler@interruptHandler,_UART2_FramingErrorHandler
  2046  001B70  C002  F0FF         	movff	UART2_SetFramingErrorHandler@interruptHandler+1,_UART2_FramingErrorHandler+1
  2047  001B74  0012               	return		;funcret
  2048  001B76                     __end_of_UART2_SetFramingErrorHandler:
  2049                           	callstack 0
  2050                           
  2051 ;; *************** function _UART2_SetErrorHandler *****************
  2052 ;; Defined at:
  2053 ;;		line 199 in file "mcc_generated_files/uart2.c"
  2054 ;; Parameters:    Size  Location     Type
  2055 ;;  interruptHan    2    0[COMRAM] PTR FTN()void 
  2056 ;;		 -> UART2_DefaultErrorHandler(1), 
  2057 ;; Auto vars:     Size  Location     Type
  2058 ;;		None
  2059 ;; Return value:  Size  Location     Type
  2060 ;;                  1    wreg      void 
  2061 ;; Registers used:
  2062 ;;		wreg, status,2, status,0
  2063 ;; Tracked objects:
  2064 ;;		On entry : 0/0
  2065 ;;		On exit  : 0/0
  2066 ;;		Unchanged: 0/0
  2067 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2068 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2069 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2070 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2071 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2072 ;;Total ram usage:        2 bytes
  2073 ;; Hardware stack levels used:    1
  2074 ;; This function calls:
  2075 ;;		Nothing
  2076 ;; This function is called by:
  2077 ;;		_UART2_Initialize
  2078 ;; This function uses a non-reentrant model
  2079 ;;
  2080                           
  2081                           	psect	text15
  2082  001B76                     __ptext15:
  2083                           	callstack 0
  2084  001B76                     _UART2_SetErrorHandler:
  2085                           	callstack 28
  2086  001B76                     
  2087                           ;uart2.c: 200: UART2_ErrorHandler = interruptHandler;
  2088  001B76  C001  F175         	movff	UART2_SetErrorHandler@interruptHandler,_UART2_ErrorHandler
  2089  001B7A  C002  F176         	movff	UART2_SetErrorHandler@interruptHandler+1,_UART2_ErrorHandler+1
  2090  001B7E  0012               	return		;funcret
  2091  001B80                     __end_of_UART2_SetErrorHandler:
  2092                           	callstack 0
  2093                           
  2094 ;; *************** function _PMD_Initialize *****************
  2095 ;; Defined at:
  2096 ;;		line 72 in file "mcc_generated_files/mcc.c"
  2097 ;; Parameters:    Size  Location     Type
  2098 ;;		None
  2099 ;; Auto vars:     Size  Location     Type
  2100 ;;		None
  2101 ;; Return value:  Size  Location     Type
  2102 ;;                  1    wreg      void 
  2103 ;; Registers used:
  2104 ;;		wreg, status,2
  2105 ;; Tracked objects:
  2106 ;;		On entry : 0/0
  2107 ;;		On exit  : 0/0
  2108 ;;		Unchanged: 0/0
  2109 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2110 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2111 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2112 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2113 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2114 ;;Total ram usage:        0 bytes
  2115 ;; Hardware stack levels used:    1
  2116 ;; This function calls:
  2117 ;;		Nothing
  2118 ;; This function is called by:
  2119 ;;		_SYSTEM_Initialize
  2120 ;; This function uses a non-reentrant model
  2121 ;;
  2122                           
  2123                           	psect	text16
  2124  001ADA                     __ptext16:
  2125                           	callstack 0
  2126  001ADA                     _PMD_Initialize:
  2127                           	callstack 29
  2128  001ADA                     
  2129                           ;mcc.c: 75: PMD0 = 0x00;
  2130  001ADA  0E00               	movlw	0
  2131  001ADC  0139               	movlb	57	; () banked
  2132  001ADE  6FC0               	movwf	192,b	;volatile
  2133                           
  2134                           ;mcc.c: 77: PMD1 = 0x00;
  2135  001AE0  0E00               	movlw	0
  2136  001AE2  6FC1               	movwf	193,b	;volatile
  2137                           
  2138                           ;mcc.c: 79: PMD2 = 0x00;
  2139  001AE4  0E00               	movlw	0
  2140  001AE6  6FC2               	movwf	194,b	;volatile
  2141                           
  2142                           ;mcc.c: 81: PMD3 = 0x00;
  2143  001AE8  0E00               	movlw	0
  2144  001AEA  6FC3               	movwf	195,b	;volatile
  2145                           
  2146                           ;mcc.c: 83: PMD4 = 0x00;
  2147  001AEC  0E00               	movlw	0
  2148  001AEE  6FC4               	movwf	196,b	;volatile
  2149                           
  2150                           ;mcc.c: 85: PMD5 = 0x00;
  2151  001AF0  0E00               	movlw	0
  2152  001AF2  6FC5               	movwf	197,b	;volatile
  2153                           
  2154                           ;mcc.c: 87: PMD6 = 0x00;
  2155  001AF4  0E00               	movlw	0
  2156  001AF6  6FC6               	movwf	198,b	;volatile
  2157                           
  2158                           ;mcc.c: 89: PMD7 = 0x00;
  2159  001AF8  0E00               	movlw	0
  2160  001AFA  6FC7               	movwf	199,b	;volatile
  2161  001AFC                     
  2162                           ; BSR set to: 57
  2163  001AFC  0012               	return		;funcret
  2164  001AFE                     __end_of_PMD_Initialize:
  2165                           	callstack 0
  2166                           
  2167 ;; *************** function _PIN_MANAGER_Initialize *****************
  2168 ;; Defined at:
  2169 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  2170 ;; Parameters:    Size  Location     Type
  2171 ;;		None
  2172 ;; Auto vars:     Size  Location     Type
  2173 ;;		None
  2174 ;; Return value:  Size  Location     Type
  2175 ;;                  1    wreg      void 
  2176 ;; Registers used:
  2177 ;;		wreg, status,2
  2178 ;; Tracked objects:
  2179 ;;		On entry : 0/0
  2180 ;;		On exit  : 0/0
  2181 ;;		Unchanged: 0/0
  2182 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2183 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2184 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2185 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2186 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2187 ;;Total ram usage:        0 bytes
  2188 ;; Hardware stack levels used:    1
  2189 ;; This function calls:
  2190 ;;		Nothing
  2191 ;; This function is called by:
  2192 ;;		_SYSTEM_Initialize
  2193 ;; This function uses a non-reentrant model
  2194 ;;
  2195                           
  2196                           	psect	text17
  2197  001646                     __ptext17:
  2198                           	callstack 0
  2199  001646                     _PIN_MANAGER_Initialize:
  2200                           	callstack 29
  2201  001646                     
  2202                           ;pin_manager.c: 60: LATE = 0x00;
  2203  001646  0E00               	movlw	0
  2204  001648  6EBE               	movwf	190,c	;volatile
  2205                           
  2206                           ;pin_manager.c: 61: LATD = 0x00;
  2207  00164A  0E00               	movlw	0
  2208  00164C  6EBD               	movwf	189,c	;volatile
  2209                           
  2210                           ;pin_manager.c: 62: LATA = 0x00;
  2211  00164E  0E00               	movlw	0
  2212  001650  6EBA               	movwf	186,c	;volatile
  2213                           
  2214                           ;pin_manager.c: 63: LATB = 0x00;
  2215  001652  0E00               	movlw	0
  2216  001654  6EBB               	movwf	187,c	;volatile
  2217                           
  2218                           ;pin_manager.c: 64: LATC = 0x00;
  2219  001656  0E00               	movlw	0
  2220  001658  6EBC               	movwf	188,c	;volatile
  2221                           
  2222                           ;pin_manager.c: 69: TRISE = 0x07;
  2223  00165A  0E07               	movlw	7
  2224  00165C  6EC6               	movwf	198,c	;volatile
  2225  00165E                     
  2226                           ;pin_manager.c: 70: TRISA = 0xFF;
  2227  00165E  68C2               	setf	194,c	;volatile
  2228                           
  2229                           ;pin_manager.c: 71: TRISB = 0xBF;
  2230  001660  0EBF               	movlw	191
  2231  001662  6EC3               	movwf	195,c	;volatile
  2232  001664                     
  2233                           ;pin_manager.c: 72: TRISC = 0xFF;
  2234  001664  68C4               	setf	196,c	;volatile
  2235  001666                     
  2236                           ;pin_manager.c: 73: TRISD = 0xFF;
  2237  001666  68C5               	setf	197,c	;volatile
  2238  001668                     
  2239                           ;pin_manager.c: 78: ANSELD = 0xFF;
  2240  001668  013A               	movlb	58	; () banked
  2241  00166A  6970               	setf	112,b	;volatile
  2242  00166C                     
  2243                           ; BSR set to: 58
  2244                           ;pin_manager.c: 79: ANSELC = 0xFF;
  2245  00166C  6960               	setf	96,b	;volatile
  2246                           
  2247                           ;pin_manager.c: 80: ANSELB = 0x7F;
  2248  00166E  0E7F               	movlw	127
  2249  001670  6F50               	movwf	80,b	;volatile
  2250                           
  2251                           ;pin_manager.c: 81: ANSELE = 0x07;
  2252  001672  0E07               	movlw	7
  2253  001674  6F80               	movwf	128,b	;volatile
  2254  001676                     
  2255                           ; BSR set to: 58
  2256                           ;pin_manager.c: 82: ANSELA = 0xFF;
  2257  001676  6940               	setf	64,b	;volatile
  2258                           
  2259                           ;pin_manager.c: 87: WPUD = 0x00;
  2260  001678  0E00               	movlw	0
  2261  00167A  6F71               	movwf	113,b	;volatile
  2262                           
  2263                           ;pin_manager.c: 88: WPUE = 0x00;
  2264  00167C  0E00               	movlw	0
  2265  00167E  6F81               	movwf	129,b	;volatile
  2266                           
  2267                           ;pin_manager.c: 89: WPUB = 0x00;
  2268  001680  0E00               	movlw	0
  2269  001682  6F51               	movwf	81,b	;volatile
  2270                           
  2271                           ;pin_manager.c: 90: WPUA = 0x00;
  2272  001684  0E00               	movlw	0
  2273  001686  6F41               	movwf	65,b	;volatile
  2274                           
  2275                           ;pin_manager.c: 91: WPUC = 0x00;
  2276  001688  0E00               	movlw	0
  2277  00168A  6F61               	movwf	97,b	;volatile
  2278                           
  2279                           ;pin_manager.c: 96: RB1I2C = 0x00;
  2280  00168C  0E00               	movlw	0
  2281  00168E  6F5A               	movwf	90,b	;volatile
  2282                           
  2283                           ;pin_manager.c: 97: RB2I2C = 0x00;
  2284  001690  0E00               	movlw	0
  2285  001692  6F5B               	movwf	91,b	;volatile
  2286                           
  2287                           ;pin_manager.c: 98: RC3I2C = 0x00;
  2288  001694  0E00               	movlw	0
  2289  001696  6F6A               	movwf	106,b	;volatile
  2290                           
  2291                           ;pin_manager.c: 99: RC4I2C = 0x00;
  2292  001698  0E00               	movlw	0
  2293  00169A  6F6B               	movwf	107,b	;volatile
  2294                           
  2295                           ;pin_manager.c: 100: RD0I2C = 0x00;
  2296  00169C  0E00               	movlw	0
  2297  00169E  6F7A               	movwf	122,b	;volatile
  2298                           
  2299                           ;pin_manager.c: 101: RD1I2C = 0x00;
  2300  0016A0  0E00               	movlw	0
  2301  0016A2  6F7B               	movwf	123,b	;volatile
  2302                           
  2303                           ;pin_manager.c: 106: ODCONE = 0x00;
  2304  0016A4  0E00               	movlw	0
  2305  0016A6  6F82               	movwf	130,b	;volatile
  2306                           
  2307                           ;pin_manager.c: 107: ODCONA = 0x00;
  2308  0016A8  0E00               	movlw	0
  2309  0016AA  6F42               	movwf	66,b	;volatile
  2310                           
  2311                           ;pin_manager.c: 108: ODCONB = 0x00;
  2312  0016AC  0E00               	movlw	0
  2313  0016AE  6F52               	movwf	82,b	;volatile
  2314                           
  2315                           ;pin_manager.c: 109: ODCONC = 0x00;
  2316  0016B0  0E00               	movlw	0
  2317  0016B2  6F62               	movwf	98,b	;volatile
  2318                           
  2319                           ;pin_manager.c: 110: ODCOND = 0x00;
  2320  0016B4  0E00               	movlw	0
  2321  0016B6  6F72               	movwf	114,b	;volatile
  2322  0016B8                     
  2323                           ; BSR set to: 58
  2324                           ;pin_manager.c: 115: SLRCONA = 0xFF;
  2325  0016B8  6943               	setf	67,b	;volatile
  2326  0016BA                     
  2327                           ; BSR set to: 58
  2328                           ;pin_manager.c: 116: SLRCONB = 0xFF;
  2329  0016BA  6953               	setf	83,b	;volatile
  2330  0016BC                     
  2331                           ; BSR set to: 58
  2332                           ;pin_manager.c: 117: SLRCONC = 0xFF;
  2333  0016BC  6963               	setf	99,b	;volatile
  2334  0016BE                     
  2335                           ; BSR set to: 58
  2336                           ;pin_manager.c: 118: SLRCOND = 0xFF;
  2337  0016BE  6973               	setf	115,b	;volatile
  2338                           
  2339                           ;pin_manager.c: 119: SLRCONE = 0x07;
  2340  0016C0  0E07               	movlw	7
  2341  0016C2  6F83               	movwf	131,b	;volatile
  2342  0016C4                     
  2343                           ; BSR set to: 58
  2344                           ;pin_manager.c: 124: INLVLA = 0xFF;
  2345  0016C4  6944               	setf	68,b	;volatile
  2346  0016C6                     
  2347                           ; BSR set to: 58
  2348                           ;pin_manager.c: 125: INLVLB = 0xFF;
  2349  0016C6  6954               	setf	84,b	;volatile
  2350  0016C8                     
  2351                           ; BSR set to: 58
  2352                           ;pin_manager.c: 126: INLVLC = 0xFF;
  2353  0016C8  6964               	setf	100,b	;volatile
  2354  0016CA                     
  2355                           ; BSR set to: 58
  2356                           ;pin_manager.c: 127: INLVLD = 0xFF;
  2357  0016CA  6974               	setf	116,b	;volatile
  2358                           
  2359                           ;pin_manager.c: 128: INLVLE = 0x0F;
  2360  0016CC  0E0F               	movlw	15
  2361  0016CE  6F84               	movwf	132,b	;volatile
  2362                           
  2363                           ;pin_manager.c: 137: U2RXPPS = 0x0F;
  2364  0016D0  0E0F               	movlw	15
  2365  0016D2  6FE8               	movwf	232,b	;volatile
  2366                           
  2367                           ;pin_manager.c: 138: RB6PPS = 0x16;
  2368  0016D4  0E16               	movlw	22
  2369  0016D6  6F0E               	movwf	14,b	;volatile
  2370  0016D8                     
  2371                           ; BSR set to: 58
  2372  0016D8  0012               	return		;funcret
  2373  0016DA                     __end_of_PIN_MANAGER_Initialize:
  2374                           	callstack 0
  2375                           
  2376 ;; *************** function _OSCILLATOR_Initialize *****************
  2377 ;; Defined at:
  2378 ;;		line 58 in file "mcc_generated_files/mcc.c"
  2379 ;; Parameters:    Size  Location     Type
  2380 ;;		None
  2381 ;; Auto vars:     Size  Location     Type
  2382 ;;		None
  2383 ;; Return value:  Size  Location     Type
  2384 ;;                  1    wreg      void 
  2385 ;; Registers used:
  2386 ;;		wreg, status,2
  2387 ;; Tracked objects:
  2388 ;;		On entry : 0/0
  2389 ;;		On exit  : 0/0
  2390 ;;		Unchanged: 0/0
  2391 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2392 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2393 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2394 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2395 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2396 ;;Total ram usage:        0 bytes
  2397 ;; Hardware stack levels used:    1
  2398 ;; This function calls:
  2399 ;;		Nothing
  2400 ;; This function is called by:
  2401 ;;		_SYSTEM_Initialize
  2402 ;; This function uses a non-reentrant model
  2403 ;;
  2404                           
  2405                           	psect	text18
  2406  001B18                     __ptext18:
  2407                           	callstack 0
  2408  001B18                     _OSCILLATOR_Initialize:
  2409                           	callstack 29
  2410  001B18                     
  2411                           ;mcc.c: 61: OSCCON1 = 0x60;
  2412  001B18  0E60               	movlw	96
  2413  001B1A  0139               	movlb	57	; () banked
  2414  001B1C  6FD9               	movwf	217,b	;volatile
  2415                           
  2416                           ;mcc.c: 63: OSCCON3 = 0x00;
  2417  001B1E  0E00               	movlw	0
  2418  001B20  6FDB               	movwf	219,b	;volatile
  2419                           
  2420                           ;mcc.c: 65: OSCEN = 0x00;
  2421  001B22  0E00               	movlw	0
  2422  001B24  6FDD               	movwf	221,b	;volatile
  2423                           
  2424                           ;mcc.c: 67: OSCFRQ = 0x02;
  2425  001B26  0E02               	movlw	2
  2426  001B28  6FDF               	movwf	223,b	;volatile
  2427                           
  2428                           ;mcc.c: 69: OSCTUNE = 0x00;
  2429  001B2A  0E00               	movlw	0
  2430  001B2C  6FDE               	movwf	222,b	;volatile
  2431  001B2E                     
  2432                           ; BSR set to: 57
  2433  001B2E  0012               	return		;funcret
  2434  001B30                     __end_of_OSCILLATOR_Initialize:
  2435                           	callstack 0
  2436                           
  2437 ;; *************** function _Reverse_String *****************
  2438 ;; Defined at:
  2439 ;;		line 69 in file "main.c"
  2440 ;; Parameters:    Size  Location     Type
  2441 ;;  string_in       2    4[COMRAM] PTR unsigned char 
  2442 ;;		 -> main@caplast(51), main@capfirst(51), 
  2443 ;;  string_out      2    6[COMRAM] PTR unsigned char 
  2444 ;;		 -> main@reverselast(51), main@reversefirst(51), 
  2445 ;; Auto vars:     Size  Location     Type
  2446 ;;  i               2   12[COMRAM] int 
  2447 ;;  length          2   10[COMRAM] int 
  2448 ;; Return value:  Size  Location     Type
  2449 ;;                  1    wreg      void 
  2450 ;; Registers used:
  2451 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2452 ;; Tracked objects:
  2453 ;;		On entry : 0/0
  2454 ;;		On exit  : 0/0
  2455 ;;		Unchanged: 0/0
  2456 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2457 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2458 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2459 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2460 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2461 ;;Total ram usage:       10 bytes
  2462 ;; Hardware stack levels used:    1
  2463 ;; Hardware stack levels required when called:    1
  2464 ;; This function calls:
  2465 ;;		_strlen
  2466 ;; This function is called by:
  2467 ;;		_main
  2468 ;; This function uses a non-reentrant model
  2469 ;;
  2470                           
  2471                           	psect	text19
  2472  0016DA                     __ptext19:
  2473                           	callstack 0
  2474  0016DA                     _Reverse_String:
  2475                           	callstack 29
  2476  0016DA                     
  2477                           ;main.c: 71: int i, length= strlen(string_in);
  2478  0016DA  C005  F001         	movff	Reverse_String@string_in,strlen@s
  2479  0016DE  C006  F002         	movff	Reverse_String@string_in+1,strlen@s+1
  2480  0016E2  EC23  F00D         	call	_strlen	;wreg free
  2481  0016E6  C001  F00B         	movff	?_strlen,Reverse_String@length
  2482  0016EA  C002  F00C         	movff	?_strlen+1,Reverse_String@length+1
  2483  0016EE                     
  2484                           ;main.c: 72: for(i=0;i<length;i++)
  2485  0016EE  0E00               	movlw	0
  2486  0016F0  6E0E               	movwf	(Reverse_String@i+1)^0,c
  2487  0016F2  0E00               	movlw	0
  2488  0016F4  6E0D               	movwf	Reverse_String@i^0,c
  2489  0016F6  EF98  F00B         	goto	l1855
  2490  0016FA                     l1851:
  2491                           
  2492                           ;main.c: 73: {;main.c: 74: string_out[i]=string_in[length-1-i];
  2493  0016FA  500D               	movf	Reverse_String@i^0,w,c
  2494  0016FC  5C05               	subwf	Reverse_String@string_in^0,w,c
  2495  0016FE  6E09               	movwf	??_Reverse_String^0,c
  2496  001700  500E               	movf	(Reverse_String@i+1)^0,w,c
  2497  001702  5806               	subwfb	(Reverse_String@string_in+1)^0,w,c
  2498  001704  6E0A               	movwf	(??_Reverse_String+1)^0,c
  2499  001706  500B               	movf	Reverse_String@length^0,w,c
  2500  001708  2609               	addwf	??_Reverse_String^0,f,c
  2501  00170A  500C               	movf	(Reverse_String@length+1)^0,w,c
  2502  00170C  220A               	addwfc	(??_Reverse_String+1)^0,f,c
  2503  00170E  0EFF               	movlw	255
  2504  001710  2409               	addwf	??_Reverse_String^0,w,c
  2505  001712  6ED9               	movwf	fsr2l,c
  2506  001714  0EFF               	movlw	255
  2507  001716  200A               	addwfc	(??_Reverse_String+1)^0,w,c
  2508  001718  6EDA               	movwf	fsr2h,c
  2509  00171A  500D               	movf	Reverse_String@i^0,w,c
  2510  00171C  2407               	addwf	Reverse_String@string_out^0,w,c
  2511  00171E  6EE1               	movwf	fsr1l,c
  2512  001720  500E               	movf	(Reverse_String@i+1)^0,w,c
  2513  001722  2008               	addwfc	(Reverse_String@string_out+1)^0,w,c
  2514  001724  6EE2               	movwf	fsr1h,c
  2515  001726  006F FF7F FFE7     	movff	indf2,indf1
  2516  00172C  4A0D               	infsnz	Reverse_String@i^0,f,c
  2517  00172E  2A0E               	incf	(Reverse_String@i+1)^0,f,c
  2518  001730                     l1855:
  2519  001730  500B               	movf	Reverse_String@length^0,w,c
  2520  001732  5C0D               	subwf	Reverse_String@i^0,w,c
  2521  001734  500E               	movf	(Reverse_String@i+1)^0,w,c
  2522  001736  0A80               	xorlw	128
  2523  001738  6E09               	movwf	??_Reverse_String^0,c
  2524  00173A  500C               	movf	(Reverse_String@length+1)^0,w,c
  2525  00173C  0A80               	xorlw	128
  2526  00173E  5809               	subwfb	??_Reverse_String^0,w,c
  2527  001740  A0D8               	btfss	status,0,c
  2528  001742  EFA5  F00B         	goto	u931
  2529  001746  EFA7  F00B         	goto	u930
  2530  00174A                     u931:
  2531  00174A  EF7D  F00B         	goto	l1851
  2532  00174E                     u930:
  2533  00174E                     
  2534                           ;main.c: 75: };main.c: 76: string_out[length]= '\0';
  2535  00174E  500B               	movf	Reverse_String@length^0,w,c
  2536  001750  2407               	addwf	Reverse_String@string_out^0,w,c
  2537  001752  6ED9               	movwf	fsr2l,c
  2538  001754  500C               	movf	(Reverse_String@length+1)^0,w,c
  2539  001756  2008               	addwfc	(Reverse_String@string_out+1)^0,w,c
  2540  001758  6EDA               	movwf	fsr2h,c
  2541  00175A  0E00               	movlw	0
  2542  00175C  6EDF               	movwf	indf2,c
  2543  00175E  0012               	return		;funcret
  2544  001760                     __end_of_Reverse_String:
  2545                           	callstack 0
  2546                           
  2547 ;; *************** function _ReadNUART2 *****************
  2548 ;; Defined at:
  2549 ;;		line 27 in file "myUART.c"
  2550 ;; Parameters:    Size  Location     Type
  2551 ;;  holds_string    2    0[COMRAM] PTR unsigned char 
  2552 ;;		 -> main@inputstring(51), 
  2553 ;;  length_N        2    2[COMRAM] unsigned int 
  2554 ;; Auto vars:     Size  Location     Type
  2555 ;;  i               2    8[COMRAM] unsigned int 
  2556 ;;  letter          2    6[COMRAM] unsigned int 
  2557 ;;  last            2    0        unsigned int 
  2558 ;; Return value:  Size  Location     Type
  2559 ;;                  1    wreg      void 
  2560 ;; Registers used:
  2561 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
  2562 ;; Tracked objects:
  2563 ;;		On entry : 0/0
  2564 ;;		On exit  : 0/0
  2565 ;;		Unchanged: 0/0
  2566 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2567 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2568 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2569 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2570 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2571 ;;Total ram usage:       10 bytes
  2572 ;; Hardware stack levels used:    1
  2573 ;; Hardware stack levels required when called:    2
  2574 ;; This function calls:
  2575 ;;		_UART2_Read
  2576 ;;		_UART2_is_rx_ready
  2577 ;; This function is called by:
  2578 ;;		_main
  2579 ;; This function uses a non-reentrant model
  2580 ;;
  2581                           
  2582                           	psect	text20
  2583  00142E                     __ptext20:
  2584                           	callstack 0
  2585  00142E                     _ReadNUART2:
  2586                           	callstack 28
  2587  00142E                     
  2588                           ;myUART.c: 29: unsigned int i = 0, last;
  2589  00142E  0E00               	movlw	0
  2590  001430  6E0A               	movwf	(ReadNUART2@i+1)^0,c
  2591  001432  0E00               	movlw	0
  2592  001434  6E09               	movwf	ReadNUART2@i^0,c
  2593  001436                     l1773:
  2594  001436  EC98  F00D         	call	_UART2_is_rx_ready	;wreg free
  2595  00143A  06E8               	decf	wreg,f,c
  2596  00143C  B4D8               	btfsc	status,2,c
  2597  00143E  EF23  F00A         	goto	u811
  2598  001442  EF25  F00A         	goto	u810
  2599  001446                     u811:
  2600  001446  EF1B  F00A         	goto	l1773
  2601  00144A                     u810:
  2602  00144A                     
  2603                           ;myUART.c: 36: letter = UART2_Read();
  2604  00144A  ECD2  F00A         	call	_UART2_Read	;wreg free
  2605  00144E  6E05               	movwf	??_ReadNUART2^0,c
  2606  001450  5005               	movf	??_ReadNUART2^0,w,c
  2607  001452  6E07               	movwf	ReadNUART2@letter^0,c
  2608  001454  6A08               	clrf	(ReadNUART2@letter+1)^0,c
  2609  001456                     
  2610                           ;myUART.c: 38: if( 127 == letter )
  2611  001456  0E7F               	movlw	127
  2612  001458  1807               	xorwf	ReadNUART2@letter^0,w,c
  2613  00145A  1008               	iorwf	(ReadNUART2@letter+1)^0,w,c
  2614  00145C  A4D8               	btfss	status,2,c
  2615  00145E  EF33  F00A         	goto	u821
  2616  001462  EF35  F00A         	goto	u820
  2617  001466                     u821:
  2618  001466  EF48  F00A         	goto	l1785
  2619  00146A                     u820:
  2620  00146A                     
  2621                           ;myUART.c: 39: {;myUART.c: 41: i--;
  2622  00146A  0609               	decf	ReadNUART2@i^0,f,c
  2623  00146C  A0D8               	btfss	status,0,c
  2624  00146E  060A               	decf	(ReadNUART2@i+1)^0,f,c
  2625  001470                     
  2626                           ;myUART.c: 42: if (i==65535)
  2627  001470  2809               	incf	ReadNUART2@i^0,w,c
  2628  001472  E106               	bnz	u831
  2629  001474  280A               	incf	(ReadNUART2@i+1)^0,w,c
  2630  001476  A4D8               	btfss	status,2,c
  2631  001478  EF40  F00A         	goto	u831
  2632  00147C  EF42  F00A         	goto	u830
  2633  001480                     u831:
  2634  001480  EF53  F00A         	goto	l1789
  2635  001484                     u830:
  2636  001484                     
  2637                           ;myUART.c: 43: {;myUART.c: 44: i = 0;
  2638  001484  0E00               	movlw	0
  2639  001486  6E0A               	movwf	(ReadNUART2@i+1)^0,c
  2640  001488  0E00               	movlw	0
  2641  00148A  6E09               	movwf	ReadNUART2@i^0,c
  2642  00148C  EF53  F00A         	goto	l1789
  2643  001490                     l1785:
  2644                           
  2645                           ;myUART.c: 47: else;myUART.c: 48: {;myUART.c: 49: holds_string[i] = letter;
  2646  001490  5009               	movf	ReadNUART2@i^0,w,c
  2647  001492  2401               	addwf	ReadNUART2@holds_string^0,w,c
  2648  001494  6ED9               	movwf	fsr2l,c
  2649  001496  500A               	movf	(ReadNUART2@i+1)^0,w,c
  2650  001498  2002               	addwfc	(ReadNUART2@holds_string+1)^0,w,c
  2651  00149A  6EDA               	movwf	fsr2h,c
  2652  00149C  0060  F01F  FFDF   	movff	ReadNUART2@letter,indf2
  2653  0014A2                     
  2654                           ;myUART.c: 50: i++;
  2655  0014A2  4A09               	infsnz	ReadNUART2@i^0,f,c
  2656  0014A4  2A0A               	incf	(ReadNUART2@i+1)^0,f,c
  2657  0014A6                     l1789:
  2658                           
  2659                           ;myUART.c: 51: };myUART.c: 53: } while ( (letter != 13) && (i <= length_N) );
  2660  0014A6  0E0D               	movlw	13
  2661  0014A8  1807               	xorwf	ReadNUART2@letter^0,w,c
  2662  0014AA  1008               	iorwf	(ReadNUART2@letter+1)^0,w,c
  2663  0014AC  B4D8               	btfsc	status,2,c
  2664  0014AE  EF5B  F00A         	goto	u841
  2665  0014B2  EF5D  F00A         	goto	u840
  2666  0014B6                     u841:
  2667  0014B6  EF68  F00A         	goto	l1793
  2668  0014BA                     u840:
  2669  0014BA  5009               	movf	ReadNUART2@i^0,w,c
  2670  0014BC  5C03               	subwf	ReadNUART2@length_N^0,w,c
  2671  0014BE  500A               	movf	(ReadNUART2@i+1)^0,w,c
  2672  0014C0  5804               	subwfb	(ReadNUART2@length_N+1)^0,w,c
  2673  0014C2  B0D8               	btfsc	status,0,c
  2674  0014C4  EF66  F00A         	goto	u851
  2675  0014C8  EF68  F00A         	goto	u850
  2676  0014CC                     u851:
  2677  0014CC  EF1B  F00A         	goto	l1773
  2678  0014D0                     u850:
  2679  0014D0                     l1793:
  2680                           
  2681                           ;myUART.c: 55: holds_string[i-1] = '\0';
  2682  0014D0  5009               	movf	ReadNUART2@i^0,w,c
  2683  0014D2  2401               	addwf	ReadNUART2@holds_string^0,w,c
  2684  0014D4  6E05               	movwf	??_ReadNUART2^0,c
  2685  0014D6  500A               	movf	(ReadNUART2@i+1)^0,w,c
  2686  0014D8  2002               	addwfc	(ReadNUART2@holds_string+1)^0,w,c
  2687  0014DA  6E06               	movwf	(??_ReadNUART2+1)^0,c
  2688  0014DC  0EFF               	movlw	255
  2689  0014DE  2405               	addwf	??_ReadNUART2^0,w,c
  2690  0014E0  6ED9               	movwf	fsr2l,c
  2691  0014E2  0EFF               	movlw	255
  2692  0014E4  2006               	addwfc	(??_ReadNUART2+1)^0,w,c
  2693  0014E6  6EDA               	movwf	fsr2h,c
  2694  0014E8  0E00               	movlw	0
  2695  0014EA  6EDF               	movwf	indf2,c
  2696  0014EC  0012               	return		;funcret
  2697  0014EE                     __end_of_ReadNUART2:
  2698                           	callstack 0
  2699                           
  2700 ;; *************** function _UART2_is_rx_ready *****************
  2701 ;; Defined at:
  2702 ;;		line 117 in file "mcc_generated_files/uart2.c"
  2703 ;; Parameters:    Size  Location     Type
  2704 ;;		None
  2705 ;; Auto vars:     Size  Location     Type
  2706 ;;		None
  2707 ;; Return value:  Size  Location     Type
  2708 ;;                  1    wreg      unsigned char 
  2709 ;; Registers used:
  2710 ;;		wreg
  2711 ;; Tracked objects:
  2712 ;;		On entry : 0/0
  2713 ;;		On exit  : 0/0
  2714 ;;		Unchanged: 0/0
  2715 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2716 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2717 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2718 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2719 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2720 ;;Total ram usage:        0 bytes
  2721 ;; Hardware stack levels used:    1
  2722 ;; This function calls:
  2723 ;;		Nothing
  2724 ;; This function is called by:
  2725 ;;		_wait_for_ENTER
  2726 ;;		_ReadNUART2
  2727 ;; This function uses a non-reentrant model
  2728 ;;
  2729                           
  2730                           	psect	text21
  2731  001B30                     __ptext21:
  2732                           	callstack 0
  2733  001B30                     _UART2_is_rx_ready:
  2734                           	callstack 29
  2735  001B30                     
  2736                           ;uart2.c: 119: return (bool)(PIR6bits.U2RXIF);
  2737  001B30  0139               	movlb	57	; () banked
  2738  001B32  B5A6               	btfsc	166,2,b	;volatile
  2739  001B34  EF9E  F00D         	goto	u581
  2740  001B38  EFA1  F00D         	goto	u580
  2741  001B3C                     u581:
  2742  001B3C  0E01               	movlw	1
  2743  001B3E  EFA2  F00D         	goto	u586
  2744  001B42                     u580:
  2745  001B42  0E00               	movlw	0
  2746  001B44                     u586:
  2747  001B44                     
  2748                           ; BSR set to: 57
  2749  001B44  0012               	return		;funcret
  2750  001B46                     __end_of_UART2_is_rx_ready:
  2751                           	callstack 0
  2752                           
  2753 ;; *************** function _UART2_Read *****************
  2754 ;; Defined at:
  2755 ;;		line 136 in file "mcc_generated_files/uart2.c"
  2756 ;; Parameters:    Size  Location     Type
  2757 ;;		None
  2758 ;; Auto vars:     Size  Location     Type
  2759 ;;		None
  2760 ;; Return value:  Size  Location     Type
  2761 ;;                  1    wreg      unsigned char 
  2762 ;; Registers used:
  2763 ;;		wreg, status,2, pclath, tosl, cstack
  2764 ;; Tracked objects:
  2765 ;;		On entry : 0/0
  2766 ;;		On exit  : 0/0
  2767 ;;		Unchanged: 0/0
  2768 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2769 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2770 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2771 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2772 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2773 ;;Total ram usage:        0 bytes
  2774 ;; Hardware stack levels used:    1
  2775 ;; Hardware stack levels required when called:    1
  2776 ;; This function calls:
  2777 ;;		Absolute function
  2778 ;;		_UART2_DefaultErrorHandler
  2779 ;;		_UART2_DefaultFramingErrorHandler
  2780 ;;		_UART2_DefaultOverrunErrorHandler
  2781 ;; This function is called by:
  2782 ;;		_wait_for_ENTER
  2783 ;;		_ReadNUART2
  2784 ;;		_getch
  2785 ;; This function uses a non-reentrant model
  2786 ;;
  2787                           
  2788                           	psect	text22
  2789  0015A4                     __ptext22:
  2790                           	callstack 0
  2791  0015A4                     _UART2_Read:
  2792                           	callstack 28
  2793  0015A4                     l166:
  2794  0015A4  0139               	movlb	57	; () banked
  2795  0015A6  A5A6               	btfss	166,2,b	;volatile
  2796  0015A8  EFD8  F00A         	goto	u591
  2797  0015AC  EFDA  F00A         	goto	u590
  2798  0015B0                     u591:
  2799  0015B0  EFD2  F00A         	goto	l166
  2800  0015B4                     u590:
  2801  0015B4                     
  2802                           ; BSR set to: 57
  2803                           ;uart2.c: 140: };uart2.c: 142: uart2RxLastError.status = 0;
  2804  0015B4  0E00               	movlw	0
  2805  0015B6  0100               	movlb	0	; () banked
  2806  0015B8  6FFD               	movwf	_uart2RxLastError& (0+255),b	;volatile
  2807  0015BA                     
  2808                           ; BSR set to: 0
  2809                           ;uart2.c: 144: if(U2ERRIRbits.FERIF){
  2810  0015BA  013D               	movlb	61	; () banked
  2811  0015BC  A7E1               	btfss	225,3,b	;volatile
  2812  0015BE  EFE3  F00A         	goto	u601
  2813  0015C2  EFE5  F00A         	goto	u600
  2814  0015C6                     u601:
  2815  0015C6  EFF3  F00A         	goto	l1665
  2816  0015CA                     u600:
  2817  0015CA                     
  2818                           ; BSR set to: 61
  2819                           ;uart2.c: 145: uart2RxLastError.ferr = 1;
  2820  0015CA  0100               	movlb	0	; () banked
  2821  0015CC  83FD               	bsf	_uart2RxLastError& (0+255),1,b	;volatile
  2822  0015CE                     
  2823                           ; BSR set to: 0
  2824                           ;uart2.c: 146: UART2_FramingErrorHandler();
  2825  0015CE  D802               	call	u618
  2826  0015D0  EFF3  F00A         	goto	u619
  2827  0015D4                     u618:
  2828  0015D4  0005               	push	
  2829  0015D6  6EFA               	movwf	pclath,c
  2830  0015D8  51FE               	movf	_UART2_FramingErrorHandler& (0+255),w,b
  2831  0015DA  6EFD               	movwf	tosl,c
  2832  0015DC  51FF               	movf	(_UART2_FramingErrorHandler+1)& (0+255),w,b
  2833  0015DE  6EFE               	movwf	tosh,c
  2834  0015E0  6AFF               	clrf	tosu,c
  2835  0015E2  50FA               	movf	pclath,w,c
  2836  0015E4  0012               	return		;indir
  2837  0015E6                     u619:
  2838  0015E6                     l1665:
  2839                           
  2840                           ;uart2.c: 147: };uart2.c: 149: if(U2ERRIRbits.RXFOIF){
  2841  0015E6  013D               	movlb	61	; () banked
  2842  0015E8  A3E1               	btfss	225,1,b	;volatile
  2843  0015EA  EFF9  F00A         	goto	u621
  2844  0015EE  EFFB  F00A         	goto	u620
  2845  0015F2                     u621:
  2846  0015F2  EF0A  F00B         	goto	l1671
  2847  0015F6                     u620:
  2848  0015F6                     
  2849                           ; BSR set to: 61
  2850                           ;uart2.c: 150: uart2RxLastError.oerr = 1;
  2851  0015F6  0100               	movlb	0	; () banked
  2852  0015F8  85FD               	bsf	_uart2RxLastError& (0+255),2,b	;volatile
  2853  0015FA                     
  2854                           ; BSR set to: 0
  2855                           ;uart2.c: 151: UART2_OverrunErrorHandler();
  2856  0015FA  D802               	call	u638
  2857  0015FC  EF0A  F00B         	goto	u639
  2858  001600                     u638:
  2859  001600  0005               	push	
  2860  001602  6EFA               	movwf	pclath,c
  2861  001604  0101               	movlb	1	; () banked
  2862  001606  5177               	movf	_UART2_OverrunErrorHandler& (0+255),w,b
  2863  001608  6EFD               	movwf	tosl,c
  2864  00160A  5178               	movf	(_UART2_OverrunErrorHandler+1)& (0+255),w,b
  2865  00160C  6EFE               	movwf	tosh,c
  2866  00160E  6AFF               	clrf	tosu,c
  2867  001610  50FA               	movf	pclath,w,c
  2868  001612  0012               	return		;indir
  2869  001614                     u639:
  2870  001614                     l1671:
  2871                           
  2872                           ;uart2.c: 152: };uart2.c: 154: if(uart2RxLastError.status){
  2873  001614  0100               	movlb	0	; () banked
  2874  001616  51FD               	movf	_uart2RxLastError& (0+255),w,b	;volatile
  2875  001618  B4D8               	btfsc	status,2,c
  2876  00161A  EF11  F00B         	goto	u641
  2877  00161E  EF13  F00B         	goto	u640
  2878  001622                     u641:
  2879  001622  EF20  F00B         	goto	l1675
  2880  001626                     u640:
  2881  001626                     
  2882                           ; BSR set to: 0
  2883                           ;uart2.c: 155: UART2_ErrorHandler();
  2884  001626  D802               	call	u658
  2885  001628  EF20  F00B         	goto	u659
  2886  00162C                     u658:
  2887  00162C  0005               	push	
  2888  00162E  6EFA               	movwf	pclath,c
  2889  001630  0101               	movlb	1	; () banked
  2890  001632  5175               	movf	_UART2_ErrorHandler& (0+255),w,b
  2891  001634  6EFD               	movwf	tosl,c
  2892  001636  5176               	movf	(_UART2_ErrorHandler+1)& (0+255),w,b
  2893  001638  6EFE               	movwf	tosh,c
  2894  00163A  6AFF               	clrf	tosu,c
  2895  00163C  50FA               	movf	pclath,w,c
  2896  00163E  0012               	return		;indir
  2897  001640                     u659:
  2898  001640                     l1675:
  2899                           
  2900                           ;uart2.c: 156: };uart2.c: 158: return U2RXB;
  2901  001640  013D               	movlb	61	; () banked
  2902  001642  51D0               	movf	208,w,b	;volatile
  2903  001644                     
  2904                           ; BSR set to: 61
  2905  001644  0012               	return		;funcret
  2906  001646                     __end_of_UART2_Read:
  2907                           	callstack 0
  2908                           
  2909 ;; *************** function _UART2_DefaultOverrunErrorHandler *****************
  2910 ;; Defined at:
  2911 ;;		line 186 in file "mcc_generated_files/uart2.c"
  2912 ;; Parameters:    Size  Location     Type
  2913 ;;		None
  2914 ;; Auto vars:     Size  Location     Type
  2915 ;;		None
  2916 ;; Return value:  Size  Location     Type
  2917 ;;                  1    wreg      void 
  2918 ;; Registers used:
  2919 ;;		None
  2920 ;; Tracked objects:
  2921 ;;		On entry : 0/0
  2922 ;;		On exit  : 0/0
  2923 ;;		Unchanged: 0/0
  2924 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2925 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2926 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2927 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2928 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2929 ;;Total ram usage:        0 bytes
  2930 ;; Hardware stack levels used:    1
  2931 ;; This function calls:
  2932 ;;		Nothing
  2933 ;; This function is called by:
  2934 ;;		_UART2_Initialize
  2935 ;;		_UART2_Read
  2936 ;; This function uses a non-reentrant model
  2937 ;;
  2938                           
  2939                           	psect	text23
  2940  001B86                     __ptext23:
  2941                           	callstack 0
  2942  001B86                     _UART2_DefaultOverrunErrorHandler:
  2943                           	callstack 28
  2944  001B86  0012               	return		;funcret
  2945  001B88                     __end_of_UART2_DefaultOverrunErrorHandler:
  2946                           	callstack 0
  2947                           
  2948 ;; *************** function _UART2_DefaultFramingErrorHandler *****************
  2949 ;; Defined at:
  2950 ;;		line 184 in file "mcc_generated_files/uart2.c"
  2951 ;; Parameters:    Size  Location     Type
  2952 ;;		None
  2953 ;; Auto vars:     Size  Location     Type
  2954 ;;		None
  2955 ;; Return value:  Size  Location     Type
  2956 ;;                  1    wreg      void 
  2957 ;; Registers used:
  2958 ;;		None
  2959 ;; Tracked objects:
  2960 ;;		On entry : 0/0
  2961 ;;		On exit  : 0/0
  2962 ;;		Unchanged: 0/0
  2963 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2964 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2965 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2966 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2967 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2968 ;;Total ram usage:        0 bytes
  2969 ;; Hardware stack levels used:    1
  2970 ;; This function calls:
  2971 ;;		Nothing
  2972 ;; This function is called by:
  2973 ;;		_UART2_Initialize
  2974 ;;		_UART2_Read
  2975 ;; This function uses a non-reentrant model
  2976 ;;
  2977                           
  2978                           	psect	text24
  2979  001B88                     __ptext24:
  2980                           	callstack 0
  2981  001B88                     _UART2_DefaultFramingErrorHandler:
  2982                           	callstack 28
  2983  001B88  0012               	return		;funcret
  2984  001B8A                     __end_of_UART2_DefaultFramingErrorHandler:
  2985                           	callstack 0
  2986                           
  2987 ;; *************** function _UART2_DefaultErrorHandler *****************
  2988 ;; Defined at:
  2989 ;;		line 188 in file "mcc_generated_files/uart2.c"
  2990 ;; Parameters:    Size  Location     Type
  2991 ;;		None
  2992 ;; Auto vars:     Size  Location     Type
  2993 ;;		None
  2994 ;; Return value:  Size  Location     Type
  2995 ;;                  1    wreg      void 
  2996 ;; Registers used:
  2997 ;;		None
  2998 ;; Tracked objects:
  2999 ;;		On entry : 0/0
  3000 ;;		On exit  : 0/0
  3001 ;;		Unchanged: 0/0
  3002 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3003 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3004 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3005 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3006 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3007 ;;Total ram usage:        0 bytes
  3008 ;; Hardware stack levels used:    1
  3009 ;; This function calls:
  3010 ;;		Nothing
  3011 ;; This function is called by:
  3012 ;;		_UART2_Initialize
  3013 ;;		_UART2_Read
  3014 ;; This function uses a non-reentrant model
  3015 ;;
  3016                           
  3017                           	psect	text25
  3018  001B8A                     __ptext25:
  3019                           	callstack 0
  3020  001B8A                     _UART2_DefaultErrorHandler:
  3021                           	callstack 28
  3022  001B8A  0012               	return		;funcret
  3023  001B8C                     __end_of_UART2_DefaultErrorHandler:
  3024                           	callstack 0
  3025                           
  3026 ;; *************** function _Caps *****************
  3027 ;; Defined at:
  3028 ;;		line 82 in file "main.c"
  3029 ;; Parameters:    Size  Location     Type
  3030 ;;  string_in       2    4[COMRAM] PTR unsigned char 
  3031 ;;		 -> main@LastName(20), main@FirstName(20), 
  3032 ;;  string_out      2    6[COMRAM] PTR unsigned char 
  3033 ;;		 -> main@caplast(51), main@capfirst(51), 
  3034 ;; Auto vars:     Size  Location     Type
  3035 ;;  i               2   11[COMRAM] int 
  3036 ;;  length          2    9[COMRAM] int 
  3037 ;; Return value:  Size  Location     Type
  3038 ;;                  1    wreg      void 
  3039 ;; Registers used:
  3040 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3041 ;; Tracked objects:
  3042 ;;		On entry : 0/0
  3043 ;;		On exit  : 0/0
  3044 ;;		Unchanged: 0/0
  3045 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3046 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3047 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3048 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3049 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3050 ;;Total ram usage:        9 bytes
  3051 ;; Hardware stack levels used:    1
  3052 ;; Hardware stack levels required when called:    1
  3053 ;; This function calls:
  3054 ;;		_islower
  3055 ;;		_strlen
  3056 ;;		_toupper
  3057 ;; This function is called by:
  3058 ;;		_main
  3059 ;; This function uses a non-reentrant model
  3060 ;;
  3061                           
  3062                           	psect	text26
  3063  0014EE                     __ptext26:
  3064                           	callstack 0
  3065  0014EE                     _Caps:
  3066                           	callstack 29
  3067  0014EE                     
  3068                           ;main.c: 84: int i, length=strlen(string_in);
  3069  0014EE  C005  F001         	movff	Caps@string_in,strlen@s
  3070  0014F2  C006  F002         	movff	Caps@string_in+1,strlen@s+1
  3071  0014F6  EC23  F00D         	call	_strlen	;wreg free
  3072  0014FA  C001  F00A         	movff	?_strlen,Caps@length
  3073  0014FE  C002  F00B         	movff	?_strlen+1,Caps@length+1
  3074  001502                     
  3075                           ;main.c: 85: for(i=0;i<length;i++)
  3076  001502  0E00               	movlw	0
  3077  001504  6E0D               	movwf	(Caps@i+1)^0,c
  3078  001506  0E00               	movlw	0
  3079  001508  6E0C               	movwf	Caps@i^0,c
  3080  00150A  EFBA  F00A         	goto	l1841
  3081  00150E                     l1833:
  3082                           
  3083                           ;main.c: 86: {;main.c: 87: if(islower(string_in[i]))
  3084  00150E  500C               	movf	Caps@i^0,w,c
  3085  001510  2405               	addwf	Caps@string_in^0,w,c
  3086  001512  6ED9               	movwf	fsr2l,c
  3087  001514  500D               	movf	(Caps@i+1)^0,w,c
  3088  001516  2006               	addwfc	(Caps@string_in+1)^0,w,c
  3089  001518  6EDA               	movwf	fsr2h,c
  3090  00151A  50DF               	movf	indf2,w,c
  3091  00151C  EC40  F00D         	call	_islower
  3092  001520  A0D8               	btfss	status,0,c
  3093  001522  EF95  F00A         	goto	u911
  3094  001526  EF97  F00A         	goto	u910
  3095  00152A                     u911:
  3096  00152A  EFA9  F00A         	goto	l1837
  3097  00152E                     u910:
  3098  00152E                     
  3099                           ;main.c: 88: {;main.c: 89: string_out[i]=toupper(string_in[i]);
  3100  00152E  500C               	movf	Caps@i^0,w,c
  3101  001530  2407               	addwf	Caps@string_out^0,w,c
  3102  001532  6ED9               	movwf	fsr2l,c
  3103  001534  500D               	movf	(Caps@i+1)^0,w,c
  3104  001536  2008               	addwfc	(Caps@string_out+1)^0,w,c
  3105  001538  6EDA               	movwf	fsr2h,c
  3106  00153A  500C               	movf	Caps@i^0,w,c
  3107  00153C  2405               	addwf	Caps@string_in^0,w,c
  3108  00153E  6EE1               	movwf	fsr1l,c
  3109  001540  500D               	movf	(Caps@i+1)^0,w,c
  3110  001542  2006               	addwfc	(Caps@string_in+1)^0,w,c
  3111  001544  6EE2               	movwf	fsr1h,c
  3112  001546  50E7               	movf	indf1,w,c
  3113  001548  EC59  F00D         	call	_toupper
  3114  00154C  6EDF               	movwf	indf2,c
  3115                           
  3116                           ;main.c: 90: }
  3117  00154E  EFB8  F00A         	goto	l1839
  3118  001552                     l1837:
  3119                           
  3120                           ;main.c: 91: else;main.c: 92: {;main.c: 93: string_out[i]=string_in[i];
  3121  001552  500C               	movf	Caps@i^0,w,c
  3122  001554  2405               	addwf	Caps@string_in^0,w,c
  3123  001556  6ED9               	movwf	fsr2l,c
  3124  001558  500D               	movf	(Caps@i+1)^0,w,c
  3125  00155A  2006               	addwfc	(Caps@string_in+1)^0,w,c
  3126  00155C  6EDA               	movwf	fsr2h,c
  3127  00155E  500C               	movf	Caps@i^0,w,c
  3128  001560  2407               	addwf	Caps@string_out^0,w,c
  3129  001562  6EE1               	movwf	fsr1l,c
  3130  001564  500D               	movf	(Caps@i+1)^0,w,c
  3131  001566  2008               	addwfc	(Caps@string_out+1)^0,w,c
  3132  001568  6EE2               	movwf	fsr1h,c
  3133  00156A  006F FF7F FFE7     	movff	indf2,indf1
  3134  001570                     l1839:
  3135  001570  4A0C               	infsnz	Caps@i^0,f,c
  3136  001572  2A0D               	incf	(Caps@i+1)^0,f,c
  3137  001574                     l1841:
  3138  001574  500A               	movf	Caps@length^0,w,c
  3139  001576  5C0C               	subwf	Caps@i^0,w,c
  3140  001578  500D               	movf	(Caps@i+1)^0,w,c
  3141  00157A  0A80               	xorlw	128
  3142  00157C  6E09               	movwf	??_Caps^0,c
  3143  00157E  500B               	movf	(Caps@length+1)^0,w,c
  3144  001580  0A80               	xorlw	128
  3145  001582  5809               	subwfb	??_Caps^0,w,c
  3146  001584  A0D8               	btfss	status,0,c
  3147  001586  EFC7  F00A         	goto	u921
  3148  00158A  EFC9  F00A         	goto	u920
  3149  00158E                     u921:
  3150  00158E  EF87  F00A         	goto	l1833
  3151  001592                     u920:
  3152  001592                     
  3153                           ;main.c: 94: };main.c: 95: };main.c: 96: string_out[length]= '\0';
  3154  001592  500A               	movf	Caps@length^0,w,c
  3155  001594  2407               	addwf	Caps@string_out^0,w,c
  3156  001596  6ED9               	movwf	fsr2l,c
  3157  001598  500B               	movf	(Caps@length+1)^0,w,c
  3158  00159A  2008               	addwfc	(Caps@string_out+1)^0,w,c
  3159  00159C  6EDA               	movwf	fsr2h,c
  3160  00159E  0E00               	movlw	0
  3161  0015A0  6EDF               	movwf	indf2,c
  3162  0015A2  0012               	return		;funcret
  3163  0015A4                     __end_of_Caps:
  3164                           	callstack 0
  3165                           
  3166 ;; *************** function _toupper *****************
  3167 ;; Defined at:
  3168 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\toupper.c"
  3169 ;; Parameters:    Size  Location     Type
  3170 ;;  c               1    wreg     unsigned char 
  3171 ;; Auto vars:     Size  Location     Type
  3172 ;;  c               1    0[COMRAM] unsigned char 
  3173 ;; Return value:  Size  Location     Type
  3174 ;;                  1    wreg      unsigned char 
  3175 ;; Registers used:
  3176 ;;		wreg, status,2, status,0
  3177 ;; Tracked objects:
  3178 ;;		On entry : 0/0
  3179 ;;		On exit  : 0/0
  3180 ;;		Unchanged: 0/0
  3181 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3182 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3183 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3184 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3185 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3186 ;;Total ram usage:        1 bytes
  3187 ;; Hardware stack levels used:    1
  3188 ;; This function calls:
  3189 ;;		Nothing
  3190 ;; This function is called by:
  3191 ;;		_Caps
  3192 ;;		_strInvertCaps
  3193 ;; This function uses a non-reentrant model
  3194 ;;
  3195                           
  3196                           	psect	text27
  3197  001AB2                     __ptext27:
  3198                           	callstack 0
  3199  001AB2                     _toupper:
  3200                           	callstack 29
  3201                           
  3202                           ;incstack = 0
  3203                           ;toupper@c stored from wreg
  3204  001AB2  6E01               	movwf	toupper@c^0,c
  3205  001AB4  0E7B               	movlw	123
  3206  001AB6  6001               	cpfslt	toupper@c^0,c
  3207  001AB8  EF60  F00D         	goto	u751
  3208  001ABC  EF62  F00D         	goto	u750
  3209  001AC0                     u751:
  3210  001AC0  EF6B  F00D         	goto	l1745
  3211  001AC4                     u750:
  3212  001AC4  0E60               	movlw	96
  3213  001AC6  6401               	cpfsgt	toupper@c^0,c
  3214  001AC8  EF68  F00D         	goto	u761
  3215  001ACC  EF6A  F00D         	goto	u760
  3216  001AD0                     u761:
  3217  001AD0  EF6B  F00D         	goto	l1745
  3218  001AD4                     u760:
  3219  001AD4  9A01               	bcf	toupper@c^0,5,c
  3220  001AD6                     l1745:
  3221  001AD6  5001               	movf	toupper@c^0,w,c
  3222  001AD8  0012               	return		;funcret
  3223  001ADA                     __end_of_toupper:
  3224                           	callstack 0
  3225                           
  3226 ;; *************** function _strlen *****************
  3227 ;; Defined at:
  3228 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\strlen.c"
  3229 ;; Parameters:    Size  Location     Type
  3230 ;;  s               2    0[COMRAM] PTR const unsigned char 
  3231 ;;		 -> main@caplast(51), main@capfirst(51), main@LastName(20), main@FirstName(20), 
  3232 ;; Auto vars:     Size  Location     Type
  3233 ;;  cp              2    2[COMRAM] PTR const unsigned char 
  3234 ;;		 -> main@caplast(51), main@capfirst(51), main@LastName(20), main@FirstName(20), 
  3235 ;; Return value:  Size  Location     Type
  3236 ;;                  2    0[COMRAM] unsigned int 
  3237 ;; Registers used:
  3238 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3239 ;; Tracked objects:
  3240 ;;		On entry : 0/0
  3241 ;;		On exit  : 0/0
  3242 ;;		Unchanged: 0/0
  3243 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3244 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3245 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3246 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3247 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3248 ;;Total ram usage:        4 bytes
  3249 ;; Hardware stack levels used:    1
  3250 ;; This function calls:
  3251 ;;		Nothing
  3252 ;; This function is called by:
  3253 ;;		_Reverse_String
  3254 ;;		_Caps
  3255 ;;		_switch_Caps
  3256 ;;		_strInvertCaps
  3257 ;; This function uses a non-reentrant model
  3258 ;;
  3259                           
  3260                           	psect	text28
  3261  001A46                     __ptext28:
  3262                           	callstack 0
  3263  001A46                     _strlen:
  3264                           	callstack 29
  3265  001A46  C001  F003         	movff	strlen@s,strlen@cp
  3266  001A4A  C002  F004         	movff	strlen@s+1,strlen@cp+1
  3267  001A4E  EF2B  F00D         	goto	l1721
  3268  001A52                     l1719:
  3269  001A52  4A03               	infsnz	strlen@cp^0,f,c
  3270  001A54  2A04               	incf	(strlen@cp+1)^0,f,c
  3271  001A56                     l1721:
  3272  001A56  0060  F00F  FFD9   	movff	strlen@cp,fsr2l
  3273  001A5C  0060  F013  FFDA   	movff	strlen@cp+1,fsr2h
  3274  001A62  50DF               	movf	indf2,w,c
  3275  001A64  A4D8               	btfss	status,2,c
  3276  001A66  EF37  F00D         	goto	u721
  3277  001A6A  EF39  F00D         	goto	u720
  3278  001A6E                     u721:
  3279  001A6E  EF29  F00D         	goto	l1719
  3280  001A72                     u720:
  3281  001A72  5001               	movf	strlen@s^0,w,c
  3282  001A74  5C03               	subwf	strlen@cp^0,w,c
  3283  001A76  6E01               	movwf	?_strlen^0,c
  3284  001A78  5002               	movf	(strlen@s+1)^0,w,c
  3285  001A7A  5804               	subwfb	(strlen@cp+1)^0,w,c
  3286  001A7C  6E02               	movwf	(?_strlen+1)^0,c
  3287  001A7E  0012               	return		;funcret
  3288  001A80                     __end_of_strlen:
  3289                           	callstack 0
  3290                           
  3291 ;; *************** function _islower *****************
  3292 ;; Defined at:
  3293 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\islower.c"
  3294 ;; Parameters:    Size  Location     Type
  3295 ;;  c               1    wreg     unsigned char 
  3296 ;; Auto vars:     Size  Location     Type
  3297 ;;  c               1    2[COMRAM] unsigned char 
  3298 ;; Return value:  Size  Location     Type
  3299 ;;		None               void
  3300 ;; Registers used:
  3301 ;;		wreg, status,2, status,0
  3302 ;; Tracked objects:
  3303 ;;		On entry : 0/0
  3304 ;;		On exit  : 0/0
  3305 ;;		Unchanged: 0/0
  3306 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3307 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3308 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3309 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3310 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3311 ;;Total ram usage:        3 bytes
  3312 ;; Hardware stack levels used:    1
  3313 ;; This function calls:
  3314 ;;		Nothing
  3315 ;; This function is called by:
  3316 ;;		_Caps
  3317 ;; This function uses a non-reentrant model
  3318 ;;
  3319                           
  3320                           	psect	text29
  3321  001A80                     __ptext29:
  3322                           	callstack 0
  3323  001A80                     _islower:
  3324                           	callstack 29
  3325                           
  3326                           ;incstack = 0
  3327                           ;islower@c stored from wreg
  3328  001A80  6E03               	movwf	islower@c^0,c
  3329  001A82  0E00               	movlw	0
  3330  001A84  6E02               	movwf	_islower$932^0,c
  3331  001A86  0E7B               	movlw	123
  3332  001A88  6003               	cpfslt	islower@c^0,c
  3333  001A8A  EF49  F00D         	goto	u731
  3334  001A8E  EF4B  F00D         	goto	u730
  3335  001A92                     u731:
  3336  001A92  EF55  F00D         	goto	l1735
  3337  001A96                     u730:
  3338  001A96  0E60               	movlw	96
  3339  001A98  6403               	cpfsgt	islower@c^0,c
  3340  001A9A  EF51  F00D         	goto	u741
  3341  001A9E  EF53  F00D         	goto	u740
  3342  001AA2                     u741:
  3343  001AA2  EF55  F00D         	goto	l1735
  3344  001AA6                     u740:
  3345  001AA6  0E01               	movlw	1
  3346  001AA8  6E02               	movwf	_islower$932^0,c
  3347  001AAA                     l1735:
  3348  001AAA  C002  F001         	movff	_islower$932,??_islower
  3349  001AAE  3001               	rrcf	??_islower^0,w,c
  3350  001AB0  0012               	return		;funcret
  3351  001AB2                     __end_of_islower:
  3352                           	callstack 0
  3353                           
  3354                           	psect	text30
  3355  000000                     __ptext30:
  3356                           	callstack 0
  3357  000000                     
  3358                           	psect	rparam
  3359  0000                     
  3360                           	psect	idloc
  3361                           
  3362                           ;Config register IDLOC0 @ 0x200000
  3363                           ;	unspecified, using default values
  3364  200000                     	org	2097152
  3365  200000  0FFF               	dw	4095
  3366                           
  3367                           ;Config register IDLOC1 @ 0x200002
  3368                           ;	unspecified, using default values
  3369  200002                     	org	2097154
  3370  200002  0FFF               	dw	4095
  3371                           
  3372                           ;Config register IDLOC2 @ 0x200004
  3373                           ;	unspecified, using default values
  3374  200004                     	org	2097156
  3375  200004  0FFF               	dw	4095
  3376                           
  3377                           ;Config register IDLOC3 @ 0x200006
  3378                           ;	unspecified, using default values
  3379  200006                     	org	2097158
  3380  200006  0FFF               	dw	4095
  3381                           
  3382                           ;Config register IDLOC4 @ 0x200008
  3383                           ;	unspecified, using default values
  3384  200008                     	org	2097160
  3385  200008  0FFF               	dw	4095
  3386                           
  3387                           ;Config register IDLOC5 @ 0x20000A
  3388                           ;	unspecified, using default values
  3389  20000A                     	org	2097162
  3390  20000A  0FFF               	dw	4095
  3391                           
  3392                           ;Config register IDLOC6 @ 0x20000C
  3393                           ;	unspecified, using default values
  3394  20000C                     	org	2097164
  3395  20000C  0FFF               	dw	4095
  3396                           
  3397                           ;Config register IDLOC7 @ 0x20000E
  3398                           ;	unspecified, using default values
  3399  20000E                     	org	2097166
  3400  20000E  0FFF               	dw	4095
  3401                           
  3402                           	psect	config
  3403                           
  3404                           ;Config register CONFIG1L @ 0x300000
  3405                           ;	External Oscillator Selection
  3406                           ;	FEXTOSC = OFF, Oscillator not enabled
  3407                           ;	Reset Oscillator Selection
  3408                           ;	RSTOSC = HFINTOSC_1MHZ, HFINTOSC with HFFRQ = 4 MHz and CDIV = 4:1
  3409  300000                     	org	3145728
  3410  300000  EC                 	db	236
  3411                           
  3412                           ;Config register CONFIG1H @ 0x300001
  3413                           ;	Clock out Enable bit
  3414                           ;	CLKOUTEN = ON, CLKOUT function is enabled
  3415                           ;	PRLOCKED One-Way Set Enable bit
  3416                           ;	PR1WAY = ON, PRLOCK bit can be cleared and set only once
  3417                           ;	Clock Switch Enable bit
  3418                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
  3419                           ;	Fail-Safe Clock Monitor Enable bit
  3420                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
  3421  300001                     	org	3145729
  3422  300001  FE                 	db	254
  3423                           
  3424                           ;Config register CONFIG2L @ 0x300002
  3425                           ;	MCLR Enable bit
  3426                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RE3 pin function is MCLR
  3427                           ;	Power-up timer selection bits
  3428                           ;	PWRTS = PWRT_OFF, PWRT is disabled
  3429                           ;	Multi-vector enable bit
  3430                           ;	MVECEN = OFF, Interrupt contoller does not use vector table to prioritze interrupts
  3431                           ;	IVTLOCK bit One-way set enable bit
  3432                           ;	IVT1WAY = ON, IVTLOCK bit can be cleared and set only once
  3433                           ;	Low Power BOR Enable bit
  3434                           ;	LPBOREN = OFF, ULPBOR disabled
  3435                           ;	Brown-out Reset Enable bits
  3436                           ;	BOREN = SBORDIS, Brown-out Reset enabled , SBOREN bit is ignored
  3437  300002                     	org	3145730
  3438  300002  F7                 	db	247
  3439                           
  3440                           ;Config register CONFIG2H @ 0x300003
  3441                           ;	Brown-out Reset Voltage Selection bits
  3442                           ;	BORV = VBOR_2P45, Brown-out Reset Voltage (VBOR) set to 2.45V
  3443                           ;	ZCD Disable bit
  3444                           ;	ZCD = OFF, ZCD disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCDCON
  3445                           ;	PPSLOCK bit One-Way Set Enable bit
  3446                           ;	PPS1WAY = ON, PPSLOCK bit can be cleared and set only once; PPS registers remain locke
      +                          d after one clear/set cycle
  3447                           ;	Stack Full/Underflow Reset Enable bit
  3448                           ;	STVREN = ON, Stack full/underflow will cause Reset
  3449                           ;	Debugger Enable bit
  3450                           ;	DEBUG = OFF, Background debugger disabled
  3451                           ;	Extended Instruction Set Enable bit
  3452                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
  3453  300003                     	org	3145731
  3454  300003  FF                 	db	255
  3455                           
  3456                           ;Config register CONFIG3L @ 0x300004
  3457                           ;	WDT Period selection bits
  3458                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  3459                           ;	WDT operating mode
  3460                           ;	WDTE = OFF, WDT Disabled; SWDTEN is ignored
  3461  300004                     	org	3145732
  3462  300004  9F                 	db	159
  3463                           
  3464                           ;Config register CONFIG3H @ 0x300005
  3465                           ;	WDT Window Select bits
  3466                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
  3467                           ;	WDT input clock selector
  3468                           ;	WDTCCS = SC, Software Control
  3469  300005                     	org	3145733
  3470  300005  FF                 	db	255
  3471                           
  3472                           ;Config register CONFIG4L @ 0x300006
  3473                           ;	Boot Block Size selection bits
  3474                           ;	BBSIZE = BBSIZE_512, Boot Block size is 512 words
  3475                           ;	Boot Block enable bit
  3476                           ;	BBEN = OFF, Boot block disabled
  3477                           ;	Storage Area Flash enable bit
  3478                           ;	SAFEN = OFF, SAF disabled
  3479                           ;	Application Block write protection bit
  3480                           ;	WRTAPP = OFF, Application Block not write protected
  3481  300006                     	org	3145734
  3482  300006  FF                 	db	255
  3483                           
  3484                           ;Config register CONFIG4H @ 0x300007
  3485                           ;	Configuration Register Write Protection bit
  3486                           ;	WRTB = OFF, Configuration registers (300000-30000Bh) not write-protected
  3487                           ;	Boot Block Write Protection bit
  3488                           ;	WRTC = OFF, Boot Block (000000-0007FFh) not write-protected
  3489                           ;	Data EEPROM Write Protection bit
  3490                           ;	WRTD = OFF, Data EEPROM not write-protected
  3491                           ;	SAF Write protection bit
  3492                           ;	WRTSAF = OFF, SAF not Write Protected
  3493                           ;	Low Voltage Programming Enable bit
  3494                           ;	LVP = ON, Low voltage programming enabled. MCLR/VPP pin function is MCLR. MCLRE config
      +                          uration bit is ignored
  3495  300007                     	org	3145735
  3496  300007  FF                 	db	255
  3497                           
  3498                           ;Config register CONFIG5L @ 0x300008
  3499                           ;	PFM and Data EEPROM Code Protection bit
  3500                           ;	CP = OFF, PFM and Data EEPROM code protection disabled
  3501  300008                     	org	3145736
  3502  300008  FF                 	db	255
  3503                           
  3504                           ;Config register CONFIG5H @ 0x300009
  3505                           ;	unspecified, using default values
  3506  300009                     	org	3145737
  3507  300009  FF                 	db	255
  3508                           tosu	equ	0x3FFF
  3509                           tosh	equ	0x3FFE
  3510                           tosl	equ	0x3FFD
  3511                           stkptr	equ	0x3FFC
  3512                           pclatu	equ	0x3FFB
  3513                           pclath	equ	0x3FFA
  3514                           pcl	equ	0x3FF9
  3515                           tblptru	equ	0x3FF8
  3516                           tblptrh	equ	0x3FF7
  3517                           tblptrl	equ	0x3FF6
  3518                           tablat	equ	0x3FF5
  3519                           prodh	equ	0x3FF4
  3520                           prodl	equ	0x3FF3
  3521                           indf0	equ	0x3FEF
  3522                           postinc0	equ	0x3FEE
  3523                           postdec0	equ	0x3FED
  3524                           preinc0	equ	0x3FEC
  3525                           plusw0	equ	0x3FEB
  3526                           fsr0h	equ	0x3FEA
  3527                           fsr0l	equ	0x3FE9
  3528                           wreg	equ	0x3FE8
  3529                           indf1	equ	0x3FE7
  3530                           postinc1	equ	0x3FE6
  3531                           postdec1	equ	0x3FE5
  3532                           preinc1	equ	0x3FE4
  3533                           plusw1	equ	0x3FE3
  3534                           fsr1h	equ	0x3FE2
  3535                           fsr1l	equ	0x3FE1
  3536                           bsr	equ	0x3FE0
  3537                           indf2	equ	0x3FDF
  3538                           postinc2	equ	0x3FDE
  3539                           postdec2	equ	0x3FDD
  3540                           preinc2	equ	0x3FDC
  3541                           plusw2	equ	0x3FDB
  3542                           fsr2h	equ	0x3FDA
  3543                           fsr2l	equ	0x3FD9
  3544                           status	equ	0x3FD8

Data Sizes:
    Strings     94
    Constant    0
    Data        6
    BSS         23
    Persistent  6
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     95      95
    BANK0           160    155     160
    BANK1           256     91     121
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0

Pointer List with Targets:

    strspn@s2	PTR const unsigned char  size(2) Largest target is 2
		 -> STR_3(CODE[2]), STR_2(CODE[2]), 

    strspn@s1	PTR const unsigned char  size(2) Largest target is 51
		 -> NULL(NULL[0]), main@inputstring(COMRAM[51]), 

    strchr@ptr	PTR const unsigned char  size(2) Largest target is 2
		 -> STR_3(CODE[2]), STR_2(CODE[2]), 

    sp__strchr	PTR unsigned char  size(2) Largest target is 2
		 -> STR_3(CODE[2]), NULL(NULL[0]), STR_2(CODE[2]), 

    strcspn@s2	PTR const unsigned char  size(2) Largest target is 2
		 -> STR_3(CODE[2]), STR_2(CODE[2]), 

    strcspn@s1	PTR const unsigned char  size(2) Largest target is 51
		 -> NULL(NULL[0]), main@inputstring(COMRAM[51]), 

    strtok@s2	PTR const unsigned char  size(2) Largest target is 2
		 -> STR_3(CODE[2]), STR_2(CODE[2]), 

    strtok@sp	PTR unsigned char  size(2) Largest target is 51
		 -> NULL(NULL[0]), main@inputstring(COMRAM[51]), 

    strtok@s1	PTR unsigned char  size(2) Largest target is 51
		 -> NULL(NULL[0]), main@inputstring(COMRAM[51]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 51
		 -> main@caplast(BANK1[51]), main@capfirst(BANK0[51]), main@LastName(BANK1[20]), main@FirstName(BANK1[20]), 

    strlen@cp	PTR const unsigned char  size(2) Largest target is 51
		 -> main@caplast(BANK1[51]), main@capfirst(BANK0[51]), main@LastName(BANK1[20]), main@FirstName(BANK1[20]), 

    strcpy@from	PTR const unsigned char  size(2) Largest target is 51
		 -> NULL(NULL[0]), main@inputstring(COMRAM[51]), 

    strcpy@to	PTR unsigned char  size(2) Largest target is 20
		 -> main@LastName(BANK1[20]), main@FirstName(BANK1[20]), 

    strcpy@cp	PTR unsigned char  size(2) Largest target is 20
		 -> main@LastName(BANK1[20]), main@FirstName(BANK1[20]), 

    printf@f	PTR const unsigned char  size(2) Largest target is 32
		 -> STR_9(CODE[7]), STR_8(CODE[9]), STR_7(CODE[9]), STR_6(CODE[18]), 
		 -> STR_5(CODE[32]), STR_4(CODE[32]), STR_1(CODE[24]), 

    printf@cp	PTR const unsigned char  size(2) Largest target is 51
		 -> STR_10(CODE[7]), ?_printf(COMRAM[2]), main@reverselast(BANK0[51]), main@reversefirst(BANK0[51]), 
		 -> main@caplast(BANK1[51]), main@capfirst(BANK0[51]), main@LastName(BANK1[20]), main@FirstName(BANK1[20]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), 

    ReadNUART2@holds_string	PTR unsigned char  size(2) Largest target is 51
		 -> main@inputstring(COMRAM[51]), 

    Caps@string_out	PTR unsigned char  size(2) Largest target is 51
		 -> main@caplast(BANK1[51]), main@capfirst(BANK0[51]), 

    Caps@string_in	PTR unsigned char  size(2) Largest target is 20
		 -> main@LastName(BANK1[20]), main@FirstName(BANK1[20]), 

    Reverse_String@string_out	PTR unsigned char  size(2) Largest target is 51
		 -> main@reverselast(BANK0[51]), main@reversefirst(BANK0[51]), 

    Reverse_String@string_in	PTR unsigned char  size(2) Largest target is 51
		 -> main@caplast(BANK1[51]), main@capfirst(BANK0[51]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 20
		 -> main@LastName(BANK1[20]), main@FirstName(BANK1[20]), 

    sp__strtok	PTR unsigned char  size(2) Largest target is 51
		 -> NULL(NULL[0]), main@inputstring(COMRAM[51]), 

    main@token	PTR unsigned char  size(2) Largest target is 51
		 -> NULL(NULL[0]), main@inputstring(COMRAM[51]), 

    UART2_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART2_DefaultErrorHandler(), 

    UART2_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART2_DefaultOverrunErrorHandler(), 

    UART2_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART2_DefaultFramingErrorHandler(), 

    UART2_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), UART2_DefaultErrorHandler(), 

    UART2_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), UART2_DefaultOverrunErrorHandler(), 

    UART2_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), UART2_DefaultFramingErrorHandler(), 


Critical Paths under _main in COMRAM

    _main->_printf
    _strtok->_strcspn
    _strtok->_strspn
    _strspn->_strchr
    _strcspn->_strchr
    _clearPuTTY->_printf
    _printf->_putch
    _putch->_UART2_Write
    _UART2_Initialize->_UART2_SetErrorHandler
    _UART2_Initialize->_UART2_SetFramingErrorHandler
    _UART2_Initialize->_UART2_SetOverrunErrorHandler
    _Reverse_String->_strlen
    _Caps->_strlen

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               378   378      0    7118
                                             18 COMRAM    77    77      0
                                              0 BANK0    155   155      0
                                              0 BANK1     91    91      0
                               _Caps
                         _ReadNUART2
                     _Reverse_String
                  _SYSTEM_Initialize
                         _clearPuTTY
                             _printf
                             _strcpy
                             _strtok
                     _wait_for_ENTER
 ---------------------------------------------------------------------------------
 (1) _wait_for_ENTER                                       2     2      0      46
                                              0 COMRAM     2     2      0
                         _UART2_Read
                  _UART2_is_rx_ready
 ---------------------------------------------------------------------------------
 (1) _strtok                                               4     0      4    1774
                                             11 COMRAM     4     0      4
                            _strcspn
                             _strspn
 ---------------------------------------------------------------------------------
 (2) _strspn                                               7     3      4     635
                                              4 COMRAM     7     3      4
                             _strchr
 ---------------------------------------------------------------------------------
 (2) _strcspn                                              7     3      4     635
                                              4 COMRAM     7     3      4
                             _strchr
 ---------------------------------------------------------------------------------
 (3) _strchr                                               4     0      4     392
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (1) _strcpy                                               6     2      4     379
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _clearPuTTY                                           0     0      0     806
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                              25    15     10     806
                                              2 COMRAM    16     6     10
                              _putch
 ---------------------------------------------------------------------------------
 (2) _putch                                                1     1      0      44
                                              1 COMRAM     1     1      0
                        _UART2_Write
 ---------------------------------------------------------------------------------
 (3) _UART2_Write                                          1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     294
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                   _UART2_Initialize
 ---------------------------------------------------------------------------------
 (2) _UART2_Initialize                                     0     0      0     294
              _UART2_SetErrorHandler
       _UART2_SetFramingErrorHandler
       _UART2_SetOverrunErrorHandler
 ---------------------------------------------------------------------------------
 (3) _UART2_SetOverrunErrorHandler                         2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _UART2_SetFramingErrorHandler                         2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _UART2_SetErrorHandler                                2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Reverse_String                                      10     6      4     921
                                              4 COMRAM    10     6      4
                             _strlen
 ---------------------------------------------------------------------------------
 (1) _ReadNUART2                                          12     8      4     377
                                              0 COMRAM    10     6      4
                         _UART2_Read
                  _UART2_is_rx_ready
 ---------------------------------------------------------------------------------
 (2) _UART2_is_rx_ready                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _UART2_Read                                           0     0      0       0
                   Absolute function *
          _UART2_DefaultErrorHandler *
   _UART2_DefaultFramingErrorHandler *
   _UART2_DefaultOverrunErrorHandler *
 ---------------------------------------------------------------------------------
 (3) _UART2_DefaultOverrunErrorHandler                     0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _UART2_DefaultFramingErrorHandler                     0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _UART2_DefaultErrorHandler                            0     0      0       0
 ---------------------------------------------------------------------------------
 (3) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Caps                                                 9     5      4    1166
                                              4 COMRAM     9     5      4
                            _islower
                             _strlen
                            _toupper
 ---------------------------------------------------------------------------------
 (2) _toupper                                              1     1      0      67
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _strlen                                               4     2      2     394
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) _islower                                              3     3      0      68
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Caps
     _islower
     _strlen
     _toupper
   _ReadNUART2
     _UART2_Read
       Absolute function(Fake) *
       _UART2_DefaultErrorHandler *
       _UART2_DefaultFramingErrorHandler *
       _UART2_DefaultOverrunErrorHandler *
     _UART2_is_rx_ready
   _Reverse_String
     _strlen
   _SYSTEM_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _UART2_Initialize
       _UART2_SetErrorHandler
       _UART2_SetFramingErrorHandler
       _UART2_SetOverrunErrorHandler
   _clearPuTTY
     _printf
       _putch
         _UART2_Write
   _printf
     _putch
       _UART2_Write
   _strcpy
   _strtok
     _strcspn
       _strchr
     _strspn
       _strchr
   _wait_for_ENTER
     _UART2_Read
       Absolute function(Fake) *
       _UART2_DefaultErrorHandler *
       _UART2_DefaultFramingErrorHandler *
       _UART2_DefaultOverrunErrorHandler *
     _UART2_is_rx_ready

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             FFF      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK15          100      0       0      30        0.0%
BANK15             100      0       0      31        0.0%
BITBANK14          100      0       0      28        0.0%
BANK14             100      0       0      29        0.0%
BITBANK13          100      0       0      36        0.0%
BANK13             100      0       0      27        0.0%
BITBANK12          100      0       0      35        0.0%
BANK12             100      0       0      26        0.0%
BITBANK11          100      0       0      34        0.0%
BANK11             100      0       0      25        0.0%
BITBANK10          100      0       0      33        0.0%
BANK10             100      0       0      24        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     5B      79       7       47.3%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     9B      A0       5      100.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5F      5F       1      100.0%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     178      32        0.0%
DATA                 0      0     178       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.30 build 20200825195618 
Symbol Table                                                                                   Sun Nov 08 04:46:09 2020

                   __end_of_UART2_is_rx_ready 1B46                                            l89 16D8  
                                         l202 1B7E                                           l301 15A2  
                                         l152 1B44                                           l242 1B2E  
                                         l172 1644                                           l245 1AFC  
                                         l149 1974                                           l190 1B86  
                                         l166 15A4                                           l239 1B56  
                                         l175 1B00                                           l360 14EC  
                                         l184 1B60                                           l193 1B8A  
                                         l178 1B16                                           l187 1B88  
                                         l347 19C4                                           l196 1B74  
                                         l293 175E                                           l365 17DC  
                                         l199 1B6A                                           l389 133E  
                                main@LastName 0147                                           u600 15CA  
                                         u601 15C6                                           u620 15F6  
                                         u700 12B6                                           u621 15F2  
                                         u701 12B2                                           u550 1B10  
                                         u710 133E                                           u551 1B0C  
                                         u711 133A                                           u720 1A72  
                                         u640 1626                                           u560 18DC  
                                         u800 18B0                                           u721 1A6E  
                                         u641 1622                                           u561 18D8  
                                         u801 18AC                                           u730 1A96  
                                         u618 15D4                                           u810 144A  
                                         u570 190E                                           u731 1A92  
                                         u619 15E6                                           u811 1446  
                                         u571 190A                                           u740 1AA6  
                                         u580 1B42                                           u820 146A  
                                         u660 11FE                                           u900 1A08  
                                         u741 1AA2                                           u581 1B3C  
                                         u821 1466                                           u661 11FA  
                                         u901 1A04                                           u750 1AC4  
                                         u910 152E                                           u638 1600  
                                         u590 15B4                                           u830 1484  
                                         u670 123E                                           u751 1AC0  
                                         u911 152A                                           u639 1614  
                                         u591 15B0                                           u831 1480  
                                         u671 123A                                           u760 1AD4  
                                         u920 1592                                           u840 14BA  
                                         u680 1274                                           u761 1AD0  
                                         u921 158E                                           u841 14B6  
                                         u658 162C                                           u586 1B44  
                                         u850 14D0                                           u930 174E  
                                         u690 12A6                                           u770 180E  
                                         u659 1640                                           u851 14CC  
                                         u931 174A                                           u771 180A  
                                         u780 1842                                           u860 1352  
                                         u940 198A                                           u781 183E  
                                         u861 134E                                           u941 1986  
                                         u790 187C                                           u870 136C  
                                         u950 19B0                                           u687 1266  
                                         u791 1878                                           u871 1368  
                                         u951 19AC                                           u880 13B0  
                                         u960 19C4                                           u697 1298  
                                         u881 13AC                                           u961 19C0  
                                         u890 1404                                           u891 1400  
                                         u971 1072                                           u981 1082  
                                         u990 10D8                                           u991 10D4  
                     __size_of_PMD_Initialize 0024                                           tosl 003FFD  
                                         wreg 003FE8                                   main@caplast 0100  
                               main@FirstName 0133                                          l1100 18BA  
                                        l1102 1916                                          l1112 1842  
                                        l1121 1AD8                                          l1113 184A  
                                        l1056 1AB0                                          l1073 1A7E  
                                        l1082 135A                                          l1067 1A08  
                                        l1084 142C                                          l1087 1424  
                                        l1096 18B0                                          l1601 18DC  
                                        l1097 18B8                                          l1611 1646  
                                        l1621 166C                                          l1613 165E  
                                        l1701 1278                                          l1605 18E8  
                                        l1631 16BE                                          l1623 1676  
                                        l1615 1664                                          l1703 127C  
                                        l1607 190E                                          l1721 1A56  
                                        l1633 16C4                                          l1625 16B8  
                                        l1617 1666                                          l1641 1918  
                                        l1705 12BA                                          l1713 12DC  
                                        l1731 1A96                                          l1723 1A72  
                                        l1651 1B30                                          l1635 16C6  
                                        l1627 16BA                                          l1619 1668  
                                        l1643 194A                                          l1707 12CA  
                                        l1715 1314                                          l1811 13C6  
                                        l1803 1378                                          l1733 1AA6  
                                        l1717 1A46                                          l1741 1AC4  
                                        l1661 15CA                                          l1637 16C8  
                                        l1629 16BC                                          l1645 1956  
                                        l1709 12D2                                          l1813 13E8  
                                        l1805 1394                                          l1901 1108  
                                        l1735 1AAA                                          l1727 1A82  
                                        l1719 1A52                                          l1743 1AD4  
                                        l1831 1502                                          l1671 1614  
                                        l1663 15CE                                          l1655 15A4  
                                        l1639 16CA                                          l1591 1B6C  
                                        l1647 1962                                          l1823 19C6  
                                        l1751 17EA                                          l1815 1404  
                                        l1807 13B0                                          l1911 1174  
                                        l1903 111C                                          l1729 1A86  
                                        l1745 1AD6                                          l1833 150E  
                                        l1841 1574                                          l1673 1626  
                                        l1665 15E6                                          l1657 15B4  
                                        l1681 1B18                                          l1593 1B62  
                                        l1649 196E                                          l1825 19D2  
                                        l1761 1860                                          l1753 17F2  
                                        l1817 1414                                          l1913 11B8  
                                        l1905 1130                                          l1739 1AB4  
                                        l1843 1592                                          l1835 152E  
                                        l1675 1640                                          l1667 15F6  
                                        l1659 15BA                                          l1771 142E  
                                        l1851 16FA                                          l1595 1B76  
                                        l1587 1B00                                          l1691 120C  
                                        l1683 11E0                                          l1827 19DA  
                                        l1763 187C                                          l1755 180E  
                                        l1819 141C                                          l1915 11D4  
                                        l1907 114C                                          l1837 1552  
                                        l1829 14EE                                          l1669 15FA  
                                        l1781 1470                                          l1773 1436  
                                        l1853 172C                                          l1765 1B46  
                                        l1589 1B10                                          l1597 1B5A  
                                        l1693 1224                                          l1685 11EC  
                                        l1757 184C                                          l1749 17DE  
                                        l1861 1976                                          l1909 1160  
                                        l1839 1570                                          l1791 14BA  
                                        l1783 1484                                          l1775 144A  
                                        l1855 1730                                          l1847 16DA  
                                        l1679 1ADA                                          l1767 1B52  
                                        l1695 122C                                          l1687 11FE  
                                        l1599 18BA                                          l1759 1858  
                                        l1871 1996                                          l1863 1976  
                                        l1793 14D0                                          l1785 1490  
                                        l1777 1456                                          l1857 174E  
                                        l1849 16EE                                          l1697 123E  
                                        l1689 1208                                          l1769 1760  
                                        l1873 199A                                          l1865 198E  
                                        l1881 1060                                          l1787 14A2  
                                        l1779 146A                                          l1699 124A  
                                        l1795 1340                                          l1875 19B0  
                                        l1891 1094                                          l1883 1064  
                                        l1789 14A6                                          l1797 1352  
                                        l1893 10A8                                          l1885 1068  
                                        l1799 136C                                          l1895 10C4  
                                        l1887 107C                                          l1897 10D8  
                                        l1889 1088                                          l1899 10EC  
                                        STR_1 1021                                          STR_2 105D  
                                        STR_3 105B                                          STR_4 1001  
                                        STR_5 1001                                          STR_6 1039  
                                        STR_7 104B                                          STR_8 104B  
                                        STR_9 104D                                          u1000 111C  
                                        u1001 1118                                          _LATA 003FBA  
                                        _LATB 003FBB                                          _LATC 003FBC  
                                        _LATD 003FBD                                          _LATE 003FBE  
                                        _PMD0 0039C0                                          _PMD1 0039C1  
                                        _PMD2 0039C2                                          _PMD3 0039C3  
                                        _PMD4 0039C4                                          _PMD5 0039C5  
                                        _PMD6 0039C6                                          _PMD7 0039C7  
                                        _WPUA 003A41                                          _WPUB 003A51  
                                        _WPUC 003A61                                          _WPUD 003A71  
                                        _WPUE 003A81                                          _Caps 14EE  
                     __size_of_Reverse_String 0086                                          _main 1060  
                                        fsr0h 003FEA                                          fsr1h 003FE2  
                                        indf0 003FEF                                          fsr2h 003FDA  
                                        fsr0l 003FE9                                          indf1 003FE7  
                                        indf2 003FDF                                          fsr1l 003FE1  
                                        fsr2l 003FD9                                          start FFFC  
                                 ReadNUART2@i 0009                                   main@string2 0013  
                             Reverse_String@i 000D                                  ___param_bank 000000  
                                main@capfirst 00C6                                   ?_UART2_Read 0001  
                                       ?_Caps 0005                __size_of_OSCILLATOR_Initialize 0018  
               __end_of_OSCILLATOR_Initialize 1B30                        ReadNUART2@holds_string 0001  
                                       ?_main 0001                                         STR_10 1054  
                                       Caps@i 000C                                         _U2P1L 003DD4  
                                       _U2P2L 003DD6                                         _U2P3L 003DD8  
                                       _U2UIR 003DE0                                         _U2RXB 003DD0  
                                       _U2TXB 003DD2                                         _OSCEN 0039DD  
                                       _TRISA 003FC2                                         _TRISB 003FC3  
                                       _TRISC 003FC4                                         _TRISD 003FC5  
                                       _TRISE 003FC6                                         _putch 1B58  
                             __end_of_islower 1AB2                                         pclath 003FFA  
                                       tablat 003FF5                                         plusw1 003FE3  
                                       plusw2 003FDB                                         status 003FD8  
                             __end_of_strcspn 18BA                               __end_of_toupper 1ADA  
                                  _ReadNUART2 142E                ??_UART2_SetOverrunErrorHandler 0003  
                                __end_of_Caps 15A4                               __initialization 1A0A  
                                __end_of_main 11E0                    __size_of_UART2_is_rx_ready 0016  
                                      ??_Caps 0009                                  ?_UART2_Write 0001  
                                      ??_main 0013                                 __activetblptr 000003  
                        Reverse_String@length 000B                                        _ANSELA 003A40  
                                      ?_putch 0001                                        _ANSELB 003A50  
                                      _ANSELC 003A60                                        _ANSELD 003A70  
                                      _ANSELE 003A80                                        _RB1I2C 003A5A  
                                      _RB2I2C 003A5B                                        _RD0I2C 003A7A  
                                      _RC3I2C 003A6A                                        _RD1I2C 003A7B  
                                      _RC4I2C 003A6B                                        _U2CON0 003DDA  
                                      _U2CON1 003DDB                                        _U2CON2 003DDC  
                                      _U2BRGH 003DDE                                        _U2FIFO 003DDF  
                                      _U2BRGL 003DDD                           __size_of_UART2_Read 00A2  
                                      _RB6PPS 003A0E                                        _ODCONA 003A42  
                                      _ODCONB 003A52                                        _ODCONC 003A62  
                                      _ODCOND 003A72                                        _ODCONE 003A82  
                                      _INLVLA 003A44                                        _INLVLB 003A54  
                                      _INLVLC 003A64                                        _INLVLD 003A74  
                                      _INLVLE 003A84                                        _OSCFRQ 0039DF  
                            _UART2_Initialize 1918                     _UART2_OverrunErrorHandler 0177  
          __size_of_UART2_DefaultErrorHandler 0002                    ?_UART2_DefaultErrorHandler 0001  
                                      clear_0 1A32                                        _printf 11E0  
                                      _strchr 18BA                                        _strcpy 19C6  
                                      _strlen 1A46                                        _strtok 1340  
                                      _strspn 17DE                                _PMD_Initialize 1ADA  
                                   ??_islower 0001                                  __mediumconst 0000  
                                      tblptrh 003FF7                                        tblptrl 003FF6  
                                      tblptru 003FF8                                     ??_strcspn 0009  
                                   ??_toupper 0001                                _Reverse_String 16DA  
                           _SYSTEM_Initialize 1B46                                    __accesstop 0060  
                     __end_of__initialization 1A40                                   ?_ReadNUART2 0001  
                          ?_SYSTEM_Initialize 0001                                 ___rparam_used 000001  
                              __pcstackCOMRAM 0001                         _UART2_SetErrorHandler 1B76  
                                __pidataBANK1 1B80                           ??_SYSTEM_Initialize 0003  
           __end_of_UART2_DefaultErrorHandler 1B8C                                 __end_of_putch 1B62  
                      __end_of_PMD_Initialize 1AFE                        __end_of_Reverse_String 1760  
                   __end_of_SYSTEM_Initialize 1B58                                       ??_putch 0002  
                                  __pbssBANK0 00FB                                    __pbssBANK1 015B  
                                  _clearPuTTY 1760                                  ??_UART2_Read 0001  
        __end_of_UART2_SetFramingErrorHandler 1B76         __size_of_UART2_SetFramingErrorHandler 000A  
                _UART2_SetFramingErrorHandler 1B6C                                       ?_printf 0003  
                             ?_PMD_Initialize 0001                                       ?_strchr 0001  
                                     ?_strcpy 0001                                       ?_strlen 0001  
                                     ?_strtok 000C                                       ?_strspn 0005  
                                     _U2ERRIE 003DE2                                       _U2ERRIR 003DE1  
                        __size_of_UART2_Write 001A                           __size_of_ReadNUART2 00C0  
                                     _U2RXPPS 003AE8                                       _OSCCON1 0039D9  
                                     _OSCCON3 0039DB                                       _OSCTUNE 0039DE  
                                     _SLRCONA 003A43                                       _SLRCONB 003A53  
                                     _SLRCONC 003A63                                       _SLRCOND 003A73  
                                     _SLRCONE 003A83                               ?_Reverse_String 0005  
                          __end_of_UART2_Read 1646                                       __Hparam 0000  
                      ?_UART2_SetErrorHandler 0001                                       __Lparam 0000  
                     Reverse_String@string_in 0005                                  __psmallconst 1000  
               ?_UART2_SetFramingErrorHandler 0001                       __size_of_wait_for_ENTER 0050  
                                     __pcinit 1A0A                                       __ramtop 1000  
                                     __ptext0 1060                                       __ptext1 1976  
                                     __ptext2 1340                                       __ptext3 17DE  
                                     __ptext4 184C                                       __ptext5 18BA  
                                     __ptext6 19C6                                       __ptext7 1760  
                                     __ptext8 11E0                                       __ptext9 1B58  
                             __size_of_printf 0160                               __size_of_strchr 005E  
                             __size_of_strcpy 0044                               __size_of_strlen 003A  
                             __size_of_strtok 00EE                               __size_of_strspn 006E  
         fp__UART2_DefaultOverrunErrorHandler 0000      __end_of_UART2_DefaultOverrunErrorHandler 1B88  
   __size_of_UART2_DefaultOverrunErrorHandler 0002            ??_UART2_DefaultOverrunErrorHandler 0001  
           ?_UART2_DefaultOverrunErrorHandler 0001              _UART2_DefaultOverrunErrorHandler 1B86  
                       _OSCILLATOR_Initialize 1B18                                       _islower 1A80  
                    ??_PIN_MANAGER_Initialize 0001                      __end_of_UART2_Initialize 1976  
                  __size_of_SYSTEM_Initialize 0012                                       _strcspn 184C  
                                     _toupper 1AB2                          end_of_initialization 1A40  
                                 ?_clearPuTTY 0001                                       printf@c 0012  
                                     printf@f 0003                                       postdec1 003FE5  
                                     postdec2 003FDD                                       postinc0 003FEE  
                                     postinc2 003FDE                                    main@F16340 016F  
                                  main@F16342 015B                   ??_UART2_DefaultErrorHandler 0001  
                                     strlen@s 0001                                       strspn@i 000A  
                                ??_ReadNUART2 0005                               wait_for_ENTER@i 0001  
                                  main@string 005A                        ?_OSCILLATOR_Initialize 0001  
                              __end_of_printf 1340                                __end_of_strchr 1918  
                              __end_of_strcpy 1A0A                                __end_of_strlen 1A80  
                              __end_of_strtok 142E                                __end_of_strspn 184C  
              ??_UART2_SetFramingErrorHandler 0003                           start_initialization 1A0A  
                          __end_of_ReadNUART2 14EE                           __size_of_clearPuTTY 007E  
             __size_of_PIN_MANAGER_Initialize 0094                     _UART2_DefaultErrorHandler 1B8A  
                                 putch@txData 0002                              ??_PMD_Initialize 0001  
                                 __pdataBANK1 016F                                _wait_for_ENTER 1976  
                           UART2_Write@txData 0001                                      ??_printf 000D  
                                    ??_strchr 0005                                      ??_strcpy 0005  
                                    ??_strlen 0003                                      ??_strtok 0010  
                                    ??_strspn 0009                              ??_Reverse_String 0009  
                   _UART2_FramingErrorHandler 00FE                                 __pcstackBANK0 0060  
                               __pcstackBANK1 0100                       ??_UART2_SetErrorHandler 0003  
                                   __pnvBANK0 00FE                                     __pnvBANK1 0175  
                      _PIN_MANAGER_Initialize 1646                        __end_of_wait_for_ENTER 19C6  
                               ??_UART2_Write 0001                                   __smallconst 1000  
                                    ?_islower 0001                             ?_UART2_Initialize 0001  
                                    ?_strcspn 0005                                      ?_toupper 0001  
                          ??_UART2_Initialize 0003                                __size_of_putch 000A  
                            _uart2RxLastError 00FD                                   _U2ERRIRbits 003DE1  
       UART2_SetErrorHandler@interruptHandler 0001                                  ??_clearPuTTY 0013  
                                    _PIR6bits 0039A6                               ?_wait_for_ENTER 0001  
                                   main@token 00F9                              main@reversefirst 0060  
                          _UART2_ErrorHandler 0175                           __end_of_UART2_Write 1B18  
                          __end_of_clearPuTTY 17DE                                Caps@string_out 0007  
                                   copy_data0 1A1E                                      __Hrparam 0000  
                                    __Lrparam 0000                       ??_OSCILLATOR_Initialize 0001  
                          ReadNUART2@length_N 0003                      Reverse_String@string_out 0007  
                             main@inputstring 0027                              __size_of_islower 0032  
                                    __ptext10 1AFE                                      __ptext11 1B46  
                                    __ptext20 142E                                      __ptext12 1918  
                                    __ptext21 1B30                                      __ptext13 1B62  
                                    __ptext30 0000                                      __ptext22 15A4  
                                    __ptext14 1B6C                                      __ptext23 1B86  
                                    __ptext15 1B76                                      __ptext24 1B88  
                                    __ptext16 1ADA                                      __ptext25 1B8A  
                                    __ptext17 1646                                      __ptext26 14EE  
                                    __ptext18 1B18                                      __ptext27 1AB2  
                                    __ptext19 16DA                                      __ptext28 1A46  
                                    __ptext29 1A80                                    _U2CON0bits 003DDA  
                            __size_of_strcspn 006E                              __size_of_toupper 0028  
                                  strcpy@from 0003                                 __size_of_Caps 00B6  
                                  Caps@length 000A                                 __size_of_main 0180  
         fp__UART2_DefaultFramingErrorHandler 0000      __end_of_UART2_DefaultFramingErrorHandler 1B8A  
   __size_of_UART2_DefaultFramingErrorHandler 0002            ??_UART2_DefaultFramingErrorHandler 0001  
           ?_UART2_DefaultFramingErrorHandler 0001              _UART2_DefaultFramingErrorHandler 1B88  
UART2_SetOverrunErrorHandler@interruptHandler 0001                                   _islower$932 0002  
                             main@reverselast 0093                                   _UART2_Write 1AFE  
                               Caps@string_in 0005          __end_of_UART2_SetOverrunErrorHandler 1B6C  
       __size_of_UART2_SetOverrunErrorHandler 000A                  _UART2_SetOverrunErrorHandler 1B62  
                                   strchr@chr 0003                                      islower@c 0003  
                                   strchr@ptr 0001                       ?_PIN_MANAGER_Initialize 0001  
                                   strcspn@s1 0005                                     strcspn@s2 0007  
              __size_of_UART2_SetErrorHandler 000A                 __end_of_UART2_SetErrorHandler 1B80  
                                    printf@ap 000E                                      printf@cp 0010  
                                  _UART2_Read 15A4  UART2_SetFramingErrorHandler@interruptHandler 0001  
                           _UART2_is_rx_ready 1B30                              ReadNUART2@letter 0007  
                          ?_UART2_is_rx_ready 0001                                      strcpy@cp 0005  
                                    strlen@cp 0003                                      strcpy@to 0001  
                                    strcspn@i 000A                                      toupper@c 0001  
                                    strtok@s1 000C                                      strtok@s2 000E  
                                    strspn@s1 0005                                      strspn@s2 0007  
                                    strtok@sp 00FB                           ??_UART2_is_rx_ready 0001  
              __end_of_PIN_MANAGER_Initialize 16DA                 ?_UART2_SetOverrunErrorHandler 0001  
                fp__UART2_DefaultErrorHandler 0000                              ??_wait_for_ENTER 0001  
                   __size_of_UART2_Initialize 005E  
