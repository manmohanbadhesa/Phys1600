

Microchip MPLAB XC8 Assembler V2.30 build 20200825195618 
                                                                                               Sat Oct 17 20:29:39 2020

Microchip MPLAB XC8 C Compiler v2.30 (Free license) build 20200825195618 Og1 
     1                           	processor	18F46K42
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=2
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1
    31                           	psect	text20,global,reloc=2,class=CODE,delta=1
    32                           	psect	text21,global,reloc=2,class=CODE,delta=1
    33                           	psect	text22,global,reloc=2,class=CODE,delta=1
    34                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    35                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    36                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    37                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    38  0000                     
    39                           ; Version 2.20
    40                           ; Generated 05/05/2020 GMT
    41                           ; 
    42                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    43                           ; All rights reserved.
    44                           ; 
    45                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    46                           ; 
    47                           ; Redistribution and use in source and binary forms, with or without modification, are
    48                           ; permitted provided that the following conditions are met:
    49                           ; 
    50                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    51                           ;        conditions and the following disclaimer.
    52                           ; 
    53                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    54                           ;        of conditions and the following disclaimer in the documentation and/or other
    55                           ;        materials provided with the distribution.
    56                           ; 
    57                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    58                           ;        software without specific prior written permission.
    59                           ; 
    60                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    61                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    62                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    63                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    64                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    65                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    66                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    67                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    68                           ; 
    69                           ; 
    70                           ; Code-generator required, PIC18F46K42 Definitions
    71                           ; 
    72                           ; SFR Addresses
    73  0000                     
    74 ;; Function _UART2_DefaultFramingErrorHandler is unused but had its address taken
    75  0000                     
    76 ;; Function _UART2_DefaultOverrunErrorHandler is unused but had its address taken
    77  0000                     
    78 ;; Function _UART2_DefaultErrorHandler is unused but had its address taken
    79  0000                     
    80                           	psect	nvBANK0
    81  000089                     __pnvBANK0:
    82                           	callstack 0
    83  000089                     _UART2_ErrorHandler:
    84                           	callstack 0
    85  000089                     	ds	2
    86  00008B                     _UART2_OverrunErrorHandler:
    87                           	callstack 0
    88  00008B                     	ds	2
    89  00008D                     _UART2_FramingErrorHandler:
    90                           	callstack 0
    91  00008D                     	ds	2
    92  0000                     _PIR6bits	set	14758
    93  0000                     _PMD7	set	14791
    94  0000                     _PMD6	set	14790
    95  0000                     _PMD5	set	14789
    96  0000                     _PMD4	set	14788
    97  0000                     _PMD3	set	14787
    98  0000                     _PMD2	set	14786
    99  0000                     _PMD1	set	14785
   100  0000                     _PMD0	set	14784
   101  0000                     _OSCTUNE	set	14814
   102  0000                     _OSCFRQ	set	14815
   103  0000                     _OSCEN	set	14813
   104  0000                     _OSCCON3	set	14811
   105  0000                     _OSCCON1	set	14809
   106  0000                     _RB6PPS	set	14862
   107  0000                     _U2RXPPS	set	15080
   108  0000                     _INLVLE	set	14980
   109  0000                     _INLVLD	set	14964
   110  0000                     _INLVLC	set	14948
   111  0000                     _INLVLB	set	14932
   112  0000                     _INLVLA	set	14916
   113  0000                     _SLRCONE	set	14979
   114  0000                     _SLRCOND	set	14963
   115  0000                     _SLRCONC	set	14947
   116  0000                     _SLRCONB	set	14931
   117  0000                     _SLRCONA	set	14915
   118  0000                     _ODCOND	set	14962
   119  0000                     _ODCONC	set	14946
   120  0000                     _ODCONB	set	14930
   121  0000                     _ODCONA	set	14914
   122  0000                     _ODCONE	set	14978
   123  0000                     _RD1I2C	set	14971
   124  0000                     _RD0I2C	set	14970
   125  0000                     _RC4I2C	set	14955
   126  0000                     _RC3I2C	set	14954
   127  0000                     _RB2I2C	set	14939
   128  0000                     _RB1I2C	set	14938
   129  0000                     _WPUC	set	14945
   130  0000                     _WPUA	set	14913
   131  0000                     _WPUB	set	14929
   132  0000                     _WPUE	set	14977
   133  0000                     _WPUD	set	14961
   134  0000                     _ANSELA	set	14912
   135  0000                     _ANSELE	set	14976
   136  0000                     _ANSELB	set	14928
   137  0000                     _ANSELC	set	14944
   138  0000                     _ANSELD	set	14960
   139  0000                     _U2TXB	set	15826
   140  0000                     _U2RXB	set	15824
   141  0000                     _U2ERRIRbits	set	15841
   142  0000                     _U2CON0bits	set	15834
   143  0000                     _U2ERRIE	set	15842
   144  0000                     _U2ERRIR	set	15841
   145  0000                     _U2UIR	set	15840
   146  0000                     _U2FIFO	set	15839
   147  0000                     _U2BRGH	set	15838
   148  0000                     _U2BRGL	set	15837
   149  0000                     _U2CON2	set	15836
   150  0000                     _U2CON1	set	15835
   151  0000                     _U2CON0	set	15834
   152  0000                     _U2P3L	set	15832
   153  0000                     _U2P2L	set	15830
   154  0000                     _U2P1L	set	15828
   155  0000                     _TRISD	set	16325
   156  0000                     _TRISC	set	16324
   157  0000                     _TRISB	set	16323
   158  0000                     _TRISA	set	16322
   159  0000                     _TRISE	set	16326
   160  0000                     _LATC	set	16316
   161  0000                     _LATB	set	16315
   162  0000                     _LATA	set	16314
   163  0000                     _LATD	set	16317
   164  0000                     _LATE	set	16318
   165                           
   166                           	psect	smallconst
   167  001000                     __psmallconst:
   168                           	callstack 0
   169  001000  00                 	db	0
   170  001001                     STR_1:
   171                           
   172                           ; BSR set to: 57
   173  001001  0A                 	db	10
   174  001002  0D                 	db	13
   175  001003  0A                 	db	10
   176  001004  0D                 	db	13
   177  001005  20                 	db	32
   178  001006  54                 	db	84	;'T'
   179  001007  68                 	db	104	;'h'
   180  001008  65                 	db	101	;'e'
   181  001009  20                 	db	32
   182  00100A  6E                 	db	110	;'n'
   183  00100B  75                 	db	117	;'u'
   184  00100C  6D                 	db	109	;'m'
   185  00100D  62                 	db	98	;'b'
   186  00100E  65                 	db	101	;'e'
   187  00100F  72                 	db	114	;'r'
   188  001010  73                 	db	115	;'s'
   189  001011  20                 	db	32
   190  001012  64                 	db	100	;'d'
   191  001013  69                 	db	105	;'i'
   192  001014  76                 	db	118	;'v'
   193  001015  69                 	db	105	;'i'
   194  001016  73                 	db	115	;'s'
   195  001017  69                 	db	105	;'i'
   196  001018  62                 	db	98	;'b'
   197  001019  6C                 	db	108	;'l'
   198  00101A  65                 	db	101	;'e'
   199  00101B  20                 	db	32
   200  00101C  62                 	db	98	;'b'
   201  00101D  79                 	db	121	;'y'
   202  00101E  20                 	db	32
   203  00101F  33                 	db	51	;'3'
   204  001020  20                 	db	32
   205  001021  61                 	db	97	;'a'
   206  001022  6E                 	db	110	;'n'
   207  001023  64                 	db	100	;'d'
   208  001024  20                 	db	32
   209  001025  37                 	db	55	;'7'
   210  001026  20                 	db	32
   211  001027  61                 	db	97	;'a'
   212  001028  72                 	db	114	;'r'
   213  001029  65                 	db	101	;'e'
   214  00102A  3A                 	db	58	;':'
   215  00102B  20                 	db	32
   216  00102C  0A                 	db	10
   217  00102D  0D                 	db	13
   218  00102E  00                 	db	0
   219  00102F                     STR_2:
   220                           
   221                           ; BSR set to: 57
   222  00102F  25                 	db	37
   223  001030  64                 	db	100	;'d'
   224  001031  20                 	db	32
   225  001032  0A                 	db	10
   226  001033  0D                 	db	13
   227  001034  00                 	db	0
   228  001035  00                 	db	0	; dummy byte at the end
   229  0000                     
   230                           ; #config settings
   231                           
   232                           	psect	cinit
   233  001D52                     __pcinit:
   234                           	callstack 0
   235  001D52                     start_initialization:
   236                           	callstack 0
   237  001D52                     __initialization:
   238                           	callstack 0
   239                           
   240                           ; Clear objects allocated to BANK0 (41 bytes)
   241  001D52  EE00  F060         	lfsr	0,__pbssBANK0
   242  001D56  0E29               	movlw	41
   243  001D58                     clear_0:
   244  001D58  6AEE               	clrf	postinc0,c
   245  001D5A  06E8               	decf	wreg,f,c
   246  001D5C  E1FD               	bnz	clear_0
   247  001D5E                     end_of_initialization:
   248                           	callstack 0
   249  001D5E                     __end_of__initialization:
   250                           	callstack 0
   251  001D5E  0100               	movlb	0
   252  001D60  EFC3  F00C         	goto	_main	;jump to C main() function
   253                           
   254                           	psect	bssBANK0
   255  000060                     __pbssBANK0:
   256                           	callstack 0
   257  000060                     _nout:
   258                           	callstack 0
   259  000060                     	ds	2
   260  000062                     _width:
   261                           	callstack 0
   262  000062                     	ds	2
   263  000064                     _prec:
   264                           	callstack 0
   265  000064                     	ds	2
   266  000066                     _flags:
   267                           	callstack 0
   268  000066                     	ds	2
   269  000068                     _uart2RxLastError:
   270                           	callstack 0
   271  000068                     	ds	1
   272  000069                     _dbuf:
   273                           	callstack 0
   274  000069                     	ds	32
   275                           
   276                           	psect	cstackBANK0
   277  00008F                     __pcstackBANK0:
   278                           	callstack 0
   279  00008F                     	ds	2
   280  000091                     printf@ap:
   281                           	callstack 0
   282                           
   283                           ; 2 bytes @ 0x2
   284  000091                     	ds	2
   285                           
   286                           	psect	cstackCOMRAM
   287  000001                     __pcstackCOMRAM:
   288                           	callstack 0
   289  000001                     ?_strlen:
   290                           	callstack 0
   291  000001                     ?___awmod:
   292                           	callstack 0
   293  000001                     ?___aodiv:
   294                           	callstack 0
   295  000001                     ?___aomod:
   296                           	callstack 0
   297  000001                     UART2_Write@txData:
   298                           	callstack 0
   299  000001                     UART2_SetFramingErrorHandler@interruptHandler:
   300                           	callstack 0
   301  000001                     UART2_SetOverrunErrorHandler@interruptHandler:
   302                           	callstack 0
   303  000001                     UART2_SetErrorHandler@interruptHandler:
   304                           	callstack 0
   305  000001                     ___awmod@dividend:
   306                           	callstack 0
   307  000001                     strlen@s:
   308                           	callstack 0
   309  000001                     ___aodiv@dividend:
   310                           	callstack 0
   311  000001                     ___aomod@dividend:
   312                           	callstack 0
   313                           
   314                           ; 8 bytes @ 0x0
   315  000001                     	ds	1
   316  000002                     putch@txData:
   317                           	callstack 0
   318                           
   319                           ; 1 bytes @ 0x1
   320  000002                     	ds	1
   321  000003                     ___awmod@divisor:
   322                           	callstack 0
   323  000003                     fputc@c:
   324                           	callstack 0
   325  000003                     strlen@a:
   326                           	callstack 0
   327                           
   328                           ; 2 bytes @ 0x2
   329  000003                     	ds	2
   330  000005                     ___awmod@counter:
   331                           	callstack 0
   332  000005                     fputc@fp:
   333                           	callstack 0
   334                           
   335                           ; 2 bytes @ 0x4
   336  000005                     	ds	1
   337  000006                     ___awmod@sign:
   338                           	callstack 0
   339                           
   340                           ; 1 bytes @ 0x5
   341  000006                     	ds	1
   342  000007                     ??_fputc:
   343                           
   344                           ; 1 bytes @ 0x6
   345  000007                     	ds	2
   346  000009                     ___aodiv@divisor:
   347                           	callstack 0
   348  000009                     ___aomod@divisor:
   349                           	callstack 0
   350                           
   351                           ; 8 bytes @ 0x8
   352  000009                     	ds	3
   353  00000C                     fputs@s:
   354                           	callstack 0
   355                           
   356                           ; 2 bytes @ 0xB
   357  00000C                     	ds	2
   358  00000E                     fputs@fp:
   359                           	callstack 0
   360                           
   361                           ; 2 bytes @ 0xD
   362  00000E                     	ds	2
   363  000010                     fputs@c:
   364                           	callstack 0
   365                           
   366                           ; 1 bytes @ 0xF
   367  000010                     	ds	1
   368  000011                     ___aodiv@counter:
   369                           	callstack 0
   370  000011                     ___aomod@counter:
   371                           	callstack 0
   372  000011                     fputs@i:
   373                           	callstack 0
   374                           
   375                           ; 2 bytes @ 0x10
   376  000011                     	ds	1
   377  000012                     ___aodiv@sign:
   378                           	callstack 0
   379  000012                     ___aomod@sign:
   380                           	callstack 0
   381                           
   382                           ; 1 bytes @ 0x11
   383  000012                     	ds	1
   384  000013                     ?_abs:
   385                           	callstack 0
   386  000013                     ?_pad:
   387                           	callstack 0
   388  000013                     pad@fp:
   389                           	callstack 0
   390  000013                     abs@a:
   391                           	callstack 0
   392  000013                     ___aodiv@quotient:
   393                           	callstack 0
   394                           
   395                           ; 8 bytes @ 0x12
   396  000013                     	ds	2
   397  000015                     ??_abs:
   398  000015                     pad@buf:
   399                           	callstack 0
   400                           
   401                           ; 2 bytes @ 0x14
   402  000015                     	ds	2
   403  000017                     pad@p:
   404                           	callstack 0
   405                           
   406                           ; 2 bytes @ 0x16
   407  000017                     	ds	2
   408  000019                     ??_pad:
   409                           
   410                           ; 1 bytes @ 0x18
   411  000019                     	ds	1
   412  00001A                     pad@i:
   413                           	callstack 0
   414                           
   415                           ; 2 bytes @ 0x19
   416  00001A                     	ds	2
   417  00001C                     pad@w:
   418                           	callstack 0
   419                           
   420                           ; 2 bytes @ 0x1B
   421  00001C                     	ds	2
   422  00001E                     ?_dtoa:
   423                           	callstack 0
   424  00001E                     dtoa@fp:
   425                           	callstack 0
   426                           
   427                           ; 2 bytes @ 0x1D
   428  00001E                     	ds	2
   429  000020                     dtoa@d:
   430                           	callstack 0
   431                           
   432                           ; 8 bytes @ 0x1F
   433  000020                     	ds	8
   434  000028                     ??_dtoa:
   435                           
   436                           ; 1 bytes @ 0x27
   437  000028                     	ds	8
   438  000030                     _dtoa$850:
   439                           	callstack 0
   440                           
   441                           ; 2 bytes @ 0x2F
   442  000030                     	ds	2
   443  000032                     dtoa@p:
   444                           	callstack 0
   445                           
   446                           ; 2 bytes @ 0x31
   447  000032                     	ds	2
   448  000034                     dtoa@w:
   449                           	callstack 0
   450                           
   451                           ; 2 bytes @ 0x33
   452  000034                     	ds	2
   453  000036                     dtoa@s:
   454                           	callstack 0
   455                           
   456                           ; 2 bytes @ 0x35
   457  000036                     	ds	2
   458  000038                     dtoa@n:
   459                           	callstack 0
   460                           
   461                           ; 8 bytes @ 0x37
   462  000038                     	ds	8
   463  000040                     dtoa@i:
   464                           	callstack 0
   465                           
   466                           ; 2 bytes @ 0x3F
   467  000040                     	ds	2
   468  000042                     ?_vfpfcnvrt:
   469                           	callstack 0
   470  000042                     vfpfcnvrt@fp:
   471                           	callstack 0
   472                           
   473                           ; 2 bytes @ 0x41
   474  000042                     	ds	2
   475  000044                     vfpfcnvrt@fmt:
   476                           	callstack 0
   477                           
   478                           ; 2 bytes @ 0x43
   479  000044                     	ds	2
   480  000046                     vfpfcnvrt@ap:
   481                           	callstack 0
   482                           
   483                           ; 2 bytes @ 0x45
   484  000046                     	ds	2
   485  000048                     ??_vfpfcnvrt:
   486                           
   487                           ; 1 bytes @ 0x47
   488  000048                     	ds	2
   489  00004A                     vfpfcnvrt@ll:
   490                           	callstack 0
   491                           
   492                           ; 8 bytes @ 0x49
   493  00004A                     	ds	8
   494  000052                     ?_vfprintf:
   495                           	callstack 0
   496  000052                     vfprintf@fp:
   497                           	callstack 0
   498                           
   499                           ; 2 bytes @ 0x51
   500  000052                     	ds	2
   501  000054                     vfprintf@fmt:
   502                           	callstack 0
   503                           
   504                           ; 2 bytes @ 0x53
   505  000054                     	ds	2
   506  000056                     vfprintf@ap:
   507                           	callstack 0
   508                           
   509                           ; 2 bytes @ 0x55
   510  000056                     	ds	2
   511  000058                     vfprintf@cfmt:
   512                           	callstack 0
   513                           
   514                           ; 2 bytes @ 0x57
   515  000058                     	ds	2
   516  00005A                     ?_printf:
   517                           	callstack 0
   518  00005A                     printf@fmt:
   519                           	callstack 0
   520                           
   521                           ; 2 bytes @ 0x59
   522  00005A                     	ds	4
   523  00005E                     main@i:
   524                           	callstack 0
   525                           
   526                           ; 2 bytes @ 0x5D
   527  00005E                     	ds	2
   528                           
   529 ;;
   530 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   531 ;;
   532 ;; *************** function _main *****************
   533 ;; Defined at:
   534 ;;		line 12 in file "main.c"
   535 ;; Parameters:    Size  Location     Type
   536 ;;		None
   537 ;; Auto vars:     Size  Location     Type
   538 ;;  i               2   93[COMRAM] int 
   539 ;; Return value:  Size  Location     Type
   540 ;;                  1    wreg      void 
   541 ;; Registers used:
   542 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   543 ;; Tracked objects:
   544 ;;		On entry : 0/0
   545 ;;		On exit  : 0/0
   546 ;;		Unchanged: 0/0
   547 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   548 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   549 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   550 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   551 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   552 ;;Total ram usage:        2 bytes
   553 ;; Hardware stack levels required when called:    9
   554 ;; This function calls:
   555 ;;		_SYSTEM_Initialize
   556 ;;		___awmod
   557 ;;		_printf
   558 ;; This function is called by:
   559 ;;		Startup code after reset
   560 ;; This function uses a non-reentrant model
   561 ;;
   562                           
   563                           	psect	text0
   564  001986                     __ptext0:
   565                           	callstack 0
   566  001986                     _main:
   567                           	callstack 22
   568  001986                     
   569                           ;main.c: 15:     SYSTEM_Initialize();
   570  001986  ECB2  F00E         	call	_SYSTEM_Initialize	;wreg free
   571  00198A                     
   572                           ;main.c: 2: ;main.c: 2:     int i;;main.c: 3: ;main.c: 3:     printf("\n\r\n\r The numbe
      +                          rs divisible by 3 and 7 are: \n\r");
   573  00198A  0E01               	movlw	low STR_1
   574  00198C  6E5A               	movwf	printf@fmt^0,c
   575  00198E  0E10               	movlw	high STR_1
   576  001990  6E5B               	movwf	(printf@fmt+1)^0,c
   577  001992  EC6A  F00E         	call	_printf	;wreg free
   578  001996                     
   579                           ;main.c: 4: ;main.c: 4:     for(i=1;i<=1000;i++)
   580  001996  0E00               	movlw	0
   581  001998  6E5F               	movwf	(main@i+1)^0,c
   582  00199A  0E01               	movlw	1
   583  00199C  6E5E               	movwf	main@i^0,c
   584  00199E                     l1822:
   585                           
   586                           ;main.c: 5: ;main.c: 5:     {;main.c: 6: ;main.c: 6:         if(i%3==0 | i%7==0)
   587  00199E  C05E  F001         	movff	main@i,___awmod@dividend
   588  0019A2  C05F  F002         	movff	main@i+1,___awmod@dividend+1
   589  0019A6  0E00               	movlw	0
   590  0019A8  6E04               	movwf	(___awmod@divisor+1)^0,c
   591  0019AA  0E03               	movlw	3
   592  0019AC  6E03               	movwf	___awmod@divisor^0,c
   593  0019AE  EC6B  F00C         	call	___awmod	;wreg free
   594  0019B2  5001               	movf	?___awmod^0,w,c
   595  0019B4  1002               	iorwf	(?___awmod+1)^0,w,c
   596  0019B6  B4D8               	btfsc	status,2,c
   597  0019B8  EFE0  F00C         	goto	u1221
   598  0019BC  EFE2  F00C         	goto	u1220
   599  0019C0                     u1221:
   600  0019C0  EFF5  F00C         	goto	l1826
   601  0019C4                     u1220:
   602  0019C4  C05E  F001         	movff	main@i,___awmod@dividend
   603  0019C8  C05F  F002         	movff	main@i+1,___awmod@dividend+1
   604  0019CC  0E00               	movlw	0
   605  0019CE  6E04               	movwf	(___awmod@divisor+1)^0,c
   606  0019D0  0E07               	movlw	7
   607  0019D2  6E03               	movwf	___awmod@divisor^0,c
   608  0019D4  EC6B  F00C         	call	___awmod	;wreg free
   609  0019D8  5001               	movf	?___awmod^0,w,c
   610  0019DA  1002               	iorwf	(?___awmod+1)^0,w,c
   611  0019DC  A4D8               	btfss	status,2,c
   612  0019DE  EFF3  F00C         	goto	u1231
   613  0019E2  EFF5  F00C         	goto	u1230
   614  0019E6                     u1231:
   615  0019E6  EFFF  F00C         	goto	l1828
   616  0019EA                     u1230:
   617  0019EA                     l1826:
   618                           
   619                           ;main.c: 7: ;main.c: 7:         {;main.c: 8: ;main.c: 8:             printf("%d \n\r",i)
      +                          ;
   620  0019EA  0E2F               	movlw	low STR_2
   621  0019EC  6E5A               	movwf	printf@fmt^0,c
   622  0019EE  0E10               	movlw	high STR_2
   623  0019F0  6E5B               	movwf	(printf@fmt+1)^0,c
   624  0019F2  C05E  F05C         	movff	main@i,?_printf+2
   625  0019F6  C05F  F05D         	movff	main@i+1,?_printf+3
   626  0019FA  EC6A  F00E         	call	_printf	;wreg free
   627  0019FE                     l1828:
   628                           
   629                           ;main.c: 10: ;main.c: 10:     }
   630  0019FE  4A5E               	infsnz	main@i^0,f,c
   631  001A00  2A5F               	incf	(main@i+1)^0,f,c
   632  001A02  BE5F               	btfsc	(main@i+1)^0,7,c
   633  001A04  EF0D  F00D         	goto	u1241
   634  001A08  0EE9               	movlw	233
   635  001A0A  5C5E               	subwf	main@i^0,w,c
   636  001A0C  0E03               	movlw	3
   637  001A0E  585F               	subwfb	(main@i+1)^0,w,c
   638  001A10  A0D8               	btfss	status,0,c
   639  001A12  EF0D  F00D         	goto	u1241
   640  001A16  EF0F  F00D         	goto	u1240
   641  001A1A                     u1241:
   642  001A1A  EFCF  F00C         	goto	l1822
   643  001A1E                     u1240:
   644  001A1E                     l259:
   645  001A1E  EF0F  F00D         	goto	l259
   646  001A22  EFFE  F07F         	goto	start
   647  001A26                     __end_of_main:
   648                           	callstack 0
   649                           
   650 ;; *************** function _printf *****************
   651 ;; Defined at:
   652 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\printf.c"
   653 ;; Parameters:    Size  Location     Type
   654 ;;  fmt             2   89[COMRAM] PTR const unsigned char 
   655 ;;		 -> STR_2(6), STR_1(46), 
   656 ;; Auto vars:     Size  Location     Type
   657 ;;  ap              2    2[BANK0 ] PTR void [1]
   658 ;;		 -> ?_printf(2), 
   659 ;;  ret             2    0        int 
   660 ;; Return value:  Size  Location     Type
   661 ;;                  2   89[COMRAM] int 
   662 ;; Registers used:
   663 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   664 ;; Tracked objects:
   665 ;;		On entry : 0/0
   666 ;;		On exit  : 0/0
   667 ;;		Unchanged: 0/0
   668 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   669 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   670 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   671 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   672 ;;      Totals:         4       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   673 ;;Total ram usage:        8 bytes
   674 ;; Hardware stack levels used:    1
   675 ;; Hardware stack levels required when called:    8
   676 ;; This function calls:
   677 ;;		_vfprintf
   678 ;; This function is called by:
   679 ;;		_main
   680 ;; This function uses a non-reentrant model
   681 ;;
   682                           
   683                           	psect	text1
   684  001CD4                     __ptext1:
   685                           	callstack 0
   686  001CD4                     _printf:
   687                           	callstack 22
   688  001CD4  0E5C               	movlw	low (?_printf+2)
   689  001CD6  0100               	movlb	0	; () banked
   690  001CD8  6F91               	movwf	printf@ap& (0+255),b
   691  001CDA  0E00               	movlw	high (?_printf+2)
   692  001CDC  6F92               	movwf	(printf@ap+1)& (0+255),b
   693  001CDE                     
   694                           ; BSR set to: 0
   695  001CDE  0E00               	movlw	0
   696  001CE0  6E52               	movwf	vfprintf@fp^0,c
   697  001CE2  0E00               	movlw	0
   698  001CE4  6E53               	movwf	(vfprintf@fp+1)^0,c
   699  001CE6  C05A  F054         	movff	printf@fmt,vfprintf@fmt
   700  001CEA  C05B  F055         	movff	printf@fmt+1,vfprintf@fmt+1
   701  001CEE  0E91               	movlw	low printf@ap
   702  001CF0  6E56               	movwf	vfprintf@ap^0,c
   703  001CF2  0E00               	movlw	high printf@ap
   704  001CF4  6E57               	movwf	(vfprintf@ap+1)^0,c
   705  001CF6  ECA8  F00D         	call	_vfprintf	;wreg free
   706  001CFA  0012               	return		;funcret
   707  001CFC                     __end_of_printf:
   708                           	callstack 0
   709                           
   710 ;; *************** function _vfprintf *****************
   711 ;; Defined at:
   712 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c"
   713 ;; Parameters:    Size  Location     Type
   714 ;;  fp              2   81[COMRAM] PTR struct _IO_FILE
   715 ;;		 -> NULL(0), 
   716 ;;  fmt             2   83[COMRAM] PTR const unsigned char 
   717 ;;		 -> STR_2(6), STR_1(46), 
   718 ;;  ap              2   85[COMRAM] PTR PTR void 
   719 ;;		 -> printf@ap(2), 
   720 ;; Auto vars:     Size  Location     Type
   721 ;;  cfmt            2   87[COMRAM] PTR unsigned char 
   722 ;;		 -> STR_2(6), STR_1(46), 
   723 ;; Return value:  Size  Location     Type
   724 ;;                  2   81[COMRAM] int 
   725 ;; Registers used:
   726 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   727 ;; Tracked objects:
   728 ;;		On entry : 0/0
   729 ;;		On exit  : 0/0
   730 ;;		Unchanged: 0/0
   731 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   732 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   733 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   734 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   735 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   736 ;;Total ram usage:        8 bytes
   737 ;; Hardware stack levels used:    1
   738 ;; Hardware stack levels required when called:    7
   739 ;; This function calls:
   740 ;;		_vfpfcnvrt
   741 ;; This function is called by:
   742 ;;		_printf
   743 ;; This function uses a non-reentrant model
   744 ;;
   745                           
   746                           	psect	text2
   747  001B50                     __ptext2:
   748                           	callstack 0
   749  001B50                     _vfprintf:
   750                           	callstack 22
   751  001B50                     
   752                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.30\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
   753  001B50  C054  F058         	movff	vfprintf@fmt,vfprintf@cfmt
   754  001B54  C055  F059         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
   755  001B58                     
   756                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
   757  001B58  0E00               	movlw	0
   758  001B5A  0100               	movlb	0	; () banked
   759  001B5C  6F61               	movwf	(_nout+1)& (0+255),b
   760  001B5E  0E00               	movlw	0
   761  001B60  6F60               	movwf	_nout& (0+255),b
   762                           
   763                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
   764  001B62  EFC6  F00D         	goto	l1736
   765  001B66                     l1734:
   766                           
   767                           ; BSR set to: 0
   768                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
   769  001B66  C052  F042         	movff	vfprintf@fp,vfpfcnvrt@fp
   770  001B6A  C053  F043         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
   771  001B6E  0E58               	movlw	low vfprintf@cfmt
   772  001B70  6E44               	movwf	vfpfcnvrt@fmt^0,c
   773  001B72  0E00               	movlw	high vfprintf@cfmt
   774  001B74  6E45               	movwf	(vfpfcnvrt@fmt+1)^0,c
   775  001B76  C056  F046         	movff	vfprintf@ap,vfpfcnvrt@ap
   776  001B7A  C057  F047         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
   777  001B7E  EC8D  F009         	call	_vfpfcnvrt	;wreg free
   778  001B82  5042               	movf	?_vfpfcnvrt^0,w,c
   779  001B84  0100               	movlb	0	; () banked
   780  001B86  2760               	addwf	_nout& (0+255),f,b
   781  001B88  5043               	movf	(?_vfpfcnvrt+1)^0,w,c
   782  001B8A  2361               	addwfc	(_nout+1)& (0+255),f,b
   783  001B8C                     l1736:
   784                           
   785                           ; BSR set to: 0
   786                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
   787  001B8C  0060  F163  FFF6   	movff	vfprintf@cfmt,tblptrl
   788  001B92  0060  F167  FFF7   	movff	vfprintf@cfmt+1,tblptrh
   789  001B98                     	if	1	;Program memory is < 0x10000, tblptru is always zero
   790  001B98  6AF8               	clrf	tblptru,c
   791  001B9A                     	endif
   792  001B9A                     	if	0	;tblptru may be non-zero
   793  001B9A                     	endif
   794  001B9A  0008               	tblrd		*
   795  001B9C  50F5               	movf	tablat,w,c
   796  001B9E  0900               	iorlw	0
   797  001BA0  A4D8               	btfss	status,2,c
   798  001BA2  EFD5  F00D         	goto	u1081
   799  001BA6  EFD7  F00D         	goto	u1080
   800  001BAA                     u1081:
   801  001BAA  EFB3  F00D         	goto	l1734
   802  001BAE                     u1080:
   803  001BAE                     
   804                           ; BSR set to: 0
   805                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
   806  001BAE  C060  F052         	movff	_nout,?_vfprintf
   807  001BB2  C061  F053         	movff	_nout+1,?_vfprintf+1
   808  001BB6                     
   809                           ; BSR set to: 0
   810  001BB6  0012               	return		;funcret
   811  001BB8                     __end_of_vfprintf:
   812                           	callstack 0
   813                           
   814 ;; *************** function _vfpfcnvrt *****************
   815 ;; Defined at:
   816 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c"
   817 ;; Parameters:    Size  Location     Type
   818 ;;  fp              2   65[COMRAM] PTR struct _IO_FILE
   819 ;;		 -> NULL(0), 
   820 ;;  fmt             2   67[COMRAM] PTR PTR unsigned char 
   821 ;;		 -> vfprintf@cfmt(2), 
   822 ;;  ap              2   69[COMRAM] PTR PTR void 
   823 ;;		 -> printf@ap(2), 
   824 ;; Auto vars:     Size  Location     Type
   825 ;;  ll              8   73[COMRAM] long long 
   826 ;;  llu             8    0        unsigned long long 
   827 ;;  f               4    0        unsigned long long 
   828 ;;  vp              3    0        PTR void 
   829 ;;  ct              3    0        unsigned char [3]
   830 ;;  cp              3    0        PTR unsigned char 
   831 ;;  i               2    0        int 
   832 ;;  done            2    0        int 
   833 ;;  c               1    0        unsigned char 
   834 ;; Return value:  Size  Location     Type
   835 ;;                  2   65[COMRAM] int 
   836 ;; Registers used:
   837 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   838 ;; Tracked objects:
   839 ;;		On entry : 0/0
   840 ;;		On exit  : 0/0
   841 ;;		Unchanged: 0/0
   842 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   843 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   844 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   845 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   846 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   847 ;;Total ram usage:       16 bytes
   848 ;; Hardware stack levels used:    1
   849 ;; Hardware stack levels required when called:    6
   850 ;; This function calls:
   851 ;;		_dtoa
   852 ;;		_fputc
   853 ;; This function is called by:
   854 ;;		_vfprintf
   855 ;; This function uses a non-reentrant model
   856 ;;
   857                           
   858                           	psect	text3
   859  00131A                     __ptext3:
   860                           	callstack 0
   861  00131A                     _vfpfcnvrt:
   862                           	callstack 22
   863  00131A                     
   864                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.30\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.30\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.30\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          0\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
   865  00131A  0060  F113  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
   866  001320  0060  F117  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
   867  001326  006F FF7B FFF6     	movff	postinc2,tblptrl
   868  00132C  006F FF77 FFF7     	movff	postdec2,tblptrh
   869  001332                     	if	1	;Program memory is < 0x10000, tblptru is always zero
   870  001332  6AF8               	clrf	tblptru,c
   871  001334                     	endif
   872  001334                     	if	0	;tblptru may be non-zero
   873  001334                     	endif
   874  001334  0008               	tblrd		*
   875  001336  50F5               	movf	tablat,w,c
   876  001338  0A25               	xorlw	37
   877  00133A  A4D8               	btfss	status,2,c
   878  00133C  EFA2  F009         	goto	u1041
   879  001340  EFA4  F009         	goto	u1040
   880  001344                     u1041:
   881  001344  EF6F  F00A         	goto	l1712
   882  001348                     u1040:
   883  001348                     
   884                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
   885  001348  0060  F113  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
   886  00134E  0060  F117  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
   887  001354  2ADE               	incf	postinc2,f,c
   888  001356  0E00               	movlw	0
   889  001358  22DD               	addwfc	postdec2,f,c
   890  00135A                     
   891                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
   892  00135A  0E00               	movlw	0
   893  00135C  0100               	movlb	0	; () banked
   894  00135E  6F63               	movwf	(_width+1)& (0+255),b
   895  001360  0E00               	movlw	0
   896  001362  6F62               	movwf	_width& (0+255),b
   897  001364  C062  F066         	movff	_width,_flags
   898  001368  C063  F067         	movff	_width+1,_flags+1
   899  00136C                     
   900                           ; BSR set to: 0
   901                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
   902  00136C  6964               	setf	_prec& (0+255),b
   903  00136E  6965               	setf	(_prec+1)& (0+255),b
   904  001370                     
   905                           ; BSR set to: 0
   906                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 847:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
   907  001370  0060  F113  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
   908  001376  0060  F117  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
   909  00137C  006F FF7B FFF6     	movff	postinc2,tblptrl
   910  001382  006F FF77 FFF7     	movff	postdec2,tblptrh
   911  001388                     	if	1	;Program memory is < 0x10000, tblptru is always zero
   912  001388  6AF8               	clrf	tblptru,c
   913  00138A                     	endif
   914  00138A                     	if	0	;tblptru may be non-zero
   915  00138A                     	endif
   916  00138A  0008               	tblrd		*
   917  00138C  50F5               	movf	tablat,w,c
   918  00138E  0A64               	xorlw	100
   919  001390  B4D8               	btfsc	status,2,c
   920  001392  EFCD  F009         	goto	u1051
   921  001396  EFCF  F009         	goto	u1050
   922  00139A                     u1051:
   923  00139A  EFE6  F009         	goto	l1690
   924  00139E                     u1050:
   925  00139E                     
   926                           ; BSR set to: 0
   927  00139E  0060  F113  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
   928  0013A4  0060  F117  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
   929  0013AA  006F FF7B FFF6     	movff	postinc2,tblptrl
   930  0013B0  006F FF77 FFF7     	movff	postdec2,tblptrh
   931  0013B6                     	if	1	;Program memory is < 0x10000, tblptru is always zero
   932  0013B6  6AF8               	clrf	tblptru,c
   933  0013B8                     	endif
   934  0013B8                     	if	0	;tblptru may be non-zero
   935  0013B8                     	endif
   936  0013B8  0008               	tblrd		*
   937  0013BA  50F5               	movf	tablat,w,c
   938  0013BC  0A69               	xorlw	105
   939  0013BE  A4D8               	btfss	status,2,c
   940  0013C0  EFE4  F009         	goto	u1061
   941  0013C4  EFE6  F009         	goto	u1060
   942  0013C8                     u1061:
   943  0013C8  EF30  F00A         	goto	l1696
   944  0013CC                     u1060:
   945  0013CC                     l1690:
   946                           
   947                           ; BSR set to: 0
   948                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 849:             
      +                          ++*fmt;
   949  0013CC  0060  F113  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
   950  0013D2  0060  F117  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
   951  0013D8  2ADE               	incf	postinc2,f,c
   952  0013DA  0E00               	movlw	0
   953  0013DC  22DD               	addwfc	postdec2,f,c
   954                           
   955                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 850:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
   956  0013DE  0060  F11B  FFD9   	movff	vfpfcnvrt@ap,fsr2l
   957  0013E4  0060  F11F  FFDA   	movff	vfpfcnvrt@ap+1,fsr2h
   958  0013EA  006F FF7C  F048    	movff	indf2,??_vfpfcnvrt
   959  0013F0  0E02               	movlw	2
   960  0013F2  26DE               	addwf	postinc2,f,c
   961  0013F4  006F FF7C  F049    	movff	indf2,??_vfpfcnvrt+1
   962  0013FA  0E00               	movlw	0
   963  0013FC  22DD               	addwfc	postdec2,f,c
   964  0013FE  0060  F123  FFD9   	movff	??_vfpfcnvrt,fsr2l
   965  001404  0060  F127  FFDA   	movff	??_vfpfcnvrt+1,fsr2h
   966  00140A  006F FF78  F04A    	movff	postinc2,vfpfcnvrt@ll
   967  001410  006F FF74  F04B    	movff	postdec2,vfpfcnvrt@ll+1
   968  001416  0E00               	movlw	0
   969  001418  BE4B               	btfsc	(vfpfcnvrt@ll+1)^0,7,c
   970  00141A  0EFF               	movlw	-1
   971  00141C  6E4C               	movwf	(vfpfcnvrt@ll+2)^0,c
   972  00141E  6E4D               	movwf	(vfpfcnvrt@ll+3)^0,c
   973  001420  6E4E               	movwf	(vfpfcnvrt@ll+4)^0,c
   974  001422  6E4F               	movwf	(vfpfcnvrt@ll+5)^0,c
   975  001424  6E50               	movwf	(vfpfcnvrt@ll+6)^0,c
   976  001426  6E51               	movwf	(vfpfcnvrt@ll+7)^0,c
   977  001428                     
   978                           ; BSR set to: 0
   979                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 852:             
      +                          return dtoa(fp, ll);
   980  001428  C042  F01E         	movff	vfpfcnvrt@fp,dtoa@fp
   981  00142C  C043  F01F         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
   982  001430  C04A  F020         	movff	vfpfcnvrt@ll,dtoa@d
   983  001434  C04B  F021         	movff	vfpfcnvrt@ll+1,dtoa@d+1
   984  001438  C04C  F022         	movff	vfpfcnvrt@ll+2,dtoa@d+2
   985  00143C  C04D  F023         	movff	vfpfcnvrt@ll+3,dtoa@d+3
   986  001440  C04E  F024         	movff	vfpfcnvrt@ll+4,dtoa@d+4
   987  001444  C04F  F025         	movff	vfpfcnvrt@ll+5,dtoa@d+5
   988  001448  C050  F026         	movff	vfpfcnvrt@ll+6,dtoa@d+6
   989  00144C  C051  F027         	movff	vfpfcnvrt@ll+7,dtoa@d+7
   990  001450  EC1B  F008         	call	_dtoa	;wreg free
   991  001454  C01E  F042         	movff	?_dtoa,?_vfpfcnvrt
   992  001458  C01F  F043         	movff	?_dtoa+1,?_vfpfcnvrt+1
   993  00145C  EF91  F00A         	goto	l1008
   994  001460                     l1696:
   995                           
   996                           ; BSR set to: 0
   997                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
   998  001460  0060  F113  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
   999  001466  0060  F117  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  1000  00146C  006F FF7B FFF6     	movff	postinc2,tblptrl
  1001  001472  006F FF77 FFF7     	movff	postdec2,tblptrh
  1002  001478                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1003  001478  6AF8               	clrf	tblptru,c
  1004  00147A                     	endif
  1005  00147A                     	if	0	;tblptru may be non-zero
  1006  00147A                     	endif
  1007  00147A  0008               	tblrd		*
  1008  00147C  50F5               	movf	tablat,w,c
  1009  00147E  0A25               	xorlw	37
  1010  001480  A4D8               	btfss	status,2,c
  1011  001482  EF45  F00A         	goto	u1071
  1012  001486  EF47  F00A         	goto	u1070
  1013  00148A                     u1071:
  1014  00148A  EF60  F00A         	goto	l1706
  1015  00148E                     u1070:
  1016  00148E                     
  1017                           ; BSR set to: 0
  1018                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  1019  00148E  0060  F113  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  1020  001494  0060  F117  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  1021  00149A  2ADE               	incf	postinc2,f,c
  1022  00149C  0E00               	movlw	0
  1023  00149E  22DD               	addwfc	postdec2,f,c
  1024  0014A0                     
  1025                           ; BSR set to: 0
  1026                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  1027  0014A0  0E00               	movlw	0
  1028  0014A2  6E04               	movwf	(fputc@c+1)^0,c
  1029  0014A4  0E25               	movlw	37
  1030  0014A6  6E03               	movwf	fputc@c^0,c
  1031  0014A8  C042  F005         	movff	vfpfcnvrt@fp,fputc@fp
  1032  0014AC  C043  F006         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1033  0014B0  EC13  F00D         	call	_fputc	;wreg free
  1034  0014B4                     l1702:
  1035                           
  1036                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  1037  0014B4  0E00               	movlw	0
  1038  0014B6  6E43               	movwf	(?_vfpfcnvrt+1)^0,c
  1039  0014B8  0E01               	movlw	1
  1040  0014BA  6E42               	movwf	?_vfpfcnvrt^0,c
  1041  0014BC  EF91  F00A         	goto	l1008
  1042  0014C0                     l1706:
  1043                           
  1044                           ; BSR set to: 0
  1045                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  1046  0014C0  0060  F113  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  1047  0014C6  0060  F117  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  1048  0014CC  2ADE               	incf	postinc2,f,c
  1049  0014CE  0E00               	movlw	0
  1050  0014D0  22DD               	addwfc	postdec2,f,c
  1051  0014D2                     
  1052                           ; BSR set to: 0
  1053                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  1054  0014D2  0E00               	movlw	0
  1055  0014D4  6E43               	movwf	(?_vfpfcnvrt+1)^0,c
  1056  0014D6  0E00               	movlw	0
  1057  0014D8  6E42               	movwf	?_vfpfcnvrt^0,c
  1058  0014DA  EF91  F00A         	goto	l1008
  1059  0014DE                     l1712:
  1060                           
  1061                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  1062  0014DE  0060  F113  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  1063  0014E4  0060  F117  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  1064  0014EA  006F FF7B FFF6     	movff	postinc2,tblptrl
  1065  0014F0  006F FF77 FFF7     	movff	postdec2,tblptrh
  1066  0014F6                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1067  0014F6  6AF8               	clrf	tblptru,c
  1068  0014F8                     	endif
  1069  0014F8                     	if	0	;tblptru may be non-zero
  1070  0014F8                     	endif
  1071  0014F8  0008               	tblrd		*
  1072  0014FA  50F5               	movf	tablat,w,c
  1073  0014FC  6E03               	movwf	fputc@c^0,c
  1074  0014FE  6A04               	clrf	(fputc@c+1)^0,c
  1075  001500  C042  F005         	movff	vfpfcnvrt@fp,fputc@fp
  1076  001504  C043  F006         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1077  001508  EC13  F00D         	call	_fputc	;wreg free
  1078  00150C                     
  1079                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  1080  00150C  0060  F113  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  1081  001512  0060  F117  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  1082  001518  2ADE               	incf	postinc2,f,c
  1083  00151A  0E00               	movlw	0
  1084  00151C  22DD               	addwfc	postdec2,f,c
  1085  00151E  EF5A  F00A         	goto	l1702
  1086  001522                     l1008:
  1087  001522  0012               	return		;funcret
  1088  001524                     __end_of_vfpfcnvrt:
  1089                           	callstack 0
  1090                           
  1091 ;; *************** function _dtoa *****************
  1092 ;; Defined at:
  1093 ;;		line 287 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c"
  1094 ;; Parameters:    Size  Location     Type
  1095 ;;  fp              2   29[COMRAM] PTR struct _IO_FILE
  1096 ;;		 -> NULL(0), 
  1097 ;;  d               8   31[COMRAM] long long 
  1098 ;; Auto vars:     Size  Location     Type
  1099 ;;  n               8   55[COMRAM] long long 
  1100 ;;  i               2   63[COMRAM] int 
  1101 ;;  s               2   53[COMRAM] int 
  1102 ;;  w               2   51[COMRAM] int 
  1103 ;;  p               2   49[COMRAM] int 
  1104 ;; Return value:  Size  Location     Type
  1105 ;;                  2   29[COMRAM] int 
  1106 ;; Registers used:
  1107 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1108 ;; Tracked objects:
  1109 ;;		On entry : 0/0
  1110 ;;		On exit  : 0/0
  1111 ;;		Unchanged: 0/0
  1112 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1113 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1114 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1115 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1116 ;;      Totals:        36       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1117 ;;Total ram usage:       36 bytes
  1118 ;; Hardware stack levels used:    1
  1119 ;; Hardware stack levels required when called:    5
  1120 ;; This function calls:
  1121 ;;		___aodiv
  1122 ;;		___aomod
  1123 ;;		_abs
  1124 ;;		_pad
  1125 ;; This function is called by:
  1126 ;;		_vfpfcnvrt
  1127 ;; This function uses a non-reentrant model
  1128 ;;
  1129                           
  1130                           	psect	text4
  1131  001036                     __ptext4:
  1132                           	callstack 0
  1133  001036                     _dtoa:
  1134                           	callstack 22
  1135  001036                     
  1136                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 287: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\d
      +                          oprnt.c: 288: {;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 28
      +                          9:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprn
      +                          t.c: 290:     long long n;;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\d
      +                          oprnt.c: 293:     n = d;
  1137  001036  C020  F038         	movff	dtoa@d,dtoa@n
  1138  00103A  C021  F039         	movff	dtoa@d+1,dtoa@n+1
  1139  00103E  C022  F03A         	movff	dtoa@d+2,dtoa@n+2
  1140  001042  C023  F03B         	movff	dtoa@d+3,dtoa@n+3
  1141  001046  C024  F03C         	movff	dtoa@d+4,dtoa@n+4
  1142  00104A  C025  F03D         	movff	dtoa@d+5,dtoa@n+5
  1143  00104E  C026  F03E         	movff	dtoa@d+6,dtoa@n+6
  1144  001052  C027  F03F         	movff	dtoa@d+7,dtoa@n+7
  1145  001056                     
  1146                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 294:     s = n < 
      +                          0 ? 1 : 0;
  1147  001056  BE3F               	btfsc	(dtoa@n+7)^0,7,c
  1148  001058  EF30  F008         	goto	u891
  1149  00105C  EF33  F008         	goto	u890
  1150  001060                     u891:
  1151  001060  0E01               	movlw	1
  1152  001062  EF34  F008         	goto	u900
  1153  001066                     u890:
  1154  001066  0E00               	movlw	0
  1155  001068                     u900:
  1156  001068  6E36               	movwf	dtoa@s^0,c
  1157  00106A  6A37               	clrf	(dtoa@s+1)^0,c
  1158                           
  1159                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 295:     if (s) {
  1160  00106C  5036               	movf	dtoa@s^0,w,c
  1161  00106E  1037               	iorwf	(dtoa@s+1)^0,w,c
  1162  001070  B4D8               	btfsc	status,2,c
  1163  001072  EF3D  F008         	goto	u911
  1164  001076  EF3F  F008         	goto	u910
  1165  00107A                     u911:
  1166  00107A  EF4F  F008         	goto	l1616
  1167  00107E                     u910:
  1168  00107E                     
  1169                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 296:         n = 
      +                          -n;
  1170  00107E  1E3F               	comf	(dtoa@n+7)^0,f,c
  1171  001080  1E3E               	comf	(dtoa@n+6)^0,f,c
  1172  001082  1E3D               	comf	(dtoa@n+5)^0,f,c
  1173  001084  1E3C               	comf	(dtoa@n+4)^0,f,c
  1174  001086  1E3B               	comf	(dtoa@n+3)^0,f,c
  1175  001088  1E3A               	comf	(dtoa@n+2)^0,f,c
  1176  00108A  1E39               	comf	(dtoa@n+1)^0,f,c
  1177  00108C  6C38               	negf	dtoa@n^0,c
  1178  00108E  0E00               	movlw	0
  1179  001090  2239               	addwfc	(dtoa@n+1)^0,f,c
  1180  001092  223A               	addwfc	(dtoa@n+2)^0,f,c
  1181  001094  223B               	addwfc	(dtoa@n+3)^0,f,c
  1182  001096  223C               	addwfc	(dtoa@n+4)^0,f,c
  1183  001098  223D               	addwfc	(dtoa@n+5)^0,f,c
  1184  00109A  223E               	addwfc	(dtoa@n+6)^0,f,c
  1185  00109C  223F               	addwfc	(dtoa@n+7)^0,f,c
  1186  00109E                     l1616:
  1187                           
  1188                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 300:     if (!(pr
      +                          ec < 0)) {
  1189  00109E  0100               	movlb	0	; () banked
  1190  0010A0  BF65               	btfsc	(_prec+1)& (0+255),7,b
  1191  0010A2  EF55  F008         	goto	u921
  1192  0010A6  EF57  F008         	goto	u920
  1193  0010AA                     u921:
  1194  0010AA  EF58  F008         	goto	l1620
  1195  0010AE                     u920:
  1196  0010AE                     
  1197                           ; BSR set to: 0
  1198                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 301:         flag
      +                          s &= ~(1 << 1);
  1199  0010AE  9366               	bcf	_flags& (0+255),1,b
  1200  0010B0                     l1620:
  1201                           
  1202                           ; BSR set to: 0
  1203                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 303:     p = (0 <
      +                           prec) ? prec : 1;
  1204  0010B0  BF65               	btfsc	(_prec+1)& (0+255),7,b
  1205  0010B2  EF65  F008         	goto	u930
  1206  0010B6  5165               	movf	(_prec+1)& (0+255),w,b
  1207  0010B8  E106               	bnz	u931
  1208  0010BA  0564               	decf	_prec& (0+255),w,b
  1209  0010BC  B0D8               	btfsc	status,0,c
  1210  0010BE  EF63  F008         	goto	u931
  1211  0010C2  EF65  F008         	goto	u930
  1212  0010C6                     u931:
  1213  0010C6  EF6B  F008         	goto	l981
  1214  0010CA                     u930:
  1215  0010CA                     
  1216                           ; BSR set to: 0
  1217  0010CA  0E00               	movlw	0
  1218  0010CC  6E33               	movwf	(dtoa@p+1)^0,c
  1219  0010CE  0E01               	movlw	1
  1220  0010D0  6E32               	movwf	dtoa@p^0,c
  1221  0010D2  EF6F  F008         	goto	l983
  1222  0010D6                     l981:
  1223                           
  1224                           ; BSR set to: 0
  1225  0010D6  C064  F032         	movff	_prec,dtoa@p
  1226  0010DA  C065  F033         	movff	_prec+1,dtoa@p+1
  1227  0010DE                     l983:
  1228                           
  1229                           ; BSR set to: 0
  1230                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 304:     w = widt
      +                          h;
  1231  0010DE  C062  F034         	movff	_width,dtoa@w
  1232  0010E2  C063  F035         	movff	_width+1,dtoa@w+1
  1233  0010E6                     
  1234                           ; BSR set to: 0
  1235                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 305:     if (s ||
      +                           (flags & (1 << 2))) {
  1236  0010E6  5036               	movf	dtoa@s^0,w,c
  1237  0010E8  1037               	iorwf	(dtoa@s+1)^0,w,c
  1238  0010EA  A4D8               	btfss	status,2,c
  1239  0010EC  EF7A  F008         	goto	u941
  1240  0010F0  EF7C  F008         	goto	u940
  1241  0010F4                     u941:
  1242  0010F4  EF83  F008         	goto	l1628
  1243  0010F8                     u940:
  1244  0010F8                     
  1245                           ; BSR set to: 0
  1246  0010F8  A566               	btfss	_flags& (0+255),2,b
  1247  0010FA  EF81  F008         	goto	u951
  1248  0010FE  EF83  F008         	goto	u950
  1249  001102                     u951:
  1250  001102  EF86  F008         	goto	l1630
  1251  001106                     u950:
  1252  001106                     l1628:
  1253                           
  1254                           ; BSR set to: 0
  1255                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 306:         --w;
  1256  001106  0634               	decf	dtoa@w^0,f,c
  1257  001108  A0D8               	btfss	status,0,c
  1258  00110A  0635               	decf	(dtoa@w+1)^0,f,c
  1259  00110C                     l1630:
  1260                           
  1261                           ; BSR set to: 0
  1262                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 310:     i = size
      +                          of(dbuf) - 1;
  1263  00110C  0E00               	movlw	0
  1264  00110E  6E41               	movwf	(dtoa@i+1)^0,c
  1265  001110  0E1F               	movlw	31
  1266  001112  6E40               	movwf	dtoa@i^0,c
  1267  001114                     
  1268                           ; BSR set to: 0
  1269                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] 
      +                          = '\0';
  1270  001114  0E00               	movlw	0
  1271  001116  6F88               	movwf	(_dbuf+31)& (0+255),b
  1272                           
  1273                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  1274  001118  EF0A  F009         	goto	l1644
  1275  00111C                     l1634:
  1276                           
  1277                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 313:         --i;
  1278  00111C  0640               	decf	dtoa@i^0,f,c
  1279  00111E  A0D8               	btfss	status,0,c
  1280  001120  0641               	decf	(dtoa@i+1)^0,f,c
  1281  001122                     
  1282                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 314:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  1283  001122  0E69               	movlw	low _dbuf
  1284  001124  2440               	addwf	dtoa@i^0,w,c
  1285  001126  6ED9               	movwf	fsr2l,c
  1286  001128  0E00               	movlw	high _dbuf
  1287  00112A  2041               	addwfc	(dtoa@i+1)^0,w,c
  1288  00112C  6EDA               	movwf	fsr2h,c
  1289  00112E  C038  F001         	movff	dtoa@n,___aomod@dividend
  1290  001132  C039  F002         	movff	dtoa@n+1,___aomod@dividend+1
  1291  001136  C03A  F003         	movff	dtoa@n+2,___aomod@dividend+2
  1292  00113A  C03B  F004         	movff	dtoa@n+3,___aomod@dividend+3
  1293  00113E  C03C  F005         	movff	dtoa@n+4,___aomod@dividend+4
  1294  001142  C03D  F006         	movff	dtoa@n+5,___aomod@dividend+5
  1295  001146  C03E  F007         	movff	dtoa@n+6,___aomod@dividend+6
  1296  00114A  C03F  F008         	movff	dtoa@n+7,___aomod@dividend+7
  1297  00114E  0E0A               	movlw	10
  1298  001150  6E09               	movwf	___aomod@divisor^0,c
  1299  001152  0E00               	movlw	0
  1300  001154  6E0A               	movwf	(___aomod@divisor+1)^0,c
  1301  001156  0E00               	movlw	0
  1302  001158  6E0B               	movwf	(___aomod@divisor+2)^0,c
  1303  00115A  0E00               	movlw	0
  1304  00115C  6E0C               	movwf	(___aomod@divisor+3)^0,c
  1305  00115E  0E00               	movlw	0
  1306  001160  6E0D               	movwf	(___aomod@divisor+4)^0,c
  1307  001162  0E00               	movlw	0
  1308  001164  6E0E               	movwf	(___aomod@divisor+5)^0,c
  1309  001166  0E00               	movlw	0
  1310  001168  6E0F               	movwf	(___aomod@divisor+6)^0,c
  1311  00116A  0E00               	movlw	0
  1312  00116C  6E10               	movwf	(___aomod@divisor+7)^0,c
  1313  00116E  EC56  F00B         	call	___aomod	;wreg free
  1314  001172  C001  F028         	movff	?___aomod,??_dtoa
  1315  001176  C002  F029         	movff	?___aomod+1,??_dtoa+1
  1316  00117A  C003  F02A         	movff	?___aomod+2,??_dtoa+2
  1317  00117E  C004  F02B         	movff	?___aomod+3,??_dtoa+3
  1318  001182  C005  F02C         	movff	?___aomod+4,??_dtoa+4
  1319  001186  C006  F02D         	movff	?___aomod+5,??_dtoa+5
  1320  00118A  C007  F02E         	movff	?___aomod+6,??_dtoa+6
  1321  00118E  C008  F02F         	movff	?___aomod+7,??_dtoa+7
  1322  001192  C028  F013         	movff	??_dtoa,abs@a
  1323  001196  C02A  F014         	movff	??_dtoa+2,abs@a+1
  1324  00119A  EC2D  F00E         	call	_abs	;wreg free
  1325  00119E  5013               	movf	?_abs^0,w,c
  1326  0011A0  0F30               	addlw	48
  1327  0011A2  6EDF               	movwf	indf2,c
  1328  0011A4                     
  1329                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 315:         --p;
  1330  0011A4  0632               	decf	dtoa@p^0,f,c
  1331  0011A6  A0D8               	btfss	status,0,c
  1332  0011A8  0633               	decf	(dtoa@p+1)^0,f,c
  1333  0011AA                     
  1334                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 316:         --w;
  1335  0011AA  0634               	decf	dtoa@w^0,f,c
  1336  0011AC  A0D8               	btfss	status,0,c
  1337  0011AE  0635               	decf	(dtoa@w+1)^0,f,c
  1338  0011B0                     
  1339                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 317:         n = 
      +                          n / 10;
  1340  0011B0  C038  F001         	movff	dtoa@n,___aodiv@dividend
  1341  0011B4  C039  F002         	movff	dtoa@n+1,___aodiv@dividend+1
  1342  0011B8  C03A  F003         	movff	dtoa@n+2,___aodiv@dividend+2
  1343  0011BC  C03B  F004         	movff	dtoa@n+3,___aodiv@dividend+3
  1344  0011C0  C03C  F005         	movff	dtoa@n+4,___aodiv@dividend+4
  1345  0011C4  C03D  F006         	movff	dtoa@n+5,___aodiv@dividend+5
  1346  0011C8  C03E  F007         	movff	dtoa@n+6,___aodiv@dividend+6
  1347  0011CC  C03F  F008         	movff	dtoa@n+7,___aodiv@dividend+7
  1348  0011D0  0E0A               	movlw	10
  1349  0011D2  6E09               	movwf	___aodiv@divisor^0,c
  1350  0011D4  0E00               	movlw	0
  1351  0011D6  6E0A               	movwf	(___aodiv@divisor+1)^0,c
  1352  0011D8  0E00               	movlw	0
  1353  0011DA  6E0B               	movwf	(___aodiv@divisor+2)^0,c
  1354  0011DC  0E00               	movlw	0
  1355  0011DE  6E0C               	movwf	(___aodiv@divisor+3)^0,c
  1356  0011E0  0E00               	movlw	0
  1357  0011E2  6E0D               	movwf	(___aodiv@divisor+4)^0,c
  1358  0011E4  0E00               	movlw	0
  1359  0011E6  6E0E               	movwf	(___aodiv@divisor+5)^0,c
  1360  0011E8  0E00               	movlw	0
  1361  0011EA  6E0F               	movwf	(___aodiv@divisor+6)^0,c
  1362  0011EC  0E00               	movlw	0
  1363  0011EE  6E10               	movwf	(___aodiv@divisor+7)^0,c
  1364  0011F0  EC92  F00A         	call	___aodiv	;wreg free
  1365  0011F4  C001  F038         	movff	?___aodiv,dtoa@n
  1366  0011F8  C002  F039         	movff	?___aodiv+1,dtoa@n+1
  1367  0011FC  C003  F03A         	movff	?___aodiv+2,dtoa@n+2
  1368  001200  C004  F03B         	movff	?___aodiv+3,dtoa@n+3
  1369  001204  C005  F03C         	movff	?___aodiv+4,dtoa@n+4
  1370  001208  C006  F03D         	movff	?___aodiv+5,dtoa@n+5
  1371  00120C  C007  F03E         	movff	?___aodiv+6,dtoa@n+6
  1372  001210  C008  F03F         	movff	?___aodiv+7,dtoa@n+7
  1373  001214                     l1644:
  1374                           
  1375                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  1376  001214  BE41               	btfsc	(dtoa@i+1)^0,7,c
  1377  001216  EF15  F009         	goto	u961
  1378  00121A  5041               	movf	(dtoa@i+1)^0,w,c
  1379  00121C  E108               	bnz	u960
  1380  00121E  0440               	decf	dtoa@i^0,w,c
  1381  001220  A0D8               	btfss	status,0,c
  1382  001222  EF15  F009         	goto	u961
  1383  001226  EF17  F009         	goto	u960
  1384  00122A                     u961:
  1385  00122A  EF48  F009         	goto	l1654
  1386  00122E                     u960:
  1387  00122E  5038               	movf	dtoa@n^0,w,c
  1388  001230  1039               	iorwf	(dtoa@n+1)^0,w,c
  1389  001232  103A               	iorwf	(dtoa@n+2)^0,w,c
  1390  001234  103B               	iorwf	(dtoa@n+3)^0,w,c
  1391  001236  103C               	iorwf	(dtoa@n+4)^0,w,c
  1392  001238  103D               	iorwf	(dtoa@n+5)^0,w,c
  1393  00123A  103E               	iorwf	(dtoa@n+6)^0,w,c
  1394  00123C  103F               	iorwf	(dtoa@n+7)^0,w,c
  1395  00123E  A4D8               	btfss	status,2,c
  1396  001240  EF24  F009         	goto	u971
  1397  001244  EF26  F009         	goto	u970
  1398  001248                     u971:
  1399  001248  EF8E  F008         	goto	l1634
  1400  00124C                     u970:
  1401  00124C  BE33               	btfsc	(dtoa@p+1)^0,7,c
  1402  00124E  EF33  F009         	goto	u980
  1403  001252  5033               	movf	(dtoa@p+1)^0,w,c
  1404  001254  E106               	bnz	u981
  1405  001256  0432               	decf	dtoa@p^0,w,c
  1406  001258  B0D8               	btfsc	status,0,c
  1407  00125A  EF31  F009         	goto	u981
  1408  00125E  EF33  F009         	goto	u980
  1409  001262                     u981:
  1410  001262  EF8E  F008         	goto	l1634
  1411  001266                     u980:
  1412  001266  BE35               	btfsc	(dtoa@w+1)^0,7,c
  1413  001268  EF3E  F009         	goto	u991
  1414  00126C  5035               	movf	(dtoa@w+1)^0,w,c
  1415  00126E  E108               	bnz	u990
  1416  001270  0434               	decf	dtoa@w^0,w,c
  1417  001272  A0D8               	btfss	status,0,c
  1418  001274  EF3E  F009         	goto	u991
  1419  001278  EF40  F009         	goto	u990
  1420  00127C                     u991:
  1421  00127C  EF48  F009         	goto	l1654
  1422  001280                     u990:
  1423  001280  0100               	movlb	0	; () banked
  1424  001282  B366               	btfsc	_flags& (0+255),1,b
  1425  001284  EF46  F009         	goto	u1001
  1426  001288  EF48  F009         	goto	u1000
  1427  00128C                     u1001:
  1428  00128C  EF8E  F008         	goto	l1634
  1429  001290                     u1000:
  1430  001290                     l1654:
  1431                           
  1432                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 321:     if (s ||
      +                           (flags & (1 << 2))) {
  1433  001290  5036               	movf	dtoa@s^0,w,c
  1434  001292  1037               	iorwf	(dtoa@s+1)^0,w,c
  1435  001294  A4D8               	btfss	status,2,c
  1436  001296  EF4F  F009         	goto	u1011
  1437  00129A  EF51  F009         	goto	u1010
  1438  00129E                     u1011:
  1439  00129E  EF59  F009         	goto	l1658
  1440  0012A2                     u1010:
  1441  0012A2  0100               	movlb	0	; () banked
  1442  0012A4  A566               	btfss	_flags& (0+255),2,b
  1443  0012A6  EF57  F009         	goto	u1021
  1444  0012AA  EF59  F009         	goto	u1020
  1445  0012AE                     u1021:
  1446  0012AE  EF78  F009         	goto	l1668
  1447  0012B2                     u1020:
  1448  0012B2                     l1658:
  1449                           
  1450                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 322:         --i;
  1451  0012B2  0640               	decf	dtoa@i^0,f,c
  1452  0012B4  A0D8               	btfss	status,0,c
  1453  0012B6  0641               	decf	(dtoa@i+1)^0,f,c
  1454  0012B8                     
  1455                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 323:         dbuf
      +                          [i] = s ? '-' : '+';
  1456  0012B8  5036               	movf	dtoa@s^0,w,c
  1457  0012BA  1037               	iorwf	(dtoa@s+1)^0,w,c
  1458  0012BC  A4D8               	btfss	status,2,c
  1459  0012BE  EF63  F009         	goto	u1031
  1460  0012C2  EF65  F009         	goto	u1030
  1461  0012C6                     u1031:
  1462  0012C6  EF6B  F009         	goto	l1664
  1463  0012CA                     u1030:
  1464  0012CA  0E00               	movlw	0
  1465  0012CC  6E31               	movwf	(_dtoa$850+1)^0,c
  1466  0012CE  0E2B               	movlw	43
  1467  0012D0  6E30               	movwf	_dtoa$850^0,c
  1468  0012D2  EF6F  F009         	goto	l1666
  1469  0012D6                     l1664:
  1470  0012D6  0E00               	movlw	0
  1471  0012D8  6E31               	movwf	(_dtoa$850+1)^0,c
  1472  0012DA  0E2D               	movlw	45
  1473  0012DC  6E30               	movwf	_dtoa$850^0,c
  1474  0012DE                     l1666:
  1475  0012DE  0E69               	movlw	low _dbuf
  1476  0012E0  2440               	addwf	dtoa@i^0,w,c
  1477  0012E2  6ED9               	movwf	fsr2l,c
  1478  0012E4  0E00               	movlw	high _dbuf
  1479  0012E6  2041               	addwfc	(dtoa@i+1)^0,w,c
  1480  0012E8  6EDA               	movwf	fsr2h,c
  1481  0012EA  0060  F0C3  FFDF   	movff	_dtoa$850,indf2
  1482  0012F0                     l1668:
  1483                           
  1484                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 327:     return p
      +                          ad(fp, &dbuf[i], w);
  1485  0012F0  C01E  F013         	movff	dtoa@fp,pad@fp
  1486  0012F4  C01F  F014         	movff	dtoa@fp+1,pad@fp+1
  1487  0012F8  0E69               	movlw	low _dbuf
  1488  0012FA  2440               	addwf	dtoa@i^0,w,c
  1489  0012FC  6E15               	movwf	pad@buf^0,c
  1490  0012FE  0E00               	movlw	high _dbuf
  1491  001300  2041               	addwfc	(dtoa@i+1)^0,w,c
  1492  001302  6E16               	movwf	(pad@buf+1)^0,c
  1493  001304  C034  F017         	movff	dtoa@w,pad@p
  1494  001308  C035  F018         	movff	dtoa@w+1,pad@p+1
  1495  00130C  EC08  F00C         	call	_pad	;wreg free
  1496  001310  C013  F01E         	movff	?_pad,?_dtoa
  1497  001314  C014  F01F         	movff	?_pad+1,?_dtoa+1
  1498  001318  0012               	return		;funcret
  1499  00131A                     __end_of_dtoa:
  1500                           	callstack 0
  1501                           
  1502 ;; *************** function _pad *****************
  1503 ;; Defined at:
  1504 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c"
  1505 ;; Parameters:    Size  Location     Type
  1506 ;;  fp              2   18[COMRAM] PTR struct _IO_FILE
  1507 ;;		 -> NULL(0), 
  1508 ;;  buf             2   20[COMRAM] PTR unsigned char 
  1509 ;;		 -> dbuf(32), 
  1510 ;;  p               2   22[COMRAM] int 
  1511 ;; Auto vars:     Size  Location     Type
  1512 ;;  w               2   27[COMRAM] int 
  1513 ;;  i               2   25[COMRAM] int 
  1514 ;; Return value:  Size  Location     Type
  1515 ;;                  2   18[COMRAM] int 
  1516 ;; Registers used:
  1517 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1518 ;; Tracked objects:
  1519 ;;		On entry : 0/0
  1520 ;;		On exit  : 0/0
  1521 ;;		Unchanged: 0/0
  1522 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1523 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1524 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1525 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1526 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1527 ;;Total ram usage:       11 bytes
  1528 ;; Hardware stack levels used:    1
  1529 ;; Hardware stack levels required when called:    4
  1530 ;; This function calls:
  1531 ;;		_fputc
  1532 ;;		_fputs
  1533 ;;		_strlen
  1534 ;; This function is called by:
  1535 ;;		_dtoa
  1536 ;; This function uses a non-reentrant model
  1537 ;;
  1538                           
  1539                           	psect	text5
  1540  001810                     __ptext5:
  1541                           	callstack 0
  1542  001810                     _pad:
  1543                           	callstack 22
  1544  001810                     
  1545                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  1546  001810  0100               	movlb	0	; () banked
  1547  001812  A166               	btfss	_flags& (0+255),0,b
  1548  001814  EF0E  F00C         	goto	u841
  1549  001818  EF10  F00C         	goto	u840
  1550  00181C                     u841:
  1551  00181C  EF1A  F00C         	goto	l1588
  1552  001820                     u840:
  1553  001820                     
  1554                           ; BSR set to: 0
  1555                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  1556  001820  C015  F00C         	movff	pad@buf,fputs@s
  1557  001824  C016  F00D         	movff	pad@buf+1,fputs@s+1
  1558  001828  C013  F00E         	movff	pad@fp,fputs@fp
  1559  00182C  C014  F00F         	movff	pad@fp+1,fputs@fp+1
  1560  001830  EC0B  F00E         	call	_fputs	;wreg free
  1561  001834                     l1588:
  1562                           
  1563                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  1564  001834  BE18               	btfsc	(pad@p+1)^0,7,c
  1565  001836  EF1F  F00C         	goto	u851
  1566  00183A  EF21  F00C         	goto	u850
  1567  00183E                     u851:
  1568  00183E  EF27  F00C         	goto	l1592
  1569  001842                     u850:
  1570  001842  C017  F01C         	movff	pad@p,pad@w
  1571  001846  C018  F01D         	movff	pad@p+1,pad@w+1
  1572  00184A  EF2B  F00C         	goto	l970
  1573  00184E                     l1592:
  1574  00184E  0E00               	movlw	0
  1575  001850  6E1D               	movwf	(pad@w+1)^0,c
  1576  001852  0E00               	movlw	0
  1577  001854  6E1C               	movwf	pad@w^0,c
  1578  001856                     l970:
  1579                           
  1580                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  1581  001856  0E00               	movlw	0
  1582  001858  6E1B               	movwf	(pad@i+1)^0,c
  1583  00185A  0E00               	movlw	0
  1584  00185C  6E1A               	movwf	pad@i^0,c
  1585                           
  1586                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  1587  00185E  EF3D  F00C         	goto	l1598
  1588  001862                     l1594:
  1589                           
  1590                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  1591  001862  0E00               	movlw	0
  1592  001864  6E04               	movwf	(fputc@c+1)^0,c
  1593  001866  0E20               	movlw	32
  1594  001868  6E03               	movwf	fputc@c^0,c
  1595  00186A  C013  F005         	movff	pad@fp,fputc@fp
  1596  00186E  C014  F006         	movff	pad@fp+1,fputc@fp+1
  1597  001872  EC13  F00D         	call	_fputc	;wreg free
  1598  001876                     
  1599                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 86:         ++i;
  1600  001876  4A1A               	infsnz	pad@i^0,f,c
  1601  001878  2A1B               	incf	(pad@i+1)^0,f,c
  1602  00187A                     l1598:
  1603                           
  1604                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  1605  00187A  501C               	movf	pad@w^0,w,c
  1606  00187C  5C1A               	subwf	pad@i^0,w,c
  1607  00187E  501B               	movf	(pad@i+1)^0,w,c
  1608  001880  0A80               	xorlw	128
  1609  001882  6E19               	movwf	??_pad^0,c
  1610  001884  501D               	movf	(pad@w+1)^0,w,c
  1611  001886  0A80               	xorlw	128
  1612  001888  5819               	subwfb	??_pad^0,w,c
  1613  00188A  A0D8               	btfss	status,0,c
  1614  00188C  EF4A  F00C         	goto	u861
  1615  001890  EF4C  F00C         	goto	u860
  1616  001894                     u861:
  1617  001894  EF31  F00C         	goto	l1594
  1618  001898                     u860:
  1619  001898                     
  1620                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  1621  001898  0100               	movlb	0	; () banked
  1622  00189A  B166               	btfsc	_flags& (0+255),0,b
  1623  00189C  EF52  F00C         	goto	u871
  1624  0018A0  EF54  F00C         	goto	u870
  1625  0018A4                     u871:
  1626  0018A4  EF5E  F00C         	goto	l1602
  1627  0018A8                     u870:
  1628  0018A8                     
  1629                           ; BSR set to: 0
  1630                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  1631  0018A8  C015  F00C         	movff	pad@buf,fputs@s
  1632  0018AC  C016  F00D         	movff	pad@buf+1,fputs@s+1
  1633  0018B0  C013  F00E         	movff	pad@fp,fputs@fp
  1634  0018B4  C014  F00F         	movff	pad@fp+1,fputs@fp+1
  1635  0018B8  EC0B  F00E         	call	_fputs	;wreg free
  1636  0018BC                     l1602:
  1637                           
  1638                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  1639  0018BC  C015  F001         	movff	pad@buf,strlen@s
  1640  0018C0  C016  F002         	movff	pad@buf+1,strlen@s+1
  1641  0018C4  EC4D  F00E         	call	_strlen	;wreg free
  1642  0018C8  501C               	movf	pad@w^0,w,c
  1643  0018CA  2401               	addwf	?_strlen^0,w,c
  1644  0018CC  6E13               	movwf	?_pad^0,c
  1645  0018CE  501D               	movf	(pad@w+1)^0,w,c
  1646  0018D0  2002               	addwfc	(?_strlen+1)^0,w,c
  1647  0018D2  6E14               	movwf	(?_pad+1)^0,c
  1648  0018D4  0012               	return		;funcret
  1649  0018D6                     __end_of_pad:
  1650                           	callstack 0
  1651                           
  1652 ;; *************** function _strlen *****************
  1653 ;; Defined at:
  1654 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\strlen.c"
  1655 ;; Parameters:    Size  Location     Type
  1656 ;;  s               2    0[COMRAM] PTR const unsigned char 
  1657 ;;		 -> dbuf(32), 
  1658 ;; Auto vars:     Size  Location     Type
  1659 ;;  a               2    2[COMRAM] PTR const unsigned char 
  1660 ;;		 -> dbuf(32), 
  1661 ;; Return value:  Size  Location     Type
  1662 ;;                  2    0[COMRAM] unsigned int 
  1663 ;; Registers used:
  1664 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1665 ;; Tracked objects:
  1666 ;;		On entry : 0/0
  1667 ;;		On exit  : 0/0
  1668 ;;		Unchanged: 0/0
  1669 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1670 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1671 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1672 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1673 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1674 ;;Total ram usage:        4 bytes
  1675 ;; Hardware stack levels used:    1
  1676 ;; This function calls:
  1677 ;;		Nothing
  1678 ;; This function is called by:
  1679 ;;		_pad
  1680 ;; This function uses a non-reentrant model
  1681 ;;
  1682                           
  1683                           	psect	text6
  1684  001C9A                     __ptext6:
  1685                           	callstack 0
  1686  001C9A                     _strlen:
  1687                           	callstack 25
  1688  001C9A  C001  F003         	movff	strlen@s,strlen@a
  1689  001C9E  C002  F004         	movff	strlen@s+1,strlen@a+1
  1690  001CA2  EF55  F00E         	goto	l1498
  1691  001CA6                     l1496:
  1692  001CA6  4A01               	infsnz	strlen@s^0,f,c
  1693  001CA8  2A02               	incf	(strlen@s+1)^0,f,c
  1694  001CAA                     l1498:
  1695  001CAA  0060  F007  FFD9   	movff	strlen@s,fsr2l
  1696  001CB0  0060  F00B  FFDA   	movff	strlen@s+1,fsr2h
  1697  001CB6  50DF               	movf	indf2,w,c
  1698  001CB8  A4D8               	btfss	status,2,c
  1699  001CBA  EF61  F00E         	goto	u701
  1700  001CBE  EF63  F00E         	goto	u700
  1701  001CC2                     u701:
  1702  001CC2  EF53  F00E         	goto	l1496
  1703  001CC6                     u700:
  1704  001CC6  5003               	movf	strlen@a^0,w,c
  1705  001CC8  5C01               	subwf	strlen@s^0,w,c
  1706  001CCA  6E01               	movwf	?_strlen^0,c
  1707  001CCC  5004               	movf	(strlen@a+1)^0,w,c
  1708  001CCE  5802               	subwfb	(strlen@s+1)^0,w,c
  1709  001CD0  6E02               	movwf	(?_strlen+1)^0,c
  1710  001CD2  0012               	return		;funcret
  1711  001CD4                     __end_of_strlen:
  1712                           	callstack 0
  1713                           
  1714 ;; *************** function _fputs *****************
  1715 ;; Defined at:
  1716 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\nf_fputs.c"
  1717 ;; Parameters:    Size  Location     Type
  1718 ;;  s               2   11[COMRAM] PTR const unsigned char 
  1719 ;;		 -> dbuf(32), 
  1720 ;;  fp              2   13[COMRAM] PTR struct _IO_FILE
  1721 ;;		 -> NULL(0), 
  1722 ;; Auto vars:     Size  Location     Type
  1723 ;;  i               2   16[COMRAM] int 
  1724 ;;  c               1   15[COMRAM] unsigned char 
  1725 ;; Return value:  Size  Location     Type
  1726 ;;                  2   11[COMRAM] int 
  1727 ;; Registers used:
  1728 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1729 ;; Tracked objects:
  1730 ;;		On entry : 0/0
  1731 ;;		On exit  : 0/0
  1732 ;;		Unchanged: 0/0
  1733 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1734 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1735 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1736 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1737 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1738 ;;Total ram usage:        7 bytes
  1739 ;; Hardware stack levels used:    1
  1740 ;; Hardware stack levels required when called:    3
  1741 ;; This function calls:
  1742 ;;		_fputc
  1743 ;; This function is called by:
  1744 ;;		_pad
  1745 ;; This function uses a non-reentrant model
  1746 ;;
  1747                           
  1748                           	psect	text7
  1749  001C16                     __ptext7:
  1750                           	callstack 0
  1751  001C16                     _fputs:
  1752                           	callstack 22
  1753  001C16  0E00               	movlw	0
  1754  001C18  6E12               	movwf	(fputs@i+1)^0,c
  1755  001C1A  0E00               	movlw	0
  1756  001C1C  6E11               	movwf	fputs@i^0,c
  1757  001C1E  EF1C  F00E         	goto	l1492
  1758  001C22                     l1488:
  1759  001C22  C010  F003         	movff	fputs@c,fputc@c
  1760  001C26  6A04               	clrf	(fputc@c+1)^0,c
  1761  001C28  C00E  F005         	movff	fputs@fp,fputc@fp
  1762  001C2C  C00F  F006         	movff	fputs@fp+1,fputc@fp+1
  1763  001C30  EC13  F00D         	call	_fputc	;wreg free
  1764  001C34  4A11               	infsnz	fputs@i^0,f,c
  1765  001C36  2A12               	incf	(fputs@i+1)^0,f,c
  1766  001C38                     l1492:
  1767  001C38  5011               	movf	fputs@i^0,w,c
  1768  001C3A  240C               	addwf	fputs@s^0,w,c
  1769  001C3C  6ED9               	movwf	fsr2l,c
  1770  001C3E  5012               	movf	(fputs@i+1)^0,w,c
  1771  001C40  200D               	addwfc	(fputs@s+1)^0,w,c
  1772  001C42  6EDA               	movwf	fsr2h,c
  1773  001C44  50DF               	movf	indf2,w,c
  1774  001C46  6E10               	movwf	fputs@c^0,c
  1775  001C48  5010               	movf	fputs@c^0,w,c
  1776  001C4A  A4D8               	btfss	status,2,c
  1777  001C4C  EF2A  F00E         	goto	u691
  1778  001C50  EF2C  F00E         	goto	u690
  1779  001C54                     u691:
  1780  001C54  EF11  F00E         	goto	l1488
  1781  001C58                     u690:
  1782  001C58  0012               	return		;funcret
  1783  001C5A                     __end_of_fputs:
  1784                           	callstack 0
  1785                           
  1786 ;; *************** function _fputc *****************
  1787 ;; Defined at:
  1788 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\nf_fputc.c"
  1789 ;; Parameters:    Size  Location     Type
  1790 ;;  c               2    2[COMRAM] int 
  1791 ;;  fp              2    4[COMRAM] PTR struct _IO_FILE
  1792 ;;		 -> NULL(0), 
  1793 ;; Auto vars:     Size  Location     Type
  1794 ;;		None
  1795 ;; Return value:  Size  Location     Type
  1796 ;;                  2    2[COMRAM] int 
  1797 ;; Registers used:
  1798 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1799 ;; Tracked objects:
  1800 ;;		On entry : 0/0
  1801 ;;		On exit  : 0/0
  1802 ;;		Unchanged: 0/0
  1803 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1804 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1805 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1806 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1807 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1808 ;;Total ram usage:        9 bytes
  1809 ;; Hardware stack levels used:    1
  1810 ;; Hardware stack levels required when called:    2
  1811 ;; This function calls:
  1812 ;;		_putch
  1813 ;; This function is called by:
  1814 ;;		_pad
  1815 ;;		_vfpfcnvrt
  1816 ;;		_fputs
  1817 ;; This function uses a non-reentrant model
  1818 ;;
  1819                           
  1820                           	psect	text8
  1821  001A26                     __ptext8:
  1822                           	callstack 0
  1823  001A26                     _fputc:
  1824                           	callstack 25
  1825  001A26  5005               	movf	fputc@fp^0,w,c
  1826  001A28  1006               	iorwf	(fputc@fp+1)^0,w,c
  1827  001A2A  B4D8               	btfsc	status,2,c
  1828  001A2C  EF1A  F00D         	goto	u651
  1829  001A30  EF1C  F00D         	goto	u650
  1830  001A34                     u651:
  1831  001A34  EF25  F00D         	goto	l1476
  1832  001A38                     u650:
  1833  001A38  5005               	movf	fputc@fp^0,w,c
  1834  001A3A  1006               	iorwf	(fputc@fp+1)^0,w,c
  1835  001A3C  A4D8               	btfss	status,2,c
  1836  001A3E  EF23  F00D         	goto	u661
  1837  001A42  EF25  F00D         	goto	u660
  1838  001A46                     u661:
  1839  001A46  EF2A  F00D         	goto	l1478
  1840  001A4A                     u660:
  1841  001A4A                     l1476:
  1842  001A4A  5003               	movf	fputc@c^0,w,c
  1843  001A4C  ECBB  F00E         	call	_putch
  1844  001A50  EF5D  F00D         	goto	l1034
  1845  001A54                     l1478:
  1846  001A54  EE20 F004          	lfsr	2,4
  1847  001A58  5005               	movf	fputc@fp^0,w,c
  1848  001A5A  26D9               	addwf	fsr2l,f,c
  1849  001A5C  5006               	movf	(fputc@fp+1)^0,w,c
  1850  001A5E  22DA               	addwfc	fsr2h,f,c
  1851  001A60  50DE               	movf	postinc2,w,c
  1852  001A62  10DE               	iorwf	postinc2,w,c
  1853  001A64  B4D8               	btfsc	status,2,c
  1854  001A66  EF37  F00D         	goto	u671
  1855  001A6A  EF39  F00D         	goto	u670
  1856  001A6E                     u671:
  1857  001A6E  EF54  F00D         	goto	l1482
  1858  001A72                     u670:
  1859  001A72  EE20 F004          	lfsr	2,4
  1860  001A76  5005               	movf	fputc@fp^0,w,c
  1861  001A78  26D9               	addwf	fsr2l,f,c
  1862  001A7A  5006               	movf	(fputc@fp+1)^0,w,c
  1863  001A7C  22DA               	addwfc	fsr2h,f,c
  1864  001A7E  EE10 F002          	lfsr	1,2
  1865  001A82  5005               	movf	fputc@fp^0,w,c
  1866  001A84  26E1               	addwf	fsr1l,f,c
  1867  001A86  5006               	movf	(fputc@fp+1)^0,w,c
  1868  001A88  22E2               	addwfc	fsr1h,f,c
  1869  001A8A  50DE               	movf	postinc2,w,c
  1870  001A8C  5CE6               	subwf	postinc1,w,c
  1871  001A8E  50E6               	movf	postinc1,w,c
  1872  001A90  0A80               	xorlw	128
  1873  001A92  6E0B               	movwf	(??_fputc+4)^0,c
  1874  001A94  50DE               	movf	postinc2,w,c
  1875  001A96  0A80               	xorlw	128
  1876  001A98  580B               	subwfb	(??_fputc+4)^0,w,c
  1877  001A9A  B0D8               	btfsc	status,0,c
  1878  001A9C  EF52  F00D         	goto	u681
  1879  001AA0  EF54  F00D         	goto	u680
  1880  001AA4                     u681:
  1881  001AA4  EF5D  F00D         	goto	l1034
  1882  001AA8                     u680:
  1883  001AA8                     l1482:
  1884  001AA8  EE20 F002          	lfsr	2,2
  1885  001AAC  5005               	movf	fputc@fp^0,w,c
  1886  001AAE  26D9               	addwf	fsr2l,f,c
  1887  001AB0  5006               	movf	(fputc@fp+1)^0,w,c
  1888  001AB2  22DA               	addwfc	fsr2h,f,c
  1889  001AB4  2ADE               	incf	postinc2,f,c
  1890  001AB6  0E00               	movlw	0
  1891  001AB8  22DD               	addwfc	postdec2,f,c
  1892  001ABA                     l1034:
  1893  001ABA  0012               	return		;funcret
  1894  001ABC                     __end_of_fputc:
  1895                           	callstack 0
  1896                           
  1897 ;; *************** function _putch *****************
  1898 ;; Defined at:
  1899 ;;		line 175 in file "mcc_generated_files/uart2.c"
  1900 ;; Parameters:    Size  Location     Type
  1901 ;;  txData          1    wreg     unsigned char 
  1902 ;; Auto vars:     Size  Location     Type
  1903 ;;  txData          1    1[COMRAM] unsigned char 
  1904 ;; Return value:  Size  Location     Type
  1905 ;;                  1    wreg      void 
  1906 ;; Registers used:
  1907 ;;		wreg, status,2, cstack
  1908 ;; Tracked objects:
  1909 ;;		On entry : 0/0
  1910 ;;		On exit  : 0/0
  1911 ;;		Unchanged: 0/0
  1912 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1913 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1914 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1915 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1916 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1917 ;;Total ram usage:        1 bytes
  1918 ;; Hardware stack levels used:    1
  1919 ;; Hardware stack levels required when called:    1
  1920 ;; This function calls:
  1921 ;;		_UART2_Write
  1922 ;; This function is called by:
  1923 ;;		_fputc
  1924 ;; This function uses a non-reentrant model
  1925 ;;
  1926                           
  1927                           	psect	text9
  1928  001D76                     __ptext9:
  1929                           	callstack 0
  1930  001D76                     _putch:
  1931                           	callstack 25
  1932                           
  1933                           ;incstack = 0
  1934                           ;putch@txData stored from wreg
  1935  001D76  6E02               	movwf	putch@txData^0,c
  1936  001D78                     
  1937                           ;mcc_generated_files/uart2.c: 175: void putch(char txData);mcc_generated_files/uart2.c: 
      +                          176: {;mcc_generated_files/uart2.c: 177:     UART2_Write(txData);
  1938  001D78  5002               	movf	putch@txData^0,w,c
  1939  001D7A  EC90  F00E         	call	_UART2_Write
  1940  001D7E  0012               	return		;funcret
  1941  001D80                     __end_of_putch:
  1942                           	callstack 0
  1943                           
  1944 ;; *************** function _UART2_Write *****************
  1945 ;; Defined at:
  1946 ;;		line 161 in file "mcc_generated_files/uart2.c"
  1947 ;; Parameters:    Size  Location     Type
  1948 ;;  txData          1    wreg     unsigned char 
  1949 ;; Auto vars:     Size  Location     Type
  1950 ;;  txData          1    0[COMRAM] unsigned char 
  1951 ;; Return value:  Size  Location     Type
  1952 ;;                  1    wreg      void 
  1953 ;; Registers used:
  1954 ;;		wreg
  1955 ;; Tracked objects:
  1956 ;;		On entry : 0/0
  1957 ;;		On exit  : 0/0
  1958 ;;		Unchanged: 0/0
  1959 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1960 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1961 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1962 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1963 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1964 ;;Total ram usage:        1 bytes
  1965 ;; Hardware stack levels used:    1
  1966 ;; This function calls:
  1967 ;;		Nothing
  1968 ;; This function is called by:
  1969 ;;		_putch
  1970 ;; This function uses a non-reentrant model
  1971 ;;
  1972                           
  1973                           	psect	text10
  1974  001D20                     __ptext10:
  1975                           	callstack 0
  1976  001D20                     _UART2_Write:
  1977                           	callstack 25
  1978                           
  1979                           ;incstack = 0
  1980                           ;UART2_Write@txData stored from wreg
  1981  001D20  6E01               	movwf	UART2_Write@txData^0,c
  1982  001D22                     l126:
  1983                           
  1984                           ;mcc_generated_files/uart2.c: 163:     while(0 == PIR6bits.U2TXIF)
  1985  001D22  0139               	movlb	57	; () banked
  1986  001D24  A7A6               	btfss	166,3,b	;volatile
  1987  001D26  EF97  F00E         	goto	u641
  1988  001D2A  EF99  F00E         	goto	u640
  1989  001D2E                     u641:
  1990  001D2E  EF91  F00E         	goto	l126
  1991  001D32                     u640:
  1992  001D32                     
  1993                           ; BSR set to: 57
  1994                           ;mcc_generated_files/uart2.c: 167:     U2TXB = txData;
  1995  001D32  0060  F007  FDD2   	movff	UART2_Write@txData,15826	;volatile
  1996  001D38                     
  1997                           ; BSR set to: 57
  1998  001D38  0012               	return		;funcret
  1999  001D3A                     __end_of_UART2_Write:
  2000                           	callstack 0
  2001                           
  2002 ;; *************** function _abs *****************
  2003 ;; Defined at:
  2004 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\abs.c"
  2005 ;; Parameters:    Size  Location     Type
  2006 ;;  a               2   18[COMRAM] int 
  2007 ;; Auto vars:     Size  Location     Type
  2008 ;;		None
  2009 ;; Return value:  Size  Location     Type
  2010 ;;                  2   18[COMRAM] int 
  2011 ;; Registers used:
  2012 ;;		wreg, status,2, status,0
  2013 ;; Tracked objects:
  2014 ;;		On entry : 0/0
  2015 ;;		On exit  : 0/0
  2016 ;;		Unchanged: 0/0
  2017 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2018 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2019 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2020 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2021 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2022 ;;Total ram usage:        4 bytes
  2023 ;; Hardware stack levels used:    1
  2024 ;; This function calls:
  2025 ;;		Nothing
  2026 ;; This function is called by:
  2027 ;;		_dtoa
  2028 ;; This function uses a non-reentrant model
  2029 ;;
  2030                           
  2031                           	psect	text11
  2032  001C5A                     __ptext11:
  2033                           	callstack 0
  2034  001C5A                     _abs:
  2035                           	callstack 26
  2036  001C5A  BE14               	btfsc	(abs@a+1)^0,7,c
  2037  001C5C  EF3A  F00E         	goto	u880
  2038  001C60  5014               	movf	(abs@a+1)^0,w,c
  2039  001C62  E106               	bnz	u881
  2040  001C64  0413               	decf	abs@a^0,w,c
  2041  001C66  B0D8               	btfsc	status,0,c
  2042  001C68  EF38  F00E         	goto	u881
  2043  001C6C  EF3A  F00E         	goto	u880
  2044  001C70                     u881:
  2045  001C70  EF48  F00E         	goto	l1019
  2046  001C74                     u880:
  2047  001C74  C013  F015         	movff	abs@a,??_abs
  2048  001C78  C014  F016         	movff	abs@a+1,??_abs+1
  2049  001C7C  1E15               	comf	??_abs^0,f,c
  2050  001C7E  1E16               	comf	(??_abs+1)^0,f,c
  2051  001C80  4A15               	infsnz	??_abs^0,f,c
  2052  001C82  2A16               	incf	(??_abs+1)^0,f,c
  2053  001C84  C015  F013         	movff	??_abs,?_abs
  2054  001C88  C016  F014         	movff	??_abs+1,?_abs+1
  2055  001C8C  EF4C  F00E         	goto	l1022
  2056  001C90                     l1019:
  2057  001C90  C013  F013         	movff	abs@a,?_abs
  2058  001C94  C014  F014         	movff	abs@a+1,?_abs+1
  2059  001C98                     l1022:
  2060  001C98  0012               	return		;funcret
  2061  001C9A                     __end_of_abs:
  2062                           	callstack 0
  2063                           
  2064 ;; *************** function ___aomod *****************
  2065 ;; Defined at:
  2066 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\aomod.c"
  2067 ;; Parameters:    Size  Location     Type
  2068 ;;  dividend        8    0[COMRAM] long long 
  2069 ;;  divisor         8    8[COMRAM] long long 
  2070 ;; Auto vars:     Size  Location     Type
  2071 ;;  sign            1   17[COMRAM] unsigned char 
  2072 ;;  counter         1   16[COMRAM] unsigned char 
  2073 ;; Return value:  Size  Location     Type
  2074 ;;                  8    0[COMRAM] long long 
  2075 ;; Registers used:
  2076 ;;		wreg, status,2, status,0
  2077 ;; Tracked objects:
  2078 ;;		On entry : 0/0
  2079 ;;		On exit  : 0/0
  2080 ;;		Unchanged: 0/0
  2081 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2082 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2083 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2084 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2085 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2086 ;;Total ram usage:       18 bytes
  2087 ;; Hardware stack levels used:    1
  2088 ;; This function calls:
  2089 ;;		Nothing
  2090 ;; This function is called by:
  2091 ;;		_dtoa
  2092 ;; This function uses a non-reentrant model
  2093 ;;
  2094                           
  2095                           	psect	text12
  2096  0016AC                     __ptext12:
  2097                           	callstack 0
  2098  0016AC                     ___aomod:
  2099                           	callstack 26
  2100  0016AC  0E00               	movlw	0
  2101  0016AE  6E12               	movwf	___aomod@sign^0,c
  2102  0016B0  BE08               	btfsc	(___aomod@dividend+7)^0,7,c
  2103  0016B2  EF5F  F00B         	goto	u780
  2104  0016B6  EF5D  F00B         	goto	u781
  2105  0016BA                     u781:
  2106  0016BA  EF71  F00B         	goto	l1556
  2107  0016BE                     u780:
  2108  0016BE  1E08               	comf	(___aomod@dividend+7)^0,f,c
  2109  0016C0  1E07               	comf	(___aomod@dividend+6)^0,f,c
  2110  0016C2  1E06               	comf	(___aomod@dividend+5)^0,f,c
  2111  0016C4  1E05               	comf	(___aomod@dividend+4)^0,f,c
  2112  0016C6  1E04               	comf	(___aomod@dividend+3)^0,f,c
  2113  0016C8  1E03               	comf	(___aomod@dividend+2)^0,f,c
  2114  0016CA  1E02               	comf	(___aomod@dividend+1)^0,f,c
  2115  0016CC  6C01               	negf	___aomod@dividend^0,c
  2116  0016CE  0E00               	movlw	0
  2117  0016D0  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  2118  0016D2  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  2119  0016D4  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  2120  0016D6  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  2121  0016D8  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  2122  0016DA  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  2123  0016DC  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  2124  0016DE  0E01               	movlw	1
  2125  0016E0  6E12               	movwf	___aomod@sign^0,c
  2126  0016E2                     l1556:
  2127  0016E2  BE10               	btfsc	(___aomod@divisor+7)^0,7,c
  2128  0016E4  EF78  F00B         	goto	u790
  2129  0016E8  EF76  F00B         	goto	u791
  2130  0016EC                     u791:
  2131  0016EC  EF88  F00B         	goto	l1560
  2132  0016F0                     u790:
  2133  0016F0  1E10               	comf	(___aomod@divisor+7)^0,f,c
  2134  0016F2  1E0F               	comf	(___aomod@divisor+6)^0,f,c
  2135  0016F4  1E0E               	comf	(___aomod@divisor+5)^0,f,c
  2136  0016F6  1E0D               	comf	(___aomod@divisor+4)^0,f,c
  2137  0016F8  1E0C               	comf	(___aomod@divisor+3)^0,f,c
  2138  0016FA  1E0B               	comf	(___aomod@divisor+2)^0,f,c
  2139  0016FC  1E0A               	comf	(___aomod@divisor+1)^0,f,c
  2140  0016FE  6C09               	negf	___aomod@divisor^0,c
  2141  001700  0E00               	movlw	0
  2142  001702  220A               	addwfc	(___aomod@divisor+1)^0,f,c
  2143  001704  220B               	addwfc	(___aomod@divisor+2)^0,f,c
  2144  001706  220C               	addwfc	(___aomod@divisor+3)^0,f,c
  2145  001708  220D               	addwfc	(___aomod@divisor+4)^0,f,c
  2146  00170A  220E               	addwfc	(___aomod@divisor+5)^0,f,c
  2147  00170C  220F               	addwfc	(___aomod@divisor+6)^0,f,c
  2148  00170E  2210               	addwfc	(___aomod@divisor+7)^0,f,c
  2149  001710                     l1560:
  2150  001710  5009               	movf	___aomod@divisor^0,w,c
  2151  001712  100A               	iorwf	(___aomod@divisor+1)^0,w,c
  2152  001714  100B               	iorwf	(___aomod@divisor+2)^0,w,c
  2153  001716  100C               	iorwf	(___aomod@divisor+3)^0,w,c
  2154  001718  100D               	iorwf	(___aomod@divisor+4)^0,w,c
  2155  00171A  100E               	iorwf	(___aomod@divisor+5)^0,w,c
  2156  00171C  100F               	iorwf	(___aomod@divisor+6)^0,w,c
  2157  00171E  1010               	iorwf	(___aomod@divisor+7)^0,w,c
  2158  001720  B4D8               	btfsc	status,2,c
  2159  001722  EF95  F00B         	goto	u801
  2160  001726  EF97  F00B         	goto	u800
  2161  00172A                     u801:
  2162  00172A  EFDF  F00B         	goto	l1576
  2163  00172E                     u800:
  2164  00172E  0E01               	movlw	1
  2165  001730  6E11               	movwf	___aomod@counter^0,c
  2166  001732  EFA5  F00B         	goto	l1566
  2167  001736                     l1564:
  2168  001736  90D8               	bcf	status,0,c
  2169  001738  3609               	rlcf	___aomod@divisor^0,f,c
  2170  00173A  360A               	rlcf	(___aomod@divisor+1)^0,f,c
  2171  00173C  360B               	rlcf	(___aomod@divisor+2)^0,f,c
  2172  00173E  360C               	rlcf	(___aomod@divisor+3)^0,f,c
  2173  001740  360D               	rlcf	(___aomod@divisor+4)^0,f,c
  2174  001742  360E               	rlcf	(___aomod@divisor+5)^0,f,c
  2175  001744  360F               	rlcf	(___aomod@divisor+6)^0,f,c
  2176  001746  3610               	rlcf	(___aomod@divisor+7)^0,f,c
  2177  001748  2A11               	incf	___aomod@counter^0,f,c
  2178  00174A                     l1566:
  2179  00174A  AE10               	btfss	(___aomod@divisor+7)^0,7,c
  2180  00174C  EFAA  F00B         	goto	u811
  2181  001750  EFAC  F00B         	goto	u810
  2182  001754                     u811:
  2183  001754  EF9B  F00B         	goto	l1564
  2184  001758                     u810:
  2185  001758                     l1568:
  2186  001758  5009               	movf	___aomod@divisor^0,w,c
  2187  00175A  5C01               	subwf	___aomod@dividend^0,w,c
  2188  00175C  500A               	movf	(___aomod@divisor+1)^0,w,c
  2189  00175E  5802               	subwfb	(___aomod@dividend+1)^0,w,c
  2190  001760  500B               	movf	(___aomod@divisor+2)^0,w,c
  2191  001762  5803               	subwfb	(___aomod@dividend+2)^0,w,c
  2192  001764  500C               	movf	(___aomod@divisor+3)^0,w,c
  2193  001766  5804               	subwfb	(___aomod@dividend+3)^0,w,c
  2194  001768  500D               	movf	(___aomod@divisor+4)^0,w,c
  2195  00176A  5805               	subwfb	(___aomod@dividend+4)^0,w,c
  2196  00176C  500E               	movf	(___aomod@divisor+5)^0,w,c
  2197  00176E  5806               	subwfb	(___aomod@dividend+5)^0,w,c
  2198  001770  500F               	movf	(___aomod@divisor+6)^0,w,c
  2199  001772  5807               	subwfb	(___aomod@dividend+6)^0,w,c
  2200  001774  5010               	movf	(___aomod@divisor+7)^0,w,c
  2201  001776  5808               	subwfb	(___aomod@dividend+7)^0,w,c
  2202  001778  A0D8               	btfss	status,0,c
  2203  00177A  EFC1  F00B         	goto	u821
  2204  00177E  EFC3  F00B         	goto	u820
  2205  001782                     u821:
  2206  001782  EFD3  F00B         	goto	l1572
  2207  001786                     u820:
  2208  001786  5009               	movf	___aomod@divisor^0,w,c
  2209  001788  5E01               	subwf	___aomod@dividend^0,f,c
  2210  00178A  500A               	movf	(___aomod@divisor+1)^0,w,c
  2211  00178C  5A02               	subwfb	(___aomod@dividend+1)^0,f,c
  2212  00178E  500B               	movf	(___aomod@divisor+2)^0,w,c
  2213  001790  5A03               	subwfb	(___aomod@dividend+2)^0,f,c
  2214  001792  500C               	movf	(___aomod@divisor+3)^0,w,c
  2215  001794  5A04               	subwfb	(___aomod@dividend+3)^0,f,c
  2216  001796  500D               	movf	(___aomod@divisor+4)^0,w,c
  2217  001798  5A05               	subwfb	(___aomod@dividend+4)^0,f,c
  2218  00179A  500E               	movf	(___aomod@divisor+5)^0,w,c
  2219  00179C  5A06               	subwfb	(___aomod@dividend+5)^0,f,c
  2220  00179E  500F               	movf	(___aomod@divisor+6)^0,w,c
  2221  0017A0  5A07               	subwfb	(___aomod@dividend+6)^0,f,c
  2222  0017A2  5010               	movf	(___aomod@divisor+7)^0,w,c
  2223  0017A4  5A08               	subwfb	(___aomod@dividend+7)^0,f,c
  2224  0017A6                     l1572:
  2225  0017A6  90D8               	bcf	status,0,c
  2226  0017A8  3210               	rrcf	(___aomod@divisor+7)^0,f,c
  2227  0017AA  320F               	rrcf	(___aomod@divisor+6)^0,f,c
  2228  0017AC  320E               	rrcf	(___aomod@divisor+5)^0,f,c
  2229  0017AE  320D               	rrcf	(___aomod@divisor+4)^0,f,c
  2230  0017B0  320C               	rrcf	(___aomod@divisor+3)^0,f,c
  2231  0017B2  320B               	rrcf	(___aomod@divisor+2)^0,f,c
  2232  0017B4  320A               	rrcf	(___aomod@divisor+1)^0,f,c
  2233  0017B6  3209               	rrcf	___aomod@divisor^0,f,c
  2234  0017B8  2E11               	decfsz	___aomod@counter^0,f,c
  2235  0017BA  EFAC  F00B         	goto	l1568
  2236  0017BE                     l1576:
  2237  0017BE  5012               	movf	___aomod@sign^0,w,c
  2238  0017C0  B4D8               	btfsc	status,2,c
  2239  0017C2  EFE5  F00B         	goto	u831
  2240  0017C6  EFE7  F00B         	goto	u830
  2241  0017CA                     u831:
  2242  0017CA  EFF7  F00B         	goto	l1580
  2243  0017CE                     u830:
  2244  0017CE  1E08               	comf	(___aomod@dividend+7)^0,f,c
  2245  0017D0  1E07               	comf	(___aomod@dividend+6)^0,f,c
  2246  0017D2  1E06               	comf	(___aomod@dividend+5)^0,f,c
  2247  0017D4  1E05               	comf	(___aomod@dividend+4)^0,f,c
  2248  0017D6  1E04               	comf	(___aomod@dividend+3)^0,f,c
  2249  0017D8  1E03               	comf	(___aomod@dividend+2)^0,f,c
  2250  0017DA  1E02               	comf	(___aomod@dividend+1)^0,f,c
  2251  0017DC  6C01               	negf	___aomod@dividend^0,c
  2252  0017DE  0E00               	movlw	0
  2253  0017E0  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  2254  0017E2  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  2255  0017E4  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  2256  0017E6  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  2257  0017E8  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  2258  0017EA  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  2259  0017EC  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  2260  0017EE                     l1580:
  2261  0017EE  C001  F001         	movff	___aomod@dividend,?___aomod
  2262  0017F2  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
  2263  0017F6  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
  2264  0017FA  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
  2265  0017FE  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
  2266  001802  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
  2267  001806  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
  2268  00180A  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
  2269  00180E  0012               	return		;funcret
  2270  001810                     __end_of___aomod:
  2271                           	callstack 0
  2272                           
  2273 ;; *************** function ___aodiv *****************
  2274 ;; Defined at:
  2275 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\aodiv.c"
  2276 ;; Parameters:    Size  Location     Type
  2277 ;;  dividend        8    0[COMRAM] long long 
  2278 ;;  divisor         8    8[COMRAM] long long 
  2279 ;; Auto vars:     Size  Location     Type
  2280 ;;  quotient        8   18[COMRAM] long long 
  2281 ;;  sign            1   17[COMRAM] unsigned char 
  2282 ;;  counter         1   16[COMRAM] unsigned char 
  2283 ;; Return value:  Size  Location     Type
  2284 ;;                  8    0[COMRAM] long long 
  2285 ;; Registers used:
  2286 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2287 ;; Tracked objects:
  2288 ;;		On entry : 0/0
  2289 ;;		On exit  : 0/0
  2290 ;;		Unchanged: 0/0
  2291 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2292 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2293 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2294 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2295 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2296 ;;Total ram usage:       26 bytes
  2297 ;; Hardware stack levels used:    1
  2298 ;; This function calls:
  2299 ;;		Nothing
  2300 ;; This function is called by:
  2301 ;;		_dtoa
  2302 ;; This function uses a non-reentrant model
  2303 ;;
  2304                           
  2305                           	psect	text13
  2306  001524                     __ptext13:
  2307                           	callstack 0
  2308  001524                     ___aodiv:
  2309                           	callstack 26
  2310  001524  0E00               	movlw	0
  2311  001526  6E12               	movwf	___aodiv@sign^0,c
  2312  001528  BE10               	btfsc	(___aodiv@divisor+7)^0,7,c
  2313  00152A  EF9B  F00A         	goto	u710
  2314  00152E  EF99  F00A         	goto	u711
  2315  001532                     u711:
  2316  001532  EFAD  F00A         	goto	l1512
  2317  001536                     u710:
  2318  001536  1E10               	comf	(___aodiv@divisor+7)^0,f,c
  2319  001538  1E0F               	comf	(___aodiv@divisor+6)^0,f,c
  2320  00153A  1E0E               	comf	(___aodiv@divisor+5)^0,f,c
  2321  00153C  1E0D               	comf	(___aodiv@divisor+4)^0,f,c
  2322  00153E  1E0C               	comf	(___aodiv@divisor+3)^0,f,c
  2323  001540  1E0B               	comf	(___aodiv@divisor+2)^0,f,c
  2324  001542  1E0A               	comf	(___aodiv@divisor+1)^0,f,c
  2325  001544  6C09               	negf	___aodiv@divisor^0,c
  2326  001546  0E00               	movlw	0
  2327  001548  220A               	addwfc	(___aodiv@divisor+1)^0,f,c
  2328  00154A  220B               	addwfc	(___aodiv@divisor+2)^0,f,c
  2329  00154C  220C               	addwfc	(___aodiv@divisor+3)^0,f,c
  2330  00154E  220D               	addwfc	(___aodiv@divisor+4)^0,f,c
  2331  001550  220E               	addwfc	(___aodiv@divisor+5)^0,f,c
  2332  001552  220F               	addwfc	(___aodiv@divisor+6)^0,f,c
  2333  001554  2210               	addwfc	(___aodiv@divisor+7)^0,f,c
  2334  001556  0E01               	movlw	1
  2335  001558  6E12               	movwf	___aodiv@sign^0,c
  2336  00155A                     l1512:
  2337  00155A  BE08               	btfsc	(___aodiv@dividend+7)^0,7,c
  2338  00155C  EFB4  F00A         	goto	u720
  2339  001560  EFB2  F00A         	goto	u721
  2340  001564                     u721:
  2341  001564  EFC6  F00A         	goto	l1518
  2342  001568                     u720:
  2343  001568  1E08               	comf	(___aodiv@dividend+7)^0,f,c
  2344  00156A  1E07               	comf	(___aodiv@dividend+6)^0,f,c
  2345  00156C  1E06               	comf	(___aodiv@dividend+5)^0,f,c
  2346  00156E  1E05               	comf	(___aodiv@dividend+4)^0,f,c
  2347  001570  1E04               	comf	(___aodiv@dividend+3)^0,f,c
  2348  001572  1E03               	comf	(___aodiv@dividend+2)^0,f,c
  2349  001574  1E02               	comf	(___aodiv@dividend+1)^0,f,c
  2350  001576  6C01               	negf	___aodiv@dividend^0,c
  2351  001578  0E00               	movlw	0
  2352  00157A  2202               	addwfc	(___aodiv@dividend+1)^0,f,c
  2353  00157C  2203               	addwfc	(___aodiv@dividend+2)^0,f,c
  2354  00157E  2204               	addwfc	(___aodiv@dividend+3)^0,f,c
  2355  001580  2205               	addwfc	(___aodiv@dividend+4)^0,f,c
  2356  001582  2206               	addwfc	(___aodiv@dividend+5)^0,f,c
  2357  001584  2207               	addwfc	(___aodiv@dividend+6)^0,f,c
  2358  001586  2208               	addwfc	(___aodiv@dividend+7)^0,f,c
  2359  001588  0E01               	movlw	1
  2360  00158A  1A12               	xorwf	___aodiv@sign^0,f,c
  2361  00158C                     l1518:
  2362  00158C  EE20  F013         	lfsr	2,___aodiv@quotient
  2363  001590  0E07               	movlw	7
  2364  001592                     u731:
  2365  001592  6ADE               	clrf	postinc2,c
  2366  001594  06E8               	decf	wreg,f,c
  2367  001596  E2FD               	bc	u731
  2368  001598  5009               	movf	___aodiv@divisor^0,w,c
  2369  00159A  100A               	iorwf	(___aodiv@divisor+1)^0,w,c
  2370  00159C  100B               	iorwf	(___aodiv@divisor+2)^0,w,c
  2371  00159E  100C               	iorwf	(___aodiv@divisor+3)^0,w,c
  2372  0015A0  100D               	iorwf	(___aodiv@divisor+4)^0,w,c
  2373  0015A2  100E               	iorwf	(___aodiv@divisor+5)^0,w,c
  2374  0015A4  100F               	iorwf	(___aodiv@divisor+6)^0,w,c
  2375  0015A6  1010               	iorwf	(___aodiv@divisor+7)^0,w,c
  2376  0015A8  B4D8               	btfsc	status,2,c
  2377  0015AA  EFD9  F00A         	goto	u741
  2378  0015AE  EFDB  F00A         	goto	u740
  2379  0015B2                     u741:
  2380  0015B2  EF2D  F00B         	goto	l1540
  2381  0015B6                     u740:
  2382  0015B6  0E01               	movlw	1
  2383  0015B8  6E11               	movwf	___aodiv@counter^0,c
  2384  0015BA  EFE9  F00A         	goto	l1526
  2385  0015BE                     l1524:
  2386  0015BE  90D8               	bcf	status,0,c
  2387  0015C0  3609               	rlcf	___aodiv@divisor^0,f,c
  2388  0015C2  360A               	rlcf	(___aodiv@divisor+1)^0,f,c
  2389  0015C4  360B               	rlcf	(___aodiv@divisor+2)^0,f,c
  2390  0015C6  360C               	rlcf	(___aodiv@divisor+3)^0,f,c
  2391  0015C8  360D               	rlcf	(___aodiv@divisor+4)^0,f,c
  2392  0015CA  360E               	rlcf	(___aodiv@divisor+5)^0,f,c
  2393  0015CC  360F               	rlcf	(___aodiv@divisor+6)^0,f,c
  2394  0015CE  3610               	rlcf	(___aodiv@divisor+7)^0,f,c
  2395  0015D0  2A11               	incf	___aodiv@counter^0,f,c
  2396  0015D2                     l1526:
  2397  0015D2  AE10               	btfss	(___aodiv@divisor+7)^0,7,c
  2398  0015D4  EFEE  F00A         	goto	u751
  2399  0015D8  EFF0  F00A         	goto	u750
  2400  0015DC                     u751:
  2401  0015DC  EFDF  F00A         	goto	l1524
  2402  0015E0                     u750:
  2403  0015E0                     l1528:
  2404  0015E0  90D8               	bcf	status,0,c
  2405  0015E2  3613               	rlcf	___aodiv@quotient^0,f,c
  2406  0015E4  3614               	rlcf	(___aodiv@quotient+1)^0,f,c
  2407  0015E6  3615               	rlcf	(___aodiv@quotient+2)^0,f,c
  2408  0015E8  3616               	rlcf	(___aodiv@quotient+3)^0,f,c
  2409  0015EA  3617               	rlcf	(___aodiv@quotient+4)^0,f,c
  2410  0015EC  3618               	rlcf	(___aodiv@quotient+5)^0,f,c
  2411  0015EE  3619               	rlcf	(___aodiv@quotient+6)^0,f,c
  2412  0015F0  361A               	rlcf	(___aodiv@quotient+7)^0,f,c
  2413  0015F2  5009               	movf	___aodiv@divisor^0,w,c
  2414  0015F4  5C01               	subwf	___aodiv@dividend^0,w,c
  2415  0015F6  500A               	movf	(___aodiv@divisor+1)^0,w,c
  2416  0015F8  5802               	subwfb	(___aodiv@dividend+1)^0,w,c
  2417  0015FA  500B               	movf	(___aodiv@divisor+2)^0,w,c
  2418  0015FC  5803               	subwfb	(___aodiv@dividend+2)^0,w,c
  2419  0015FE  500C               	movf	(___aodiv@divisor+3)^0,w,c
  2420  001600  5804               	subwfb	(___aodiv@dividend+3)^0,w,c
  2421  001602  500D               	movf	(___aodiv@divisor+4)^0,w,c
  2422  001604  5805               	subwfb	(___aodiv@dividend+4)^0,w,c
  2423  001606  500E               	movf	(___aodiv@divisor+5)^0,w,c
  2424  001608  5806               	subwfb	(___aodiv@dividend+5)^0,w,c
  2425  00160A  500F               	movf	(___aodiv@divisor+6)^0,w,c
  2426  00160C  5807               	subwfb	(___aodiv@dividend+6)^0,w,c
  2427  00160E  5010               	movf	(___aodiv@divisor+7)^0,w,c
  2428  001610  5808               	subwfb	(___aodiv@dividend+7)^0,w,c
  2429  001612  A0D8               	btfss	status,0,c
  2430  001614  EF0E  F00B         	goto	u761
  2431  001618  EF10  F00B         	goto	u760
  2432  00161C                     u761:
  2433  00161C  EF21  F00B         	goto	l1536
  2434  001620                     u760:
  2435  001620  5009               	movf	___aodiv@divisor^0,w,c
  2436  001622  5E01               	subwf	___aodiv@dividend^0,f,c
  2437  001624  500A               	movf	(___aodiv@divisor+1)^0,w,c
  2438  001626  5A02               	subwfb	(___aodiv@dividend+1)^0,f,c
  2439  001628  500B               	movf	(___aodiv@divisor+2)^0,w,c
  2440  00162A  5A03               	subwfb	(___aodiv@dividend+2)^0,f,c
  2441  00162C  500C               	movf	(___aodiv@divisor+3)^0,w,c
  2442  00162E  5A04               	subwfb	(___aodiv@dividend+3)^0,f,c
  2443  001630  500D               	movf	(___aodiv@divisor+4)^0,w,c
  2444  001632  5A05               	subwfb	(___aodiv@dividend+4)^0,f,c
  2445  001634  500E               	movf	(___aodiv@divisor+5)^0,w,c
  2446  001636  5A06               	subwfb	(___aodiv@dividend+5)^0,f,c
  2447  001638  500F               	movf	(___aodiv@divisor+6)^0,w,c
  2448  00163A  5A07               	subwfb	(___aodiv@dividend+6)^0,f,c
  2449  00163C  5010               	movf	(___aodiv@divisor+7)^0,w,c
  2450  00163E  5A08               	subwfb	(___aodiv@dividend+7)^0,f,c
  2451  001640  8013               	bsf	___aodiv@quotient^0,0,c
  2452  001642                     l1536:
  2453  001642  90D8               	bcf	status,0,c
  2454  001644  3210               	rrcf	(___aodiv@divisor+7)^0,f,c
  2455  001646  320F               	rrcf	(___aodiv@divisor+6)^0,f,c
  2456  001648  320E               	rrcf	(___aodiv@divisor+5)^0,f,c
  2457  00164A  320D               	rrcf	(___aodiv@divisor+4)^0,f,c
  2458  00164C  320C               	rrcf	(___aodiv@divisor+3)^0,f,c
  2459  00164E  320B               	rrcf	(___aodiv@divisor+2)^0,f,c
  2460  001650  320A               	rrcf	(___aodiv@divisor+1)^0,f,c
  2461  001652  3209               	rrcf	___aodiv@divisor^0,f,c
  2462  001654  2E11               	decfsz	___aodiv@counter^0,f,c
  2463  001656  EFF0  F00A         	goto	l1528
  2464  00165A                     l1540:
  2465  00165A  5012               	movf	___aodiv@sign^0,w,c
  2466  00165C  B4D8               	btfsc	status,2,c
  2467  00165E  EF33  F00B         	goto	u771
  2468  001662  EF35  F00B         	goto	u770
  2469  001666                     u771:
  2470  001666  EF45  F00B         	goto	l1544
  2471  00166A                     u770:
  2472  00166A  1E1A               	comf	(___aodiv@quotient+7)^0,f,c
  2473  00166C  1E19               	comf	(___aodiv@quotient+6)^0,f,c
  2474  00166E  1E18               	comf	(___aodiv@quotient+5)^0,f,c
  2475  001670  1E17               	comf	(___aodiv@quotient+4)^0,f,c
  2476  001672  1E16               	comf	(___aodiv@quotient+3)^0,f,c
  2477  001674  1E15               	comf	(___aodiv@quotient+2)^0,f,c
  2478  001676  1E14               	comf	(___aodiv@quotient+1)^0,f,c
  2479  001678  6C13               	negf	___aodiv@quotient^0,c
  2480  00167A  0E00               	movlw	0
  2481  00167C  2214               	addwfc	(___aodiv@quotient+1)^0,f,c
  2482  00167E  2215               	addwfc	(___aodiv@quotient+2)^0,f,c
  2483  001680  2216               	addwfc	(___aodiv@quotient+3)^0,f,c
  2484  001682  2217               	addwfc	(___aodiv@quotient+4)^0,f,c
  2485  001684  2218               	addwfc	(___aodiv@quotient+5)^0,f,c
  2486  001686  2219               	addwfc	(___aodiv@quotient+6)^0,f,c
  2487  001688  221A               	addwfc	(___aodiv@quotient+7)^0,f,c
  2488  00168A                     l1544:
  2489  00168A  C013  F001         	movff	___aodiv@quotient,?___aodiv
  2490  00168E  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
  2491  001692  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
  2492  001696  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
  2493  00169A  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
  2494  00169E  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
  2495  0016A2  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
  2496  0016A6  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
  2497  0016AA  0012               	return		;funcret
  2498  0016AC                     __end_of___aodiv:
  2499                           	callstack 0
  2500                           
  2501 ;; *************** function ___awmod *****************
  2502 ;; Defined at:
  2503 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\awmod.c"
  2504 ;; Parameters:    Size  Location     Type
  2505 ;;  dividend        2    0[COMRAM] int 
  2506 ;;  divisor         2    2[COMRAM] int 
  2507 ;; Auto vars:     Size  Location     Type
  2508 ;;  sign            1    5[COMRAM] unsigned char 
  2509 ;;  counter         1    4[COMRAM] unsigned char 
  2510 ;; Return value:  Size  Location     Type
  2511 ;;                  2    0[COMRAM] int 
  2512 ;; Registers used:
  2513 ;;		wreg, status,2, status,0
  2514 ;; Tracked objects:
  2515 ;;		On entry : 0/0
  2516 ;;		On exit  : 0/0
  2517 ;;		Unchanged: 0/0
  2518 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2519 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2520 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2521 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2522 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2523 ;;Total ram usage:        6 bytes
  2524 ;; Hardware stack levels used:    1
  2525 ;; This function calls:
  2526 ;;		Nothing
  2527 ;; This function is called by:
  2528 ;;		_main
  2529 ;; This function uses a non-reentrant model
  2530 ;;
  2531                           
  2532                           	psect	text14
  2533  0018D6                     __ptext14:
  2534                           	callstack 0
  2535  0018D6                     ___awmod:
  2536                           	callstack 30
  2537  0018D6  0E00               	movlw	0
  2538  0018D8  6E06               	movwf	___awmod@sign^0,c
  2539  0018DA  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
  2540  0018DC  EF74  F00C         	goto	u1160
  2541  0018E0  EF72  F00C         	goto	u1161
  2542  0018E4                     u1161:
  2543  0018E4  EF7A  F00C         	goto	l1780
  2544  0018E8                     u1160:
  2545  0018E8  6C01               	negf	___awmod@dividend^0,c
  2546  0018EA  1E02               	comf	(___awmod@dividend+1)^0,f,c
  2547  0018EC  B0D8               	btfsc	status,0,c
  2548  0018EE  2A02               	incf	(___awmod@dividend+1)^0,f,c
  2549  0018F0  0E01               	movlw	1
  2550  0018F2  6E06               	movwf	___awmod@sign^0,c
  2551  0018F4                     l1780:
  2552  0018F4  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
  2553  0018F6  EF81  F00C         	goto	u1170
  2554  0018FA  EF7F  F00C         	goto	u1171
  2555  0018FE                     u1171:
  2556  0018FE  EF85  F00C         	goto	l1784
  2557  001902                     u1170:
  2558  001902  6C03               	negf	___awmod@divisor^0,c
  2559  001904  1E04               	comf	(___awmod@divisor+1)^0,f,c
  2560  001906  B0D8               	btfsc	status,0,c
  2561  001908  2A04               	incf	(___awmod@divisor+1)^0,f,c
  2562  00190A                     l1784:
  2563  00190A  5003               	movf	___awmod@divisor^0,w,c
  2564  00190C  1004               	iorwf	(___awmod@divisor+1)^0,w,c
  2565  00190E  B4D8               	btfsc	status,2,c
  2566  001910  EF8C  F00C         	goto	u1181
  2567  001914  EF8E  F00C         	goto	u1180
  2568  001918                     u1181:
  2569  001918  EFB2  F00C         	goto	l1800
  2570  00191C                     u1180:
  2571  00191C  0E01               	movlw	1
  2572  00191E  6E05               	movwf	___awmod@counter^0,c
  2573  001920  EF96  F00C         	goto	l1790
  2574  001924                     l1788:
  2575  001924  90D8               	bcf	status,0,c
  2576  001926  3603               	rlcf	___awmod@divisor^0,f,c
  2577  001928  3604               	rlcf	(___awmod@divisor+1)^0,f,c
  2578  00192A  2A05               	incf	___awmod@counter^0,f,c
  2579  00192C                     l1790:
  2580  00192C  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  2581  00192E  EF9B  F00C         	goto	u1191
  2582  001932  EF9D  F00C         	goto	u1190
  2583  001936                     u1191:
  2584  001936  EF92  F00C         	goto	l1788
  2585  00193A                     u1190:
  2586  00193A                     l1792:
  2587  00193A  5003               	movf	___awmod@divisor^0,w,c
  2588  00193C  5C01               	subwf	___awmod@dividend^0,w,c
  2589  00193E  5004               	movf	(___awmod@divisor+1)^0,w,c
  2590  001940  5802               	subwfb	(___awmod@dividend+1)^0,w,c
  2591  001942  A0D8               	btfss	status,0,c
  2592  001944  EFA6  F00C         	goto	u1201
  2593  001948  EFA8  F00C         	goto	u1200
  2594  00194C                     u1201:
  2595  00194C  EFAC  F00C         	goto	l1796
  2596  001950                     u1200:
  2597  001950  5003               	movf	___awmod@divisor^0,w,c
  2598  001952  5E01               	subwf	___awmod@dividend^0,f,c
  2599  001954  5004               	movf	(___awmod@divisor+1)^0,w,c
  2600  001956  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
  2601  001958                     l1796:
  2602  001958  90D8               	bcf	status,0,c
  2603  00195A  3204               	rrcf	(___awmod@divisor+1)^0,f,c
  2604  00195C  3203               	rrcf	___awmod@divisor^0,f,c
  2605  00195E  2E05               	decfsz	___awmod@counter^0,f,c
  2606  001960  EF9D  F00C         	goto	l1792
  2607  001964                     l1800:
  2608  001964  5006               	movf	___awmod@sign^0,w,c
  2609  001966  B4D8               	btfsc	status,2,c
  2610  001968  EFB8  F00C         	goto	u1211
  2611  00196C  EFBA  F00C         	goto	u1210
  2612  001970                     u1211:
  2613  001970  EFBE  F00C         	goto	l1804
  2614  001974                     u1210:
  2615  001974  6C01               	negf	___awmod@dividend^0,c
  2616  001976  1E02               	comf	(___awmod@dividend+1)^0,f,c
  2617  001978  B0D8               	btfsc	status,0,c
  2618  00197A  2A02               	incf	(___awmod@dividend+1)^0,f,c
  2619  00197C                     l1804:
  2620  00197C  C001  F001         	movff	___awmod@dividend,?___awmod
  2621  001980  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  2622  001984  0012               	return		;funcret
  2623  001986                     __end_of___awmod:
  2624                           	callstack 0
  2625                           
  2626 ;; *************** function _SYSTEM_Initialize *****************
  2627 ;; Defined at:
  2628 ;;		line 50 in file "mcc_generated_files/mcc.c"
  2629 ;; Parameters:    Size  Location     Type
  2630 ;;		None
  2631 ;; Auto vars:     Size  Location     Type
  2632 ;;		None
  2633 ;; Return value:  Size  Location     Type
  2634 ;;                  1    wreg      void 
  2635 ;; Registers used:
  2636 ;;		wreg, status,2, status,0, cstack
  2637 ;; Tracked objects:
  2638 ;;		On entry : 0/0
  2639 ;;		On exit  : 0/0
  2640 ;;		Unchanged: 0/0
  2641 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2642 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2643 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2644 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2645 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2646 ;;Total ram usage:        0 bytes
  2647 ;; Hardware stack levels used:    1
  2648 ;; Hardware stack levels required when called:    2
  2649 ;; This function calls:
  2650 ;;		_OSCILLATOR_Initialize
  2651 ;;		_PIN_MANAGER_Initialize
  2652 ;;		_PMD_Initialize
  2653 ;;		_UART2_Initialize
  2654 ;; This function is called by:
  2655 ;;		_main
  2656 ;; This function uses a non-reentrant model
  2657 ;;
  2658                           
  2659                           	psect	text15
  2660  001D64                     __ptext15:
  2661                           	callstack 0
  2662  001D64                     _SYSTEM_Initialize:
  2663                           	callstack 28
  2664  001D64                     
  2665                           ;mcc_generated_files/mcc.c: 52:     PMD_Initialize();
  2666  001D64  EC7E  F00E         	call	_PMD_Initialize	;wreg free
  2667                           
  2668                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
  2669  001D68  EC5E  F00D         	call	_PIN_MANAGER_Initialize	;wreg free
  2670                           
  2671                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
  2672  001D6C  EC9D  F00E         	call	_OSCILLATOR_Initialize	;wreg free
  2673  001D70                     
  2674                           ;mcc_generated_files/mcc.c: 55:     UART2_Initialize();
  2675  001D70  ECDC  F00D         	call	_UART2_Initialize	;wreg free
  2676  001D74  0012               	return		;funcret
  2677  001D76                     __end_of_SYSTEM_Initialize:
  2678                           	callstack 0
  2679                           
  2680 ;; *************** function _UART2_Initialize *****************
  2681 ;; Defined at:
  2682 ;;		line 66 in file "mcc_generated_files/uart2.c"
  2683 ;; Parameters:    Size  Location     Type
  2684 ;;		None
  2685 ;; Auto vars:     Size  Location     Type
  2686 ;;		None
  2687 ;; Return value:  Size  Location     Type
  2688 ;;                  1    wreg      void 
  2689 ;; Registers used:
  2690 ;;		wreg, status,2, status,0, cstack
  2691 ;; Tracked objects:
  2692 ;;		On entry : 0/0
  2693 ;;		On exit  : 0/0
  2694 ;;		Unchanged: 0/0
  2695 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2696 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2697 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2698 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2699 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2700 ;;Total ram usage:        0 bytes
  2701 ;; Hardware stack levels used:    1
  2702 ;; Hardware stack levels required when called:    1
  2703 ;; This function calls:
  2704 ;;		_UART2_SetErrorHandler
  2705 ;;		_UART2_SetFramingErrorHandler
  2706 ;;		_UART2_SetOverrunErrorHandler
  2707 ;; This function is called by:
  2708 ;;		_SYSTEM_Initialize
  2709 ;; This function uses a non-reentrant model
  2710 ;;
  2711                           
  2712                           	psect	text16
  2713  001BB8                     __ptext16:
  2714                           	callstack 0
  2715  001BB8                     _UART2_Initialize:
  2716                           	callstack 28
  2717  001BB8                     
  2718                           ;mcc_generated_files/uart2.c: 73:     U2P1L = 0x00;
  2719  001BB8  0E00               	movlw	0
  2720  001BBA  013D               	movlb	61	; () banked
  2721  001BBC  6FD4               	movwf	212,b	;volatile
  2722                           
  2723                           ;mcc_generated_files/uart2.c: 76:     U2P2L = 0x00;
  2724  001BBE  0E00               	movlw	0
  2725  001BC0  6FD6               	movwf	214,b	;volatile
  2726                           
  2727                           ;mcc_generated_files/uart2.c: 79:     U2P3L = 0x00;
  2728  001BC2  0E00               	movlw	0
  2729  001BC4  6FD8               	movwf	216,b	;volatile
  2730                           
  2731                           ;mcc_generated_files/uart2.c: 82:     U2CON0 = 0xB0;
  2732  001BC6  0EB0               	movlw	176
  2733  001BC8  6FDA               	movwf	218,b	;volatile
  2734                           
  2735                           ;mcc_generated_files/uart2.c: 85:     U2CON1 = 0x80;
  2736  001BCA  0E80               	movlw	128
  2737  001BCC  6FDB               	movwf	219,b	;volatile
  2738                           
  2739                           ;mcc_generated_files/uart2.c: 88:     U2CON2 = 0x00;
  2740  001BCE  0E00               	movlw	0
  2741  001BD0  6FDC               	movwf	220,b	;volatile
  2742                           
  2743                           ;mcc_generated_files/uart2.c: 91:     U2BRGL = 0x19;
  2744  001BD2  0E19               	movlw	25
  2745  001BD4  6FDD               	movwf	221,b	;volatile
  2746                           
  2747                           ;mcc_generated_files/uart2.c: 94:     U2BRGH = 0x00;
  2748  001BD6  0E00               	movlw	0
  2749  001BD8  6FDE               	movwf	222,b	;volatile
  2750                           
  2751                           ;mcc_generated_files/uart2.c: 97:     U2FIFO = 0x00;
  2752  001BDA  0E00               	movlw	0
  2753  001BDC  6FDF               	movwf	223,b	;volatile
  2754                           
  2755                           ;mcc_generated_files/uart2.c: 100:     U2UIR = 0x00;
  2756  001BDE  0E00               	movlw	0
  2757  001BE0  6FE0               	movwf	224,b	;volatile
  2758                           
  2759                           ;mcc_generated_files/uart2.c: 103:     U2ERRIR = 0x00;
  2760  001BE2  0E00               	movlw	0
  2761  001BE4  6FE1               	movwf	225,b	;volatile
  2762                           
  2763                           ;mcc_generated_files/uart2.c: 106:     U2ERRIE = 0x00;
  2764  001BE6  0E00               	movlw	0
  2765  001BE8  6FE2               	movwf	226,b	;volatile
  2766  001BEA                     
  2767                           ; BSR set to: 61
  2768                           ;mcc_generated_files/uart2.c: 109:     UART2_SetFramingErrorHandler(UART2_DefaultFraming
      +                          ErrorHandler);
  2769  001BEA  0E00               	movlw	0
  2770  001BEC  6E01               	movwf	UART2_SetFramingErrorHandler@interruptHandler^0,c
  2771  001BEE  0E00               	movlw	0
  2772  001BF0  6E02               	movwf	(UART2_SetFramingErrorHandler@interruptHandler+1)^0,c
  2773  001BF2  ECC5  F00E         	call	_UART2_SetFramingErrorHandler	;wreg free
  2774  001BF6                     
  2775                           ;mcc_generated_files/uart2.c: 110:     UART2_SetOverrunErrorHandler(UART2_DefaultOverrun
      +                          ErrorHandler);
  2776  001BF6  0E00               	movlw	0
  2777  001BF8  6E01               	movwf	UART2_SetOverrunErrorHandler@interruptHandler^0,c
  2778  001BFA  0E00               	movlw	0
  2779  001BFC  6E02               	movwf	(UART2_SetOverrunErrorHandler@interruptHandler+1)^0,c
  2780  001BFE  ECC0  F00E         	call	_UART2_SetOverrunErrorHandler	;wreg free
  2781  001C02                     
  2782                           ;mcc_generated_files/uart2.c: 111:     UART2_SetErrorHandler(UART2_DefaultErrorHandler);
  2783  001C02  0E00               	movlw	0
  2784  001C04  6E01               	movwf	UART2_SetErrorHandler@interruptHandler^0,c
  2785  001C06  0E00               	movlw	0
  2786  001C08  6E02               	movwf	(UART2_SetErrorHandler@interruptHandler+1)^0,c
  2787  001C0A  ECCA  F00E         	call	_UART2_SetErrorHandler	;wreg free
  2788  001C0E                     
  2789                           ;mcc_generated_files/uart2.c: 113:     uart2RxLastError.status = 0;
  2790  001C0E  0E00               	movlw	0
  2791  001C10  0100               	movlb	0	; () banked
  2792  001C12  6F68               	movwf	_uart2RxLastError& (0+255),b	;volatile
  2793  001C14                     
  2794                           ; BSR set to: 0
  2795  001C14  0012               	return		;funcret
  2796  001C16                     __end_of_UART2_Initialize:
  2797                           	callstack 0
  2798                           
  2799 ;; *************** function _UART2_SetOverrunErrorHandler *****************
  2800 ;; Defined at:
  2801 ;;		line 195 in file "mcc_generated_files/uart2.c"
  2802 ;; Parameters:    Size  Location     Type
  2803 ;;  interruptHan    2    0[COMRAM] PTR FTN()void 
  2804 ;;		 -> UART2_DefaultOverrunErrorHandler(1), 
  2805 ;; Auto vars:     Size  Location     Type
  2806 ;;		None
  2807 ;; Return value:  Size  Location     Type
  2808 ;;                  1    wreg      void 
  2809 ;; Registers used:
  2810 ;;		wreg, status,2, status,0
  2811 ;; Tracked objects:
  2812 ;;		On entry : 0/0
  2813 ;;		On exit  : 0/0
  2814 ;;		Unchanged: 0/0
  2815 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2816 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2817 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2818 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2819 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2820 ;;Total ram usage:        2 bytes
  2821 ;; Hardware stack levels used:    1
  2822 ;; This function calls:
  2823 ;;		Nothing
  2824 ;; This function is called by:
  2825 ;;		_UART2_Initialize
  2826 ;; This function uses a non-reentrant model
  2827 ;;
  2828                           
  2829                           	psect	text17
  2830  001D80                     __ptext17:
  2831                           	callstack 0
  2832  001D80                     _UART2_SetOverrunErrorHandler:
  2833                           	callstack 28
  2834  001D80                     
  2835                           ;mcc_generated_files/uart2.c: 196:     UART2_OverrunErrorHandler = interruptHandler;
  2836  001D80  C001  F08B         	movff	UART2_SetOverrunErrorHandler@interruptHandler,_UART2_OverrunErrorHandler
  2837  001D84  C002  F08C         	movff	UART2_SetOverrunErrorHandler@interruptHandler+1,_UART2_OverrunErrorHandler+1
  2838  001D88  0012               	return		;funcret
  2839  001D8A                     __end_of_UART2_SetOverrunErrorHandler:
  2840                           	callstack 0
  2841                           
  2842 ;; *************** function _UART2_SetFramingErrorHandler *****************
  2843 ;; Defined at:
  2844 ;;		line 191 in file "mcc_generated_files/uart2.c"
  2845 ;; Parameters:    Size  Location     Type
  2846 ;;  interruptHan    2    0[COMRAM] PTR FTN()void 
  2847 ;;		 -> UART2_DefaultFramingErrorHandler(1), 
  2848 ;; Auto vars:     Size  Location     Type
  2849 ;;		None
  2850 ;; Return value:  Size  Location     Type
  2851 ;;                  1    wreg      void 
  2852 ;; Registers used:
  2853 ;;		wreg, status,2, status,0
  2854 ;; Tracked objects:
  2855 ;;		On entry : 0/0
  2856 ;;		On exit  : 0/0
  2857 ;;		Unchanged: 0/0
  2858 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2859 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2860 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2861 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2862 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2863 ;;Total ram usage:        2 bytes
  2864 ;; Hardware stack levels used:    1
  2865 ;; This function calls:
  2866 ;;		Nothing
  2867 ;; This function is called by:
  2868 ;;		_UART2_Initialize
  2869 ;; This function uses a non-reentrant model
  2870 ;;
  2871                           
  2872                           	psect	text18
  2873  001D8A                     __ptext18:
  2874                           	callstack 0
  2875  001D8A                     _UART2_SetFramingErrorHandler:
  2876                           	callstack 28
  2877  001D8A                     
  2878                           ;mcc_generated_files/uart2.c: 192:     UART2_FramingErrorHandler = interruptHandler;
  2879  001D8A  C001  F08D         	movff	UART2_SetFramingErrorHandler@interruptHandler,_UART2_FramingErrorHandler
  2880  001D8E  C002  F08E         	movff	UART2_SetFramingErrorHandler@interruptHandler+1,_UART2_FramingErrorHandler+1
  2881  001D92  0012               	return		;funcret
  2882  001D94                     __end_of_UART2_SetFramingErrorHandler:
  2883                           	callstack 0
  2884                           
  2885 ;; *************** function _UART2_SetErrorHandler *****************
  2886 ;; Defined at:
  2887 ;;		line 199 in file "mcc_generated_files/uart2.c"
  2888 ;; Parameters:    Size  Location     Type
  2889 ;;  interruptHan    2    0[COMRAM] PTR FTN()void 
  2890 ;;		 -> UART2_DefaultErrorHandler(1), 
  2891 ;; Auto vars:     Size  Location     Type
  2892 ;;		None
  2893 ;; Return value:  Size  Location     Type
  2894 ;;                  1    wreg      void 
  2895 ;; Registers used:
  2896 ;;		wreg, status,2, status,0
  2897 ;; Tracked objects:
  2898 ;;		On entry : 0/0
  2899 ;;		On exit  : 0/0
  2900 ;;		Unchanged: 0/0
  2901 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2902 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2903 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2904 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2905 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2906 ;;Total ram usage:        2 bytes
  2907 ;; Hardware stack levels used:    1
  2908 ;; This function calls:
  2909 ;;		Nothing
  2910 ;; This function is called by:
  2911 ;;		_UART2_Initialize
  2912 ;; This function uses a non-reentrant model
  2913 ;;
  2914                           
  2915                           	psect	text19
  2916  001D94                     __ptext19:
  2917                           	callstack 0
  2918  001D94                     _UART2_SetErrorHandler:
  2919                           	callstack 28
  2920  001D94                     
  2921                           ;mcc_generated_files/uart2.c: 200:     UART2_ErrorHandler = interruptHandler;
  2922  001D94  C001  F089         	movff	UART2_SetErrorHandler@interruptHandler,_UART2_ErrorHandler
  2923  001D98  C002  F08A         	movff	UART2_SetErrorHandler@interruptHandler+1,_UART2_ErrorHandler+1
  2924  001D9C  0012               	return		;funcret
  2925  001D9E                     __end_of_UART2_SetErrorHandler:
  2926                           	callstack 0
  2927                           
  2928 ;; *************** function _PMD_Initialize *****************
  2929 ;; Defined at:
  2930 ;;		line 72 in file "mcc_generated_files/mcc.c"
  2931 ;; Parameters:    Size  Location     Type
  2932 ;;		None
  2933 ;; Auto vars:     Size  Location     Type
  2934 ;;		None
  2935 ;; Return value:  Size  Location     Type
  2936 ;;                  1    wreg      void 
  2937 ;; Registers used:
  2938 ;;		wreg, status,2
  2939 ;; Tracked objects:
  2940 ;;		On entry : 0/0
  2941 ;;		On exit  : 0/0
  2942 ;;		Unchanged: 0/0
  2943 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2944 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2945 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2946 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2947 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2948 ;;Total ram usage:        0 bytes
  2949 ;; Hardware stack levels used:    1
  2950 ;; This function calls:
  2951 ;;		Nothing
  2952 ;; This function is called by:
  2953 ;;		_SYSTEM_Initialize
  2954 ;; This function uses a non-reentrant model
  2955 ;;
  2956                           
  2957                           	psect	text20
  2958  001CFC                     __ptext20:
  2959                           	callstack 0
  2960  001CFC                     _PMD_Initialize:
  2961                           	callstack 29
  2962  001CFC                     
  2963                           ;mcc_generated_files/mcc.c: 75:     PMD0 = 0x00;
  2964  001CFC  0E00               	movlw	0
  2965  001CFE  0139               	movlb	57	; () banked
  2966  001D00  6FC0               	movwf	192,b	;volatile
  2967                           
  2968                           ;mcc_generated_files/mcc.c: 77:     PMD1 = 0x00;
  2969  001D02  0E00               	movlw	0
  2970  001D04  6FC1               	movwf	193,b	;volatile
  2971                           
  2972                           ;mcc_generated_files/mcc.c: 79:     PMD2 = 0x00;
  2973  001D06  0E00               	movlw	0
  2974  001D08  6FC2               	movwf	194,b	;volatile
  2975                           
  2976                           ;mcc_generated_files/mcc.c: 81:     PMD3 = 0x00;
  2977  001D0A  0E00               	movlw	0
  2978  001D0C  6FC3               	movwf	195,b	;volatile
  2979                           
  2980                           ;mcc_generated_files/mcc.c: 83:     PMD4 = 0x00;
  2981  001D0E  0E00               	movlw	0
  2982  001D10  6FC4               	movwf	196,b	;volatile
  2983                           
  2984                           ;mcc_generated_files/mcc.c: 85:     PMD5 = 0x00;
  2985  001D12  0E00               	movlw	0
  2986  001D14  6FC5               	movwf	197,b	;volatile
  2987                           
  2988                           ;mcc_generated_files/mcc.c: 87:     PMD6 = 0x00;
  2989  001D16  0E00               	movlw	0
  2990  001D18  6FC6               	movwf	198,b	;volatile
  2991                           
  2992                           ;mcc_generated_files/mcc.c: 89:     PMD7 = 0x00;
  2993  001D1A  0E00               	movlw	0
  2994  001D1C  6FC7               	movwf	199,b	;volatile
  2995  001D1E                     
  2996                           ; BSR set to: 57
  2997  001D1E  0012               	return		;funcret
  2998  001D20                     __end_of_PMD_Initialize:
  2999                           	callstack 0
  3000                           
  3001 ;; *************** function _PIN_MANAGER_Initialize *****************
  3002 ;; Defined at:
  3003 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  3004 ;; Parameters:    Size  Location     Type
  3005 ;;		None
  3006 ;; Auto vars:     Size  Location     Type
  3007 ;;		None
  3008 ;; Return value:  Size  Location     Type
  3009 ;;                  1    wreg      void 
  3010 ;; Registers used:
  3011 ;;		wreg, status,2
  3012 ;; Tracked objects:
  3013 ;;		On entry : 0/0
  3014 ;;		On exit  : 0/0
  3015 ;;		Unchanged: 0/0
  3016 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3017 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3018 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3019 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3020 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3021 ;;Total ram usage:        0 bytes
  3022 ;; Hardware stack levels used:    1
  3023 ;; This function calls:
  3024 ;;		Nothing
  3025 ;; This function is called by:
  3026 ;;		_SYSTEM_Initialize
  3027 ;; This function uses a non-reentrant model
  3028 ;;
  3029                           
  3030                           	psect	text21
  3031  001ABC                     __ptext21:
  3032                           	callstack 0
  3033  001ABC                     _PIN_MANAGER_Initialize:
  3034                           	callstack 29
  3035  001ABC                     
  3036                           ;mcc_generated_files/pin_manager.c: 60:     LATE = 0x00;
  3037  001ABC  0E00               	movlw	0
  3038  001ABE  6EBE               	movwf	190,c	;volatile
  3039                           
  3040                           ;mcc_generated_files/pin_manager.c: 61:     LATD = 0x00;
  3041  001AC0  0E00               	movlw	0
  3042  001AC2  6EBD               	movwf	189,c	;volatile
  3043                           
  3044                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x00;
  3045  001AC4  0E00               	movlw	0
  3046  001AC6  6EBA               	movwf	186,c	;volatile
  3047                           
  3048                           ;mcc_generated_files/pin_manager.c: 63:     LATB = 0x00;
  3049  001AC8  0E00               	movlw	0
  3050  001ACA  6EBB               	movwf	187,c	;volatile
  3051                           
  3052                           ;mcc_generated_files/pin_manager.c: 64:     LATC = 0x00;
  3053  001ACC  0E00               	movlw	0
  3054  001ACE  6EBC               	movwf	188,c	;volatile
  3055                           
  3056                           ;mcc_generated_files/pin_manager.c: 69:     TRISE = 0x07;
  3057  001AD0  0E07               	movlw	7
  3058  001AD2  6EC6               	movwf	198,c	;volatile
  3059  001AD4                     
  3060                           ;mcc_generated_files/pin_manager.c: 70:     TRISA = 0xFF;
  3061  001AD4  68C2               	setf	194,c	;volatile
  3062                           
  3063                           ;mcc_generated_files/pin_manager.c: 71:     TRISB = 0xBF;
  3064  001AD6  0EBF               	movlw	191
  3065  001AD8  6EC3               	movwf	195,c	;volatile
  3066  001ADA                     
  3067                           ;mcc_generated_files/pin_manager.c: 72:     TRISC = 0xFF;
  3068  001ADA  68C4               	setf	196,c	;volatile
  3069  001ADC                     
  3070                           ;mcc_generated_files/pin_manager.c: 73:     TRISD = 0xFF;
  3071  001ADC  68C5               	setf	197,c	;volatile
  3072  001ADE                     
  3073                           ;mcc_generated_files/pin_manager.c: 78:     ANSELD = 0xFF;
  3074  001ADE  013A               	movlb	58	; () banked
  3075  001AE0  6970               	setf	112,b	;volatile
  3076  001AE2                     
  3077                           ; BSR set to: 58
  3078                           ;mcc_generated_files/pin_manager.c: 79:     ANSELC = 0xFF;
  3079  001AE2  6960               	setf	96,b	;volatile
  3080                           
  3081                           ;mcc_generated_files/pin_manager.c: 80:     ANSELB = 0x7F;
  3082  001AE4  0E7F               	movlw	127
  3083  001AE6  6F50               	movwf	80,b	;volatile
  3084                           
  3085                           ;mcc_generated_files/pin_manager.c: 81:     ANSELE = 0x07;
  3086  001AE8  0E07               	movlw	7
  3087  001AEA  6F80               	movwf	128,b	;volatile
  3088  001AEC                     
  3089                           ; BSR set to: 58
  3090                           ;mcc_generated_files/pin_manager.c: 82:     ANSELA = 0xFF;
  3091  001AEC  6940               	setf	64,b	;volatile
  3092                           
  3093                           ;mcc_generated_files/pin_manager.c: 87:     WPUD = 0x00;
  3094  001AEE  0E00               	movlw	0
  3095  001AF0  6F71               	movwf	113,b	;volatile
  3096                           
  3097                           ;mcc_generated_files/pin_manager.c: 88:     WPUE = 0x00;
  3098  001AF2  0E00               	movlw	0
  3099  001AF4  6F81               	movwf	129,b	;volatile
  3100                           
  3101                           ;mcc_generated_files/pin_manager.c: 89:     WPUB = 0x00;
  3102  001AF6  0E00               	movlw	0
  3103  001AF8  6F51               	movwf	81,b	;volatile
  3104                           
  3105                           ;mcc_generated_files/pin_manager.c: 90:     WPUA = 0x00;
  3106  001AFA  0E00               	movlw	0
  3107  001AFC  6F41               	movwf	65,b	;volatile
  3108                           
  3109                           ;mcc_generated_files/pin_manager.c: 91:     WPUC = 0x00;
  3110  001AFE  0E00               	movlw	0
  3111  001B00  6F61               	movwf	97,b	;volatile
  3112                           
  3113                           ;mcc_generated_files/pin_manager.c: 96:     RB1I2C = 0x00;
  3114  001B02  0E00               	movlw	0
  3115  001B04  6F5A               	movwf	90,b	;volatile
  3116                           
  3117                           ;mcc_generated_files/pin_manager.c: 97:     RB2I2C = 0x00;
  3118  001B06  0E00               	movlw	0
  3119  001B08  6F5B               	movwf	91,b	;volatile
  3120                           
  3121                           ;mcc_generated_files/pin_manager.c: 98:     RC3I2C = 0x00;
  3122  001B0A  0E00               	movlw	0
  3123  001B0C  6F6A               	movwf	106,b	;volatile
  3124                           
  3125                           ;mcc_generated_files/pin_manager.c: 99:     RC4I2C = 0x00;
  3126  001B0E  0E00               	movlw	0
  3127  001B10  6F6B               	movwf	107,b	;volatile
  3128                           
  3129                           ;mcc_generated_files/pin_manager.c: 100:     RD0I2C = 0x00;
  3130  001B12  0E00               	movlw	0
  3131  001B14  6F7A               	movwf	122,b	;volatile
  3132                           
  3133                           ;mcc_generated_files/pin_manager.c: 101:     RD1I2C = 0x00;
  3134  001B16  0E00               	movlw	0
  3135  001B18  6F7B               	movwf	123,b	;volatile
  3136                           
  3137                           ;mcc_generated_files/pin_manager.c: 106:     ODCONE = 0x00;
  3138  001B1A  0E00               	movlw	0
  3139  001B1C  6F82               	movwf	130,b	;volatile
  3140                           
  3141                           ;mcc_generated_files/pin_manager.c: 107:     ODCONA = 0x00;
  3142  001B1E  0E00               	movlw	0
  3143  001B20  6F42               	movwf	66,b	;volatile
  3144                           
  3145                           ;mcc_generated_files/pin_manager.c: 108:     ODCONB = 0x00;
  3146  001B22  0E00               	movlw	0
  3147  001B24  6F52               	movwf	82,b	;volatile
  3148                           
  3149                           ;mcc_generated_files/pin_manager.c: 109:     ODCONC = 0x00;
  3150  001B26  0E00               	movlw	0
  3151  001B28  6F62               	movwf	98,b	;volatile
  3152                           
  3153                           ;mcc_generated_files/pin_manager.c: 110:     ODCOND = 0x00;
  3154  001B2A  0E00               	movlw	0
  3155  001B2C  6F72               	movwf	114,b	;volatile
  3156  001B2E                     
  3157                           ; BSR set to: 58
  3158                           ;mcc_generated_files/pin_manager.c: 115:     SLRCONA = 0xFF;
  3159  001B2E  6943               	setf	67,b	;volatile
  3160  001B30                     
  3161                           ; BSR set to: 58
  3162                           ;mcc_generated_files/pin_manager.c: 116:     SLRCONB = 0xFF;
  3163  001B30  6953               	setf	83,b	;volatile
  3164  001B32                     
  3165                           ; BSR set to: 58
  3166                           ;mcc_generated_files/pin_manager.c: 117:     SLRCONC = 0xFF;
  3167  001B32  6963               	setf	99,b	;volatile
  3168  001B34                     
  3169                           ; BSR set to: 58
  3170                           ;mcc_generated_files/pin_manager.c: 118:     SLRCOND = 0xFF;
  3171  001B34  6973               	setf	115,b	;volatile
  3172                           
  3173                           ;mcc_generated_files/pin_manager.c: 119:     SLRCONE = 0x07;
  3174  001B36  0E07               	movlw	7
  3175  001B38  6F83               	movwf	131,b	;volatile
  3176  001B3A                     
  3177                           ; BSR set to: 58
  3178                           ;mcc_generated_files/pin_manager.c: 124:     INLVLA = 0xFF;
  3179  001B3A  6944               	setf	68,b	;volatile
  3180  001B3C                     
  3181                           ; BSR set to: 58
  3182                           ;mcc_generated_files/pin_manager.c: 125:     INLVLB = 0xFF;
  3183  001B3C  6954               	setf	84,b	;volatile
  3184  001B3E                     
  3185                           ; BSR set to: 58
  3186                           ;mcc_generated_files/pin_manager.c: 126:     INLVLC = 0xFF;
  3187  001B3E  6964               	setf	100,b	;volatile
  3188  001B40                     
  3189                           ; BSR set to: 58
  3190                           ;mcc_generated_files/pin_manager.c: 127:     INLVLD = 0xFF;
  3191  001B40  6974               	setf	116,b	;volatile
  3192                           
  3193                           ;mcc_generated_files/pin_manager.c: 128:     INLVLE = 0x0F;
  3194  001B42  0E0F               	movlw	15
  3195  001B44  6F84               	movwf	132,b	;volatile
  3196                           
  3197                           ;mcc_generated_files/pin_manager.c: 137:     U2RXPPS = 0x0F;
  3198  001B46  0E0F               	movlw	15
  3199  001B48  6FE8               	movwf	232,b	;volatile
  3200                           
  3201                           ;mcc_generated_files/pin_manager.c: 138:     RB6PPS = 0x16;
  3202  001B4A  0E16               	movlw	22
  3203  001B4C  6F0E               	movwf	14,b	;volatile
  3204  001B4E                     
  3205                           ; BSR set to: 58
  3206  001B4E  0012               	return		;funcret
  3207  001B50                     __end_of_PIN_MANAGER_Initialize:
  3208                           	callstack 0
  3209                           
  3210 ;; *************** function _OSCILLATOR_Initialize *****************
  3211 ;; Defined at:
  3212 ;;		line 58 in file "mcc_generated_files/mcc.c"
  3213 ;; Parameters:    Size  Location     Type
  3214 ;;		None
  3215 ;; Auto vars:     Size  Location     Type
  3216 ;;		None
  3217 ;; Return value:  Size  Location     Type
  3218 ;;                  1    wreg      void 
  3219 ;; Registers used:
  3220 ;;		wreg, status,2
  3221 ;; Tracked objects:
  3222 ;;		On entry : 0/0
  3223 ;;		On exit  : 0/0
  3224 ;;		Unchanged: 0/0
  3225 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3226 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3227 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3228 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3229 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3230 ;;Total ram usage:        0 bytes
  3231 ;; Hardware stack levels used:    1
  3232 ;; This function calls:
  3233 ;;		Nothing
  3234 ;; This function is called by:
  3235 ;;		_SYSTEM_Initialize
  3236 ;; This function uses a non-reentrant model
  3237 ;;
  3238                           
  3239                           	psect	text22
  3240  001D3A                     __ptext22:
  3241                           	callstack 0
  3242  001D3A                     _OSCILLATOR_Initialize:
  3243                           	callstack 29
  3244  001D3A                     
  3245                           ;mcc_generated_files/mcc.c: 61:     OSCCON1 = 0x62;
  3246  001D3A  0E62               	movlw	98
  3247  001D3C  0139               	movlb	57	; () banked
  3248  001D3E  6FD9               	movwf	217,b	;volatile
  3249                           
  3250                           ;mcc_generated_files/mcc.c: 63:     OSCCON3 = 0x00;
  3251  001D40  0E00               	movlw	0
  3252  001D42  6FDB               	movwf	219,b	;volatile
  3253                           
  3254                           ;mcc_generated_files/mcc.c: 65:     OSCEN = 0x00;
  3255  001D44  0E00               	movlw	0
  3256  001D46  6FDD               	movwf	221,b	;volatile
  3257                           
  3258                           ;mcc_generated_files/mcc.c: 67:     OSCFRQ = 0x02;
  3259  001D48  0E02               	movlw	2
  3260  001D4A  6FDF               	movwf	223,b	;volatile
  3261                           
  3262                           ;mcc_generated_files/mcc.c: 69:     OSCTUNE = 0x00;
  3263  001D4C  0E00               	movlw	0
  3264  001D4E  6FDE               	movwf	222,b	;volatile
  3265  001D50                     
  3266                           ; BSR set to: 57
  3267  001D50  0012               	return		;funcret
  3268  001D52                     __end_of_OSCILLATOR_Initialize:
  3269                           	callstack 0
  3270                           
  3271                           	psect	rparam
  3272  0000                     
  3273                           	psect	idloc
  3274                           
  3275                           ;Config register IDLOC0 @ 0x200000
  3276                           ;	unspecified, using default values
  3277  200000                     	org	2097152
  3278  200000  0FFF               	dw	4095
  3279                           
  3280                           ;Config register IDLOC1 @ 0x200002
  3281                           ;	unspecified, using default values
  3282  200002                     	org	2097154
  3283  200002  0FFF               	dw	4095
  3284                           
  3285                           ;Config register IDLOC2 @ 0x200004
  3286                           ;	unspecified, using default values
  3287  200004                     	org	2097156
  3288  200004  0FFF               	dw	4095
  3289                           
  3290                           ;Config register IDLOC3 @ 0x200006
  3291                           ;	unspecified, using default values
  3292  200006                     	org	2097158
  3293  200006  0FFF               	dw	4095
  3294                           
  3295                           ;Config register IDLOC4 @ 0x200008
  3296                           ;	unspecified, using default values
  3297  200008                     	org	2097160
  3298  200008  0FFF               	dw	4095
  3299                           
  3300                           ;Config register IDLOC5 @ 0x20000A
  3301                           ;	unspecified, using default values
  3302  20000A                     	org	2097162
  3303  20000A  0FFF               	dw	4095
  3304                           
  3305                           ;Config register IDLOC6 @ 0x20000C
  3306                           ;	unspecified, using default values
  3307  20000C                     	org	2097164
  3308  20000C  0FFF               	dw	4095
  3309                           
  3310                           ;Config register IDLOC7 @ 0x20000E
  3311                           ;	unspecified, using default values
  3312  20000E                     	org	2097166
  3313  20000E  0FFF               	dw	4095
  3314                           
  3315                           	psect	config
  3316                           
  3317                           ;Config register CONFIG1L @ 0x300000
  3318                           ;	External Oscillator Selection
  3319                           ;	FEXTOSC = OFF, Oscillator not enabled
  3320                           ;	Reset Oscillator Selection
  3321                           ;	RSTOSC = HFINTOSC_1MHZ, HFINTOSC with HFFRQ = 4 MHz and CDIV = 4:1
  3322  300000                     	org	3145728
  3323  300000  EC                 	db	236
  3324                           
  3325                           ;Config register CONFIG1H @ 0x300001
  3326                           ;	Clock out Enable bit
  3327                           ;	CLKOUTEN = ON, CLKOUT function is enabled
  3328                           ;	PRLOCKED One-Way Set Enable bit
  3329                           ;	PR1WAY = ON, PRLOCK bit can be cleared and set only once
  3330                           ;	Clock Switch Enable bit
  3331                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
  3332                           ;	Fail-Safe Clock Monitor Enable bit
  3333                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
  3334  300001                     	org	3145729
  3335  300001  FE                 	db	254
  3336                           
  3337                           ;Config register CONFIG2L @ 0x300002
  3338                           ;	MCLR Enable bit
  3339                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RE3 pin function is MCLR
  3340                           ;	Power-up timer selection bits
  3341                           ;	PWRTS = PWRT_OFF, PWRT is disabled
  3342                           ;	Multi-vector enable bit
  3343                           ;	MVECEN = OFF, Interrupt contoller does not use vector table to prioritze interrupts
  3344                           ;	IVTLOCK bit One-way set enable bit
  3345                           ;	IVT1WAY = ON, IVTLOCK bit can be cleared and set only once
  3346                           ;	Low Power BOR Enable bit
  3347                           ;	LPBOREN = OFF, ULPBOR disabled
  3348                           ;	Brown-out Reset Enable bits
  3349                           ;	BOREN = SBORDIS, Brown-out Reset enabled , SBOREN bit is ignored
  3350  300002                     	org	3145730
  3351  300002  F7                 	db	247
  3352                           
  3353                           ;Config register CONFIG2H @ 0x300003
  3354                           ;	Brown-out Reset Voltage Selection bits
  3355                           ;	BORV = VBOR_2P45, Brown-out Reset Voltage (VBOR) set to 2.45V
  3356                           ;	ZCD Disable bit
  3357                           ;	ZCD = OFF, ZCD disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCDCON
  3358                           ;	PPSLOCK bit One-Way Set Enable bit
  3359                           ;	PPS1WAY = ON, PPSLOCK bit can be cleared and set only once; PPS registers remain locke
      +                          d after one clear/set cycle
  3360                           ;	Stack Full/Underflow Reset Enable bit
  3361                           ;	STVREN = ON, Stack full/underflow will cause Reset
  3362                           ;	Debugger Enable bit
  3363                           ;	DEBUG = OFF, Background debugger disabled
  3364                           ;	Extended Instruction Set Enable bit
  3365                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
  3366  300003                     	org	3145731
  3367  300003  FF                 	db	255
  3368                           
  3369                           ;Config register CONFIG3L @ 0x300004
  3370                           ;	WDT Period selection bits
  3371                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  3372                           ;	WDT operating mode
  3373                           ;	WDTE = OFF, WDT Disabled; SWDTEN is ignored
  3374  300004                     	org	3145732
  3375  300004  9F                 	db	159
  3376                           
  3377                           ;Config register CONFIG3H @ 0x300005
  3378                           ;	WDT Window Select bits
  3379                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
  3380                           ;	WDT input clock selector
  3381                           ;	WDTCCS = SC, Software Control
  3382  300005                     	org	3145733
  3383  300005  FF                 	db	255
  3384                           
  3385                           ;Config register CONFIG4L @ 0x300006
  3386                           ;	Boot Block Size selection bits
  3387                           ;	BBSIZE = BBSIZE_512, Boot Block size is 512 words
  3388                           ;	Boot Block enable bit
  3389                           ;	BBEN = OFF, Boot block disabled
  3390                           ;	Storage Area Flash enable bit
  3391                           ;	SAFEN = OFF, SAF disabled
  3392                           ;	Application Block write protection bit
  3393                           ;	WRTAPP = OFF, Application Block not write protected
  3394  300006                     	org	3145734
  3395  300006  FF                 	db	255
  3396                           
  3397                           ;Config register CONFIG4H @ 0x300007
  3398                           ;	Configuration Register Write Protection bit
  3399                           ;	WRTB = OFF, Configuration registers (300000-30000Bh) not write-protected
  3400                           ;	Boot Block Write Protection bit
  3401                           ;	WRTC = OFF, Boot Block (000000-0007FFh) not write-protected
  3402                           ;	Data EEPROM Write Protection bit
  3403                           ;	WRTD = OFF, Data EEPROM not write-protected
  3404                           ;	SAF Write protection bit
  3405                           ;	WRTSAF = OFF, SAF not Write Protected
  3406                           ;	Low Voltage Programming Enable bit
  3407                           ;	LVP = ON, Low voltage programming enabled. MCLR/VPP pin function is MCLR. MCLRE config
      +                          uration bit is ignored
  3408  300007                     	org	3145735
  3409  300007  FF                 	db	255
  3410                           
  3411                           ;Config register CONFIG5L @ 0x300008
  3412                           ;	PFM and Data EEPROM Code Protection bit
  3413                           ;	CP = OFF, PFM and Data EEPROM code protection disabled
  3414  300008                     	org	3145736
  3415  300008  FF                 	db	255
  3416                           
  3417                           ;Config register CONFIG5H @ 0x300009
  3418                           ;	unspecified, using default values
  3419  300009                     	org	3145737
  3420  300009  FF                 	db	255
  3421                           tosu	equ	0x3FFF
  3422                           tosh	equ	0x3FFE
  3423                           tosl	equ	0x3FFD
  3424                           stkptr	equ	0x3FFC
  3425                           pclatu	equ	0x3FFB
  3426                           pclath	equ	0x3FFA
  3427                           pcl	equ	0x3FF9
  3428                           tblptru	equ	0x3FF8
  3429                           tblptrh	equ	0x3FF7
  3430                           tblptrl	equ	0x3FF6
  3431                           tablat	equ	0x3FF5
  3432                           prodh	equ	0x3FF4
  3433                           prodl	equ	0x3FF3
  3434                           indf0	equ	0x3FEF
  3435                           postinc0	equ	0x3FEE
  3436                           postdec0	equ	0x3FED
  3437                           preinc0	equ	0x3FEC
  3438                           plusw0	equ	0x3FEB
  3439                           fsr0h	equ	0x3FEA
  3440                           fsr0l	equ	0x3FE9
  3441                           wreg	equ	0x3FE8
  3442                           indf1	equ	0x3FE7
  3443                           postinc1	equ	0x3FE6
  3444                           postdec1	equ	0x3FE5
  3445                           preinc1	equ	0x3FE4
  3446                           plusw1	equ	0x3FE3
  3447                           fsr1h	equ	0x3FE2
  3448                           fsr1l	equ	0x3FE1
  3449                           bsr	equ	0x3FE0
  3450                           indf2	equ	0x3FDF
  3451                           postinc2	equ	0x3FDE
  3452                           postdec2	equ	0x3FDD
  3453                           preinc2	equ	0x3FDC
  3454                           plusw2	equ	0x3FDB
  3455                           fsr2h	equ	0x3FDA
  3456                           fsr2l	equ	0x3FD9
  3457                           status	equ	0x3FD8

Data Sizes:
    Strings     52
    Constant    0
    Data        0
    BSS         41
    Persistent  6
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     95      95
    BANK0           160      4      51
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S786_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 46
		 -> STR_2(CODE[6]), STR_1(CODE[46]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 46
		 -> STR_2(CODE[6]), STR_1(CODE[46]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 46
		 -> STR_2(CODE[6]), STR_1(CODE[46]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), 

    UART2_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART2_DefaultErrorHandler(), 

    UART2_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART2_DefaultOverrunErrorHandler(), 

    UART2_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART2_DefaultFramingErrorHandler(), 

    UART2_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), UART2_DefaultErrorHandler(), 

    UART2_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), UART2_DefaultOverrunErrorHandler(), 

    UART2_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), UART2_DefaultFramingErrorHandler(), 


Critical Paths under _main in COMRAM

    _main->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _putch->_UART2_Write
    _abs->___aomod
    _UART2_Initialize->_UART2_SetErrorHandler
    _UART2_Initialize->_UART2_SetFramingErrorHandler
    _UART2_Initialize->_UART2_SetOverrunErrorHandler

Critical Paths under _main in BANK0

    _main->_printf

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    7251
                                             93 COMRAM     2     2      0
                  _SYSTEM_Initialize
                            ___awmod
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                               8     4      4    6245
                                             89 COMRAM     4     0      4
                                              0 BANK0      4     4      0
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6    6039
                                             81 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           42    36      6    5685
                                             65 COMRAM    16    10      6
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                36    26     10    4314
                                             29 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    2665
                                             18 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     166
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1213
                                             11 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4     812
                                              2 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0      44
                                              1 COMRAM     1     1      0
                        _UART2_Write
 ---------------------------------------------------------------------------------
 (6) _UART2_Write                                          1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (1) ___awmod                                              6     2      4     600
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     294
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                   _UART2_Initialize
 ---------------------------------------------------------------------------------
 (2) _UART2_Initialize                                     0     0      0     294
              _UART2_SetErrorHandler
       _UART2_SetFramingErrorHandler
       _UART2_SetOverrunErrorHandler
 ---------------------------------------------------------------------------------
 (3) _UART2_SetOverrunErrorHandler                         2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _UART2_SetFramingErrorHandler                         2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _UART2_SetErrorHandler                                2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _UART2_Initialize
       _UART2_SetErrorHandler
       _UART2_SetFramingErrorHandler
       _UART2_SetOverrunErrorHandler
   ___awmod
   _printf
     _vfprintf
       _vfpfcnvrt
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
                 _UART2_Write
             _fputs
               _fputc
                 _putch
                   _UART2_Write
             _strlen
         _fputc
           _putch
             _UART2_Write

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             FFF      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK15          100      0       0      30        0.0%
BANK15             100      0       0      31        0.0%
BITBANK14          100      0       0      28        0.0%
BANK14             100      0       0      29        0.0%
BITBANK13          100      0       0      36        0.0%
BANK13             100      0       0      27        0.0%
BITBANK12          100      0       0      35        0.0%
BANK12             100      0       0      26        0.0%
BITBANK11          100      0       0      34        0.0%
BANK11             100      0       0      25        0.0%
BITBANK10          100      0       0      33        0.0%
BANK10             100      0       0      24        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      4      33       5       31.9%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5F      5F       1      100.0%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      92      32        0.0%
DATA                 0      0      92       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.30 build 20200825195618 
Symbol Table                                                                                   Sat Oct 17 20:29:39 2020

                                          l40 1D50                                            l43 1D1E  
                                          l37 1D74                                           l100 1C14  
                                         l150 1D88                                           l126 1D22  
                                         l135 1D7E                                           l153 1D9C  
                                         l129 1D38                                           l242 1B4E  
                                         l147 1D92                                           l259 1A1E  
                                         l509 1984                                           l392 180E  
                                         l379 16AA                                           l943 1CFA  
                                         l970 1856                                           l973 1898  
                                         l981 10D6                                           l975 18D4  
                                         l983 10DE                                           u700 1CC6  
                                         u701 1CC2                                           u710 1536  
                                         u711 1532                                           u720 1568  
                                         u800 172E                                           u640 1D32  
                                         u721 1564                                           u801 172A  
                                         u641 1D2E                                           u810 1758  
                                         u650 1A38                                           u731 1592  
                                         u811 1754                                           u651 1A34  
                                         u740 15B6                                           u820 1786  
                                         u660 1A4A                                           u900 1068  
                                         u741 15B2                                           u821 1782  
                                         u661 1A46                                           u750 15E0  
                                         u830 17CE                                           u670 1A72  
                                         u910 107E                                           u751 15DC  
                                         u831 17CA                                           u671 1A6E  
                                         u911 107A                                           u760 1620  
                                         u680 1AA8                                           u840 1820  
                                         u920 10AE                                           u761 161C  
                                         u681 1AA4                                           u841 181C  
                                         u921 10AA                                           u770 166A  
                                         u690 1C58                                           u850 1842  
                                         u930 10CA                                           u771 1666  
                                         u691 1C54                                           u851 183E  
                                         u931 10C6                                           u780 16BE  
                                         u860 1898                                           u940 10F8  
                                         u781 16BA                                           u861 1894  
                                         u941 10F4                                           u790 16F0  
                                         u870 18A8                                           u950 1106  
                                         u791 16EC                                           u871 18A4  
                                         u951 1102                                           u880 1C74  
                                         u960 122E                                           u881 1C70  
                                         u961 122A                                           u970 124C  
                                         u890 1066                                           u971 1248  
                                         u891 1060                                           u980 1266  
                                         u981 1262                                           u990 1280  
                                         u991 127C                                           _abs 1C5A  
                                         _pad 1810                       __size_of_PMD_Initialize 0024  
                                ___awmod@sign 0006                                           wreg 003FE8  
                                        l1001 1318                                          l1022 1C98  
                                        l1014 1BAE                                          l1015 1BB6  
                                        l1008 1522                                          l1034 1ABA  
                                        l1042 1C58                                          l1019 1C90  
                                        ?_abs 0013                                          l1310 1ADA  
                                        l1320 1B2E                                          l1312 1ADC  
                                        l1304 1CFC                                          l1048 1CD2  
                                        l1330 1B3C                                          l1322 1B30  
                                        l1314 1ADE                                          l1306 1ABC  
                                        l1332 1B3E                                          l1324 1B32  
                                        l1316 1AE2                                          l1308 1AD4  
                                        l1500 1CC6                                          l1334 1B40  
                                        l1326 1B34                                          l1318 1AEC  
                                        l1510 1556                                          l1336 1D3A  
                                        l1328 1B3A                                          l1520 1598  
                                        l1512 155A                                          l1504 1524  
                                        l1600 18A8                                          l1530 15F2  
                                        l1522 15B6                                          l1514 1568  
                                        l1506 1528                                          l1602 18BC  
                                        l1610 1036                                          l1532 1620  
                                        l1524 15BE                                          l1540 165A  
                                        l1516 1588                                          l1508 1536  
                                        l1620 10B0                                          l1612 1056  
                                        l1700 14A0                                          l1542 166A  
                                        l1534 1640                                          l1526 15D2  
                                        l1518 158C                                          l1550 16B0  
                                        l1606 1C5A                                          l1470 1D78  
                                        l1630 110C                                          l1622 10CA  
                                        l1614 107E                                          l1702 14B4  
                                        l1720 1BB8                                          l1800 1964  
                                        l1544 168A                                          l1536 1642  
                                        l1528 15E0                                          l1560 1710  
                                        l1552 16BE                                          l1608 1C74  
                                        l1480 1A72                                          l1472 1A26  
                                        l1640 11AA                                          l1632 1114  
                                        l1624 10E6                                          l1616 109E  
                                        l1712 14DE                                          l1722 1BEA  
                                        l1802 1974                                          l1538 1654  
                                        l1570 1786                                          l1562 172E  
                                        l1554 16DE                                          l1466 1D22  
                                        l1482 1AA8                                          l1474 1A38  
                                        l1490 1C34                                          l1650 1266  
                                        l1642 11B0                                          l1634 111C  
                                        l1626 10F8                                          l1618 10AE  
                                        l1714 150C                                          l1706 14C0  
                                        l1730 1B50                                          l1724 1BF6  
                                        l1740 1D70                                          l1804 197C  
                                        l1580 17EE                                          l1572 17A6  
                                        l1564 1736                                          l1556 16E2  
                                        l1548 16AC                                          l1468 1D32  
                                        l1476 1A4A                                          l1492 1C38  
                                        l1660 12B8                                          l1652 1280  
                                        l1636 1122                                          l1644 1214  
                                        l1628 1106                                          l1708 14D2  
                                        l1732 1B58                                          l1812 1986  
                                        l1726 1C02                                          l1574 17B8  
                                        l1566 174A                                          l1558 16F0  
                                        l1478 1A54                                          l1486 1C16  
                                        l1494 1C9A                                          l1590 1842  
                                        l1662 12CA                                          l1646 122E  
                                        l1654 1290                                          l1638 11A4  
                                        l1734 1B66                                          l1830 1A02  
                                        l1822 199E                                          l1814 198A  
                                        l1672 1D8A                                          l1728 1C0E  
                                        l1568 1758                                          l1576 17BE  
                                        l1488 1C22                                          l1496 1CA6  
                                        l1592 184E                                          l1584 1810  
                                        l1664 12D6                                          l1656 12A2  
                                        l1648 124C                                          l1680 1348  
                                        l1736 1B8C                                          l1824 19C4  
                                        l1816 1996                                          l1674 1D80  
                                        l1738 1D64                                          l1578 17CE  
                                        l1498 1CAA                                          l1594 1862  
                                        l1586 1820                                          l1666 12DE  
                                        l1658 12B2                                          l1690 13CC  
                                        l1682 135A                                          l1826 19EA  
                                        l1676 1D94                                          l1780 18F4  
                                        l1772 18D6                                          l1596 1876  
                                        l1588 1834                                          l1668 12F0  
                                        l1692 1428                                          l1684 136C  
                                        l1828 19FE                                          l1790 192C  
                                        l1782 1902                                          l1774 18DA  
                                        l1598 187A                                          l1686 1370  
                                        l1678 131A                                          l1766 1CD4  
                                        l1792 193A                                          l1784 190A  
                                        l1776 18E8                                          l1696 1460  
                                        l1688 139E                                          l1768 1CDE  
                                        l1794 1950                                          l1786 191C  
                                        l1778 18F0                                          l1698 148E  
                                        l1796 1958                                          l1788 1924  
                                        l1798 195E                                          ?_pad 0013  
                                        STR_1 1001                                          STR_2 102F  
                                        u1000 1290                                          u1001 128C  
                                        u1010 12A2                                          u1011 129E  
                                        u1020 12B2                                          u1021 12AE  
                                        u1030 12CA                                          u1031 12C6  
                                        u1200 1950                                          u1040 1348  
                                        u1201 194C                                          u1041 1344  
                                        u1210 1974                                          u1050 139E  
                                        u1211 1970                                          u1051 139A  
                                        u1060 13CC                                          u1220 19C4  
                                        u1061 13C8                                          u1221 19C0  
                                        u1070 148E                                          u1230 19EA  
                                        u1071 148A                                          u1231 19E6  
                                        u1160 18E8                                          u1080 1BAE  
                                        u1240 1A1E                                          u1161 18E4  
                                        u1081 1BAA                                          u1241 1A1A  
                                        u1170 1902                                          u1171 18FE  
                                        u1180 191C                                          u1181 1918  
                                        _LATA 003FBA                                          u1190 193A  
                                        _LATB 003FBB                                          u1191 1936  
                                        _LATC 003FBC                                          _LATD 003FBD  
                                        _LATE 003FBE                                          _PMD0 0039C0  
                                        _PMD1 0039C1                                          _PMD2 0039C2  
                                        _PMD3 0039C3                                          _PMD4 0039C4  
                                        _PMD5 0039C5                                          _PMD6 0039C6  
                                        _PMD7 0039C7                                          _WPUA 003A41  
                                        _WPUB 003A51                                          _WPUC 003A61  
                                        _WPUD 003A71                                          _WPUE 003A81  
                                        abs@a 0013                                          _dbuf 0069  
                                        _main 1986                                          _dtoa 1036  
                                        _prec 0064                                          _nout 0060  
                                        pad@i 001A                                          pad@p 0017  
                                        fsr1h 003FE2                                          fsr2h 003FDA  
                                        indf2 003FDF                                          fsr1l 003FE1  
                                        pad@w 001C                                          fsr2l 003FD9  
                                        start FFFC                                  ___param_bank 000000  
                                       ??_abs 0015                                         ??_pad 0019  
              __size_of_OSCILLATOR_Initialize 0018                 __end_of_OSCILLATOR_Initialize 1D52  
                             __end_of___aodiv 16AC                                         ?_main 0001  
                                       ?_dtoa 001E                               __end_of___aomod 1810  
                             __end_of___awmod 1986                                         _U2P1L 003DD4  
                                       _U2P2L 003DD6                                         _U2P3L 003DD8  
                                       _U2UIR 003DE0                                         _U2RXB 003DD0  
                                       _U2TXB 003DD2                                         _OSCEN 0039DD  
                                vfpfcnvrt@fmt 0044                                         _TRISA 003FC2  
                                       _TRISB 003FC3                                         _TRISC 003FC4  
                                       _TRISD 003FC5                                         _TRISE 003FC6  
                                       _flags 0066                                         _fputc 1A26  
                                       _fputs 1C16                                         pad@fp 0013  
                                       _width 0062                                         _putch 1D76  
                                       main@i 005E                                         dtoa@d 0020  
                                       dtoa@i 0040                                         dtoa@n 0038  
                                       dtoa@p 0032                                         dtoa@s 0036  
                                       dtoa@w 0034                                         tablat 003FF5  
                                       status 003FD8                ??_UART2_SetOverrunErrorHandler 0003  
                             __initialization 1D52                                  __end_of_main 1A26  
                                __end_of_dtoa 131A                                  ?_UART2_Write 0001  
                                      ??_main 005E                                        ??_dtoa 0028  
                               __activetblptr 000003                                        ?_fputc 0003  
                                      ?_fputs 000C                                        _ANSELA 003A40  
                                      ?_putch 0001                                        _ANSELB 003A50  
                                      _ANSELC 003A60                                        _ANSELD 003A70  
                                      _ANSELE 003A80                                        _RB1I2C 003A5A  
                                      _RB2I2C 003A5B                                        _RD0I2C 003A7A  
                                      _RC3I2C 003A6A                                        _RD1I2C 003A7B  
                                      _RC4I2C 003A6B                                        _U2CON0 003DDA  
                                      _U2CON1 003DDB                                        _U2CON2 003DDC  
                                      _U2BRGH 003DDE                                        _U2FIFO 003DDF  
                                      _U2BRGL 003DDD                                        _RB6PPS 003A0E  
                                      _ODCONA 003A42                                        _ODCONB 003A52  
                                      _ODCONC 003A62                                        _ODCOND 003A72  
                                      _ODCONE 003A82                                        _INLVLA 003A44  
                                      _INLVLB 003A54                                        _INLVLC 003A64  
                                      _INLVLD 003A74                                        _INLVLE 003A84  
                                      _OSCFRQ 0039DF                              _UART2_Initialize 1BB8  
                   _UART2_OverrunErrorHandler 008B                                  vfprintf@cfmt 0058  
                                   ??___aodiv 0011                                     ??___aomod 0011  
                                   ??___awmod 0005                                        clear_0 1D58  
                             ___awmod@divisor 0003                               ___awmod@counter 0005  
                                      _printf 1CD4                                        pad@buf 0015  
                                      dtoa@fp 001E                                        _strlen 1C9A  
                                      fputc@c 0003                                _PMD_Initialize 1CFC  
                                      fputs@c 0010                                        fputs@i 0011  
                                      fputs@s 000C                                  __mediumconst 0000  
                                      tblptrh 003FF7                                        tblptrl 003FF6  
                                      tblptru 003FF8                              __end_of_vfprintf 1BB8  
                           _SYSTEM_Initialize 1D64                                    __accesstop 0060  
                     __end_of__initialization 1D5E                            ?_SYSTEM_Initialize 0001  
                               ___rparam_used 000001                                __pcstackCOMRAM 0001  
                       _UART2_SetErrorHandler 1D94                           ??_SYSTEM_Initialize 0003  
                               __end_of_fputc 1ABC                                 __end_of_fputs 1C5A  
                               __end_of_putch 1D80                        __end_of_PMD_Initialize 1D20  
                                     ??_fputc 0007                     __end_of_SYSTEM_Initialize 1D76  
                                     ??_fputs 0010                                       ??_putch 0002  
                                  __pbssBANK0 0060          __end_of_UART2_SetFramingErrorHandler 1D94  
       __size_of_UART2_SetFramingErrorHandler 000A                  _UART2_SetFramingErrorHandler 1D8A  
                                     ?_printf 005A                               ?_PMD_Initialize 0001  
                                     ?_strlen 0001                                       _U2ERRIE 003DE2  
                                     _U2ERRIR 003DE1                          __size_of_UART2_Write 001A  
                                     _U2RXPPS 003AE8                                       _OSCCON1 0039D9  
                                     _OSCCON3 0039DB                            __size_of_vfpfcnvrt 020A  
                                     _OSCTUNE 0039DE                                       _SLRCONA 003A43  
                                     _SLRCONB 003A53                                       _SLRCONC 003A63  
                                     _SLRCOND 003A73                                       _SLRCONE 003A83  
                                     __Hparam 0000                        ?_UART2_SetErrorHandler 0001  
                                     __Lparam 0000                                       ___aodiv 1524  
                                     ___aomod 16AC                                       ___awmod 18D6  
                                   ?_vfprintf 0052                                  __psmallconst 1000  
               ?_UART2_SetFramingErrorHandler 0001                                       __pcinit 1D52  
                                     __ramtop 1000                                       __ptext0 1986  
                                     __ptext1 1CD4                                       __ptext2 1B50  
                                     __ptext3 131A                                       __ptext4 1036  
                                     __ptext5 1810                                       __ptext6 1C9A  
                                     __ptext7 1C16                                       __ptext8 1A26  
                                     __ptext9 1D76                               __size_of_printf 0028  
                             __size_of_strlen 003A              _UART2_DefaultOverrunErrorHandler 000000  
                       _OSCILLATOR_Initialize 1D3A                                  __size_of_abs 0040  
                                __size_of_pad 00C6                              ___awmod@dividend 0001  
                    ??_PIN_MANAGER_Initialize 0001                      __end_of_UART2_Initialize 1C16  
                  __size_of_SYSTEM_Initialize 0012                          end_of_initialization 1D5E  
                                     fputc@fp 0005                                       fputs@fp 000E  
                           __end_of_vfpfcnvrt 1524                                       postdec2 003FDD  
                                     postinc0 003FEE                                       postinc1 003FE6  
                                     postinc2 003FDE                                    ??_vfprintf 0058  
                                     strlen@a 0003                                       strlen@s 0001  
                                 vfpfcnvrt@ap 0046                                   vfpfcnvrt@fp 0042  
                                 vfpfcnvrt@ll 004A                        ?_OSCILLATOR_Initialize 0001  
                              __end_of_printf 1CFC                                __end_of_strlen 1CD4  
              ??_UART2_SetFramingErrorHandler 0003                           start_initialization 1D52  
             __size_of_PIN_MANAGER_Initialize 0094                                   __end_of_abs 1C9A  
                                 __end_of_pad 18D6                     _UART2_DefaultErrorHandler 000000  
                                 putch@txData 0002                                   vfprintf@fmt 0054  
                            ??_PMD_Initialize 0001                             UART2_Write@txData 0001  
                                    ??_printf 005E                                      ??_strlen 0003  
                   _UART2_FramingErrorHandler 008D                                 __pcstackBANK0 008F  
                            ___aodiv@dividend 0001                       ??_UART2_SetErrorHandler 0003  
                                   __pnvBANK0 0089                        _PIN_MANAGER_Initialize 1ABC  
                                    ?___aodiv 0001                                      ?___aomod 0001  
                            ___aodiv@quotient 0013                                      ?___awmod 0001  
                               ??_UART2_Write 0001                             __size_of_vfprintf 0068  
                                 __smallconst 1000                             ?_UART2_Initialize 0001  
                              __size_of_fputc 0096                                __size_of_fputs 0044  
                          ??_UART2_Initialize 0003                                __size_of_putch 000A  
                            _uart2RxLastError 0068                                   _U2ERRIRbits 003DE1  
       UART2_SetErrorHandler@interruptHandler 0001                                      _PIR6bits 0039A6  
                                   _vfpfcnvrt 131A                            _UART2_ErrorHandler 0089  
                         __end_of_UART2_Write 1D3A                                      __Hrparam 0000  
                                  vfprintf@ap 0056                                      __Lrparam 0000  
                                  vfprintf@fp 0052                       ??_OSCILLATOR_Initialize 0001  
                            __size_of___aodiv 0188                              __size_of___aomod 0164  
                            __size_of___awmod 00B0                                    ?_vfpfcnvrt 0042  
                             ___aodiv@divisor 0009                               ___aodiv@counter 0011  
                                    _dtoa$850 0030                                      __ptext10 1D20  
                                    __ptext11 1C5A                                      __ptext20 1CFC  
                                    __ptext12 16AC                                      __ptext21 1ABC  
                                    __ptext13 1524                                      __ptext22 1D3A  
                                    __ptext14 18D6                                      __ptext15 1D64  
                                    __ptext16 1BB8                                      __ptext17 1D80  
                                    __ptext18 1D8A                                      __ptext19 1D94  
                                  _U2CON0bits 003DDA                                 __size_of_main 00A0  
                               __size_of_dtoa 02E4              _UART2_DefaultFramingErrorHandler 000000  
UART2_SetOverrunErrorHandler@interruptHandler 0001                                      _vfprintf 1B50  
                                   printf@fmt 005A                                   _UART2_Write 1D20  
                            ___aomod@dividend 0001          __end_of_UART2_SetOverrunErrorHandler 1D8A  
       __size_of_UART2_SetOverrunErrorHandler 000A                  _UART2_SetOverrunErrorHandler 1D80  
                     ?_PIN_MANAGER_Initialize 0001                __size_of_UART2_SetErrorHandler 000A  
               __end_of_UART2_SetErrorHandler 1D9E                                      printf@ap 0091  
UART2_SetFramingErrorHandler@interruptHandler 0001                               ___aomod@divisor 0009  
                                 ??_vfpfcnvrt 0048                               ___aomod@counter 0011  
                                ___aodiv@sign 0012                __end_of_PIN_MANAGER_Initialize 1B50  
               ?_UART2_SetOverrunErrorHandler 0001                                  ___aomod@sign 0012  
                   __size_of_UART2_Initialize 005E  
