

Microchip MPLAB XC8 Assembler V2.30 build 20200825195618 
                                                                                               Thu Dec 03 15:25:29 2020

Microchip MPLAB XC8 C Compiler v2.30 (Free license) build 20200825195618 Og1 
     1                           	processor	18F46K42
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=3
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=3
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=3
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=3
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=2
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=2
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=2
    34                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=2
    35                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    36                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=2
    40                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=2
    41                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=2
    42                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=2
    43                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=2
    44                           	psect	text33,global,reloc=2,class=CODE,delta=1
    45                           	psect	text34,global,reloc=2,class=CODE,delta=1
    46                           	psect	text35,global,reloc=2,class=CODE,delta=1
    47                           	psect	text36,global,reloc=2,class=CODE,delta=1
    48                           	psect	text37,global,reloc=2,class=CODE,delta=1
    49                           	psect	text38,global,reloc=2,class=CODE,delta=1
    50                           	psect	text39,global,reloc=2,class=CODE,delta=1
    51                           	psect	text40,global,reloc=2,class=CODE,delta=1
    52                           	psect	text41,global,reloc=2,class=CODE,delta=1
    53                           	psect	text42,global,reloc=2,class=CODE,delta=1
    54                           	psect	text43,global,reloc=2,class=CODE,delta=1
    55                           	psect	text44,global,reloc=2,class=CODE,delta=1
    56                           	psect	text45,global,reloc=2,class=CODE,delta=1
    57                           	psect	text46,global,reloc=2,class=CODE,delta=1
    58                           	psect	text47,global,reloc=2,class=CODE,delta=1
    59                           	psect	text48,global,reloc=2,class=CODE,delta=1
    60                           	psect	text49,global,reloc=2,class=CODE,delta=1
    61                           	psect	text50,global,reloc=2,class=CODE,delta=1
    62                           	psect	text51,global,reloc=2,class=CODE,delta=1
    63                           	psect	text52,global,reloc=2,class=CODE,delta=1
    64                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    65                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    66                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    67                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    68  0000                     
    69                           ; Version 2.20
    70                           ; Generated 05/05/2020 GMT
    71                           ; 
    72                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    73                           ; All rights reserved.
    74                           ; 
    75                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    76                           ; 
    77                           ; Redistribution and use in source and binary forms, with or without modification, are
    78                           ; permitted provided that the following conditions are met:
    79                           ; 
    80                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    81                           ;        conditions and the following disclaimer.
    82                           ; 
    83                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    84                           ;        of conditions and the following disclaimer in the documentation and/or other
    85                           ;        materials provided with the distribution.
    86                           ; 
    87                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    88                           ;        software without specific prior written permission.
    89                           ; 
    90                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    91                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    92                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    93                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    94                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    95                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    96                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    97                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    98                           ; 
    99                           ; 
   100                           ; Code-generator required, PIC18F46K42 Definitions
   101                           ; 
   102                           ; SFR Addresses
   103  0000                     
   104 ;; Function _UART2_DefaultFramingErrorHandler is unused but had its address taken
   105  0000                     
   106 ;; Function _UART2_DefaultOverrunErrorHandler is unused but had its address taken
   107  0000                     
   108 ;; Function _UART2_DefaultErrorHandler is unused but had its address taken
   109  0000                     
   110                           	psect	mediumconst
   111  00FE94                     __pmediumconst:
   112                           	callstack 0
   113  00FE94  00                 	db	0
   114  00FE95                     __powers_:
   115                           	callstack 0
   116  00FE95  0000               	dw	0
   117  00FE97  3F80               	dw	16256
   118  00FE99  0000               	dw	0
   119  00FE9B  4120               	dw	16672
   120  00FE9D  0000               	dw	0
   121  00FE9F  42C8               	dw	17096
   122  00FEA1  0000               	dw	0
   123  00FEA3  447A               	dw	17530
   124  00FEA5  4000               	dw	16384
   125  00FEA7  461C               	dw	17948
   126  00FEA9  5000               	dw	20480
   127  00FEAB  47C3               	dw	18371
   128  00FEAD  2400               	dw	9216
   129  00FEAF  4974               	dw	18804
   130  00FEB1  9680               	dw	38528
   131  00FEB3  4B18               	dw	19224
   132  00FEB5  BC20               	dw	48160
   133  00FEB7  4CBE               	dw	19646
   134  00FEB9  6B28               	dw	27432
   135  00FEBB  4E6E               	dw	20078
   136  00FEBD  02F9               	dw	761
   137  00FEBF  5015               	dw	20501
   138  00FEC1  78EC               	dw	30956
   139  00FEC3  60AD               	dw	24749
   140  00FEC5  F2CA               	dw	62154
   141  00FEC7  7149               	dw	29001
   142  00FEC9                     __end_of__powers_:
   143                           	callstack 0
   144  00FEC9                     __npowers_:
   145                           	callstack 0
   146  00FEC9  0000               	dw	0
   147  00FECB  3F80               	dw	16256
   148  00FECD  CCCD               	dw	52429
   149  00FECF  3DCC               	dw	15820
   150  00FED1  D70A               	dw	55050
   151  00FED3  3C23               	dw	15395
   152  00FED5  126F               	dw	4719
   153  00FED7  3A83               	dw	14979
   154  00FED9  B717               	dw	46871
   155  00FEDB  38D1               	dw	14545
   156  00FEDD  C5AC               	dw	50604
   157  00FEDF  3727               	dw	14119
   158  00FEE1  37BD               	dw	14269
   159  00FEE3  3586               	dw	13702
   160  00FEE5  BF95               	dw	49045
   161  00FEE7  33D6               	dw	13270
   162  00FEE9  CC77               	dw	52343
   163  00FEEB  322B               	dw	12843
   164  00FEED  705F               	dw	28767
   165  00FEEF  3089               	dw	12425
   166  00FEF1  E6FF               	dw	59135
   167  00FEF3  2EDB               	dw	11995
   168  00FEF5  E508               	dw	58632
   169  00FEF7  1E3C               	dw	7740
   170  00FEF9  4260               	dw	16992
   171  00FEFB  0DA2               	dw	3490
   172  00FEFD                     __end_of__npowers_:
   173                           	callstack 0
   174  00FEFD                     exp@coeff:
   175                           	callstack 0
   176  00FEFD  0000               	dw	0
   177  00FEFF  3F80               	dw	16256
   178  00FF01  7218               	dw	29208
   179  00FF03  3F31               	dw	16177
   180  00FF05  FDF0               	dw	65008
   181  00FF07  3E75               	dw	15989
   182  00FF09  5847               	dw	22599
   183  00FF0B  3D63               	dw	15715
   184  00FF0D  9558               	dw	38232
   185  00FF0F  3C1D               	dw	15389
   186  00FF11  C482               	dw	50306
   187  00FF13  3AAE               	dw	15022
   188  00FF15  78A8               	dw	30888
   189  00FF17  3921               	dw	14625
   190  00FF19  93EF               	dw	37871
   191  00FF1B  3780               	dw	14208
   192  00FF1D  92A0               	dw	37536
   193  00FF1F  35A7               	dw	13735
   194  00FF21  5646               	dw	22086
   195  00FF23  3415               	dw	13333
   196  00FF25                     __end_ofexp@coeff:
   197                           	callstack 0
   198  00FF25                     _dpowers:
   199                           	callstack 0
   200  00FF25  0001               	dw	1
   201  00FF27  0000               	dw	0
   202  00FF29  000A               	dw	10
   203  00FF2B  0000               	dw	0
   204  00FF2D  0064               	dw	100
   205  00FF2F  0000               	dw	0
   206  00FF31  03E8               	dw	1000
   207  00FF33  0000               	dw	0
   208  00FF35  2710               	dw	10000
   209  00FF37  0000               	dw	0
   210  00FF39  86A0               	dw	34464
   211  00FF3B  0001               	dw	1
   212  00FF3D  4240               	dw	16960
   213  00FF3F  000F               	dw	15
   214  00FF41  9680               	dw	38528
   215  00FF43  0098               	dw	152
   216  00FF45  E100               	dw	57600
   217  00FF47  05F5               	dw	1525
   218  00FF49  CA00               	dw	51712
   219  00FF4B  3B9A               	dw	15258
   220  00FF4D                     __end_of_dpowers:
   221                           	callstack 0
   222  00FF4D                     log@coeff:
   223                           	callstack 0
   224  00FF4D  0000               	dw	0
   225  00FF4F  0000               	dw	0
   226  00FF51  FFC4               	dw	65476
   227  00FF53  3F7F               	dw	16255
   228  00FF55  EF80               	dw	61312
   229  00FF57  BEFF               	dw	48895
   230  00FF59  E190               	dw	57744
   231  00FF5B  3EA9               	dw	16041
   232  00FF5D  82EC               	dw	33516
   233  00FF5F  BE76               	dw	48758
   234  00FF61  AD82               	dw	44418
   235  00FF63  3E2B               	dw	15915
   236  00FF65  3C0E               	dw	15374
   237  00FF67  BDC3               	dw	48579
   238  00FF69  D187               	dw	53639
   239  00FF6B  3D13               	dw	15635
   240  00FF6D  7841               	dw	30785
   241  00FF6F  BBD3               	dw	48083
   242  00FF71                     __end_oflog@coeff:
   243                           	callstack 0
   244  00FF71                     STR_2:
   245  00FF71  0A                 	db	10
   246  00FF72  0D                 	db	13
   247  00FF73  45                 	db	69	;'E'
   248  00FF74  61                 	db	97	;'a'
   249  00FF75  73                 	db	115	;'s'
   250  00FF76  79                 	db	121	;'y'
   251  00FF77  20                 	db	32
   252  00FF78  53                 	db	83	;'S'
   253  00FF79  65                 	db	101	;'e'
   254  00FF7A  74                 	db	116	;'t'
   255  00FF7B  75                 	db	117	;'u'
   256  00FF7C  70                 	db	112	;'p'
   257  00FF7D  20                 	db	32
   258  00FF7E  76                 	db	118	;'v'
   259  00FF7F  61                 	db	97	;'a'
   260  00FF80  6C                 	db	108	;'l'
   261  00FF81  75                 	db	117	;'u'
   262  00FF82  65                 	db	101	;'e'
   263  00FF83  20                 	db	32
   264  00FF84  6F                 	db	111	;'o'
   265  00FF85  66                 	db	102	;'f'
   266  00FF86  20                 	db	32
   267  00FF87  50                 	db	80	;'P'
   268  00FF88  57                 	db	87	;'W'
   269  00FF89  4D                 	db	77	;'M'
   270  00FF8A  35                 	db	53	;'5'
   271  00FF8B  44                 	db	68	;'D'
   272  00FF8C  43                 	db	67	;'C'
   273  00FF8D  20                 	db	32
   274  00FF8E  69                 	db	105	;'i'
   275  00FF8F  73                 	db	115	;'s'
   276  00FF90  20                 	db	32
   277  00FF91  25                 	db	37
   278  00FF92  75                 	db	117	;'u'
   279  00FF93  20                 	db	32
   280  00FF94  20                 	db	32
   281  00FF95  50                 	db	80	;'P'
   282  00FF96  52                 	db	82	;'R'
   283  00FF97  32                 	db	50	;'2'
   284  00FF98  20                 	db	32
   285  00FF99  69                 	db	105	;'i'
   286  00FF9A  73                 	db	115	;'s'
   287  00FF9B  20                 	db	32
   288  00FF9C  25                 	db	37
   289  00FF9D  75                 	db	117	;'u'
   290  00FF9E  0A                 	db	10
   291  00FF9F  0D                 	db	13
   292  00FFA0  00                 	db	0
   293  00FFA1                     STR_3:
   294  00FFA1  0A                 	db	10
   295  00FFA2  0D                 	db	13
   296  00FFA3  45                 	db	69	;'E'
   297  00FFA4  61                 	db	97	;'a'
   298  00FFA5  73                 	db	115	;'s'
   299  00FFA6  79                 	db	121	;'y'
   300  00FFA7  20                 	db	32
   301  00FFA8  53                 	db	83	;'S'
   302  00FFA9  65                 	db	101	;'e'
   303  00FFAA  74                 	db	116	;'t'
   304  00FFAB  75                 	db	117	;'u'
   305  00FFAC  70                 	db	112	;'p'
   306  00FFAD  20                 	db	32
   307  00FFAE  76                 	db	118	;'v'
   308  00FFAF  61                 	db	97	;'a'
   309  00FFB0  6C                 	db	108	;'l'
   310  00FFB1  75                 	db	117	;'u'
   311  00FFB2  65                 	db	101	;'e'
   312  00FFB3  20                 	db	32
   313  00FFB4  6F                 	db	111	;'o'
   314  00FFB5  66                 	db	102	;'f'
   315  00FFB6  20                 	db	32
   316  00FFB7  50                 	db	80	;'P'
   317  00FFB8  57                 	db	87	;'W'
   318  00FFB9  4D                 	db	77	;'M'
   319  00FFBA  36                 	db	54	;'6'
   320  00FFBB  44                 	db	68	;'D'
   321  00FFBC  43                 	db	67	;'C'
   322  00FFBD  20                 	db	32
   323  00FFBE  69                 	db	105	;'i'
   324  00FFBF  73                 	db	115	;'s'
   325  00FFC0  20                 	db	32
   326  00FFC1  25                 	db	37
   327  00FFC2  75                 	db	117	;'u'
   328  00FFC3  20                 	db	32
   329  00FFC4  20                 	db	32
   330  00FFC5  50                 	db	80	;'P'
   331  00FFC6  52                 	db	82	;'R'
   332  00FFC7  34                 	db	52	;'4'
   333  00FFC8  20                 	db	32
   334  00FFC9  69                 	db	105	;'i'
   335  00FFCA  73                 	db	115	;'s'
   336  00FFCB  20                 	db	32
   337  00FFCC  25                 	db	37
   338  00FFCD  75                 	db	117	;'u'
   339  00FFCE  0A                 	db	10
   340  00FFCF  0D                 	db	13
   341  00FFD0  00                 	db	0
   342  00FFD1                     STR_1:
   343  00FFD1  52                 	db	82	;'R'
   344  00FFD2  44                 	db	68	;'D'
   345  00FFD3  32                 	db	50	;'2'
   346  00FFD4  20                 	db	32
   347  00FFD5  4F                 	db	79	;'O'
   348  00FFD6  6E                 	db	110	;'n'
   349  00FFD7  20                 	db	32
   350  00FFD8  54                 	db	84	;'T'
   351  00FFD9  69                 	db	105	;'i'
   352  00FFDA  6D                 	db	109	;'m'
   353  00FFDB  65                 	db	101	;'e'
   354  00FFDC  20                 	db	32
   355  00FFDD  25                 	db	37
   356  00FFDE  66                 	db	102	;'f'
   357  00FFDF  0A                 	db	10
   358  00FFE0  0A                 	db	10
   359  00FFE1  0D                 	db	13
   360  00FFE2  00                 	db	0
   361  00FFE3                     STR_5:
   362  00FFE3  53                 	db	83	;'S'
   363  00FFE4  74                 	db	116	;'t'
   364  00FFE5  61                 	db	97	;'a'
   365  00FFE6  74                 	db	116	;'t'
   366  00FFE7  65                 	db	101	;'e'
   367  00FFE8  20                 	db	32
   368  00FFE9  3D                 	db	61	;'='
   369  00FFEA  20                 	db	32
   370  00FFEB  25                 	db	37
   371  00FFEC  75                 	db	117	;'u'
   372  00FFED  20                 	db	32
   373  00FFEE  0A                 	db	10
   374  00FFEF  0D                 	db	13
   375  00FFF0  00                 	db	0
   376  00FFF1                     STR_6:
   377  00FFF1  25                 	db	37
   378  00FFF2  63                 	db	99	;'c'
   379  00FFF3  25                 	db	37
   380  00FFF4  63                 	db	99	;'c'
   381  00FFF5  25                 	db	37
   382  00FFF6  63                 	db	99	;'c'
   383  00FFF7  25                 	db	37
   384  00FFF8  63                 	db	99	;'c'
   385  00FFF9  00                 	db	0
   386  00FFFA  00                 	db	0	; dummy byte at the end
   387  0000                     
   388                           	psect	nvBANK0
   389  0000CF                     __pnvBANK0:
   390                           	callstack 0
   391  0000CF                     _UART2_ErrorHandler:
   392                           	callstack 0
   393  0000CF                     	ds	2
   394  0000D1                     _UART2_OverrunErrorHandler:
   395                           	callstack 0
   396  0000D1                     	ds	2
   397  0000D3                     _UART2_FramingErrorHandler:
   398                           	callstack 0
   399  0000D3                     	ds	2
   400  0000D5                     _timer0ReloadVal16bit:
   401                           	callstack 0
   402  0000D5                     	ds	2
   403  0000                     _PIR4bits	set	14756
   404  0000                     _PIR7bits	set	14759
   405  0000                     _PIR6bits	set	14758
   406  0000                     _PMD7	set	14791
   407  0000                     _PMD6	set	14790
   408  0000                     _PMD5	set	14789
   409  0000                     _PMD4	set	14788
   410  0000                     _PMD3	set	14787
   411  0000                     _PMD2	set	14786
   412  0000                     _PMD1	set	14785
   413  0000                     _PMD0	set	14784
   414  0000                     _OSCTUNE	set	14814
   415  0000                     _OSCFRQ	set	14815
   416  0000                     _OSCEN	set	14813
   417  0000                     _OSCCON3	set	14811
   418  0000                     _OSCCON1	set	14809
   419  0000                     _PIR3bits	set	14755
   420  0000                     _TMR0IF	set	118047
   421  0000                     _RC2PPS	set	14866
   422  0000                     _RB6PPS	set	14862
   423  0000                     _RD2PPS	set	14874
   424  0000                     _RC0PPS	set	14864
   425  0000                     _U2RXPPS	set	15080
   426  0000                     _INLVLE	set	14980
   427  0000                     _INLVLD	set	14964
   428  0000                     _INLVLC	set	14948
   429  0000                     _INLVLB	set	14932
   430  0000                     _INLVLA	set	14916
   431  0000                     _SLRCONE	set	14979
   432  0000                     _SLRCOND	set	14963
   433  0000                     _SLRCONC	set	14947
   434  0000                     _SLRCONB	set	14931
   435  0000                     _SLRCONA	set	14915
   436  0000                     _ODCOND	set	14962
   437  0000                     _ODCONC	set	14946
   438  0000                     _ODCONB	set	14930
   439  0000                     _ODCONA	set	14914
   440  0000                     _ODCONE	set	14978
   441  0000                     _RD1I2C	set	14971
   442  0000                     _RD0I2C	set	14970
   443  0000                     _RC4I2C	set	14955
   444  0000                     _RC3I2C	set	14954
   445  0000                     _RB2I2C	set	14939
   446  0000                     _RB1I2C	set	14938
   447  0000                     _WPUC	set	14945
   448  0000                     _WPUA	set	14913
   449  0000                     _WPUB	set	14929
   450  0000                     _WPUE	set	14977
   451  0000                     _WPUD	set	14961
   452  0000                     _ANSELA	set	14912
   453  0000                     _ANSELE	set	14976
   454  0000                     _ANSELB	set	14928
   455  0000                     _ANSELC	set	14944
   456  0000                     _ANSELD	set	14960
   457  0000                     _U2TXB	set	15826
   458  0000                     _U2RXB	set	15824
   459  0000                     _U2ERRIRbits	set	15841
   460  0000                     _U2CON0bits	set	15834
   461  0000                     _U2ERRIE	set	15842
   462  0000                     _U2ERRIR	set	15841
   463  0000                     _U2UIR	set	15840
   464  0000                     _U2FIFO	set	15839
   465  0000                     _U2BRGH	set	15838
   466  0000                     _U2BRGL	set	15837
   467  0000                     _U2CON2	set	15836
   468  0000                     _U2CON1	set	15835
   469  0000                     _U2CON0	set	15834
   470  0000                     _U2P3L	set	15832
   471  0000                     _U2P2L	set	15830
   472  0000                     _U2P1L	set	15828
   473  0000                     _CCPTMRS1bits	set	16223
   474  0000                     _PORTDbits	set	16333
   475  0000                     _T0CON1bits	set	16313
   476  0000                     _PWM7DCL	set	16228
   477  0000                     _PWM7DCH	set	16229
   478  0000                     _PWM7CON	set	16230
   479  0000                     _PWM6DCL	set	16232
   480  0000                     _PWM6DCH	set	16233
   481  0000                     _PWM6CON	set	16234
   482  0000                     _PR2	set	16299
   483  0000                     _TMR2	set	16298
   484  0000                     _T2CONbits	set	16300
   485  0000                     _T2RSTbits	set	16303
   486  0000                     _T2HLTbits	set	16301
   487  0000                     _T2CON	set	16300
   488  0000                     _T2TMR	set	16298
   489  0000                     _T2PR	set	16299
   490  0000                     _T2RST	set	16303
   491  0000                     _T2HLT	set	16301
   492  0000                     _T2CLKCON	set	16302
   493  0000                     _PR4	set	16287
   494  0000                     _TMR4	set	16286
   495  0000                     _T4CONbits	set	16288
   496  0000                     _T4RSTbits	set	16291
   497  0000                     _T4HLTbits	set	16289
   498  0000                     _T4CON	set	16288
   499  0000                     _T4TMR	set	16286
   500  0000                     _T4PR	set	16287
   501  0000                     _T4RST	set	16291
   502  0000                     _T4HLT	set	16289
   503  0000                     _T4CLKCON	set	16290
   504  0000                     _PWM5DCL	set	16236
   505  0000                     _PWM5DCH	set	16237
   506  0000                     _PWM5CON	set	16238
   507  0000                     _TRISD	set	16325
   508  0000                     _TRISC	set	16324
   509  0000                     _TRISB	set	16323
   510  0000                     _TRISA	set	16322
   511  0000                     _TRISE	set	16326
   512  0000                     _LATC	set	16316
   513  0000                     _LATB	set	16315
   514  0000                     _LATA	set	16314
   515  0000                     _LATD	set	16317
   516  0000                     _LATE	set	16318
   517  0000                     _T0CON0bits	set	16312
   518  0000                     _T0CON0	set	16312
   519  0000                     _TMR0L	set	16310
   520  0000                     _TMR0H	set	16311
   521  0000                     _T0CON1	set	16313
   522                           
   523                           ; #config settings
   524                           
   525                           	psect	cinit
   526  00BF9A                     __pcinit:
   527                           	callstack 0
   528  00BF9A                     start_initialization:
   529                           	callstack 0
   530  00BF9A                     __initialization:
   531                           	callstack 0
   532                           
   533                           ; Clear objects allocated to BANK0 (9 bytes)
   534  00BF9A  EE00  F0C6         	lfsr	0,__pbssBANK0
   535  00BF9E  0E09               	movlw	9
   536  00BFA0                     clear_0:
   537  00BFA0  6AEE               	clrf	postinc0,c
   538  00BFA2  06E8               	decf	wreg,f,c
   539  00BFA4  E1FD               	bnz	clear_0
   540  00BFA6                     end_of_initialization:
   541                           	callstack 0
   542  00BFA6                     __end_of__initialization:
   543                           	callstack 0
   544  00BFA6  0100               	movlb	0
   545  00BFA8  EF8C  F077         	goto	_main	;jump to C main() function
   546                           
   547                           	psect	bssBANK0
   548  0000C6                     __pbssBANK0:
   549                           	callstack 0
   550  0000C6                     _errno:
   551                           	callstack 0
   552  0000C6                     	ds	2
   553  0000C8                     _last_switch1_value:
   554                           	callstack 0
   555  0000C8                     	ds	2
   556  0000CA                     _has_switch1_changed:
   557                           	callstack 0
   558  0000CA                     	ds	2
   559  0000CC                     _counter:
   560                           	callstack 0
   561  0000CC                     	ds	2
   562  0000CE                     _uart2RxLastError:
   563                           	callstack 0
   564  0000CE                     	ds	1
   565                           
   566                           	psect	cstackBANK0
   567  000060                     __pcstackBANK0:
   568                           	callstack 0
   569  000060                     ___flmul@sign:
   570                           	callstack 0
   571                           
   572                           ; 1 bytes @ 0x0
   573  000060                     	ds	1
   574  000061                     ___flmul@grs:
   575                           	callstack 0
   576                           
   577                           ; 4 bytes @ 0x1
   578  000061                     	ds	4
   579  000065                     ___flmul@aexp:
   580                           	callstack 0
   581                           
   582                           ; 1 bytes @ 0x5
   583  000065                     	ds	1
   584  000066                     ___flmul@bexp:
   585                           	callstack 0
   586                           
   587                           ; 1 bytes @ 0x6
   588  000066                     	ds	1
   589  000067                     ___flmul@prod:
   590                           	callstack 0
   591                           
   592                           ; 4 bytes @ 0x7
   593  000067                     	ds	4
   594  00006B                     ___flmul@temp:
   595                           	callstack 0
   596                           
   597                           ; 2 bytes @ 0xB
   598  00006B                     	ds	2
   599  00006D                     ??_eval_poly:
   600  00006D                     ?___fldiv:
   601                           	callstack 0
   602  00006D                     ___fldiv@b:
   603                           	callstack 0
   604  00006D                     _fround$2197:
   605                           	callstack 0
   606                           
   607                           ; 4 bytes @ 0xD
   608  00006D                     	ds	4
   609  000071                     ___fldiv@a:
   610                           	callstack 0
   611  000071                     eval_poly@res:
   612                           	callstack 0
   613  000071                     _fround$2196:
   614                           	callstack 0
   615                           
   616                           ; 4 bytes @ 0x11
   617  000071                     	ds	4
   618  000075                     ??___fldiv:
   619  000075                     ?_log:
   620                           	callstack 0
   621  000075                     ?_ldexp:
   622                           	callstack 0
   623  000075                     fround@prec:
   624                           	callstack 0
   625  000075                     ldexp@value:
   626                           	callstack 0
   627  000075                     log@x:
   628                           	callstack 0
   629                           
   630                           ; 4 bytes @ 0x15
   631  000075                     	ds	1
   632  000076                     ?_printf:
   633                           	callstack 0
   634  000076                     printf@f:
   635                           	callstack 0
   636                           
   637                           ; 2 bytes @ 0x16
   638  000076                     	ds	3
   639  000079                     ldexp@newexp:
   640                           	callstack 0
   641  000079                     log@exponent:
   642                           	callstack 0
   643  000079                     ___fldiv@rem:
   644                           	callstack 0
   645                           
   646                           ; 4 bytes @ 0x19
   647  000079                     	ds	2
   648  00007B                     ??_ldexp:
   649                           
   650                           ; 1 bytes @ 0x1B
   651  00007B                     	ds	2
   652  00007D                     ___fldiv@sign:
   653                           	callstack 0
   654                           
   655                           ; 1 bytes @ 0x1D
   656  00007D                     	ds	1
   657  00007E                     ___fldiv@new_exp:
   658                           	callstack 0
   659                           
   660                           ; 2 bytes @ 0x1E
   661  00007E                     	ds	2
   662  000080                     ??_printf:
   663  000080                     ___fldiv@grs:
   664                           	callstack 0
   665                           
   666                           ; 4 bytes @ 0x20
   667  000080                     	ds	2
   668  000082                     _printf$2199:
   669                           	callstack 0
   670                           
   671                           ; 4 bytes @ 0x22
   672  000082                     	ds	2
   673  000084                     ___fldiv@bexp:
   674                           	callstack 0
   675                           
   676                           ; 1 bytes @ 0x24
   677  000084                     	ds	1
   678  000085                     ___fldiv@aexp:
   679                           	callstack 0
   680                           
   681                           ; 1 bytes @ 0x25
   682  000085                     	ds	1
   683  000086                     ?_exp:
   684                           	callstack 0
   685  000086                     printf@ap:
   686                           	callstack 0
   687  000086                     exp@x:
   688                           	callstack 0
   689                           
   690                           ; 4 bytes @ 0x26
   691  000086                     	ds	2
   692  000088                     printf@flag:
   693                           	callstack 0
   694                           
   695                           ; 2 bytes @ 0x28
   696  000088                     	ds	2
   697  00008A                     printf@prec:
   698                           	callstack 0
   699  00008A                     _exp$2202:
   700                           	callstack 0
   701                           
   702                           ; 4 bytes @ 0x2A
   703  00008A                     	ds	2
   704  00008C                     printf@val:
   705                           	callstack 0
   706                           
   707                           ; 4 bytes @ 0x2C
   708  00008C                     	ds	2
   709  00008E                     exp@exponent:
   710                           	callstack 0
   711                           
   712                           ; 2 bytes @ 0x2E
   713  00008E                     	ds	2
   714  000090                     exp@sign:
   715                           	callstack 0
   716  000090                     printf@eexp:
   717                           	callstack 0
   718                           
   719                           ; 2 bytes @ 0x30
   720  000090                     	ds	1
   721  000091                     ?_pow:
   722                           	callstack 0
   723  000091                     pow@x:
   724                           	callstack 0
   725                           
   726                           ; 4 bytes @ 0x31
   727  000091                     	ds	1
   728  000092                     printf@tmpval:
   729                           	callstack 0
   730                           
   731                           ; 4 bytes @ 0x32
   732  000092                     	ds	3
   733  000095                     pow@y:
   734                           	callstack 0
   735                           
   736                           ; 4 bytes @ 0x35
   737  000095                     	ds	1
   738  000096                     printf@fval:
   739                           	callstack 0
   740                           
   741                           ; 4 bytes @ 0x36
   742  000096                     	ds	3
   743  000099                     _pow$2200:
   744                           	callstack 0
   745                           
   746                           ; 4 bytes @ 0x39
   747  000099                     	ds	1
   748  00009A                     printf@c:
   749                           	callstack 0
   750                           
   751                           ; 1 bytes @ 0x3A
   752  00009A                     	ds	1
   753  00009B                     ??_buttonResponse:
   754                           
   755                           ; 1 bytes @ 0x3B
   756  00009B                     	ds	2
   757  00009D                     _pow$2201:
   758                           	callstack 0
   759                           
   760                           ; 4 bytes @ 0x3D
   761  00009D                     	ds	4
   762  0000A1                     pow@sign:
   763                           	callstack 0
   764                           
   765                           ; 1 bytes @ 0x41
   766  0000A1                     	ds	1
   767  0000A2                     pow@yi:
   768                           	callstack 0
   769                           
   770                           ; 4 bytes @ 0x42
   771  0000A2                     	ds	4
   772  0000A6                     ??_main:
   773                           
   774                           ; 1 bytes @ 0x46
   775  0000A6                     	ds	2
   776  0000A8                     main@T:
   777                           	callstack 0
   778                           
   779                           ; 4 bytes @ 0x48
   780  0000A8                     	ds	4
   781  0000AC                     _main$2192:
   782                           	callstack 0
   783                           
   784                           ; 4 bytes @ 0x4C
   785  0000AC                     	ds	4
   786  0000B0                     _main$2193:
   787                           	callstack 0
   788                           
   789                           ; 4 bytes @ 0x50
   790  0000B0                     	ds	4
   791  0000B4                     _main$2194:
   792                           	callstack 0
   793                           
   794                           ; 4 bytes @ 0x54
   795  0000B4                     	ds	4
   796  0000B8                     _main$2195:
   797                           	callstack 0
   798                           
   799                           ; 4 bytes @ 0x58
   800  0000B8                     	ds	4
   801  0000BC                     main@k:
   802                           	callstack 0
   803                           
   804                           ; 2 bytes @ 0x5C
   805  0000BC                     	ds	2
   806  0000BE                     main@h:
   807                           	callstack 0
   808                           
   809                           ; 2 bytes @ 0x5E
   810  0000BE                     	ds	2
   811  0000C0                     main@n:
   812                           	callstack 0
   813                           
   814                           ; 2 bytes @ 0x60
   815  0000C0                     	ds	2
   816  0000C2                     main@m:
   817                           	callstack 0
   818                           
   819                           ; 2 bytes @ 0x62
   820  0000C2                     	ds	2
   821  0000C4                     main@j:
   822                           	callstack 0
   823                           
   824                           ; 2 bytes @ 0x64
   825  0000C4                     	ds	2
   826                           
   827                           	psect	cstackCOMRAM
   828  000001                     __pcstackCOMRAM:
   829                           	callstack 0
   830  000001                     ??_TMR0_Initialize:
   831  000001                     ?_poll_switch1_for_edges:
   832                           	callstack 0
   833  000001                     ?___wmul:
   834                           	callstack 0
   835  000001                     ?___awmod:
   836                           	callstack 0
   837  000001                     ?___lwmod:
   838                           	callstack 0
   839  000001                     ?__tdiv_to_l_:
   840                           	callstack 0
   841  000001                     ?__div_to_l_:
   842                           	callstack 0
   843  000001                     ?___lldiv:
   844                           	callstack 0
   845  000001                     ?___flneg:
   846                           	callstack 0
   847  000001                     UART2_Write@txData:
   848                           	callstack 0
   849  000001                     TMR0_WriteTimer@timerVal:
   850                           	callstack 0
   851  000001                     DELAY_milliseconds@milliseconds:
   852                           	callstack 0
   853  000001                     UART2_SetFramingErrorHandler@interruptHandler:
   854                           	callstack 0
   855  000001                     UART2_SetOverrunErrorHandler@interruptHandler:
   856                           	callstack 0
   857  000001                     UART2_SetErrorHandler@interruptHandler:
   858                           	callstack 0
   859  000001                     PWM5_LoadDutyValue@dutyValue:
   860                           	callstack 0
   861  000001                     PWM6_LoadDutyValue@dutyValue:
   862                           	callstack 0
   863  000001                     PWM7_LoadDutyValue@dutyValue:
   864                           	callstack 0
   865  000001                     poll_switch1_for_edges@digitalinputpin:
   866                           	callstack 0
   867  000001                     ___wmul@multiplier:
   868                           	callstack 0
   869  000001                     ___awmod@dividend:
   870                           	callstack 0
   871  000001                     ___lwmod@dividend:
   872                           	callstack 0
   873  000001                     ___lldiv@dividend:
   874                           	callstack 0
   875  000001                     __div_to_l_@f1:
   876                           	callstack 0
   877  000001                     ___flge@ff1:
   878                           	callstack 0
   879  000001                     ___flneg@f1:
   880                           	callstack 0
   881  000001                     __tdiv_to_l_@f1:
   882                           	callstack 0
   883                           
   884                           ; 4 bytes @ 0x0
   885  000001                     	ds	1
   886  000002                     putch@txData:
   887                           	callstack 0
   888                           
   889                           ; 1 bytes @ 0x1
   890  000002                     	ds	1
   891  000003                     ??_DELAY_milliseconds:
   892  000003                     ??_PWM5_LoadDutyValue:
   893  000003                     ??_PWM6_LoadDutyValue:
   894  000003                     ??_PWM7_LoadDutyValue:
   895  000003                     poll_switch1_for_edges@has_switch1_changed:
   896                           	callstack 0
   897  000003                     ___wmul@multiplicand:
   898                           	callstack 0
   899  000003                     ___awmod@divisor:
   900                           	callstack 0
   901  000003                     ___lwmod@divisor:
   902                           	callstack 0
   903                           
   904                           ; 2 bytes @ 0x2
   905  000003                     	ds	2
   906  000005                     ___awmod@counter:
   907                           	callstack 0
   908  000005                     ___lwmod@counter:
   909                           	callstack 0
   910  000005                     ___wmul@product:
   911                           	callstack 0
   912  000005                     ___lldiv@divisor:
   913                           	callstack 0
   914  000005                     __div_to_l_@f2:
   915                           	callstack 0
   916  000005                     ___flge@ff2:
   917                           	callstack 0
   918  000005                     __tdiv_to_l_@f2:
   919                           	callstack 0
   920                           
   921                           ; 4 bytes @ 0x4
   922  000005                     	ds	1
   923  000006                     ?___lwdiv:
   924                           	callstack 0
   925  000006                     ___awmod@sign:
   926                           	callstack 0
   927  000006                     ___lwdiv@dividend:
   928                           	callstack 0
   929                           
   930                           ; 2 bytes @ 0x5
   931  000006                     	ds	1
   932  000007                     ?___awdiv:
   933                           	callstack 0
   934  000007                     ___awdiv@dividend:
   935                           	callstack 0
   936                           
   937                           ; 2 bytes @ 0x6
   938  000007                     	ds	1
   939  000008                     ___lwdiv@divisor:
   940                           	callstack 0
   941                           
   942                           ; 2 bytes @ 0x7
   943  000008                     	ds	1
   944  000009                     ??__tdiv_to_l_:
   945  000009                     ??___flge:
   946  000009                     ___awdiv@divisor:
   947                           	callstack 0
   948  000009                     ___lldiv@quotient:
   949                           	callstack 0
   950  000009                     __div_to_l_@quot:
   951                           	callstack 0
   952                           
   953                           ; 4 bytes @ 0x8
   954  000009                     	ds	1
   955  00000A                     ___lwdiv@quotient:
   956                           	callstack 0
   957                           
   958                           ; 2 bytes @ 0x9
   959  00000A                     	ds	1
   960  00000B                     ___awdiv@counter:
   961                           	callstack 0
   962                           
   963                           ; 1 bytes @ 0xA
   964  00000B                     	ds	1
   965  00000C                     ___awdiv@sign:
   966                           	callstack 0
   967  00000C                     ___lwdiv@counter:
   968                           	callstack 0
   969  00000C                     __tdiv_to_l_@quot:
   970                           	callstack 0
   971                           
   972                           ; 4 bytes @ 0xB
   973  00000C                     	ds	1
   974  00000D                     ___lldiv@counter:
   975                           	callstack 0
   976  00000D                     __div_to_l_@cntr:
   977                           	callstack 0
   978  00000D                     ___awdiv@quotient:
   979                           	callstack 0
   980                           
   981                           ; 2 bytes @ 0xC
   982  00000D                     	ds	1
   983  00000E                     ?___llmod:
   984                           	callstack 0
   985  00000E                     __div_to_l_@exp1:
   986                           	callstack 0
   987  00000E                     ___llmod@dividend:
   988                           	callstack 0
   989                           
   990                           ; 4 bytes @ 0xD
   991  00000E                     	ds	1
   992  00000F                     ?___fltol:
   993                           	callstack 0
   994  00000F                     ___fltol@f1:
   995                           	callstack 0
   996                           
   997                           ; 4 bytes @ 0xE
   998  00000F                     	ds	1
   999  000010                     __tdiv_to_l_@cntr:
  1000                           	callstack 0
  1001                           
  1002                           ; 1 bytes @ 0xF
  1003  000010                     	ds	1
  1004  000011                     __tdiv_to_l_@exp1:
  1005                           	callstack 0
  1006                           
  1007                           ; 1 bytes @ 0x10
  1008  000011                     	ds	1
  1009  000012                     ___llmod@divisor:
  1010                           	callstack 0
  1011                           
  1012                           ; 4 bytes @ 0x11
  1013  000012                     	ds	1
  1014  000013                     ??___fltol:
  1015                           
  1016                           ; 1 bytes @ 0x12
  1017  000013                     	ds	3
  1018  000016                     ___llmod@counter:
  1019                           	callstack 0
  1020                           
  1021                           ; 1 bytes @ 0x15
  1022  000016                     	ds	1
  1023  000017                     ___fltol@sign1:
  1024                           	callstack 0
  1025                           
  1026                           ; 1 bytes @ 0x16
  1027  000017                     	ds	1
  1028  000018                     ___fltol@exp1:
  1029                           	callstack 0
  1030                           
  1031                           ; 1 bytes @ 0x17
  1032  000018                     	ds	1
  1033  000019                     ?___xxtofl:
  1034                           	callstack 0
  1035  000019                     ___xxtofl@val:
  1036                           	callstack 0
  1037                           
  1038                           ; 4 bytes @ 0x18
  1039  000019                     	ds	4
  1040  00001D                     ??___xxtofl:
  1041                           
  1042                           ; 1 bytes @ 0x1C
  1043  00001D                     	ds	4
  1044  000021                     ___xxtofl@sign:
  1045                           	callstack 0
  1046                           
  1047                           ; 1 bytes @ 0x20
  1048  000021                     	ds	1
  1049  000022                     ___xxtofl@exp:
  1050                           	callstack 0
  1051                           
  1052                           ; 1 bytes @ 0x21
  1053  000022                     	ds	1
  1054  000023                     ___xxtofl@arg:
  1055                           	callstack 0
  1056                           
  1057                           ; 4 bytes @ 0x22
  1058  000023                     	ds	4
  1059  000027                     ___fleq@ff1:
  1060                           	callstack 0
  1061                           
  1062                           ; 4 bytes @ 0x26
  1063  000027                     	ds	4
  1064  00002B                     ___fleq@ff2:
  1065                           	callstack 0
  1066                           
  1067                           ; 4 bytes @ 0x2A
  1068  00002B                     	ds	4
  1069  00002F                     ??___fleq:
  1070                           
  1071                           ; 1 bytes @ 0x2E
  1072  00002F                     	ds	4
  1073  000033                     ?_frexp:
  1074                           	callstack 0
  1075  000033                     frexp@value:
  1076                           	callstack 0
  1077                           
  1078                           ; 4 bytes @ 0x32
  1079  000033                     	ds	4
  1080  000037                     frexp@eptr:
  1081                           	callstack 0
  1082                           
  1083                           ; 2 bytes @ 0x36
  1084  000037                     	ds	2
  1085  000039                     ??_frexp:
  1086                           
  1087                           ; 1 bytes @ 0x38
  1088  000039                     	ds	2
  1089  00003B                     ?___fladd:
  1090                           	callstack 0
  1091  00003B                     ___fladd@b:
  1092                           	callstack 0
  1093                           
  1094                           ; 4 bytes @ 0x3A
  1095  00003B                     	ds	4
  1096  00003F                     ___fladd@a:
  1097                           	callstack 0
  1098                           
  1099                           ; 4 bytes @ 0x3E
  1100  00003F                     	ds	4
  1101  000043                     ??___fladd:
  1102                           
  1103                           ; 1 bytes @ 0x42
  1104  000043                     	ds	4
  1105  000047                     ___fladd@signs:
  1106                           	callstack 0
  1107                           
  1108                           ; 1 bytes @ 0x46
  1109  000047                     	ds	1
  1110  000048                     ___fladd@aexp:
  1111                           	callstack 0
  1112                           
  1113                           ; 1 bytes @ 0x47
  1114  000048                     	ds	1
  1115  000049                     ___fladd@bexp:
  1116                           	callstack 0
  1117                           
  1118                           ; 1 bytes @ 0x48
  1119  000049                     	ds	1
  1120  00004A                     ___fladd@grs:
  1121                           	callstack 0
  1122                           
  1123                           ; 1 bytes @ 0x49
  1124  00004A                     	ds	1
  1125  00004B                     ?___flmul:
  1126                           	callstack 0
  1127  00004B                     ?_floor:
  1128                           	callstack 0
  1129  00004B                     ___flmul@b:
  1130                           	callstack 0
  1131  00004B                     floor@x:
  1132                           	callstack 0
  1133                           
  1134                           ; 4 bytes @ 0x4A
  1135  00004B                     	ds	4
  1136  00004F                     ___flmul@a:
  1137                           	callstack 0
  1138  00004F                     floor@i:
  1139                           	callstack 0
  1140                           
  1141                           ; 4 bytes @ 0x4E
  1142  00004F                     	ds	4
  1143  000053                     ??___flmul:
  1144  000053                     floor@expon:
  1145                           	callstack 0
  1146                           
  1147                           ; 2 bytes @ 0x52
  1148  000053                     	ds	4
  1149  000057                     ?___flsub:
  1150                           	callstack 0
  1151  000057                     ?_eval_poly:
  1152                           	callstack 0
  1153  000057                     ?_fround:
  1154                           	callstack 0
  1155  000057                     ?_scale:
  1156                           	callstack 0
  1157  000057                     ___flsub@b:
  1158                           	callstack 0
  1159  000057                     eval_poly@x:
  1160                           	callstack 0
  1161                           
  1162                           ; 4 bytes @ 0x56
  1163  000057                     	ds	4
  1164  00005B                     eval_poly@d:
  1165                           	callstack 0
  1166  00005B                     ___flsub@a:
  1167                           	callstack 0
  1168  00005B                     _scale$2198:
  1169                           	callstack 0
  1170                           
  1171                           ; 4 bytes @ 0x5A
  1172  00005B                     	ds	2
  1173  00005D                     eval_poly@n:
  1174                           	callstack 0
  1175                           
  1176                           ; 2 bytes @ 0x5C
  1177  00005D                     	ds	2
  1178  00005F                     scale@scl:
  1179                           	callstack 0
  1180                           
  1181                           ; 1 bytes @ 0x5E
  1182  00005F                     	ds	1
  1183  000060                     
  1184                           ; 1 bytes @ 0x5F
  1185 ;;
  1186 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1187 ;;
  1188 ;; *************** function _main *****************
  1189 ;; Defined at:
  1190 ;;		line 19 in file "main.c"
  1191 ;; Parameters:    Size  Location     Type
  1192 ;;		None
  1193 ;; Auto vars:     Size  Location     Type
  1194 ;;  T               4   72[BANK0 ] float 
  1195 ;;  f               4    0        float 
  1196 ;;  j               2  100[BANK0 ] unsigned int 
  1197 ;;  m               2   98[BANK0 ] unsigned int 
  1198 ;;  n               2   96[BANK0 ] unsigned int 
  1199 ;;  h               2   94[BANK0 ] unsigned int 
  1200 ;;  k               2   92[BANK0 ] unsigned int 
  1201 ;; Return value:  Size  Location     Type
  1202 ;;                  1    wreg      void 
  1203 ;; Registers used:
  1204 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1205 ;; Tracked objects:
  1206 ;;		On entry : 0/0
  1207 ;;		On exit  : 0/0
  1208 ;;		Unchanged: 0/0
  1209 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1210 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1211 ;;      Locals:         0      30       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1212 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1213 ;;      Totals:         0      32       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1214 ;;Total ram usage:       32 bytes
  1215 ;; Hardware stack levels required when called:    5
  1216 ;; This function calls:
  1217 ;;		_PWM5_LoadDutyValue
  1218 ;;		_PWM6_LoadDutyValue
  1219 ;;		_PWM7_LoadDutyValue
  1220 ;;		_SYSTEM_Initialize
  1221 ;;		_TMR0_WriteTimer
  1222 ;;		___fladd
  1223 ;;		___fldiv
  1224 ;;		___flmul
  1225 ;;		___flsub
  1226 ;;		___xxtofl
  1227 ;;		_buttonResponse
  1228 ;;		_clearPuTTY
  1229 ;;		_pow
  1230 ;;		_printf
  1231 ;; This function is called by:
  1232 ;;		Startup code after reset
  1233 ;; This function uses a non-reentrant model
  1234 ;;
  1235                           
  1236                           	psect	text0
  1237  00EF18                     __ptext0:
  1238                           	callstack 0
  1239  00EF18                     _main:
  1240                           	callstack 26
  1241  00EF18                     
  1242                           ;main.c: 22: SYSTEM_Initialize();
  1243  00EF18  EC43  F060         	call	_SYSTEM_Initialize	;wreg free
  1244  00EF1C                     
  1245                           ;main.c: 23: clearPuTTY();
  1246  00EF1C  EC02  F062         	call	_clearPuTTY	;wreg free
  1247  00EF20                     
  1248                           ;main.c: 26: float T, f;;main.c: 29: unsigned int j=45536;
  1249  00EF20  0EB1               	movlw	177
  1250  00EF22  0100               	movlb	0	; () banked
  1251  00EF24  6FC5               	movwf	(main@j+1)& (0+255),b
  1252  00EF26  0EE0               	movlw	224
  1253  00EF28  6FC4               	movwf	main@j& (0+255),b
  1254  00EF2A                     
  1255                           ; BSR set to: 0
  1256                           ;main.c: 32: unsigned int k=15536,h=28036;
  1257  00EF2A  0E3C               	movlw	60
  1258  00EF2C  6FBD               	movwf	(main@k+1)& (0+255),b
  1259  00EF2E  0EB0               	movlw	176
  1260  00EF30  6FBC               	movwf	main@k& (0+255),b
  1261  00EF32                     
  1262                           ; BSR set to: 0
  1263  00EF32  0E6D               	movlw	109
  1264  00EF34  6FBF               	movwf	(main@h+1)& (0+255),b
  1265  00EF36  0E84               	movlw	132
  1266  00EF38  6FBE               	movwf	main@h& (0+255),b
  1267  00EF3A                     
  1268                           ; BSR set to: 0
  1269                           ;main.c: 35: T0CON1bits.CKPS = 2;
  1270  00EF3A  50B9               	movf	185,w,c	;volatile
  1271  00EF3C  0BF0               	andlw	-16
  1272  00EF3E  0902               	iorlw	2
  1273  00EF40  6EB9               	movwf	185,c	;volatile
  1274  00EF42                     
  1275                           ; BSR set to: 0
  1276                           ;main.c: 36: T0CON0bits.OUTPS = 0;
  1277  00EF42  0EF0               	movlw	-16
  1278  00EF44  16B8               	andwf	184,f,c	;volatile
  1279  00EF46                     
  1280                           ; BSR set to: 0
  1281                           ;main.c: 40: n = T0CON1bits.CKPS;
  1282  00EF46  50B9               	movf	185,w,c	;volatile
  1283  00EF48  0B0F               	andlw	15
  1284  00EF4A  6FA6               	movwf	??_main& (0+255),b
  1285  00EF4C  51A6               	movf	??_main& (0+255),w,b
  1286  00EF4E  6FC0               	movwf	main@n& (0+255),b
  1287  00EF50  6BC1               	clrf	(main@n+1)& (0+255),b
  1288  00EF52                     
  1289                           ; BSR set to: 0
  1290                           ;main.c: 41: m = T0CON0bits.OUTPS;
  1291  00EF52  50B8               	movf	184,w,c	;volatile
  1292  00EF54  0B0F               	andlw	15
  1293  00EF56  6FA6               	movwf	??_main& (0+255),b
  1294  00EF58  51A6               	movf	??_main& (0+255),w,b
  1295  00EF5A  6FC2               	movwf	main@m& (0+255),b
  1296  00EF5C  6BC3               	clrf	(main@m+1)& (0+255),b
  1297  00EF5E                     
  1298                           ; BSR set to: 0
  1299                           ;main.c: 42: T = ((m+1.0)*65536.0 - j)*pow(2.0,n)*4.0/ 8000000;
  1300  00EF5E  C0C0  F019         	movff	main@n,___xxtofl@val
  1301  00EF62  C0C1  F01A         	movff	main@n+1,___xxtofl@val+1
  1302  00EF66  6A1B               	clrf	(___xxtofl@val+2)^0,c
  1303  00EF68  6A1C               	clrf	(___xxtofl@val+3)^0,c
  1304  00EF6A  0E00               	movlw	0
  1305  00EF6C  ECE1  F069         	call	___xxtofl
  1306  00EF70  C019  F0AC         	movff	?___xxtofl,_main$2192
  1307  00EF74  C01A  F0AD         	movff	?___xxtofl+1,_main$2192+1
  1308  00EF78  C01B  F0AE         	movff	?___xxtofl+2,_main$2192+2
  1309  00EF7C  C01C  F0AF         	movff	?___xxtofl+3,_main$2192+3
  1310  00EF80                     
  1311                           ;main.c: 42: T = ((m+1.0)*65536.0 - j)*pow(2.0,n)*4.0/ 8000000;
  1312  00EF80  0E00               	movlw	0
  1313  00EF82  6E4F               	movwf	___flmul@a^0,c
  1314  00EF84  0E00               	movlw	0
  1315  00EF86  6E50               	movwf	(___flmul@a+1)^0,c
  1316  00EF88  0E80               	movlw	128
  1317  00EF8A  6E51               	movwf	(___flmul@a+2)^0,c
  1318  00EF8C  0E47               	movlw	71
  1319  00EF8E  6E52               	movwf	(___flmul@a+3)^0,c
  1320  00EF90  0E00               	movlw	0
  1321  00EF92  6E3F               	movwf	___fladd@a^0,c
  1322  00EF94  0E00               	movlw	0
  1323  00EF96  6E40               	movwf	(___fladd@a+1)^0,c
  1324  00EF98  0E80               	movlw	128
  1325  00EF9A  6E41               	movwf	(___fladd@a+2)^0,c
  1326  00EF9C  0E3F               	movlw	63
  1327  00EF9E  6E42               	movwf	(___fladd@a+3)^0,c
  1328  00EFA0  C0C2  F019         	movff	main@m,___xxtofl@val
  1329  00EFA4  C0C3  F01A         	movff	main@m+1,___xxtofl@val+1
  1330  00EFA8  6A1B               	clrf	(___xxtofl@val+2)^0,c
  1331  00EFAA  6A1C               	clrf	(___xxtofl@val+3)^0,c
  1332  00EFAC  0E00               	movlw	0
  1333  00EFAE  ECE1  F069         	call	___xxtofl
  1334  00EFB2  C019  F03B         	movff	?___xxtofl,___fladd@b
  1335  00EFB6  C01A  F03C         	movff	?___xxtofl+1,___fladd@b+1
  1336  00EFBA  C01B  F03D         	movff	?___xxtofl+2,___fladd@b+2
  1337  00EFBE  C01C  F03E         	movff	?___xxtofl+3,___fladd@b+3
  1338  00EFC2  EC2C  F075         	call	___fladd	;wreg free
  1339  00EFC6  C03B  F04B         	movff	?___fladd,___flmul@b
  1340  00EFCA  C03C  F04C         	movff	?___fladd+1,___flmul@b+1
  1341  00EFCE  C03D  F04D         	movff	?___fladd+2,___flmul@b+2
  1342  00EFD2  C03E  F04E         	movff	?___fladd+3,___flmul@b+3
  1343  00EFD6  ECAA  F070         	call	___flmul	;wreg free
  1344  00EFDA  C04B  F0B0         	movff	?___flmul,_main$2193
  1345  00EFDE  C04C  F0B1         	movff	?___flmul+1,_main$2193+1
  1346  00EFE2  C04D  F0B2         	movff	?___flmul+2,_main$2193+2
  1347  00EFE6  C04E  F0B3         	movff	?___flmul+3,_main$2193+3
  1348  00EFEA                     
  1349                           ;main.c: 42: T = ((m+1.0)*65536.0 - j)*pow(2.0,n)*4.0/ 8000000;
  1350  00EFEA  C0AC  F095         	movff	_main$2192,pow@y
  1351  00EFEE  C0AD  F096         	movff	_main$2192+1,pow@y+1
  1352  00EFF2  C0AE  F097         	movff	_main$2192+2,pow@y+2
  1353  00EFF6  C0AF  F098         	movff	_main$2192+3,pow@y+3
  1354  00EFFA  0E00               	movlw	0
  1355  00EFFC  0100               	movlb	0	; () banked
  1356  00EFFE  6F91               	movwf	pow@x& (0+255),b
  1357  00F000  0E00               	movlw	0
  1358  00F002  6F92               	movwf	(pow@x+1)& (0+255),b
  1359  00F004  0E00               	movlw	0
  1360  00F006  6F93               	movwf	(pow@x+2)& (0+255),b
  1361  00F008  0E40               	movlw	64
  1362  00F00A  6F94               	movwf	(pow@x+3)& (0+255),b
  1363  00F00C  ECBB  F06A         	call	_pow	;wreg free
  1364  00F010  C091  F0B4         	movff	?_pow,_main$2194
  1365  00F014  C092  F0B5         	movff	?_pow+1,_main$2194+1
  1366  00F018  C093  F0B6         	movff	?_pow+2,_main$2194+2
  1367  00F01C  C094  F0B7         	movff	?_pow+3,_main$2194+3
  1368  00F020                     
  1369                           ;main.c: 42: T = ((m+1.0)*65536.0 - j)*pow(2.0,n)*4.0/ 8000000;
  1370  00F020  C0B4  F04F         	movff	_main$2194,___flmul@a
  1371  00F024  C0B5  F050         	movff	_main$2194+1,___flmul@a+1
  1372  00F028  C0B6  F051         	movff	_main$2194+2,___flmul@a+2
  1373  00F02C  C0B7  F052         	movff	_main$2194+3,___flmul@a+3
  1374  00F030  0EE0               	movlw	224
  1375  00F032  6E19               	movwf	___xxtofl@val^0,c
  1376  00F034  0EB1               	movlw	177
  1377  00F036  6E1A               	movwf	(___xxtofl@val+1)^0,c
  1378  00F038  0E00               	movlw	0
  1379  00F03A  6E1B               	movwf	(___xxtofl@val+2)^0,c
  1380  00F03C  0E00               	movlw	0
  1381  00F03E  6E1C               	movwf	(___xxtofl@val+3)^0,c
  1382  00F040  0E00               	movlw	0
  1383  00F042  ECE1  F069         	call	___xxtofl
  1384  00F046  C019  F05B         	movff	?___xxtofl,___flsub@a
  1385  00F04A  C01A  F05C         	movff	?___xxtofl+1,___flsub@a+1
  1386  00F04E  C01B  F05D         	movff	?___xxtofl+2,___flsub@a+2
  1387  00F052  C01C  F05E         	movff	?___xxtofl+3,___flsub@a+3
  1388  00F056  C0B0  F057         	movff	_main$2193,___flsub@b
  1389  00F05A  C0B1  F058         	movff	_main$2193+1,___flsub@b+1
  1390  00F05E  C0B2  F059         	movff	_main$2193+2,___flsub@b+2
  1391  00F062  C0B3  F05A         	movff	_main$2193+3,___flsub@b+3
  1392  00F066  EC06  F061         	call	___flsub	;wreg free
  1393  00F06A  C057  F04B         	movff	?___flsub,___flmul@b
  1394  00F06E  C058  F04C         	movff	?___flsub+1,___flmul@b+1
  1395  00F072  C059  F04D         	movff	?___flsub+2,___flmul@b+2
  1396  00F076  C05A  F04E         	movff	?___flsub+3,___flmul@b+3
  1397  00F07A  ECAA  F070         	call	___flmul	;wreg free
  1398  00F07E  C04B  F0B8         	movff	?___flmul,_main$2195
  1399  00F082  C04C  F0B9         	movff	?___flmul+1,_main$2195+1
  1400  00F086  C04D  F0BA         	movff	?___flmul+2,_main$2195+2
  1401  00F08A  C04E  F0BB         	movff	?___flmul+3,_main$2195+3
  1402  00F08E                     
  1403                           ;main.c: 42: T = ((m+1.0)*65536.0 - j)*pow(2.0,n)*4.0/ 8000000;
  1404  00F08E  0E00               	movlw	0
  1405  00F090  6E4F               	movwf	___flmul@a^0,c
  1406  00F092  0E00               	movlw	0
  1407  00F094  6E50               	movwf	(___flmul@a+1)^0,c
  1408  00F096  0E80               	movlw	128
  1409  00F098  6E51               	movwf	(___flmul@a+2)^0,c
  1410  00F09A  0E40               	movlw	64
  1411  00F09C  6E52               	movwf	(___flmul@a+3)^0,c
  1412  00F09E  C0B8  F04B         	movff	_main$2195,___flmul@b
  1413  00F0A2  C0B9  F04C         	movff	_main$2195+1,___flmul@b+1
  1414  00F0A6  C0BA  F04D         	movff	_main$2195+2,___flmul@b+2
  1415  00F0AA  C0BB  F04E         	movff	_main$2195+3,___flmul@b+3
  1416  00F0AE  ECAA  F070         	call	___flmul	;wreg free
  1417  00F0B2  C04B  F06D         	movff	?___flmul,___fldiv@b
  1418  00F0B6  C04C  F06E         	movff	?___flmul+1,___fldiv@b+1
  1419  00F0BA  C04D  F06F         	movff	?___flmul+2,___fldiv@b+2
  1420  00F0BE  C04E  F070         	movff	?___flmul+3,___fldiv@b+3
  1421  00F0C2  0E00               	movlw	0
  1422  00F0C4  0100               	movlb	0	; () banked
  1423  00F0C6  6F71               	movwf	___fldiv@a& (0+255),b
  1424  00F0C8  0E24               	movlw	36
  1425  00F0CA  6F72               	movwf	(___fldiv@a+1)& (0+255),b
  1426  00F0CC  0EF4               	movlw	244
  1427  00F0CE  6F73               	movwf	(___fldiv@a+2)& (0+255),b
  1428  00F0D0  0E4A               	movlw	74
  1429  00F0D2  6F74               	movwf	(___fldiv@a+3)& (0+255),b
  1430  00F0D4  ECDC  F06E         	call	___fldiv	;wreg free
  1431  00F0D8  C06D  F0A8         	movff	?___fldiv,main@T
  1432  00F0DC  C06E  F0A9         	movff	?___fldiv+1,main@T+1
  1433  00F0E0  C06F  F0AA         	movff	?___fldiv+2,main@T+2
  1434  00F0E4  C070  F0AB         	movff	?___fldiv+3,main@T+3
  1435  00F0E8                     
  1436                           ;main.c: 43: printf("RD2 On Time %f\n\n\r",T);
  1437  00F0E8  0ED1               	movlw	low STR_1
  1438  00F0EA  0100               	movlb	0	; () banked
  1439  00F0EC  6F76               	movwf	printf@f& (0+255),b
  1440  00F0EE  0EFF               	movlw	high STR_1
  1441  00F0F0  6F77               	movwf	(printf@f+1)& (0+255),b
  1442  00F0F2  C0A8  F078         	movff	main@T,?_printf+2
  1443  00F0F6  C0A9  F079         	movff	main@T+1,?_printf+3
  1444  00F0FA  C0AA  F07A         	movff	main@T+2,?_printf+4
  1445  00F0FE  C0AB  F07B         	movff	main@T+3,?_printf+5
  1446  00F102  ECB0  F07A         	call	_printf	;wreg free
  1447  00F106                     
  1448                           ;main.c: 47: printf("\n\rEasy Setup value of PWM5DC is %u  PR2 is %u\n\r", 499,PR2);
  1449  00F106  0E71               	movlw	low STR_2
  1450  00F108  0100               	movlb	0	; () banked
  1451  00F10A  6F76               	movwf	printf@f& (0+255),b
  1452  00F10C  0EFF               	movlw	high STR_2
  1453  00F10E  6F77               	movwf	(printf@f+1)& (0+255),b
  1454  00F110  0E01               	movlw	1
  1455  00F112  6F79               	movwf	(?_printf+3)& (0+255),b
  1456  00F114  0EF3               	movlw	243
  1457  00F116  6F78               	movwf	(?_printf+2)& (0+255),b
  1458  00F118  006F FEAC  F07A    	movff	16299,?_printf+4	;volatile
  1459  00F11E  6B7B               	clrf	(?_printf+5)& (0+255),b
  1460  00F120  ECB0  F07A         	call	_printf	;wreg free
  1461  00F124                     
  1462                           ;main.c: 50: printf("\n\rEasy Setup value of PWM6DC is %u  PR4 is %u\n\r", 499,PR4);
  1463  00F124  0EA1               	movlw	low STR_3
  1464  00F126  0100               	movlb	0	; () banked
  1465  00F128  6F76               	movwf	printf@f& (0+255),b
  1466  00F12A  0EFF               	movlw	high STR_3
  1467  00F12C  6F77               	movwf	(printf@f+1)& (0+255),b
  1468  00F12E  0E01               	movlw	1
  1469  00F130  6F79               	movwf	(?_printf+3)& (0+255),b
  1470  00F132  0EF3               	movlw	243
  1471  00F134  6F78               	movwf	(?_printf+2)& (0+255),b
  1472  00F136  006F FE7C  F07A    	movff	16287,?_printf+4	;volatile
  1473  00F13C  6B7B               	clrf	(?_printf+5)& (0+255),b
  1474  00F13E  ECB0  F07A         	call	_printf	;wreg free
  1475  00F142                     
  1476                           ;main.c: 54: printf("\n\rEasy Setup value of PWM6DC is %u  PR4 is %u\n\r", 499,PR4);
  1477  00F142  0EA1               	movlw	low STR_3
  1478  00F144  0100               	movlb	0	; () banked
  1479  00F146  6F76               	movwf	printf@f& (0+255),b
  1480  00F148  0EFF               	movlw	high STR_3
  1481  00F14A  6F77               	movwf	(printf@f+1)& (0+255),b
  1482  00F14C  0E01               	movlw	1
  1483  00F14E  6F79               	movwf	(?_printf+3)& (0+255),b
  1484  00F150  0EF3               	movlw	243
  1485  00F152  6F78               	movwf	(?_printf+2)& (0+255),b
  1486  00F154  006F FE7C  F07A    	movff	16287,?_printf+4	;volatile
  1487  00F15A  6B7B               	clrf	(?_printf+5)& (0+255),b
  1488  00F15C  ECB0  F07A         	call	_printf	;wreg free
  1489  00F160                     
  1490                           ;main.c: 56: PWM7_LoadDutyValue(0);
  1491  00F160  0E00               	movlw	0
  1492  00F162  6E02               	movwf	(PWM7_LoadDutyValue@dutyValue+1)^0,c
  1493  00F164  0E00               	movlw	0
  1494  00F166  6E01               	movwf	PWM7_LoadDutyValue@dutyValue^0,c
  1495  00F168  ECD0  F060         	call	_PWM7_LoadDutyValue	;wreg free
  1496  00F16C                     l4997:
  1497                           
  1498                           ;main.c: 59: {;main.c: 62: buttonResponse();
  1499  00F16C  EC88  F062         	call	_buttonResponse	;wreg free
  1500                           
  1501                           ;main.c: 64: switch(counter)
  1502  00F170  EF7B  F07A         	goto	l5133
  1503  00F174                     l4999:
  1504                           
  1505                           ; BSR set to: 0
  1506  00F174  0E76               	movlw	118
  1507  00F176  6E9F               	movwf	159,c	;volatile
  1508  00F178                     
  1509                           ; BSR set to: 0
  1510                           ;main.c: 67: PWM7_LoadDutyValue(238);
  1511  00F178  0E00               	movlw	0
  1512  00F17A  6E02               	movwf	(PWM7_LoadDutyValue@dutyValue+1)^0,c
  1513  00F17C  0EEE               	movlw	238
  1514  00F17E  6E01               	movwf	PWM7_LoadDutyValue@dutyValue^0,c
  1515  00F180  ECD0  F060         	call	_PWM7_LoadDutyValue	;wreg free
  1516  00F184                     
  1517                           ;main.c: 68: PWM5_LoadDutyValue(1000);
  1518  00F184  0E03               	movlw	3
  1519  00F186  6E02               	movwf	(PWM5_LoadDutyValue@dutyValue+1)^0,c
  1520  00F188  0EE8               	movlw	232
  1521  00F18A  6E01               	movwf	PWM5_LoadDutyValue@dutyValue^0,c
  1522  00F18C  EC9C  F060         	call	_PWM5_LoadDutyValue	;wreg free
  1523  00F190                     
  1524                           ;main.c: 69: PWM6_LoadDutyValue(1000);
  1525  00F190  0E03               	movlw	3
  1526  00F192  6E02               	movwf	(PWM6_LoadDutyValue@dutyValue+1)^0,c
  1527  00F194  0EE8               	movlw	232
  1528  00F196  6E01               	movwf	PWM6_LoadDutyValue@dutyValue^0,c
  1529  00F198  ECB6  F060         	call	_PWM6_LoadDutyValue	;wreg free
  1530                           
  1531                           ;main.c: 71: break;
  1532  00F19C  EFB6  F078         	goto	l4997
  1533  00F1A0                     l5007:
  1534                           
  1535                           ; BSR set to: 0
  1536  00F1A0  0E66               	movlw	102
  1537  00F1A2  6E9F               	movwf	159,c	;volatile
  1538  00F1A4                     
  1539                           ; BSR set to: 0
  1540                           ;main.c: 73: PWM7_LoadDutyValue(206);
  1541  00F1A4  0E00               	movlw	0
  1542  00F1A6  6E02               	movwf	(PWM7_LoadDutyValue@dutyValue+1)^0,c
  1543  00F1A8  0ECE               	movlw	206
  1544  00F1AA  6E01               	movwf	PWM7_LoadDutyValue@dutyValue^0,c
  1545  00F1AC  ECD0  F060         	call	_PWM7_LoadDutyValue	;wreg free
  1546  00F1B0                     
  1547                           ;main.c: 74: PWM5_LoadDutyValue(350);
  1548  00F1B0  0E01               	movlw	1
  1549  00F1B2  6E02               	movwf	(PWM5_LoadDutyValue@dutyValue+1)^0,c
  1550  00F1B4  0E5E               	movlw	94
  1551  00F1B6  6E01               	movwf	PWM5_LoadDutyValue@dutyValue^0,c
  1552  00F1B8  EC9C  F060         	call	_PWM5_LoadDutyValue	;wreg free
  1553  00F1BC                     
  1554                           ;main.c: 75: PWM6_LoadDutyValue(1023);
  1555  00F1BC  0E03               	movlw	3
  1556  00F1BE  6E02               	movwf	(PWM6_LoadDutyValue@dutyValue+1)^0,c
  1557  00F1C0  6801               	setf	PWM6_LoadDutyValue@dutyValue^0,c
  1558  00F1C2  ECB6  F060         	call	_PWM6_LoadDutyValue	;wreg free
  1559                           
  1560                           ;main.c: 77: break;
  1561  00F1C6  EFB6  F078         	goto	l4997
  1562  00F1CA                     l5015:
  1563                           
  1564                           ; BSR set to: 0
  1565  00F1CA  0E58               	movlw	88
  1566  00F1CC  6E9F               	movwf	159,c	;volatile
  1567  00F1CE                     
  1568                           ; BSR set to: 0
  1569                           ;main.c: 79: PWM7_LoadDutyValue(178);
  1570  00F1CE  0E00               	movlw	0
  1571  00F1D0  6E02               	movwf	(PWM7_LoadDutyValue@dutyValue+1)^0,c
  1572  00F1D2  0EB2               	movlw	178
  1573  00F1D4  6E01               	movwf	PWM7_LoadDutyValue@dutyValue^0,c
  1574  00F1D6  ECD0  F060         	call	_PWM7_LoadDutyValue	;wreg free
  1575  00F1DA                     
  1576                           ;main.c: 80: PWM5_LoadDutyValue(1000);
  1577  00F1DA  0E03               	movlw	3
  1578  00F1DC  6E02               	movwf	(PWM5_LoadDutyValue@dutyValue+1)^0,c
  1579  00F1DE  0EE8               	movlw	232
  1580  00F1E0  6E01               	movwf	PWM5_LoadDutyValue@dutyValue^0,c
  1581  00F1E2  EC9C  F060         	call	_PWM5_LoadDutyValue	;wreg free
  1582  00F1E6                     
  1583                           ;main.c: 81: PWM6_LoadDutyValue(1000);
  1584  00F1E6  0E03               	movlw	3
  1585  00F1E8  6E02               	movwf	(PWM6_LoadDutyValue@dutyValue+1)^0,c
  1586  00F1EA  0EE8               	movlw	232
  1587  00F1EC  6E01               	movwf	PWM6_LoadDutyValue@dutyValue^0,c
  1588  00F1EE  ECB6  F060         	call	_PWM6_LoadDutyValue	;wreg free
  1589  00F1F2                     
  1590                           ;main.c: 83: TMR0IF = 0;
  1591  00F1F2  0139               	movlb	57	; () banked
  1592  00F1F4  9FA3               	bcf	163,7,b	;volatile
  1593  00F1F6                     
  1594                           ; BSR set to: 57
  1595                           ;main.c: 84: TMR0_WriteTimer(j);
  1596  00F1F6  C0C4  F001         	movff	main@j,TMR0_WriteTimer@timerVal
  1597  00F1FA  C0C5  F002         	movff	main@j+1,TMR0_WriteTimer@timerVal+1
  1598  00F1FE  ECC7  F05F         	call	_TMR0_WriteTimer	;wreg free
  1599                           
  1600                           ;main.c: 85: while(!TMR0IF)
  1601  00F202  EF12  F079         	goto	l540
  1602  00F206                     l5027:
  1603                           
  1604                           ; BSR set to: 57
  1605                           ;main.c: 86: {;main.c: 87: buttonResponse();
  1606  00F206  EC88  F062         	call	_buttonResponse	;wreg free
  1607  00F20A                     
  1608                           ;main.c: 89: if(counter ==4)break;
  1609  00F20A  0E04               	movlw	4
  1610  00F20C  0100               	movlb	0	; () banked
  1611  00F20E  19CC               	xorwf	_counter& (0+255),w,b
  1612  00F210  11CD               	iorwf	(_counter+1)& (0+255),w,b
  1613  00F212  A4D8               	btfss	status,2,c
  1614  00F214  EF0E  F079         	goto	u4821
  1615  00F218  EF10  F079         	goto	u4820
  1616  00F21C                     u4821:
  1617  00F21C  EF12  F079         	goto	l540
  1618  00F220                     u4820:
  1619  00F220  EF1A  F079         	goto	l5033
  1620  00F224                     l540:
  1621  00F224  0139               	movlb	57	; () banked
  1622  00F226  AFA3               	btfss	163,7,b	;volatile
  1623  00F228  EF18  F079         	goto	u4831
  1624  00F22C  EF1A  F079         	goto	u4830
  1625  00F230                     u4831:
  1626  00F230  EF03  F079         	goto	l5027
  1627  00F234                     u4830:
  1628  00F234                     l5033:
  1629                           
  1630                           ;main.c: 91: };main.c: 92: PWM5_LoadDutyValue(0);
  1631  00F234  0E00               	movlw	0
  1632  00F236  6E02               	movwf	(PWM5_LoadDutyValue@dutyValue+1)^0,c
  1633  00F238  0E00               	movlw	0
  1634  00F23A  6E01               	movwf	PWM5_LoadDutyValue@dutyValue^0,c
  1635  00F23C  EC9C  F060         	call	_PWM5_LoadDutyValue	;wreg free
  1636                           
  1637                           ;main.c: 93: PWM6_LoadDutyValue(1000);
  1638  00F240  0E03               	movlw	3
  1639  00F242  6E02               	movwf	(PWM6_LoadDutyValue@dutyValue+1)^0,c
  1640  00F244  0EE8               	movlw	232
  1641  00F246  6E01               	movwf	PWM6_LoadDutyValue@dutyValue^0,c
  1642  00F248  ECB6  F060         	call	_PWM6_LoadDutyValue	;wreg free
  1643  00F24C                     
  1644                           ;main.c: 95: TMR0IF = 0;
  1645  00F24C  0139               	movlb	57	; () banked
  1646  00F24E  9FA3               	bcf	163,7,b	;volatile
  1647  00F250                     
  1648                           ; BSR set to: 57
  1649                           ;main.c: 96: TMR0_WriteTimer(j);
  1650  00F250  C0C4  F001         	movff	main@j,TMR0_WriteTimer@timerVal
  1651  00F254  C0C5  F002         	movff	main@j+1,TMR0_WriteTimer@timerVal+1
  1652  00F258  ECC7  F05F         	call	_TMR0_WriteTimer	;wreg free
  1653                           
  1654                           ;main.c: 97: while(!TMR0IF)
  1655  00F25C  EF3F  F079         	goto	l544
  1656  00F260                     l5039:
  1657                           
  1658                           ; BSR set to: 57
  1659                           ;main.c: 98: {;main.c: 99: buttonResponse();
  1660  00F260  EC88  F062         	call	_buttonResponse	;wreg free
  1661  00F264                     
  1662                           ;main.c: 101: if(counter ==4)break;
  1663  00F264  0E04               	movlw	4
  1664  00F266  0100               	movlb	0	; () banked
  1665  00F268  19CC               	xorwf	_counter& (0+255),w,b
  1666  00F26A  11CD               	iorwf	(_counter+1)& (0+255),w,b
  1667  00F26C  A4D8               	btfss	status,2,c
  1668  00F26E  EF3B  F079         	goto	u4841
  1669  00F272  EF3D  F079         	goto	u4840
  1670  00F276                     u4841:
  1671  00F276  EF3F  F079         	goto	l544
  1672  00F27A                     u4840:
  1673  00F27A  EFB6  F078         	goto	l4997
  1674  00F27E                     l544:
  1675  00F27E  0139               	movlb	57	; () banked
  1676  00F280  AFA3               	btfss	163,7,b	;volatile
  1677  00F282  EF45  F079         	goto	u4851
  1678  00F286  EF47  F079         	goto	u4850
  1679  00F28A                     u4851:
  1680  00F28A  EF30  F079         	goto	l5039
  1681  00F28E                     u4850:
  1682  00F28E  EFB6  F078         	goto	l4997
  1683  00F292                     l5045:
  1684                           
  1685                           ; BSR set to: 0
  1686  00F292  0E4C               	movlw	76
  1687  00F294  6E9F               	movwf	159,c	;volatile
  1688  00F296                     
  1689                           ; BSR set to: 0
  1690                           ;main.c: 106: PWM7_LoadDutyValue(154);
  1691  00F296  0E00               	movlw	0
  1692  00F298  6E02               	movwf	(PWM7_LoadDutyValue@dutyValue+1)^0,c
  1693  00F29A  0E9A               	movlw	154
  1694  00F29C  6E01               	movwf	PWM7_LoadDutyValue@dutyValue^0,c
  1695  00F29E  ECD0  F060         	call	_PWM7_LoadDutyValue	;wreg free
  1696  00F2A2                     
  1697                           ;main.c: 107: PWM5_LoadDutyValue(300);
  1698  00F2A2  0E01               	movlw	1
  1699  00F2A4  6E02               	movwf	(PWM5_LoadDutyValue@dutyValue+1)^0,c
  1700  00F2A6  0E2C               	movlw	44
  1701  00F2A8  6E01               	movwf	PWM5_LoadDutyValue@dutyValue^0,c
  1702  00F2AA  EC9C  F060         	call	_PWM5_LoadDutyValue	;wreg free
  1703  00F2AE                     
  1704                           ;main.c: 108: PWM6_LoadDutyValue(900);
  1705  00F2AE  0E03               	movlw	3
  1706  00F2B0  6E02               	movwf	(PWM6_LoadDutyValue@dutyValue+1)^0,c
  1707  00F2B2  0E84               	movlw	132
  1708  00F2B4  6E01               	movwf	PWM6_LoadDutyValue@dutyValue^0,c
  1709  00F2B6  ECB6  F060         	call	_PWM6_LoadDutyValue	;wreg free
  1710                           
  1711                           ;main.c: 110: break;
  1712  00F2BA  EFB6  F078         	goto	l4997
  1713  00F2BE                     l5053:
  1714                           
  1715                           ; BSR set to: 0
  1716  00F2BE  0E17               	movlw	23
  1717  00F2C0  6E9F               	movwf	159,c	;volatile
  1718  00F2C2                     
  1719                           ; BSR set to: 0
  1720                           ;main.c: 112: PWM7_LoadDutyValue(48);
  1721  00F2C2  0E00               	movlw	0
  1722  00F2C4  6E02               	movwf	(PWM7_LoadDutyValue@dutyValue+1)^0,c
  1723  00F2C6  0E30               	movlw	48
  1724  00F2C8  6E01               	movwf	PWM7_LoadDutyValue@dutyValue^0,c
  1725  00F2CA  ECD0  F060         	call	_PWM7_LoadDutyValue	;wreg free
  1726  00F2CE                     
  1727                           ;main.c: 113: T0CON1bits.CKPS = 4;
  1728  00F2CE  50B9               	movf	185,w,c	;volatile
  1729  00F2D0  0BF0               	andlw	-16
  1730  00F2D2  0904               	iorlw	4
  1731  00F2D4  6EB9               	movwf	185,c	;volatile
  1732                           
  1733                           ;main.c: 114: PWM5_LoadDutyValue(1000);
  1734  00F2D6  0E03               	movlw	3
  1735  00F2D8  6E02               	movwf	(PWM5_LoadDutyValue@dutyValue+1)^0,c
  1736  00F2DA  0EE8               	movlw	232
  1737  00F2DC  6E01               	movwf	PWM5_LoadDutyValue@dutyValue^0,c
  1738  00F2DE  EC9C  F060         	call	_PWM5_LoadDutyValue	;wreg free
  1739                           
  1740                           ;main.c: 115: PWM6_LoadDutyValue(1000);
  1741  00F2E2  0E03               	movlw	3
  1742  00F2E4  6E02               	movwf	(PWM6_LoadDutyValue@dutyValue+1)^0,c
  1743  00F2E6  0EE8               	movlw	232
  1744  00F2E8  6E01               	movwf	PWM6_LoadDutyValue@dutyValue^0,c
  1745  00F2EA  ECB6  F060         	call	_PWM6_LoadDutyValue	;wreg free
  1746  00F2EE                     
  1747                           ;main.c: 116: TMR0IF = 0;
  1748  00F2EE  0139               	movlb	57	; () banked
  1749  00F2F0  9FA3               	bcf	163,7,b	;volatile
  1750  00F2F2                     
  1751                           ; BSR set to: 57
  1752                           ;main.c: 117: TMR0_WriteTimer(k);
  1753  00F2F2  C0BC  F001         	movff	main@k,TMR0_WriteTimer@timerVal
  1754  00F2F6  C0BD  F002         	movff	main@k+1,TMR0_WriteTimer@timerVal+1
  1755  00F2FA  ECC7  F05F         	call	_TMR0_WriteTimer	;wreg free
  1756                           
  1757                           ;main.c: 118: while(!TMR0IF)
  1758  00F2FE  EF90  F079         	goto	l550
  1759  00F302                     l5063:
  1760                           
  1761                           ; BSR set to: 57
  1762                           ;main.c: 119: {;main.c: 120: buttonResponse();
  1763  00F302  EC88  F062         	call	_buttonResponse	;wreg free
  1764  00F306                     
  1765                           ;main.c: 122: if(counter ==6)break;
  1766  00F306  0E06               	movlw	6
  1767  00F308  0100               	movlb	0	; () banked
  1768  00F30A  19CC               	xorwf	_counter& (0+255),w,b
  1769  00F30C  11CD               	iorwf	(_counter+1)& (0+255),w,b
  1770  00F30E  A4D8               	btfss	status,2,c
  1771  00F310  EF8C  F079         	goto	u4861
  1772  00F314  EF8E  F079         	goto	u4860
  1773  00F318                     u4861:
  1774  00F318  EF90  F079         	goto	l550
  1775  00F31C                     u4860:
  1776  00F31C  EF98  F079         	goto	l5069
  1777  00F320                     l550:
  1778  00F320  0139               	movlb	57	; () banked
  1779  00F322  AFA3               	btfss	163,7,b	;volatile
  1780  00F324  EF96  F079         	goto	u4871
  1781  00F328  EF98  F079         	goto	u4870
  1782  00F32C                     u4871:
  1783  00F32C  EF81  F079         	goto	l5063
  1784  00F330                     u4870:
  1785  00F330                     l5069:
  1786                           
  1787                           ;main.c: 124: };main.c: 125: PR4=16;
  1788  00F330  0E10               	movlw	16
  1789  00F332  6E9F               	movwf	159,c	;volatile
  1790  00F334                     
  1791                           ;main.c: 126: PWM7_LoadDutyValue(32);
  1792  00F334  0E00               	movlw	0
  1793  00F336  6E02               	movwf	(PWM7_LoadDutyValue@dutyValue+1)^0,c
  1794  00F338  0E20               	movlw	32
  1795  00F33A  6E01               	movwf	PWM7_LoadDutyValue@dutyValue^0,c
  1796  00F33C  ECD0  F060         	call	_PWM7_LoadDutyValue	;wreg free
  1797  00F340                     
  1798                           ;main.c: 127: T0CON1bits.CKPS = 5;
  1799  00F340  50B9               	movf	185,w,c	;volatile
  1800  00F342  0BF0               	andlw	-16
  1801  00F344  0905               	iorlw	5
  1802  00F346  6EB9               	movwf	185,c	;volatile
  1803                           
  1804                           ;main.c: 128: PWM5_LoadDutyValue(0);
  1805  00F348  0E00               	movlw	0
  1806  00F34A  6E02               	movwf	(PWM5_LoadDutyValue@dutyValue+1)^0,c
  1807  00F34C  0E00               	movlw	0
  1808  00F34E  6E01               	movwf	PWM5_LoadDutyValue@dutyValue^0,c
  1809  00F350  EC9C  F060         	call	_PWM5_LoadDutyValue	;wreg free
  1810                           
  1811                           ;main.c: 129: PWM6_LoadDutyValue(0);
  1812  00F354  0E00               	movlw	0
  1813  00F356  6E02               	movwf	(PWM6_LoadDutyValue@dutyValue+1)^0,c
  1814  00F358  0E00               	movlw	0
  1815  00F35A  6E01               	movwf	PWM6_LoadDutyValue@dutyValue^0,c
  1816  00F35C  ECB6  F060         	call	_PWM6_LoadDutyValue	;wreg free
  1817  00F360                     
  1818                           ;main.c: 130: TMR0IF = 0;
  1819  00F360  0139               	movlb	57	; () banked
  1820  00F362  9FA3               	bcf	163,7,b	;volatile
  1821  00F364                     
  1822                           ; BSR set to: 57
  1823                           ;main.c: 131: TMR0_WriteTimer(h);
  1824  00F364  C0BE  F001         	movff	main@h,TMR0_WriteTimer@timerVal
  1825  00F368  C0BF  F002         	movff	main@h+1,TMR0_WriteTimer@timerVal+1
  1826  00F36C  ECC7  F05F         	call	_TMR0_WriteTimer	;wreg free
  1827                           
  1828                           ;main.c: 132: while(!TMR0IF)
  1829  00F370  EFC9  F079         	goto	l554
  1830  00F374                     l5079:
  1831                           
  1832                           ; BSR set to: 57
  1833                           ;main.c: 133: {;main.c: 134: buttonResponse();
  1834  00F374  EC88  F062         	call	_buttonResponse	;wreg free
  1835  00F378                     
  1836                           ;main.c: 136: if(counter ==6)break;
  1837  00F378  0E06               	movlw	6
  1838  00F37A  0100               	movlb	0	; () banked
  1839  00F37C  19CC               	xorwf	_counter& (0+255),w,b
  1840  00F37E  11CD               	iorwf	(_counter+1)& (0+255),w,b
  1841  00F380  A4D8               	btfss	status,2,c
  1842  00F382  EFC5  F079         	goto	u4881
  1843  00F386  EFC7  F079         	goto	u4880
  1844  00F38A                     u4881:
  1845  00F38A  EFC9  F079         	goto	l554
  1846  00F38E                     u4880:
  1847  00F38E  EFB6  F078         	goto	l4997
  1848  00F392                     l554:
  1849  00F392  0139               	movlb	57	; () banked
  1850  00F394  AFA3               	btfss	163,7,b	;volatile
  1851  00F396  EFCF  F079         	goto	u4891
  1852  00F39A  EFD1  F079         	goto	u4890
  1853  00F39E                     u4891:
  1854  00F39E  EFBA  F079         	goto	l5079
  1855  00F3A2                     u4890:
  1856  00F3A2  EFB6  F078         	goto	l4997
  1857  00F3A6                     l5085:
  1858                           
  1859                           ; BSR set to: 0
  1860  00F3A6  0E42               	movlw	66
  1861  00F3A8  6E9F               	movwf	159,c	;volatile
  1862  00F3AA                     
  1863                           ; BSR set to: 0
  1864                           ;main.c: 141: PWM7_LoadDutyValue(134);
  1865  00F3AA  0E00               	movlw	0
  1866  00F3AC  6E02               	movwf	(PWM7_LoadDutyValue@dutyValue+1)^0,c
  1867  00F3AE  0E86               	movlw	134
  1868  00F3B0  6E01               	movwf	PWM7_LoadDutyValue@dutyValue^0,c
  1869  00F3B2  ECD0  F060         	call	_PWM7_LoadDutyValue	;wreg free
  1870  00F3B6                     
  1871                           ;main.c: 142: T0CON1bits.CKPS = 2;
  1872  00F3B6  50B9               	movf	185,w,c	;volatile
  1873  00F3B8  0BF0               	andlw	-16
  1874  00F3BA  0902               	iorlw	2
  1875  00F3BC  6EB9               	movwf	185,c	;volatile
  1876                           
  1877                           ;main.c: 143: PWM5_LoadDutyValue(0);
  1878  00F3BE  0E00               	movlw	0
  1879  00F3C0  6E02               	movwf	(PWM5_LoadDutyValue@dutyValue+1)^0,c
  1880  00F3C2  0E00               	movlw	0
  1881  00F3C4  6E01               	movwf	PWM5_LoadDutyValue@dutyValue^0,c
  1882  00F3C6  EC9C  F060         	call	_PWM5_LoadDutyValue	;wreg free
  1883                           
  1884                           ;main.c: 144: PWM6_LoadDutyValue(1000);
  1885  00F3CA  0E03               	movlw	3
  1886  00F3CC  6E02               	movwf	(PWM6_LoadDutyValue@dutyValue+1)^0,c
  1887  00F3CE  0EE8               	movlw	232
  1888  00F3D0  6E01               	movwf	PWM6_LoadDutyValue@dutyValue^0,c
  1889  00F3D2  ECB6  F060         	call	_PWM6_LoadDutyValue	;wreg free
  1890  00F3D6                     
  1891                           ;main.c: 146: TMR0IF = 0;
  1892  00F3D6  0139               	movlb	57	; () banked
  1893  00F3D8  9FA3               	bcf	163,7,b	;volatile
  1894  00F3DA                     
  1895                           ; BSR set to: 57
  1896                           ;main.c: 147: TMR0_WriteTimer(j);
  1897  00F3DA  C0C4  F001         	movff	main@j,TMR0_WriteTimer@timerVal
  1898  00F3DE  C0C5  F002         	movff	main@j+1,TMR0_WriteTimer@timerVal+1
  1899  00F3E2  ECC7  F05F         	call	_TMR0_WriteTimer	;wreg free
  1900                           
  1901                           ;main.c: 148: while(!TMR0IF)
  1902  00F3E6  EF04  F07A         	goto	l559
  1903  00F3EA                     l5095:
  1904                           
  1905                           ; BSR set to: 57
  1906                           ;main.c: 149: {;main.c: 150: buttonResponse();
  1907  00F3EA  EC88  F062         	call	_buttonResponse	;wreg free
  1908  00F3EE                     
  1909                           ;main.c: 152: if(counter ==7)break;
  1910  00F3EE  0E07               	movlw	7
  1911  00F3F0  0100               	movlb	0	; () banked
  1912  00F3F2  19CC               	xorwf	_counter& (0+255),w,b
  1913  00F3F4  11CD               	iorwf	(_counter+1)& (0+255),w,b
  1914  00F3F6  A4D8               	btfss	status,2,c
  1915  00F3F8  EF00  F07A         	goto	u4901
  1916  00F3FC  EF02  F07A         	goto	u4900
  1917  00F400                     u4901:
  1918  00F400  EF04  F07A         	goto	l559
  1919  00F404                     u4900:
  1920  00F404  EF0C  F07A         	goto	l5101
  1921  00F408                     l559:
  1922  00F408  0139               	movlb	57	; () banked
  1923  00F40A  AFA3               	btfss	163,7,b	;volatile
  1924  00F40C  EF0A  F07A         	goto	u4911
  1925  00F410  EF0C  F07A         	goto	u4910
  1926  00F414                     u4911:
  1927  00F414  EFF5  F079         	goto	l5095
  1928  00F418                     u4910:
  1929  00F418                     l5101:
  1930                           
  1931                           ;main.c: 154: };main.c: 155: PWM5_LoadDutyValue(0);
  1932  00F418  0E00               	movlw	0
  1933  00F41A  6E02               	movwf	(PWM5_LoadDutyValue@dutyValue+1)^0,c
  1934  00F41C  0E00               	movlw	0
  1935  00F41E  6E01               	movwf	PWM5_LoadDutyValue@dutyValue^0,c
  1936  00F420  EC9C  F060         	call	_PWM5_LoadDutyValue	;wreg free
  1937                           
  1938                           ;main.c: 156: PWM6_LoadDutyValue(0);
  1939  00F424  0E00               	movlw	0
  1940  00F426  6E02               	movwf	(PWM6_LoadDutyValue@dutyValue+1)^0,c
  1941  00F428  0E00               	movlw	0
  1942  00F42A  6E01               	movwf	PWM6_LoadDutyValue@dutyValue^0,c
  1943  00F42C  ECB6  F060         	call	_PWM6_LoadDutyValue	;wreg free
  1944  00F430                     
  1945                           ;main.c: 158: TMR0IF = 0;
  1946  00F430  0139               	movlb	57	; () banked
  1947  00F432  9FA3               	bcf	163,7,b	;volatile
  1948  00F434                     
  1949                           ; BSR set to: 57
  1950                           ;main.c: 159: TMR0_WriteTimer(j);
  1951  00F434  C0C4  F001         	movff	main@j,TMR0_WriteTimer@timerVal
  1952  00F438  C0C5  F002         	movff	main@j+1,TMR0_WriteTimer@timerVal+1
  1953  00F43C  ECC7  F05F         	call	_TMR0_WriteTimer	;wreg free
  1954                           
  1955                           ;main.c: 160: while(!TMR0IF)
  1956  00F440  EF31  F07A         	goto	l563
  1957  00F444                     l5107:
  1958                           
  1959                           ; BSR set to: 57
  1960                           ;main.c: 161: {;main.c: 162: buttonResponse();
  1961  00F444  EC88  F062         	call	_buttonResponse	;wreg free
  1962  00F448                     
  1963                           ;main.c: 164: if(counter ==7)break;
  1964  00F448  0E07               	movlw	7
  1965  00F44A  0100               	movlb	0	; () banked
  1966  00F44C  19CC               	xorwf	_counter& (0+255),w,b
  1967  00F44E  11CD               	iorwf	(_counter+1)& (0+255),w,b
  1968  00F450  A4D8               	btfss	status,2,c
  1969  00F452  EF2D  F07A         	goto	u4921
  1970  00F456  EF2F  F07A         	goto	u4920
  1971  00F45A                     u4921:
  1972  00F45A  EF31  F07A         	goto	l563
  1973  00F45E                     u4920:
  1974  00F45E  EFB6  F078         	goto	l4997
  1975  00F462                     l563:
  1976  00F462  0139               	movlb	57	; () banked
  1977  00F464  AFA3               	btfss	163,7,b	;volatile
  1978  00F466  EF37  F07A         	goto	u4931
  1979  00F46A  EF39  F07A         	goto	u4930
  1980  00F46E                     u4931:
  1981  00F46E  EF22  F07A         	goto	l5107
  1982  00F472                     u4930:
  1983  00F472  EFB6  F078         	goto	l4997
  1984  00F476                     l5113:
  1985                           
  1986                           ; BSR set to: 0
  1987  00F476  0E34               	movlw	52
  1988  00F478  6E9F               	movwf	159,c	;volatile
  1989  00F47A                     
  1990                           ; BSR set to: 0
  1991                           ;main.c: 170: PWM7_LoadDutyValue(106);
  1992  00F47A  0E00               	movlw	0
  1993  00F47C  6E02               	movwf	(PWM7_LoadDutyValue@dutyValue+1)^0,c
  1994  00F47E  0E6A               	movlw	106
  1995  00F480  6E01               	movwf	PWM7_LoadDutyValue@dutyValue^0,c
  1996  00F482  ECD0  F060         	call	_PWM7_LoadDutyValue	;wreg free
  1997  00F486                     
  1998                           ;main.c: 171: PWM5_LoadDutyValue(0);
  1999  00F486  0E00               	movlw	0
  2000  00F488  6E02               	movwf	(PWM5_LoadDutyValue@dutyValue+1)^0,c
  2001  00F48A  0E00               	movlw	0
  2002  00F48C  6E01               	movwf	PWM5_LoadDutyValue@dutyValue^0,c
  2003  00F48E  EC9C  F060         	call	_PWM5_LoadDutyValue	;wreg free
  2004  00F492                     
  2005                           ;main.c: 172: PWM6_LoadDutyValue(750);
  2006  00F492  0E02               	movlw	2
  2007  00F494  6E02               	movwf	(PWM6_LoadDutyValue@dutyValue+1)^0,c
  2008  00F496  0EEE               	movlw	238
  2009  00F498  6E01               	movwf	PWM6_LoadDutyValue@dutyValue^0,c
  2010  00F49A  ECB6  F060         	call	_PWM6_LoadDutyValue	;wreg free
  2011                           
  2012                           ;main.c: 174: break;
  2013  00F49E  EFB6  F078         	goto	l4997
  2014  00F4A2                     l5121:
  2015                           
  2016                           ; BSR set to: 0
  2017  00F4A2  0E28               	movlw	40
  2018  00F4A4  6E9F               	movwf	159,c	;volatile
  2019  00F4A6                     
  2020                           ; BSR set to: 0
  2021                           ;main.c: 176: PWM7_LoadDutyValue(82);
  2022  00F4A6  0E00               	movlw	0
  2023  00F4A8  6E02               	movwf	(PWM7_LoadDutyValue@dutyValue+1)^0,c
  2024  00F4AA  0E52               	movlw	82
  2025  00F4AC  6E01               	movwf	PWM7_LoadDutyValue@dutyValue^0,c
  2026  00F4AE  ECD0  F060         	call	_PWM7_LoadDutyValue	;wreg free
  2027  00F4B2                     
  2028                           ;main.c: 177: PWM5_LoadDutyValue(0);
  2029  00F4B2  0E00               	movlw	0
  2030  00F4B4  6E02               	movwf	(PWM5_LoadDutyValue@dutyValue+1)^0,c
  2031  00F4B6  0E00               	movlw	0
  2032  00F4B8  6E01               	movwf	PWM5_LoadDutyValue@dutyValue^0,c
  2033  00F4BA  EC9C  F060         	call	_PWM5_LoadDutyValue	;wreg free
  2034  00F4BE                     
  2035                           ;main.c: 178: PWM6_LoadDutyValue(100);
  2036  00F4BE  0E00               	movlw	0
  2037  00F4C0  6E02               	movwf	(PWM6_LoadDutyValue@dutyValue+1)^0,c
  2038  00F4C2  0E64               	movlw	100
  2039  00F4C4  6E01               	movwf	PWM6_LoadDutyValue@dutyValue^0,c
  2040  00F4C6  ECB6  F060         	call	_PWM6_LoadDutyValue	;wreg free
  2041                           
  2042                           ;main.c: 179: break;
  2043  00F4CA  EFB6  F078         	goto	l4997
  2044  00F4CE                     l5129:
  2045                           
  2046                           ; BSR set to: 0
  2047  00F4CE  0E00               	movlw	0
  2048  00F4D0  6E02               	movwf	(PWM7_LoadDutyValue@dutyValue+1)^0,c
  2049  00F4D2  0E00               	movlw	0
  2050  00F4D4  6E01               	movwf	PWM7_LoadDutyValue@dutyValue^0,c
  2051  00F4D6  ECD0  F060         	call	_PWM7_LoadDutyValue	;wreg free
  2052                           
  2053                           ;main.c: 181: PWM5_LoadDutyValue(0);
  2054  00F4DA  0E00               	movlw	0
  2055  00F4DC  6E02               	movwf	(PWM5_LoadDutyValue@dutyValue+1)^0,c
  2056  00F4DE  0E00               	movlw	0
  2057  00F4E0  6E01               	movwf	PWM5_LoadDutyValue@dutyValue^0,c
  2058  00F4E2  EC9C  F060         	call	_PWM5_LoadDutyValue	;wreg free
  2059                           
  2060                           ;main.c: 182: PWM6_LoadDutyValue(1000);
  2061  00F4E6  0E03               	movlw	3
  2062  00F4E8  6E02               	movwf	(PWM6_LoadDutyValue@dutyValue+1)^0,c
  2063  00F4EA  0EE8               	movlw	232
  2064  00F4EC  6E01               	movwf	PWM6_LoadDutyValue@dutyValue^0,c
  2065  00F4EE  ECB6  F060         	call	_PWM6_LoadDutyValue	;wreg free
  2066                           
  2067                           ;main.c: 183: break;
  2068  00F4F2  EFB6  F078         	goto	l4997
  2069  00F4F6                     l5133:
  2070  00F4F6  C0CC  F0A6         	movff	_counter,??_main
  2071  00F4FA  C0CD  F0A7         	movff	_counter+1,??_main+1
  2072                           
  2073                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2074                           ; Switch size 1, requested type "simple"
  2075                           ; Number of cases is 1, Range of values is 0 to 0
  2076                           ; switch strategies available:
  2077                           ; Name         Instructions Cycles
  2078                           ; simple_byte            4     3 (average)
  2079                           ;	Chosen strategy is simple_byte
  2080  00F4FE  0100               	movlb	0	; () banked
  2081  00F500  51A7               	movf	(??_main+1)& (0+255),w,b
  2082  00F502  0A00               	xorlw	0	; case 0
  2083  00F504  B4D8               	btfsc	status,2,c
  2084  00F506  EF87  F07A         	goto	l5207
  2085  00F50A  EFB6  F078         	goto	l4997
  2086  00F50E                     l5207:
  2087                           
  2088                           ; BSR set to: 0
  2089                           ; Switch size 1, requested type "simple"
  2090                           ; Number of cases is 9, Range of values is 1 to 9
  2091                           ; switch strategies available:
  2092                           ; Name         Instructions Cycles
  2093                           ; simple_byte           28    15 (average)
  2094                           ;	Chosen strategy is simple_byte
  2095  00F50E  51A6               	movf	??_main& (0+255),w,b
  2096  00F510  0A01               	xorlw	1	; case 1
  2097  00F512  B4D8               	btfsc	status,2,c
  2098  00F514  EFBA  F078         	goto	l4999
  2099  00F518  0A03               	xorlw	3	; case 2
  2100  00F51A  B4D8               	btfsc	status,2,c
  2101  00F51C  EFD0  F078         	goto	l5007
  2102  00F520  0A01               	xorlw	1	; case 3
  2103  00F522  B4D8               	btfsc	status,2,c
  2104  00F524  EFE5  F078         	goto	l5015
  2105  00F528  0A07               	xorlw	7	; case 4
  2106  00F52A  B4D8               	btfsc	status,2,c
  2107  00F52C  EF49  F079         	goto	l5045
  2108  00F530  0A01               	xorlw	1	; case 5
  2109  00F532  B4D8               	btfsc	status,2,c
  2110  00F534  EF5F  F079         	goto	l5053
  2111  00F538  0A03               	xorlw	3	; case 6
  2112  00F53A  B4D8               	btfsc	status,2,c
  2113  00F53C  EFD3  F079         	goto	l5085
  2114  00F540  0A01               	xorlw	1	; case 7
  2115  00F542  B4D8               	btfsc	status,2,c
  2116  00F544  EF3B  F07A         	goto	l5113
  2117  00F548  0A0F               	xorlw	15	; case 8
  2118  00F54A  B4D8               	btfsc	status,2,c
  2119  00F54C  EF51  F07A         	goto	l5121
  2120  00F550  0A01               	xorlw	1	; case 9
  2121  00F552  B4D8               	btfsc	status,2,c
  2122  00F554  EF67  F07A         	goto	l5129
  2123  00F558  EFB6  F078         	goto	l4997
  2124  00F55C  EFFE  F07F         	goto	start
  2125  00F560                     __end_of_main:
  2126                           	callstack 0
  2127                           
  2128 ;; *************** function _pow *****************
  2129 ;; Defined at:
  2130 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\pow.c"
  2131 ;; Parameters:    Size  Location     Type
  2132 ;;  x               4   49[BANK0 ] void 
  2133 ;;  y               4   53[BANK0 ] void 
  2134 ;; Auto vars:     Size  Location     Type
  2135 ;;  yi              4   66[BANK0 ] unsigned long 
  2136 ;;  sign            1   65[BANK0 ] unsigned char 
  2137 ;; Return value:  Size  Location     Type
  2138 ;;                  4   49[BANK0 ] unsigned char 
  2139 ;; Registers used:
  2140 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2141 ;; Tracked objects:
  2142 ;;		On entry : 0/0
  2143 ;;		On exit  : 0/0
  2144 ;;		Unchanged: 0/0
  2145 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2146 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2147 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2148 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2149 ;;      Totals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2150 ;;Total ram usage:       21 bytes
  2151 ;; Hardware stack levels used:    1
  2152 ;; Hardware stack levels required when called:    4
  2153 ;; This function calls:
  2154 ;;		___fleq
  2155 ;;		___flge
  2156 ;;		___flmul
  2157 ;;		___flneg
  2158 ;;		___fltol
  2159 ;;		___xxtofl
  2160 ;;		_exp
  2161 ;;		_log
  2162 ;; This function is called by:
  2163 ;;		_main
  2164 ;; This function uses a non-reentrant model
  2165 ;;
  2166                           
  2167                           	psect	text1
  2168  00D576                     __ptext1:
  2169                           	callstack 0
  2170  00D576                     _pow:
  2171                           	callstack 26
  2172  00D576  0E00               	movlw	0
  2173  00D578  0100               	movlb	0	; () banked
  2174  00D57A  6FA1               	movwf	pow@sign& (0+255),b
  2175  00D57C                     
  2176                           ; BSR set to: 0
  2177  00D57C  C091  F027         	movff	pow@x,___fleq@ff1
  2178  00D580  C092  F028         	movff	pow@x+1,___fleq@ff1+1
  2179  00D584  C093  F029         	movff	pow@x+2,___fleq@ff1+2
  2180  00D588  C094  F02A         	movff	pow@x+3,___fleq@ff1+3
  2181  00D58C  0E00               	movlw	0
  2182  00D58E  6E2B               	movwf	___fleq@ff2^0,c
  2183  00D590  0E00               	movlw	0
  2184  00D592  6E2C               	movwf	(___fleq@ff2+1)^0,c
  2185  00D594  0E00               	movlw	0
  2186  00D596  6E2D               	movwf	(___fleq@ff2+2)^0,c
  2187  00D598  0E00               	movlw	0
  2188  00D59A  6E2E               	movwf	(___fleq@ff2+3)^0,c
  2189  00D59C  EC76  F063         	call	___fleq	;wreg free
  2190  00D5A0  A0D8               	btfss	status,0,c
  2191  00D5A2  EFD5  F06A         	goto	u4731
  2192  00D5A6  EFD7  F06A         	goto	u4730
  2193  00D5AA                     u4731:
  2194  00D5AA  EF00  F06B         	goto	l4903
  2195  00D5AE                     u4730:
  2196  00D5AE  0E00               	movlw	0
  2197  00D5B0  6E01               	movwf	___flge@ff1^0,c
  2198  00D5B2  0E00               	movlw	0
  2199  00D5B4  6E02               	movwf	(___flge@ff1+1)^0,c
  2200  00D5B6  0E00               	movlw	0
  2201  00D5B8  6E03               	movwf	(___flge@ff1+2)^0,c
  2202  00D5BA  0E00               	movlw	0
  2203  00D5BC  6E04               	movwf	(___flge@ff1+3)^0,c
  2204  00D5BE  C095  F005         	movff	pow@y,___flge@ff2
  2205  00D5C2  C096  F006         	movff	pow@y+1,___flge@ff2+1
  2206  00D5C6  C097  F007         	movff	pow@y+2,___flge@ff2+2
  2207  00D5CA  C098  F008         	movff	pow@y+3,___flge@ff2+3
  2208  00D5CE  ECF1  F064         	call	___flge	;wreg free
  2209  00D5D2  A0D8               	btfss	status,0,c
  2210  00D5D4  EFEE  F06A         	goto	u4741
  2211  00D5D8  EFF0  F06A         	goto	u4740
  2212  00D5DC                     u4741:
  2213  00D5DC  EFF5  F06A         	goto	l1414
  2214  00D5E0                     u4740:
  2215  00D5E0  0E00               	movlw	0
  2216  00D5E2  0100               	movlb	0	; () banked
  2217  00D5E4  6FC7               	movwf	(_errno+1)& (0+255),b
  2218  00D5E6  0E21               	movlw	33
  2219  00D5E8  6FC6               	movwf	_errno& (0+255),b
  2220  00D5EA                     l1414:
  2221  00D5EA  0E00               	movlw	0
  2222  00D5EC  0100               	movlb	0	; () banked
  2223  00D5EE  6F91               	movwf	?_pow& (0+255),b
  2224  00D5F0  0E00               	movlw	0
  2225  00D5F2  6F92               	movwf	(?_pow+1)& (0+255),b
  2226  00D5F4  0E00               	movlw	0
  2227  00D5F6  6F93               	movwf	(?_pow+2)& (0+255),b
  2228  00D5F8  0E00               	movlw	0
  2229  00D5FA  6F94               	movwf	(?_pow+3)& (0+255),b
  2230  00D5FC  EFEA  F06B         	goto	l1415
  2231  00D600                     l4903:
  2232  00D600  C095  F027         	movff	pow@y,___fleq@ff1
  2233  00D604  C096  F028         	movff	pow@y+1,___fleq@ff1+1
  2234  00D608  C097  F029         	movff	pow@y+2,___fleq@ff1+2
  2235  00D60C  C098  F02A         	movff	pow@y+3,___fleq@ff1+3
  2236  00D610  0E00               	movlw	0
  2237  00D612  6E2B               	movwf	___fleq@ff2^0,c
  2238  00D614  0E00               	movlw	0
  2239  00D616  6E2C               	movwf	(___fleq@ff2+1)^0,c
  2240  00D618  0E00               	movlw	0
  2241  00D61A  6E2D               	movwf	(___fleq@ff2+2)^0,c
  2242  00D61C  0E00               	movlw	0
  2243  00D61E  6E2E               	movwf	(___fleq@ff2+3)^0,c
  2244  00D620  EC76  F063         	call	___fleq	;wreg free
  2245  00D624  A0D8               	btfss	status,0,c
  2246  00D626  EF17  F06B         	goto	u4751
  2247  00D62A  EF19  F06B         	goto	u4750
  2248  00D62E                     u4751:
  2249  00D62E  EF24  F06B         	goto	l4909
  2250  00D632                     u4750:
  2251  00D632  0E00               	movlw	0
  2252  00D634  0100               	movlb	0	; () banked
  2253  00D636  6F91               	movwf	?_pow& (0+255),b
  2254  00D638  0E00               	movlw	0
  2255  00D63A  6F92               	movwf	(?_pow+1)& (0+255),b
  2256  00D63C  0E80               	movlw	128
  2257  00D63E  6F93               	movwf	(?_pow+2)& (0+255),b
  2258  00D640  0E3F               	movlw	63
  2259  00D642  6F94               	movwf	(?_pow+3)& (0+255),b
  2260  00D644  EFEA  F06B         	goto	l1415
  2261  00D648                     l4909:
  2262  00D648  0100               	movlb	0	; () banked
  2263  00D64A  BF94               	btfsc	(pow@x+3)& (0+255),7,b
  2264  00D64C  EF2C  F06B         	goto	u4760
  2265  00D650  EF2A  F06B         	goto	u4761
  2266  00D654                     u4761:
  2267  00D654  EF87  F06B         	goto	l4921
  2268  00D658                     u4760:
  2269  00D658                     
  2270                           ; BSR set to: 0
  2271  00D658  C095  F00F         	movff	pow@y,___fltol@f1
  2272  00D65C  C096  F010         	movff	pow@y+1,___fltol@f1+1
  2273  00D660  C097  F011         	movff	pow@y+2,___fltol@f1+2
  2274  00D664  C098  F012         	movff	pow@y+3,___fltol@f1+3
  2275  00D668  EC73  F065         	call	___fltol	;wreg free
  2276  00D66C  C00F  F0A2         	movff	?___fltol,pow@yi
  2277  00D670  C010  F0A3         	movff	?___fltol+1,pow@yi+1
  2278  00D674  C011  F0A4         	movff	?___fltol+2,pow@yi+2
  2279  00D678  C012  F0A5         	movff	?___fltol+3,pow@yi+3
  2280  00D67C  C0A2  F019         	movff	pow@yi,___xxtofl@val
  2281  00D680  C0A3  F01A         	movff	pow@yi+1,___xxtofl@val+1
  2282  00D684  C0A4  F01B         	movff	pow@yi+2,___xxtofl@val+2
  2283  00D688  C0A5  F01C         	movff	pow@yi+3,___xxtofl@val+3
  2284  00D68C  0E00               	movlw	0
  2285  00D68E  ECE1  F069         	call	___xxtofl
  2286  00D692  C019  F027         	movff	?___xxtofl,___fleq@ff1
  2287  00D696  C01A  F028         	movff	?___xxtofl+1,___fleq@ff1+1
  2288  00D69A  C01B  F029         	movff	?___xxtofl+2,___fleq@ff1+2
  2289  00D69E  C01C  F02A         	movff	?___xxtofl+3,___fleq@ff1+3
  2290  00D6A2  C095  F02B         	movff	pow@y,___fleq@ff2
  2291  00D6A6  C096  F02C         	movff	pow@y+1,___fleq@ff2+1
  2292  00D6AA  C097  F02D         	movff	pow@y+2,___fleq@ff2+2
  2293  00D6AE  C098  F02E         	movff	pow@y+3,___fleq@ff2+3
  2294  00D6B2  EC76  F063         	call	___fleq	;wreg free
  2295  00D6B6  B0D8               	btfsc	status,0,c
  2296  00D6B8  EF60  F06B         	goto	u4771
  2297  00D6BC  EF62  F06B         	goto	u4770
  2298  00D6C0                     u4771:
  2299  00D6C0  EF71  F06B         	goto	l4917
  2300  00D6C4                     u4770:
  2301  00D6C4  0E00               	movlw	0
  2302  00D6C6  0100               	movlb	0	; () banked
  2303  00D6C8  6FC7               	movwf	(_errno+1)& (0+255),b
  2304  00D6CA  0E21               	movlw	33
  2305  00D6CC  6FC6               	movwf	_errno& (0+255),b
  2306  00D6CE  0E00               	movlw	0
  2307  00D6D0  6F91               	movwf	?_pow& (0+255),b
  2308  00D6D2  0E00               	movlw	0
  2309  00D6D4  6F92               	movwf	(?_pow+1)& (0+255),b
  2310  00D6D6  0E00               	movlw	0
  2311  00D6D8  6F93               	movwf	(?_pow+2)& (0+255),b
  2312  00D6DA  0E00               	movlw	0
  2313  00D6DC  6F94               	movwf	(?_pow+3)& (0+255),b
  2314  00D6DE  EFEA  F06B         	goto	l1415
  2315  00D6E2                     l4917:
  2316  00D6E2  0100               	movlb	0	; () banked
  2317  00D6E4  51A2               	movf	pow@yi& (0+255),w,b
  2318  00D6E6  0B01               	andlw	1
  2319  00D6E8  6FA1               	movwf	pow@sign& (0+255),b
  2320  00D6EA                     
  2321                           ; BSR set to: 0
  2322  00D6EA  C091  F001         	movff	pow@x,___flneg@f1
  2323  00D6EE  C092  F002         	movff	pow@x+1,___flneg@f1+1
  2324  00D6F2  C093  F003         	movff	pow@x+2,___flneg@f1+2
  2325  00D6F6  C094  F004         	movff	pow@x+3,___flneg@f1+3
  2326  00D6FA  ECEA  F060         	call	___flneg	;wreg free
  2327  00D6FE  C001  F091         	movff	?___flneg,pow@x
  2328  00D702  C002  F092         	movff	?___flneg+1,pow@x+1
  2329  00D706  C003  F093         	movff	?___flneg+2,pow@x+2
  2330  00D70A  C004  F094         	movff	?___flneg+3,pow@x+3
  2331  00D70E                     l4921:
  2332  00D70E  C091  F075         	movff	pow@x,log@x
  2333  00D712  C092  F076         	movff	pow@x+1,log@x+1
  2334  00D716  C093  F077         	movff	pow@x+2,log@x+2
  2335  00D71A  C094  F078         	movff	pow@x+3,log@x+3
  2336  00D71E  EC12  F069         	call	_log	;wreg free
  2337  00D722  C075  F099         	movff	?_log,_pow$2200
  2338  00D726  C076  F09A         	movff	?_log+1,_pow$2200+1
  2339  00D72A  C077  F09B         	movff	?_log+2,_pow$2200+2
  2340  00D72E  C078  F09C         	movff	?_log+3,_pow$2200+3
  2341  00D732  C099  F04B         	movff	_pow$2200,___flmul@b
  2342  00D736  C09A  F04C         	movff	_pow$2200+1,___flmul@b+1
  2343  00D73A  C09B  F04D         	movff	_pow$2200+2,___flmul@b+2
  2344  00D73E  C09C  F04E         	movff	_pow$2200+3,___flmul@b+3
  2345  00D742  C095  F04F         	movff	pow@y,___flmul@a
  2346  00D746  C096  F050         	movff	pow@y+1,___flmul@a+1
  2347  00D74A  C097  F051         	movff	pow@y+2,___flmul@a+2
  2348  00D74E  C098  F052         	movff	pow@y+3,___flmul@a+3
  2349  00D752  ECAA  F070         	call	___flmul	;wreg free
  2350  00D756  C04B  F09D         	movff	?___flmul,_pow$2201
  2351  00D75A  C04C  F09E         	movff	?___flmul+1,_pow$2201+1
  2352  00D75E  C04D  F09F         	movff	?___flmul+2,_pow$2201+2
  2353  00D762  C04E  F0A0         	movff	?___flmul+3,_pow$2201+3
  2354  00D766  C09D  F086         	movff	_pow$2201,exp@x
  2355  00D76A  C09E  F087         	movff	_pow$2201+1,exp@x+1
  2356  00D76E  C09F  F088         	movff	_pow$2201+2,exp@x+2
  2357  00D772  C0A0  F089         	movff	_pow$2201+3,exp@x+3
  2358  00D776  ECEB  F06B         	call	_exp	;wreg free
  2359  00D77A  C086  F091         	movff	?_exp,pow@x
  2360  00D77E  C087  F092         	movff	?_exp+1,pow@x+1
  2361  00D782  C088  F093         	movff	?_exp+2,pow@x+2
  2362  00D786  C089  F094         	movff	?_exp+3,pow@x+3
  2363  00D78A  0100               	movlb	0	; () banked
  2364  00D78C  51A1               	movf	pow@sign& (0+255),w,b
  2365  00D78E  B4D8               	btfsc	status,2,c
  2366  00D790  EFCC  F06B         	goto	u4781
  2367  00D794  EFCE  F06B         	goto	u4780
  2368  00D798                     u4781:
  2369  00D798  EFE2  F06B         	goto	l1419
  2370  00D79C                     u4780:
  2371  00D79C                     
  2372                           ; BSR set to: 0
  2373  00D79C  C091  F001         	movff	pow@x,___flneg@f1
  2374  00D7A0  C092  F002         	movff	pow@x+1,___flneg@f1+1
  2375  00D7A4  C093  F003         	movff	pow@x+2,___flneg@f1+2
  2376  00D7A8  C094  F004         	movff	pow@x+3,___flneg@f1+3
  2377  00D7AC  ECEA  F060         	call	___flneg	;wreg free
  2378  00D7B0  C001  F091         	movff	?___flneg,?_pow
  2379  00D7B4  C002  F092         	movff	?___flneg+1,?_pow+1
  2380  00D7B8  C003  F093         	movff	?___flneg+2,?_pow+2
  2381  00D7BC  C004  F094         	movff	?___flneg+3,?_pow+3
  2382  00D7C0  EFEA  F06B         	goto	l1415
  2383  00D7C4                     l1419:
  2384                           
  2385                           ; BSR set to: 0
  2386  00D7C4  C091  F091         	movff	pow@x,?_pow
  2387  00D7C8  C092  F092         	movff	pow@x+1,?_pow+1
  2388  00D7CC  C093  F093         	movff	pow@x+2,?_pow+2
  2389  00D7D0  C094  F094         	movff	pow@x+3,?_pow+3
  2390  00D7D4                     l1415:
  2391  00D7D4  0012               	return		;funcret
  2392  00D7D6                     __end_of_pow:
  2393                           	callstack 0
  2394                           
  2395 ;; *************** function _log *****************
  2396 ;; Defined at:
  2397 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\log.c"
  2398 ;; Parameters:    Size  Location     Type
  2399 ;;  x               4   21[BANK0 ] unsigned char 
  2400 ;; Auto vars:     Size  Location     Type
  2401 ;;  exponent        2   25[BANK0 ] int 
  2402 ;; Return value:  Size  Location     Type
  2403 ;;                  4   21[BANK0 ] int 
  2404 ;; Registers used:
  2405 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2406 ;; Tracked objects:
  2407 ;;		On entry : 0/0
  2408 ;;		On exit  : 0/0
  2409 ;;		Unchanged: 0/0
  2410 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2411 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2412 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2413 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2414 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2415 ;;Total ram usage:        6 bytes
  2416 ;; Hardware stack levels used:    1
  2417 ;; Hardware stack levels required when called:    2
  2418 ;; This function calls:
  2419 ;;		___fladd
  2420 ;;		___fleq
  2421 ;;		___flmul
  2422 ;;		___xxtofl
  2423 ;;		_eval_poly
  2424 ;;		_frexp
  2425 ;; This function is called by:
  2426 ;;		_pow
  2427 ;; This function uses a non-reentrant model
  2428 ;;
  2429                           
  2430                           	psect	text2
  2431  00D224                     __ptext2:
  2432                           	callstack 0
  2433  00D224                     _log:
  2434                           	callstack 27
  2435  00D224  0100               	movlb	0	; () banked
  2436  00D226  BF78               	btfsc	(log@x+3)& (0+255),7,b
  2437  00D228  EF1A  F069         	goto	u4530
  2438  00D22C  EF18  F069         	goto	u4531
  2439  00D230                     u4531:
  2440  00D230  EF28  F069         	goto	l4789
  2441  00D234                     u4530:
  2442  00D234                     
  2443                           ; BSR set to: 0
  2444  00D234  0E00               	movlw	0
  2445  00D236  6FC7               	movwf	(_errno+1)& (0+255),b
  2446  00D238  0E21               	movlw	33
  2447  00D23A  6FC6               	movwf	_errno& (0+255),b
  2448  00D23C  0E00               	movlw	0
  2449  00D23E  6F75               	movwf	?_log& (0+255),b
  2450  00D240  0E00               	movlw	0
  2451  00D242  6F76               	movwf	(?_log+1)& (0+255),b
  2452  00D244  0E00               	movlw	0
  2453  00D246  6F77               	movwf	(?_log+2)& (0+255),b
  2454  00D248  0E00               	movlw	0
  2455  00D24A  6F78               	movwf	(?_log+3)& (0+255),b
  2456  00D24C  EFE0  F069         	goto	l1483
  2457  00D250                     l4789:
  2458                           
  2459                           ; BSR set to: 0
  2460  00D250  C075  F027         	movff	log@x,___fleq@ff1
  2461  00D254  C076  F028         	movff	log@x+1,___fleq@ff1+1
  2462  00D258  C077  F029         	movff	log@x+2,___fleq@ff1+2
  2463  00D25C  C078  F02A         	movff	log@x+3,___fleq@ff1+3
  2464  00D260  0E00               	movlw	0
  2465  00D262  6E2B               	movwf	___fleq@ff2^0,c
  2466  00D264  0E00               	movlw	0
  2467  00D266  6E2C               	movwf	(___fleq@ff2+1)^0,c
  2468  00D268  0E00               	movlw	0
  2469  00D26A  6E2D               	movwf	(___fleq@ff2+2)^0,c
  2470  00D26C  0E00               	movlw	0
  2471  00D26E  6E2E               	movwf	(___fleq@ff2+3)^0,c
  2472  00D270  EC76  F063         	call	___fleq	;wreg free
  2473  00D274  A0D8               	btfss	status,0,c
  2474  00D276  EF3F  F069         	goto	u4541
  2475  00D27A  EF41  F069         	goto	u4540
  2476  00D27E                     u4541:
  2477  00D27E  EF50  F069         	goto	l4795
  2478  00D282                     u4540:
  2479  00D282  0E00               	movlw	0
  2480  00D284  0100               	movlb	0	; () banked
  2481  00D286  6FC7               	movwf	(_errno+1)& (0+255),b
  2482  00D288  0E22               	movlw	34
  2483  00D28A  6FC6               	movwf	_errno& (0+255),b
  2484  00D28C  0E00               	movlw	0
  2485  00D28E  6F75               	movwf	?_log& (0+255),b
  2486  00D290  0E00               	movlw	0
  2487  00D292  6F76               	movwf	(?_log+1)& (0+255),b
  2488  00D294  0E00               	movlw	0
  2489  00D296  6F77               	movwf	(?_log+2)& (0+255),b
  2490  00D298  0E00               	movlw	0
  2491  00D29A  6F78               	movwf	(?_log+3)& (0+255),b
  2492  00D29C  EFE0  F069         	goto	l1483
  2493  00D2A0                     l4795:
  2494  00D2A0  0E00               	movlw	0
  2495  00D2A2  6E4F               	movwf	___flmul@a^0,c
  2496  00D2A4  0E00               	movlw	0
  2497  00D2A6  6E50               	movwf	(___flmul@a+1)^0,c
  2498  00D2A8  0E00               	movlw	0
  2499  00D2AA  6E51               	movwf	(___flmul@a+2)^0,c
  2500  00D2AC  0E40               	movlw	64
  2501  00D2AE  6E52               	movwf	(___flmul@a+3)^0,c
  2502  00D2B0  0E79               	movlw	low log@exponent
  2503  00D2B2  6E37               	movwf	frexp@eptr^0,c
  2504  00D2B4  0E00               	movlw	high log@exponent
  2505  00D2B6  6E38               	movwf	(frexp@eptr+1)^0,c
  2506  00D2B8  C075  F033         	movff	log@x,frexp@value
  2507  00D2BC  C076  F034         	movff	log@x+1,frexp@value+1
  2508  00D2C0  C077  F035         	movff	log@x+2,frexp@value+2
  2509  00D2C4  C078  F036         	movff	log@x+3,frexp@value+3
  2510  00D2C8  EC85  F064         	call	_frexp	;wreg free
  2511  00D2CC  C033  F04B         	movff	?_frexp,___flmul@b
  2512  00D2D0  C034  F04C         	movff	?_frexp+1,___flmul@b+1
  2513  00D2D4  C035  F04D         	movff	?_frexp+2,___flmul@b+2
  2514  00D2D8  C036  F04E         	movff	?_frexp+3,___flmul@b+3
  2515  00D2DC  ECAA  F070         	call	___flmul	;wreg free
  2516  00D2E0  C04B  F03B         	movff	?___flmul,___fladd@b
  2517  00D2E4  C04C  F03C         	movff	?___flmul+1,___fladd@b+1
  2518  00D2E8  C04D  F03D         	movff	?___flmul+2,___fladd@b+2
  2519  00D2EC  C04E  F03E         	movff	?___flmul+3,___fladd@b+3
  2520  00D2F0  0E00               	movlw	0
  2521  00D2F2  6E3F               	movwf	___fladd@a^0,c
  2522  00D2F4  0E00               	movlw	0
  2523  00D2F6  6E40               	movwf	(___fladd@a+1)^0,c
  2524  00D2F8  0E80               	movlw	128
  2525  00D2FA  6E41               	movwf	(___fladd@a+2)^0,c
  2526  00D2FC  0EBF               	movlw	191
  2527  00D2FE  6E42               	movwf	(___fladd@a+3)^0,c
  2528  00D300  EC2C  F075         	call	___fladd	;wreg free
  2529  00D304  C03B  F075         	movff	?___fladd,log@x
  2530  00D308  C03C  F076         	movff	?___fladd+1,log@x+1
  2531  00D30C  C03D  F077         	movff	?___fladd+2,log@x+2
  2532  00D310  C03E  F078         	movff	?___fladd+3,log@x+3
  2533  00D314  0100               	movlb	0	; () banked
  2534  00D316  0779               	decf	log@exponent& (0+255),f,b
  2535  00D318  A0D8               	btfss	status,0,c
  2536  00D31A  077A               	decf	(log@exponent+1)& (0+255),f,b
  2537  00D31C                     
  2538                           ; BSR set to: 0
  2539  00D31C  C075  F057         	movff	log@x,eval_poly@x
  2540  00D320  C076  F058         	movff	log@x+1,eval_poly@x+1
  2541  00D324  C077  F059         	movff	log@x+2,eval_poly@x+2
  2542  00D328  C078  F05A         	movff	log@x+3,eval_poly@x+3
  2543  00D32C  0E4D               	movlw	low log@coeff
  2544  00D32E  6E5B               	movwf	eval_poly@d^0,c
  2545  00D330  0EFF               	movlw	high log@coeff
  2546  00D332  6E5C               	movwf	(eval_poly@d+1)^0,c
  2547  00D334  0E00               	movlw	0
  2548  00D336  6E5E               	movwf	(eval_poly@n+1)^0,c
  2549  00D338  0E08               	movlw	8
  2550  00D33A  6E5D               	movwf	eval_poly@n^0,c
  2551  00D33C  ECF6  F065         	call	_eval_poly	;wreg free
  2552  00D340  C057  F075         	movff	?_eval_poly,log@x
  2553  00D344  C058  F076         	movff	?_eval_poly+1,log@x+1
  2554  00D348  C059  F077         	movff	?_eval_poly+2,log@x+2
  2555  00D34C  C05A  F078         	movff	?_eval_poly+3,log@x+3
  2556  00D350  0E18               	movlw	24
  2557  00D352  6E4F               	movwf	___flmul@a^0,c
  2558  00D354  0E72               	movlw	114
  2559  00D356  6E50               	movwf	(___flmul@a+1)^0,c
  2560  00D358  0E31               	movlw	49
  2561  00D35A  6E51               	movwf	(___flmul@a+2)^0,c
  2562  00D35C  0E3F               	movlw	63
  2563  00D35E  6E52               	movwf	(___flmul@a+3)^0,c
  2564  00D360  C079  F019         	movff	log@exponent,___xxtofl@val
  2565  00D364  C07A  F01A         	movff	log@exponent+1,___xxtofl@val+1
  2566  00D368  0E00               	movlw	0
  2567  00D36A  BE1A               	btfsc	(___xxtofl@val+1)^0,7,c
  2568  00D36C  0EFF               	movlw	-1
  2569  00D36E  6E1B               	movwf	(___xxtofl@val+2)^0,c
  2570  00D370  6E1C               	movwf	(___xxtofl@val+3)^0,c
  2571  00D372  0E01               	movlw	1
  2572  00D374  ECE1  F069         	call	___xxtofl
  2573  00D378  C019  F04B         	movff	?___xxtofl,___flmul@b
  2574  00D37C  C01A  F04C         	movff	?___xxtofl+1,___flmul@b+1
  2575  00D380  C01B  F04D         	movff	?___xxtofl+2,___flmul@b+2
  2576  00D384  C01C  F04E         	movff	?___xxtofl+3,___flmul@b+3
  2577  00D388  ECAA  F070         	call	___flmul	;wreg free
  2578  00D38C  C04B  F03B         	movff	?___flmul,___fladd@b
  2579  00D390  C04C  F03C         	movff	?___flmul+1,___fladd@b+1
  2580  00D394  C04D  F03D         	movff	?___flmul+2,___fladd@b+2
  2581  00D398  C04E  F03E         	movff	?___flmul+3,___fladd@b+3
  2582  00D39C  C075  F03F         	movff	log@x,___fladd@a
  2583  00D3A0  C076  F040         	movff	log@x+1,___fladd@a+1
  2584  00D3A4  C077  F041         	movff	log@x+2,___fladd@a+2
  2585  00D3A8  C078  F042         	movff	log@x+3,___fladd@a+3
  2586  00D3AC  EC2C  F075         	call	___fladd	;wreg free
  2587  00D3B0  C03B  F075         	movff	?___fladd,?_log
  2588  00D3B4  C03C  F076         	movff	?___fladd+1,?_log+1
  2589  00D3B8  C03D  F077         	movff	?___fladd+2,?_log+2
  2590  00D3BC  C03E  F078         	movff	?___fladd+3,?_log+3
  2591  00D3C0                     l1483:
  2592  00D3C0  0012               	return		;funcret
  2593  00D3C2                     __end_of_log:
  2594                           	callstack 0
  2595                           
  2596 ;; *************** function _exp *****************
  2597 ;; Defined at:
  2598 ;;		line 12 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\exp.c"
  2599 ;; Parameters:    Size  Location     Type
  2600 ;;  x               4   38[BANK0 ] int 
  2601 ;; Auto vars:     Size  Location     Type
  2602 ;;  exponent        2   46[BANK0 ] int 
  2603 ;;  sign            1   48[BANK0 ] unsigned char 
  2604 ;; Return value:  Size  Location     Type
  2605 ;;                  4   38[BANK0 ] unsigned char 
  2606 ;; Registers used:
  2607 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2608 ;; Tracked objects:
  2609 ;;		On entry : 0/0
  2610 ;;		On exit  : 0/0
  2611 ;;		Unchanged: 0/0
  2612 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2613 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2614 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2615 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2616 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2617 ;;Total ram usage:       11 bytes
  2618 ;; Hardware stack levels used:    1
  2619 ;; Hardware stack levels required when called:    3
  2620 ;; This function calls:
  2621 ;;		___fldiv
  2622 ;;		___fleq
  2623 ;;		___flge
  2624 ;;		___flmul
  2625 ;;		___flneg
  2626 ;;		___flsub
  2627 ;;		___fltol
  2628 ;;		___xxtofl
  2629 ;;		_eval_poly
  2630 ;;		_floor
  2631 ;;		_ldexp
  2632 ;; This function is called by:
  2633 ;;		_pow
  2634 ;; This function uses a non-reentrant model
  2635 ;;
  2636                           
  2637                           	psect	text3
  2638  00D7D6                     __ptext3:
  2639                           	callstack 0
  2640  00D7D6                     _exp:
  2641                           	callstack 26
  2642  00D7D6  C086  F027         	movff	exp@x,___fleq@ff1
  2643  00D7DA  C087  F028         	movff	exp@x+1,___fleq@ff1+1
  2644  00D7DE  C088  F029         	movff	exp@x+2,___fleq@ff1+2
  2645  00D7E2  C089  F02A         	movff	exp@x+3,___fleq@ff1+3
  2646  00D7E6  0E00               	movlw	0
  2647  00D7E8  6E2B               	movwf	___fleq@ff2^0,c
  2648  00D7EA  0E00               	movlw	0
  2649  00D7EC  6E2C               	movwf	(___fleq@ff2+1)^0,c
  2650  00D7EE  0E00               	movlw	0
  2651  00D7F0  6E2D               	movwf	(___fleq@ff2+2)^0,c
  2652  00D7F2  0E00               	movlw	0
  2653  00D7F4  6E2E               	movwf	(___fleq@ff2+3)^0,c
  2654  00D7F6  EC76  F063         	call	___fleq	;wreg free
  2655  00D7FA  A0D8               	btfss	status,0,c
  2656  00D7FC  EF02  F06C         	goto	u4551
  2657  00D800  EF04  F06C         	goto	u4550
  2658  00D804                     u4551:
  2659  00D804  EF0F  F06C         	goto	l4811
  2660  00D808                     u4550:
  2661  00D808  0E00               	movlw	0
  2662  00D80A  0100               	movlb	0	; () banked
  2663  00D80C  6F86               	movwf	?_exp& (0+255),b
  2664  00D80E  0E00               	movlw	0
  2665  00D810  6F87               	movwf	(?_exp+1)& (0+255),b
  2666  00D812  0E80               	movlw	128
  2667  00D814  6F88               	movwf	(?_exp+2)& (0+255),b
  2668  00D816  0E3F               	movlw	63
  2669  00D818  6F89               	movwf	(?_exp+3)& (0+255),b
  2670  00D81A  EF5E  F06D         	goto	l1435
  2671  00D81E                     l4811:
  2672  00D81E  0E18               	movlw	24
  2673  00D820  6E01               	movwf	___flge@ff1^0,c
  2674  00D822  0E72               	movlw	114
  2675  00D824  6E02               	movwf	(___flge@ff1+1)^0,c
  2676  00D826  0E31               	movlw	49
  2677  00D828  6E03               	movwf	(___flge@ff1+2)^0,c
  2678  00D82A  0E44               	movlw	68
  2679  00D82C  6E04               	movwf	(___flge@ff1+3)^0,c
  2680  00D82E  C086  F005         	movff	exp@x,___flge@ff2
  2681  00D832  C087  F006         	movff	exp@x+1,___flge@ff2+1
  2682  00D836  C088  F007         	movff	exp@x+2,___flge@ff2+2
  2683  00D83A  C089  F008         	movff	exp@x+3,___flge@ff2+3
  2684  00D83E  ECF1  F064         	call	___flge	;wreg free
  2685  00D842  B0D8               	btfsc	status,0,c
  2686  00D844  EF26  F06C         	goto	u4561
  2687  00D848  EF28  F06C         	goto	u4560
  2688  00D84C                     u4561:
  2689  00D84C  EF37  F06C         	goto	l4817
  2690  00D850                     u4560:
  2691  00D850  0E00               	movlw	0
  2692  00D852  0100               	movlb	0	; () banked
  2693  00D854  6FC7               	movwf	(_errno+1)& (0+255),b
  2694  00D856  0E22               	movlw	34
  2695  00D858  6FC6               	movwf	_errno& (0+255),b
  2696  00D85A  0EFF               	movlw	255
  2697  00D85C  6F86               	movwf	?_exp& (0+255),b
  2698  00D85E  0EFF               	movlw	255
  2699  00D860  6F87               	movwf	(?_exp+1)& (0+255),b
  2700  00D862  0E7F               	movlw	127
  2701  00D864  6F88               	movwf	(?_exp+2)& (0+255),b
  2702  00D866  0E7F               	movlw	127
  2703  00D868  6F89               	movwf	(?_exp+3)& (0+255),b
  2704  00D86A  EF5E  F06D         	goto	l1435
  2705  00D86E                     l4817:
  2706  00D86E  C086  F001         	movff	exp@x,___flge@ff1
  2707  00D872  C087  F002         	movff	exp@x+1,___flge@ff1+1
  2708  00D876  C088  F003         	movff	exp@x+2,___flge@ff1+2
  2709  00D87A  C089  F004         	movff	exp@x+3,___flge@ff1+3
  2710  00D87E  0E87               	movlw	135
  2711  00D880  6E05               	movwf	___flge@ff2^0,c
  2712  00D882  0E48               	movlw	72
  2713  00D884  6E06               	movwf	(___flge@ff2+1)^0,c
  2714  00D886  0E3A               	movlw	58
  2715  00D888  6E07               	movwf	(___flge@ff2+2)^0,c
  2716  00D88A  0EC4               	movlw	196
  2717  00D88C  6E08               	movwf	(___flge@ff2+3)^0,c
  2718  00D88E  ECF1  F064         	call	___flge	;wreg free
  2719  00D892  B0D8               	btfsc	status,0,c
  2720  00D894  EF4E  F06C         	goto	u4571
  2721  00D898  EF50  F06C         	goto	u4570
  2722  00D89C                     u4571:
  2723  00D89C  EF5F  F06C         	goto	l4823
  2724  00D8A0                     u4570:
  2725  00D8A0  0E00               	movlw	0
  2726  00D8A2  0100               	movlb	0	; () banked
  2727  00D8A4  6FC7               	movwf	(_errno+1)& (0+255),b
  2728  00D8A6  0E22               	movlw	34
  2729  00D8A8  6FC6               	movwf	_errno& (0+255),b
  2730  00D8AA  0E00               	movlw	0
  2731  00D8AC  6F86               	movwf	?_exp& (0+255),b
  2732  00D8AE  0E00               	movlw	0
  2733  00D8B0  6F87               	movwf	(?_exp+1)& (0+255),b
  2734  00D8B2  0E00               	movlw	0
  2735  00D8B4  6F88               	movwf	(?_exp+2)& (0+255),b
  2736  00D8B6  0E00               	movlw	0
  2737  00D8B8  6F89               	movwf	(?_exp+3)& (0+255),b
  2738  00D8BA  EF5E  F06D         	goto	l1435
  2739  00D8BE                     l4823:
  2740  00D8BE  0100               	movlb	0	; () banked
  2741  00D8C0  BF89               	btfsc	(exp@x+3)& (0+255),7,b
  2742  00D8C2  EF65  F06C         	goto	u4581
  2743  00D8C6  EF68  F06C         	goto	u4580
  2744  00D8CA                     u4581:
  2745  00D8CA  0E01               	movlw	1
  2746  00D8CC  EF69  F06C         	goto	u4590
  2747  00D8D0                     u4580:
  2748  00D8D0  0E00               	movlw	0
  2749  00D8D2                     u4590:
  2750  00D8D2  6F90               	movwf	exp@sign& (0+255),b
  2751  00D8D4                     
  2752                           ; BSR set to: 0
  2753  00D8D4  5190               	movf	exp@sign& (0+255),w,b
  2754  00D8D6  B4D8               	btfsc	status,2,c
  2755  00D8D8  EF70  F06C         	goto	u4601
  2756  00D8DC  EF72  F06C         	goto	u4600
  2757  00D8E0                     u4601:
  2758  00D8E0  EF84  F06C         	goto	l4829
  2759  00D8E4                     u4600:
  2760  00D8E4                     
  2761                           ; BSR set to: 0
  2762  00D8E4  C086  F001         	movff	exp@x,___flneg@f1
  2763  00D8E8  C087  F002         	movff	exp@x+1,___flneg@f1+1
  2764  00D8EC  C088  F003         	movff	exp@x+2,___flneg@f1+2
  2765  00D8F0  C089  F004         	movff	exp@x+3,___flneg@f1+3
  2766  00D8F4  ECEA  F060         	call	___flneg	;wreg free
  2767  00D8F8  C001  F086         	movff	?___flneg,exp@x
  2768  00D8FC  C002  F087         	movff	?___flneg+1,exp@x+1
  2769  00D900  C003  F088         	movff	?___flneg+2,exp@x+2
  2770  00D904  C004  F089         	movff	?___flneg+3,exp@x+3
  2771  00D908                     l4829:
  2772  00D908  C086  F04B         	movff	exp@x,___flmul@b
  2773  00D90C  C087  F04C         	movff	exp@x+1,___flmul@b+1
  2774  00D910  C088  F04D         	movff	exp@x+2,___flmul@b+2
  2775  00D914  C089  F04E         	movff	exp@x+3,___flmul@b+3
  2776  00D918  0E3B               	movlw	59
  2777  00D91A  6E4F               	movwf	___flmul@a^0,c
  2778  00D91C  0EAA               	movlw	170
  2779  00D91E  6E50               	movwf	(___flmul@a+1)^0,c
  2780  00D920  0EB8               	movlw	184
  2781  00D922  6E51               	movwf	(___flmul@a+2)^0,c
  2782  00D924  0E3F               	movlw	63
  2783  00D926  6E52               	movwf	(___flmul@a+3)^0,c
  2784  00D928  ECAA  F070         	call	___flmul	;wreg free
  2785  00D92C  C04B  F086         	movff	?___flmul,exp@x
  2786  00D930  C04C  F087         	movff	?___flmul+1,exp@x+1
  2787  00D934  C04D  F088         	movff	?___flmul+2,exp@x+2
  2788  00D938  C04E  F089         	movff	?___flmul+3,exp@x+3
  2789  00D93C  C086  F04B         	movff	exp@x,floor@x
  2790  00D940  C087  F04C         	movff	exp@x+1,floor@x+1
  2791  00D944  C088  F04D         	movff	exp@x+2,floor@x+2
  2792  00D948  C089  F04E         	movff	exp@x+3,floor@x+3
  2793  00D94C  EC21  F067         	call	_floor	;wreg free
  2794  00D950  C04B  F08A         	movff	?_floor,_exp$2202
  2795  00D954  C04C  F08B         	movff	?_floor+1,_exp$2202+1
  2796  00D958  C04D  F08C         	movff	?_floor+2,_exp$2202+2
  2797  00D95C  C04E  F08D         	movff	?_floor+3,_exp$2202+3
  2798  00D960  C08A  F00F         	movff	_exp$2202,___fltol@f1
  2799  00D964  C08B  F010         	movff	_exp$2202+1,___fltol@f1+1
  2800  00D968  C08C  F011         	movff	_exp$2202+2,___fltol@f1+2
  2801  00D96C  C08D  F012         	movff	_exp$2202+3,___fltol@f1+3
  2802  00D970  EC73  F065         	call	___fltol	;wreg free
  2803  00D974  C00F  F08E         	movff	?___fltol,exp@exponent
  2804  00D978  C010  F08F         	movff	?___fltol+1,exp@exponent+1
  2805  00D97C  C086  F057         	movff	exp@x,___flsub@b
  2806  00D980  C087  F058         	movff	exp@x+1,___flsub@b+1
  2807  00D984  C088  F059         	movff	exp@x+2,___flsub@b+2
  2808  00D988  C089  F05A         	movff	exp@x+3,___flsub@b+3
  2809  00D98C  C08E  F019         	movff	exp@exponent,___xxtofl@val
  2810  00D990  C08F  F01A         	movff	exp@exponent+1,___xxtofl@val+1
  2811  00D994  0E00               	movlw	0
  2812  00D996  BE1A               	btfsc	(___xxtofl@val+1)^0,7,c
  2813  00D998  0EFF               	movlw	-1
  2814  00D99A  6E1B               	movwf	(___xxtofl@val+2)^0,c
  2815  00D99C  6E1C               	movwf	(___xxtofl@val+3)^0,c
  2816  00D99E  0E01               	movlw	1
  2817  00D9A0  ECE1  F069         	call	___xxtofl
  2818  00D9A4  C019  F05B         	movff	?___xxtofl,___flsub@a
  2819  00D9A8  C01A  F05C         	movff	?___xxtofl+1,___flsub@a+1
  2820  00D9AC  C01B  F05D         	movff	?___xxtofl+2,___flsub@a+2
  2821  00D9B0  C01C  F05E         	movff	?___xxtofl+3,___flsub@a+3
  2822  00D9B4  EC06  F061         	call	___flsub	;wreg free
  2823  00D9B8  C057  F086         	movff	?___flsub,exp@x
  2824  00D9BC  C058  F087         	movff	?___flsub+1,exp@x+1
  2825  00D9C0  C059  F088         	movff	?___flsub+2,exp@x+2
  2826  00D9C4  C05A  F089         	movff	?___flsub+3,exp@x+3
  2827  00D9C8  C086  F057         	movff	exp@x,eval_poly@x
  2828  00D9CC  C087  F058         	movff	exp@x+1,eval_poly@x+1
  2829  00D9D0  C088  F059         	movff	exp@x+2,eval_poly@x+2
  2830  00D9D4  C089  F05A         	movff	exp@x+3,eval_poly@x+3
  2831  00D9D8  0EFD               	movlw	low exp@coeff
  2832  00D9DA  6E5B               	movwf	eval_poly@d^0,c
  2833  00D9DC  0EFE               	movlw	high exp@coeff
  2834  00D9DE  6E5C               	movwf	(eval_poly@d+1)^0,c
  2835  00D9E0  0E00               	movlw	0
  2836  00D9E2  6E5E               	movwf	(eval_poly@n+1)^0,c
  2837  00D9E4  0E09               	movlw	9
  2838  00D9E6  6E5D               	movwf	eval_poly@n^0,c
  2839  00D9E8  ECF6  F065         	call	_eval_poly	;wreg free
  2840  00D9EC  C057  F075         	movff	?_eval_poly,ldexp@value
  2841  00D9F0  C058  F076         	movff	?_eval_poly+1,ldexp@value+1
  2842  00D9F4  C059  F077         	movff	?_eval_poly+2,ldexp@value+2
  2843  00D9F8  C05A  F078         	movff	?_eval_poly+3,ldexp@value+3
  2844  00D9FC  C08E  F079         	movff	exp@exponent,ldexp@newexp
  2845  00DA00  C08F  F07A         	movff	exp@exponent+1,ldexp@newexp+1
  2846  00DA04  EC85  F066         	call	_ldexp	;wreg free
  2847  00DA08  C075  F086         	movff	?_ldexp,exp@x
  2848  00DA0C  C076  F087         	movff	?_ldexp+1,exp@x+1
  2849  00DA10  C077  F088         	movff	?_ldexp+2,exp@x+2
  2850  00DA14  C078  F089         	movff	?_ldexp+3,exp@x+3
  2851  00DA18  0100               	movlb	0	; () banked
  2852  00DA1A  5190               	movf	exp@sign& (0+255),w,b
  2853  00DA1C  B4D8               	btfsc	status,2,c
  2854  00DA1E  EF13  F06D         	goto	u4611
  2855  00DA22  EF15  F06D         	goto	u4610
  2856  00DA26                     u4611:
  2857  00DA26  EF56  F06D         	goto	l1439
  2858  00DA2A                     u4610:
  2859  00DA2A                     
  2860                           ; BSR set to: 0
  2861  00DA2A  C086  F027         	movff	exp@x,___fleq@ff1
  2862  00DA2E  C087  F028         	movff	exp@x+1,___fleq@ff1+1
  2863  00DA32  C088  F029         	movff	exp@x+2,___fleq@ff1+2
  2864  00DA36  C089  F02A         	movff	exp@x+3,___fleq@ff1+3
  2865  00DA3A  0EFF               	movlw	255
  2866  00DA3C  6E2B               	movwf	___fleq@ff2^0,c
  2867  00DA3E  0EFF               	movlw	255
  2868  00DA40  6E2C               	movwf	(___fleq@ff2+1)^0,c
  2869  00DA42  0E7F               	movlw	127
  2870  00DA44  6E2D               	movwf	(___fleq@ff2+2)^0,c
  2871  00DA46  0E7F               	movlw	127
  2872  00DA48  6E2E               	movwf	(___fleq@ff2+3)^0,c
  2873  00DA4A  EC76  F063         	call	___fleq	;wreg free
  2874  00DA4E  A0D8               	btfss	status,0,c
  2875  00DA50  EF2C  F06D         	goto	u4621
  2876  00DA54  EF2E  F06D         	goto	u4620
  2877  00DA58                     u4621:
  2878  00DA58  EF39  F06D         	goto	l4847
  2879  00DA5C                     u4620:
  2880  00DA5C  0E00               	movlw	0
  2881  00DA5E  0100               	movlb	0	; () banked
  2882  00DA60  6F86               	movwf	?_exp& (0+255),b
  2883  00DA62  0E00               	movlw	0
  2884  00DA64  6F87               	movwf	(?_exp+1)& (0+255),b
  2885  00DA66  0E00               	movlw	0
  2886  00DA68  6F88               	movwf	(?_exp+2)& (0+255),b
  2887  00DA6A  0E00               	movlw	0
  2888  00DA6C  6F89               	movwf	(?_exp+3)& (0+255),b
  2889  00DA6E  EF5E  F06D         	goto	l1435
  2890  00DA72                     l4847:
  2891  00DA72  0E00               	movlw	0
  2892  00DA74  0100               	movlb	0	; () banked
  2893  00DA76  6F6D               	movwf	___fldiv@b& (0+255),b
  2894  00DA78  0E00               	movlw	0
  2895  00DA7A  6F6E               	movwf	(___fldiv@b+1)& (0+255),b
  2896  00DA7C  0E80               	movlw	128
  2897  00DA7E  6F6F               	movwf	(___fldiv@b+2)& (0+255),b
  2898  00DA80  0E3F               	movlw	63
  2899  00DA82  6F70               	movwf	(___fldiv@b+3)& (0+255),b
  2900  00DA84  C086  F071         	movff	exp@x,___fldiv@a
  2901  00DA88  C087  F072         	movff	exp@x+1,___fldiv@a+1
  2902  00DA8C  C088  F073         	movff	exp@x+2,___fldiv@a+2
  2903  00DA90  C089  F074         	movff	exp@x+3,___fldiv@a+3
  2904  00DA94  ECDC  F06E         	call	___fldiv	;wreg free
  2905  00DA98  C06D  F086         	movff	?___fldiv,?_exp
  2906  00DA9C  C06E  F087         	movff	?___fldiv+1,?_exp+1
  2907  00DAA0  C06F  F088         	movff	?___fldiv+2,?_exp+2
  2908  00DAA4  C070  F089         	movff	?___fldiv+3,?_exp+3
  2909  00DAA8  EF5E  F06D         	goto	l1435
  2910  00DAAC                     l1439:
  2911                           
  2912                           ; BSR set to: 0
  2913  00DAAC  C086  F086         	movff	exp@x,?_exp
  2914  00DAB0  C087  F087         	movff	exp@x+1,?_exp+1
  2915  00DAB4  C088  F088         	movff	exp@x+2,?_exp+2
  2916  00DAB8  C089  F089         	movff	exp@x+3,?_exp+3
  2917  00DABC                     l1435:
  2918  00DABC  0012               	return		;funcret
  2919  00DABE                     __end_of_exp:
  2920                           	callstack 0
  2921                           
  2922 ;; *************** function _ldexp *****************
  2923 ;; Defined at:
  2924 ;;		line 277 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\frexp.c"
  2925 ;; Parameters:    Size  Location     Type
  2926 ;;  value           4   21[BANK0 ] unsigned char 
  2927 ;;  newexp          2   25[BANK0 ] int 
  2928 ;; Auto vars:     Size  Location     Type
  2929 ;;		None
  2930 ;; Return value:  Size  Location     Type
  2931 ;;                  4   21[BANK0 ] int 
  2932 ;; Registers used:
  2933 ;;		wreg, status,2, status,0, cstack
  2934 ;; Tracked objects:
  2935 ;;		On entry : 0/0
  2936 ;;		On exit  : 0/0
  2937 ;;		Unchanged: 0/0
  2938 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2939 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2940 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2941 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2942 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2943 ;;Total ram usage:        8 bytes
  2944 ;; Hardware stack levels used:    1
  2945 ;; Hardware stack levels required when called:    1
  2946 ;; This function calls:
  2947 ;;		___fleq
  2948 ;; This function is called by:
  2949 ;;		_exp
  2950 ;; This function uses a non-reentrant model
  2951 ;;
  2952                           
  2953                           	psect	text4
  2954  00CD0A                     __ptext4:
  2955                           	callstack 0
  2956  00CD0A                     _ldexp:
  2957                           	callstack 27
  2958  00CD0A  C075  F027         	movff	ldexp@value,___fleq@ff1
  2959  00CD0E  C076  F028         	movff	ldexp@value+1,___fleq@ff1+1
  2960  00CD12  C077  F029         	movff	ldexp@value+2,___fleq@ff1+2
  2961  00CD16  C078  F02A         	movff	ldexp@value+3,___fleq@ff1+3
  2962  00CD1A  0E00               	movlw	0
  2963  00CD1C  6E2B               	movwf	___fleq@ff2^0,c
  2964  00CD1E  0E00               	movlw	0
  2965  00CD20  6E2C               	movwf	(___fleq@ff2+1)^0,c
  2966  00CD22  0E00               	movlw	0
  2967  00CD24  6E2D               	movwf	(___fleq@ff2+2)^0,c
  2968  00CD26  0E00               	movlw	0
  2969  00CD28  6E2E               	movwf	(___fleq@ff2+3)^0,c
  2970  00CD2A  EC76  F063         	call	___fleq	;wreg free
  2971  00CD2E  A0D8               	btfss	status,0,c
  2972  00CD30  EF9C  F066         	goto	u4171
  2973  00CD34  EF9E  F066         	goto	u4170
  2974  00CD38                     u4171:
  2975  00CD38  EFA9  F066         	goto	l4485
  2976  00CD3C                     u4170:
  2977  00CD3C  0E00               	movlw	0
  2978  00CD3E  0100               	movlb	0	; () banked
  2979  00CD40  6F75               	movwf	?_ldexp& (0+255),b
  2980  00CD42  0E00               	movlw	0
  2981  00CD44  6F76               	movwf	(?_ldexp+1)& (0+255),b
  2982  00CD46  0E00               	movlw	0
  2983  00CD48  6F77               	movwf	(?_ldexp+2)& (0+255),b
  2984  00CD4A  0E00               	movlw	0
  2985  00CD4C  6F78               	movwf	(?_ldexp+3)& (0+255),b
  2986  00CD4E  EF20  F067         	goto	l1465
  2987  00CD52                     l4485:
  2988  00CD52  0100               	movlb	0	; () banked
  2989  00CD54  5178               	movf	(ldexp@value+3)& (0+255),w,b
  2990  00CD56  0B7F               	andlw	127
  2991  00CD58  6F7B               	movwf	??_ldexp& (0+255),b
  2992  00CD5A  6B7C               	clrf	(??_ldexp+1)& (0+255),b
  2993  00CD5C  90D8               	bcf	status,0,c
  2994  00CD5E  377B               	rlcf	??_ldexp& (0+255),f,b
  2995  00CD60  377C               	rlcf	(??_ldexp+1)& (0+255),f,b
  2996  00CD62  517B               	movf	??_ldexp& (0+255),w,b
  2997  00CD64  2779               	addwf	ldexp@newexp& (0+255),f,b
  2998  00CD66  517C               	movf	(??_ldexp+1)& (0+255),w,b
  2999  00CD68  237A               	addwfc	(ldexp@newexp+1)& (0+255),f,b
  3000  00CD6A  BF77               	btfsc	(ldexp@value+2)& (0+255),7,b
  3001  00CD6C  EFBA  F066         	goto	u4181
  3002  00CD70  EFBE  F066         	goto	u4180
  3003  00CD74                     u4181:
  3004  00CD74  6B7B               	clrf	??_ldexp& (0+255),b
  3005  00CD76  2B7B               	incf	??_ldexp& (0+255),f,b
  3006  00CD78  EFC0  F066         	goto	u4188
  3007  00CD7C                     u4180:
  3008  00CD7C  0100               	movlb	0	; () banked
  3009  00CD7E  6B7B               	clrf	??_ldexp& (0+255),b
  3010  00CD80                     u4188:
  3011  00CD80  517B               	movf	??_ldexp& (0+255),w,b
  3012  00CD82  2779               	addwf	ldexp@newexp& (0+255),f,b
  3013  00CD84  0E00               	movlw	0
  3014  00CD86  237A               	addwfc	(ldexp@newexp+1)& (0+255),f,b
  3015  00CD88  BF7A               	btfsc	(ldexp@newexp+1)& (0+255),7,b
  3016  00CD8A  EFCB  F066         	goto	u4190
  3017  00CD8E  EFC9  F066         	goto	u4191
  3018  00CD92                     u4191:
  3019  00CD92  EFD9  F066         	goto	l4493
  3020  00CD96                     u4190:
  3021  00CD96                     
  3022                           ; BSR set to: 0
  3023  00CD96  0E00               	movlw	0
  3024  00CD98  6FC7               	movwf	(_errno+1)& (0+255),b
  3025  00CD9A  0E22               	movlw	34
  3026  00CD9C  6FC6               	movwf	_errno& (0+255),b
  3027  00CD9E  0E00               	movlw	0
  3028  00CDA0  6F75               	movwf	?_ldexp& (0+255),b
  3029  00CDA2  0E00               	movlw	0
  3030  00CDA4  6F76               	movwf	(?_ldexp+1)& (0+255),b
  3031  00CDA6  0E00               	movlw	0
  3032  00CDA8  6F77               	movwf	(?_ldexp+2)& (0+255),b
  3033  00CDAA  0E00               	movlw	0
  3034  00CDAC  6F78               	movwf	(?_ldexp+3)& (0+255),b
  3035  00CDAE  EF20  F067         	goto	l1465
  3036  00CDB2                     l4493:
  3037                           
  3038                           ; BSR set to: 0
  3039  00CDB2  BF7A               	btfsc	(ldexp@newexp+1)& (0+255),7,b
  3040  00CDB4  EFE2  F066         	goto	u4201
  3041  00CDB8  057A               	decf	(ldexp@newexp+1)& (0+255),w,b
  3042  00CDBA  A0D8               	btfss	status,0,c
  3043  00CDBC  EFE2  F066         	goto	u4201
  3044  00CDC0  EFE4  F066         	goto	u4200
  3045  00CDC4                     u4201:
  3046  00CDC4  EF03  F067         	goto	l4509
  3047  00CDC8                     u4200:
  3048  00CDC8                     
  3049                           ; BSR set to: 0
  3050  00CDC8  0E00               	movlw	0
  3051  00CDCA  6FC7               	movwf	(_errno+1)& (0+255),b
  3052  00CDCC  0E22               	movlw	34
  3053  00CDCE  6FC6               	movwf	_errno& (0+255),b
  3054  00CDD0                     
  3055                           ; BSR set to: 0
  3056  00CDD0  BF78               	btfsc	(ldexp@value+3)& (0+255),7,b
  3057  00CDD2  EFEF  F066         	goto	u4210
  3058  00CDD6  EFED  F066         	goto	u4211
  3059  00CDDA                     u4211:
  3060  00CDDA  EFF9  F066         	goto	l4505
  3061  00CDDE                     u4210:
  3062  00CDDE                     
  3063                           ; BSR set to: 0
  3064  00CDDE  0EFF               	movlw	255
  3065  00CDE0  6F75               	movwf	?_ldexp& (0+255),b
  3066  00CDE2  0EFF               	movlw	255
  3067  00CDE4  6F76               	movwf	(?_ldexp+1)& (0+255),b
  3068  00CDE6  0E7F               	movlw	127
  3069  00CDE8  6F77               	movwf	(?_ldexp+2)& (0+255),b
  3070  00CDEA  0EFF               	movlw	255
  3071  00CDEC  6F78               	movwf	(?_ldexp+3)& (0+255),b
  3072  00CDEE  EF20  F067         	goto	l1465
  3073  00CDF2                     l4505:
  3074                           
  3075                           ; BSR set to: 0
  3076  00CDF2  0EFF               	movlw	255
  3077  00CDF4  6F75               	movwf	?_ldexp& (0+255),b
  3078  00CDF6  0EFF               	movlw	255
  3079  00CDF8  6F76               	movwf	(?_ldexp+1)& (0+255),b
  3080  00CDFA  0E7F               	movlw	127
  3081  00CDFC  6F77               	movwf	(?_ldexp+2)& (0+255),b
  3082  00CDFE  0E7F               	movlw	127
  3083  00CE00  6F78               	movwf	(?_ldexp+3)& (0+255),b
  3084  00CE02  EF20  F067         	goto	l1465
  3085  00CE06                     l4509:
  3086                           
  3087                           ; BSR set to: 0
  3088  00CE06  357A               	rlcf	(ldexp@newexp+1)& (0+255),w,b
  3089  00CE08  317A               	rrcf	(ldexp@newexp+1)& (0+255),w,b
  3090  00CE0A  6F7C               	movwf	(??_ldexp+1)& (0+255),b
  3091  00CE0C  3179               	rrcf	ldexp@newexp& (0+255),w,b
  3092  00CE0E  6F7B               	movwf	??_ldexp& (0+255),b
  3093  00CE10  5178               	movf	(ldexp@value+3)& (0+255),w,b
  3094  00CE12  197B               	xorwf	??_ldexp& (0+255),w,b
  3095  00CE14  0B80               	andlw	-128
  3096  00CE16  197B               	xorwf	??_ldexp& (0+255),w,b
  3097  00CE18  6F78               	movwf	(ldexp@value+3)& (0+255),b
  3098  00CE1A  C079  F07B         	movff	ldexp@newexp,??_ldexp
  3099  00CE1E  0E01               	movlw	1
  3100  00CE20  177B               	andwf	??_ldexp& (0+255),f,b
  3101  00CE22  337B               	rrcf	??_ldexp& (0+255),f,b
  3102  00CE24  337B               	rrcf	??_ldexp& (0+255),f,b
  3103  00CE26  5177               	movf	(ldexp@value+2)& (0+255),w,b
  3104  00CE28  197B               	xorwf	??_ldexp& (0+255),w,b
  3105  00CE2A  0B7F               	andlw	-129
  3106  00CE2C  197B               	xorwf	??_ldexp& (0+255),w,b
  3107  00CE2E  6F77               	movwf	(ldexp@value+2)& (0+255),b
  3108  00CE30                     
  3109                           ; BSR set to: 0
  3110  00CE30  C075  F075         	movff	ldexp@value,?_ldexp
  3111  00CE34  C076  F076         	movff	ldexp@value+1,?_ldexp+1
  3112  00CE38  C077  F077         	movff	ldexp@value+2,?_ldexp+2
  3113  00CE3C  C078  F078         	movff	ldexp@value+3,?_ldexp+3
  3114  00CE40                     l1465:
  3115                           
  3116                           ; BSR set to: 0
  3117  00CE40  0012               	return		;funcret
  3118  00CE42                     __end_of_ldexp:
  3119                           	callstack 0
  3120                           
  3121 ;; *************** function _floor *****************
  3122 ;; Defined at:
  3123 ;;		line 13 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\floor.c"
  3124 ;; Parameters:    Size  Location     Type
  3125 ;;  x               4   74[COMRAM] int 
  3126 ;; Auto vars:     Size  Location     Type
  3127 ;;  i               4   78[COMRAM] int 
  3128 ;;  expon           2   82[COMRAM] int 
  3129 ;; Return value:  Size  Location     Type
  3130 ;;                  4   74[COMRAM] int 
  3131 ;; Registers used:
  3132 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3133 ;; Tracked objects:
  3134 ;;		On entry : 0/0
  3135 ;;		On exit  : 0/0
  3136 ;;		Unchanged: 0/0
  3137 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3138 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3139 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3140 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3141 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3142 ;;Total ram usage:       10 bytes
  3143 ;; Hardware stack levels used:    1
  3144 ;; Hardware stack levels required when called:    2
  3145 ;; This function calls:
  3146 ;;		___fladd
  3147 ;;		___flge
  3148 ;;		___fltol
  3149 ;;		___xxtofl
  3150 ;;		_frexp
  3151 ;; This function is called by:
  3152 ;;		_exp
  3153 ;; This function uses a non-reentrant model
  3154 ;;
  3155                           
  3156                           	psect	text5
  3157  00CE42                     __ptext5:
  3158                           	callstack 0
  3159  00CE42                     _floor:
  3160                           	callstack 26
  3161  00CE42  C04B  F033         	movff	floor@x,frexp@value
  3162  00CE46  C04C  F034         	movff	floor@x+1,frexp@value+1
  3163  00CE4A  C04D  F035         	movff	floor@x+2,frexp@value+2
  3164  00CE4E  C04E  F036         	movff	floor@x+3,frexp@value+3
  3165  00CE52  0E53               	movlw	low floor@expon
  3166  00CE54  6E37               	movwf	frexp@eptr^0,c
  3167  00CE56  0E00               	movlw	high floor@expon
  3168  00CE58  6E38               	movwf	(frexp@eptr+1)^0,c
  3169  00CE5A  EC85  F064         	call	_frexp	;wreg free
  3170  00CE5E  BE54               	btfsc	(floor@expon+1)^0,7,c
  3171  00CE60  EF36  F067         	goto	u4120
  3172  00CE64  EF34  F067         	goto	u4121
  3173  00CE68                     u4121:
  3174  00CE68  EF51  F067         	goto	l4463
  3175  00CE6C                     u4120:
  3176  00CE6C  BE4E               	btfsc	(floor@x+3)^0,7,c
  3177  00CE6E  EF3D  F067         	goto	u4130
  3178  00CE72  EF3B  F067         	goto	u4131
  3179  00CE76                     u4131:
  3180  00CE76  EF47  F067         	goto	l4459
  3181  00CE7A                     u4130:
  3182  00CE7A  0E00               	movlw	0
  3183  00CE7C  6E4B               	movwf	?_floor^0,c
  3184  00CE7E  0E00               	movlw	0
  3185  00CE80  6E4C               	movwf	(?_floor+1)^0,c
  3186  00CE82  0E80               	movlw	128
  3187  00CE84  6E4D               	movwf	(?_floor+2)^0,c
  3188  00CE86  0EBF               	movlw	191
  3189  00CE88  6E4E               	movwf	(?_floor+3)^0,c
  3190  00CE8A  EFC0  F067         	goto	l1453
  3191  00CE8E                     l4459:
  3192  00CE8E  0E00               	movlw	0
  3193  00CE90  6E4B               	movwf	?_floor^0,c
  3194  00CE92  0E00               	movlw	0
  3195  00CE94  6E4C               	movwf	(?_floor+1)^0,c
  3196  00CE96  0E00               	movlw	0
  3197  00CE98  6E4D               	movwf	(?_floor+2)^0,c
  3198  00CE9A  0E00               	movlw	0
  3199  00CE9C  6E4E               	movwf	(?_floor+3)^0,c
  3200  00CE9E  EFC0  F067         	goto	l1453
  3201  00CEA2                     l4463:
  3202  00CEA2  5054               	movf	(floor@expon+1)^0,w,c
  3203  00CEA4  E109               	bnz	u4140
  3204  00CEA6  0E1D               	movlw	29
  3205  00CEA8  5C53               	subwf	floor@expon^0,w,c
  3206  00CEAA  A0D8               	btfss	status,0,c
  3207  00CEAC  EF5A  F067         	goto	u4141
  3208  00CEB0  EF5C  F067         	goto	u4140
  3209  00CEB4                     u4141:
  3210  00CEB4  EF66  F067         	goto	l4467
  3211  00CEB8                     u4140:
  3212  00CEB8  C04B  F04B         	movff	floor@x,?_floor
  3213  00CEBC  C04C  F04C         	movff	floor@x+1,?_floor+1
  3214  00CEC0  C04D  F04D         	movff	floor@x+2,?_floor+2
  3215  00CEC4  C04E  F04E         	movff	floor@x+3,?_floor+3
  3216  00CEC8  EFC0  F067         	goto	l1453
  3217  00CECC                     l4467:
  3218  00CECC  C04B  F00F         	movff	floor@x,___fltol@f1
  3219  00CED0  C04C  F010         	movff	floor@x+1,___fltol@f1+1
  3220  00CED4  C04D  F011         	movff	floor@x+2,___fltol@f1+2
  3221  00CED8  C04E  F012         	movff	floor@x+3,___fltol@f1+3
  3222  00CEDC  EC73  F065         	call	___fltol	;wreg free
  3223  00CEE0  C00F  F019         	movff	?___fltol,___xxtofl@val
  3224  00CEE4  C010  F01A         	movff	?___fltol+1,___xxtofl@val+1
  3225  00CEE8  C011  F01B         	movff	?___fltol+2,___xxtofl@val+2
  3226  00CEEC  C012  F01C         	movff	?___fltol+3,___xxtofl@val+3
  3227  00CEF0  0E01               	movlw	1
  3228  00CEF2  ECE1  F069         	call	___xxtofl
  3229  00CEF6  C019  F04F         	movff	?___xxtofl,floor@i
  3230  00CEFA  C01A  F050         	movff	?___xxtofl+1,floor@i+1
  3231  00CEFE  C01B  F051         	movff	?___xxtofl+2,floor@i+2
  3232  00CF02  C01C  F052         	movff	?___xxtofl+3,floor@i+3
  3233  00CF06  C04B  F001         	movff	floor@x,___flge@ff1
  3234  00CF0A  C04C  F002         	movff	floor@x+1,___flge@ff1+1
  3235  00CF0E  C04D  F003         	movff	floor@x+2,___flge@ff1+2
  3236  00CF12  C04E  F004         	movff	floor@x+3,___flge@ff1+3
  3237  00CF16  C04F  F005         	movff	floor@i,___flge@ff2
  3238  00CF1A  C050  F006         	movff	floor@i+1,___flge@ff2+1
  3239  00CF1E  C051  F007         	movff	floor@i+2,___flge@ff2+2
  3240  00CF22  C052  F008         	movff	floor@i+3,___flge@ff2+3
  3241  00CF26  ECF1  F064         	call	___flge	;wreg free
  3242  00CF2A  B0D8               	btfsc	status,0,c
  3243  00CF2C  EF9A  F067         	goto	u4151
  3244  00CF30  EF9C  F067         	goto	u4150
  3245  00CF34                     u4151:
  3246  00CF34  EFB8  F067         	goto	l1455
  3247  00CF38                     u4150:
  3248  00CF38  C04F  F03B         	movff	floor@i,___fladd@b
  3249  00CF3C  C050  F03C         	movff	floor@i+1,___fladd@b+1
  3250  00CF40  C051  F03D         	movff	floor@i+2,___fladd@b+2
  3251  00CF44  C052  F03E         	movff	floor@i+3,___fladd@b+3
  3252  00CF48  0E00               	movlw	0
  3253  00CF4A  6E3F               	movwf	___fladd@a^0,c
  3254  00CF4C  0E00               	movlw	0
  3255  00CF4E  6E40               	movwf	(___fladd@a+1)^0,c
  3256  00CF50  0E80               	movlw	128
  3257  00CF52  6E41               	movwf	(___fladd@a+2)^0,c
  3258  00CF54  0EBF               	movlw	191
  3259  00CF56  6E42               	movwf	(___fladd@a+3)^0,c
  3260  00CF58  EC2C  F075         	call	___fladd	;wreg free
  3261  00CF5C  C03B  F04B         	movff	?___fladd,?_floor
  3262  00CF60  C03C  F04C         	movff	?___fladd+1,?_floor+1
  3263  00CF64  C03D  F04D         	movff	?___fladd+2,?_floor+2
  3264  00CF68  C03E  F04E         	movff	?___fladd+3,?_floor+3
  3265  00CF6C  EFC0  F067         	goto	l1453
  3266  00CF70                     l1455:
  3267  00CF70  C04F  F04B         	movff	floor@i,?_floor
  3268  00CF74  C050  F04C         	movff	floor@i+1,?_floor+1
  3269  00CF78  C051  F04D         	movff	floor@i+2,?_floor+2
  3270  00CF7C  C052  F04E         	movff	floor@i+3,?_floor+3
  3271  00CF80                     l1453:
  3272  00CF80  0012               	return		;funcret
  3273  00CF82                     __end_of_floor:
  3274                           	callstack 0
  3275                           
  3276 ;; *************** function _frexp *****************
  3277 ;; Defined at:
  3278 ;;		line 254 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\frexp.c"
  3279 ;; Parameters:    Size  Location     Type
  3280 ;;  value           4   50[COMRAM] int 
  3281 ;;  eptr            2   54[COMRAM] PTR int 
  3282 ;;		 -> log@exponent(2), floor@expon(2), 
  3283 ;; Auto vars:     Size  Location     Type
  3284 ;;		None
  3285 ;; Return value:  Size  Location     Type
  3286 ;;                  4   50[COMRAM] PTR int 
  3287 ;; Registers used:
  3288 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3289 ;; Tracked objects:
  3290 ;;		On entry : 0/0
  3291 ;;		On exit  : 0/0
  3292 ;;		Unchanged: 0/0
  3293 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3294 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3295 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3296 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3297 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3298 ;;Total ram usage:        8 bytes
  3299 ;; Hardware stack levels used:    1
  3300 ;; Hardware stack levels required when called:    1
  3301 ;; This function calls:
  3302 ;;		___fleq
  3303 ;; This function is called by:
  3304 ;;		_floor
  3305 ;;		_log
  3306 ;; This function uses a non-reentrant model
  3307 ;;
  3308                           
  3309                           	psect	text6
  3310  00C90A                     __ptext6:
  3311                           	callstack 0
  3312  00C90A                     _frexp:
  3313                           	callstack 27
  3314  00C90A  C033  F027         	movff	frexp@value,___fleq@ff1
  3315  00C90E  C034  F028         	movff	frexp@value+1,___fleq@ff1+1
  3316  00C912  C035  F029         	movff	frexp@value+2,___fleq@ff1+2
  3317  00C916  C036  F02A         	movff	frexp@value+3,___fleq@ff1+3
  3318  00C91A  0E00               	movlw	0
  3319  00C91C  6E2B               	movwf	___fleq@ff2^0,c
  3320  00C91E  0E00               	movlw	0
  3321  00C920  6E2C               	movwf	(___fleq@ff2+1)^0,c
  3322  00C922  0E00               	movlw	0
  3323  00C924  6E2D               	movwf	(___fleq@ff2+2)^0,c
  3324  00C926  0E00               	movlw	0
  3325  00C928  6E2E               	movwf	(___fleq@ff2+3)^0,c
  3326  00C92A  EC76  F063         	call	___fleq	;wreg free
  3327  00C92E  A0D8               	btfss	status,0,c
  3328  00C930  EF9C  F064         	goto	u3571
  3329  00C934  EF9E  F064         	goto	u3570
  3330  00C938                     u3571:
  3331  00C938  EFB2  F064         	goto	l4061
  3332  00C93C                     u3570:
  3333  00C93C  0060  F0DF  FFD9   	movff	frexp@eptr,fsr2l
  3334  00C942  0060  F0E3  FFDA   	movff	frexp@eptr+1,fsr2h
  3335  00C948  0E00               	movlw	0
  3336  00C94A  6EDE               	movwf	postinc2,c
  3337  00C94C  0E00               	movlw	0
  3338  00C94E  6EDD               	movwf	postdec2,c
  3339  00C950  0E00               	movlw	0
  3340  00C952  6E33               	movwf	?_frexp^0,c
  3341  00C954  0E00               	movlw	0
  3342  00C956  6E34               	movwf	(?_frexp+1)^0,c
  3343  00C958  0E00               	movlw	0
  3344  00C95A  6E35               	movwf	(?_frexp+2)^0,c
  3345  00C95C  0E00               	movlw	0
  3346  00C95E  6E36               	movwf	(?_frexp+3)^0,c
  3347  00C960  EFF0  F064         	goto	l1461
  3348  00C964                     l4061:
  3349  00C964  5036               	movf	(frexp@value+3)^0,w,c
  3350  00C966  0B7F               	andlw	127
  3351  00C968  6E39               	movwf	??_frexp^0,c
  3352  00C96A  6A3A               	clrf	(??_frexp+1)^0,c
  3353  00C96C  90D8               	bcf	status,0,c
  3354  00C96E  3639               	rlcf	??_frexp^0,f,c
  3355  00C970  363A               	rlcf	(??_frexp+1)^0,f,c
  3356  00C972  0060  F0DF  FFD9   	movff	frexp@eptr,fsr2l
  3357  00C978  0060  F0E3  FFDA   	movff	frexp@eptr+1,fsr2h
  3358  00C97E  0060  F0E7  FFDE   	movff	??_frexp,postinc2
  3359  00C984  0060  F0EB  FFDD   	movff	??_frexp+1,postdec2
  3360  00C98A  BE35               	btfsc	(frexp@value+2)^0,7,c
  3361  00C98C  EFCA  F064         	goto	u3581
  3362  00C990  EFCE  F064         	goto	u3580
  3363  00C994                     u3581:
  3364  00C994  6A39               	clrf	??_frexp^0,c
  3365  00C996  2A39               	incf	??_frexp^0,f,c
  3366  00C998  EFCF  F064         	goto	u3588
  3367  00C99C                     u3580:
  3368  00C99C  6A39               	clrf	??_frexp^0,c
  3369  00C99E                     u3588:
  3370  00C99E  5039               	movf	??_frexp^0,w,c
  3371  00C9A0  0060  F0DF  FFD9   	movff	frexp@eptr,fsr2l
  3372  00C9A6  0060  F0E3  FFDA   	movff	frexp@eptr+1,fsr2h
  3373  00C9AC  12DE               	iorwf	postinc2,f,c
  3374  00C9AE  0E00               	movlw	0
  3375  00C9B0  12DD               	iorwf	postdec2,f,c
  3376  00C9B2  0060  F0DF  FFD9   	movff	frexp@eptr,fsr2l
  3377  00C9B8  0060  F0E3  FFDA   	movff	frexp@eptr+1,fsr2h
  3378  00C9BE  0E82               	movlw	130
  3379  00C9C0  26DE               	addwf	postinc2,f,c
  3380  00C9C2  0EFF               	movlw	255
  3381  00C9C4  22DD               	addwfc	postdec2,f,c
  3382  00C9C6  5036               	movf	(frexp@value+3)^0,w,c
  3383  00C9C8  0B80               	andlw	-128
  3384  00C9CA  093F               	iorlw	63
  3385  00C9CC  6E36               	movwf	(frexp@value+3)^0,c
  3386  00C9CE  9E35               	bcf	(frexp@value+2)^0,7,c
  3387  00C9D0  C033  F033         	movff	frexp@value,?_frexp
  3388  00C9D4  C034  F034         	movff	frexp@value+1,?_frexp+1
  3389  00C9D8  C035  F035         	movff	frexp@value+2,?_frexp+2
  3390  00C9DC  C036  F036         	movff	frexp@value+3,?_frexp+3
  3391  00C9E0                     l1461:
  3392  00C9E0  0012               	return		;funcret
  3393  00C9E2                     __end_of_frexp:
  3394                           	callstack 0
  3395                           
  3396 ;; *************** function _eval_poly *****************
  3397 ;; Defined at:
  3398 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\evalpoly.c"
  3399 ;; Parameters:    Size  Location     Type
  3400 ;;  x               4   86[COMRAM] PTR int 
  3401 ;;  d               2   90[COMRAM] PTR const 
  3402 ;;		 -> log@coeff(36), exp@coeff(40), 
  3403 ;;  n               2   92[COMRAM] int 
  3404 ;; Auto vars:     Size  Location     Type
  3405 ;;  res             4   17[BANK0 ] int 
  3406 ;; Return value:  Size  Location     Type
  3407 ;;                  4   86[COMRAM] int 
  3408 ;; Registers used:
  3409 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3410 ;; Tracked objects:
  3411 ;;		On entry : 0/0
  3412 ;;		On exit  : 0/0
  3413 ;;		Unchanged: 0/0
  3414 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3415 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3416 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3417 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3418 ;;      Totals:         8       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3419 ;;Total ram usage:       16 bytes
  3420 ;; Hardware stack levels used:    1
  3421 ;; Hardware stack levels required when called:    1
  3422 ;; This function calls:
  3423 ;;		___fladd
  3424 ;;		___flmul
  3425 ;; This function is called by:
  3426 ;;		_exp
  3427 ;;		_log
  3428 ;; This function uses a non-reentrant model
  3429 ;;
  3430                           
  3431                           	psect	text7
  3432  00CBEC                     __ptext7:
  3433                           	callstack 0
  3434  00CBEC                     _eval_poly:
  3435                           	callstack 27
  3436  00CBEC  C05D  F06D         	movff	eval_poly@n,??_eval_poly
  3437  00CBF0  C05E  F06E         	movff	eval_poly@n+1,??_eval_poly+1
  3438  00CBF4  0100               	movlb	0	; () banked
  3439  00CBF6  90D8               	bcf	status,0,c
  3440  00CBF8  376D               	rlcf	??_eval_poly& (0+255),f,b
  3441  00CBFA  376E               	rlcf	(??_eval_poly+1)& (0+255),f,b
  3442  00CBFC  90D8               	bcf	status,0,c
  3443  00CBFE  376D               	rlcf	??_eval_poly& (0+255),f,b
  3444  00CC00  376E               	rlcf	(??_eval_poly+1)& (0+255),f,b
  3445  00CC02  C05B  F06F         	movff	eval_poly@d,??_eval_poly+2
  3446  00CC06  C05C  F070         	movff	eval_poly@d+1,??_eval_poly+3
  3447  00CC0A  516D               	movf	??_eval_poly& (0+255),w,b
  3448  00CC0C  276F               	addwf	(??_eval_poly+2)& (0+255),f,b
  3449  00CC0E  516E               	movf	(??_eval_poly+1)& (0+255),w,b
  3450  00CC10  2370               	addwfc	(??_eval_poly+3)& (0+255),f,b
  3451  00CC12  0060  F1BF  FFF6   	movff	??_eval_poly+2,tblptrl
  3452  00CC18  0060  F1C3  FFF7   	movff	??_eval_poly+3,tblptrh
  3453  00CC1E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3454  00CC1E  6AF8               	clrf	tblptru,c
  3455  00CC20                     	endif
  3456  00CC20                     	if	0	;tblptru may be non-zero
  3457  00CC20                     	endif
  3458  00CC20  0009               	tblrd		*+
  3459  00CC22  006F FFD4  F071    	movff	tablat,eval_poly@res
  3460  00CC28  0009               	tblrd		*+
  3461  00CC2A  006F FFD4  F072    	movff	tablat,eval_poly@res+1
  3462  00CC30  0009               	tblrd		*+
  3463  00CC32  006F FFD4  F073    	movff	tablat,eval_poly@res+2
  3464  00CC38  000A               	tblrd		*-
  3465  00CC3A  006F FFD4  F074    	movff	tablat,eval_poly@res+3
  3466  00CC40  EF73  F066         	goto	l4477
  3467  00CC44                     l4475:
  3468  00CC44  C071  F04F         	movff	eval_poly@res,___flmul@a
  3469  00CC48  C072  F050         	movff	eval_poly@res+1,___flmul@a+1
  3470  00CC4C  C073  F051         	movff	eval_poly@res+2,___flmul@a+2
  3471  00CC50  C074  F052         	movff	eval_poly@res+3,___flmul@a+3
  3472  00CC54  C057  F04B         	movff	eval_poly@x,___flmul@b
  3473  00CC58  C058  F04C         	movff	eval_poly@x+1,___flmul@b+1
  3474  00CC5C  C059  F04D         	movff	eval_poly@x+2,___flmul@b+2
  3475  00CC60  C05A  F04E         	movff	eval_poly@x+3,___flmul@b+3
  3476  00CC64  ECAA  F070         	call	___flmul	;wreg free
  3477  00CC68  C04B  F03B         	movff	?___flmul,___fladd@b
  3478  00CC6C  C04C  F03C         	movff	?___flmul+1,___fladd@b+1
  3479  00CC70  C04D  F03D         	movff	?___flmul+2,___fladd@b+2
  3480  00CC74  C04E  F03E         	movff	?___flmul+3,___fladd@b+3
  3481  00CC78  065D               	decf	eval_poly@n^0,f,c
  3482  00CC7A  A0D8               	btfss	status,0,c
  3483  00CC7C  065E               	decf	(eval_poly@n+1)^0,f,c
  3484  00CC7E  C05D  F06D         	movff	eval_poly@n,??_eval_poly
  3485  00CC82  C05E  F06E         	movff	eval_poly@n+1,??_eval_poly+1
  3486  00CC86  0100               	movlb	0	; () banked
  3487  00CC88  90D8               	bcf	status,0,c
  3488  00CC8A  376D               	rlcf	??_eval_poly& (0+255),f,b
  3489  00CC8C  376E               	rlcf	(??_eval_poly+1)& (0+255),f,b
  3490  00CC8E  90D8               	bcf	status,0,c
  3491  00CC90  376D               	rlcf	??_eval_poly& (0+255),f,b
  3492  00CC92  376E               	rlcf	(??_eval_poly+1)& (0+255),f,b
  3493  00CC94  C05B  F06F         	movff	eval_poly@d,??_eval_poly+2
  3494  00CC98  C05C  F070         	movff	eval_poly@d+1,??_eval_poly+3
  3495  00CC9C  516D               	movf	??_eval_poly& (0+255),w,b
  3496  00CC9E  276F               	addwf	(??_eval_poly+2)& (0+255),f,b
  3497  00CCA0  516E               	movf	(??_eval_poly+1)& (0+255),w,b
  3498  00CCA2  2370               	addwfc	(??_eval_poly+3)& (0+255),f,b
  3499  00CCA4  0060  F1BF  FFF6   	movff	??_eval_poly+2,tblptrl
  3500  00CCAA  0060  F1C3  FFF7   	movff	??_eval_poly+3,tblptrh
  3501  00CCB0                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3502  00CCB0  6AF8               	clrf	tblptru,c
  3503  00CCB2                     	endif
  3504  00CCB2                     	if	0	;tblptru may be non-zero
  3505  00CCB2                     	endif
  3506  00CCB2  0009               	tblrd		*+
  3507  00CCB4  006F FFD4  F03F    	movff	tablat,___fladd@a
  3508  00CCBA  0009               	tblrd		*+
  3509  00CCBC  006F FFD4  F040    	movff	tablat,___fladd@a+1
  3510  00CCC2  0009               	tblrd		*+
  3511  00CCC4  006F FFD4  F041    	movff	tablat,___fladd@a+2
  3512  00CCCA  000A               	tblrd		*-
  3513  00CCCC  006F FFD4  F042    	movff	tablat,___fladd@a+3
  3514  00CCD2  EC2C  F075         	call	___fladd	;wreg free
  3515  00CCD6  C03B  F071         	movff	?___fladd,eval_poly@res
  3516  00CCDA  C03C  F072         	movff	?___fladd+1,eval_poly@res+1
  3517  00CCDE  C03D  F073         	movff	?___fladd+2,eval_poly@res+2
  3518  00CCE2  C03E  F074         	movff	?___fladd+3,eval_poly@res+3
  3519  00CCE6                     l4477:
  3520  00CCE6  505D               	movf	eval_poly@n^0,w,c
  3521  00CCE8  105E               	iorwf	(eval_poly@n+1)^0,w,c
  3522  00CCEA  A4D8               	btfss	status,2,c
  3523  00CCEC  EF7A  F066         	goto	u4161
  3524  00CCF0  EF7C  F066         	goto	u4160
  3525  00CCF4                     u4161:
  3526  00CCF4  EF22  F066         	goto	l4475
  3527  00CCF8                     u4160:
  3528  00CCF8  C071  F057         	movff	eval_poly@res,?_eval_poly
  3529  00CCFC  C072  F058         	movff	eval_poly@res+1,?_eval_poly+1
  3530  00CD00  C073  F059         	movff	eval_poly@res+2,?_eval_poly+2
  3531  00CD04  C074  F05A         	movff	eval_poly@res+3,?_eval_poly+3
  3532  00CD08  0012               	return		;funcret
  3533  00CD0A                     __end_of_eval_poly:
  3534                           	callstack 0
  3535                           
  3536 ;; *************** function ___fldiv *****************
  3537 ;; Defined at:
  3538 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\sprcdiv.c"
  3539 ;; Parameters:    Size  Location     Type
  3540 ;;  b               4   13[BANK0 ] int 
  3541 ;;  a               4   17[BANK0 ] int 
  3542 ;; Auto vars:     Size  Location     Type
  3543 ;;  grs             4   32[BANK0 ] unsigned long 
  3544 ;;  rem             4   25[BANK0 ] unsigned long 
  3545 ;;  new_exp         2   30[BANK0 ] int 
  3546 ;;  aexp            1   37[BANK0 ] unsigned char 
  3547 ;;  bexp            1   36[BANK0 ] unsigned char 
  3548 ;;  sign            1   29[BANK0 ] unsigned char 
  3549 ;; Return value:  Size  Location     Type
  3550 ;;                  4   13[BANK0 ] unsigned char 
  3551 ;; Registers used:
  3552 ;;		wreg, status,2, status,0
  3553 ;; Tracked objects:
  3554 ;;		On entry : 0/0
  3555 ;;		On exit  : 0/0
  3556 ;;		Unchanged: 0/0
  3557 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3558 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3559 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3560 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3561 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3562 ;;Total ram usage:       25 bytes
  3563 ;; Hardware stack levels used:    1
  3564 ;; This function calls:
  3565 ;;		Nothing
  3566 ;; This function is called by:
  3567 ;;		_main
  3568 ;;		_exp
  3569 ;; This function uses a non-reentrant model
  3570 ;;
  3571                           
  3572                           	psect	text8
  3573  00DDB8                     __ptext8:
  3574                           	callstack 0
  3575  00DDB8                     ___fldiv:
  3576                           	callstack 28
  3577  00DDB8  0100               	movlb	0	; () banked
  3578  00DDBA  5170               	movf	(___fldiv@b+3)& (0+255),w,b
  3579  00DDBC  0B80               	andlw	128
  3580  00DDBE  6F7D               	movwf	___fldiv@sign& (0+255),b
  3581  00DDC0  5170               	movf	(___fldiv@b+3)& (0+255),w,b
  3582  00DDC2  2570               	addwf	(___fldiv@b+3)& (0+255),w,b
  3583  00DDC4  6F84               	movwf	___fldiv@bexp& (0+255),b
  3584  00DDC6                     
  3585                           ; BSR set to: 0
  3586  00DDC6  AF6F               	btfss	(___fldiv@b+2)& (0+255),7,b
  3587  00DDC8  EFE8  F06E         	goto	u3851
  3588  00DDCC  EFEA  F06E         	goto	u3850
  3589  00DDD0                     u3851:
  3590  00DDD0  EFEB  F06E         	goto	l4287
  3591  00DDD4                     u3850:
  3592  00DDD4                     
  3593                           ; BSR set to: 0
  3594  00DDD4  8184               	bsf	___fldiv@bexp& (0+255),0,b
  3595  00DDD6                     l4287:
  3596                           
  3597                           ; BSR set to: 0
  3598  00DDD6  5184               	movf	___fldiv@bexp& (0+255),w,b
  3599  00DDD8  B4D8               	btfsc	status,2,c
  3600  00DDDA  EFF1  F06E         	goto	u3861
  3601  00DDDE  EFF3  F06E         	goto	u3860
  3602  00DDE2                     u3861:
  3603  00DDE2  EF08  F06F         	goto	l4297
  3604  00DDE6                     u3860:
  3605  00DDE6                     
  3606                           ; BSR set to: 0
  3607  00DDE6  2984               	incf	___fldiv@bexp& (0+255),w,b
  3608  00DDE8  A4D8               	btfss	status,2,c
  3609  00DDEA  EFF9  F06E         	goto	u3871
  3610  00DDEE  EFFB  F06E         	goto	u3870
  3611  00DDF2                     u3871:
  3612  00DDF2  EF03  F06F         	goto	l4293
  3613  00DDF6                     u3870:
  3614  00DDF6                     
  3615                           ; BSR set to: 0
  3616  00DDF6  0E00               	movlw	0
  3617  00DDF8  6F6D               	movwf	___fldiv@b& (0+255),b
  3618  00DDFA  0E00               	movlw	0
  3619  00DDFC  6F6E               	movwf	(___fldiv@b+1)& (0+255),b
  3620  00DDFE  0E00               	movlw	0
  3621  00DE00  6F6F               	movwf	(___fldiv@b+2)& (0+255),b
  3622  00DE02  0E00               	movlw	0
  3623  00DE04  6F70               	movwf	(___fldiv@b+3)& (0+255),b
  3624  00DE06                     l4293:
  3625                           
  3626                           ; BSR set to: 0
  3627  00DE06  8F6F               	bsf	(___fldiv@b+2)& (0+255),7,b
  3628  00DE08                     
  3629                           ; BSR set to: 0
  3630  00DE08  0E00               	movlw	0
  3631  00DE0A  6F70               	movwf	(___fldiv@b+3)& (0+255),b
  3632  00DE0C  EF10  F06F         	goto	l4299
  3633  00DE10                     l4297:
  3634                           
  3635                           ; BSR set to: 0
  3636  00DE10  0E00               	movlw	0
  3637  00DE12  6F6D               	movwf	___fldiv@b& (0+255),b
  3638  00DE14  0E00               	movlw	0
  3639  00DE16  6F6E               	movwf	(___fldiv@b+1)& (0+255),b
  3640  00DE18  0E00               	movlw	0
  3641  00DE1A  6F6F               	movwf	(___fldiv@b+2)& (0+255),b
  3642  00DE1C  0E00               	movlw	0
  3643  00DE1E  6F70               	movwf	(___fldiv@b+3)& (0+255),b
  3644  00DE20                     l4299:
  3645                           
  3646                           ; BSR set to: 0
  3647  00DE20  5174               	movf	(___fldiv@a+3)& (0+255),w,b
  3648  00DE22  0B80               	andlw	128
  3649  00DE24  1B7D               	xorwf	___fldiv@sign& (0+255),f,b
  3650  00DE26                     
  3651                           ; BSR set to: 0
  3652  00DE26  5174               	movf	(___fldiv@a+3)& (0+255),w,b
  3653  00DE28  2574               	addwf	(___fldiv@a+3)& (0+255),w,b
  3654  00DE2A  6F85               	movwf	___fldiv@aexp& (0+255),b
  3655  00DE2C                     
  3656                           ; BSR set to: 0
  3657  00DE2C  AF73               	btfss	(___fldiv@a+2)& (0+255),7,b
  3658  00DE2E  EF1B  F06F         	goto	u3881
  3659  00DE32  EF1D  F06F         	goto	u3880
  3660  00DE36                     u3881:
  3661  00DE36  EF1E  F06F         	goto	l4307
  3662  00DE3A                     u3880:
  3663  00DE3A                     
  3664                           ; BSR set to: 0
  3665  00DE3A  8185               	bsf	___fldiv@aexp& (0+255),0,b
  3666  00DE3C                     l4307:
  3667                           
  3668                           ; BSR set to: 0
  3669  00DE3C  5185               	movf	___fldiv@aexp& (0+255),w,b
  3670  00DE3E  B4D8               	btfsc	status,2,c
  3671  00DE40  EF24  F06F         	goto	u3891
  3672  00DE44  EF26  F06F         	goto	u3890
  3673  00DE48                     u3891:
  3674  00DE48  EF3B  F06F         	goto	l4317
  3675  00DE4C                     u3890:
  3676  00DE4C                     
  3677                           ; BSR set to: 0
  3678  00DE4C  2985               	incf	___fldiv@aexp& (0+255),w,b
  3679  00DE4E  A4D8               	btfss	status,2,c
  3680  00DE50  EF2C  F06F         	goto	u3901
  3681  00DE54  EF2E  F06F         	goto	u3900
  3682  00DE58                     u3901:
  3683  00DE58  EF36  F06F         	goto	l4313
  3684  00DE5C                     u3900:
  3685  00DE5C                     
  3686                           ; BSR set to: 0
  3687  00DE5C  0E00               	movlw	0
  3688  00DE5E  6F71               	movwf	___fldiv@a& (0+255),b
  3689  00DE60  0E00               	movlw	0
  3690  00DE62  6F72               	movwf	(___fldiv@a+1)& (0+255),b
  3691  00DE64  0E00               	movlw	0
  3692  00DE66  6F73               	movwf	(___fldiv@a+2)& (0+255),b
  3693  00DE68  0E00               	movlw	0
  3694  00DE6A  6F74               	movwf	(___fldiv@a+3)& (0+255),b
  3695  00DE6C                     l4313:
  3696                           
  3697                           ; BSR set to: 0
  3698  00DE6C  8F73               	bsf	(___fldiv@a+2)& (0+255),7,b
  3699  00DE6E                     
  3700                           ; BSR set to: 0
  3701  00DE6E  0E00               	movlw	0
  3702  00DE70  6F74               	movwf	(___fldiv@a+3)& (0+255),b
  3703  00DE72  EF43  F06F         	goto	l4319
  3704  00DE76                     l4317:
  3705                           
  3706                           ; BSR set to: 0
  3707  00DE76  0E00               	movlw	0
  3708  00DE78  6F71               	movwf	___fldiv@a& (0+255),b
  3709  00DE7A  0E00               	movlw	0
  3710  00DE7C  6F72               	movwf	(___fldiv@a+1)& (0+255),b
  3711  00DE7E  0E00               	movlw	0
  3712  00DE80  6F73               	movwf	(___fldiv@a+2)& (0+255),b
  3713  00DE82  0E00               	movlw	0
  3714  00DE84  6F74               	movwf	(___fldiv@a+3)& (0+255),b
  3715  00DE86                     l4319:
  3716                           
  3717                           ; BSR set to: 0
  3718  00DE86  5171               	movf	___fldiv@a& (0+255),w,b
  3719  00DE88  1172               	iorwf	(___fldiv@a+1)& (0+255),w,b
  3720  00DE8A  1173               	iorwf	(___fldiv@a+2)& (0+255),w,b
  3721  00DE8C  1174               	iorwf	(___fldiv@a+3)& (0+255),w,b
  3722  00DE8E  A4D8               	btfss	status,2,c
  3723  00DE90  EF4C  F06F         	goto	u3911
  3724  00DE94  EF4E  F06F         	goto	u3910
  3725  00DE98                     u3911:
  3726  00DE98  EF66  F06F         	goto	l4331
  3727  00DE9C                     u3910:
  3728  00DE9C                     
  3729                           ; BSR set to: 0
  3730  00DE9C  0E00               	movlw	0
  3731  00DE9E  6F6D               	movwf	___fldiv@b& (0+255),b
  3732  00DEA0  0E00               	movlw	0
  3733  00DEA2  6F6E               	movwf	(___fldiv@b+1)& (0+255),b
  3734  00DEA4  0E00               	movlw	0
  3735  00DEA6  6F6F               	movwf	(___fldiv@b+2)& (0+255),b
  3736  00DEA8  0E00               	movlw	0
  3737  00DEAA  6F70               	movwf	(___fldiv@b+3)& (0+255),b
  3738  00DEAC                     
  3739                           ; BSR set to: 0
  3740  00DEAC  0E80               	movlw	128
  3741  00DEAE  136F               	iorwf	(___fldiv@b+2)& (0+255),f,b
  3742  00DEB0  0E7F               	movlw	127
  3743  00DEB2  1370               	iorwf	(___fldiv@b+3)& (0+255),f,b
  3744  00DEB4                     l4325:
  3745                           
  3746                           ; BSR set to: 0
  3747  00DEB4  517D               	movf	___fldiv@sign& (0+255),w,b
  3748  00DEB6  1370               	iorwf	(___fldiv@b+3)& (0+255),f,b
  3749  00DEB8                     
  3750                           ; BSR set to: 0
  3751  00DEB8  C06D  F06D         	movff	___fldiv@b,?___fldiv
  3752  00DEBC  C06E  F06E         	movff	___fldiv@b+1,?___fldiv+1
  3753  00DEC0  C06F  F06F         	movff	___fldiv@b+2,?___fldiv+2
  3754  00DEC4  C070  F070         	movff	___fldiv@b+3,?___fldiv+3
  3755  00DEC8  EFA9  F070         	goto	l1315
  3756  00DECC                     l4331:
  3757                           
  3758                           ; BSR set to: 0
  3759  00DECC  5184               	movf	___fldiv@bexp& (0+255),w,b
  3760  00DECE  A4D8               	btfss	status,2,c
  3761  00DED0  EF6C  F06F         	goto	u3921
  3762  00DED4  EF6E  F06F         	goto	u3920
  3763  00DED8                     u3921:
  3764  00DED8  EF78  F06F         	goto	l4339
  3765  00DEDC                     u3920:
  3766  00DEDC                     
  3767                           ; BSR set to: 0
  3768  00DEDC  0E00               	movlw	0
  3769  00DEDE  6F6D               	movwf	?___fldiv& (0+255),b
  3770  00DEE0  0E00               	movlw	0
  3771  00DEE2  6F6E               	movwf	(?___fldiv+1)& (0+255),b
  3772  00DEE4  0E00               	movlw	0
  3773  00DEE6  6F6F               	movwf	(?___fldiv+2)& (0+255),b
  3774  00DEE8  0E00               	movlw	0
  3775  00DEEA  6F70               	movwf	(?___fldiv+3)& (0+255),b
  3776  00DEEC  EFA9  F070         	goto	l1315
  3777  00DEF0                     l4339:
  3778                           
  3779                           ; BSR set to: 0
  3780  00DEF0  5185               	movf	___fldiv@aexp& (0+255),w,b
  3781  00DEF2  C084  F075         	movff	___fldiv@bexp,??___fldiv
  3782  00DEF6  6B76               	clrf	(??___fldiv+1)& (0+255),b
  3783  00DEF8  5F75               	subwf	??___fldiv& (0+255),f,b
  3784  00DEFA  0E00               	movlw	0
  3785  00DEFC  5B76               	subwfb	(??___fldiv+1)& (0+255),f,b
  3786  00DEFE  0E7F               	movlw	127
  3787  00DF00  2575               	addwf	??___fldiv& (0+255),w,b
  3788  00DF02  6F7E               	movwf	___fldiv@new_exp& (0+255),b
  3789  00DF04  0E00               	movlw	0
  3790  00DF06  2176               	addwfc	(??___fldiv+1)& (0+255),w,b
  3791  00DF08  6F7F               	movwf	(___fldiv@new_exp+1)& (0+255),b
  3792  00DF0A                     
  3793                           ; BSR set to: 0
  3794  00DF0A  C06D  F079         	movff	___fldiv@b,___fldiv@rem
  3795  00DF0E  C06E  F07A         	movff	___fldiv@b+1,___fldiv@rem+1
  3796  00DF12  C06F  F07B         	movff	___fldiv@b+2,___fldiv@rem+2
  3797  00DF16  C070  F07C         	movff	___fldiv@b+3,___fldiv@rem+3
  3798  00DF1A                     
  3799                           ; BSR set to: 0
  3800  00DF1A  0E00               	movlw	0
  3801  00DF1C  6F6D               	movwf	___fldiv@b& (0+255),b
  3802  00DF1E  0E00               	movlw	0
  3803  00DF20  6F6E               	movwf	(___fldiv@b+1)& (0+255),b
  3804  00DF22  0E00               	movlw	0
  3805  00DF24  6F6F               	movwf	(___fldiv@b+2)& (0+255),b
  3806  00DF26  0E00               	movlw	0
  3807  00DF28  6F70               	movwf	(___fldiv@b+3)& (0+255),b
  3808  00DF2A                     
  3809                           ; BSR set to: 0
  3810  00DF2A  0E00               	movlw	0
  3811  00DF2C  6F80               	movwf	___fldiv@grs& (0+255),b
  3812  00DF2E  0E00               	movlw	0
  3813  00DF30  6F81               	movwf	(___fldiv@grs+1)& (0+255),b
  3814  00DF32  0E00               	movlw	0
  3815  00DF34  6F82               	movwf	(___fldiv@grs+2)& (0+255),b
  3816  00DF36  0E00               	movlw	0
  3817  00DF38  6F83               	movwf	(___fldiv@grs+3)& (0+255),b
  3818  00DF3A                     
  3819                           ; BSR set to: 0
  3820  00DF3A  0E00               	movlw	0
  3821  00DF3C  6F85               	movwf	___fldiv@aexp& (0+255),b
  3822  00DF3E  EFD9  F06F         	goto	l1317
  3823  00DF42                     l4349:
  3824                           
  3825                           ; BSR set to: 0
  3826  00DF42  5185               	movf	___fldiv@aexp& (0+255),w,b
  3827  00DF44  B4D8               	btfsc	status,2,c
  3828  00DF46  EFA7  F06F         	goto	u3931
  3829  00DF4A  EFA9  F06F         	goto	u3930
  3830  00DF4E                     u3931:
  3831  00DF4E  EFC0  F06F         	goto	l4357
  3832  00DF52                     u3930:
  3833  00DF52                     
  3834                           ; BSR set to: 0
  3835  00DF52  90D8               	bcf	status,0,c
  3836  00DF54  3779               	rlcf	___fldiv@rem& (0+255),f,b
  3837  00DF56  377A               	rlcf	(___fldiv@rem+1)& (0+255),f,b
  3838  00DF58  377B               	rlcf	(___fldiv@rem+2)& (0+255),f,b
  3839  00DF5A  377C               	rlcf	(___fldiv@rem+3)& (0+255),f,b
  3840  00DF5C  90D8               	bcf	status,0,c
  3841  00DF5E  376D               	rlcf	___fldiv@b& (0+255),f,b
  3842  00DF60  376E               	rlcf	(___fldiv@b+1)& (0+255),f,b
  3843  00DF62  376F               	rlcf	(___fldiv@b+2)& (0+255),f,b
  3844  00DF64  3770               	rlcf	(___fldiv@b+3)& (0+255),f,b
  3845  00DF66                     
  3846                           ; BSR set to: 0
  3847  00DF66  AF83               	btfss	(___fldiv@grs+3)& (0+255),7,b
  3848  00DF68  EFB8  F06F         	goto	u3941
  3849  00DF6C  EFBA  F06F         	goto	u3940
  3850  00DF70                     u3941:
  3851  00DF70  EFBB  F06F         	goto	l1320
  3852  00DF74                     u3940:
  3853  00DF74                     
  3854                           ; BSR set to: 0
  3855  00DF74  816D               	bsf	___fldiv@b& (0+255),0,b
  3856  00DF76                     l1320:
  3857                           
  3858                           ; BSR set to: 0
  3859  00DF76  90D8               	bcf	status,0,c
  3860  00DF78  3780               	rlcf	___fldiv@grs& (0+255),f,b
  3861  00DF7A  3781               	rlcf	(___fldiv@grs+1)& (0+255),f,b
  3862  00DF7C  3782               	rlcf	(___fldiv@grs+2)& (0+255),f,b
  3863  00DF7E  3783               	rlcf	(___fldiv@grs+3)& (0+255),f,b
  3864  00DF80                     l4357:
  3865                           
  3866                           ; BSR set to: 0
  3867  00DF80  5171               	movf	___fldiv@a& (0+255),w,b
  3868  00DF82  5D79               	subwf	___fldiv@rem& (0+255),w,b
  3869  00DF84  5172               	movf	(___fldiv@a+1)& (0+255),w,b
  3870  00DF86  597A               	subwfb	(___fldiv@rem+1)& (0+255),w,b
  3871  00DF88  5173               	movf	(___fldiv@a+2)& (0+255),w,b
  3872  00DF8A  597B               	subwfb	(___fldiv@rem+2)& (0+255),w,b
  3873  00DF8C  5174               	movf	(___fldiv@a+3)& (0+255),w,b
  3874  00DF8E  597C               	subwfb	(___fldiv@rem+3)& (0+255),w,b
  3875  00DF90  A0D8               	btfss	status,0,c
  3876  00DF92  EFCD  F06F         	goto	u3951
  3877  00DF96  EFCF  F06F         	goto	u3950
  3878  00DF9A                     u3951:
  3879  00DF9A  EFD8  F06F         	goto	l4363
  3880  00DF9E                     u3950:
  3881  00DF9E                     
  3882                           ; BSR set to: 0
  3883  00DF9E  8D83               	bsf	(___fldiv@grs+3)& (0+255),6,b
  3884  00DFA0                     
  3885                           ; BSR set to: 0
  3886  00DFA0  5171               	movf	___fldiv@a& (0+255),w,b
  3887  00DFA2  5F79               	subwf	___fldiv@rem& (0+255),f,b
  3888  00DFA4  5172               	movf	(___fldiv@a+1)& (0+255),w,b
  3889  00DFA6  5B7A               	subwfb	(___fldiv@rem+1)& (0+255),f,b
  3890  00DFA8  5173               	movf	(___fldiv@a+2)& (0+255),w,b
  3891  00DFAA  5B7B               	subwfb	(___fldiv@rem+2)& (0+255),f,b
  3892  00DFAC  5174               	movf	(___fldiv@a+3)& (0+255),w,b
  3893  00DFAE  5B7C               	subwfb	(___fldiv@rem+3)& (0+255),f,b
  3894  00DFB0                     l4363:
  3895                           
  3896                           ; BSR set to: 0
  3897  00DFB0  2B85               	incf	___fldiv@aexp& (0+255),f,b
  3898  00DFB2                     l1317:
  3899                           
  3900                           ; BSR set to: 0
  3901  00DFB2  0E19               	movlw	25
  3902  00DFB4  6585               	cpfsgt	___fldiv@aexp& (0+255),b
  3903  00DFB6  EFDF  F06F         	goto	u3961
  3904  00DFBA  EFE1  F06F         	goto	u3960
  3905  00DFBE                     u3961:
  3906  00DFBE  EFA1  F06F         	goto	l4349
  3907  00DFC2                     u3960:
  3908  00DFC2                     
  3909                           ; BSR set to: 0
  3910  00DFC2  5179               	movf	___fldiv@rem& (0+255),w,b
  3911  00DFC4  117A               	iorwf	(___fldiv@rem+1)& (0+255),w,b
  3912  00DFC6  117B               	iorwf	(___fldiv@rem+2)& (0+255),w,b
  3913  00DFC8  117C               	iorwf	(___fldiv@rem+3)& (0+255),w,b
  3914  00DFCA  B4D8               	btfsc	status,2,c
  3915  00DFCC  EFEA  F06F         	goto	u3971
  3916  00DFD0  EFEC  F06F         	goto	u3970
  3917  00DFD4                     u3971:
  3918  00DFD4  EF04  F070         	goto	l4375
  3919  00DFD8                     u3970:
  3920  00DFD8                     
  3921                           ; BSR set to: 0
  3922  00DFD8  8180               	bsf	___fldiv@grs& (0+255),0,b
  3923  00DFDA  EF04  F070         	goto	l4375
  3924  00DFDE                     l4369:
  3925                           
  3926                           ; BSR set to: 0
  3927  00DFDE  90D8               	bcf	status,0,c
  3928  00DFE0  376D               	rlcf	___fldiv@b& (0+255),f,b
  3929  00DFE2  376E               	rlcf	(___fldiv@b+1)& (0+255),f,b
  3930  00DFE4  376F               	rlcf	(___fldiv@b+2)& (0+255),f,b
  3931  00DFE6  3770               	rlcf	(___fldiv@b+3)& (0+255),f,b
  3932  00DFE8                     
  3933                           ; BSR set to: 0
  3934  00DFE8  AF83               	btfss	(___fldiv@grs+3)& (0+255),7,b
  3935  00DFEA  EFF9  F06F         	goto	u3981
  3936  00DFEE  EFFB  F06F         	goto	u3980
  3937  00DFF2                     u3981:
  3938  00DFF2  EFFC  F06F         	goto	l1326
  3939  00DFF6                     u3980:
  3940  00DFF6                     
  3941                           ; BSR set to: 0
  3942  00DFF6  816D               	bsf	___fldiv@b& (0+255),0,b
  3943  00DFF8                     l1326:
  3944                           
  3945                           ; BSR set to: 0
  3946  00DFF8  90D8               	bcf	status,0,c
  3947  00DFFA  3780               	rlcf	___fldiv@grs& (0+255),f,b
  3948  00DFFC  3781               	rlcf	(___fldiv@grs+1)& (0+255),f,b
  3949  00DFFE  3782               	rlcf	(___fldiv@grs+2)& (0+255),f,b
  3950  00E000  3783               	rlcf	(___fldiv@grs+3)& (0+255),f,b
  3951  00E002  077E               	decf	___fldiv@new_exp& (0+255),f,b
  3952  00E004  A0D8               	btfss	status,0,c
  3953  00E006  077F               	decf	(___fldiv@new_exp+1)& (0+255),f,b
  3954  00E008                     l4375:
  3955                           
  3956                           ; BSR set to: 0
  3957  00E008  AF6F               	btfss	(___fldiv@b+2)& (0+255),7,b
  3958  00E00A  EF09  F070         	goto	u3991
  3959  00E00E  EF0B  F070         	goto	u3990
  3960  00E012                     u3991:
  3961  00E012  EFEF  F06F         	goto	l4369
  3962  00E016                     u3990:
  3963  00E016                     
  3964                           ; BSR set to: 0
  3965  00E016  0E00               	movlw	0
  3966  00E018  6F85               	movwf	___fldiv@aexp& (0+255),b
  3967  00E01A                     
  3968                           ; BSR set to: 0
  3969  00E01A  AF83               	btfss	(___fldiv@grs+3)& (0+255),7,b
  3970  00E01C  EF12  F070         	goto	u4001
  3971  00E020  EF14  F070         	goto	u4000
  3972  00E024                     u4001:
  3973  00E024  EF38  F070         	goto	l1328
  3974  00E028                     u4000:
  3975  00E028                     
  3976                           ; BSR set to: 0
  3977  00E028  0EFF               	movlw	255
  3978  00E02A  1580               	andwf	___fldiv@grs& (0+255),w,b
  3979  00E02C  6F75               	movwf	??___fldiv& (0+255),b
  3980  00E02E  0EFF               	movlw	255
  3981  00E030  1581               	andwf	(___fldiv@grs+1)& (0+255),w,b
  3982  00E032  6F76               	movwf	(??___fldiv+1)& (0+255),b
  3983  00E034  0EFF               	movlw	255
  3984  00E036  1582               	andwf	(___fldiv@grs+2)& (0+255),w,b
  3985  00E038  6F77               	movwf	(??___fldiv+2)& (0+255),b
  3986  00E03A  0E7F               	movlw	127
  3987  00E03C  1583               	andwf	(___fldiv@grs+3)& (0+255),w,b
  3988  00E03E  6F78               	movwf	(??___fldiv+3)& (0+255),b
  3989  00E040  5175               	movf	??___fldiv& (0+255),w,b
  3990  00E042  1176               	iorwf	(??___fldiv+1)& (0+255),w,b
  3991  00E044  1177               	iorwf	(??___fldiv+2)& (0+255),w,b
  3992  00E046  1178               	iorwf	(??___fldiv+3)& (0+255),w,b
  3993  00E048  B4D8               	btfsc	status,2,c
  3994  00E04A  EF29  F070         	goto	u4011
  3995  00E04E  EF2B  F070         	goto	u4010
  3996  00E052                     u4011:
  3997  00E052  EF2F  F070         	goto	l1329
  3998  00E056                     u4010:
  3999  00E056                     l4383:
  4000                           
  4001                           ; BSR set to: 0
  4002  00E056  0E01               	movlw	1
  4003  00E058  6F85               	movwf	___fldiv@aexp& (0+255),b
  4004  00E05A  EF38  F070         	goto	l1328
  4005  00E05E                     l1329:
  4006                           
  4007                           ; BSR set to: 0
  4008  00E05E  A16D               	btfss	___fldiv@b& (0+255),0,b
  4009  00E060  EF34  F070         	goto	u4021
  4010  00E064  EF36  F070         	goto	u4020
  4011  00E068                     u4021:
  4012  00E068  EF38  F070         	goto	l1328
  4013  00E06C                     u4020:
  4014  00E06C  EF2B  F070         	goto	l4383
  4015  00E070                     l1328:
  4016                           
  4017                           ; BSR set to: 0
  4018  00E070  5185               	movf	___fldiv@aexp& (0+255),w,b
  4019  00E072  B4D8               	btfsc	status,2,c
  4020  00E074  EF3E  F070         	goto	u4031
  4021  00E078  EF40  F070         	goto	u4030
  4022  00E07C                     u4031:
  4023  00E07C  EF64  F070         	goto	l4395
  4024  00E080                     u4030:
  4025  00E080                     
  4026                           ; BSR set to: 0
  4027  00E080  0E01               	movlw	1
  4028  00E082  276D               	addwf	___fldiv@b& (0+255),f,b
  4029  00E084  0E00               	movlw	0
  4030  00E086  236E               	addwfc	(___fldiv@b+1)& (0+255),f,b
  4031  00E088  236F               	addwfc	(___fldiv@b+2)& (0+255),f,b
  4032  00E08A  2370               	addwfc	(___fldiv@b+3)& (0+255),f,b
  4033  00E08C                     
  4034                           ; BSR set to: 0
  4035  00E08C  A170               	btfss	(___fldiv@b+3)& (0+255),0,b
  4036  00E08E  EF4B  F070         	goto	u4041
  4037  00E092  EF4D  F070         	goto	u4040
  4038  00E096                     u4041:
  4039  00E096  EF64  F070         	goto	l4395
  4040  00E09A                     u4040:
  4041  00E09A                     
  4042                           ; BSR set to: 0
  4043  00E09A  C06D  F075         	movff	___fldiv@b,??___fldiv
  4044  00E09E  C06E  F076         	movff	___fldiv@b+1,??___fldiv+1
  4045  00E0A2  C06F  F077         	movff	___fldiv@b+2,??___fldiv+2
  4046  00E0A6  C070  F078         	movff	___fldiv@b+3,??___fldiv+3
  4047  00E0AA  3578               	rlcf	(??___fldiv+3)& (0+255),w,b
  4048  00E0AC  3378               	rrcf	(??___fldiv+3)& (0+255),f,b
  4049  00E0AE  3377               	rrcf	(??___fldiv+2)& (0+255),f,b
  4050  00E0B0  3376               	rrcf	(??___fldiv+1)& (0+255),f,b
  4051  00E0B2  3375               	rrcf	??___fldiv& (0+255),f,b
  4052  00E0B4  C075  F06D         	movff	??___fldiv,___fldiv@b
  4053  00E0B8  C076  F06E         	movff	??___fldiv+1,___fldiv@b+1
  4054  00E0BC  C077  F06F         	movff	??___fldiv+2,___fldiv@b+2
  4055  00E0C0  C078  F070         	movff	??___fldiv+3,___fldiv@b+3
  4056  00E0C4                     
  4057                           ; BSR set to: 0
  4058  00E0C4  4B7E               	infsnz	___fldiv@new_exp& (0+255),f,b
  4059  00E0C6  2B7F               	incf	(___fldiv@new_exp+1)& (0+255),f,b
  4060  00E0C8                     l4395:
  4061                           
  4062                           ; BSR set to: 0
  4063  00E0C8  BF7F               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
  4064  00E0CA  EF6F  F070         	goto	u4051
  4065  00E0CE  517F               	movf	(___fldiv@new_exp+1)& (0+255),w,b
  4066  00E0D0  E108               	bnz	u4050
  4067  00E0D2  297E               	incf	___fldiv@new_exp& (0+255),w,b
  4068  00E0D4  A0D8               	btfss	status,0,c
  4069  00E0D6  EF6F  F070         	goto	u4051
  4070  00E0DA  EF71  F070         	goto	u4050
  4071  00E0DE                     u4051:
  4072  00E0DE  EF7C  F070         	goto	l4399
  4073  00E0E2                     u4050:
  4074  00E0E2                     
  4075                           ; BSR set to: 0
  4076  00E0E2  0E00               	movlw	0
  4077  00E0E4  6F7F               	movwf	(___fldiv@new_exp+1)& (0+255),b
  4078  00E0E6  697E               	setf	___fldiv@new_exp& (0+255),b
  4079  00E0E8  0E00               	movlw	0
  4080  00E0EA  6F6D               	movwf	___fldiv@b& (0+255),b
  4081  00E0EC  0E00               	movlw	0
  4082  00E0EE  6F6E               	movwf	(___fldiv@b+1)& (0+255),b
  4083  00E0F0  0E00               	movlw	0
  4084  00E0F2  6F6F               	movwf	(___fldiv@b+2)& (0+255),b
  4085  00E0F4  0E00               	movlw	0
  4086  00E0F6  6F70               	movwf	(___fldiv@b+3)& (0+255),b
  4087  00E0F8                     l4399:
  4088                           
  4089                           ; BSR set to: 0
  4090  00E0F8  BF7F               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
  4091  00E0FA  EF89  F070         	goto	u4060
  4092  00E0FE  517F               	movf	(___fldiv@new_exp+1)& (0+255),w,b
  4093  00E100  E106               	bnz	u4061
  4094  00E102  057E               	decf	___fldiv@new_exp& (0+255),w,b
  4095  00E104  B0D8               	btfsc	status,0,c
  4096  00E106  EF87  F070         	goto	u4061
  4097  00E10A  EF89  F070         	goto	u4060
  4098  00E10E                     u4061:
  4099  00E10E  EF97  F070         	goto	l4403
  4100  00E112                     u4060:
  4101  00E112                     
  4102                           ; BSR set to: 0
  4103  00E112  0E00               	movlw	0
  4104  00E114  6F7F               	movwf	(___fldiv@new_exp+1)& (0+255),b
  4105  00E116  0E00               	movlw	0
  4106  00E118  6F7E               	movwf	___fldiv@new_exp& (0+255),b
  4107  00E11A  0E00               	movlw	0
  4108  00E11C  6F6D               	movwf	___fldiv@b& (0+255),b
  4109  00E11E  0E00               	movlw	0
  4110  00E120  6F6E               	movwf	(___fldiv@b+1)& (0+255),b
  4111  00E122  0E00               	movlw	0
  4112  00E124  6F6F               	movwf	(___fldiv@b+2)& (0+255),b
  4113  00E126  0E00               	movlw	0
  4114  00E128  6F70               	movwf	(___fldiv@b+3)& (0+255),b
  4115  00E12A  0E00               	movlw	0
  4116  00E12C  6F7D               	movwf	___fldiv@sign& (0+255),b
  4117  00E12E                     l4403:
  4118                           
  4119                           ; BSR set to: 0
  4120  00E12E  C07E  F084         	movff	___fldiv@new_exp,___fldiv@bexp
  4121  00E132                     
  4122                           ; BSR set to: 0
  4123  00E132  A184               	btfss	___fldiv@bexp& (0+255),0,b
  4124  00E134  EF9E  F070         	goto	u4071
  4125  00E138  EFA0  F070         	goto	u4070
  4126  00E13C                     u4071:
  4127  00E13C  EFA3  F070         	goto	l4409
  4128  00E140                     u4070:
  4129  00E140                     
  4130                           ; BSR set to: 0
  4131  00E140  8F6F               	bsf	(___fldiv@b+2)& (0+255),7,b
  4132  00E142  EFA4  F070         	goto	l4411
  4133  00E146                     l4409:
  4134                           
  4135                           ; BSR set to: 0
  4136  00E146  9F6F               	bcf	(___fldiv@b+2)& (0+255),7,b
  4137  00E148                     l4411:
  4138                           
  4139                           ; BSR set to: 0
  4140  00E148  90D8               	bcf	status,0,c
  4141  00E14A  3184               	rrcf	___fldiv@bexp& (0+255),w,b
  4142  00E14C  6F70               	movwf	(___fldiv@b+3)& (0+255),b
  4143  00E14E  EF5A  F06F         	goto	l4325
  4144  00E152                     l1315:
  4145                           
  4146                           ; BSR set to: 0
  4147  00E152  0012               	return		;funcret
  4148  00E154                     __end_of___fldiv:
  4149                           	callstack 0
  4150                           
  4151 ;; *************** function _clearPuTTY *****************
  4152 ;; Defined at:
  4153 ;;		line 4 in file "../exercise10.X/putty.c"
  4154 ;; Parameters:    Size  Location     Type
  4155 ;;		None
  4156 ;; Auto vars:     Size  Location     Type
  4157 ;;		None
  4158 ;; Return value:  Size  Location     Type
  4159 ;;                  1    wreg      void 
  4160 ;; Registers used:
  4161 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4162 ;; Tracked objects:
  4163 ;;		On entry : 0/0
  4164 ;;		On exit  : 0/0
  4165 ;;		Unchanged: 0/0
  4166 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4167 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4168 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4169 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4170 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4171 ;;Total ram usage:        0 bytes
  4172 ;; Hardware stack levels used:    1
  4173 ;; Hardware stack levels required when called:    3
  4174 ;; This function calls:
  4175 ;;		_printf
  4176 ;; This function is called by:
  4177 ;;		_main
  4178 ;; This function uses a non-reentrant model
  4179 ;;
  4180                           
  4181                           	psect	text9
  4182  00C404                     __ptext9:
  4183                           	callstack 0
  4184  00C404                     _clearPuTTY:
  4185                           	callstack 27
  4186  00C404                     
  4187                           ;putty.c: 6: printf("%c%c%c%c",27,'[','2','J');
  4188  00C404  0EF1               	movlw	low STR_6
  4189  00C406  0100               	movlb	0	; () banked
  4190  00C408  6F76               	movwf	printf@f& (0+255),b
  4191  00C40A  0EFF               	movlw	high STR_6
  4192  00C40C  6F77               	movwf	(printf@f+1)& (0+255),b
  4193  00C40E  0E00               	movlw	0
  4194  00C410  6F79               	movwf	(?_printf+3)& (0+255),b
  4195  00C412  0E1B               	movlw	27
  4196  00C414  6F78               	movwf	(?_printf+2)& (0+255),b
  4197  00C416  0E00               	movlw	0
  4198  00C418  6F7B               	movwf	(?_printf+5)& (0+255),b
  4199  00C41A  0E5B               	movlw	91
  4200  00C41C  6F7A               	movwf	(?_printf+4)& (0+255),b
  4201  00C41E  0E00               	movlw	0
  4202  00C420  6F7D               	movwf	(?_printf+7)& (0+255),b
  4203  00C422  0E32               	movlw	50
  4204  00C424  6F7C               	movwf	(?_printf+6)& (0+255),b
  4205  00C426  0E00               	movlw	0
  4206  00C428  6F7F               	movwf	(?_printf+9)& (0+255),b
  4207  00C42A  0E4A               	movlw	74
  4208  00C42C  6F7E               	movwf	(?_printf+8)& (0+255),b
  4209  00C42E  ECB0  F07A         	call	_printf	;wreg free
  4210                           
  4211                           ;putty.c: 7: printf("%c%c%c%c",27,'[','3','J');
  4212  00C432  0EF1               	movlw	low STR_6
  4213  00C434  0100               	movlb	0	; () banked
  4214  00C436  6F76               	movwf	printf@f& (0+255),b
  4215  00C438  0EFF               	movlw	high STR_6
  4216  00C43A  6F77               	movwf	(printf@f+1)& (0+255),b
  4217  00C43C  0E00               	movlw	0
  4218  00C43E  6F79               	movwf	(?_printf+3)& (0+255),b
  4219  00C440  0E1B               	movlw	27
  4220  00C442  6F78               	movwf	(?_printf+2)& (0+255),b
  4221  00C444  0E00               	movlw	0
  4222  00C446  6F7B               	movwf	(?_printf+5)& (0+255),b
  4223  00C448  0E5B               	movlw	91
  4224  00C44A  6F7A               	movwf	(?_printf+4)& (0+255),b
  4225  00C44C  0E00               	movlw	0
  4226  00C44E  6F7D               	movwf	(?_printf+7)& (0+255),b
  4227  00C450  0E33               	movlw	51
  4228  00C452  6F7C               	movwf	(?_printf+6)& (0+255),b
  4229  00C454  0E00               	movlw	0
  4230  00C456  6F7F               	movwf	(?_printf+9)& (0+255),b
  4231  00C458  0E4A               	movlw	74
  4232  00C45A  6F7E               	movwf	(?_printf+8)& (0+255),b
  4233  00C45C  ECB0  F07A         	call	_printf	;wreg free
  4234                           
  4235                           ;putty.c: 8: printf("%c%c%c",27,'[','H');
  4236  00C460  0EF3               	movlw	low (STR_6+2)
  4237  00C462  0100               	movlb	0	; () banked
  4238  00C464  6F76               	movwf	printf@f& (0+255),b
  4239  00C466  0EFF               	movlw	high (STR_6+2)
  4240  00C468  6F77               	movwf	(printf@f+1)& (0+255),b
  4241  00C46A  0E00               	movlw	0
  4242  00C46C  6F79               	movwf	(?_printf+3)& (0+255),b
  4243  00C46E  0E1B               	movlw	27
  4244  00C470  6F78               	movwf	(?_printf+2)& (0+255),b
  4245  00C472  0E00               	movlw	0
  4246  00C474  6F7B               	movwf	(?_printf+5)& (0+255),b
  4247  00C476  0E5B               	movlw	91
  4248  00C478  6F7A               	movwf	(?_printf+4)& (0+255),b
  4249  00C47A  0E00               	movlw	0
  4250  00C47C  6F7D               	movwf	(?_printf+7)& (0+255),b
  4251  00C47E  0E48               	movlw	72
  4252  00C480  6F7C               	movwf	(?_printf+6)& (0+255),b
  4253  00C482  ECB0  F07A         	call	_printf	;wreg free
  4254  00C486  0012               	return		;funcret
  4255  00C488                     __end_of_clearPuTTY:
  4256                           	callstack 0
  4257                           
  4258 ;; *************** function _buttonResponse *****************
  4259 ;; Defined at:
  4260 ;;		line 189 in file "main.c"
  4261 ;; Parameters:    Size  Location     Type
  4262 ;;		None
  4263 ;; Auto vars:     Size  Location     Type
  4264 ;;		None
  4265 ;; Return value:  Size  Location     Type
  4266 ;;                  1    wreg      void 
  4267 ;; Registers used:
  4268 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4269 ;; Tracked objects:
  4270 ;;		On entry : 0/0
  4271 ;;		On exit  : 0/0
  4272 ;;		Unchanged: 0/0
  4273 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4274 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4275 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4276 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4277 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4278 ;;Total ram usage:        1 bytes
  4279 ;; Hardware stack levels used:    1
  4280 ;; Hardware stack levels required when called:    3
  4281 ;; This function calls:
  4282 ;;		_DELAY_milliseconds
  4283 ;;		_poll_switch1_for_edges
  4284 ;;		_printf
  4285 ;; This function is called by:
  4286 ;;		_main
  4287 ;; This function uses a non-reentrant model
  4288 ;;
  4289                           
  4290                           	psect	text10
  4291  00C510                     __ptext10:
  4292                           	callstack 0
  4293  00C510                     _buttonResponse:
  4294                           	callstack 27
  4295  00C510                     
  4296                           ;main.c: 191: has_switch1_changed = poll_switch1_for_edges(PORTDbits.RD1);
  4297  00C510  B2CD               	btfsc	205,1,c	;volatile
  4298  00C512  EF8D  F062         	goto	u4791
  4299  00C516  EF92  F062         	goto	u4790
  4300  00C51A                     u4791:
  4301  00C51A  0100               	movlb	0	; () banked
  4302  00C51C  6B9B               	clrf	??_buttonResponse& (0+255),b
  4303  00C51E  2B9B               	incf	??_buttonResponse& (0+255),f,b
  4304  00C520  EF94  F062         	goto	u4798
  4305  00C524                     u4790:
  4306  00C524  0100               	movlb	0	; () banked
  4307  00C526  6B9B               	clrf	??_buttonResponse& (0+255),b
  4308  00C528                     u4798:
  4309  00C528  519B               	movf	??_buttonResponse& (0+255),w,b
  4310  00C52A  6E01               	movwf	poll_switch1_for_edges@digitalinputpin^0,c
  4311  00C52C  6A02               	clrf	(poll_switch1_for_edges@digitalinputpin+1)^0,c
  4312  00C52E  ECC4  F061         	call	_poll_switch1_for_edges	;wreg free
  4313  00C532  C001  F0CA         	movff	?_poll_switch1_for_edges,_has_switch1_changed
  4314  00C536  C002  F0CB         	movff	?_poll_switch1_for_edges+1,_has_switch1_changed+1
  4315                           
  4316                           ;main.c: 192: DELAY_milliseconds(10);
  4317  00C53A  0E00               	movlw	0
  4318  00C53C  6E02               	movwf	(DELAY_milliseconds@milliseconds+1)^0,c
  4319  00C53E  0E0A               	movlw	10
  4320  00C540  6E01               	movwf	DELAY_milliseconds@milliseconds^0,c
  4321  00C542  EC6D  F060         	call	_DELAY_milliseconds	;wreg free
  4322  00C546                     
  4323                           ;main.c: 193: if ( has_switch1_changed == 1 )
  4324  00C546  0100               	movlb	0	; () banked
  4325  00C548  05CA               	decf	_has_switch1_changed& (0+255),w,b
  4326  00C54A  11CB               	iorwf	(_has_switch1_changed+1)& (0+255),w,b
  4327  00C54C  A4D8               	btfss	status,2,c
  4328  00C54E  EFAB  F062         	goto	u4801
  4329  00C552  EFAD  F062         	goto	u4800
  4330  00C556                     u4801:
  4331  00C556  EFCF  F062         	goto	l577
  4332  00C55A                     u4800:
  4333  00C55A                     
  4334                           ; BSR set to: 0
  4335                           ;main.c: 194: {;main.c: 195: DELAY_milliseconds(10);
  4336  00C55A  0E00               	movlw	0
  4337  00C55C  6E02               	movwf	(DELAY_milliseconds@milliseconds+1)^0,c
  4338  00C55E  0E0A               	movlw	10
  4339  00C560  6E01               	movwf	DELAY_milliseconds@milliseconds^0,c
  4340  00C562  EC6D  F060         	call	_DELAY_milliseconds	;wreg free
  4341  00C566                     
  4342                           ;main.c: 196: counter++;
  4343  00C566  0100               	movlb	0	; () banked
  4344  00C568  4BCC               	infsnz	_counter& (0+255),f,b
  4345  00C56A  2BCD               	incf	(_counter+1)& (0+255),f,b
  4346  00C56C                     
  4347                           ; BSR set to: 0
  4348                           ;main.c: 198: if(counter > 9)
  4349  00C56C  51CD               	movf	(_counter+1)& (0+255),w,b
  4350  00C56E  E109               	bnz	u4810
  4351  00C570  0E0A               	movlw	10
  4352  00C572  5DCC               	subwf	_counter& (0+255),w,b
  4353  00C574  A0D8               	btfss	status,0,c
  4354  00C576  EFBF  F062         	goto	u4811
  4355  00C57A  EFC1  F062         	goto	u4810
  4356  00C57E                     u4811:
  4357  00C57E  EFC5  F062         	goto	l4945
  4358  00C582                     u4810:
  4359  00C582                     
  4360                           ; BSR set to: 0
  4361                           ;main.c: 199: {;main.c: 200: counter = 1;
  4362  00C582  0E00               	movlw	0
  4363  00C584  6FCD               	movwf	(_counter+1)& (0+255),b
  4364  00C586  0E01               	movlw	1
  4365  00C588  6FCC               	movwf	_counter& (0+255),b
  4366  00C58A                     l4945:
  4367                           
  4368                           ; BSR set to: 0
  4369                           ;main.c: 201: };main.c: 202: printf("State = %u \n\r",counter);
  4370  00C58A  0EE3               	movlw	low STR_5
  4371  00C58C  6F76               	movwf	printf@f& (0+255),b
  4372  00C58E  0EFF               	movlw	high STR_5
  4373  00C590  6F77               	movwf	(printf@f+1)& (0+255),b
  4374  00C592  C0CC  F078         	movff	_counter,?_printf+2
  4375  00C596  C0CD  F079         	movff	_counter+1,?_printf+3
  4376  00C59A  ECB0  F07A         	call	_printf	;wreg free
  4377  00C59E                     l577:
  4378  00C59E  0012               	return		;funcret
  4379  00C5A0                     __end_of_buttonResponse:
  4380                           	callstack 0
  4381                           
  4382 ;; *************** function _printf *****************
  4383 ;; Defined at:
  4384 ;;		line 477 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c"
  4385 ;; Parameters:    Size  Location     Type
  4386 ;;  f               2   22[BANK0 ] PTR const unsigned char 
  4387 ;;		 -> STR_8(7), STR_7(9), STR_6(9), STR_5(14), 
  4388 ;;		 -> STR_4(48), STR_3(48), STR_2(48), STR_1(18), 
  4389 ;; Auto vars:     Size  Location     Type
  4390 ;;  fval            4   54[BANK0 ] PTR const unsigned char 
  4391 ;;  tmpval          4   50[BANK0 ] struct .
  4392 ;;  val             4   44[BANK0 ] unsigned long 
  4393 ;;  cp              3    0        PTR const unsigned char 
  4394 ;;  eexp            2   48[BANK0 ] int 
  4395 ;;  prec            2   42[BANK0 ] int 
  4396 ;;  flag            2   40[BANK0 ] unsigned short 
  4397 ;;  ap              2   38[BANK0 ] PTR void [1]
  4398 ;;		 -> ?_printf(2), 
  4399 ;;  len             2    0        unsigned int 
  4400 ;;  width           2    0        int 
  4401 ;;  c               1   58[BANK0 ] unsigned char 
  4402 ;;  d               1    0        unsigned char 
  4403 ;; Return value:  Size  Location     Type
  4404 ;;                  2   22[BANK0 ] int 
  4405 ;; Registers used:
  4406 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4407 ;; Tracked objects:
  4408 ;;		On entry : 0/0
  4409 ;;		On exit  : 0/0
  4410 ;;		Unchanged: 0/0
  4411 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4412 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4413 ;;      Locals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4414 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4415 ;;      Totals:         0      37       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4416 ;;Total ram usage:       37 bytes
  4417 ;; Hardware stack levels used:    1
  4418 ;; Hardware stack levels required when called:    2
  4419 ;; This function calls:
  4420 ;;		___awdiv
  4421 ;;		___fladd
  4422 ;;		___fleq
  4423 ;;		___flge
  4424 ;;		___flmul
  4425 ;;		___flneg
  4426 ;;		___flsub
  4427 ;;		___fltol
  4428 ;;		___lldiv
  4429 ;;		___llmod
  4430 ;;		___wmul
  4431 ;;		___xxtofl
  4432 ;;		__div_to_l_
  4433 ;;		__tdiv_to_l_
  4434 ;;		_fround
  4435 ;;		_putch
  4436 ;;		_scale
  4437 ;; This function is called by:
  4438 ;;		_main
  4439 ;;		_buttonResponse
  4440 ;;		_clearPuTTY
  4441 ;; This function uses a non-reentrant model
  4442 ;;
  4443                           
  4444                           	psect	text11
  4445  00F560                     __ptext11:
  4446                           	callstack 0
  4447  00F560                     _printf:
  4448                           	callstack 28
  4449  00F560                     
  4450                           ;doprnt.c: 479: va_list ap;;doprnt.c: 512: char c;;doprnt.c: 514: int width;;doprnt.c: 5
      +                          17: int prec;;doprnt.c: 525: unsigned short flag;;doprnt.c: 532: char d;;doprnt.c: 533: 
      +                          double fval;;doprnt.c: 534: int eexp;;doprnt.c: 540: union {;doprnt.c: 541: unsigned lon
      +                          g vd;;doprnt.c: 542: double integ;;doprnt.c: 543: } tmpval;;doprnt.c: 545: unsigned long
      +                           val;;doprnt.c: 546: unsigned len;;doprnt.c: 547: const char * cp;;doprnt.c: 550: *ap = 
      +                          __va_start();
  4451  00F560  0E78               	movlw	low (?_printf+2)
  4452  00F562  0100               	movlb	0	; () banked
  4453  00F564  6F86               	movwf	printf@ap& (0+255),b
  4454  00F566  0E00               	movlw	high (?_printf+2)
  4455  00F568  6F87               	movwf	(printf@ap+1)& (0+255),b
  4456                           
  4457                           ;doprnt.c: 553: while((c = *f++)) {
  4458  00F56A  EF33  F07F         	goto	l4763
  4459  00F56E                     l4581:
  4460                           
  4461                           ; BSR set to: 0
  4462                           ;doprnt.c: 555: if(c != '%')
  4463  00F56E  0E25               	movlw	37
  4464  00F570  199A               	xorwf	printf@c& (0+255),w,b
  4465  00F572  B4D8               	btfsc	status,2,c
  4466  00F574  EFBE  F07A         	goto	u4231
  4467  00F578  EFC0  F07A         	goto	u4230
  4468  00F57C                     u4231:
  4469  00F57C  EFC5  F07A         	goto	l4585
  4470  00F580                     u4230:
  4471  00F580                     
  4472                           ; BSR set to: 0
  4473                           ;doprnt.c: 557: {;doprnt.c: 558: (putch(c) );
  4474  00F580  519A               	movf	printf@c& (0+255),w,b
  4475  00F582  ECC2  F05F         	call	_putch
  4476                           
  4477                           ;doprnt.c: 559: continue;
  4478  00F586  EF33  F07F         	goto	l4763
  4479  00F58A                     l4585:
  4480                           
  4481                           ; BSR set to: 0
  4482                           ;doprnt.c: 560: };doprnt.c: 565: flag = 0;
  4483  00F58A  0E00               	movlw	0
  4484  00F58C  6F89               	movwf	(printf@flag+1)& (0+255),b
  4485  00F58E  0E00               	movlw	0
  4486  00F590  6F88               	movwf	printf@flag& (0+255),b
  4487                           
  4488                           ;doprnt.c: 661: switch(c = *f++) {
  4489  00F592  EFE3  F07A         	goto	l4599
  4490  00F596                     l4587:
  4491                           
  4492                           ; BSR set to: 0
  4493                           ;doprnt.c: 689: flag |= 0x400;
  4494  00F596  8589               	bsf	(printf@flag+1)& (0+255),2,b
  4495                           
  4496                           ;doprnt.c: 690: break;
  4497  00F598  EF03  F07B         	goto	l4601
  4498  00F59C                     l4589:
  4499                           
  4500                           ; BSR set to: 0
  4501                           ;doprnt.c: 825: c = (char)(*(int *)__va_arg((*(int **)ap), (int)0));
  4502  00F59C  0060  F21B  FFD9   	movff	printf@ap,fsr2l
  4503  00F5A2  0060  F21F  FFDA   	movff	printf@ap+1,fsr2h
  4504  00F5A8  50DF               	movf	indf2,w,c
  4505  00F5AA  6F9A               	movwf	printf@c& (0+255),b
  4506  00F5AC                     
  4507                           ; BSR set to: 0
  4508  00F5AC  0E02               	movlw	2
  4509  00F5AE  2786               	addwf	printf@ap& (0+255),f,b
  4510  00F5B0  0E00               	movlw	0
  4511  00F5B2  2387               	addwfc	(printf@ap+1)& (0+255),f,b
  4512  00F5B4                     l4593:
  4513                           
  4514                           ; BSR set to: 0
  4515                           ;doprnt.c: 835: (putch(c) );
  4516  00F5B4  519A               	movf	printf@c& (0+255),w,b
  4517  00F5B6  ECC2  F05F         	call	_putch
  4518                           
  4519                           ;doprnt.c: 836: continue;
  4520  00F5BA  EF33  F07F         	goto	l4763
  4521  00F5BE                     l4595:
  4522                           
  4523                           ; BSR set to: 0
  4524                           ;doprnt.c: 844: flag |= 0xC0;
  4525  00F5BE  0EC0               	movlw	192
  4526  00F5C0  1388               	iorwf	printf@flag& (0+255),f,b
  4527                           
  4528                           ;doprnt.c: 845: break;
  4529  00F5C2  EF03  F07B         	goto	l4601
  4530  00F5C6                     l4599:
  4531                           
  4532                           ; BSR set to: 0
  4533  00F5C6  0060  F1DB  FFF6   	movff	printf@f,tblptrl
  4534  00F5CC  0060  F1DF  FFF7   	movff	printf@f+1,tblptrh
  4535  00F5D2  4B76               	infsnz	printf@f& (0+255),f,b
  4536  00F5D4  2B77               	incf	(printf@f+1)& (0+255),f,b
  4537  00F5D6                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4538  00F5D6  6AF8               	clrf	tblptru,c
  4539  00F5D8                     	endif
  4540  00F5D8                     	if	0	;tblptru may be non-zero
  4541  00F5D8                     	endif
  4542  00F5D8  0008               	tblrd		*
  4543  00F5DA  006F FFD4  F09A    	movff	tablat,printf@c
  4544  00F5E0  519A               	movf	printf@c& (0+255),w,b
  4545                           
  4546                           ; Switch size 1, requested type "simple"
  4547                           ; Number of cases is 4, Range of values is 0 to 117
  4548                           ; switch strategies available:
  4549                           ; Name         Instructions Cycles
  4550                           ; simple_byte           13     7 (average)
  4551                           ;	Chosen strategy is simple_byte
  4552  00F5E2  0A00               	xorlw	0	; case 0
  4553  00F5E4  B4D8               	btfsc	status,2,c
  4554  00F5E6  EF49  F07F         	goto	l708
  4555  00F5EA  0A63               	xorlw	99	; case 99
  4556  00F5EC  B4D8               	btfsc	status,2,c
  4557  00F5EE  EFCE  F07A         	goto	l4589
  4558  00F5F2  0A05               	xorlw	5	; case 102
  4559  00F5F4  B4D8               	btfsc	status,2,c
  4560  00F5F6  EFCB  F07A         	goto	l4587
  4561  00F5FA  0A13               	xorlw	19	; case 117
  4562  00F5FC  B4D8               	btfsc	status,2,c
  4563  00F5FE  EFDF  F07A         	goto	l4595
  4564  00F602  EFDA  F07A         	goto	l4593
  4565  00F606                     l4601:
  4566                           
  4567                           ; BSR set to: 0
  4568                           ;doprnt.c: 851: if(flag & (0x700)) {
  4569  00F606  0E07               	movlw	7
  4570  00F608  1589               	andwf	(printf@flag+1)& (0+255),w,b
  4571  00F60A  B4D8               	btfsc	status,2,c
  4572  00F60C  EF0A  F07B         	goto	u4241
  4573  00F610  EF0C  F07B         	goto	u4240
  4574  00F614                     u4241:
  4575  00F614  EF85  F07E         	goto	l4733
  4576  00F618                     u4240:
  4577  00F618                     
  4578                           ; BSR set to: 0
  4579                           ;doprnt.c: 855: prec = 6;
  4580  00F618  0E00               	movlw	0
  4581  00F61A  6F8B               	movwf	(printf@prec+1)& (0+255),b
  4582  00F61C  0E06               	movlw	6
  4583  00F61E  6F8A               	movwf	printf@prec& (0+255),b
  4584  00F620                     
  4585                           ; BSR set to: 0
  4586                           ;doprnt.c: 856: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
  4587  00F620  0060  F21B  FFD9   	movff	printf@ap,fsr2l
  4588  00F626  0060  F21F  FFDA   	movff	printf@ap+1,fsr2h
  4589  00F62C  006F FF78  F096    	movff	postinc2,printf@fval
  4590  00F632  006F FF78  F097    	movff	postinc2,printf@fval+1
  4591  00F638  006F FF78  F098    	movff	postinc2,printf@fval+2
  4592  00F63E  006F FF78  F099    	movff	postinc2,printf@fval+3
  4593  00F644                     
  4594                           ; BSR set to: 0
  4595  00F644  0E04               	movlw	4
  4596  00F646  2786               	addwf	printf@ap& (0+255),f,b
  4597  00F648  0E00               	movlw	0
  4598  00F64A  2387               	addwfc	(printf@ap+1)& (0+255),f,b
  4599  00F64C                     
  4600                           ; BSR set to: 0
  4601                           ;doprnt.c: 857: if(fval < 0.0) {
  4602  00F64C  BF99               	btfsc	(printf@fval+3)& (0+255),7,b
  4603  00F64E  EF2D  F07B         	goto	u4250
  4604  00F652  EF2B  F07B         	goto	u4251
  4605  00F656                     u4251:
  4606  00F656  EF42  F07B         	goto	l4615
  4607  00F65A                     u4250:
  4608  00F65A                     
  4609                           ; BSR set to: 0
  4610                           ;doprnt.c: 858: fval = -fval;
  4611  00F65A  C096  F001         	movff	printf@fval,___flneg@f1
  4612  00F65E  C097  F002         	movff	printf@fval+1,___flneg@f1+1
  4613  00F662  C098  F003         	movff	printf@fval+2,___flneg@f1+2
  4614  00F666  C099  F004         	movff	printf@fval+3,___flneg@f1+3
  4615  00F66A  ECEA  F060         	call	___flneg	;wreg free
  4616  00F66E  C001  F096         	movff	?___flneg,printf@fval
  4617  00F672  C002  F097         	movff	?___flneg+1,printf@fval+1
  4618  00F676  C003  F098         	movff	?___flneg+2,printf@fval+2
  4619  00F67A  C004  F099         	movff	?___flneg+3,printf@fval+3
  4620  00F67E                     
  4621                           ;doprnt.c: 859: flag |= 0x03;
  4622  00F67E  0E03               	movlw	3
  4623  00F680  0100               	movlb	0	; () banked
  4624  00F682  1388               	iorwf	printf@flag& (0+255),f,b
  4625  00F684                     l4615:
  4626                           
  4627                           ; BSR set to: 0
  4628                           ;doprnt.c: 860: };doprnt.c: 861: eexp = 0;
  4629  00F684  0E00               	movlw	0
  4630  00F686  6F91               	movwf	(printf@eexp+1)& (0+255),b
  4631  00F688  0E00               	movlw	0
  4632  00F68A  6F90               	movwf	printf@eexp& (0+255),b
  4633  00F68C                     
  4634                           ; BSR set to: 0
  4635                           ;doprnt.c: 862: if( fval!=0) {
  4636  00F68C  C096  F027         	movff	printf@fval,___fleq@ff1
  4637  00F690  C097  F028         	movff	printf@fval+1,___fleq@ff1+1
  4638  00F694  C098  F029         	movff	printf@fval+2,___fleq@ff1+2
  4639  00F698  C099  F02A         	movff	printf@fval+3,___fleq@ff1+3
  4640  00F69C  0E00               	movlw	0
  4641  00F69E  6E2B               	movwf	___fleq@ff2^0,c
  4642  00F6A0  0E00               	movlw	0
  4643  00F6A2  6E2C               	movwf	(___fleq@ff2+1)^0,c
  4644  00F6A4  0E00               	movlw	0
  4645  00F6A6  6E2D               	movwf	(___fleq@ff2+2)^0,c
  4646  00F6A8  0E00               	movlw	0
  4647  00F6AA  6E2E               	movwf	(___fleq@ff2+3)^0,c
  4648  00F6AC  EC76  F063         	call	___fleq	;wreg free
  4649  00F6B0  B0D8               	btfsc	status,0,c
  4650  00F6B2  EF5D  F07B         	goto	u4261
  4651  00F6B6  EF5F  F07B         	goto	u4260
  4652  00F6BA                     u4261:
  4653  00F6BA  EFF2  F07B         	goto	l4643
  4654  00F6BE                     u4260:
  4655  00F6BE                     
  4656                           ;doprnt.c: 863: (void)(*(&eexp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255)
      +                           - 126);
  4657  00F6BE  0100               	movlb	0	; () banked
  4658  00F6C0  3598               	rlcf	(printf@fval+2)& (0+255),w,b
  4659  00F6C2  3599               	rlcf	(printf@fval+3)& (0+255),w,b
  4660  00F6C4  0F82               	addlw	130
  4661  00F6C6  6F90               	movwf	printf@eexp& (0+255),b
  4662  00F6C8  6B91               	clrf	(printf@eexp+1)& (0+255),b
  4663  00F6CA  0EFF               	movlw	255
  4664  00F6CC  2391               	addwfc	(printf@eexp+1)& (0+255),f,b
  4665  00F6CE                     
  4666                           ; BSR set to: 0
  4667                           ;doprnt.c: 864: eexp--;
  4668  00F6CE  0790               	decf	printf@eexp& (0+255),f,b
  4669  00F6D0  A0D8               	btfss	status,0,c
  4670  00F6D2  0791               	decf	(printf@eexp+1)& (0+255),f,b
  4671  00F6D4                     
  4672                           ; BSR set to: 0
  4673                           ;doprnt.c: 865: eexp *= 3;
  4674  00F6D4  C090  F001         	movff	printf@eexp,___wmul@multiplier
  4675  00F6D8  C091  F002         	movff	printf@eexp+1,___wmul@multiplier+1
  4676  00F6DC  0E00               	movlw	0
  4677  00F6DE  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  4678  00F6E0  0E03               	movlw	3
  4679  00F6E2  6E03               	movwf	___wmul@multiplicand^0,c
  4680  00F6E4  EC58  F060         	call	___wmul	;wreg free
  4681  00F6E8  C001  F090         	movff	?___wmul,printf@eexp
  4682  00F6EC  C002  F091         	movff	?___wmul+1,printf@eexp+1
  4683  00F6F0                     
  4684                           ;doprnt.c: 866: eexp /= 10;
  4685  00F6F0  C090  F007         	movff	printf@eexp,___awdiv@dividend
  4686  00F6F4  C091  F008         	movff	printf@eexp+1,___awdiv@dividend+1
  4687  00F6F8  0E00               	movlw	0
  4688  00F6FA  6E0A               	movwf	(___awdiv@divisor+1)^0,c
  4689  00F6FC  0E0A               	movlw	10
  4690  00F6FE  6E09               	movwf	___awdiv@divisor^0,c
  4691  00F700  EC23  F064         	call	___awdiv	;wreg free
  4692  00F704  C007  F090         	movff	?___awdiv,printf@eexp
  4693  00F708  C008  F091         	movff	?___awdiv+1,printf@eexp+1
  4694  00F70C                     
  4695                           ;doprnt.c: 867: if(eexp < 0)
  4696  00F70C  0100               	movlb	0	; () banked
  4697  00F70E  BF91               	btfsc	(printf@eexp+1)& (0+255),7,b
  4698  00F710  EF8E  F07B         	goto	u4270
  4699  00F714  EF8C  F07B         	goto	u4271
  4700  00F718                     u4271:
  4701  00F718  EF91  F07B         	goto	l4631
  4702  00F71C                     u4270:
  4703  00F71C                     
  4704                           ; BSR set to: 0
  4705                           ;doprnt.c: 868: eexp--;
  4706  00F71C  0790               	decf	printf@eexp& (0+255),f,b
  4707  00F71E  A0D8               	btfss	status,0,c
  4708  00F720  0791               	decf	(printf@eexp+1)& (0+255),f,b
  4709  00F722                     l4631:
  4710                           
  4711                           ; BSR set to: 0
  4712                           ;doprnt.c: 872: tmpval.integ = scale(-eexp);
  4713  00F722  5190               	movf	printf@eexp& (0+255),w,b
  4714  00F724  0800               	sublw	0
  4715  00F726  ECD2  F072         	call	_scale
  4716  00F72A  C057  F092         	movff	?_scale,printf@tmpval
  4717  00F72E  C058  F093         	movff	?_scale+1,printf@tmpval+1
  4718  00F732  C059  F094         	movff	?_scale+2,printf@tmpval+2
  4719  00F736  C05A  F095         	movff	?_scale+3,printf@tmpval+3
  4720  00F73A                     
  4721                           ;doprnt.c: 873: tmpval.integ *= fval;
  4722  00F73A  C092  F04B         	movff	printf@tmpval,___flmul@b
  4723  00F73E  C093  F04C         	movff	printf@tmpval+1,___flmul@b+1
  4724  00F742  C094  F04D         	movff	printf@tmpval+2,___flmul@b+2
  4725  00F746  C095  F04E         	movff	printf@tmpval+3,___flmul@b+3
  4726  00F74A  C096  F04F         	movff	printf@fval,___flmul@a
  4727  00F74E  C097  F050         	movff	printf@fval+1,___flmul@a+1
  4728  00F752  C098  F051         	movff	printf@fval+2,___flmul@a+2
  4729  00F756  C099  F052         	movff	printf@fval+3,___flmul@a+3
  4730  00F75A  ECAA  F070         	call	___flmul	;wreg free
  4731  00F75E  C04B  F092         	movff	?___flmul,printf@tmpval
  4732  00F762  C04C  F093         	movff	?___flmul+1,printf@tmpval+1
  4733  00F766  C04D  F094         	movff	?___flmul+2,printf@tmpval+2
  4734  00F76A  C04E  F095         	movff	?___flmul+3,printf@tmpval+3
  4735  00F76E                     
  4736                           ;doprnt.c: 874: if(tmpval.integ < 1.0)
  4737  00F76E  C092  F001         	movff	printf@tmpval,___flge@ff1
  4738  00F772  C093  F002         	movff	printf@tmpval+1,___flge@ff1+1
  4739  00F776  C094  F003         	movff	printf@tmpval+2,___flge@ff1+2
  4740  00F77A  C095  F004         	movff	printf@tmpval+3,___flge@ff1+3
  4741  00F77E  0E00               	movlw	0
  4742  00F780  6E05               	movwf	___flge@ff2^0,c
  4743  00F782  0E00               	movlw	0
  4744  00F784  6E06               	movwf	(___flge@ff2+1)^0,c
  4745  00F786  0E80               	movlw	128
  4746  00F788  6E07               	movwf	(___flge@ff2+2)^0,c
  4747  00F78A  0E3F               	movlw	63
  4748  00F78C  6E08               	movwf	(___flge@ff2+3)^0,c
  4749  00F78E  ECF1  F064         	call	___flge	;wreg free
  4750  00F792  B0D8               	btfsc	status,0,c
  4751  00F794  EFCE  F07B         	goto	u4281
  4752  00F798  EFD0  F07B         	goto	u4280
  4753  00F79C                     u4281:
  4754  00F79C  EFD6  F07B         	goto	l4639
  4755  00F7A0                     u4280:
  4756  00F7A0                     
  4757                           ;doprnt.c: 875: eexp--;
  4758  00F7A0  0100               	movlb	0	; () banked
  4759  00F7A2  0790               	decf	printf@eexp& (0+255),f,b
  4760  00F7A4  A0D8               	btfss	status,0,c
  4761  00F7A6  0791               	decf	(printf@eexp+1)& (0+255),f,b
  4762  00F7A8  EFF2  F07B         	goto	l4643
  4763  00F7AC                     l4639:
  4764                           
  4765                           ;doprnt.c: 876: else if(tmpval.integ >= 10.0)
  4766  00F7AC  C092  F001         	movff	printf@tmpval,___flge@ff1
  4767  00F7B0  C093  F002         	movff	printf@tmpval+1,___flge@ff1+1
  4768  00F7B4  C094  F003         	movff	printf@tmpval+2,___flge@ff1+2
  4769  00F7B8  C095  F004         	movff	printf@tmpval+3,___flge@ff1+3
  4770  00F7BC  0E00               	movlw	0
  4771  00F7BE  6E05               	movwf	___flge@ff2^0,c
  4772  00F7C0  0E00               	movlw	0
  4773  00F7C2  6E06               	movwf	(___flge@ff2+1)^0,c
  4774  00F7C4  0E20               	movlw	32
  4775  00F7C6  6E07               	movwf	(___flge@ff2+2)^0,c
  4776  00F7C8  0E41               	movlw	65
  4777  00F7CA  6E08               	movwf	(___flge@ff2+3)^0,c
  4778  00F7CC  ECF1  F064         	call	___flge	;wreg free
  4779  00F7D0  A0D8               	btfss	status,0,c
  4780  00F7D2  EFED  F07B         	goto	u4291
  4781  00F7D6  EFEF  F07B         	goto	u4290
  4782  00F7DA                     u4291:
  4783  00F7DA  EFF2  F07B         	goto	l4643
  4784  00F7DE                     u4290:
  4785  00F7DE                     
  4786                           ;doprnt.c: 877: eexp++;
  4787  00F7DE  0100               	movlb	0	; () banked
  4788  00F7E0  4B90               	infsnz	printf@eexp& (0+255),f,b
  4789  00F7E2  2B91               	incf	(printf@eexp+1)& (0+255),f,b
  4790  00F7E4                     l4643:
  4791  00F7E4                     
  4792                           ;doprnt.c: 1139: fval += fround((unsigned int)prec);
  4793  00F7E4  C096  F03B         	movff	printf@fval,___fladd@b
  4794  00F7E8  C097  F03C         	movff	printf@fval+1,___fladd@b+1
  4795  00F7EC  C098  F03D         	movff	printf@fval+2,___fladd@b+2
  4796  00F7F0  C099  F03E         	movff	printf@fval+3,___fladd@b+3
  4797  00F7F4  0E06               	movlw	6
  4798  00F7F6  EC5F  F06D         	call	_fround
  4799  00F7FA  C057  F03F         	movff	?_fround,___fladd@a
  4800  00F7FE  C058  F040         	movff	?_fround+1,___fladd@a+1
  4801  00F802  C059  F041         	movff	?_fround+2,___fladd@a+2
  4802  00F806  C05A  F042         	movff	?_fround+3,___fladd@a+3
  4803  00F80A  EC2C  F075         	call	___fladd	;wreg free
  4804  00F80E  C03B  F096         	movff	?___fladd,printf@fval
  4805  00F812  C03C  F097         	movff	?___fladd+1,printf@fval+1
  4806  00F816  C03D  F098         	movff	?___fladd+2,printf@fval+2
  4807  00F81A  C03E  F099         	movff	?___fladd+3,printf@fval+3
  4808  00F81E                     
  4809                           ;doprnt.c: 1142: if((eexp > 9)||(fval != 0 && (unsigned long)fval == 0 && eexp > 1)) {
  4810  00F81E  0100               	movlb	0	; () banked
  4811  00F820  BF91               	btfsc	(printf@eexp+1)& (0+255),7,b
  4812  00F822  EF1E  F07C         	goto	u4300
  4813  00F826  5191               	movf	(printf@eexp+1)& (0+255),w,b
  4814  00F828  E107               	bnz	u4301
  4815  00F82A  0E0A               	movlw	10
  4816  00F82C  5D90               	subwf	printf@eexp& (0+255),w,b
  4817  00F82E  B0D8               	btfsc	status,0,c
  4818  00F830  EF1C  F07C         	goto	u4301
  4819  00F834  EF1E  F07C         	goto	u4300
  4820  00F838                     u4301:
  4821  00F838  EF5B  F07C         	goto	l4655
  4822  00F83C                     u4300:
  4823  00F83C                     
  4824                           ; BSR set to: 0
  4825  00F83C  C096  F027         	movff	printf@fval,___fleq@ff1
  4826  00F840  C097  F028         	movff	printf@fval+1,___fleq@ff1+1
  4827  00F844  C098  F029         	movff	printf@fval+2,___fleq@ff1+2
  4828  00F848  C099  F02A         	movff	printf@fval+3,___fleq@ff1+3
  4829  00F84C  0E00               	movlw	0
  4830  00F84E  6E2B               	movwf	___fleq@ff2^0,c
  4831  00F850  0E00               	movlw	0
  4832  00F852  6E2C               	movwf	(___fleq@ff2+1)^0,c
  4833  00F854  0E00               	movlw	0
  4834  00F856  6E2D               	movwf	(___fleq@ff2+2)^0,c
  4835  00F858  0E00               	movlw	0
  4836  00F85A  6E2E               	movwf	(___fleq@ff2+3)^0,c
  4837  00F85C  EC76  F063         	call	___fleq	;wreg free
  4838  00F860  B0D8               	btfsc	status,0,c
  4839  00F862  EF35  F07C         	goto	u4311
  4840  00F866  EF37  F07C         	goto	u4310
  4841  00F86A                     u4311:
  4842  00F86A  EFB0  F07C         	goto	l4669
  4843  00F86E                     u4310:
  4844  00F86E  C096  F00F         	movff	printf@fval,___fltol@f1
  4845  00F872  C097  F010         	movff	printf@fval+1,___fltol@f1+1
  4846  00F876  C098  F011         	movff	printf@fval+2,___fltol@f1+2
  4847  00F87A  C099  F012         	movff	printf@fval+3,___fltol@f1+3
  4848  00F87E  EC73  F065         	call	___fltol	;wreg free
  4849  00F882  500F               	movf	?___fltol^0,w,c
  4850  00F884  1010               	iorwf	(?___fltol+1)^0,w,c
  4851  00F886  1011               	iorwf	(?___fltol+2)^0,w,c
  4852  00F888  1012               	iorwf	(?___fltol+3)^0,w,c
  4853  00F88A  A4D8               	btfss	status,2,c
  4854  00F88C  EF4A  F07C         	goto	u4321
  4855  00F890  EF4C  F07C         	goto	u4320
  4856  00F894                     u4321:
  4857  00F894  EFB0  F07C         	goto	l4669
  4858  00F898                     u4320:
  4859  00F898  0100               	movlb	0	; () banked
  4860  00F89A  BF91               	btfsc	(printf@eexp+1)& (0+255),7,b
  4861  00F89C  EF59  F07C         	goto	u4331
  4862  00F8A0  5191               	movf	(printf@eexp+1)& (0+255),w,b
  4863  00F8A2  E109               	bnz	u4330
  4864  00F8A4  0E02               	movlw	2
  4865  00F8A6  5D90               	subwf	printf@eexp& (0+255),w,b
  4866  00F8A8  A0D8               	btfss	status,0,c
  4867  00F8AA  EF59  F07C         	goto	u4331
  4868  00F8AE  EF5B  F07C         	goto	u4330
  4869  00F8B2                     u4331:
  4870  00F8B2  EFB0  F07C         	goto	l4669
  4871  00F8B6                     u4330:
  4872  00F8B6                     l4655:
  4873                           
  4874                           ; BSR set to: 0
  4875                           ;doprnt.c: 1146: if(tmpval.integ < 4.294967296){
  4876  00F8B6  C092  F001         	movff	printf@tmpval,___flge@ff1
  4877  00F8BA  C093  F002         	movff	printf@tmpval+1,___flge@ff1+1
  4878  00F8BE  C094  F003         	movff	printf@tmpval+2,___flge@ff1+2
  4879  00F8C2  C095  F004         	movff	printf@tmpval+3,___flge@ff1+3
  4880  00F8C6  0E5F               	movlw	95
  4881  00F8C8  6E05               	movwf	___flge@ff2^0,c
  4882  00F8CA  0E70               	movlw	112
  4883  00F8CC  6E06               	movwf	(___flge@ff2+1)^0,c
  4884  00F8CE  0E89               	movlw	137
  4885  00F8D0  6E07               	movwf	(___flge@ff2+2)^0,c
  4886  00F8D2  0E40               	movlw	64
  4887  00F8D4  6E08               	movwf	(___flge@ff2+3)^0,c
  4888  00F8D6  ECF1  F064         	call	___flge	;wreg free
  4889  00F8DA  B0D8               	btfsc	status,0,c
  4890  00F8DC  EF72  F07C         	goto	u4341
  4891  00F8E0  EF74  F07C         	goto	u4340
  4892  00F8E4                     u4341:
  4893  00F8E4  EF7B  F07C         	goto	l4659
  4894  00F8E8                     u4340:
  4895  00F8E8                     
  4896                           ;doprnt.c: 1147: eexp -= (sizeof dpowers/sizeof dpowers[0])-1;
  4897  00F8E8  0100               	movlb	0	; () banked
  4898  00F8EA  0EF7               	movlw	247
  4899  00F8EC  2790               	addwf	printf@eexp& (0+255),f,b
  4900  00F8EE  0EFF               	movlw	255
  4901  00F8F0  2391               	addwfc	(printf@eexp+1)& (0+255),f,b
  4902                           
  4903                           ;doprnt.c: 1148: }else{
  4904  00F8F2  EF80  F07C         	goto	l4661
  4905  00F8F6                     l4659:
  4906                           
  4907                           ;doprnt.c: 1149: eexp -= (sizeof dpowers/sizeof dpowers[0])-2;
  4908  00F8F6  0100               	movlb	0	; () banked
  4909  00F8F8  0EF8               	movlw	248
  4910  00F8FA  2790               	addwf	printf@eexp& (0+255),f,b
  4911  00F8FC  0EFF               	movlw	255
  4912  00F8FE  2391               	addwfc	(printf@eexp+1)& (0+255),f,b
  4913  00F900                     l4661:
  4914                           
  4915                           ; BSR set to: 0
  4916                           ;doprnt.c: 1152: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
  4917  00F900  5190               	movf	printf@eexp& (0+255),w,b
  4918  00F902  ECD2  F072         	call	_scale
  4919  00F906  C057  F092         	movff	?_scale,printf@tmpval
  4920  00F90A  C058  F093         	movff	?_scale+1,printf@tmpval+1
  4921  00F90E  C059  F094         	movff	?_scale+2,printf@tmpval+2
  4922  00F912  C05A  F095         	movff	?_scale+3,printf@tmpval+3
  4923  00F916  C096  F001         	movff	printf@fval,__div_to_l_@f1
  4924  00F91A  C097  F002         	movff	printf@fval+1,__div_to_l_@f1+1
  4925  00F91E  C098  F003         	movff	printf@fval+2,__div_to_l_@f1+2
  4926  00F922  C099  F004         	movff	printf@fval+3,__div_to_l_@f1+3
  4927  00F926  C092  F005         	movff	printf@tmpval,__div_to_l_@f2
  4928  00F92A  C093  F006         	movff	printf@tmpval+1,__div_to_l_@f2+1
  4929  00F92E  C094  F007         	movff	printf@tmpval+2,__div_to_l_@f2+2
  4930  00F932  C095  F008         	movff	printf@tmpval+3,__div_to_l_@f2+3
  4931  00F936  ECC1  F067         	call	__div_to_l_	;wreg free
  4932  00F93A  C001  F08C         	movff	?__div_to_l_,printf@val
  4933  00F93E  C002  F08D         	movff	?__div_to_l_+1,printf@val+1
  4934  00F942  C003  F08E         	movff	?__div_to_l_+2,printf@val+2
  4935  00F946  C004  F08F         	movff	?__div_to_l_+3,printf@val+3
  4936  00F94A                     
  4937                           ;doprnt.c: 1155: fval = 0.0;
  4938  00F94A  0E00               	movlw	0
  4939  00F94C  0100               	movlb	0	; () banked
  4940  00F94E  6F96               	movwf	printf@fval& (0+255),b
  4941  00F950  0E00               	movlw	0
  4942  00F952  6F97               	movwf	(printf@fval+1)& (0+255),b
  4943  00F954  0E00               	movlw	0
  4944  00F956  6F98               	movwf	(printf@fval+2)& (0+255),b
  4945  00F958  0E00               	movlw	0
  4946  00F95A  6F99               	movwf	(printf@fval+3)& (0+255),b
  4947                           
  4948                           ;doprnt.c: 1156: } else {
  4949  00F95C  EFEC  F07C         	goto	l4673
  4950  00F960                     l4669:
  4951                           
  4952                           ;doprnt.c: 1157: val = (unsigned long)fval;
  4953  00F960  C096  F00F         	movff	printf@fval,___fltol@f1
  4954  00F964  C097  F010         	movff	printf@fval+1,___fltol@f1+1
  4955  00F968  C098  F011         	movff	printf@fval+2,___fltol@f1+2
  4956  00F96C  C099  F012         	movff	printf@fval+3,___fltol@f1+3
  4957  00F970  EC73  F065         	call	___fltol	;wreg free
  4958  00F974  C00F  F08C         	movff	?___fltol,printf@val
  4959  00F978  C010  F08D         	movff	?___fltol+1,printf@val+1
  4960  00F97C  C011  F08E         	movff	?___fltol+2,printf@val+2
  4961  00F980  C012  F08F         	movff	?___fltol+3,printf@val+3
  4962                           
  4963                           ;doprnt.c: 1158: fval -= (double)val;
  4964  00F984  C096  F057         	movff	printf@fval,___flsub@b
  4965  00F988  C097  F058         	movff	printf@fval+1,___flsub@b+1
  4966  00F98C  C098  F059         	movff	printf@fval+2,___flsub@b+2
  4967  00F990  C099  F05A         	movff	printf@fval+3,___flsub@b+3
  4968  00F994  C08C  F019         	movff	printf@val,___xxtofl@val
  4969  00F998  C08D  F01A         	movff	printf@val+1,___xxtofl@val+1
  4970  00F99C  C08E  F01B         	movff	printf@val+2,___xxtofl@val+2
  4971  00F9A0  C08F  F01C         	movff	printf@val+3,___xxtofl@val+3
  4972  00F9A4  0E00               	movlw	0
  4973  00F9A6  ECE1  F069         	call	___xxtofl
  4974  00F9AA  C019  F05B         	movff	?___xxtofl,___flsub@a
  4975  00F9AE  C01A  F05C         	movff	?___xxtofl+1,___flsub@a+1
  4976  00F9B2  C01B  F05D         	movff	?___xxtofl+2,___flsub@a+2
  4977  00F9B6  C01C  F05E         	movff	?___xxtofl+3,___flsub@a+3
  4978  00F9BA  EC06  F061         	call	___flsub	;wreg free
  4979  00F9BE  C057  F096         	movff	?___flsub,printf@fval
  4980  00F9C2  C058  F097         	movff	?___flsub+1,printf@fval+1
  4981  00F9C6  C059  F098         	movff	?___flsub+2,printf@fval+2
  4982  00F9CA  C05A  F099         	movff	?___flsub+3,printf@fval+3
  4983  00F9CE                     
  4984                           ;doprnt.c: 1159: eexp = 0;
  4985  00F9CE  0E00               	movlw	0
  4986  00F9D0  0100               	movlb	0	; () banked
  4987  00F9D2  6F91               	movwf	(printf@eexp+1)& (0+255),b
  4988  00F9D4  0E00               	movlw	0
  4989  00F9D6  6F90               	movwf	printf@eexp& (0+255),b
  4990  00F9D8                     l4673:
  4991                           
  4992                           ; BSR set to: 0
  4993                           ;doprnt.c: 1160: };doprnt.c: 1162: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ;
      +                           c++)
  4994  00F9D8  0E01               	movlw	1
  4995  00F9DA  6F9A               	movwf	printf@c& (0+255),b
  4996  00F9DC                     l4679:
  4997                           
  4998                           ; BSR set to: 0
  4999                           ;doprnt.c: 1163: if(val < dpowers[c])
  5000  00F9DC  519A               	movf	printf@c& (0+255),w,b
  5001  00F9DE  0D04               	mullw	4
  5002  00F9E0  0E25               	movlw	low _dpowers
  5003  00F9E2  24F3               	addwf	243,w,c
  5004  00F9E4  6EF6               	movwf	tblptrl,c
  5005  00F9E6  0EFF               	movlw	high _dpowers
  5006  00F9E8  20F4               	addwfc	244,w,c
  5007  00F9EA  6EF7               	movwf	tblptrh,c
  5008  00F9EC                     	if	1	;There are 3 active tblptr bytes
  5009  00F9EC  6AF8               	clrf	tblptru,c
  5010  00F9EE  0E00               	movlw	low (__mediumconst shr (0+16))
  5011  00F9F0  22F8               	addwfc	tblptru,f,c
  5012  00F9F2                     	endif
  5013  00F9F2  0009               	tblrd		*+
  5014  00F9F4  50F5               	movf	tablat,w,c
  5015  00F9F6  5D8C               	subwf	printf@val& (0+255),w,b
  5016  00F9F8  0009               	tblrd		*+
  5017  00F9FA  50F5               	movf	tablat,w,c
  5018  00F9FC  598D               	subwfb	(printf@val+1)& (0+255),w,b
  5019  00F9FE  0009               	tblrd		*+
  5020  00FA00  50F5               	movf	tablat,w,c
  5021  00FA02  598E               	subwfb	(printf@val+2)& (0+255),w,b
  5022  00FA04  0009               	tblrd		*+
  5023  00FA06  50F5               	movf	tablat,w,c
  5024  00FA08  598F               	subwfb	(printf@val+3)& (0+255),w,b
  5025  00FA0A  B0D8               	btfsc	status,0,c
  5026  00FA0C  EF0A  F07D         	goto	u4351
  5027  00FA10  EF0C  F07D         	goto	u4350
  5028  00FA14                     u4351:
  5029  00FA14  EF0E  F07D         	goto	l4683
  5030  00FA18                     u4350:
  5031  00FA18  EF18  F07D         	goto	l4687
  5032  00FA1C                     l4683:
  5033                           
  5034                           ; BSR set to: 0
  5035  00FA1C  2B9A               	incf	printf@c& (0+255),f,b
  5036  00FA1E                     
  5037                           ; BSR set to: 0
  5038  00FA1E  0E0A               	movlw	10
  5039  00FA20  199A               	xorwf	printf@c& (0+255),w,b
  5040  00FA22  A4D8               	btfss	status,2,c
  5041  00FA24  EF16  F07D         	goto	u4361
  5042  00FA28  EF18  F07D         	goto	u4360
  5043  00FA2C                     u4361:
  5044  00FA2C  EFEE  F07C         	goto	l4679
  5045  00FA30                     u4360:
  5046  00FA30                     l4687:
  5047                           
  5048                           ; BSR set to: 0
  5049                           ;doprnt.c: 1201: {;doprnt.c: 1214: if(flag & 0x03)
  5050  00FA30  0E03               	movlw	3
  5051  00FA32  1588               	andwf	printf@flag& (0+255),w,b
  5052  00FA34  6F80               	movwf	??_printf& (0+255),b
  5053  00FA36  0E00               	movlw	0
  5054  00FA38  1589               	andwf	(printf@flag+1)& (0+255),w,b
  5055  00FA3A  6F81               	movwf	(??_printf+1)& (0+255),b
  5056  00FA3C  5180               	movf	??_printf& (0+255),w,b
  5057  00FA3E  1181               	iorwf	(??_printf+1)& (0+255),w,b
  5058  00FA40  B4D8               	btfsc	status,2,c
  5059  00FA42  EF25  F07D         	goto	u4371
  5060  00FA46  EF27  F07D         	goto	u4370
  5061  00FA4A                     u4371:
  5062  00FA4A  EF78  F07D         	goto	l4697
  5063  00FA4E                     u4370:
  5064  00FA4E                     
  5065                           ; BSR set to: 0
  5066                           ;doprnt.c: 1216: (putch('-') );
  5067  00FA4E  0E2D               	movlw	45
  5068  00FA50  ECC2  F05F         	call	_putch
  5069  00FA54  EF78  F07D         	goto	l4697
  5070  00FA58                     l4691:
  5071                           
  5072                           ; BSR set to: 0
  5073                           ;doprnt.c: 1226: {;doprnt.c: 1227: tmpval.vd = val/dpowers[c];
  5074  00FA58  C08C  F001         	movff	printf@val,___lldiv@dividend
  5075  00FA5C  C08D  F002         	movff	printf@val+1,___lldiv@dividend+1
  5076  00FA60  C08E  F003         	movff	printf@val+2,___lldiv@dividend+2
  5077  00FA64  C08F  F004         	movff	printf@val+3,___lldiv@dividend+3
  5078  00FA68  519A               	movf	printf@c& (0+255),w,b
  5079  00FA6A  0D04               	mullw	4
  5080  00FA6C  0E25               	movlw	low _dpowers
  5081  00FA6E  24F3               	addwf	243,w,c
  5082  00FA70  6EF6               	movwf	tblptrl,c
  5083  00FA72  0EFF               	movlw	high _dpowers
  5084  00FA74  20F4               	addwfc	244,w,c
  5085  00FA76  6EF7               	movwf	tblptrh,c
  5086  00FA78                     	if	1	;There are 3 active tblptr bytes
  5087  00FA78  6AF8               	clrf	tblptru,c
  5088  00FA7A  0E00               	movlw	low (__mediumconst shr (0+16))
  5089  00FA7C  22F8               	addwfc	tblptru,f,c
  5090  00FA7E                     	endif
  5091  00FA7E  0009               	tblrd		*+
  5092  00FA80  006F FFD4  F005    	movff	tablat,___lldiv@divisor
  5093  00FA86  0009               	tblrd		*+
  5094  00FA88  006F FFD4  F006    	movff	tablat,___lldiv@divisor+1
  5095  00FA8E  0009               	tblrd		*+
  5096  00FA90  006F FFD4  F007    	movff	tablat,___lldiv@divisor+2
  5097  00FA96  000A               	tblrd		*-
  5098  00FA98  006F FFD4  F008    	movff	tablat,___lldiv@divisor+3
  5099  00FA9E  ECD0  F062         	call	___lldiv	;wreg free
  5100  00FAA2  C001  F092         	movff	?___lldiv,printf@tmpval
  5101  00FAA6  C002  F093         	movff	?___lldiv+1,printf@tmpval+1
  5102  00FAAA  C003  F094         	movff	?___lldiv+2,printf@tmpval+2
  5103  00FAAE  C004  F095         	movff	?___lldiv+3,printf@tmpval+3
  5104  00FAB2                     
  5105                           ;doprnt.c: 1228: tmpval.vd %= 10;
  5106  00FAB2  C092  F00E         	movff	printf@tmpval,___llmod@dividend
  5107  00FAB6  C093  F00F         	movff	printf@tmpval+1,___llmod@dividend+1
  5108  00FABA  C094  F010         	movff	printf@tmpval+2,___llmod@dividend+2
  5109  00FABE  C095  F011         	movff	printf@tmpval+3,___llmod@dividend+3
  5110  00FAC2  0E0A               	movlw	10
  5111  00FAC4  6E12               	movwf	___llmod@divisor^0,c
  5112  00FAC6  0E00               	movlw	0
  5113  00FAC8  6E13               	movwf	(___llmod@divisor+1)^0,c
  5114  00FACA  0E00               	movlw	0
  5115  00FACC  6E14               	movwf	(___llmod@divisor+2)^0,c
  5116  00FACE  0E00               	movlw	0
  5117  00FAD0  6E15               	movwf	(___llmod@divisor+3)^0,c
  5118  00FAD2  EC44  F062         	call	___llmod	;wreg free
  5119  00FAD6  C00E  F092         	movff	?___llmod,printf@tmpval
  5120  00FADA  C00F  F093         	movff	?___llmod+1,printf@tmpval+1
  5121  00FADE  C010  F094         	movff	?___llmod+2,printf@tmpval+2
  5122  00FAE2  C011  F095         	movff	?___llmod+3,printf@tmpval+3
  5123  00FAE6                     
  5124                           ;doprnt.c: 1229: (putch('0' + tmpval.vd) );
  5125  00FAE6  0100               	movlb	0	; () banked
  5126  00FAE8  5192               	movf	printf@tmpval& (0+255),w,b
  5127  00FAEA  0F30               	addlw	48
  5128  00FAEC  ECC2  F05F         	call	_putch
  5129  00FAF0                     l4697:
  5130  00FAF0  0100               	movlb	0	; () banked
  5131  00FAF2  079A               	decf	printf@c& (0+255),f,b
  5132  00FAF4  299A               	incf	printf@c& (0+255),w,b
  5133  00FAF6  A4D8               	btfss	status,2,c
  5134  00FAF8  EF80  F07D         	goto	u4381
  5135  00FAFC  EF82  F07D         	goto	u4380
  5136  00FB00                     u4381:
  5137  00FB00  EF2C  F07D         	goto	l4691
  5138  00FB04                     u4380:
  5139  00FB04  EF8B  F07D         	goto	l4703
  5140  00FB08                     l4699:
  5141                           
  5142                           ; BSR set to: 0
  5143                           ;doprnt.c: 1234: (putch('0') );
  5144  00FB08  0E30               	movlw	48
  5145  00FB0A  ECC2  F05F         	call	_putch
  5146  00FB0E                     
  5147                           ;doprnt.c: 1235: eexp--;
  5148  00FB0E  0100               	movlb	0	; () banked
  5149  00FB10  0790               	decf	printf@eexp& (0+255),f,b
  5150  00FB12  A0D8               	btfss	status,0,c
  5151  00FB14  0791               	decf	(printf@eexp+1)& (0+255),f,b
  5152  00FB16                     l4703:
  5153                           
  5154                           ; BSR set to: 0
  5155  00FB16  BF91               	btfsc	(printf@eexp+1)& (0+255),7,b
  5156  00FB18  EF98  F07D         	goto	u4390
  5157  00FB1C  5191               	movf	(printf@eexp+1)& (0+255),w,b
  5158  00FB1E  E106               	bnz	u4391
  5159  00FB20  0590               	decf	printf@eexp& (0+255),w,b
  5160  00FB22  B0D8               	btfsc	status,0,c
  5161  00FB24  EF96  F07D         	goto	u4391
  5162  00FB28  EF98  F07D         	goto	u4390
  5163  00FB2C                     u4391:
  5164  00FB2C  EF84  F07D         	goto	l4699
  5165  00FB30                     u4390:
  5166  00FB30                     
  5167                           ; BSR set to: 0
  5168                           ;doprnt.c: 1236: };doprnt.c: 1237: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2)
      +                          )
  5169  00FB30  BF8B               	btfsc	(printf@prec+1)& (0+255),7,b
  5170  00FB32  EFA4  F07D         	goto	u4401
  5171  00FB36  518B               	movf	(printf@prec+1)& (0+255),w,b
  5172  00FB38  E109               	bnz	u4400
  5173  00FB3A  0E09               	movlw	9
  5174  00FB3C  5D8A               	subwf	printf@prec& (0+255),w,b
  5175  00FB3E  A0D8               	btfss	status,0,c
  5176  00FB40  EFA4  F07D         	goto	u4401
  5177  00FB44  EFA6  F07D         	goto	u4400
  5178  00FB48                     u4401:
  5179  00FB48  EFAA  F07D         	goto	l691
  5180  00FB4C                     u4400:
  5181  00FB4C                     
  5182                           ; BSR set to: 0
  5183                           ;doprnt.c: 1238: c = (sizeof dpowers/sizeof dpowers[0])-2;
  5184  00FB4C  0E08               	movlw	8
  5185  00FB4E  6F9A               	movwf	printf@c& (0+255),b
  5186  00FB50  EFAC  F07D         	goto	l4709
  5187  00FB54                     l691:
  5188                           
  5189                           ; BSR set to: 0
  5190                           ;doprnt.c: 1239: else;doprnt.c: 1240: c = (char)prec;
  5191  00FB54  C08A  F09A         	movff	printf@prec,printf@c
  5192  00FB58                     l4709:
  5193                           
  5194                           ; BSR set to: 0
  5195                           ;doprnt.c: 1241: prec -= (int)c;
  5196  00FB58  519A               	movf	printf@c& (0+255),w,b
  5197  00FB5A  5F8A               	subwf	printf@prec& (0+255),f,b
  5198  00FB5C  0E00               	movlw	0
  5199  00FB5E  5B8B               	subwfb	(printf@prec+1)& (0+255),f,b
  5200  00FB60                     
  5201                           ; BSR set to: 0
  5202                           ;doprnt.c: 1245: if(c)
  5203  00FB60  519A               	movf	printf@c& (0+255),w,b
  5204  00FB62  B4D8               	btfsc	status,2,c
  5205  00FB64  EFB6  F07D         	goto	u4411
  5206  00FB68  EFB8  F07D         	goto	u4410
  5207  00FB6C                     u4411:
  5208  00FB6C  EFBB  F07D         	goto	l4715
  5209  00FB70                     u4410:
  5210  00FB70                     
  5211                           ; BSR set to: 0
  5212                           ;doprnt.c: 1247: (putch('.') );
  5213  00FB70  0E2E               	movlw	46
  5214  00FB72  ECC2  F05F         	call	_putch
  5215  00FB76                     l4715:
  5216                           
  5217                           ;doprnt.c: 1253: val = (unsigned long)(fval * scale((signed char)c));
  5218  00FB76  0100               	movlb	0	; () banked
  5219  00FB78  519A               	movf	printf@c& (0+255),w,b
  5220  00FB7A  ECD2  F072         	call	_scale
  5221  00FB7E  C057  F082         	movff	?_scale,_printf$2199
  5222  00FB82  C058  F083         	movff	?_scale+1,_printf$2199+1
  5223  00FB86  C059  F084         	movff	?_scale+2,_printf$2199+2
  5224  00FB8A  C05A  F085         	movff	?_scale+3,_printf$2199+3
  5225  00FB8E                     
  5226                           ;doprnt.c: 1253: val = (unsigned long)(fval * scale((signed char)c));
  5227  00FB8E  C096  F04F         	movff	printf@fval,___flmul@a
  5228  00FB92  C097  F050         	movff	printf@fval+1,___flmul@a+1
  5229  00FB96  C098  F051         	movff	printf@fval+2,___flmul@a+2
  5230  00FB9A  C099  F052         	movff	printf@fval+3,___flmul@a+3
  5231  00FB9E  C082  F04B         	movff	_printf$2199,___flmul@b
  5232  00FBA2  C083  F04C         	movff	_printf$2199+1,___flmul@b+1
  5233  00FBA6  C084  F04D         	movff	_printf$2199+2,___flmul@b+2
  5234  00FBAA  C085  F04E         	movff	_printf$2199+3,___flmul@b+3
  5235  00FBAE  ECAA  F070         	call	___flmul	;wreg free
  5236  00FBB2  C04B  F00F         	movff	?___flmul,___fltol@f1
  5237  00FBB6  C04C  F010         	movff	?___flmul+1,___fltol@f1+1
  5238  00FBBA  C04D  F011         	movff	?___flmul+2,___fltol@f1+2
  5239  00FBBE  C04E  F012         	movff	?___flmul+3,___fltol@f1+3
  5240  00FBC2  EC73  F065         	call	___fltol	;wreg free
  5241  00FBC6  C00F  F08C         	movff	?___fltol,printf@val
  5242  00FBCA  C010  F08D         	movff	?___fltol+1,printf@val+1
  5243  00FBCE  C011  F08E         	movff	?___fltol+2,printf@val+2
  5244  00FBD2  C012  F08F         	movff	?___fltol+3,printf@val+3
  5245                           
  5246                           ;doprnt.c: 1254: while(c--) {
  5247  00FBD6  EF67  F07E         	goto	l4725
  5248  00FBDA                     l4719:
  5249                           
  5250                           ; BSR set to: 0
  5251                           ;doprnt.c: 1255: tmpval.vd = val/dpowers[c];
  5252  00FBDA  C08C  F001         	movff	printf@val,___lldiv@dividend
  5253  00FBDE  C08D  F002         	movff	printf@val+1,___lldiv@dividend+1
  5254  00FBE2  C08E  F003         	movff	printf@val+2,___lldiv@dividend+2
  5255  00FBE6  C08F  F004         	movff	printf@val+3,___lldiv@dividend+3
  5256  00FBEA  519A               	movf	printf@c& (0+255),w,b
  5257  00FBEC  0D04               	mullw	4
  5258  00FBEE  0E25               	movlw	low _dpowers
  5259  00FBF0  24F3               	addwf	243,w,c
  5260  00FBF2  6EF6               	movwf	tblptrl,c
  5261  00FBF4  0EFF               	movlw	high _dpowers
  5262  00FBF6  20F4               	addwfc	244,w,c
  5263  00FBF8  6EF7               	movwf	tblptrh,c
  5264  00FBFA                     	if	1	;There are 3 active tblptr bytes
  5265  00FBFA  6AF8               	clrf	tblptru,c
  5266  00FBFC  0E00               	movlw	low (__mediumconst shr (0+16))
  5267  00FBFE  22F8               	addwfc	tblptru,f,c
  5268  00FC00                     	endif
  5269  00FC00  0009               	tblrd		*+
  5270  00FC02  006F FFD4  F005    	movff	tablat,___lldiv@divisor
  5271  00FC08  0009               	tblrd		*+
  5272  00FC0A  006F FFD4  F006    	movff	tablat,___lldiv@divisor+1
  5273  00FC10  0009               	tblrd		*+
  5274  00FC12  006F FFD4  F007    	movff	tablat,___lldiv@divisor+2
  5275  00FC18  000A               	tblrd		*-
  5276  00FC1A  006F FFD4  F008    	movff	tablat,___lldiv@divisor+3
  5277  00FC20  ECD0  F062         	call	___lldiv	;wreg free
  5278  00FC24  C001  F092         	movff	?___lldiv,printf@tmpval
  5279  00FC28  C002  F093         	movff	?___lldiv+1,printf@tmpval+1
  5280  00FC2C  C003  F094         	movff	?___lldiv+2,printf@tmpval+2
  5281  00FC30  C004  F095         	movff	?___lldiv+3,printf@tmpval+3
  5282  00FC34                     
  5283                           ;doprnt.c: 1256: tmpval.vd %= 10;
  5284  00FC34  C092  F00E         	movff	printf@tmpval,___llmod@dividend
  5285  00FC38  C093  F00F         	movff	printf@tmpval+1,___llmod@dividend+1
  5286  00FC3C  C094  F010         	movff	printf@tmpval+2,___llmod@dividend+2
  5287  00FC40  C095  F011         	movff	printf@tmpval+3,___llmod@dividend+3
  5288  00FC44  0E0A               	movlw	10
  5289  00FC46  6E12               	movwf	___llmod@divisor^0,c
  5290  00FC48  0E00               	movlw	0
  5291  00FC4A  6E13               	movwf	(___llmod@divisor+1)^0,c
  5292  00FC4C  0E00               	movlw	0
  5293  00FC4E  6E14               	movwf	(___llmod@divisor+2)^0,c
  5294  00FC50  0E00               	movlw	0
  5295  00FC52  6E15               	movwf	(___llmod@divisor+3)^0,c
  5296  00FC54  EC44  F062         	call	___llmod	;wreg free
  5297  00FC58  C00E  F092         	movff	?___llmod,printf@tmpval
  5298  00FC5C  C00F  F093         	movff	?___llmod+1,printf@tmpval+1
  5299  00FC60  C010  F094         	movff	?___llmod+2,printf@tmpval+2
  5300  00FC64  C011  F095         	movff	?___llmod+3,printf@tmpval+3
  5301  00FC68                     
  5302                           ;doprnt.c: 1257: (putch('0' + tmpval.vd) );
  5303  00FC68  0100               	movlb	0	; () banked
  5304  00FC6A  5192               	movf	printf@tmpval& (0+255),w,b
  5305  00FC6C  0F30               	addlw	48
  5306  00FC6E  ECC2  F05F         	call	_putch
  5307                           
  5308                           ;doprnt.c: 1258: val %= dpowers[c];
  5309  00FC72  C08C  F00E         	movff	printf@val,___llmod@dividend
  5310  00FC76  C08D  F00F         	movff	printf@val+1,___llmod@dividend+1
  5311  00FC7A  C08E  F010         	movff	printf@val+2,___llmod@dividend+2
  5312  00FC7E  C08F  F011         	movff	printf@val+3,___llmod@dividend+3
  5313  00FC82  0100               	movlb	0	; () banked
  5314  00FC84  519A               	movf	printf@c& (0+255),w,b
  5315  00FC86  0D04               	mullw	4
  5316  00FC88  0E25               	movlw	low _dpowers
  5317  00FC8A  24F3               	addwf	243,w,c
  5318  00FC8C  6EF6               	movwf	tblptrl,c
  5319  00FC8E  0EFF               	movlw	high _dpowers
  5320  00FC90  20F4               	addwfc	244,w,c
  5321  00FC92  6EF7               	movwf	tblptrh,c
  5322  00FC94                     	if	1	;There are 3 active tblptr bytes
  5323  00FC94  6AF8               	clrf	tblptru,c
  5324  00FC96  0E00               	movlw	low (__mediumconst shr (0+16))
  5325  00FC98  22F8               	addwfc	tblptru,f,c
  5326  00FC9A                     	endif
  5327  00FC9A  0009               	tblrd		*+
  5328  00FC9C  006F FFD4  F012    	movff	tablat,___llmod@divisor
  5329  00FCA2  0009               	tblrd		*+
  5330  00FCA4  006F FFD4  F013    	movff	tablat,___llmod@divisor+1
  5331  00FCAA  0009               	tblrd		*+
  5332  00FCAC  006F FFD4  F014    	movff	tablat,___llmod@divisor+2
  5333  00FCB2  000A               	tblrd		*-
  5334  00FCB4  006F FFD4  F015    	movff	tablat,___llmod@divisor+3
  5335  00FCBA  EC44  F062         	call	___llmod	;wreg free
  5336  00FCBE  C00E  F08C         	movff	?___llmod,printf@val
  5337  00FCC2  C00F  F08D         	movff	?___llmod+1,printf@val+1
  5338  00FCC6  C010  F08E         	movff	?___llmod+2,printf@val+2
  5339  00FCCA  C011  F08F         	movff	?___llmod+3,printf@val+3
  5340  00FCCE                     l4725:
  5341  00FCCE  0100               	movlb	0	; () banked
  5342  00FCD0  079A               	decf	printf@c& (0+255),f,b
  5343  00FCD2  299A               	incf	printf@c& (0+255),w,b
  5344  00FCD4  A4D8               	btfss	status,2,c
  5345  00FCD6  EF6F  F07E         	goto	u4421
  5346  00FCDA  EF71  F07E         	goto	u4420
  5347  00FCDE                     u4421:
  5348  00FCDE  EFED  F07D         	goto	l4719
  5349  00FCE2                     u4420:
  5350  00FCE2  EF7A  F07E         	goto	l4731
  5351  00FCE6                     l4727:
  5352                           
  5353                           ; BSR set to: 0
  5354                           ;doprnt.c: 1262: (putch('0') );
  5355  00FCE6  0E30               	movlw	48
  5356  00FCE8  ECC2  F05F         	call	_putch
  5357  00FCEC                     
  5358                           ;doprnt.c: 1263: prec--;
  5359  00FCEC  0100               	movlb	0	; () banked
  5360  00FCEE  078A               	decf	printf@prec& (0+255),f,b
  5361  00FCF0  A0D8               	btfss	status,0,c
  5362  00FCF2  078B               	decf	(printf@prec+1)& (0+255),f,b
  5363  00FCF4                     l4731:
  5364                           
  5365                           ; BSR set to: 0
  5366  00FCF4  518A               	movf	printf@prec& (0+255),w,b
  5367  00FCF6  118B               	iorwf	(printf@prec+1)& (0+255),w,b
  5368  00FCF8  A4D8               	btfss	status,2,c
  5369  00FCFA  EF81  F07E         	goto	u4431
  5370  00FCFE  EF83  F07E         	goto	u4430
  5371  00FD02                     u4431:
  5372  00FD02  EF73  F07E         	goto	l4727
  5373  00FD06                     u4430:
  5374  00FD06  EF33  F07F         	goto	l4763
  5375  00FD0A                     l4733:
  5376                           
  5377                           ; BSR set to: 0
  5378                           ;doprnt.c: 1272: };doprnt.c: 1299: {;doprnt.c: 1312: val = (*(unsigned *)__va_arg((*(uns
      +                          igned **)ap), (unsigned)0));
  5379  00FD0A  0060  F21B  FFD9   	movff	printf@ap,fsr2l
  5380  00FD10  0060  F21F  FFDA   	movff	printf@ap+1,fsr2h
  5381  00FD16  006F FF78  F080    	movff	postinc2,??_printf
  5382  00FD1C  006F FF74  F081    	movff	postdec2,??_printf+1
  5383  00FD22  C080  F08C         	movff	??_printf,printf@val
  5384  00FD26  C081  F08D         	movff	??_printf+1,printf@val+1
  5385  00FD2A  6B8E               	clrf	(printf@val+2)& (0+255),b
  5386  00FD2C  6B8F               	clrf	(printf@val+3)& (0+255),b
  5387  00FD2E                     
  5388                           ; BSR set to: 0
  5389  00FD2E  0E02               	movlw	2
  5390  00FD30  2786               	addwf	printf@ap& (0+255),f,b
  5391  00FD32  0E00               	movlw	0
  5392  00FD34  2387               	addwfc	(printf@ap+1)& (0+255),f,b
  5393  00FD36                     
  5394                           ; BSR set to: 0
  5395                           ;doprnt.c: 1313: };doprnt.c: 1331: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c
      +                          ++)
  5396  00FD36  0E01               	movlw	1
  5397  00FD38  6F9A               	movwf	printf@c& (0+255),b
  5398  00FD3A                     l4743:
  5399                           
  5400                           ; BSR set to: 0
  5401                           ;doprnt.c: 1332: if(val < dpowers[c])
  5402  00FD3A  519A               	movf	printf@c& (0+255),w,b
  5403  00FD3C  0D04               	mullw	4
  5404  00FD3E  0E25               	movlw	low _dpowers
  5405  00FD40  24F3               	addwf	243,w,c
  5406  00FD42  6EF6               	movwf	tblptrl,c
  5407  00FD44  0EFF               	movlw	high _dpowers
  5408  00FD46  20F4               	addwfc	244,w,c
  5409  00FD48  6EF7               	movwf	tblptrh,c
  5410  00FD4A                     	if	1	;There are 3 active tblptr bytes
  5411  00FD4A  6AF8               	clrf	tblptru,c
  5412  00FD4C  0E00               	movlw	low (__mediumconst shr (0+16))
  5413  00FD4E  22F8               	addwfc	tblptru,f,c
  5414  00FD50                     	endif
  5415  00FD50  0009               	tblrd		*+
  5416  00FD52  50F5               	movf	tablat,w,c
  5417  00FD54  5D8C               	subwf	printf@val& (0+255),w,b
  5418  00FD56  0009               	tblrd		*+
  5419  00FD58  50F5               	movf	tablat,w,c
  5420  00FD5A  598D               	subwfb	(printf@val+1)& (0+255),w,b
  5421  00FD5C  0009               	tblrd		*+
  5422  00FD5E  50F5               	movf	tablat,w,c
  5423  00FD60  598E               	subwfb	(printf@val+2)& (0+255),w,b
  5424  00FD62  0009               	tblrd		*+
  5425  00FD64  50F5               	movf	tablat,w,c
  5426  00FD66  598F               	subwfb	(printf@val+3)& (0+255),w,b
  5427  00FD68  B0D8               	btfsc	status,0,c
  5428  00FD6A  EFB9  F07E         	goto	u4441
  5429  00FD6E  EFBB  F07E         	goto	u4440
  5430  00FD72                     u4441:
  5431  00FD72  EFBD  F07E         	goto	l4747
  5432  00FD76                     u4440:
  5433  00FD76  EFC7  F07E         	goto	l4751
  5434  00FD7A                     l4747:
  5435                           
  5436                           ; BSR set to: 0
  5437  00FD7A  2B9A               	incf	printf@c& (0+255),f,b
  5438  00FD7C                     
  5439                           ; BSR set to: 0
  5440  00FD7C  0E0A               	movlw	10
  5441  00FD7E  199A               	xorwf	printf@c& (0+255),w,b
  5442  00FD80  A4D8               	btfss	status,2,c
  5443  00FD82  EFC5  F07E         	goto	u4451
  5444  00FD86  EFC7  F07E         	goto	u4450
  5445  00FD8A                     u4451:
  5446  00FD8A  EF9D  F07E         	goto	l4743
  5447  00FD8E                     u4450:
  5448  00FD8E                     l4751:
  5449                           
  5450                           ; BSR set to: 0
  5451                           ;doprnt.c: 1448: {;doprnt.c: 1464: if(flag & 0x03)
  5452  00FD8E  0E03               	movlw	3
  5453  00FD90  1588               	andwf	printf@flag& (0+255),w,b
  5454  00FD92  6F80               	movwf	??_printf& (0+255),b
  5455  00FD94  0E00               	movlw	0
  5456  00FD96  1589               	andwf	(printf@flag+1)& (0+255),w,b
  5457  00FD98  6F81               	movwf	(??_printf+1)& (0+255),b
  5458  00FD9A  5180               	movf	??_printf& (0+255),w,b
  5459  00FD9C  1181               	iorwf	(??_printf+1)& (0+255),w,b
  5460  00FD9E  B4D8               	btfsc	status,2,c
  5461  00FDA0  EFD4  F07E         	goto	u4461
  5462  00FDA4  EFD6  F07E         	goto	u4460
  5463  00FDA8                     u4461:
  5464  00FDA8  EFD9  F07E         	goto	l4755
  5465  00FDAC                     u4460:
  5466  00FDAC                     
  5467                           ; BSR set to: 0
  5468                           ;doprnt.c: 1465: (putch('-') );
  5469  00FDAC  0E2D               	movlw	45
  5470  00FDAE  ECC2  F05F         	call	_putch
  5471  00FDB2                     l4755:
  5472                           
  5473                           ;doprnt.c: 1495: };doprnt.c: 1498: prec = c;
  5474  00FDB2  C09A  F08A         	movff	printf@c,printf@prec
  5475  00FDB6  0100               	movlb	0	; () banked
  5476  00FDB8  6B8B               	clrf	(printf@prec+1)& (0+255),b
  5477                           
  5478                           ;doprnt.c: 1500: while(prec--) {
  5479  00FDBA  EF25  F07F         	goto	l4761
  5480  00FDBE                     l4757:
  5481                           
  5482                           ; BSR set to: 0
  5483                           ;doprnt.c: 1504: {;doprnt.c: 1515: c = (val / dpowers[(unsigned int)prec]) % 10 + '0';
  5484  00FDBE  C08A  F080         	movff	printf@prec,??_printf
  5485  00FDC2  C08B  F081         	movff	printf@prec+1,??_printf+1
  5486  00FDC6  90D8               	bcf	status,0,c
  5487  00FDC8  3780               	rlcf	??_printf& (0+255),f,b
  5488  00FDCA  3781               	rlcf	(??_printf+1)& (0+255),f,b
  5489  00FDCC  90D8               	bcf	status,0,c
  5490  00FDCE  3780               	rlcf	??_printf& (0+255),f,b
  5491  00FDD0  3781               	rlcf	(??_printf+1)& (0+255),f,b
  5492  00FDD2  0E25               	movlw	low _dpowers
  5493  00FDD4  2580               	addwf	??_printf& (0+255),w,b
  5494  00FDD6  6EF6               	movwf	tblptrl,c
  5495  00FDD8  0EFF               	movlw	high _dpowers
  5496  00FDDA  2181               	addwfc	(??_printf+1)& (0+255),w,b
  5497  00FDDC  6EF7               	movwf	tblptrh,c
  5498  00FDDE                     	if	1	;There are 3 active tblptr bytes
  5499  00FDDE  6AF8               	clrf	tblptru,c
  5500  00FDE0  0E00               	movlw	low (__mediumconst shr (0+16))
  5501  00FDE2  22F8               	addwfc	tblptru,f,c
  5502  00FDE4                     	endif
  5503  00FDE4  0009               	tblrd		*+
  5504  00FDE6  006F FFD4  F005    	movff	tablat,___lldiv@divisor
  5505  00FDEC  0009               	tblrd		*+
  5506  00FDEE  006F FFD4  F006    	movff	tablat,___lldiv@divisor+1
  5507  00FDF4  0009               	tblrd		*+
  5508  00FDF6  006F FFD4  F007    	movff	tablat,___lldiv@divisor+2
  5509  00FDFC  000A               	tblrd		*-
  5510  00FDFE  006F FFD4  F008    	movff	tablat,___lldiv@divisor+3
  5511  00FE04  C08C  F001         	movff	printf@val,___lldiv@dividend
  5512  00FE08  C08D  F002         	movff	printf@val+1,___lldiv@dividend+1
  5513  00FE0C  C08E  F003         	movff	printf@val+2,___lldiv@dividend+2
  5514  00FE10  C08F  F004         	movff	printf@val+3,___lldiv@dividend+3
  5515  00FE14  ECD0  F062         	call	___lldiv	;wreg free
  5516  00FE18  C001  F00E         	movff	?___lldiv,___llmod@dividend
  5517  00FE1C  C002  F00F         	movff	?___lldiv+1,___llmod@dividend+1
  5518  00FE20  C003  F010         	movff	?___lldiv+2,___llmod@dividend+2
  5519  00FE24  C004  F011         	movff	?___lldiv+3,___llmod@dividend+3
  5520  00FE28  0E0A               	movlw	10
  5521  00FE2A  6E12               	movwf	___llmod@divisor^0,c
  5522  00FE2C  0E00               	movlw	0
  5523  00FE2E  6E13               	movwf	(___llmod@divisor+1)^0,c
  5524  00FE30  0E00               	movlw	0
  5525  00FE32  6E14               	movwf	(___llmod@divisor+2)^0,c
  5526  00FE34  0E00               	movlw	0
  5527  00FE36  6E15               	movwf	(___llmod@divisor+3)^0,c
  5528  00FE38  EC44  F062         	call	___llmod	;wreg free
  5529  00FE3C  500E               	movf	?___llmod^0,w,c
  5530  00FE3E  0F30               	addlw	48
  5531  00FE40  0100               	movlb	0	; () banked
  5532  00FE42  6F9A               	movwf	printf@c& (0+255),b
  5533  00FE44                     
  5534                           ; BSR set to: 0
  5535                           ;doprnt.c: 1549: };doprnt.c: 1550: (putch(c) );
  5536  00FE44  519A               	movf	printf@c& (0+255),w,b
  5537  00FE46  ECC2  F05F         	call	_putch
  5538  00FE4A                     l4761:
  5539  00FE4A  0100               	movlb	0	; () banked
  5540  00FE4C  078A               	decf	printf@prec& (0+255),f,b
  5541  00FE4E  A0D8               	btfss	status,0,c
  5542  00FE50  078B               	decf	(printf@prec+1)& (0+255),f,b
  5543  00FE52  298A               	incf	printf@prec& (0+255),w,b
  5544  00FE54  E106               	bnz	u4471
  5545  00FE56  298B               	incf	(printf@prec+1)& (0+255),w,b
  5546  00FE58  A4D8               	btfss	status,2,c
  5547  00FE5A  EF31  F07F         	goto	u4471
  5548  00FE5E  EF33  F07F         	goto	u4470
  5549  00FE62                     u4471:
  5550  00FE62  EFDF  F07E         	goto	l4757
  5551  00FE66                     u4470:
  5552  00FE66                     l4763:
  5553  00FE66  0060  F1DB  FFF6   	movff	printf@f,tblptrl
  5554  00FE6C  0060  F1DF  FFF7   	movff	printf@f+1,tblptrh
  5555  00FE72  0100               	movlb	0	; () banked
  5556  00FE74  4B76               	infsnz	printf@f& (0+255),f,b
  5557  00FE76  2B77               	incf	(printf@f+1)& (0+255),f,b
  5558  00FE78                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5559  00FE78  6AF8               	clrf	tblptru,c
  5560  00FE7A                     	endif
  5561  00FE7A                     	if	0	;tblptru may be non-zero
  5562  00FE7A                     	endif
  5563  00FE7A  0008               	tblrd		*
  5564  00FE7C  006F FFD4  F09A    	movff	tablat,printf@c
  5565  00FE82  519A               	movf	printf@c& (0+255),w,b
  5566  00FE84  A4D8               	btfss	status,2,c
  5567  00FE86  EF47  F07F         	goto	u4481
  5568  00FE8A  EF49  F07F         	goto	u4480
  5569  00FE8E                     u4481:
  5570  00FE8E  EFB7  F07A         	goto	l4581
  5571  00FE92                     u4480:
  5572  00FE92                     l708:
  5573                           
  5574                           ; BSR set to: 0
  5575  00FE92  0012               	return		;funcret
  5576  00FE94                     __end_of_printf:
  5577                           	callstack 0
  5578                           
  5579 ;; *************** function _scale *****************
  5580 ;; Defined at:
  5581 ;;		line 433 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c"
  5582 ;; Parameters:    Size  Location     Type
  5583 ;;  scl             1    wreg     char 
  5584 ;; Auto vars:     Size  Location     Type
  5585 ;;  scl             1   94[COMRAM] char 
  5586 ;; Return value:  Size  Location     Type
  5587 ;;                  4   86[COMRAM] char 
  5588 ;; Registers used:
  5589 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5590 ;; Tracked objects:
  5591 ;;		On entry : 0/0
  5592 ;;		On exit  : 0/0
  5593 ;;		Unchanged: 0/0
  5594 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5595 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5596 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5597 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5598 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5599 ;;Total ram usage:        9 bytes
  5600 ;; Hardware stack levels used:    1
  5601 ;; Hardware stack levels required when called:    1
  5602 ;; This function calls:
  5603 ;;		___awdiv
  5604 ;;		___awmod
  5605 ;;		___flmul
  5606 ;; This function is called by:
  5607 ;;		_printf
  5608 ;; This function uses a non-reentrant model
  5609 ;;
  5610                           
  5611                           	psect	text12
  5612  00E5A4                     __ptext12:
  5613                           	callstack 0
  5614  00E5A4                     _scale:
  5615                           	callstack 28
  5616                           
  5617                           ; BSR set to: 0
  5618                           ;incstack = 0
  5619                           ;scale@scl stored from wreg
  5620  00E5A4  6E5F               	movwf	scale@scl^0,c
  5621  00E5A6                     
  5622                           ;doprnt.c: 436: if(scl < 0) {
  5623  00E5A6  BE5F               	btfsc	scale@scl^0,7,c
  5624  00E5A8  EFDA  F072         	goto	u3610
  5625  00E5AC  EFD8  F072         	goto	u3611
  5626  00E5B0                     u3611:
  5627  00E5B0  EF04  F074         	goto	l4119
  5628  00E5B4                     u3610:
  5629  00E5B4                     
  5630                           ;doprnt.c: 437: scl = -scl;
  5631  00E5B4  6C5F               	negf	scale@scl^0,c
  5632                           
  5633                           ;doprnt.c: 438: if(scl>=110)
  5634  00E5B6  505F               	movf	scale@scl^0,w,c
  5635  00E5B8  0A80               	xorlw	128
  5636  00E5BA  0F12               	addlw	-238
  5637  00E5BC  A0D8               	btfss	status,0,c
  5638  00E5BE  EFE3  F072         	goto	u3621
  5639  00E5C2  EFE5  F072         	goto	u3620
  5640  00E5C6                     u3621:
  5641  00E5C6  EF83  F073         	goto	l4109
  5642  00E5CA                     u3620:
  5643  00E5CA                     
  5644                           ;doprnt.c: 439: return _npowers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char
      +                          )((scl%100)/10+9)] * _npowers_[(unsigned char)(scl%10)];
  5645  00E5CA  0E00               	movlw	0
  5646  00E5CC  6E0A               	movwf	(___awdiv@divisor+1)^0,c
  5647  00E5CE  0E0A               	movlw	10
  5648  00E5D0  6E09               	movwf	___awdiv@divisor^0,c
  5649  00E5D2  0E00               	movlw	0
  5650  00E5D4  6E04               	movwf	(___awmod@divisor+1)^0,c
  5651  00E5D6  0E64               	movlw	100
  5652  00E5D8  6E03               	movwf	___awmod@divisor^0,c
  5653  00E5DA  505F               	movf	scale@scl^0,w,c
  5654  00E5DC  6E01               	movwf	___awmod@dividend^0,c
  5655  00E5DE  6A02               	clrf	(___awmod@dividend+1)^0,c
  5656  00E5E0  BE01               	btfsc	___awmod@dividend^0,7,c
  5657  00E5E2  0602               	decf	(___awmod@dividend+1)^0,f,c
  5658  00E5E4  ECCB  F063         	call	___awmod	;wreg free
  5659  00E5E8  C001  F007         	movff	?___awmod,___awdiv@dividend
  5660  00E5EC  C002  F008         	movff	?___awmod+1,___awdiv@dividend+1
  5661  00E5F0  EC23  F064         	call	___awdiv	;wreg free
  5662  00E5F4  0E09               	movlw	9
  5663  00E5F6  2607               	addwf	?___awdiv^0,f,c
  5664  00E5F8  5007               	movf	?___awdiv^0,w,c
  5665  00E5FA  0D04               	mullw	4
  5666  00E5FC  0EC9               	movlw	low __npowers_
  5667  00E5FE  24F3               	addwf	243,w,c
  5668  00E600  6EF6               	movwf	tblptrl,c
  5669  00E602  0EFE               	movlw	high __npowers_
  5670  00E604  20F4               	addwfc	244,w,c
  5671  00E606  6EF7               	movwf	tblptrh,c
  5672  00E608                     	if	1	;There are 3 active tblptr bytes
  5673  00E608  6AF8               	clrf	tblptru,c
  5674  00E60A  0E00               	movlw	low (__mediumconst shr (0+16))
  5675  00E60C  22F8               	addwfc	tblptru,f,c
  5676  00E60E                     	endif
  5677  00E60E  0009               	tblrd		*+
  5678  00E610  006F FFD4  F04F    	movff	tablat,___flmul@a
  5679  00E616  0009               	tblrd		*+
  5680  00E618  006F FFD4  F050    	movff	tablat,___flmul@a+1
  5681  00E61E  0009               	tblrd		*+
  5682  00E620  006F FFD4  F051    	movff	tablat,___flmul@a+2
  5683  00E626  000A               	tblrd		*-
  5684  00E628  006F FFD4  F052    	movff	tablat,___flmul@a+3
  5685  00E62E  0E00               	movlw	0
  5686  00E630  6E0A               	movwf	(___awdiv@divisor+1)^0,c
  5687  00E632  0E64               	movlw	100
  5688  00E634  6E09               	movwf	___awdiv@divisor^0,c
  5689  00E636  505F               	movf	scale@scl^0,w,c
  5690  00E638  6E07               	movwf	___awdiv@dividend^0,c
  5691  00E63A  6A08               	clrf	(___awdiv@dividend+1)^0,c
  5692  00E63C  BE07               	btfsc	___awdiv@dividend^0,7,c
  5693  00E63E  0608               	decf	(___awdiv@dividend+1)^0,f,c
  5694  00E640  EC23  F064         	call	___awdiv	;wreg free
  5695  00E644  0E12               	movlw	18
  5696  00E646  2607               	addwf	?___awdiv^0,f,c
  5697  00E648  5007               	movf	?___awdiv^0,w,c
  5698  00E64A  0D04               	mullw	4
  5699  00E64C  0EC9               	movlw	low __npowers_
  5700  00E64E  24F3               	addwf	243,w,c
  5701  00E650  6EF6               	movwf	tblptrl,c
  5702  00E652  0EFE               	movlw	high __npowers_
  5703  00E654  20F4               	addwfc	244,w,c
  5704  00E656  6EF7               	movwf	tblptrh,c
  5705  00E658                     	if	1	;There are 3 active tblptr bytes
  5706  00E658  6AF8               	clrf	tblptru,c
  5707  00E65A  0E00               	movlw	low (__mediumconst shr (0+16))
  5708  00E65C  22F8               	addwfc	tblptru,f,c
  5709  00E65E                     	endif
  5710  00E65E  0009               	tblrd		*+
  5711  00E660  006F FFD4  F04B    	movff	tablat,___flmul@b
  5712  00E666  0009               	tblrd		*+
  5713  00E668  006F FFD4  F04C    	movff	tablat,___flmul@b+1
  5714  00E66E  0009               	tblrd		*+
  5715  00E670  006F FFD4  F04D    	movff	tablat,___flmul@b+2
  5716  00E676  000A               	tblrd		*-
  5717  00E678  006F FFD4  F04E    	movff	tablat,___flmul@b+3
  5718  00E67E  ECAA  F070         	call	___flmul	;wreg free
  5719  00E682  C04B  F05B         	movff	?___flmul,_scale$2198
  5720  00E686  C04C  F05C         	movff	?___flmul+1,_scale$2198+1
  5721  00E68A  C04D  F05D         	movff	?___flmul+2,_scale$2198+2
  5722  00E68E  C04E  F05E         	movff	?___flmul+3,_scale$2198+3
  5723                           
  5724                           ;doprnt.c: 439: return _npowers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char
      +                          )((scl%100)/10+9)] * _npowers_[(unsigned char)(scl%10)];
  5725  00E692  C05B  F04B         	movff	_scale$2198,___flmul@b
  5726  00E696  C05C  F04C         	movff	_scale$2198+1,___flmul@b+1
  5727  00E69A  C05D  F04D         	movff	_scale$2198+2,___flmul@b+2
  5728  00E69E  C05E  F04E         	movff	_scale$2198+3,___flmul@b+3
  5729  00E6A2  0E00               	movlw	0
  5730  00E6A4  6E04               	movwf	(___awmod@divisor+1)^0,c
  5731  00E6A6  0E0A               	movlw	10
  5732  00E6A8  6E03               	movwf	___awmod@divisor^0,c
  5733  00E6AA  505F               	movf	scale@scl^0,w,c
  5734  00E6AC  6E01               	movwf	___awmod@dividend^0,c
  5735  00E6AE  6A02               	clrf	(___awmod@dividend+1)^0,c
  5736  00E6B0  BE01               	btfsc	___awmod@dividend^0,7,c
  5737  00E6B2  0602               	decf	(___awmod@dividend+1)^0,f,c
  5738  00E6B4  ECCB  F063         	call	___awmod	;wreg free
  5739  00E6B8  5001               	movf	?___awmod^0,w,c
  5740  00E6BA  0D04               	mullw	4
  5741  00E6BC  0EC9               	movlw	low __npowers_
  5742  00E6BE  24F3               	addwf	243,w,c
  5743  00E6C0  6EF6               	movwf	tblptrl,c
  5744  00E6C2  0EFE               	movlw	high __npowers_
  5745  00E6C4  20F4               	addwfc	244,w,c
  5746  00E6C6  6EF7               	movwf	tblptrh,c
  5747  00E6C8                     	if	1	;There are 3 active tblptr bytes
  5748  00E6C8  6AF8               	clrf	tblptru,c
  5749  00E6CA  0E00               	movlw	low (__mediumconst shr (0+16))
  5750  00E6CC  22F8               	addwfc	tblptru,f,c
  5751  00E6CE                     	endif
  5752  00E6CE  0009               	tblrd		*+
  5753  00E6D0  006F FFD4  F04F    	movff	tablat,___flmul@a
  5754  00E6D6  0009               	tblrd		*+
  5755  00E6D8  006F FFD4  F050    	movff	tablat,___flmul@a+1
  5756  00E6DE  0009               	tblrd		*+
  5757  00E6E0  006F FFD4  F051    	movff	tablat,___flmul@a+2
  5758  00E6E6  000A               	tblrd		*-
  5759  00E6E8  006F FFD4  F052    	movff	tablat,___flmul@a+3
  5760  00E6EE  ECAA  F070         	call	___flmul	;wreg free
  5761  00E6F2  C04B  F057         	movff	?___flmul,?_scale
  5762  00E6F6  C04C  F058         	movff	?___flmul+1,?_scale+1
  5763  00E6FA  C04D  F059         	movff	?___flmul+2,?_scale+2
  5764  00E6FE  C04E  F05A         	movff	?___flmul+3,?_scale+3
  5765  00E702  EF2B  F075         	goto	l644
  5766  00E706                     l4109:
  5767                           
  5768                           ;doprnt.c: 440: else if(scl > 10)
  5769  00E706  505F               	movf	scale@scl^0,w,c
  5770  00E708  0A80               	xorlw	128
  5771  00E70A  0F75               	addlw	-139
  5772  00E70C  A0D8               	btfss	status,0,c
  5773  00E70E  EF8B  F073         	goto	u3631
  5774  00E712  EF8D  F073         	goto	u3630
  5775  00E716                     u3631:
  5776  00E716  EFE7  F073         	goto	l4115
  5777  00E71A                     u3630:
  5778  00E71A                     
  5779                           ;doprnt.c: 441: return _npowers_[(unsigned char)(scl/10+9)] * _npowers_[(unsigned char)(
      +                          scl%10)];
  5780  00E71A  0E00               	movlw	0
  5781  00E71C  6E0A               	movwf	(___awdiv@divisor+1)^0,c
  5782  00E71E  0E0A               	movlw	10
  5783  00E720  6E09               	movwf	___awdiv@divisor^0,c
  5784  00E722  505F               	movf	scale@scl^0,w,c
  5785  00E724  6E07               	movwf	___awdiv@dividend^0,c
  5786  00E726  6A08               	clrf	(___awdiv@dividend+1)^0,c
  5787  00E728  BE07               	btfsc	___awdiv@dividend^0,7,c
  5788  00E72A  0608               	decf	(___awdiv@dividend+1)^0,f,c
  5789  00E72C  EC23  F064         	call	___awdiv	;wreg free
  5790  00E730  0E09               	movlw	9
  5791  00E732  2607               	addwf	?___awdiv^0,f,c
  5792  00E734  5007               	movf	?___awdiv^0,w,c
  5793  00E736  0D04               	mullw	4
  5794  00E738  0EC9               	movlw	low __npowers_
  5795  00E73A  24F3               	addwf	243,w,c
  5796  00E73C  6EF6               	movwf	tblptrl,c
  5797  00E73E  0EFE               	movlw	high __npowers_
  5798  00E740  20F4               	addwfc	244,w,c
  5799  00E742  6EF7               	movwf	tblptrh,c
  5800  00E744                     	if	1	;There are 3 active tblptr bytes
  5801  00E744  6AF8               	clrf	tblptru,c
  5802  00E746  0E00               	movlw	low (__mediumconst shr (0+16))
  5803  00E748  22F8               	addwfc	tblptru,f,c
  5804  00E74A                     	endif
  5805  00E74A  0009               	tblrd		*+
  5806  00E74C  006F FFD4  F04B    	movff	tablat,___flmul@b
  5807  00E752  0009               	tblrd		*+
  5808  00E754  006F FFD4  F04C    	movff	tablat,___flmul@b+1
  5809  00E75A  0009               	tblrd		*+
  5810  00E75C  006F FFD4  F04D    	movff	tablat,___flmul@b+2
  5811  00E762  000A               	tblrd		*-
  5812  00E764  006F FFD4  F04E    	movff	tablat,___flmul@b+3
  5813  00E76A  0E00               	movlw	0
  5814  00E76C  6E04               	movwf	(___awmod@divisor+1)^0,c
  5815  00E76E  0E0A               	movlw	10
  5816  00E770  6E03               	movwf	___awmod@divisor^0,c
  5817  00E772  505F               	movf	scale@scl^0,w,c
  5818  00E774  6E01               	movwf	___awmod@dividend^0,c
  5819  00E776  6A02               	clrf	(___awmod@dividend+1)^0,c
  5820  00E778  BE01               	btfsc	___awmod@dividend^0,7,c
  5821  00E77A  0602               	decf	(___awmod@dividend+1)^0,f,c
  5822  00E77C  ECCB  F063         	call	___awmod	;wreg free
  5823  00E780  5001               	movf	?___awmod^0,w,c
  5824  00E782  0D04               	mullw	4
  5825  00E784  0EC9               	movlw	low __npowers_
  5826  00E786  24F3               	addwf	243,w,c
  5827  00E788  6EF6               	movwf	tblptrl,c
  5828  00E78A  0EFE               	movlw	high __npowers_
  5829  00E78C  20F4               	addwfc	244,w,c
  5830  00E78E  6EF7               	movwf	tblptrh,c
  5831  00E790                     	if	1	;There are 3 active tblptr bytes
  5832  00E790  6AF8               	clrf	tblptru,c
  5833  00E792  0E00               	movlw	low (__mediumconst shr (0+16))
  5834  00E794  22F8               	addwfc	tblptru,f,c
  5835  00E796                     	endif
  5836  00E796  0009               	tblrd		*+
  5837  00E798  006F FFD4  F04F    	movff	tablat,___flmul@a
  5838  00E79E  0009               	tblrd		*+
  5839  00E7A0  006F FFD4  F050    	movff	tablat,___flmul@a+1
  5840  00E7A6  0009               	tblrd		*+
  5841  00E7A8  006F FFD4  F051    	movff	tablat,___flmul@a+2
  5842  00E7AE  000A               	tblrd		*-
  5843  00E7B0  006F FFD4  F052    	movff	tablat,___flmul@a+3
  5844  00E7B6  ECAA  F070         	call	___flmul	;wreg free
  5845  00E7BA  C04B  F057         	movff	?___flmul,?_scale
  5846  00E7BE  C04C  F058         	movff	?___flmul+1,?_scale+1
  5847  00E7C2  C04D  F059         	movff	?___flmul+2,?_scale+2
  5848  00E7C6  C04E  F05A         	movff	?___flmul+3,?_scale+3
  5849  00E7CA  EF2B  F075         	goto	l644
  5850  00E7CE                     l4115:
  5851                           
  5852                           ;doprnt.c: 442: return _npowers_[(unsigned char)scl];
  5853  00E7CE  505F               	movf	scale@scl^0,w,c
  5854  00E7D0  0D04               	mullw	4
  5855  00E7D2  0EC9               	movlw	low __npowers_
  5856  00E7D4  24F3               	addwf	243,w,c
  5857  00E7D6  6EF6               	movwf	tblptrl,c
  5858  00E7D8  0EFE               	movlw	high __npowers_
  5859  00E7DA  20F4               	addwfc	244,w,c
  5860  00E7DC  6EF7               	movwf	tblptrh,c
  5861  00E7DE                     	if	1	;There are 3 active tblptr bytes
  5862  00E7DE  6AF8               	clrf	tblptru,c
  5863  00E7E0  0E00               	movlw	low (__mediumconst shr (0+16))
  5864  00E7E2  22F8               	addwfc	tblptru,f,c
  5865  00E7E4                     	endif
  5866  00E7E4  0009               	tblrd		*+
  5867  00E7E6  006F FFD4  F057    	movff	tablat,?_scale
  5868  00E7EC  0009               	tblrd		*+
  5869  00E7EE  006F FFD4  F058    	movff	tablat,?_scale+1
  5870  00E7F4  0009               	tblrd		*+
  5871  00E7F6  006F FFD4  F059    	movff	tablat,?_scale+2
  5872  00E7FC  000A               	tblrd		*-
  5873  00E7FE  006F FFD4  F05A    	movff	tablat,?_scale+3
  5874  00E804  EF2B  F075         	goto	l644
  5875  00E808                     l4119:
  5876                           
  5877                           ;doprnt.c: 443: };doprnt.c: 444: if(scl>=110)
  5878  00E808  505F               	movf	scale@scl^0,w,c
  5879  00E80A  0A80               	xorlw	128
  5880  00E80C  0F12               	addlw	-238
  5881  00E80E  A0D8               	btfss	status,0,c
  5882  00E810  EF0C  F074         	goto	u3641
  5883  00E814  EF0E  F074         	goto	u3640
  5884  00E818                     u3641:
  5885  00E818  EFAC  F074         	goto	l4127
  5886  00E81C                     u3640:
  5887  00E81C                     
  5888                           ;doprnt.c: 445: return _powers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)(
      +                          (scl%100)/10+9)] * _powers_[(unsigned char)(scl%10)];
  5889  00E81C  0E00               	movlw	0
  5890  00E81E  6E0A               	movwf	(___awdiv@divisor+1)^0,c
  5891  00E820  0E0A               	movlw	10
  5892  00E822  6E09               	movwf	___awdiv@divisor^0,c
  5893  00E824  0E00               	movlw	0
  5894  00E826  6E04               	movwf	(___awmod@divisor+1)^0,c
  5895  00E828  0E64               	movlw	100
  5896  00E82A  6E03               	movwf	___awmod@divisor^0,c
  5897  00E82C  505F               	movf	scale@scl^0,w,c
  5898  00E82E  6E01               	movwf	___awmod@dividend^0,c
  5899  00E830  6A02               	clrf	(___awmod@dividend+1)^0,c
  5900  00E832  BE01               	btfsc	___awmod@dividend^0,7,c
  5901  00E834  0602               	decf	(___awmod@dividend+1)^0,f,c
  5902  00E836  ECCB  F063         	call	___awmod	;wreg free
  5903  00E83A  C001  F007         	movff	?___awmod,___awdiv@dividend
  5904  00E83E  C002  F008         	movff	?___awmod+1,___awdiv@dividend+1
  5905  00E842  EC23  F064         	call	___awdiv	;wreg free
  5906  00E846  0E09               	movlw	9
  5907  00E848  2607               	addwf	?___awdiv^0,f,c
  5908  00E84A  5007               	movf	?___awdiv^0,w,c
  5909  00E84C  0D04               	mullw	4
  5910  00E84E  0E95               	movlw	low __powers_
  5911  00E850  24F3               	addwf	243,w,c
  5912  00E852  6EF6               	movwf	tblptrl,c
  5913  00E854  0EFE               	movlw	high __powers_
  5914  00E856  20F4               	addwfc	244,w,c
  5915  00E858  6EF7               	movwf	tblptrh,c
  5916  00E85A                     	if	1	;There are 3 active tblptr bytes
  5917  00E85A  6AF8               	clrf	tblptru,c
  5918  00E85C  0E00               	movlw	low (__mediumconst shr (0+16))
  5919  00E85E  22F8               	addwfc	tblptru,f,c
  5920  00E860                     	endif
  5921  00E860  0009               	tblrd		*+
  5922  00E862  006F FFD4  F04F    	movff	tablat,___flmul@a
  5923  00E868  0009               	tblrd		*+
  5924  00E86A  006F FFD4  F050    	movff	tablat,___flmul@a+1
  5925  00E870  0009               	tblrd		*+
  5926  00E872  006F FFD4  F051    	movff	tablat,___flmul@a+2
  5927  00E878  000A               	tblrd		*-
  5928  00E87A  006F FFD4  F052    	movff	tablat,___flmul@a+3
  5929  00E880  0E00               	movlw	0
  5930  00E882  6E0A               	movwf	(___awdiv@divisor+1)^0,c
  5931  00E884  0E64               	movlw	100
  5932  00E886  6E09               	movwf	___awdiv@divisor^0,c
  5933  00E888  505F               	movf	scale@scl^0,w,c
  5934  00E88A  6E07               	movwf	___awdiv@dividend^0,c
  5935  00E88C  6A08               	clrf	(___awdiv@dividend+1)^0,c
  5936  00E88E  BE07               	btfsc	___awdiv@dividend^0,7,c
  5937  00E890  0608               	decf	(___awdiv@dividend+1)^0,f,c
  5938  00E892  EC23  F064         	call	___awdiv	;wreg free
  5939  00E896  0E12               	movlw	18
  5940  00E898  2607               	addwf	?___awdiv^0,f,c
  5941  00E89A  5007               	movf	?___awdiv^0,w,c
  5942  00E89C  0D04               	mullw	4
  5943  00E89E  0E95               	movlw	low __powers_
  5944  00E8A0  24F3               	addwf	243,w,c
  5945  00E8A2  6EF6               	movwf	tblptrl,c
  5946  00E8A4  0EFE               	movlw	high __powers_
  5947  00E8A6  20F4               	addwfc	244,w,c
  5948  00E8A8  6EF7               	movwf	tblptrh,c
  5949  00E8AA                     	if	1	;There are 3 active tblptr bytes
  5950  00E8AA  6AF8               	clrf	tblptru,c
  5951  00E8AC  0E00               	movlw	low (__mediumconst shr (0+16))
  5952  00E8AE  22F8               	addwfc	tblptru,f,c
  5953  00E8B0                     	endif
  5954  00E8B0  0009               	tblrd		*+
  5955  00E8B2  006F FFD4  F04B    	movff	tablat,___flmul@b
  5956  00E8B8  0009               	tblrd		*+
  5957  00E8BA  006F FFD4  F04C    	movff	tablat,___flmul@b+1
  5958  00E8C0  0009               	tblrd		*+
  5959  00E8C2  006F FFD4  F04D    	movff	tablat,___flmul@b+2
  5960  00E8C8  000A               	tblrd		*-
  5961  00E8CA  006F FFD4  F04E    	movff	tablat,___flmul@b+3
  5962  00E8D0  ECAA  F070         	call	___flmul	;wreg free
  5963  00E8D4  C04B  F05B         	movff	?___flmul,_scale$2198
  5964  00E8D8  C04C  F05C         	movff	?___flmul+1,_scale$2198+1
  5965  00E8DC  C04D  F05D         	movff	?___flmul+2,_scale$2198+2
  5966  00E8E0  C04E  F05E         	movff	?___flmul+3,_scale$2198+3
  5967                           
  5968                           ;doprnt.c: 445: return _powers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)(
      +                          (scl%100)/10+9)] * _powers_[(unsigned char)(scl%10)];
  5969  00E8E4  C05B  F04B         	movff	_scale$2198,___flmul@b
  5970  00E8E8  C05C  F04C         	movff	_scale$2198+1,___flmul@b+1
  5971  00E8EC  C05D  F04D         	movff	_scale$2198+2,___flmul@b+2
  5972  00E8F0  C05E  F04E         	movff	_scale$2198+3,___flmul@b+3
  5973  00E8F4  0E00               	movlw	0
  5974  00E8F6  6E04               	movwf	(___awmod@divisor+1)^0,c
  5975  00E8F8  0E0A               	movlw	10
  5976  00E8FA  6E03               	movwf	___awmod@divisor^0,c
  5977  00E8FC  505F               	movf	scale@scl^0,w,c
  5978  00E8FE  6E01               	movwf	___awmod@dividend^0,c
  5979  00E900  6A02               	clrf	(___awmod@dividend+1)^0,c
  5980  00E902  BE01               	btfsc	___awmod@dividend^0,7,c
  5981  00E904  0602               	decf	(___awmod@dividend+1)^0,f,c
  5982  00E906  ECCB  F063         	call	___awmod	;wreg free
  5983  00E90A  5001               	movf	?___awmod^0,w,c
  5984  00E90C  0D04               	mullw	4
  5985  00E90E  0E95               	movlw	low __powers_
  5986  00E910  24F3               	addwf	243,w,c
  5987  00E912  6EF6               	movwf	tblptrl,c
  5988  00E914  0EFE               	movlw	high __powers_
  5989  00E916  20F4               	addwfc	244,w,c
  5990  00E918  6EF7               	movwf	tblptrh,c
  5991  00E91A                     	if	1	;There are 3 active tblptr bytes
  5992  00E91A  6AF8               	clrf	tblptru,c
  5993  00E91C  0E00               	movlw	low (__mediumconst shr (0+16))
  5994  00E91E  22F8               	addwfc	tblptru,f,c
  5995  00E920                     	endif
  5996  00E920  0009               	tblrd		*+
  5997  00E922  006F FFD4  F04F    	movff	tablat,___flmul@a
  5998  00E928  0009               	tblrd		*+
  5999  00E92A  006F FFD4  F050    	movff	tablat,___flmul@a+1
  6000  00E930  0009               	tblrd		*+
  6001  00E932  006F FFD4  F051    	movff	tablat,___flmul@a+2
  6002  00E938  000A               	tblrd		*-
  6003  00E93A  006F FFD4  F052    	movff	tablat,___flmul@a+3
  6004  00E940  ECAA  F070         	call	___flmul	;wreg free
  6005  00E944  C04B  F057         	movff	?___flmul,?_scale
  6006  00E948  C04C  F058         	movff	?___flmul+1,?_scale+1
  6007  00E94C  C04D  F059         	movff	?___flmul+2,?_scale+2
  6008  00E950  C04E  F05A         	movff	?___flmul+3,?_scale+3
  6009  00E954  EF2B  F075         	goto	l644
  6010  00E958                     l4127:
  6011                           
  6012                           ;doprnt.c: 446: else if(scl > 10)
  6013  00E958  505F               	movf	scale@scl^0,w,c
  6014  00E95A  0A80               	xorlw	128
  6015  00E95C  0F75               	addlw	-139
  6016  00E95E  A0D8               	btfss	status,0,c
  6017  00E960  EFB4  F074         	goto	u3651
  6018  00E964  EFB6  F074         	goto	u3650
  6019  00E968                     u3651:
  6020  00E968  EF10  F075         	goto	l4133
  6021  00E96C                     u3650:
  6022  00E96C                     
  6023                           ;doprnt.c: 447: return _powers_[(unsigned char)(scl/10+9)] * _powers_[(unsigned char)(sc
      +                          l%10)];
  6024  00E96C  0E00               	movlw	0
  6025  00E96E  6E0A               	movwf	(___awdiv@divisor+1)^0,c
  6026  00E970  0E0A               	movlw	10
  6027  00E972  6E09               	movwf	___awdiv@divisor^0,c
  6028  00E974  505F               	movf	scale@scl^0,w,c
  6029  00E976  6E07               	movwf	___awdiv@dividend^0,c
  6030  00E978  6A08               	clrf	(___awdiv@dividend+1)^0,c
  6031  00E97A  BE07               	btfsc	___awdiv@dividend^0,7,c
  6032  00E97C  0608               	decf	(___awdiv@dividend+1)^0,f,c
  6033  00E97E  EC23  F064         	call	___awdiv	;wreg free
  6034  00E982  0E09               	movlw	9
  6035  00E984  2607               	addwf	?___awdiv^0,f,c
  6036  00E986  5007               	movf	?___awdiv^0,w,c
  6037  00E988  0D04               	mullw	4
  6038  00E98A  0E95               	movlw	low __powers_
  6039  00E98C  24F3               	addwf	243,w,c
  6040  00E98E  6EF6               	movwf	tblptrl,c
  6041  00E990  0EFE               	movlw	high __powers_
  6042  00E992  20F4               	addwfc	244,w,c
  6043  00E994  6EF7               	movwf	tblptrh,c
  6044  00E996                     	if	1	;There are 3 active tblptr bytes
  6045  00E996  6AF8               	clrf	tblptru,c
  6046  00E998  0E00               	movlw	low (__mediumconst shr (0+16))
  6047  00E99A  22F8               	addwfc	tblptru,f,c
  6048  00E99C                     	endif
  6049  00E99C  0009               	tblrd		*+
  6050  00E99E  006F FFD4  F04B    	movff	tablat,___flmul@b
  6051  00E9A4  0009               	tblrd		*+
  6052  00E9A6  006F FFD4  F04C    	movff	tablat,___flmul@b+1
  6053  00E9AC  0009               	tblrd		*+
  6054  00E9AE  006F FFD4  F04D    	movff	tablat,___flmul@b+2
  6055  00E9B4  000A               	tblrd		*-
  6056  00E9B6  006F FFD4  F04E    	movff	tablat,___flmul@b+3
  6057  00E9BC  0E00               	movlw	0
  6058  00E9BE  6E04               	movwf	(___awmod@divisor+1)^0,c
  6059  00E9C0  0E0A               	movlw	10
  6060  00E9C2  6E03               	movwf	___awmod@divisor^0,c
  6061  00E9C4  505F               	movf	scale@scl^0,w,c
  6062  00E9C6  6E01               	movwf	___awmod@dividend^0,c
  6063  00E9C8  6A02               	clrf	(___awmod@dividend+1)^0,c
  6064  00E9CA  BE01               	btfsc	___awmod@dividend^0,7,c
  6065  00E9CC  0602               	decf	(___awmod@dividend+1)^0,f,c
  6066  00E9CE  ECCB  F063         	call	___awmod	;wreg free
  6067  00E9D2  5001               	movf	?___awmod^0,w,c
  6068  00E9D4  0D04               	mullw	4
  6069  00E9D6  0E95               	movlw	low __powers_
  6070  00E9D8  24F3               	addwf	243,w,c
  6071  00E9DA  6EF6               	movwf	tblptrl,c
  6072  00E9DC  0EFE               	movlw	high __powers_
  6073  00E9DE  20F4               	addwfc	244,w,c
  6074  00E9E0  6EF7               	movwf	tblptrh,c
  6075  00E9E2                     	if	1	;There are 3 active tblptr bytes
  6076  00E9E2  6AF8               	clrf	tblptru,c
  6077  00E9E4  0E00               	movlw	low (__mediumconst shr (0+16))
  6078  00E9E6  22F8               	addwfc	tblptru,f,c
  6079  00E9E8                     	endif
  6080  00E9E8  0009               	tblrd		*+
  6081  00E9EA  006F FFD4  F04F    	movff	tablat,___flmul@a
  6082  00E9F0  0009               	tblrd		*+
  6083  00E9F2  006F FFD4  F050    	movff	tablat,___flmul@a+1
  6084  00E9F8  0009               	tblrd		*+
  6085  00E9FA  006F FFD4  F051    	movff	tablat,___flmul@a+2
  6086  00EA00  000A               	tblrd		*-
  6087  00EA02  006F FFD4  F052    	movff	tablat,___flmul@a+3
  6088  00EA08  ECAA  F070         	call	___flmul	;wreg free
  6089  00EA0C  C04B  F057         	movff	?___flmul,?_scale
  6090  00EA10  C04C  F058         	movff	?___flmul+1,?_scale+1
  6091  00EA14  C04D  F059         	movff	?___flmul+2,?_scale+2
  6092  00EA18  C04E  F05A         	movff	?___flmul+3,?_scale+3
  6093  00EA1C  EF2B  F075         	goto	l644
  6094  00EA20                     l4133:
  6095                           
  6096                           ;doprnt.c: 448: return _powers_[(unsigned char)scl];
  6097  00EA20  505F               	movf	scale@scl^0,w,c
  6098  00EA22  0D04               	mullw	4
  6099  00EA24  0E95               	movlw	low __powers_
  6100  00EA26  24F3               	addwf	243,w,c
  6101  00EA28  6EF6               	movwf	tblptrl,c
  6102  00EA2A  0EFE               	movlw	high __powers_
  6103  00EA2C  20F4               	addwfc	244,w,c
  6104  00EA2E  6EF7               	movwf	tblptrh,c
  6105  00EA30                     	if	1	;There are 3 active tblptr bytes
  6106  00EA30  6AF8               	clrf	tblptru,c
  6107  00EA32  0E00               	movlw	low (__mediumconst shr (0+16))
  6108  00EA34  22F8               	addwfc	tblptru,f,c
  6109  00EA36                     	endif
  6110  00EA36  0009               	tblrd		*+
  6111  00EA38  006F FFD4  F057    	movff	tablat,?_scale
  6112  00EA3E  0009               	tblrd		*+
  6113  00EA40  006F FFD4  F058    	movff	tablat,?_scale+1
  6114  00EA46  0009               	tblrd		*+
  6115  00EA48  006F FFD4  F059    	movff	tablat,?_scale+2
  6116  00EA4E  000A               	tblrd		*-
  6117  00EA50  006F FFD4  F05A    	movff	tablat,?_scale+3
  6118  00EA56                     l644:
  6119  00EA56  0012               	return		;funcret
  6120  00EA58                     __end_of_scale:
  6121                           	callstack 0
  6122                           
  6123 ;; *************** function ___awmod *****************
  6124 ;; Defined at:
  6125 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\awmod.c"
  6126 ;; Parameters:    Size  Location     Type
  6127 ;;  dividend        2    0[COMRAM] int 
  6128 ;;  divisor         2    2[COMRAM] int 
  6129 ;; Auto vars:     Size  Location     Type
  6130 ;;  sign            1    5[COMRAM] unsigned char 
  6131 ;;  counter         1    4[COMRAM] unsigned char 
  6132 ;; Return value:  Size  Location     Type
  6133 ;;                  2    0[COMRAM] int 
  6134 ;; Registers used:
  6135 ;;		wreg, status,2, status,0
  6136 ;; Tracked objects:
  6137 ;;		On entry : 0/0
  6138 ;;		On exit  : 0/0
  6139 ;;		Unchanged: 0/0
  6140 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6141 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6142 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6143 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6144 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6145 ;;Total ram usage:        6 bytes
  6146 ;; Hardware stack levels used:    1
  6147 ;; This function calls:
  6148 ;;		Nothing
  6149 ;; This function is called by:
  6150 ;;		_scale
  6151 ;; This function uses a non-reentrant model
  6152 ;;
  6153                           
  6154                           	psect	text13
  6155  00C796                     __ptext13:
  6156                           	callstack 0
  6157  00C796                     ___awmod:
  6158                           	callstack 28
  6159  00C796  0E00               	movlw	0
  6160  00C798  6E06               	movwf	___awmod@sign^0,c
  6161  00C79A  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
  6162  00C79C  EFD4  F063         	goto	u3230
  6163  00C7A0  EFD2  F063         	goto	u3231
  6164  00C7A4                     u3231:
  6165  00C7A4  EFDA  F063         	goto	l3875
  6166  00C7A8                     u3230:
  6167  00C7A8  6C01               	negf	___awmod@dividend^0,c
  6168  00C7AA  1E02               	comf	(___awmod@dividend+1)^0,f,c
  6169  00C7AC  B0D8               	btfsc	status,0,c
  6170  00C7AE  2A02               	incf	(___awmod@dividend+1)^0,f,c
  6171  00C7B0  0E01               	movlw	1
  6172  00C7B2  6E06               	movwf	___awmod@sign^0,c
  6173  00C7B4                     l3875:
  6174  00C7B4  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
  6175  00C7B6  EFE1  F063         	goto	u3240
  6176  00C7BA  EFDF  F063         	goto	u3241
  6177  00C7BE                     u3241:
  6178  00C7BE  EFE5  F063         	goto	l3879
  6179  00C7C2                     u3240:
  6180  00C7C2  6C03               	negf	___awmod@divisor^0,c
  6181  00C7C4  1E04               	comf	(___awmod@divisor+1)^0,f,c
  6182  00C7C6  B0D8               	btfsc	status,0,c
  6183  00C7C8  2A04               	incf	(___awmod@divisor+1)^0,f,c
  6184  00C7CA                     l3879:
  6185  00C7CA  5003               	movf	___awmod@divisor^0,w,c
  6186  00C7CC  1004               	iorwf	(___awmod@divisor+1)^0,w,c
  6187  00C7CE  B4D8               	btfsc	status,2,c
  6188  00C7D0  EFEC  F063         	goto	u3251
  6189  00C7D4  EFEE  F063         	goto	u3250
  6190  00C7D8                     u3251:
  6191  00C7D8  EF12  F064         	goto	l3895
  6192  00C7DC                     u3250:
  6193  00C7DC  0E01               	movlw	1
  6194  00C7DE  6E05               	movwf	___awmod@counter^0,c
  6195  00C7E0  EFF6  F063         	goto	l3885
  6196  00C7E4                     l3883:
  6197  00C7E4  90D8               	bcf	status,0,c
  6198  00C7E6  3603               	rlcf	___awmod@divisor^0,f,c
  6199  00C7E8  3604               	rlcf	(___awmod@divisor+1)^0,f,c
  6200  00C7EA  2A05               	incf	___awmod@counter^0,f,c
  6201  00C7EC                     l3885:
  6202  00C7EC  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  6203  00C7EE  EFFB  F063         	goto	u3261
  6204  00C7F2  EFFD  F063         	goto	u3260
  6205  00C7F6                     u3261:
  6206  00C7F6  EFF2  F063         	goto	l3883
  6207  00C7FA                     u3260:
  6208  00C7FA                     l3887:
  6209  00C7FA  5003               	movf	___awmod@divisor^0,w,c
  6210  00C7FC  5C01               	subwf	___awmod@dividend^0,w,c
  6211  00C7FE  5004               	movf	(___awmod@divisor+1)^0,w,c
  6212  00C800  5802               	subwfb	(___awmod@dividend+1)^0,w,c
  6213  00C802  A0D8               	btfss	status,0,c
  6214  00C804  EF06  F064         	goto	u3271
  6215  00C808  EF08  F064         	goto	u3270
  6216  00C80C                     u3271:
  6217  00C80C  EF0C  F064         	goto	l3891
  6218  00C810                     u3270:
  6219  00C810  5003               	movf	___awmod@divisor^0,w,c
  6220  00C812  5E01               	subwf	___awmod@dividend^0,f,c
  6221  00C814  5004               	movf	(___awmod@divisor+1)^0,w,c
  6222  00C816  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
  6223  00C818                     l3891:
  6224  00C818  90D8               	bcf	status,0,c
  6225  00C81A  3204               	rrcf	(___awmod@divisor+1)^0,f,c
  6226  00C81C  3203               	rrcf	___awmod@divisor^0,f,c
  6227  00C81E  2E05               	decfsz	___awmod@counter^0,f,c
  6228  00C820  EFFD  F063         	goto	l3887
  6229  00C824                     l3895:
  6230  00C824  5006               	movf	___awmod@sign^0,w,c
  6231  00C826  B4D8               	btfsc	status,2,c
  6232  00C828  EF18  F064         	goto	u3281
  6233  00C82C  EF1A  F064         	goto	u3280
  6234  00C830                     u3281:
  6235  00C830  EF1E  F064         	goto	l3899
  6236  00C834                     u3280:
  6237  00C834  6C01               	negf	___awmod@dividend^0,c
  6238  00C836  1E02               	comf	(___awmod@dividend+1)^0,f,c
  6239  00C838  B0D8               	btfsc	status,0,c
  6240  00C83A  2A02               	incf	(___awmod@dividend+1)^0,f,c
  6241  00C83C                     l3899:
  6242  00C83C  C001  F001         	movff	___awmod@dividend,?___awmod
  6243  00C840  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  6244  00C844  0012               	return		;funcret
  6245  00C846                     __end_of___awmod:
  6246                           	callstack 0
  6247                           
  6248 ;; *************** function ___awdiv *****************
  6249 ;; Defined at:
  6250 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\awdiv.c"
  6251 ;; Parameters:    Size  Location     Type
  6252 ;;  dividend        2    6[COMRAM] int 
  6253 ;;  divisor         2    8[COMRAM] int 
  6254 ;; Auto vars:     Size  Location     Type
  6255 ;;  quotient        2   12[COMRAM] int 
  6256 ;;  sign            1   11[COMRAM] unsigned char 
  6257 ;;  counter         1   10[COMRAM] unsigned char 
  6258 ;; Return value:  Size  Location     Type
  6259 ;;                  2    6[COMRAM] int 
  6260 ;; Registers used:
  6261 ;;		wreg, status,2, status,0
  6262 ;; Tracked objects:
  6263 ;;		On entry : 0/0
  6264 ;;		On exit  : 0/0
  6265 ;;		Unchanged: 0/0
  6266 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6267 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6268 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6269 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6270 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6271 ;;Total ram usage:        8 bytes
  6272 ;; Hardware stack levels used:    1
  6273 ;; This function calls:
  6274 ;;		Nothing
  6275 ;; This function is called by:
  6276 ;;		_scale
  6277 ;;		_printf
  6278 ;; This function uses a non-reentrant model
  6279 ;;
  6280                           
  6281                           	psect	text14
  6282  00C846                     __ptext14:
  6283                           	callstack 0
  6284  00C846                     ___awdiv:
  6285                           	callstack 28
  6286  00C846  0E00               	movlw	0
  6287  00C848  6E0C               	movwf	___awdiv@sign^0,c
  6288  00C84A  BE0A               	btfsc	(___awdiv@divisor+1)^0,7,c
  6289  00C84C  EF2C  F064         	goto	u3170
  6290  00C850  EF2A  F064         	goto	u3171
  6291  00C854                     u3171:
  6292  00C854  EF32  F064         	goto	l3831
  6293  00C858                     u3170:
  6294  00C858  6C09               	negf	___awdiv@divisor^0,c
  6295  00C85A  1E0A               	comf	(___awdiv@divisor+1)^0,f,c
  6296  00C85C  B0D8               	btfsc	status,0,c
  6297  00C85E  2A0A               	incf	(___awdiv@divisor+1)^0,f,c
  6298  00C860  0E01               	movlw	1
  6299  00C862  6E0C               	movwf	___awdiv@sign^0,c
  6300  00C864                     l3831:
  6301  00C864  BE08               	btfsc	(___awdiv@dividend+1)^0,7,c
  6302  00C866  EF39  F064         	goto	u3180
  6303  00C86A  EF37  F064         	goto	u3181
  6304  00C86E                     u3181:
  6305  00C86E  EF3F  F064         	goto	l3837
  6306  00C872                     u3180:
  6307  00C872  6C07               	negf	___awdiv@dividend^0,c
  6308  00C874  1E08               	comf	(___awdiv@dividend+1)^0,f,c
  6309  00C876  B0D8               	btfsc	status,0,c
  6310  00C878  2A08               	incf	(___awdiv@dividend+1)^0,f,c
  6311  00C87A  0E01               	movlw	1
  6312  00C87C  1A0C               	xorwf	___awdiv@sign^0,f,c
  6313  00C87E                     l3837:
  6314  00C87E  0E00               	movlw	0
  6315  00C880  6E0E               	movwf	(___awdiv@quotient+1)^0,c
  6316  00C882  0E00               	movlw	0
  6317  00C884  6E0D               	movwf	___awdiv@quotient^0,c
  6318  00C886  5009               	movf	___awdiv@divisor^0,w,c
  6319  00C888  100A               	iorwf	(___awdiv@divisor+1)^0,w,c
  6320  00C88A  B4D8               	btfsc	status,2,c
  6321  00C88C  EF4A  F064         	goto	u3191
  6322  00C890  EF4C  F064         	goto	u3190
  6323  00C894                     u3191:
  6324  00C894  EF74  F064         	goto	l3859
  6325  00C898                     u3190:
  6326  00C898  0E01               	movlw	1
  6327  00C89A  6E0B               	movwf	___awdiv@counter^0,c
  6328  00C89C  EF54  F064         	goto	l3845
  6329  00C8A0                     l3843:
  6330  00C8A0  90D8               	bcf	status,0,c
  6331  00C8A2  3609               	rlcf	___awdiv@divisor^0,f,c
  6332  00C8A4  360A               	rlcf	(___awdiv@divisor+1)^0,f,c
  6333  00C8A6  2A0B               	incf	___awdiv@counter^0,f,c
  6334  00C8A8                     l3845:
  6335  00C8A8  AE0A               	btfss	(___awdiv@divisor+1)^0,7,c
  6336  00C8AA  EF59  F064         	goto	u3201
  6337  00C8AE  EF5B  F064         	goto	u3200
  6338  00C8B2                     u3201:
  6339  00C8B2  EF50  F064         	goto	l3843
  6340  00C8B6                     u3200:
  6341  00C8B6                     l3847:
  6342  00C8B6  90D8               	bcf	status,0,c
  6343  00C8B8  360D               	rlcf	___awdiv@quotient^0,f,c
  6344  00C8BA  360E               	rlcf	(___awdiv@quotient+1)^0,f,c
  6345  00C8BC  5009               	movf	___awdiv@divisor^0,w,c
  6346  00C8BE  5C07               	subwf	___awdiv@dividend^0,w,c
  6347  00C8C0  500A               	movf	(___awdiv@divisor+1)^0,w,c
  6348  00C8C2  5808               	subwfb	(___awdiv@dividend+1)^0,w,c
  6349  00C8C4  A0D8               	btfss	status,0,c
  6350  00C8C6  EF67  F064         	goto	u3211
  6351  00C8CA  EF69  F064         	goto	u3210
  6352  00C8CE                     u3211:
  6353  00C8CE  EF6E  F064         	goto	l3855
  6354  00C8D2                     u3210:
  6355  00C8D2  5009               	movf	___awdiv@divisor^0,w,c
  6356  00C8D4  5E07               	subwf	___awdiv@dividend^0,f,c
  6357  00C8D6  500A               	movf	(___awdiv@divisor+1)^0,w,c
  6358  00C8D8  5A08               	subwfb	(___awdiv@dividend+1)^0,f,c
  6359  00C8DA  800D               	bsf	___awdiv@quotient^0,0,c
  6360  00C8DC                     l3855:
  6361  00C8DC  90D8               	bcf	status,0,c
  6362  00C8DE  320A               	rrcf	(___awdiv@divisor+1)^0,f,c
  6363  00C8E0  3209               	rrcf	___awdiv@divisor^0,f,c
  6364  00C8E2  2E0B               	decfsz	___awdiv@counter^0,f,c
  6365  00C8E4  EF5B  F064         	goto	l3847
  6366  00C8E8                     l3859:
  6367  00C8E8  500C               	movf	___awdiv@sign^0,w,c
  6368  00C8EA  B4D8               	btfsc	status,2,c
  6369  00C8EC  EF7A  F064         	goto	u3221
  6370  00C8F0  EF7C  F064         	goto	u3220
  6371  00C8F4                     u3221:
  6372  00C8F4  EF80  F064         	goto	l3863
  6373  00C8F8                     u3220:
  6374  00C8F8  6C0D               	negf	___awdiv@quotient^0,c
  6375  00C8FA  1E0E               	comf	(___awdiv@quotient+1)^0,f,c
  6376  00C8FC  B0D8               	btfsc	status,0,c
  6377  00C8FE  2A0E               	incf	(___awdiv@quotient+1)^0,f,c
  6378  00C900                     l3863:
  6379  00C900  C00D  F007         	movff	___awdiv@quotient,?___awdiv
  6380  00C904  C00E  F008         	movff	___awdiv@quotient+1,?___awdiv+1
  6381  00C908  0012               	return		;funcret
  6382  00C90A                     __end_of___awdiv:
  6383                           	callstack 0
  6384                           
  6385 ;; *************** function _putch *****************
  6386 ;; Defined at:
  6387 ;;		line 175 in file "mcc_generated_files/uart2.c"
  6388 ;; Parameters:    Size  Location     Type
  6389 ;;  txData          1    wreg     unsigned char 
  6390 ;; Auto vars:     Size  Location     Type
  6391 ;;  txData          1    1[COMRAM] unsigned char 
  6392 ;; Return value:  Size  Location     Type
  6393 ;;                  1    wreg      void 
  6394 ;; Registers used:
  6395 ;;		wreg, status,2, cstack
  6396 ;; Tracked objects:
  6397 ;;		On entry : 0/0
  6398 ;;		On exit  : 0/0
  6399 ;;		Unchanged: 0/0
  6400 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6401 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6402 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6403 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6404 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6405 ;;Total ram usage:        1 bytes
  6406 ;; Hardware stack levels used:    1
  6407 ;; Hardware stack levels required when called:    1
  6408 ;; This function calls:
  6409 ;;		_UART2_Write
  6410 ;; This function is called by:
  6411 ;;		_printf
  6412 ;; This function uses a non-reentrant model
  6413 ;;
  6414                           
  6415                           	psect	text15
  6416  00BF84                     __ptext15:
  6417                           	callstack 0
  6418  00BF84                     _putch:
  6419                           	callstack 28
  6420                           
  6421                           ;incstack = 0
  6422                           ;putch@txData stored from wreg
  6423  00BF84  6E02               	movwf	putch@txData^0,c
  6424  00BF86                     
  6425                           ;uart2.c: 177: UART2_Write(txData);
  6426  00BF86  5002               	movf	putch@txData^0,w,c
  6427  00BF88  EC06  F060         	call	_UART2_Write
  6428  00BF8C  0012               	return		;funcret
  6429  00BF8E                     __end_of_putch:
  6430                           	callstack 0
  6431                           
  6432 ;; *************** function _UART2_Write *****************
  6433 ;; Defined at:
  6434 ;;		line 161 in file "mcc_generated_files/uart2.c"
  6435 ;; Parameters:    Size  Location     Type
  6436 ;;  txData          1    wreg     unsigned char 
  6437 ;; Auto vars:     Size  Location     Type
  6438 ;;  txData          1    0[COMRAM] unsigned char 
  6439 ;; Return value:  Size  Location     Type
  6440 ;;                  1    wreg      void 
  6441 ;; Registers used:
  6442 ;;		wreg
  6443 ;; Tracked objects:
  6444 ;;		On entry : 0/0
  6445 ;;		On exit  : 0/0
  6446 ;;		Unchanged: 0/0
  6447 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6448 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6449 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6450 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6451 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6452 ;;Total ram usage:        1 bytes
  6453 ;; Hardware stack levels used:    1
  6454 ;; This function calls:
  6455 ;;		Nothing
  6456 ;; This function is called by:
  6457 ;;		_putch
  6458 ;; This function uses a non-reentrant model
  6459 ;;
  6460                           
  6461                           	psect	text16
  6462  00C00C                     __ptext16:
  6463                           	callstack 0
  6464  00C00C                     _UART2_Write:
  6465                           	callstack 28
  6466                           
  6467                           ;incstack = 0
  6468                           ;UART2_Write@txData stored from wreg
  6469  00C00C  6E01               	movwf	UART2_Write@txData^0,c
  6470  00C00E                     l288:
  6471  00C00E  0139               	movlb	57	; () banked
  6472  00C010  A7A6               	btfss	166,3,b	;volatile
  6473  00C012  EF0D  F060         	goto	u2581
  6474  00C016  EF0F  F060         	goto	u2580
  6475  00C01A                     u2581:
  6476  00C01A  EF07  F060         	goto	l288
  6477  00C01E                     u2580:
  6478  00C01E                     
  6479                           ; BSR set to: 57
  6480                           ;uart2.c: 165: };uart2.c: 167: U2TXB = txData;
  6481  00C01E  0060  F007  FDD2   	movff	UART2_Write@txData,15826	;volatile
  6482  00C024                     
  6483                           ; BSR set to: 57
  6484  00C024  0012               	return		;funcret
  6485  00C026                     __end_of_UART2_Write:
  6486                           	callstack 0
  6487                           
  6488 ;; *************** function _fround *****************
  6489 ;; Defined at:
  6490 ;;		line 417 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c"
  6491 ;; Parameters:    Size  Location     Type
  6492 ;;  prec            1    wreg     unsigned char 
  6493 ;; Auto vars:     Size  Location     Type
  6494 ;;  prec            1   21[BANK0 ] unsigned char 
  6495 ;; Return value:  Size  Location     Type
  6496 ;;                  4   86[COMRAM] unsigned char 
  6497 ;; Registers used:
  6498 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6499 ;; Tracked objects:
  6500 ;;		On entry : 0/0
  6501 ;;		On exit  : 0/0
  6502 ;;		Unchanged: 0/0
  6503 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6504 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6505 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6506 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6507 ;;      Totals:         4       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6508 ;;Total ram usage:       13 bytes
  6509 ;; Hardware stack levels used:    1
  6510 ;; Hardware stack levels required when called:    1
  6511 ;; This function calls:
  6512 ;;		___flmul
  6513 ;;		___lwdiv
  6514 ;;		___lwmod
  6515 ;; This function is called by:
  6516 ;;		_printf
  6517 ;; This function uses a non-reentrant model
  6518 ;;
  6519                           
  6520                           	psect	text17
  6521  00DABE                     __ptext17:
  6522                           	callstack 0
  6523  00DABE                     _fround:
  6524                           	callstack 28
  6525                           
  6526                           ; BSR set to: 57
  6527                           ;incstack = 0
  6528                           ;fround@prec stored from wreg
  6529  00DABE  0100               	movlb	0	; () banked
  6530  00DAC0  6F75               	movwf	fround@prec& (0+255),b
  6531  00DAC2                     
  6532                           ;doprnt.c: 421: if(prec>=110)
  6533  00DAC2  0E6D               	movlw	109
  6534  00DAC4  0100               	movlb	0	; () banked
  6535  00DAC6  6575               	cpfsgt	fround@prec& (0+255),b
  6536  00DAC8  EF68  F06D         	goto	u3591
  6537  00DACC  EF6A  F06D         	goto	u3590
  6538  00DAD0                     u3591:
  6539  00DAD0  EF2C  F06E         	goto	l4089
  6540  00DAD4                     u3590:
  6541  00DAD4                     
  6542                           ; BSR set to: 0
  6543                           ;doprnt.c: 422: return 0.5 * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * 
      +                          _npowers_[prec%10U];
  6544  00DAD4  0E00               	movlw	0
  6545  00DAD6  6E4F               	movwf	___flmul@a^0,c
  6546  00DAD8  0E00               	movlw	0
  6547  00DADA  6E50               	movwf	(___flmul@a+1)^0,c
  6548  00DADC  0E00               	movlw	0
  6549  00DADE  6E51               	movwf	(___flmul@a+2)^0,c
  6550  00DAE0  0E3F               	movlw	63
  6551  00DAE2  6E52               	movwf	(___flmul@a+3)^0,c
  6552  00DAE4  0E00               	movlw	0
  6553  00DAE6  6E09               	movwf	(___lwdiv@divisor+1)^0,c
  6554  00DAE8  0E64               	movlw	100
  6555  00DAEA  6E08               	movwf	___lwdiv@divisor^0,c
  6556  00DAEC  C075  F006         	movff	fround@prec,___lwdiv@dividend
  6557  00DAF0  6A07               	clrf	(___lwdiv@dividend+1)^0,c
  6558  00DAF2  EC8A  F061         	call	___lwdiv	;wreg free
  6559  00DAF6  90D8               	bcf	status,0,c
  6560  00DAF8  3606               	rlcf	?___lwdiv^0,f,c
  6561  00DAFA  3607               	rlcf	(?___lwdiv+1)^0,f,c
  6562  00DAFC  90D8               	bcf	status,0,c
  6563  00DAFE  3606               	rlcf	?___lwdiv^0,f,c
  6564  00DB00  3607               	rlcf	(?___lwdiv+1)^0,f,c
  6565  00DB02  0E48               	movlw	72
  6566  00DB04  2606               	addwf	?___lwdiv^0,f,c
  6567  00DB06  0E00               	movlw	0
  6568  00DB08  2207               	addwfc	(?___lwdiv+1)^0,f,c
  6569  00DB0A  0EC9               	movlw	low __npowers_
  6570  00DB0C  2406               	addwf	?___lwdiv^0,w,c
  6571  00DB0E  6EF6               	movwf	tblptrl,c
  6572  00DB10  0EFE               	movlw	high __npowers_
  6573  00DB12  2007               	addwfc	(?___lwdiv+1)^0,w,c
  6574  00DB14  6EF7               	movwf	tblptrh,c
  6575  00DB16                     	if	1	;There are 3 active tblptr bytes
  6576  00DB16  6AF8               	clrf	tblptru,c
  6577  00DB18  0E00               	movlw	low (__mediumconst shr (0+16))
  6578  00DB1A  22F8               	addwfc	tblptru,f,c
  6579  00DB1C                     	endif
  6580  00DB1C  0009               	tblrd		*+
  6581  00DB1E  006F FFD4  F04B    	movff	tablat,___flmul@b
  6582  00DB24  0009               	tblrd		*+
  6583  00DB26  006F FFD4  F04C    	movff	tablat,___flmul@b+1
  6584  00DB2C  0009               	tblrd		*+
  6585  00DB2E  006F FFD4  F04D    	movff	tablat,___flmul@b+2
  6586  00DB34  000A               	tblrd		*-
  6587  00DB36  006F FFD4  F04E    	movff	tablat,___flmul@b+3
  6588  00DB3C  ECAA  F070         	call	___flmul	;wreg free
  6589  00DB40  C04B  F071         	movff	?___flmul,_fround$2196
  6590  00DB44  C04C  F072         	movff	?___flmul+1,_fround$2196+1
  6591  00DB48  C04D  F073         	movff	?___flmul+2,_fround$2196+2
  6592  00DB4C  C04E  F074         	movff	?___flmul+3,_fround$2196+3
  6593                           
  6594                           ;doprnt.c: 422: return 0.5 * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * 
      +                          _npowers_[prec%10U];
  6595  00DB50  0E00               	movlw	0
  6596  00DB52  6E09               	movwf	(___lwdiv@divisor+1)^0,c
  6597  00DB54  0E0A               	movlw	10
  6598  00DB56  6E08               	movwf	___lwdiv@divisor^0,c
  6599  00DB58  0E00               	movlw	0
  6600  00DB5A  6E04               	movwf	(___lwmod@divisor+1)^0,c
  6601  00DB5C  0E64               	movlw	100
  6602  00DB5E  6E03               	movwf	___lwmod@divisor^0,c
  6603  00DB60  C075  F001         	movff	fround@prec,___lwmod@dividend
  6604  00DB64  6A02               	clrf	(___lwmod@dividend+1)^0,c
  6605  00DB66  EC58  F061         	call	___lwmod	;wreg free
  6606  00DB6A  C001  F006         	movff	?___lwmod,___lwdiv@dividend
  6607  00DB6E  C002  F007         	movff	?___lwmod+1,___lwdiv@dividend+1
  6608  00DB72  EC8A  F061         	call	___lwdiv	;wreg free
  6609  00DB76  90D8               	bcf	status,0,c
  6610  00DB78  3606               	rlcf	?___lwdiv^0,f,c
  6611  00DB7A  3607               	rlcf	(?___lwdiv+1)^0,f,c
  6612  00DB7C  90D8               	bcf	status,0,c
  6613  00DB7E  3606               	rlcf	?___lwdiv^0,f,c
  6614  00DB80  3607               	rlcf	(?___lwdiv+1)^0,f,c
  6615  00DB82  0E24               	movlw	36
  6616  00DB84  2606               	addwf	?___lwdiv^0,f,c
  6617  00DB86  0E00               	movlw	0
  6618  00DB88  2207               	addwfc	(?___lwdiv+1)^0,f,c
  6619  00DB8A  0EC9               	movlw	low __npowers_
  6620  00DB8C  2406               	addwf	?___lwdiv^0,w,c
  6621  00DB8E  6EF6               	movwf	tblptrl,c
  6622  00DB90  0EFE               	movlw	high __npowers_
  6623  00DB92  2007               	addwfc	(?___lwdiv+1)^0,w,c
  6624  00DB94  6EF7               	movwf	tblptrh,c
  6625  00DB96                     	if	1	;There are 3 active tblptr bytes
  6626  00DB96  6AF8               	clrf	tblptru,c
  6627  00DB98  0E00               	movlw	low (__mediumconst shr (0+16))
  6628  00DB9A  22F8               	addwfc	tblptru,f,c
  6629  00DB9C                     	endif
  6630  00DB9C  0009               	tblrd		*+
  6631  00DB9E  006F FFD4  F04F    	movff	tablat,___flmul@a
  6632  00DBA4  0009               	tblrd		*+
  6633  00DBA6  006F FFD4  F050    	movff	tablat,___flmul@a+1
  6634  00DBAC  0009               	tblrd		*+
  6635  00DBAE  006F FFD4  F051    	movff	tablat,___flmul@a+2
  6636  00DBB4  000A               	tblrd		*-
  6637  00DBB6  006F FFD4  F052    	movff	tablat,___flmul@a+3
  6638  00DBBC  C071  F04B         	movff	_fround$2196,___flmul@b
  6639  00DBC0  C072  F04C         	movff	_fround$2196+1,___flmul@b+1
  6640  00DBC4  C073  F04D         	movff	_fround$2196+2,___flmul@b+2
  6641  00DBC8  C074  F04E         	movff	_fround$2196+3,___flmul@b+3
  6642  00DBCC  ECAA  F070         	call	___flmul	;wreg free
  6643  00DBD0  C04B  F06D         	movff	?___flmul,_fround$2197
  6644  00DBD4  C04C  F06E         	movff	?___flmul+1,_fround$2197+1
  6645  00DBD8  C04D  F06F         	movff	?___flmul+2,_fround$2197+2
  6646  00DBDC  C04E  F070         	movff	?___flmul+3,_fround$2197+3
  6647                           
  6648                           ;doprnt.c: 422: return 0.5 * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * 
      +                          _npowers_[prec%10U];
  6649  00DBE0  C06D  F04B         	movff	_fround$2197,___flmul@b
  6650  00DBE4  C06E  F04C         	movff	_fround$2197+1,___flmul@b+1
  6651  00DBE8  C06F  F04D         	movff	_fround$2197+2,___flmul@b+2
  6652  00DBEC  C070  F04E         	movff	_fround$2197+3,___flmul@b+3
  6653  00DBF0  0E00               	movlw	0
  6654  00DBF2  6E04               	movwf	(___lwmod@divisor+1)^0,c
  6655  00DBF4  0E0A               	movlw	10
  6656  00DBF6  6E03               	movwf	___lwmod@divisor^0,c
  6657  00DBF8  C075  F001         	movff	fround@prec,___lwmod@dividend
  6658  00DBFC  6A02               	clrf	(___lwmod@dividend+1)^0,c
  6659  00DBFE  EC58  F061         	call	___lwmod	;wreg free
  6660  00DC02  90D8               	bcf	status,0,c
  6661  00DC04  3601               	rlcf	?___lwmod^0,f,c
  6662  00DC06  3602               	rlcf	(?___lwmod+1)^0,f,c
  6663  00DC08  90D8               	bcf	status,0,c
  6664  00DC0A  3601               	rlcf	?___lwmod^0,f,c
  6665  00DC0C  3602               	rlcf	(?___lwmod+1)^0,f,c
  6666  00DC0E  0EC9               	movlw	low __npowers_
  6667  00DC10  2401               	addwf	?___lwmod^0,w,c
  6668  00DC12  6EF6               	movwf	tblptrl,c
  6669  00DC14  0EFE               	movlw	high __npowers_
  6670  00DC16  2002               	addwfc	(?___lwmod+1)^0,w,c
  6671  00DC18  6EF7               	movwf	tblptrh,c
  6672  00DC1A                     	if	1	;There are 3 active tblptr bytes
  6673  00DC1A  6AF8               	clrf	tblptru,c
  6674  00DC1C  0E00               	movlw	low (__mediumconst shr (0+16))
  6675  00DC1E  22F8               	addwfc	tblptru,f,c
  6676  00DC20                     	endif
  6677  00DC20  0009               	tblrd		*+
  6678  00DC22  006F FFD4  F04F    	movff	tablat,___flmul@a
  6679  00DC28  0009               	tblrd		*+
  6680  00DC2A  006F FFD4  F050    	movff	tablat,___flmul@a+1
  6681  00DC30  0009               	tblrd		*+
  6682  00DC32  006F FFD4  F051    	movff	tablat,___flmul@a+2
  6683  00DC38  000A               	tblrd		*-
  6684  00DC3A  006F FFD4  F052    	movff	tablat,___flmul@a+3
  6685  00DC40  ECAA  F070         	call	___flmul	;wreg free
  6686  00DC44  C04B  F057         	movff	?___flmul,?_fround
  6687  00DC48  C04C  F058         	movff	?___flmul+1,?_fround+1
  6688  00DC4C  C04D  F059         	movff	?___flmul+2,?_fround+2
  6689  00DC50  C04E  F05A         	movff	?___flmul+3,?_fround+3
  6690  00DC54  EFDB  F06E         	goto	l637
  6691  00DC58                     l4089:
  6692                           
  6693                           ; BSR set to: 0
  6694                           ;doprnt.c: 423: else if(prec > 10)
  6695  00DC58  0E0A               	movlw	10
  6696  00DC5A  6575               	cpfsgt	fround@prec& (0+255),b
  6697  00DC5C  EF32  F06E         	goto	u3601
  6698  00DC60  EF34  F06E         	goto	u3600
  6699  00DC64                     u3601:
  6700  00DC64  EFAE  F06E         	goto	l4095
  6701  00DC68                     u3600:
  6702  00DC68                     
  6703                           ; BSR set to: 0
  6704                           ;doprnt.c: 424: return 0.5 * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  6705  00DC68  0E00               	movlw	0
  6706  00DC6A  6E4F               	movwf	___flmul@a^0,c
  6707  00DC6C  0E00               	movlw	0
  6708  00DC6E  6E50               	movwf	(___flmul@a+1)^0,c
  6709  00DC70  0E00               	movlw	0
  6710  00DC72  6E51               	movwf	(___flmul@a+2)^0,c
  6711  00DC74  0E3F               	movlw	63
  6712  00DC76  6E52               	movwf	(___flmul@a+3)^0,c
  6713  00DC78  0E00               	movlw	0
  6714  00DC7A  6E09               	movwf	(___lwdiv@divisor+1)^0,c
  6715  00DC7C  0E0A               	movlw	10
  6716  00DC7E  6E08               	movwf	___lwdiv@divisor^0,c
  6717  00DC80  C075  F006         	movff	fround@prec,___lwdiv@dividend
  6718  00DC84  6A07               	clrf	(___lwdiv@dividend+1)^0,c
  6719  00DC86  EC8A  F061         	call	___lwdiv	;wreg free
  6720  00DC8A  90D8               	bcf	status,0,c
  6721  00DC8C  3606               	rlcf	?___lwdiv^0,f,c
  6722  00DC8E  3607               	rlcf	(?___lwdiv+1)^0,f,c
  6723  00DC90  90D8               	bcf	status,0,c
  6724  00DC92  3606               	rlcf	?___lwdiv^0,f,c
  6725  00DC94  3607               	rlcf	(?___lwdiv+1)^0,f,c
  6726  00DC96  0E24               	movlw	36
  6727  00DC98  2606               	addwf	?___lwdiv^0,f,c
  6728  00DC9A  0E00               	movlw	0
  6729  00DC9C  2207               	addwfc	(?___lwdiv+1)^0,f,c
  6730  00DC9E  0EC9               	movlw	low __npowers_
  6731  00DCA0  2406               	addwf	?___lwdiv^0,w,c
  6732  00DCA2  6EF6               	movwf	tblptrl,c
  6733  00DCA4  0EFE               	movlw	high __npowers_
  6734  00DCA6  2007               	addwfc	(?___lwdiv+1)^0,w,c
  6735  00DCA8  6EF7               	movwf	tblptrh,c
  6736  00DCAA                     	if	1	;There are 3 active tblptr bytes
  6737  00DCAA  6AF8               	clrf	tblptru,c
  6738  00DCAC  0E00               	movlw	low (__mediumconst shr (0+16))
  6739  00DCAE  22F8               	addwfc	tblptru,f,c
  6740  00DCB0                     	endif
  6741  00DCB0  0009               	tblrd		*+
  6742  00DCB2  006F FFD4  F04B    	movff	tablat,___flmul@b
  6743  00DCB8  0009               	tblrd		*+
  6744  00DCBA  006F FFD4  F04C    	movff	tablat,___flmul@b+1
  6745  00DCC0  0009               	tblrd		*+
  6746  00DCC2  006F FFD4  F04D    	movff	tablat,___flmul@b+2
  6747  00DCC8  000A               	tblrd		*-
  6748  00DCCA  006F FFD4  F04E    	movff	tablat,___flmul@b+3
  6749  00DCD0  ECAA  F070         	call	___flmul	;wreg free
  6750  00DCD4  C04B  F071         	movff	?___flmul,_fround$2196
  6751  00DCD8  C04C  F072         	movff	?___flmul+1,_fround$2196+1
  6752  00DCDC  C04D  F073         	movff	?___flmul+2,_fround$2196+2
  6753  00DCE0  C04E  F074         	movff	?___flmul+3,_fround$2196+3
  6754                           
  6755                           ;doprnt.c: 424: return 0.5 * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  6756  00DCE4  C071  F04B         	movff	_fround$2196,___flmul@b
  6757  00DCE8  C072  F04C         	movff	_fround$2196+1,___flmul@b+1
  6758  00DCEC  C073  F04D         	movff	_fround$2196+2,___flmul@b+2
  6759  00DCF0  C074  F04E         	movff	_fround$2196+3,___flmul@b+3
  6760  00DCF4  0E00               	movlw	0
  6761  00DCF6  6E04               	movwf	(___lwmod@divisor+1)^0,c
  6762  00DCF8  0E0A               	movlw	10
  6763  00DCFA  6E03               	movwf	___lwmod@divisor^0,c
  6764  00DCFC  C075  F001         	movff	fround@prec,___lwmod@dividend
  6765  00DD00  6A02               	clrf	(___lwmod@dividend+1)^0,c
  6766  00DD02  EC58  F061         	call	___lwmod	;wreg free
  6767  00DD06  90D8               	bcf	status,0,c
  6768  00DD08  3601               	rlcf	?___lwmod^0,f,c
  6769  00DD0A  3602               	rlcf	(?___lwmod+1)^0,f,c
  6770  00DD0C  90D8               	bcf	status,0,c
  6771  00DD0E  3601               	rlcf	?___lwmod^0,f,c
  6772  00DD10  3602               	rlcf	(?___lwmod+1)^0,f,c
  6773  00DD12  0EC9               	movlw	low __npowers_
  6774  00DD14  2401               	addwf	?___lwmod^0,w,c
  6775  00DD16  6EF6               	movwf	tblptrl,c
  6776  00DD18  0EFE               	movlw	high __npowers_
  6777  00DD1A  2002               	addwfc	(?___lwmod+1)^0,w,c
  6778  00DD1C  6EF7               	movwf	tblptrh,c
  6779  00DD1E                     	if	1	;There are 3 active tblptr bytes
  6780  00DD1E  6AF8               	clrf	tblptru,c
  6781  00DD20  0E00               	movlw	low (__mediumconst shr (0+16))
  6782  00DD22  22F8               	addwfc	tblptru,f,c
  6783  00DD24                     	endif
  6784  00DD24  0009               	tblrd		*+
  6785  00DD26  006F FFD4  F04F    	movff	tablat,___flmul@a
  6786  00DD2C  0009               	tblrd		*+
  6787  00DD2E  006F FFD4  F050    	movff	tablat,___flmul@a+1
  6788  00DD34  0009               	tblrd		*+
  6789  00DD36  006F FFD4  F051    	movff	tablat,___flmul@a+2
  6790  00DD3C  000A               	tblrd		*-
  6791  00DD3E  006F FFD4  F052    	movff	tablat,___flmul@a+3
  6792  00DD44  ECAA  F070         	call	___flmul	;wreg free
  6793  00DD48  C04B  F057         	movff	?___flmul,?_fround
  6794  00DD4C  C04C  F058         	movff	?___flmul+1,?_fround+1
  6795  00DD50  C04D  F059         	movff	?___flmul+2,?_fround+2
  6796  00DD54  C04E  F05A         	movff	?___flmul+3,?_fround+3
  6797  00DD58  EFDB  F06E         	goto	l637
  6798  00DD5C                     l4095:
  6799                           
  6800                           ; BSR set to: 0
  6801                           ;doprnt.c: 425: return 0.5 * _npowers_[prec];
  6802  00DD5C  5175               	movf	fround@prec& (0+255),w,b
  6803  00DD5E  0D04               	mullw	4
  6804  00DD60  0EC9               	movlw	low __npowers_
  6805  00DD62  24F3               	addwf	243,w,c
  6806  00DD64  6EF6               	movwf	tblptrl,c
  6807  00DD66  0EFE               	movlw	high __npowers_
  6808  00DD68  20F4               	addwfc	244,w,c
  6809  00DD6A  6EF7               	movwf	tblptrh,c
  6810  00DD6C                     	if	1	;There are 3 active tblptr bytes
  6811  00DD6C  6AF8               	clrf	tblptru,c
  6812  00DD6E  0E00               	movlw	low (__mediumconst shr (0+16))
  6813  00DD70  22F8               	addwfc	tblptru,f,c
  6814  00DD72                     	endif
  6815  00DD72  0009               	tblrd		*+
  6816  00DD74  006F FFD4  F04B    	movff	tablat,___flmul@b
  6817  00DD7A  0009               	tblrd		*+
  6818  00DD7C  006F FFD4  F04C    	movff	tablat,___flmul@b+1
  6819  00DD82  0009               	tblrd		*+
  6820  00DD84  006F FFD4  F04D    	movff	tablat,___flmul@b+2
  6821  00DD8A  000A               	tblrd		*-
  6822  00DD8C  006F FFD4  F04E    	movff	tablat,___flmul@b+3
  6823  00DD92  0E00               	movlw	0
  6824  00DD94  6E4F               	movwf	___flmul@a^0,c
  6825  00DD96  0E00               	movlw	0
  6826  00DD98  6E50               	movwf	(___flmul@a+1)^0,c
  6827  00DD9A  0E00               	movlw	0
  6828  00DD9C  6E51               	movwf	(___flmul@a+2)^0,c
  6829  00DD9E  0E3F               	movlw	63
  6830  00DDA0  6E52               	movwf	(___flmul@a+3)^0,c
  6831  00DDA2  ECAA  F070         	call	___flmul	;wreg free
  6832  00DDA6  C04B  F057         	movff	?___flmul,?_fround
  6833  00DDAA  C04C  F058         	movff	?___flmul+1,?_fround+1
  6834  00DDAE  C04D  F059         	movff	?___flmul+2,?_fround+2
  6835  00DDB2  C04E  F05A         	movff	?___flmul+3,?_fround+3
  6836  00DDB6                     l637:
  6837  00DDB6  0012               	return		;funcret
  6838  00DDB8                     __end_of_fround:
  6839                           	callstack 0
  6840                           
  6841 ;; *************** function ___lwmod *****************
  6842 ;; Defined at:
  6843 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\lwmod.c"
  6844 ;; Parameters:    Size  Location     Type
  6845 ;;  dividend        2    0[COMRAM] unsigned int 
  6846 ;;  divisor         2    2[COMRAM] unsigned int 
  6847 ;; Auto vars:     Size  Location     Type
  6848 ;;  counter         1    4[COMRAM] unsigned char 
  6849 ;; Return value:  Size  Location     Type
  6850 ;;                  2    0[COMRAM] unsigned int 
  6851 ;; Registers used:
  6852 ;;		wreg, status,2, status,0
  6853 ;; Tracked objects:
  6854 ;;		On entry : 0/0
  6855 ;;		On exit  : 0/0
  6856 ;;		Unchanged: 0/0
  6857 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6858 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6859 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6860 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6861 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6862 ;;Total ram usage:        5 bytes
  6863 ;; Hardware stack levels used:    1
  6864 ;; This function calls:
  6865 ;;		Nothing
  6866 ;; This function is called by:
  6867 ;;		_fround
  6868 ;; This function uses a non-reentrant model
  6869 ;;
  6870                           
  6871                           	psect	text18
  6872  00C2B0                     __ptext18:
  6873                           	callstack 0
  6874  00C2B0                     ___lwmod:
  6875                           	callstack 28
  6876  00C2B0  5003               	movf	___lwmod@divisor^0,w,c
  6877  00C2B2  1004               	iorwf	(___lwmod@divisor+1)^0,w,c
  6878  00C2B4  B4D8               	btfsc	status,2,c
  6879  00C2B6  EF5F  F061         	goto	u3441
  6880  00C2BA  EF61  F061         	goto	u3440
  6881  00C2BE                     u3441:
  6882  00C2BE  EF85  F061         	goto	l1234
  6883  00C2C2                     u3440:
  6884  00C2C2  0E01               	movlw	1
  6885  00C2C4  6E05               	movwf	___lwmod@counter^0,c
  6886  00C2C6  EF69  F061         	goto	l3997
  6887  00C2CA                     l3995:
  6888  00C2CA  90D8               	bcf	status,0,c
  6889  00C2CC  3603               	rlcf	___lwmod@divisor^0,f,c
  6890  00C2CE  3604               	rlcf	(___lwmod@divisor+1)^0,f,c
  6891  00C2D0  2A05               	incf	___lwmod@counter^0,f,c
  6892  00C2D2                     l3997:
  6893  00C2D2  AE04               	btfss	(___lwmod@divisor+1)^0,7,c
  6894  00C2D4  EF6E  F061         	goto	u3451
  6895  00C2D8  EF70  F061         	goto	u3450
  6896  00C2DC                     u3451:
  6897  00C2DC  EF65  F061         	goto	l3995
  6898  00C2E0                     u3450:
  6899  00C2E0                     l3999:
  6900  00C2E0  5003               	movf	___lwmod@divisor^0,w,c
  6901  00C2E2  5C01               	subwf	___lwmod@dividend^0,w,c
  6902  00C2E4  5004               	movf	(___lwmod@divisor+1)^0,w,c
  6903  00C2E6  5802               	subwfb	(___lwmod@dividend+1)^0,w,c
  6904  00C2E8  A0D8               	btfss	status,0,c
  6905  00C2EA  EF79  F061         	goto	u3461
  6906  00C2EE  EF7B  F061         	goto	u3460
  6907  00C2F2                     u3461:
  6908  00C2F2  EF7F  F061         	goto	l4003
  6909  00C2F6                     u3460:
  6910  00C2F6  5003               	movf	___lwmod@divisor^0,w,c
  6911  00C2F8  5E01               	subwf	___lwmod@dividend^0,f,c
  6912  00C2FA  5004               	movf	(___lwmod@divisor+1)^0,w,c
  6913  00C2FC  5A02               	subwfb	(___lwmod@dividend+1)^0,f,c
  6914  00C2FE                     l4003:
  6915  00C2FE  90D8               	bcf	status,0,c
  6916  00C300  3204               	rrcf	(___lwmod@divisor+1)^0,f,c
  6917  00C302  3203               	rrcf	___lwmod@divisor^0,f,c
  6918  00C304  2E05               	decfsz	___lwmod@counter^0,f,c
  6919  00C306  EF70  F061         	goto	l3999
  6920  00C30A                     l1234:
  6921  00C30A  C001  F001         	movff	___lwmod@dividend,?___lwmod
  6922  00C30E  C002  F002         	movff	___lwmod@dividend+1,?___lwmod+1
  6923  00C312  0012               	return		;funcret
  6924  00C314                     __end_of___lwmod:
  6925                           	callstack 0
  6926                           
  6927 ;; *************** function ___lwdiv *****************
  6928 ;; Defined at:
  6929 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\lwdiv.c"
  6930 ;; Parameters:    Size  Location     Type
  6931 ;;  dividend        2    5[COMRAM] unsigned int 
  6932 ;;  divisor         2    7[COMRAM] unsigned int 
  6933 ;; Auto vars:     Size  Location     Type
  6934 ;;  quotient        2    9[COMRAM] unsigned int 
  6935 ;;  counter         1   11[COMRAM] unsigned char 
  6936 ;; Return value:  Size  Location     Type
  6937 ;;                  2    5[COMRAM] unsigned int 
  6938 ;; Registers used:
  6939 ;;		wreg, status,2, status,0
  6940 ;; Tracked objects:
  6941 ;;		On entry : 0/0
  6942 ;;		On exit  : 0/0
  6943 ;;		Unchanged: 0/0
  6944 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6945 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6946 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6947 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6948 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6949 ;;Total ram usage:        7 bytes
  6950 ;; Hardware stack levels used:    1
  6951 ;; This function calls:
  6952 ;;		Nothing
  6953 ;; This function is called by:
  6954 ;;		_fround
  6955 ;; This function uses a non-reentrant model
  6956 ;;
  6957                           
  6958                           	psect	text19
  6959  00C314                     __ptext19:
  6960                           	callstack 0
  6961  00C314                     ___lwdiv:
  6962                           	callstack 28
  6963  00C314  0E00               	movlw	0
  6964  00C316  6E0B               	movwf	(___lwdiv@quotient+1)^0,c
  6965  00C318  0E00               	movlw	0
  6966  00C31A  6E0A               	movwf	___lwdiv@quotient^0,c
  6967  00C31C  5008               	movf	___lwdiv@divisor^0,w,c
  6968  00C31E  1009               	iorwf	(___lwdiv@divisor+1)^0,w,c
  6969  00C320  B4D8               	btfsc	status,2,c
  6970  00C322  EF95  F061         	goto	u3411
  6971  00C326  EF97  F061         	goto	u3410
  6972  00C32A                     u3411:
  6973  00C32A  EFBF  F061         	goto	l1224
  6974  00C32E                     u3410:
  6975  00C32E  0E01               	movlw	1
  6976  00C330  6E0C               	movwf	___lwdiv@counter^0,c
  6977  00C332  EF9F  F061         	goto	l3977
  6978  00C336                     l3975:
  6979  00C336  90D8               	bcf	status,0,c
  6980  00C338  3608               	rlcf	___lwdiv@divisor^0,f,c
  6981  00C33A  3609               	rlcf	(___lwdiv@divisor+1)^0,f,c
  6982  00C33C  2A0C               	incf	___lwdiv@counter^0,f,c
  6983  00C33E                     l3977:
  6984  00C33E  AE09               	btfss	(___lwdiv@divisor+1)^0,7,c
  6985  00C340  EFA4  F061         	goto	u3421
  6986  00C344  EFA6  F061         	goto	u3420
  6987  00C348                     u3421:
  6988  00C348  EF9B  F061         	goto	l3975
  6989  00C34C                     u3420:
  6990  00C34C                     l3979:
  6991  00C34C  90D8               	bcf	status,0,c
  6992  00C34E  360A               	rlcf	___lwdiv@quotient^0,f,c
  6993  00C350  360B               	rlcf	(___lwdiv@quotient+1)^0,f,c
  6994  00C352  5008               	movf	___lwdiv@divisor^0,w,c
  6995  00C354  5C06               	subwf	___lwdiv@dividend^0,w,c
  6996  00C356  5009               	movf	(___lwdiv@divisor+1)^0,w,c
  6997  00C358  5807               	subwfb	(___lwdiv@dividend+1)^0,w,c
  6998  00C35A  A0D8               	btfss	status,0,c
  6999  00C35C  EFB2  F061         	goto	u3431
  7000  00C360  EFB4  F061         	goto	u3430
  7001  00C364                     u3431:
  7002  00C364  EFB9  F061         	goto	l3987
  7003  00C368                     u3430:
  7004  00C368  5008               	movf	___lwdiv@divisor^0,w,c
  7005  00C36A  5E06               	subwf	___lwdiv@dividend^0,f,c
  7006  00C36C  5009               	movf	(___lwdiv@divisor+1)^0,w,c
  7007  00C36E  5A07               	subwfb	(___lwdiv@dividend+1)^0,f,c
  7008  00C370  800A               	bsf	___lwdiv@quotient^0,0,c
  7009  00C372                     l3987:
  7010  00C372  90D8               	bcf	status,0,c
  7011  00C374  3209               	rrcf	(___lwdiv@divisor+1)^0,f,c
  7012  00C376  3208               	rrcf	___lwdiv@divisor^0,f,c
  7013  00C378  2E0C               	decfsz	___lwdiv@counter^0,f,c
  7014  00C37A  EFA6  F061         	goto	l3979
  7015  00C37E                     l1224:
  7016  00C37E  C00A  F006         	movff	___lwdiv@quotient,?___lwdiv
  7017  00C382  C00B  F007         	movff	___lwdiv@quotient+1,?___lwdiv+1
  7018  00C386  0012               	return		;funcret
  7019  00C388                     __end_of___lwdiv:
  7020                           	callstack 0
  7021                           
  7022 ;; *************** function ___flmul *****************
  7023 ;; Defined at:
  7024 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\sprcmul.c"
  7025 ;; Parameters:    Size  Location     Type
  7026 ;;  b               4   74[COMRAM] unsigned int 
  7027 ;;  a               4   78[COMRAM] unsigned int 
  7028 ;; Auto vars:     Size  Location     Type
  7029 ;;  prod            4    7[BANK0 ] struct .
  7030 ;;  grs             4    1[BANK0 ] unsigned long 
  7031 ;;  temp            2   11[BANK0 ] struct .
  7032 ;;  bexp            1    6[BANK0 ] unsigned char 
  7033 ;;  aexp            1    5[BANK0 ] unsigned char 
  7034 ;;  sign            1    0[BANK0 ] unsigned char 
  7035 ;; Return value:  Size  Location     Type
  7036 ;;                  4   74[COMRAM] unsigned char 
  7037 ;; Registers used:
  7038 ;;		wreg, status,2, status,0, prodl, prodh
  7039 ;; Tracked objects:
  7040 ;;		On entry : 0/0
  7041 ;;		On exit  : 0/0
  7042 ;;		Unchanged: 0/0
  7043 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7044 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7045 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7046 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7047 ;;      Totals:        12      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7048 ;;Total ram usage:       25 bytes
  7049 ;; Hardware stack levels used:    1
  7050 ;; This function calls:
  7051 ;;		Nothing
  7052 ;; This function is called by:
  7053 ;;		_main
  7054 ;;		_fround
  7055 ;;		_scale
  7056 ;;		_printf
  7057 ;;		_pow
  7058 ;;		_exp
  7059 ;;		_eval_poly
  7060 ;;		_log
  7061 ;; This function uses a non-reentrant model
  7062 ;;
  7063                           
  7064                           	psect	text20
  7065  00E154                     __ptext20:
  7066                           	callstack 0
  7067  00E154                     ___flmul:
  7068                           	callstack 28
  7069  00E154  504E               	movf	(___flmul@b+3)^0,w,c
  7070  00E156  0B80               	andlw	128
  7071  00E158  0100               	movlb	0	; () banked
  7072  00E15A  6F60               	movwf	___flmul@sign& (0+255),b
  7073  00E15C  504E               	movf	(___flmul@b+3)^0,w,c
  7074  00E15E  244E               	addwf	(___flmul@b+3)^0,w,c
  7075  00E160  6F66               	movwf	___flmul@bexp& (0+255),b
  7076  00E162                     
  7077                           ; BSR set to: 0
  7078  00E162  AE4D               	btfss	(___flmul@b+2)^0,7,c
  7079  00E164  EFB6  F070         	goto	u2981
  7080  00E168  EFB8  F070         	goto	u2980
  7081  00E16C                     u2981:
  7082  00E16C  EFB9  F070         	goto	l3699
  7083  00E170                     u2980:
  7084  00E170                     
  7085                           ; BSR set to: 0
  7086  00E170  8166               	bsf	___flmul@bexp& (0+255),0,b
  7087  00E172                     l3699:
  7088                           
  7089                           ; BSR set to: 0
  7090  00E172  5166               	movf	___flmul@bexp& (0+255),w,b
  7091  00E174  B4D8               	btfsc	status,2,c
  7092  00E176  EFBF  F070         	goto	u2991
  7093  00E17A  EFC1  F070         	goto	u2990
  7094  00E17E                     u2991:
  7095  00E17E  EFD4  F070         	goto	l3707
  7096  00E182                     u2990:
  7097  00E182                     
  7098                           ; BSR set to: 0
  7099  00E182  2966               	incf	___flmul@bexp& (0+255),w,b
  7100  00E184  A4D8               	btfss	status,2,c
  7101  00E186  EFC7  F070         	goto	u3001
  7102  00E18A  EFC9  F070         	goto	u3000
  7103  00E18E                     u3001:
  7104  00E18E  EFD1  F070         	goto	l3705
  7105  00E192                     u3000:
  7106  00E192                     
  7107                           ; BSR set to: 0
  7108  00E192  0E00               	movlw	0
  7109  00E194  6E4B               	movwf	___flmul@b^0,c
  7110  00E196  0E00               	movlw	0
  7111  00E198  6E4C               	movwf	(___flmul@b+1)^0,c
  7112  00E19A  0E00               	movlw	0
  7113  00E19C  6E4D               	movwf	(___flmul@b+2)^0,c
  7114  00E19E  0E00               	movlw	0
  7115  00E1A0  6E4E               	movwf	(___flmul@b+3)^0,c
  7116  00E1A2                     l3705:
  7117                           
  7118                           ; BSR set to: 0
  7119  00E1A2  8E4D               	bsf	(___flmul@b+2)^0,7,c
  7120  00E1A4  EFDC  F070         	goto	l3709
  7121  00E1A8                     l3707:
  7122                           
  7123                           ; BSR set to: 0
  7124  00E1A8  0E00               	movlw	0
  7125  00E1AA  6E4B               	movwf	___flmul@b^0,c
  7126  00E1AC  0E00               	movlw	0
  7127  00E1AE  6E4C               	movwf	(___flmul@b+1)^0,c
  7128  00E1B0  0E00               	movlw	0
  7129  00E1B2  6E4D               	movwf	(___flmul@b+2)^0,c
  7130  00E1B4  0E00               	movlw	0
  7131  00E1B6  6E4E               	movwf	(___flmul@b+3)^0,c
  7132  00E1B8                     l3709:
  7133                           
  7134                           ; BSR set to: 0
  7135  00E1B8  5052               	movf	(___flmul@a+3)^0,w,c
  7136  00E1BA  0B80               	andlw	128
  7137  00E1BC  1B60               	xorwf	___flmul@sign& (0+255),f,b
  7138  00E1BE                     
  7139                           ; BSR set to: 0
  7140  00E1BE  5052               	movf	(___flmul@a+3)^0,w,c
  7141  00E1C0  2452               	addwf	(___flmul@a+3)^0,w,c
  7142  00E1C2  6F65               	movwf	___flmul@aexp& (0+255),b
  7143  00E1C4                     
  7144                           ; BSR set to: 0
  7145  00E1C4  AE51               	btfss	(___flmul@a+2)^0,7,c
  7146  00E1C6  EFE7  F070         	goto	u3011
  7147  00E1CA  EFE9  F070         	goto	u3010
  7148  00E1CE                     u3011:
  7149  00E1CE  EFEA  F070         	goto	l3717
  7150  00E1D2                     u3010:
  7151  00E1D2                     
  7152                           ; BSR set to: 0
  7153  00E1D2  8165               	bsf	___flmul@aexp& (0+255),0,b
  7154  00E1D4                     l3717:
  7155                           
  7156                           ; BSR set to: 0
  7157  00E1D4  5165               	movf	___flmul@aexp& (0+255),w,b
  7158  00E1D6  B4D8               	btfsc	status,2,c
  7159  00E1D8  EFF0  F070         	goto	u3021
  7160  00E1DC  EFF2  F070         	goto	u3020
  7161  00E1E0                     u3021:
  7162  00E1E0  EF05  F071         	goto	l3725
  7163  00E1E4                     u3020:
  7164  00E1E4                     
  7165                           ; BSR set to: 0
  7166  00E1E4  2965               	incf	___flmul@aexp& (0+255),w,b
  7167  00E1E6  A4D8               	btfss	status,2,c
  7168  00E1E8  EFF8  F070         	goto	u3031
  7169  00E1EC  EFFA  F070         	goto	u3030
  7170  00E1F0                     u3031:
  7171  00E1F0  EF02  F071         	goto	l3723
  7172  00E1F4                     u3030:
  7173  00E1F4                     
  7174                           ; BSR set to: 0
  7175  00E1F4  0E00               	movlw	0
  7176  00E1F6  6E4F               	movwf	___flmul@a^0,c
  7177  00E1F8  0E00               	movlw	0
  7178  00E1FA  6E50               	movwf	(___flmul@a+1)^0,c
  7179  00E1FC  0E00               	movlw	0
  7180  00E1FE  6E51               	movwf	(___flmul@a+2)^0,c
  7181  00E200  0E00               	movlw	0
  7182  00E202  6E52               	movwf	(___flmul@a+3)^0,c
  7183  00E204                     l3723:
  7184                           
  7185                           ; BSR set to: 0
  7186  00E204  8E51               	bsf	(___flmul@a+2)^0,7,c
  7187  00E206  EF0D  F071         	goto	l1347
  7188  00E20A                     l3725:
  7189                           
  7190                           ; BSR set to: 0
  7191  00E20A  0E00               	movlw	0
  7192  00E20C  6E4F               	movwf	___flmul@a^0,c
  7193  00E20E  0E00               	movlw	0
  7194  00E210  6E50               	movwf	(___flmul@a+1)^0,c
  7195  00E212  0E00               	movlw	0
  7196  00E214  6E51               	movwf	(___flmul@a+2)^0,c
  7197  00E216  0E00               	movlw	0
  7198  00E218  6E52               	movwf	(___flmul@a+3)^0,c
  7199  00E21A                     l1347:
  7200                           
  7201                           ; BSR set to: 0
  7202  00E21A  5165               	movf	___flmul@aexp& (0+255),w,b
  7203  00E21C  B4D8               	btfsc	status,2,c
  7204  00E21E  EF13  F071         	goto	u3041
  7205  00E222  EF15  F071         	goto	u3040
  7206  00E226                     u3041:
  7207  00E226  EF1D  F071         	goto	l3729
  7208  00E22A                     u3040:
  7209  00E22A                     
  7210                           ; BSR set to: 0
  7211  00E22A  5166               	movf	___flmul@bexp& (0+255),w,b
  7212  00E22C  A4D8               	btfss	status,2,c
  7213  00E22E  EF1B  F071         	goto	u3051
  7214  00E232  EF1D  F071         	goto	u3050
  7215  00E236                     u3051:
  7216  00E236  EF27  F071         	goto	l3733
  7217  00E23A                     u3050:
  7218  00E23A                     l3729:
  7219                           
  7220                           ; BSR set to: 0
  7221  00E23A  0E00               	movlw	0
  7222  00E23C  6E4B               	movwf	?___flmul^0,c
  7223  00E23E  0E00               	movlw	0
  7224  00E240  6E4C               	movwf	(?___flmul+1)^0,c
  7225  00E242  0E00               	movlw	0
  7226  00E244  6E4D               	movwf	(?___flmul+2)^0,c
  7227  00E246  0E00               	movlw	0
  7228  00E248  6E4E               	movwf	(?___flmul+3)^0,c
  7229  00E24A  EFD1  F072         	goto	l1351
  7230  00E24E                     l3733:
  7231                           
  7232                           ; BSR set to: 0
  7233  00E24E  5051               	movf	(___flmul@a+2)^0,w,c
  7234  00E250  024B               	mulwf	___flmul@b^0,c
  7235  00E252  006F FFCC  F06B    	movff	prodl,___flmul@temp
  7236  00E258  006F FFD0  F06C    	movff	prodh,___flmul@temp+1
  7237  00E25E                     
  7238                           ; BSR set to: 0
  7239  00E25E  516B               	movf	___flmul@temp& (0+255),w,b
  7240  00E260  6F61               	movwf	___flmul@grs& (0+255),b
  7241  00E262  6B62               	clrf	(___flmul@grs+1)& (0+255),b
  7242  00E264  6B63               	clrf	(___flmul@grs+2)& (0+255),b
  7243  00E266  6B64               	clrf	(___flmul@grs+3)& (0+255),b
  7244  00E268                     
  7245                           ; BSR set to: 0
  7246  00E268  516C               	movf	(___flmul@temp+1)& (0+255),w,b
  7247  00E26A  6F67               	movwf	___flmul@prod& (0+255),b
  7248  00E26C  6B68               	clrf	(___flmul@prod+1)& (0+255),b
  7249  00E26E  6B69               	clrf	(___flmul@prod+2)& (0+255),b
  7250  00E270  6B6A               	clrf	(___flmul@prod+3)& (0+255),b
  7251  00E272  5050               	movf	(___flmul@a+1)^0,w,c
  7252  00E274  024C               	mulwf	(___flmul@b+1)^0,c
  7253  00E276  006F FFCC  F06B    	movff	prodl,___flmul@temp
  7254  00E27C  006F FFD0  F06C    	movff	prodh,___flmul@temp+1
  7255  00E282                     
  7256                           ; BSR set to: 0
  7257  00E282  516B               	movf	___flmul@temp& (0+255),w,b
  7258  00E284  2761               	addwf	___flmul@grs& (0+255),f,b
  7259  00E286  0E00               	movlw	0
  7260  00E288  2362               	addwfc	(___flmul@grs+1)& (0+255),f,b
  7261  00E28A  2363               	addwfc	(___flmul@grs+2)& (0+255),f,b
  7262  00E28C  2364               	addwfc	(___flmul@grs+3)& (0+255),f,b
  7263  00E28E                     
  7264                           ; BSR set to: 0
  7265  00E28E  516C               	movf	(___flmul@temp+1)& (0+255),w,b
  7266  00E290  2767               	addwf	___flmul@prod& (0+255),f,b
  7267  00E292  0E00               	movlw	0
  7268  00E294  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
  7269  00E296  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
  7270  00E298  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
  7271  00E29A  504F               	movf	___flmul@a^0,w,c
  7272  00E29C  024D               	mulwf	(___flmul@b+2)^0,c
  7273  00E29E  006F FFCC  F06B    	movff	prodl,___flmul@temp
  7274  00E2A4  006F FFD0  F06C    	movff	prodh,___flmul@temp+1
  7275  00E2AA                     
  7276                           ; BSR set to: 0
  7277  00E2AA  516B               	movf	___flmul@temp& (0+255),w,b
  7278  00E2AC  2761               	addwf	___flmul@grs& (0+255),f,b
  7279  00E2AE  0E00               	movlw	0
  7280  00E2B0  2362               	addwfc	(___flmul@grs+1)& (0+255),f,b
  7281  00E2B2  2363               	addwfc	(___flmul@grs+2)& (0+255),f,b
  7282  00E2B4  2364               	addwfc	(___flmul@grs+3)& (0+255),f,b
  7283  00E2B6                     
  7284                           ; BSR set to: 0
  7285  00E2B6  516C               	movf	(___flmul@temp+1)& (0+255),w,b
  7286  00E2B8  2767               	addwf	___flmul@prod& (0+255),f,b
  7287  00E2BA  0E00               	movlw	0
  7288  00E2BC  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
  7289  00E2BE  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
  7290  00E2C0  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
  7291  00E2C2                     
  7292                           ; BSR set to: 0
  7293  00E2C2  C063  F064         	movff	___flmul@grs+2,___flmul@grs+3
  7294  00E2C6  C062  F063         	movff	___flmul@grs+1,___flmul@grs+2
  7295  00E2CA  C061  F062         	movff	___flmul@grs,___flmul@grs+1
  7296  00E2CE  6B61               	clrf	___flmul@grs& (0+255),b
  7297  00E2D0                     
  7298                           ; BSR set to: 0
  7299  00E2D0  504F               	movf	___flmul@a^0,w,c
  7300  00E2D2  024C               	mulwf	(___flmul@b+1)^0,c
  7301  00E2D4  006F FFCC  F06B    	movff	prodl,___flmul@temp
  7302  00E2DA  006F FFD0  F06C    	movff	prodh,___flmul@temp+1
  7303  00E2E0                     
  7304                           ; BSR set to: 0
  7305  00E2E0  516B               	movf	___flmul@temp& (0+255),w,b
  7306  00E2E2  2761               	addwf	___flmul@grs& (0+255),f,b
  7307  00E2E4  516C               	movf	(___flmul@temp+1)& (0+255),w,b
  7308  00E2E6  2362               	addwfc	(___flmul@grs+1)& (0+255),f,b
  7309  00E2E8  0E00               	movlw	0
  7310  00E2EA  2363               	addwfc	(___flmul@grs+2)& (0+255),f,b
  7311  00E2EC  0E00               	movlw	0
  7312  00E2EE  2364               	addwfc	(___flmul@grs+3)& (0+255),f,b
  7313  00E2F0                     
  7314                           ; BSR set to: 0
  7315  00E2F0  5050               	movf	(___flmul@a+1)^0,w,c
  7316  00E2F2  024B               	mulwf	___flmul@b^0,c
  7317  00E2F4  006F FFCC  F06B    	movff	prodl,___flmul@temp
  7318  00E2FA  006F FFD0  F06C    	movff	prodh,___flmul@temp+1
  7319  00E300                     
  7320                           ; BSR set to: 0
  7321  00E300  516B               	movf	___flmul@temp& (0+255),w,b
  7322  00E302  2761               	addwf	___flmul@grs& (0+255),f,b
  7323  00E304  516C               	movf	(___flmul@temp+1)& (0+255),w,b
  7324  00E306  2362               	addwfc	(___flmul@grs+1)& (0+255),f,b
  7325  00E308  0E00               	movlw	0
  7326  00E30A  2363               	addwfc	(___flmul@grs+2)& (0+255),f,b
  7327  00E30C  0E00               	movlw	0
  7328  00E30E  2364               	addwfc	(___flmul@grs+3)& (0+255),f,b
  7329  00E310                     
  7330                           ; BSR set to: 0
  7331  00E310  C063  F064         	movff	___flmul@grs+2,___flmul@grs+3
  7332  00E314  C062  F063         	movff	___flmul@grs+1,___flmul@grs+2
  7333  00E318  C061  F062         	movff	___flmul@grs,___flmul@grs+1
  7334  00E31C  6B61               	clrf	___flmul@grs& (0+255),b
  7335  00E31E  504F               	movf	___flmul@a^0,w,c
  7336  00E320  024B               	mulwf	___flmul@b^0,c
  7337  00E322  006F FFCC  F06B    	movff	prodl,___flmul@temp
  7338  00E328  006F FFD0  F06C    	movff	prodh,___flmul@temp+1
  7339  00E32E                     
  7340                           ; BSR set to: 0
  7341  00E32E  516B               	movf	___flmul@temp& (0+255),w,b
  7342  00E330  2761               	addwf	___flmul@grs& (0+255),f,b
  7343  00E332  516C               	movf	(___flmul@temp+1)& (0+255),w,b
  7344  00E334  2362               	addwfc	(___flmul@grs+1)& (0+255),f,b
  7345  00E336  0E00               	movlw	0
  7346  00E338  2363               	addwfc	(___flmul@grs+2)& (0+255),f,b
  7347  00E33A  0E00               	movlw	0
  7348  00E33C  2364               	addwfc	(___flmul@grs+3)& (0+255),f,b
  7349  00E33E                     
  7350                           ; BSR set to: 0
  7351  00E33E  5051               	movf	(___flmul@a+2)^0,w,c
  7352  00E340  024C               	mulwf	(___flmul@b+1)^0,c
  7353  00E342  006F FFCC  F06B    	movff	prodl,___flmul@temp
  7354  00E348  006F FFD0  F06C    	movff	prodh,___flmul@temp+1
  7355  00E34E  516B               	movf	___flmul@temp& (0+255),w,b
  7356  00E350  2767               	addwf	___flmul@prod& (0+255),f,b
  7357  00E352  516C               	movf	(___flmul@temp+1)& (0+255),w,b
  7358  00E354  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
  7359  00E356  0E00               	movlw	0
  7360  00E358  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
  7361  00E35A  0E00               	movlw	0
  7362  00E35C  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
  7363  00E35E                     
  7364                           ; BSR set to: 0
  7365  00E35E  5050               	movf	(___flmul@a+1)^0,w,c
  7366  00E360  024D               	mulwf	(___flmul@b+2)^0,c
  7367  00E362  006F FFCC  F06B    	movff	prodl,___flmul@temp
  7368  00E368  006F FFD0  F06C    	movff	prodh,___flmul@temp+1
  7369  00E36E                     
  7370                           ; BSR set to: 0
  7371  00E36E  516B               	movf	___flmul@temp& (0+255),w,b
  7372  00E370  2767               	addwf	___flmul@prod& (0+255),f,b
  7373  00E372  516C               	movf	(___flmul@temp+1)& (0+255),w,b
  7374  00E374  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
  7375  00E376  0E00               	movlw	0
  7376  00E378  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
  7377  00E37A  0E00               	movlw	0
  7378  00E37C  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
  7379  00E37E  5051               	movf	(___flmul@a+2)^0,w,c
  7380  00E380  024D               	mulwf	(___flmul@b+2)^0,c
  7381  00E382  006F FFCC  F06B    	movff	prodl,___flmul@temp
  7382  00E388  006F FFD0  F06C    	movff	prodh,___flmul@temp+1
  7383  00E38E                     
  7384                           ; BSR set to: 0
  7385  00E38E  516B               	movf	___flmul@temp& (0+255),w,b
  7386  00E390  6E53               	movwf	??___flmul^0,c
  7387  00E392  516C               	movf	(___flmul@temp+1)& (0+255),w,b
  7388  00E394  6E54               	movwf	(??___flmul+1)^0,c
  7389  00E396  6A55               	clrf	(??___flmul+2)^0,c
  7390  00E398  6A56               	clrf	(??___flmul+3)^0,c
  7391  00E39A  C055  F056         	movff	??___flmul+2,??___flmul+3
  7392  00E39E  C054  F055         	movff	??___flmul+1,??___flmul+2
  7393  00E3A2  C053  F054         	movff	??___flmul,??___flmul+1
  7394  00E3A6  6A53               	clrf	??___flmul^0,c
  7395  00E3A8  5053               	movf	??___flmul^0,w,c
  7396  00E3AA  2767               	addwf	___flmul@prod& (0+255),f,b
  7397  00E3AC  5054               	movf	(??___flmul+1)^0,w,c
  7398  00E3AE  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
  7399  00E3B0  5055               	movf	(??___flmul+2)^0,w,c
  7400  00E3B2  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
  7401  00E3B4  5056               	movf	(??___flmul+3)^0,w,c
  7402  00E3B6  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
  7403  00E3B8                     
  7404                           ; BSR set to: 0
  7405  00E3B8  C061  F053         	movff	___flmul@grs,??___flmul
  7406  00E3BC  C062  F054         	movff	___flmul@grs+1,??___flmul+1
  7407  00E3C0  C063  F055         	movff	___flmul@grs+2,??___flmul+2
  7408  00E3C4  C064  F056         	movff	___flmul@grs+3,??___flmul+3
  7409  00E3C8  0E19               	movlw	25
  7410  00E3CA  EFEC  F071         	goto	u3060
  7411  00E3CE                     u3065:
  7412  00E3CE  90D8               	bcf	status,0,c
  7413  00E3D0  3256               	rrcf	(??___flmul+3)^0,f,c
  7414  00E3D2  3255               	rrcf	(??___flmul+2)^0,f,c
  7415  00E3D4  3254               	rrcf	(??___flmul+1)^0,f,c
  7416  00E3D6  3253               	rrcf	??___flmul^0,f,c
  7417  00E3D8                     u3060:
  7418  00E3D8  2EE8               	decfsz	wreg,f,c
  7419  00E3DA  EFE7  F071         	goto	u3065
  7420  00E3DE  5053               	movf	??___flmul^0,w,c
  7421  00E3E0  2767               	addwf	___flmul@prod& (0+255),f,b
  7422  00E3E2  5054               	movf	(??___flmul+1)^0,w,c
  7423  00E3E4  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
  7424  00E3E6  5055               	movf	(??___flmul+2)^0,w,c
  7425  00E3E8  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
  7426  00E3EA  5056               	movf	(??___flmul+3)^0,w,c
  7427  00E3EC  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
  7428  00E3EE                     
  7429                           ; BSR set to: 0
  7430  00E3EE  C063  F064         	movff	___flmul@grs+2,___flmul@grs+3
  7431  00E3F2  C062  F063         	movff	___flmul@grs+1,___flmul@grs+2
  7432  00E3F6  C061  F062         	movff	___flmul@grs,___flmul@grs+1
  7433  00E3FA  6B61               	clrf	___flmul@grs& (0+255),b
  7434  00E3FC                     
  7435                           ; BSR set to: 0
  7436  00E3FC  5165               	movf	___flmul@aexp& (0+255),w,b
  7437  00E3FE  C066  F053         	movff	___flmul@bexp,??___flmul
  7438  00E402  6A54               	clrf	(??___flmul+1)^0,c
  7439  00E404  2653               	addwf	??___flmul^0,f,c
  7440  00E406  0E00               	movlw	0
  7441  00E408  2254               	addwfc	(??___flmul+1)^0,f,c
  7442  00E40A  0E82               	movlw	130
  7443  00E40C  2453               	addwf	??___flmul^0,w,c
  7444  00E40E  6F6B               	movwf	___flmul@temp& (0+255),b
  7445  00E410  0EFF               	movlw	255
  7446  00E412  2054               	addwfc	(??___flmul+1)^0,w,c
  7447  00E414  6F6C               	movwf	(___flmul@temp+1)& (0+255),b
  7448  00E416  EF22  F072         	goto	l3781
  7449  00E41A                     l3775:
  7450                           
  7451                           ; BSR set to: 0
  7452  00E41A  90D8               	bcf	status,0,c
  7453  00E41C  3767               	rlcf	___flmul@prod& (0+255),f,b
  7454  00E41E  3768               	rlcf	(___flmul@prod+1)& (0+255),f,b
  7455  00E420  3769               	rlcf	(___flmul@prod+2)& (0+255),f,b
  7456  00E422  376A               	rlcf	(___flmul@prod+3)& (0+255),f,b
  7457  00E424                     
  7458                           ; BSR set to: 0
  7459  00E424  AF64               	btfss	(___flmul@grs+3)& (0+255),7,b
  7460  00E426  EF17  F072         	goto	u3071
  7461  00E42A  EF19  F072         	goto	u3070
  7462  00E42E                     u3071:
  7463  00E42E  EF1A  F072         	goto	l1354
  7464  00E432                     u3070:
  7465  00E432                     
  7466                           ; BSR set to: 0
  7467  00E432  8167               	bsf	___flmul@prod& (0+255),0,b
  7468  00E434                     l1354:
  7469                           
  7470                           ; BSR set to: 0
  7471  00E434  90D8               	bcf	status,0,c
  7472  00E436  3761               	rlcf	___flmul@grs& (0+255),f,b
  7473  00E438  3762               	rlcf	(___flmul@grs+1)& (0+255),f,b
  7474  00E43A  3763               	rlcf	(___flmul@grs+2)& (0+255),f,b
  7475  00E43C  3764               	rlcf	(___flmul@grs+3)& (0+255),f,b
  7476  00E43E  076B               	decf	___flmul@temp& (0+255),f,b
  7477  00E440  A0D8               	btfss	status,0,c
  7478  00E442  076C               	decf	(___flmul@temp+1)& (0+255),f,b
  7479  00E444                     l3781:
  7480                           
  7481                           ; BSR set to: 0
  7482  00E444  AF69               	btfss	(___flmul@prod+2)& (0+255),7,b
  7483  00E446  EF27  F072         	goto	u3081
  7484  00E44A  EF29  F072         	goto	u3080
  7485  00E44E                     u3081:
  7486  00E44E  EF0D  F072         	goto	l3775
  7487  00E452                     u3080:
  7488  00E452                     
  7489                           ; BSR set to: 0
  7490  00E452  0E00               	movlw	0
  7491  00E454  6F65               	movwf	___flmul@aexp& (0+255),b
  7492  00E456                     
  7493                           ; BSR set to: 0
  7494  00E456  AF64               	btfss	(___flmul@grs+3)& (0+255),7,b
  7495  00E458  EF30  F072         	goto	u3091
  7496  00E45C  EF32  F072         	goto	u3090
  7497  00E460                     u3091:
  7498  00E460  EF56  F072         	goto	l1356
  7499  00E464                     u3090:
  7500  00E464                     
  7501                           ; BSR set to: 0
  7502  00E464  0EFF               	movlw	255
  7503  00E466  1561               	andwf	___flmul@grs& (0+255),w,b
  7504  00E468  6E53               	movwf	??___flmul^0,c
  7505  00E46A  0EFF               	movlw	255
  7506  00E46C  1562               	andwf	(___flmul@grs+1)& (0+255),w,b
  7507  00E46E  6E54               	movwf	(??___flmul+1)^0,c
  7508  00E470  0EFF               	movlw	255
  7509  00E472  1563               	andwf	(___flmul@grs+2)& (0+255),w,b
  7510  00E474  6E55               	movwf	(??___flmul+2)^0,c
  7511  00E476  0E7F               	movlw	127
  7512  00E478  1564               	andwf	(___flmul@grs+3)& (0+255),w,b
  7513  00E47A  6E56               	movwf	(??___flmul+3)^0,c
  7514  00E47C  5053               	movf	??___flmul^0,w,c
  7515  00E47E  1054               	iorwf	(??___flmul+1)^0,w,c
  7516  00E480  1055               	iorwf	(??___flmul+2)^0,w,c
  7517  00E482  1056               	iorwf	(??___flmul+3)^0,w,c
  7518  00E484  B4D8               	btfsc	status,2,c
  7519  00E486  EF47  F072         	goto	u3101
  7520  00E48A  EF49  F072         	goto	u3100
  7521  00E48E                     u3101:
  7522  00E48E  EF4D  F072         	goto	l1357
  7523  00E492                     u3100:
  7524  00E492                     l3789:
  7525                           
  7526                           ; BSR set to: 0
  7527  00E492  0E01               	movlw	1
  7528  00E494  6F65               	movwf	___flmul@aexp& (0+255),b
  7529  00E496  EF56  F072         	goto	l1356
  7530  00E49A                     l1357:
  7531                           
  7532                           ; BSR set to: 0
  7533  00E49A  A167               	btfss	___flmul@prod& (0+255),0,b
  7534  00E49C  EF52  F072         	goto	u3111
  7535  00E4A0  EF54  F072         	goto	u3110
  7536  00E4A4                     u3111:
  7537  00E4A4  EF56  F072         	goto	l1356
  7538  00E4A8                     u3110:
  7539  00E4A8  EF49  F072         	goto	l3789
  7540  00E4AC                     l1356:
  7541                           
  7542                           ; BSR set to: 0
  7543  00E4AC  5165               	movf	___flmul@aexp& (0+255),w,b
  7544  00E4AE  B4D8               	btfsc	status,2,c
  7545  00E4B0  EF5C  F072         	goto	u3121
  7546  00E4B4  EF5E  F072         	goto	u3120
  7547  00E4B8                     u3121:
  7548  00E4B8  EF82  F072         	goto	l3801
  7549  00E4BC                     u3120:
  7550  00E4BC                     
  7551                           ; BSR set to: 0
  7552  00E4BC  0E01               	movlw	1
  7553  00E4BE  2767               	addwf	___flmul@prod& (0+255),f,b
  7554  00E4C0  0E00               	movlw	0
  7555  00E4C2  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
  7556  00E4C4  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
  7557  00E4C6  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
  7558  00E4C8                     
  7559                           ; BSR set to: 0
  7560  00E4C8  A16A               	btfss	(___flmul@prod+3)& (0+255),0,b
  7561  00E4CA  EF69  F072         	goto	u3131
  7562  00E4CE  EF6B  F072         	goto	u3130
  7563  00E4D2                     u3131:
  7564  00E4D2  EF82  F072         	goto	l3801
  7565  00E4D6                     u3130:
  7566  00E4D6                     
  7567                           ; BSR set to: 0
  7568  00E4D6  C067  F053         	movff	___flmul@prod,??___flmul
  7569  00E4DA  C068  F054         	movff	___flmul@prod+1,??___flmul+1
  7570  00E4DE  C069  F055         	movff	___flmul@prod+2,??___flmul+2
  7571  00E4E2  C06A  F056         	movff	___flmul@prod+3,??___flmul+3
  7572  00E4E6  3456               	rlcf	(??___flmul+3)^0,w,c
  7573  00E4E8  3256               	rrcf	(??___flmul+3)^0,f,c
  7574  00E4EA  3255               	rrcf	(??___flmul+2)^0,f,c
  7575  00E4EC  3254               	rrcf	(??___flmul+1)^0,f,c
  7576  00E4EE  3253               	rrcf	??___flmul^0,f,c
  7577  00E4F0  C053  F067         	movff	??___flmul,___flmul@prod
  7578  00E4F4  C054  F068         	movff	??___flmul+1,___flmul@prod+1
  7579  00E4F8  C055  F069         	movff	??___flmul+2,___flmul@prod+2
  7580  00E4FC  C056  F06A         	movff	??___flmul+3,___flmul@prod+3
  7581  00E500                     
  7582                           ; BSR set to: 0
  7583  00E500  4B6B               	infsnz	___flmul@temp& (0+255),f,b
  7584  00E502  2B6C               	incf	(___flmul@temp+1)& (0+255),f,b
  7585  00E504                     l3801:
  7586                           
  7587                           ; BSR set to: 0
  7588  00E504  BF6C               	btfsc	(___flmul@temp+1)& (0+255),7,b
  7589  00E506  EF8D  F072         	goto	u3141
  7590  00E50A  516C               	movf	(___flmul@temp+1)& (0+255),w,b
  7591  00E50C  E108               	bnz	u3140
  7592  00E50E  296B               	incf	___flmul@temp& (0+255),w,b
  7593  00E510  A0D8               	btfss	status,0,c
  7594  00E512  EF8D  F072         	goto	u3141
  7595  00E516  EF8F  F072         	goto	u3140
  7596  00E51A                     u3141:
  7597  00E51A  EF99  F072         	goto	l3805
  7598  00E51E                     u3140:
  7599  00E51E                     
  7600                           ; BSR set to: 0
  7601  00E51E  0E00               	movlw	0
  7602  00E520  6F67               	movwf	___flmul@prod& (0+255),b
  7603  00E522  0E00               	movlw	0
  7604  00E524  6F68               	movwf	(___flmul@prod+1)& (0+255),b
  7605  00E526  0E80               	movlw	128
  7606  00E528  6F69               	movwf	(___flmul@prod+2)& (0+255),b
  7607  00E52A  0E7F               	movlw	127
  7608  00E52C  6F6A               	movwf	(___flmul@prod+3)& (0+255),b
  7609  00E52E  EFC7  F072         	goto	l3817
  7610  00E532                     l3805:
  7611                           
  7612                           ; BSR set to: 0
  7613  00E532  BF6C               	btfsc	(___flmul@temp+1)& (0+255),7,b
  7614  00E534  EFA6  F072         	goto	u3150
  7615  00E538  516C               	movf	(___flmul@temp+1)& (0+255),w,b
  7616  00E53A  E106               	bnz	u3151
  7617  00E53C  056B               	decf	___flmul@temp& (0+255),w,b
  7618  00E53E  B0D8               	btfsc	status,0,c
  7619  00E540  EFA4  F072         	goto	u3151
  7620  00E544  EFA6  F072         	goto	u3150
  7621  00E548                     u3151:
  7622  00E548  EFB2  F072         	goto	l1364
  7623  00E54C                     u3150:
  7624  00E54C                     
  7625                           ; BSR set to: 0
  7626  00E54C  0E00               	movlw	0
  7627  00E54E  6F67               	movwf	___flmul@prod& (0+255),b
  7628  00E550  0E00               	movlw	0
  7629  00E552  6F68               	movwf	(___flmul@prod+1)& (0+255),b
  7630  00E554  0E00               	movlw	0
  7631  00E556  6F69               	movwf	(___flmul@prod+2)& (0+255),b
  7632  00E558  0E00               	movlw	0
  7633  00E55A  6F6A               	movwf	(___flmul@prod+3)& (0+255),b
  7634  00E55C  0E00               	movlw	0
  7635  00E55E  6F60               	movwf	___flmul@sign& (0+255),b
  7636  00E560  EFC7  F072         	goto	l3817
  7637  00E564                     l1364:
  7638                           
  7639                           ; BSR set to: 0
  7640  00E564  C06B  F066         	movff	___flmul@temp,___flmul@bexp
  7641  00E568                     
  7642                           ; BSR set to: 0
  7643  00E568  0EFF               	movlw	255
  7644  00E56A  1767               	andwf	___flmul@prod& (0+255),f,b
  7645  00E56C  0EFF               	movlw	255
  7646  00E56E  1768               	andwf	(___flmul@prod+1)& (0+255),f,b
  7647  00E570  0E7F               	movlw	127
  7648  00E572  1769               	andwf	(___flmul@prod+2)& (0+255),f,b
  7649  00E574  0E00               	movlw	0
  7650  00E576  176A               	andwf	(___flmul@prod+3)& (0+255),f,b
  7651  00E578                     
  7652                           ; BSR set to: 0
  7653  00E578  A166               	btfss	___flmul@bexp& (0+255),0,b
  7654  00E57A  EFC1  F072         	goto	u3161
  7655  00E57E  EFC3  F072         	goto	u3160
  7656  00E582                     u3161:
  7657  00E582  EFC4  F072         	goto	l3815
  7658  00E586                     u3160:
  7659  00E586                     
  7660                           ; BSR set to: 0
  7661  00E586  8F69               	bsf	(___flmul@prod+2)& (0+255),7,b
  7662  00E588                     l3815:
  7663                           
  7664                           ; BSR set to: 0
  7665  00E588  90D8               	bcf	status,0,c
  7666  00E58A  3166               	rrcf	___flmul@bexp& (0+255),w,b
  7667  00E58C  6F6A               	movwf	(___flmul@prod+3)& (0+255),b
  7668  00E58E                     l3817:
  7669                           
  7670                           ; BSR set to: 0
  7671  00E58E  5160               	movf	___flmul@sign& (0+255),w,b
  7672  00E590  136A               	iorwf	(___flmul@prod+3)& (0+255),f,b
  7673  00E592                     
  7674                           ; BSR set to: 0
  7675  00E592  C067  F04B         	movff	___flmul@prod,?___flmul
  7676  00E596  C068  F04C         	movff	___flmul@prod+1,?___flmul+1
  7677  00E59A  C069  F04D         	movff	___flmul@prod+2,?___flmul+2
  7678  00E59E  C06A  F04E         	movff	___flmul@prod+3,?___flmul+3
  7679  00E5A2                     l1351:
  7680                           
  7681                           ; BSR set to: 0
  7682  00E5A2  0012               	return		;funcret
  7683  00E5A4                     __end_of___flmul:
  7684                           	callstack 0
  7685                           
  7686 ;; *************** function __tdiv_to_l_ *****************
  7687 ;; Defined at:
  7688 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\ftdivl.c"
  7689 ;; Parameters:    Size  Location     Type
  7690 ;;  f1              4    0[COMRAM] float 
  7691 ;;  f2              4    4[COMRAM] float 
  7692 ;; Auto vars:     Size  Location     Type
  7693 ;;  quot            4   11[COMRAM] unsigned long 
  7694 ;;  exp1            1   16[COMRAM] unsigned char 
  7695 ;;  cntr            1   15[COMRAM] unsigned char 
  7696 ;; Return value:  Size  Location     Type
  7697 ;;                  4    0[COMRAM] unsigned long 
  7698 ;; Registers used:
  7699 ;;		wreg, status,2, status,0
  7700 ;; Tracked objects:
  7701 ;;		On entry : 0/0
  7702 ;;		On exit  : 0/0
  7703 ;;		Unchanged: 0/0
  7704 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7705 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7706 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7707 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7708 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7709 ;;Total ram usage:       17 bytes
  7710 ;; Hardware stack levels used:    1
  7711 ;; This function calls:
  7712 ;;		Nothing
  7713 ;; This function is called by:
  7714 ;;		_printf
  7715 ;; This function uses a non-reentrant model
  7716 ;;
  7717                           
  7718                           	psect	text21
  7719  00D0CE                     __ptext21:
  7720                           	callstack 0
  7721  00D0CE                     __tdiv_to_l_:
  7722                           	callstack 29
  7723  00D0CE  C003  F009         	movff	__tdiv_to_l_@f1+2,??__tdiv_to_l_
  7724  00D0D2  6A0A               	clrf	(??__tdiv_to_l_+1)^0,c
  7725  00D0D4  6A0B               	clrf	(??__tdiv_to_l_+2)^0,c
  7726  00D0D6  3402               	rlcf	(__tdiv_to_l_@f1+1)^0,w,c
  7727  00D0D8  3609               	rlcf	??__tdiv_to_l_^0,f,c
  7728  00D0DA  E301               	bnc	u3661
  7729  00D0DC  800A               	bsf	(??__tdiv_to_l_+1)^0,0,c
  7730  00D0DE                     u3661:
  7731  00D0DE  5009               	movf	??__tdiv_to_l_^0,w,c
  7732  00D0E0  6E11               	movwf	__tdiv_to_l_@exp1^0,c
  7733  00D0E2  5011               	movf	__tdiv_to_l_@exp1^0,w,c
  7734  00D0E4  A4D8               	btfss	status,2,c
  7735  00D0E6  EF77  F068         	goto	u3671
  7736  00D0EA  EF79  F068         	goto	u3670
  7737  00D0EE                     u3671:
  7738  00D0EE  EF83  F068         	goto	l4143
  7739  00D0F2                     u3670:
  7740  00D0F2                     l4139:
  7741  00D0F2  0E00               	movlw	0
  7742  00D0F4  6E01               	movwf	?__tdiv_to_l_^0,c
  7743  00D0F6  0E00               	movlw	0
  7744  00D0F8  6E02               	movwf	(?__tdiv_to_l_+1)^0,c
  7745  00D0FA  0E00               	movlw	0
  7746  00D0FC  6E03               	movwf	(?__tdiv_to_l_+2)^0,c
  7747  00D0FE  0E00               	movlw	0
  7748  00D100  6E04               	movwf	(?__tdiv_to_l_+3)^0,c
  7749  00D102  EF11  F069         	goto	l1074
  7750  00D106                     l4143:
  7751  00D106  C007  F009         	movff	__tdiv_to_l_@f2+2,??__tdiv_to_l_
  7752  00D10A  6A0A               	clrf	(??__tdiv_to_l_+1)^0,c
  7753  00D10C  6A0B               	clrf	(??__tdiv_to_l_+2)^0,c
  7754  00D10E  3406               	rlcf	(__tdiv_to_l_@f2+1)^0,w,c
  7755  00D110  3609               	rlcf	??__tdiv_to_l_^0,f,c
  7756  00D112  E301               	bnc	u3681
  7757  00D114  800A               	bsf	(??__tdiv_to_l_+1)^0,0,c
  7758  00D116                     u3681:
  7759  00D116  5009               	movf	??__tdiv_to_l_^0,w,c
  7760  00D118  6E10               	movwf	__tdiv_to_l_@cntr^0,c
  7761  00D11A  5010               	movf	__tdiv_to_l_@cntr^0,w,c
  7762  00D11C  A4D8               	btfss	status,2,c
  7763  00D11E  EF93  F068         	goto	u3691
  7764  00D122  EF95  F068         	goto	u3690
  7765  00D126                     u3691:
  7766  00D126  EF97  F068         	goto	l4149
  7767  00D12A                     u3690:
  7768  00D12A  EF79  F068         	goto	l4139
  7769  00D12E                     l4149:
  7770  00D12E  8E02               	bsf	(__tdiv_to_l_@f1+1)^0,7,c
  7771  00D130  0EFF               	movlw	255
  7772  00D132  1601               	andwf	__tdiv_to_l_@f1^0,f,c
  7773  00D134  0EFF               	movlw	255
  7774  00D136  1602               	andwf	(__tdiv_to_l_@f1+1)^0,f,c
  7775  00D138  0E00               	movlw	0
  7776  00D13A  1603               	andwf	(__tdiv_to_l_@f1+2)^0,f,c
  7777  00D13C  8E06               	bsf	(__tdiv_to_l_@f2+1)^0,7,c
  7778  00D13E  0EFF               	movlw	255
  7779  00D140  1605               	andwf	__tdiv_to_l_@f2^0,f,c
  7780  00D142  0EFF               	movlw	255
  7781  00D144  1606               	andwf	(__tdiv_to_l_@f2+1)^0,f,c
  7782  00D146  0E00               	movlw	0
  7783  00D148  1607               	andwf	(__tdiv_to_l_@f2+2)^0,f,c
  7784  00D14A  0E00               	movlw	0
  7785  00D14C  6E0C               	movwf	__tdiv_to_l_@quot^0,c
  7786  00D14E  0E00               	movlw	0
  7787  00D150  6E0D               	movwf	(__tdiv_to_l_@quot+1)^0,c
  7788  00D152  0E00               	movlw	0
  7789  00D154  6E0E               	movwf	(__tdiv_to_l_@quot+2)^0,c
  7790  00D156  0E00               	movlw	0
  7791  00D158  6E0F               	movwf	(__tdiv_to_l_@quot+3)^0,c
  7792  00D15A  0E7F               	movlw	127
  7793  00D15C  5E11               	subwf	__tdiv_to_l_@exp1^0,f,c
  7794  00D15E  5010               	movf	__tdiv_to_l_@cntr^0,w,c
  7795  00D160  0F98               	addlw	152
  7796  00D162  5E11               	subwf	__tdiv_to_l_@exp1^0,f,c
  7797  00D164  0E18               	movlw	24
  7798  00D166  6E10               	movwf	__tdiv_to_l_@cntr^0,c
  7799  00D168                     l1076:
  7800  00D168  90D8               	bcf	status,0,c
  7801  00D16A  360C               	rlcf	__tdiv_to_l_@quot^0,f,c
  7802  00D16C  360D               	rlcf	(__tdiv_to_l_@quot+1)^0,f,c
  7803  00D16E  360E               	rlcf	(__tdiv_to_l_@quot+2)^0,f,c
  7804  00D170  360F               	rlcf	(__tdiv_to_l_@quot+3)^0,f,c
  7805  00D172  5005               	movf	__tdiv_to_l_@f2^0,w,c
  7806  00D174  5C01               	subwf	__tdiv_to_l_@f1^0,w,c
  7807  00D176  5006               	movf	(__tdiv_to_l_@f2+1)^0,w,c
  7808  00D178  5802               	subwfb	(__tdiv_to_l_@f1+1)^0,w,c
  7809  00D17A  5007               	movf	(__tdiv_to_l_@f2+2)^0,w,c
  7810  00D17C  5803               	subwfb	(__tdiv_to_l_@f1+2)^0,w,c
  7811  00D17E  A0D8               	btfss	status,0,c
  7812  00D180  EFC4  F068         	goto	u3701
  7813  00D184  EFC6  F068         	goto	u3700
  7814  00D188                     u3701:
  7815  00D188  EFCD  F068         	goto	l1077
  7816  00D18C                     u3700:
  7817  00D18C  5005               	movf	__tdiv_to_l_@f2^0,w,c
  7818  00D18E  5E01               	subwf	__tdiv_to_l_@f1^0,f,c
  7819  00D190  5006               	movf	(__tdiv_to_l_@f2+1)^0,w,c
  7820  00D192  5A02               	subwfb	(__tdiv_to_l_@f1+1)^0,f,c
  7821  00D194  5007               	movf	(__tdiv_to_l_@f2+2)^0,w,c
  7822  00D196  5A03               	subwfb	(__tdiv_to_l_@f1+2)^0,f,c
  7823  00D198  800C               	bsf	__tdiv_to_l_@quot^0,0,c
  7824  00D19A                     l1077:
  7825  00D19A  90D8               	bcf	status,0,c
  7826  00D19C  3601               	rlcf	__tdiv_to_l_@f1^0,f,c
  7827  00D19E  3602               	rlcf	(__tdiv_to_l_@f1+1)^0,f,c
  7828  00D1A0  3603               	rlcf	(__tdiv_to_l_@f1+2)^0,f,c
  7829  00D1A2  2E10               	decfsz	__tdiv_to_l_@cntr^0,f,c
  7830  00D1A4  EFB4  F068         	goto	l1076
  7831  00D1A8  BE11               	btfsc	__tdiv_to_l_@exp1^0,7,c
  7832  00D1AA  EFDB  F068         	goto	u3710
  7833  00D1AE  EFD9  F068         	goto	u3711
  7834  00D1B2                     u3711:
  7835  00D1B2  EFF1  F068         	goto	l4183
  7836  00D1B6                     u3710:
  7837  00D1B6  5011               	movf	__tdiv_to_l_@exp1^0,w,c
  7838  00D1B8  0A80               	xorlw	128
  7839  00D1BA  0F97               	addlw	151
  7840  00D1BC  B0D8               	btfsc	status,0,c
  7841  00D1BE  EFE3  F068         	goto	u3721
  7842  00D1C2  EFE5  F068         	goto	u3720
  7843  00D1C6                     u3721:
  7844  00D1C6  EFE7  F068         	goto	l4179
  7845  00D1CA                     u3720:
  7846  00D1CA  EF79  F068         	goto	l4139
  7847  00D1CE                     l4179:
  7848  00D1CE  90D8               	bcf	status,0,c
  7849  00D1D0  320F               	rrcf	(__tdiv_to_l_@quot+3)^0,f,c
  7850  00D1D2  320E               	rrcf	(__tdiv_to_l_@quot+2)^0,f,c
  7851  00D1D4  320D               	rrcf	(__tdiv_to_l_@quot+1)^0,f,c
  7852  00D1D6  320C               	rrcf	__tdiv_to_l_@quot^0,f,c
  7853  00D1D8  3E11               	incfsz	__tdiv_to_l_@exp1^0,f,c
  7854  00D1DA  EFE7  F068         	goto	l4179
  7855  00D1DE  EF09  F069         	goto	l1083
  7856  00D1E2                     l4183:
  7857  00D1E2  0E17               	movlw	23
  7858  00D1E4  6411               	cpfsgt	__tdiv_to_l_@exp1^0,c
  7859  00D1E6  EFF7  F068         	goto	u3731
  7860  00D1EA  EFF9  F068         	goto	u3730
  7861  00D1EE                     u3731:
  7862  00D1EE  EF01  F069         	goto	l4191
  7863  00D1F2                     u3730:
  7864  00D1F2  EF79  F068         	goto	l4139
  7865  00D1F6                     l4189:
  7866  00D1F6  90D8               	bcf	status,0,c
  7867  00D1F8  360C               	rlcf	__tdiv_to_l_@quot^0,f,c
  7868  00D1FA  360D               	rlcf	(__tdiv_to_l_@quot+1)^0,f,c
  7869  00D1FC  360E               	rlcf	(__tdiv_to_l_@quot+2)^0,f,c
  7870  00D1FE  360F               	rlcf	(__tdiv_to_l_@quot+3)^0,f,c
  7871  00D200  0611               	decf	__tdiv_to_l_@exp1^0,f,c
  7872  00D202                     l4191:
  7873  00D202  5011               	movf	__tdiv_to_l_@exp1^0,w,c
  7874  00D204  A4D8               	btfss	status,2,c
  7875  00D206  EF07  F069         	goto	u3741
  7876  00D20A  EF09  F069         	goto	u3740
  7877  00D20E                     u3741:
  7878  00D20E  EFFB  F068         	goto	l4189
  7879  00D212                     u3740:
  7880  00D212                     l1083:
  7881  00D212  C00C  F001         	movff	__tdiv_to_l_@quot,?__tdiv_to_l_
  7882  00D216  C00D  F002         	movff	__tdiv_to_l_@quot+1,?__tdiv_to_l_+1
  7883  00D21A  C00E  F003         	movff	__tdiv_to_l_@quot+2,?__tdiv_to_l_+2
  7884  00D21E  C00F  F004         	movff	__tdiv_to_l_@quot+3,?__tdiv_to_l_+3
  7885  00D222                     l1074:
  7886  00D222  0012               	return		;funcret
  7887  00D224                     __end_of__tdiv_to_l_:
  7888                           	callstack 0
  7889                           
  7890 ;; *************** function __div_to_l_ *****************
  7891 ;; Defined at:
  7892 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\fldivl.c"
  7893 ;; Parameters:    Size  Location     Type
  7894 ;;  f1              4    0[COMRAM] unsigned long 
  7895 ;;  f2              4    4[COMRAM] unsigned long 
  7896 ;; Auto vars:     Size  Location     Type
  7897 ;;  quot            4    8[COMRAM] unsigned long 
  7898 ;;  exp1            1   13[COMRAM] unsigned char 
  7899 ;;  cntr            1   12[COMRAM] unsigned char 
  7900 ;; Return value:  Size  Location     Type
  7901 ;;                  4    0[COMRAM] unsigned long 
  7902 ;; Registers used:
  7903 ;;		wreg, status,2, status,0
  7904 ;; Tracked objects:
  7905 ;;		On entry : 0/0
  7906 ;;		On exit  : 0/0
  7907 ;;		Unchanged: 0/0
  7908 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7909 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7910 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7911 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7912 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7913 ;;Total ram usage:       14 bytes
  7914 ;; Hardware stack levels used:    1
  7915 ;; This function calls:
  7916 ;;		Nothing
  7917 ;; This function is called by:
  7918 ;;		_printf
  7919 ;; This function uses a non-reentrant model
  7920 ;;
  7921                           
  7922                           	psect	text22
  7923  00CF82                     __ptext22:
  7924                           	callstack 0
  7925  00CF82                     __div_to_l_:
  7926                           	callstack 29
  7927  00CF82  3403               	rlcf	(__div_to_l_@f1+2)^0,w,c
  7928  00CF84  3404               	rlcf	(__div_to_l_@f1+3)^0,w,c
  7929  00CF86  6E0E               	movwf	__div_to_l_@exp1^0,c
  7930  00CF88  500E               	movf	__div_to_l_@exp1^0,w,c
  7931  00CF8A  A4D8               	btfss	status,2,c
  7932  00CF8C  EFCA  F067         	goto	u3751
  7933  00CF90  EFCC  F067         	goto	u3750
  7934  00CF94                     u3751:
  7935  00CF94  EFD6  F067         	goto	l4199
  7936  00CF98                     u3750:
  7937  00CF98                     l4195:
  7938  00CF98  0E00               	movlw	0
  7939  00CF9A  6E01               	movwf	?__div_to_l_^0,c
  7940  00CF9C  0E00               	movlw	0
  7941  00CF9E  6E02               	movwf	(?__div_to_l_+1)^0,c
  7942  00CFA0  0E00               	movlw	0
  7943  00CFA2  6E03               	movwf	(?__div_to_l_+2)^0,c
  7944  00CFA4  0E00               	movlw	0
  7945  00CFA6  6E04               	movwf	(?__div_to_l_+3)^0,c
  7946  00CFA8  EF66  F068         	goto	l965
  7947  00CFAC                     l4199:
  7948  00CFAC  3407               	rlcf	(__div_to_l_@f2+2)^0,w,c
  7949  00CFAE  3408               	rlcf	(__div_to_l_@f2+3)^0,w,c
  7950  00CFB0  6E0D               	movwf	__div_to_l_@cntr^0,c
  7951  00CFB2  500D               	movf	__div_to_l_@cntr^0,w,c
  7952  00CFB4  A4D8               	btfss	status,2,c
  7953  00CFB6  EFDF  F067         	goto	u3761
  7954  00CFBA  EFE1  F067         	goto	u3760
  7955  00CFBE                     u3761:
  7956  00CFBE  EFE3  F067         	goto	l4205
  7957  00CFC2                     u3760:
  7958  00CFC2  EFCC  F067         	goto	l4195
  7959  00CFC6                     l4205:
  7960  00CFC6  8E03               	bsf	(__div_to_l_@f1+2)^0,7,c
  7961  00CFC8  0EFF               	movlw	255
  7962  00CFCA  1601               	andwf	__div_to_l_@f1^0,f,c
  7963  00CFCC  0EFF               	movlw	255
  7964  00CFCE  1602               	andwf	(__div_to_l_@f1+1)^0,f,c
  7965  00CFD0  0EFF               	movlw	255
  7966  00CFD2  1603               	andwf	(__div_to_l_@f1+2)^0,f,c
  7967  00CFD4  0E00               	movlw	0
  7968  00CFD6  1604               	andwf	(__div_to_l_@f1+3)^0,f,c
  7969  00CFD8  8E07               	bsf	(__div_to_l_@f2+2)^0,7,c
  7970  00CFDA  0EFF               	movlw	255
  7971  00CFDC  1605               	andwf	__div_to_l_@f2^0,f,c
  7972  00CFDE  0EFF               	movlw	255
  7973  00CFE0  1606               	andwf	(__div_to_l_@f2+1)^0,f,c
  7974  00CFE2  0EFF               	movlw	255
  7975  00CFE4  1607               	andwf	(__div_to_l_@f2+2)^0,f,c
  7976  00CFE6  0E00               	movlw	0
  7977  00CFE8  1608               	andwf	(__div_to_l_@f2+3)^0,f,c
  7978  00CFEA  0E00               	movlw	0
  7979  00CFEC  6E09               	movwf	__div_to_l_@quot^0,c
  7980  00CFEE  0E00               	movlw	0
  7981  00CFF0  6E0A               	movwf	(__div_to_l_@quot+1)^0,c
  7982  00CFF2  0E00               	movlw	0
  7983  00CFF4  6E0B               	movwf	(__div_to_l_@quot+2)^0,c
  7984  00CFF6  0E00               	movlw	0
  7985  00CFF8  6E0C               	movwf	(__div_to_l_@quot+3)^0,c
  7986  00CFFA  0E7F               	movlw	127
  7987  00CFFC  5E0E               	subwf	__div_to_l_@exp1^0,f,c
  7988  00CFFE  500D               	movf	__div_to_l_@cntr^0,w,c
  7989  00D000  0FA0               	addlw	160
  7990  00D002  5E0E               	subwf	__div_to_l_@exp1^0,f,c
  7991  00D004  0E20               	movlw	32
  7992  00D006  6E0D               	movwf	__div_to_l_@cntr^0,c
  7993  00D008                     l4219:
  7994  00D008  90D8               	bcf	status,0,c
  7995  00D00A  3609               	rlcf	__div_to_l_@quot^0,f,c
  7996  00D00C  360A               	rlcf	(__div_to_l_@quot+1)^0,f,c
  7997  00D00E  360B               	rlcf	(__div_to_l_@quot+2)^0,f,c
  7998  00D010  360C               	rlcf	(__div_to_l_@quot+3)^0,f,c
  7999  00D012  5005               	movf	__div_to_l_@f2^0,w,c
  8000  00D014  5C01               	subwf	__div_to_l_@f1^0,w,c
  8001  00D016  5006               	movf	(__div_to_l_@f2+1)^0,w,c
  8002  00D018  5802               	subwfb	(__div_to_l_@f1+1)^0,w,c
  8003  00D01A  5007               	movf	(__div_to_l_@f2+2)^0,w,c
  8004  00D01C  5803               	subwfb	(__div_to_l_@f1+2)^0,w,c
  8005  00D01E  5008               	movf	(__div_to_l_@f2+3)^0,w,c
  8006  00D020  5804               	subwfb	(__div_to_l_@f1+3)^0,w,c
  8007  00D022  A0D8               	btfss	status,0,c
  8008  00D024  EF16  F068         	goto	u3771
  8009  00D028  EF18  F068         	goto	u3770
  8010  00D02C                     u3771:
  8011  00D02C  EF21  F068         	goto	l4227
  8012  00D030                     u3770:
  8013  00D030  5005               	movf	__div_to_l_@f2^0,w,c
  8014  00D032  5E01               	subwf	__div_to_l_@f1^0,f,c
  8015  00D034  5006               	movf	(__div_to_l_@f2+1)^0,w,c
  8016  00D036  5A02               	subwfb	(__div_to_l_@f1+1)^0,f,c
  8017  00D038  5007               	movf	(__div_to_l_@f2+2)^0,w,c
  8018  00D03A  5A03               	subwfb	(__div_to_l_@f1+2)^0,f,c
  8019  00D03C  5008               	movf	(__div_to_l_@f2+3)^0,w,c
  8020  00D03E  5A04               	subwfb	(__div_to_l_@f1+3)^0,f,c
  8021  00D040  8009               	bsf	__div_to_l_@quot^0,0,c
  8022  00D042                     l4227:
  8023  00D042  90D8               	bcf	status,0,c
  8024  00D044  3601               	rlcf	__div_to_l_@f1^0,f,c
  8025  00D046  3602               	rlcf	(__div_to_l_@f1+1)^0,f,c
  8026  00D048  3603               	rlcf	(__div_to_l_@f1+2)^0,f,c
  8027  00D04A  3604               	rlcf	(__div_to_l_@f1+3)^0,f,c
  8028  00D04C  2E0D               	decfsz	__div_to_l_@cntr^0,f,c
  8029  00D04E  EF04  F068         	goto	l4219
  8030  00D052  BE0E               	btfsc	__div_to_l_@exp1^0,7,c
  8031  00D054  EF30  F068         	goto	u3780
  8032  00D058  EF2E  F068         	goto	u3781
  8033  00D05C                     u3781:
  8034  00D05C  EF46  F068         	goto	l4243
  8035  00D060                     u3780:
  8036  00D060  500E               	movf	__div_to_l_@exp1^0,w,c
  8037  00D062  0A80               	xorlw	128
  8038  00D064  0F9F               	addlw	159
  8039  00D066  B0D8               	btfsc	status,0,c
  8040  00D068  EF38  F068         	goto	u3791
  8041  00D06C  EF3A  F068         	goto	u3790
  8042  00D070                     u3791:
  8043  00D070  EF3C  F068         	goto	l4239
  8044  00D074                     u3790:
  8045  00D074  EFCC  F067         	goto	l4195
  8046  00D078                     l4239:
  8047  00D078  90D8               	bcf	status,0,c
  8048  00D07A  320C               	rrcf	(__div_to_l_@quot+3)^0,f,c
  8049  00D07C  320B               	rrcf	(__div_to_l_@quot+2)^0,f,c
  8050  00D07E  320A               	rrcf	(__div_to_l_@quot+1)^0,f,c
  8051  00D080  3209               	rrcf	__div_to_l_@quot^0,f,c
  8052  00D082  3E0E               	incfsz	__div_to_l_@exp1^0,f,c
  8053  00D084  EF3C  F068         	goto	l4239
  8054  00D088  EF5E  F068         	goto	l974
  8055  00D08C                     l4243:
  8056  00D08C  0E1F               	movlw	31
  8057  00D08E  640E               	cpfsgt	__div_to_l_@exp1^0,c
  8058  00D090  EF4C  F068         	goto	u3801
  8059  00D094  EF4E  F068         	goto	u3800
  8060  00D098                     u3801:
  8061  00D098  EF56  F068         	goto	l4251
  8062  00D09C                     u3800:
  8063  00D09C  EFCC  F067         	goto	l4195
  8064  00D0A0                     l4249:
  8065  00D0A0  90D8               	bcf	status,0,c
  8066  00D0A2  3609               	rlcf	__div_to_l_@quot^0,f,c
  8067  00D0A4  360A               	rlcf	(__div_to_l_@quot+1)^0,f,c
  8068  00D0A6  360B               	rlcf	(__div_to_l_@quot+2)^0,f,c
  8069  00D0A8  360C               	rlcf	(__div_to_l_@quot+3)^0,f,c
  8070  00D0AA  060E               	decf	__div_to_l_@exp1^0,f,c
  8071  00D0AC                     l4251:
  8072  00D0AC  500E               	movf	__div_to_l_@exp1^0,w,c
  8073  00D0AE  A4D8               	btfss	status,2,c
  8074  00D0B0  EF5C  F068         	goto	u3811
  8075  00D0B4  EF5E  F068         	goto	u3810
  8076  00D0B8                     u3811:
  8077  00D0B8  EF50  F068         	goto	l4249
  8078  00D0BC                     u3810:
  8079  00D0BC                     l974:
  8080  00D0BC  C009  F001         	movff	__div_to_l_@quot,?__div_to_l_
  8081  00D0C0  C00A  F002         	movff	__div_to_l_@quot+1,?__div_to_l_+1
  8082  00D0C4  C00B  F003         	movff	__div_to_l_@quot+2,?__div_to_l_+2
  8083  00D0C8  C00C  F004         	movff	__div_to_l_@quot+3,?__div_to_l_+3
  8084  00D0CC                     l965:
  8085  00D0CC  0012               	return		;funcret
  8086  00D0CE                     __end_of__div_to_l_:
  8087                           	callstack 0
  8088                           
  8089 ;; *************** function ___xxtofl *****************
  8090 ;; Defined at:
  8091 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\xxtofl.c"
  8092 ;; Parameters:    Size  Location     Type
  8093 ;;  sign            1    wreg     unsigned char 
  8094 ;;  val             4   24[COMRAM] long 
  8095 ;; Auto vars:     Size  Location     Type
  8096 ;;  sign            1   32[COMRAM] unsigned char 
  8097 ;;  arg             4   34[COMRAM] unsigned long 
  8098 ;;  exp             1   33[COMRAM] unsigned char 
  8099 ;; Return value:  Size  Location     Type
  8100 ;;                  4   24[COMRAM] unsigned char 
  8101 ;; Registers used:
  8102 ;;		wreg, status,2, status,0
  8103 ;; Tracked objects:
  8104 ;;		On entry : 0/0
  8105 ;;		On exit  : 0/0
  8106 ;;		Unchanged: 0/0
  8107 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8108 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8109 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8110 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8111 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8112 ;;Total ram usage:       14 bytes
  8113 ;; Hardware stack levels used:    1
  8114 ;; This function calls:
  8115 ;;		Nothing
  8116 ;; This function is called by:
  8117 ;;		_main
  8118 ;;		_printf
  8119 ;;		_pow
  8120 ;;		_exp
  8121 ;;		_floor
  8122 ;;		_log
  8123 ;; This function uses a non-reentrant model
  8124 ;;
  8125                           
  8126                           	psect	text23
  8127  00D3C2                     __ptext23:
  8128                           	callstack 0
  8129  00D3C2                     ___xxtofl:
  8130                           	callstack 29
  8131                           
  8132                           ;incstack = 0
  8133                           ;___xxtofl@sign stored from wreg
  8134  00D3C2  6E21               	movwf	___xxtofl@sign^0,c
  8135  00D3C4  5021               	movf	___xxtofl@sign^0,w,c
  8136  00D3C6  B4D8               	btfsc	status,2,c
  8137  00D3C8  EFE8  F069         	goto	u3471
  8138  00D3CC  EFEA  F069         	goto	u3470
  8139  00D3D0                     u3471:
  8140  00D3D0  EF0C  F06A         	goto	l1388
  8141  00D3D4                     u3470:
  8142  00D3D4  BE1C               	btfsc	(___xxtofl@val+3)^0,7,c
  8143  00D3D6  EFF1  F069         	goto	u3480
  8144  00D3DA  EFEF  F069         	goto	u3481
  8145  00D3DE                     u3481:
  8146  00D3DE  EF0C  F06A         	goto	l1388
  8147  00D3E2                     u3480:
  8148  00D3E2  C019  F01D         	movff	___xxtofl@val,??___xxtofl
  8149  00D3E6  C01A  F01E         	movff	___xxtofl@val+1,??___xxtofl+1
  8150  00D3EA  C01B  F01F         	movff	___xxtofl@val+2,??___xxtofl+2
  8151  00D3EE  C01C  F020         	movff	___xxtofl@val+3,??___xxtofl+3
  8152  00D3F2  1E1D               	comf	??___xxtofl^0,f,c
  8153  00D3F4  1E1E               	comf	(??___xxtofl+1)^0,f,c
  8154  00D3F6  1E1F               	comf	(??___xxtofl+2)^0,f,c
  8155  00D3F8  1E20               	comf	(??___xxtofl+3)^0,f,c
  8156  00D3FA  2A1D               	incf	??___xxtofl^0,f,c
  8157  00D3FC  0E00               	movlw	0
  8158  00D3FE  221E               	addwfc	(??___xxtofl+1)^0,f,c
  8159  00D400  221F               	addwfc	(??___xxtofl+2)^0,f,c
  8160  00D402  2220               	addwfc	(??___xxtofl+3)^0,f,c
  8161  00D404  C01D  F023         	movff	??___xxtofl,___xxtofl@arg
  8162  00D408  C01E  F024         	movff	??___xxtofl+1,___xxtofl@arg+1
  8163  00D40C  C01F  F025         	movff	??___xxtofl+2,___xxtofl@arg+2
  8164  00D410  C020  F026         	movff	??___xxtofl+3,___xxtofl@arg+3
  8165  00D414  EF14  F06A         	goto	l4013
  8166  00D418                     l1388:
  8167  00D418  C019  F023         	movff	___xxtofl@val,___xxtofl@arg
  8168  00D41C  C01A  F024         	movff	___xxtofl@val+1,___xxtofl@arg+1
  8169  00D420  C01B  F025         	movff	___xxtofl@val+2,___xxtofl@arg+2
  8170  00D424  C01C  F026         	movff	___xxtofl@val+3,___xxtofl@arg+3
  8171  00D428                     l4013:
  8172  00D428  5019               	movf	___xxtofl@val^0,w,c
  8173  00D42A  101A               	iorwf	(___xxtofl@val+1)^0,w,c
  8174  00D42C  101B               	iorwf	(___xxtofl@val+2)^0,w,c
  8175  00D42E  101C               	iorwf	(___xxtofl@val+3)^0,w,c
  8176  00D430  A4D8               	btfss	status,2,c
  8177  00D432  EF1D  F06A         	goto	u3491
  8178  00D436  EF1F  F06A         	goto	u3490
  8179  00D43A                     u3491:
  8180  00D43A  EF29  F06A         	goto	l4019
  8181  00D43E                     u3490:
  8182  00D43E  0E00               	movlw	0
  8183  00D440  6E19               	movwf	?___xxtofl^0,c
  8184  00D442  0E00               	movlw	0
  8185  00D444  6E1A               	movwf	(?___xxtofl+1)^0,c
  8186  00D446  0E00               	movlw	0
  8187  00D448  6E1B               	movwf	(?___xxtofl+2)^0,c
  8188  00D44A  0E00               	movlw	0
  8189  00D44C  6E1C               	movwf	(?___xxtofl+3)^0,c
  8190  00D44E  EFBA  F06A         	goto	l1391
  8191  00D452                     l4019:
  8192  00D452  0E96               	movlw	150
  8193  00D454  6E22               	movwf	___xxtofl@exp^0,c
  8194  00D456  EF33  F06A         	goto	l4023
  8195  00D45A                     l4021:
  8196  00D45A  2A22               	incf	___xxtofl@exp^0,f,c
  8197  00D45C  90D8               	bcf	status,0,c
  8198  00D45E  3226               	rrcf	(___xxtofl@arg+3)^0,f,c
  8199  00D460  3225               	rrcf	(___xxtofl@arg+2)^0,f,c
  8200  00D462  3224               	rrcf	(___xxtofl@arg+1)^0,f,c
  8201  00D464  3223               	rrcf	___xxtofl@arg^0,f,c
  8202  00D466                     l4023:
  8203  00D466  0E00               	movlw	0
  8204  00D468  1423               	andwf	___xxtofl@arg^0,w,c
  8205  00D46A  6E1D               	movwf	??___xxtofl^0,c
  8206  00D46C  0E00               	movlw	0
  8207  00D46E  1424               	andwf	(___xxtofl@arg+1)^0,w,c
  8208  00D470  6E1E               	movwf	(??___xxtofl+1)^0,c
  8209  00D472  0E00               	movlw	0
  8210  00D474  1425               	andwf	(___xxtofl@arg+2)^0,w,c
  8211  00D476  6E1F               	movwf	(??___xxtofl+2)^0,c
  8212  00D478  0EFE               	movlw	254
  8213  00D47A  1426               	andwf	(___xxtofl@arg+3)^0,w,c
  8214  00D47C  6E20               	movwf	(??___xxtofl+3)^0,c
  8215  00D47E  501D               	movf	??___xxtofl^0,w,c
  8216  00D480  101E               	iorwf	(??___xxtofl+1)^0,w,c
  8217  00D482  101F               	iorwf	(??___xxtofl+2)^0,w,c
  8218  00D484  1020               	iorwf	(??___xxtofl+3)^0,w,c
  8219  00D486  A4D8               	btfss	status,2,c
  8220  00D488  EF48  F06A         	goto	u3501
  8221  00D48C  EF4A  F06A         	goto	u3500
  8222  00D490                     u3501:
  8223  00D490  EF2D  F06A         	goto	l4021
  8224  00D494                     u3500:
  8225  00D494  EF58  F06A         	goto	l1395
  8226  00D498                     l4025:
  8227  00D498  2A22               	incf	___xxtofl@exp^0,f,c
  8228  00D49A  0E01               	movlw	1
  8229  00D49C  2623               	addwf	___xxtofl@arg^0,f,c
  8230  00D49E  0E00               	movlw	0
  8231  00D4A0  2224               	addwfc	(___xxtofl@arg+1)^0,f,c
  8232  00D4A2  2225               	addwfc	(___xxtofl@arg+2)^0,f,c
  8233  00D4A4  2226               	addwfc	(___xxtofl@arg+3)^0,f,c
  8234  00D4A6  90D8               	bcf	status,0,c
  8235  00D4A8  3226               	rrcf	(___xxtofl@arg+3)^0,f,c
  8236  00D4AA  3225               	rrcf	(___xxtofl@arg+2)^0,f,c
  8237  00D4AC  3224               	rrcf	(___xxtofl@arg+1)^0,f,c
  8238  00D4AE  3223               	rrcf	___xxtofl@arg^0,f,c
  8239  00D4B0                     l1395:
  8240  00D4B0  0E00               	movlw	0
  8241  00D4B2  1423               	andwf	___xxtofl@arg^0,w,c
  8242  00D4B4  6E1D               	movwf	??___xxtofl^0,c
  8243  00D4B6  0E00               	movlw	0
  8244  00D4B8  1424               	andwf	(___xxtofl@arg+1)^0,w,c
  8245  00D4BA  6E1E               	movwf	(??___xxtofl+1)^0,c
  8246  00D4BC  0E00               	movlw	0
  8247  00D4BE  1425               	andwf	(___xxtofl@arg+2)^0,w,c
  8248  00D4C0  6E1F               	movwf	(??___xxtofl+2)^0,c
  8249  00D4C2  0EFF               	movlw	255
  8250  00D4C4  1426               	andwf	(___xxtofl@arg+3)^0,w,c
  8251  00D4C6  6E20               	movwf	(??___xxtofl+3)^0,c
  8252  00D4C8  501D               	movf	??___xxtofl^0,w,c
  8253  00D4CA  101E               	iorwf	(??___xxtofl+1)^0,w,c
  8254  00D4CC  101F               	iorwf	(??___xxtofl+2)^0,w,c
  8255  00D4CE  1020               	iorwf	(??___xxtofl+3)^0,w,c
  8256  00D4D0  A4D8               	btfss	status,2,c
  8257  00D4D2  EF6D  F06A         	goto	u3511
  8258  00D4D6  EF6F  F06A         	goto	u3510
  8259  00D4DA                     u3511:
  8260  00D4DA  EF4C  F06A         	goto	l4025
  8261  00D4DE                     u3510:
  8262  00D4DE  EF77  F06A         	goto	l4033
  8263  00D4E2                     l4031:
  8264  00D4E2  0622               	decf	___xxtofl@exp^0,f,c
  8265  00D4E4  90D8               	bcf	status,0,c
  8266  00D4E6  3623               	rlcf	___xxtofl@arg^0,f,c
  8267  00D4E8  3624               	rlcf	(___xxtofl@arg+1)^0,f,c
  8268  00D4EA  3625               	rlcf	(___xxtofl@arg+2)^0,f,c
  8269  00D4EC  3626               	rlcf	(___xxtofl@arg+3)^0,f,c
  8270  00D4EE                     l4033:
  8271  00D4EE  BE25               	btfsc	(___xxtofl@arg+2)^0,7,c
  8272  00D4F0  EF7C  F06A         	goto	u3521
  8273  00D4F4  EF7E  F06A         	goto	u3520
  8274  00D4F8                     u3521:
  8275  00D4F8  EF86  F06A         	goto	l1402
  8276  00D4FC                     u3520:
  8277  00D4FC  0E02               	movlw	2
  8278  00D4FE  6022               	cpfslt	___xxtofl@exp^0,c
  8279  00D500  EF84  F06A         	goto	u3531
  8280  00D504  EF86  F06A         	goto	u3530
  8281  00D508                     u3531:
  8282  00D508  EF71  F06A         	goto	l4031
  8283  00D50C                     u3530:
  8284  00D50C                     l1402:
  8285  00D50C  B022               	btfsc	___xxtofl@exp^0,0,c
  8286  00D50E  EF8B  F06A         	goto	u3541
  8287  00D512  EF8D  F06A         	goto	u3540
  8288  00D516                     u3541:
  8289  00D516  EF8E  F06A         	goto	l4039
  8290  00D51A                     u3540:
  8291  00D51A  9E25               	bcf	(___xxtofl@arg+2)^0,7,c
  8292  00D51C                     l4039:
  8293  00D51C  90D8               	bcf	status,0,c
  8294  00D51E  3222               	rrcf	___xxtofl@exp^0,f,c
  8295  00D520  C022  F01D         	movff	___xxtofl@exp,??___xxtofl
  8296  00D524  6A1E               	clrf	(??___xxtofl+1)^0,c
  8297  00D526  6A1F               	clrf	(??___xxtofl+2)^0,c
  8298  00D528  6A20               	clrf	(??___xxtofl+3)^0,c
  8299  00D52A  C01D  F020         	movff	??___xxtofl,??___xxtofl+3
  8300  00D52E  6A1F               	clrf	(??___xxtofl+2)^0,c
  8301  00D530  6A1E               	clrf	(??___xxtofl+1)^0,c
  8302  00D532  6A1D               	clrf	??___xxtofl^0,c
  8303  00D534  501D               	movf	??___xxtofl^0,w,c
  8304  00D536  1223               	iorwf	___xxtofl@arg^0,f,c
  8305  00D538  501E               	movf	(??___xxtofl+1)^0,w,c
  8306  00D53A  1224               	iorwf	(___xxtofl@arg+1)^0,f,c
  8307  00D53C  501F               	movf	(??___xxtofl+2)^0,w,c
  8308  00D53E  1225               	iorwf	(___xxtofl@arg+2)^0,f,c
  8309  00D540  5020               	movf	(??___xxtofl+3)^0,w,c
  8310  00D542  1226               	iorwf	(___xxtofl@arg+3)^0,f,c
  8311  00D544  5021               	movf	___xxtofl@sign^0,w,c
  8312  00D546  B4D8               	btfsc	status,2,c
  8313  00D548  EFA8  F06A         	goto	u3551
  8314  00D54C  EFAA  F06A         	goto	u3550
  8315  00D550                     u3551:
  8316  00D550  EFB2  F06A         	goto	l4049
  8317  00D554                     u3550:
  8318  00D554  BE1C               	btfsc	(___xxtofl@val+3)^0,7,c
  8319  00D556  EFB1  F06A         	goto	u3560
  8320  00D55A  EFAF  F06A         	goto	u3561
  8321  00D55E                     u3561:
  8322  00D55E  EFB2  F06A         	goto	l4049
  8323  00D562                     u3560:
  8324  00D562  8E26               	bsf	(___xxtofl@arg+3)^0,7,c
  8325  00D564                     l4049:
  8326  00D564  C023  F019         	movff	___xxtofl@arg,?___xxtofl
  8327  00D568  C024  F01A         	movff	___xxtofl@arg+1,?___xxtofl+1
  8328  00D56C  C025  F01B         	movff	___xxtofl@arg+2,?___xxtofl+2
  8329  00D570  C026  F01C         	movff	___xxtofl@arg+3,?___xxtofl+3
  8330  00D574                     l1391:
  8331  00D574  0012               	return		;funcret
  8332  00D576                     __end_of___xxtofl:
  8333                           	callstack 0
  8334                           
  8335 ;; *************** function ___wmul *****************
  8336 ;; Defined at:
  8337 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\Umul16.c"
  8338 ;; Parameters:    Size  Location     Type
  8339 ;;  multiplier      2    0[COMRAM] unsigned int 
  8340 ;;  multiplicand    2    2[COMRAM] unsigned int 
  8341 ;; Auto vars:     Size  Location     Type
  8342 ;;  product         2    4[COMRAM] unsigned int 
  8343 ;; Return value:  Size  Location     Type
  8344 ;;                  2    0[COMRAM] unsigned int 
  8345 ;; Registers used:
  8346 ;;		wreg, status,2, status,0, prodl, prodh
  8347 ;; Tracked objects:
  8348 ;;		On entry : 0/0
  8349 ;;		On exit  : 0/0
  8350 ;;		Unchanged: 0/0
  8351 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8352 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8353 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8354 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8355 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8356 ;;Total ram usage:        6 bytes
  8357 ;; Hardware stack levels used:    1
  8358 ;; This function calls:
  8359 ;;		Nothing
  8360 ;; This function is called by:
  8361 ;;		_printf
  8362 ;; This function uses a non-reentrant model
  8363 ;;
  8364                           
  8365                           	psect	text24
  8366  00C0B0                     __ptext24:
  8367                           	callstack 0
  8368  00C0B0                     ___wmul:
  8369                           	callstack 29
  8370  00C0B0  5001               	movf	___wmul@multiplier^0,w,c
  8371  00C0B2  0203               	mulwf	___wmul@multiplicand^0,c
  8372  00C0B4  006F FFCC  F005    	movff	prodl,___wmul@product
  8373  00C0BA  006F FFD0  F006    	movff	prodh,___wmul@product+1
  8374  00C0C0  5001               	movf	___wmul@multiplier^0,w,c
  8375  00C0C2  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  8376  00C0C4  50F3               	movf	243,w,c
  8377  00C0C6  2606               	addwf	(___wmul@product+1)^0,f,c
  8378  00C0C8  5002               	movf	(___wmul@multiplier+1)^0,w,c
  8379  00C0CA  0203               	mulwf	___wmul@multiplicand^0,c
  8380  00C0CC  50F3               	movf	243,w,c
  8381  00C0CE  2606               	addwf	(___wmul@product+1)^0,f,c
  8382  00C0D0  C005  F001         	movff	___wmul@product,?___wmul
  8383  00C0D4  C006  F002         	movff	___wmul@product+1,?___wmul+1
  8384  00C0D8  0012               	return		;funcret
  8385  00C0DA                     __end_of___wmul:
  8386                           	callstack 0
  8387                           
  8388 ;; *************** function ___llmod *****************
  8389 ;; Defined at:
  8390 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\llmod.c"
  8391 ;; Parameters:    Size  Location     Type
  8392 ;;  dividend        4   13[COMRAM] unsigned long 
  8393 ;;  divisor         4   17[COMRAM] unsigned long 
  8394 ;; Auto vars:     Size  Location     Type
  8395 ;;  counter         1   21[COMRAM] unsigned char 
  8396 ;; Return value:  Size  Location     Type
  8397 ;;                  4   13[COMRAM] unsigned long 
  8398 ;; Registers used:
  8399 ;;		wreg, status,2, status,0
  8400 ;; Tracked objects:
  8401 ;;		On entry : 0/0
  8402 ;;		On exit  : 0/0
  8403 ;;		Unchanged: 0/0
  8404 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8405 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8406 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8407 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8408 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8409 ;;Total ram usage:        9 bytes
  8410 ;; Hardware stack levels used:    1
  8411 ;; This function calls:
  8412 ;;		Nothing
  8413 ;; This function is called by:
  8414 ;;		_printf
  8415 ;; This function uses a non-reentrant model
  8416 ;;
  8417                           
  8418                           	psect	text25
  8419  00C488                     __ptext25:
  8420                           	callstack 0
  8421  00C488                     ___llmod:
  8422                           	callstack 29
  8423  00C488  5012               	movf	___llmod@divisor^0,w,c
  8424  00C48A  1013               	iorwf	(___llmod@divisor+1)^0,w,c
  8425  00C48C  1014               	iorwf	(___llmod@divisor+2)^0,w,c
  8426  00C48E  1015               	iorwf	(___llmod@divisor+3)^0,w,c
  8427  00C490  B4D8               	btfsc	status,2,c
  8428  00C492  EF4D  F062         	goto	u4091
  8429  00C496  EF4F  F062         	goto	u4090
  8430  00C49A                     u4091:
  8431  00C49A  EF7F  F062         	goto	l1153
  8432  00C49E                     u4090:
  8433  00C49E  0E01               	movlw	1
  8434  00C4A0  6E16               	movwf	___llmod@counter^0,c
  8435  00C4A2  EF59  F062         	goto	l4439
  8436  00C4A6                     l4437:
  8437  00C4A6  90D8               	bcf	status,0,c
  8438  00C4A8  3612               	rlcf	___llmod@divisor^0,f,c
  8439  00C4AA  3613               	rlcf	(___llmod@divisor+1)^0,f,c
  8440  00C4AC  3614               	rlcf	(___llmod@divisor+2)^0,f,c
  8441  00C4AE  3615               	rlcf	(___llmod@divisor+3)^0,f,c
  8442  00C4B0  2A16               	incf	___llmod@counter^0,f,c
  8443  00C4B2                     l4439:
  8444  00C4B2  AE15               	btfss	(___llmod@divisor+3)^0,7,c
  8445  00C4B4  EF5E  F062         	goto	u4101
  8446  00C4B8  EF60  F062         	goto	u4100
  8447  00C4BC                     u4101:
  8448  00C4BC  EF53  F062         	goto	l4437
  8449  00C4C0                     u4100:
  8450  00C4C0                     l4441:
  8451  00C4C0  5012               	movf	___llmod@divisor^0,w,c
  8452  00C4C2  5C0E               	subwf	___llmod@dividend^0,w,c
  8453  00C4C4  5013               	movf	(___llmod@divisor+1)^0,w,c
  8454  00C4C6  580F               	subwfb	(___llmod@dividend+1)^0,w,c
  8455  00C4C8  5014               	movf	(___llmod@divisor+2)^0,w,c
  8456  00C4CA  5810               	subwfb	(___llmod@dividend+2)^0,w,c
  8457  00C4CC  5015               	movf	(___llmod@divisor+3)^0,w,c
  8458  00C4CE  5811               	subwfb	(___llmod@dividend+3)^0,w,c
  8459  00C4D0  A0D8               	btfss	status,0,c
  8460  00C4D2  EF6D  F062         	goto	u4111
  8461  00C4D6  EF6F  F062         	goto	u4110
  8462  00C4DA                     u4111:
  8463  00C4DA  EF77  F062         	goto	l4445
  8464  00C4DE                     u4110:
  8465  00C4DE  5012               	movf	___llmod@divisor^0,w,c
  8466  00C4E0  5E0E               	subwf	___llmod@dividend^0,f,c
  8467  00C4E2  5013               	movf	(___llmod@divisor+1)^0,w,c
  8468  00C4E4  5A0F               	subwfb	(___llmod@dividend+1)^0,f,c
  8469  00C4E6  5014               	movf	(___llmod@divisor+2)^0,w,c
  8470  00C4E8  5A10               	subwfb	(___llmod@dividend+2)^0,f,c
  8471  00C4EA  5015               	movf	(___llmod@divisor+3)^0,w,c
  8472  00C4EC  5A11               	subwfb	(___llmod@dividend+3)^0,f,c
  8473  00C4EE                     l4445:
  8474  00C4EE  90D8               	bcf	status,0,c
  8475  00C4F0  3215               	rrcf	(___llmod@divisor+3)^0,f,c
  8476  00C4F2  3214               	rrcf	(___llmod@divisor+2)^0,f,c
  8477  00C4F4  3213               	rrcf	(___llmod@divisor+1)^0,f,c
  8478  00C4F6  3212               	rrcf	___llmod@divisor^0,f,c
  8479  00C4F8  2E16               	decfsz	___llmod@counter^0,f,c
  8480  00C4FA  EF60  F062         	goto	l4441
  8481  00C4FE                     l1153:
  8482  00C4FE  C00E  F00E         	movff	___llmod@dividend,?___llmod
  8483  00C502  C00F  F00F         	movff	___llmod@dividend+1,?___llmod+1
  8484  00C506  C010  F010         	movff	___llmod@dividend+2,?___llmod+2
  8485  00C50A  C011  F011         	movff	___llmod@dividend+3,?___llmod+3
  8486  00C50E  0012               	return		;funcret
  8487  00C510                     __end_of___llmod:
  8488                           	callstack 0
  8489                           
  8490 ;; *************** function ___lldiv *****************
  8491 ;; Defined at:
  8492 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\__lldiv.c"
  8493 ;; Parameters:    Size  Location     Type
  8494 ;;  dividend        4    0[COMRAM] unsigned long 
  8495 ;;  divisor         4    4[COMRAM] unsigned long 
  8496 ;; Auto vars:     Size  Location     Type
  8497 ;;  quotient        4    8[COMRAM] unsigned long 
  8498 ;;  counter         1   12[COMRAM] unsigned char 
  8499 ;; Return value:  Size  Location     Type
  8500 ;;                  4    0[COMRAM] unsigned long 
  8501 ;; Registers used:
  8502 ;;		wreg, status,2, status,0
  8503 ;; Tracked objects:
  8504 ;;		On entry : 0/0
  8505 ;;		On exit  : 0/0
  8506 ;;		Unchanged: 0/0
  8507 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8508 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8509 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8510 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8511 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8512 ;;Total ram usage:       13 bytes
  8513 ;; Hardware stack levels used:    1
  8514 ;; This function calls:
  8515 ;;		Nothing
  8516 ;; This function is called by:
  8517 ;;		_printf
  8518 ;; This function uses a non-reentrant model
  8519 ;;
  8520                           
  8521                           	psect	text26
  8522  00C5A0                     __ptext26:
  8523                           	callstack 0
  8524  00C5A0                     ___lldiv:
  8525                           	callstack 29
  8526  00C5A0  0E00               	movlw	0
  8527  00C5A2  6E09               	movwf	___lldiv@quotient^0,c
  8528  00C5A4  0E00               	movlw	0
  8529  00C5A6  6E0A               	movwf	(___lldiv@quotient+1)^0,c
  8530  00C5A8  0E00               	movlw	0
  8531  00C5AA  6E0B               	movwf	(___lldiv@quotient+2)^0,c
  8532  00C5AC  0E00               	movlw	0
  8533  00C5AE  6E0C               	movwf	(___lldiv@quotient+3)^0,c
  8534  00C5B0  5005               	movf	___lldiv@divisor^0,w,c
  8535  00C5B2  1006               	iorwf	(___lldiv@divisor+1)^0,w,c
  8536  00C5B4  1007               	iorwf	(___lldiv@divisor+2)^0,w,c
  8537  00C5B6  1008               	iorwf	(___lldiv@divisor+3)^0,w,c
  8538  00C5B8  B4D8               	btfsc	status,2,c
  8539  00C5BA  EFE1  F062         	goto	u3821
  8540  00C5BE  EFE3  F062         	goto	u3820
  8541  00C5C2                     u3821:
  8542  00C5C2  EF19  F063         	goto	l738
  8543  00C5C6                     u3820:
  8544  00C5C6  0E01               	movlw	1
  8545  00C5C8  6E0D               	movwf	___lldiv@counter^0,c
  8546  00C5CA  EFED  F062         	goto	l4267
  8547  00C5CE                     l4265:
  8548  00C5CE  90D8               	bcf	status,0,c
  8549  00C5D0  3605               	rlcf	___lldiv@divisor^0,f,c
  8550  00C5D2  3606               	rlcf	(___lldiv@divisor+1)^0,f,c
  8551  00C5D4  3607               	rlcf	(___lldiv@divisor+2)^0,f,c
  8552  00C5D6  3608               	rlcf	(___lldiv@divisor+3)^0,f,c
  8553  00C5D8  2A0D               	incf	___lldiv@counter^0,f,c
  8554  00C5DA                     l4267:
  8555  00C5DA  AE08               	btfss	(___lldiv@divisor+3)^0,7,c
  8556  00C5DC  EFF2  F062         	goto	u3831
  8557  00C5E0  EFF4  F062         	goto	u3830
  8558  00C5E4                     u3831:
  8559  00C5E4  EFE7  F062         	goto	l4265
  8560  00C5E8                     u3830:
  8561  00C5E8                     l4269:
  8562  00C5E8  90D8               	bcf	status,0,c
  8563  00C5EA  3609               	rlcf	___lldiv@quotient^0,f,c
  8564  00C5EC  360A               	rlcf	(___lldiv@quotient+1)^0,f,c
  8565  00C5EE  360B               	rlcf	(___lldiv@quotient+2)^0,f,c
  8566  00C5F0  360C               	rlcf	(___lldiv@quotient+3)^0,f,c
  8567  00C5F2  5005               	movf	___lldiv@divisor^0,w,c
  8568  00C5F4  5C01               	subwf	___lldiv@dividend^0,w,c
  8569  00C5F6  5006               	movf	(___lldiv@divisor+1)^0,w,c
  8570  00C5F8  5802               	subwfb	(___lldiv@dividend+1)^0,w,c
  8571  00C5FA  5007               	movf	(___lldiv@divisor+2)^0,w,c
  8572  00C5FC  5803               	subwfb	(___lldiv@dividend+2)^0,w,c
  8573  00C5FE  5008               	movf	(___lldiv@divisor+3)^0,w,c
  8574  00C600  5804               	subwfb	(___lldiv@dividend+3)^0,w,c
  8575  00C602  A0D8               	btfss	status,0,c
  8576  00C604  EF06  F063         	goto	u3841
  8577  00C608  EF08  F063         	goto	u3840
  8578  00C60C                     u3841:
  8579  00C60C  EF11  F063         	goto	l4277
  8580  00C610                     u3840:
  8581  00C610  5005               	movf	___lldiv@divisor^0,w,c
  8582  00C612  5E01               	subwf	___lldiv@dividend^0,f,c
  8583  00C614  5006               	movf	(___lldiv@divisor+1)^0,w,c
  8584  00C616  5A02               	subwfb	(___lldiv@dividend+1)^0,f,c
  8585  00C618  5007               	movf	(___lldiv@divisor+2)^0,w,c
  8586  00C61A  5A03               	subwfb	(___lldiv@dividend+2)^0,f,c
  8587  00C61C  5008               	movf	(___lldiv@divisor+3)^0,w,c
  8588  00C61E  5A04               	subwfb	(___lldiv@dividend+3)^0,f,c
  8589  00C620  8009               	bsf	___lldiv@quotient^0,0,c
  8590  00C622                     l4277:
  8591  00C622  90D8               	bcf	status,0,c
  8592  00C624  3208               	rrcf	(___lldiv@divisor+3)^0,f,c
  8593  00C626  3207               	rrcf	(___lldiv@divisor+2)^0,f,c
  8594  00C628  3206               	rrcf	(___lldiv@divisor+1)^0,f,c
  8595  00C62A  3205               	rrcf	___lldiv@divisor^0,f,c
  8596  00C62C  2E0D               	decfsz	___lldiv@counter^0,f,c
  8597  00C62E  EFF4  F062         	goto	l4269
  8598  00C632                     l738:
  8599  00C632  C009  F001         	movff	___lldiv@quotient,?___lldiv
  8600  00C636  C00A  F002         	movff	___lldiv@quotient+1,?___lldiv+1
  8601  00C63A  C00B  F003         	movff	___lldiv@quotient+2,?___lldiv+2
  8602  00C63E  C00C  F004         	movff	___lldiv@quotient+3,?___lldiv+3
  8603  00C642  0012               	return		;funcret
  8604  00C644                     __end_of___lldiv:
  8605                           	callstack 0
  8606                           
  8607 ;; *************** function ___fltol *****************
  8608 ;; Defined at:
  8609 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\fltol.c"
  8610 ;; Parameters:    Size  Location     Type
  8611 ;;  f1              4   14[COMRAM] unsigned long 
  8612 ;; Auto vars:     Size  Location     Type
  8613 ;;  exp1            1   23[COMRAM] unsigned char 
  8614 ;;  sign1           1   22[COMRAM] unsigned char 
  8615 ;; Return value:  Size  Location     Type
  8616 ;;                  4   14[COMRAM] long 
  8617 ;; Registers used:
  8618 ;;		wreg, status,2, status,0
  8619 ;; Tracked objects:
  8620 ;;		On entry : 0/0
  8621 ;;		On exit  : 0/0
  8622 ;;		Unchanged: 0/0
  8623 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8624 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8625 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8626 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8627 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8628 ;;Total ram usage:       10 bytes
  8629 ;; Hardware stack levels used:    1
  8630 ;; This function calls:
  8631 ;;		Nothing
  8632 ;; This function is called by:
  8633 ;;		_printf
  8634 ;;		_pow
  8635 ;;		_exp
  8636 ;;		_floor
  8637 ;; This function uses a non-reentrant model
  8638 ;;
  8639                           
  8640                           	psect	text27
  8641  00CAE6                     __ptext27:
  8642                           	callstack 0
  8643  00CAE6                     ___fltol:
  8644                           	callstack 29
  8645  00CAE6  3411               	rlcf	(___fltol@f1+2)^0,w,c
  8646  00CAE8  3412               	rlcf	(___fltol@f1+3)^0,w,c
  8647  00CAEA  6E18               	movwf	___fltol@exp1^0,c
  8648  00CAEC  5018               	movf	___fltol@exp1^0,w,c
  8649  00CAEE  A4D8               	btfss	status,2,c
  8650  00CAF0  EF7C  F065         	goto	u3341
  8651  00CAF4  EF7E  F065         	goto	u3340
  8652  00CAF8                     u3341:
  8653  00CAF8  EF88  F065         	goto	l3931
  8654  00CAFC                     u3340:
  8655  00CAFC                     l3927:
  8656  00CAFC  0E00               	movlw	0
  8657  00CAFE  6E0F               	movwf	?___fltol^0,c
  8658  00CB00  0E00               	movlw	0
  8659  00CB02  6E10               	movwf	(?___fltol+1)^0,c
  8660  00CB04  0E00               	movlw	0
  8661  00CB06  6E11               	movwf	(?___fltol+2)^0,c
  8662  00CB08  0E00               	movlw	0
  8663  00CB0A  6E12               	movwf	(?___fltol+3)^0,c
  8664  00CB0C  EFF5  F065         	goto	l1017
  8665  00CB10                     l3931:
  8666  00CB10  C00F  F013         	movff	___fltol@f1,??___fltol
  8667  00CB14  C010  F014         	movff	___fltol@f1+1,??___fltol+1
  8668  00CB18  C011  F015         	movff	___fltol@f1+2,??___fltol+2
  8669  00CB1C  C012  F016         	movff	___fltol@f1+3,??___fltol+3
  8670  00CB20  0E20               	movlw	32
  8671  00CB22  EF98  F065         	goto	u3350
  8672  00CB26                     u3355:
  8673  00CB26  90D8               	bcf	status,0,c
  8674  00CB28  3216               	rrcf	(??___fltol+3)^0,f,c
  8675  00CB2A  3215               	rrcf	(??___fltol+2)^0,f,c
  8676  00CB2C  3214               	rrcf	(??___fltol+1)^0,f,c
  8677  00CB2E  3213               	rrcf	??___fltol^0,f,c
  8678  00CB30                     u3350:
  8679  00CB30  2EE8               	decfsz	wreg,f,c
  8680  00CB32  EF93  F065         	goto	u3355
  8681  00CB36  5013               	movf	??___fltol^0,w,c
  8682  00CB38  6E17               	movwf	___fltol@sign1^0,c
  8683  00CB3A  8E11               	bsf	(___fltol@f1+2)^0,7,c
  8684  00CB3C  0EFF               	movlw	255
  8685  00CB3E  160F               	andwf	___fltol@f1^0,f,c
  8686  00CB40  0EFF               	movlw	255
  8687  00CB42  1610               	andwf	(___fltol@f1+1)^0,f,c
  8688  00CB44  0EFF               	movlw	255
  8689  00CB46  1611               	andwf	(___fltol@f1+2)^0,f,c
  8690  00CB48  0E00               	movlw	0
  8691  00CB4A  1612               	andwf	(___fltol@f1+3)^0,f,c
  8692  00CB4C  0E96               	movlw	150
  8693  00CB4E  5E18               	subwf	___fltol@exp1^0,f,c
  8694  00CB50  BE18               	btfsc	___fltol@exp1^0,7,c
  8695  00CB52  EFAF  F065         	goto	u3360
  8696  00CB56  EFAD  F065         	goto	u3361
  8697  00CB5A                     u3361:
  8698  00CB5A  EFC5  F065         	goto	l3951
  8699  00CB5E                     u3360:
  8700  00CB5E  5018               	movf	___fltol@exp1^0,w,c
  8701  00CB60  0A80               	xorlw	128
  8702  00CB62  0F97               	addlw	151
  8703  00CB64  B0D8               	btfsc	status,0,c
  8704  00CB66  EFB7  F065         	goto	u3371
  8705  00CB6A  EFB9  F065         	goto	u3370
  8706  00CB6E                     u3371:
  8707  00CB6E  EFBB  F065         	goto	l3947
  8708  00CB72                     u3370:
  8709  00CB72  EF7E  F065         	goto	l3927
  8710  00CB76                     l3947:
  8711  00CB76  90D8               	bcf	status,0,c
  8712  00CB78  3212               	rrcf	(___fltol@f1+3)^0,f,c
  8713  00CB7A  3211               	rrcf	(___fltol@f1+2)^0,f,c
  8714  00CB7C  3210               	rrcf	(___fltol@f1+1)^0,f,c
  8715  00CB7E  320F               	rrcf	___fltol@f1^0,f,c
  8716  00CB80  3E18               	incfsz	___fltol@exp1^0,f,c
  8717  00CB82  EFBB  F065         	goto	l3947
  8718  00CB86  EFDD  F065         	goto	l3961
  8719  00CB8A                     l3951:
  8720  00CB8A  0E1F               	movlw	31
  8721  00CB8C  6418               	cpfsgt	___fltol@exp1^0,c
  8722  00CB8E  EFCB  F065         	goto	u3381
  8723  00CB92  EFCD  F065         	goto	u3380
  8724  00CB96                     u3381:
  8725  00CB96  EFD5  F065         	goto	l3959
  8726  00CB9A                     u3380:
  8727  00CB9A  EF7E  F065         	goto	l3927
  8728  00CB9E                     l3957:
  8729  00CB9E  90D8               	bcf	status,0,c
  8730  00CBA0  360F               	rlcf	___fltol@f1^0,f,c
  8731  00CBA2  3610               	rlcf	(___fltol@f1+1)^0,f,c
  8732  00CBA4  3611               	rlcf	(___fltol@f1+2)^0,f,c
  8733  00CBA6  3612               	rlcf	(___fltol@f1+3)^0,f,c
  8734  00CBA8  0618               	decf	___fltol@exp1^0,f,c
  8735  00CBAA                     l3959:
  8736  00CBAA  5018               	movf	___fltol@exp1^0,w,c
  8737  00CBAC  A4D8               	btfss	status,2,c
  8738  00CBAE  EFDB  F065         	goto	u3391
  8739  00CBB2  EFDD  F065         	goto	u3390
  8740  00CBB6                     u3391:
  8741  00CBB6  EFCF  F065         	goto	l3957
  8742  00CBBA                     u3390:
  8743  00CBBA                     l3961:
  8744  00CBBA  5017               	movf	___fltol@sign1^0,w,c
  8745  00CBBC  B4D8               	btfsc	status,2,c
  8746  00CBBE  EFE3  F065         	goto	u3401
  8747  00CBC2  EFE5  F065         	goto	u3400
  8748  00CBC6                     u3401:
  8749  00CBC6  EFED  F065         	goto	l3965
  8750  00CBCA                     u3400:
  8751  00CBCA  1E12               	comf	(___fltol@f1+3)^0,f,c
  8752  00CBCC  1E11               	comf	(___fltol@f1+2)^0,f,c
  8753  00CBCE  1E10               	comf	(___fltol@f1+1)^0,f,c
  8754  00CBD0  6C0F               	negf	___fltol@f1^0,c
  8755  00CBD2  0E00               	movlw	0
  8756  00CBD4  2210               	addwfc	(___fltol@f1+1)^0,f,c
  8757  00CBD6  2211               	addwfc	(___fltol@f1+2)^0,f,c
  8758  00CBD8  2212               	addwfc	(___fltol@f1+3)^0,f,c
  8759  00CBDA                     l3965:
  8760  00CBDA  C00F  F00F         	movff	___fltol@f1,?___fltol
  8761  00CBDE  C010  F010         	movff	___fltol@f1+1,?___fltol+1
  8762  00CBE2  C011  F011         	movff	___fltol@f1+2,?___fltol+2
  8763  00CBE6  C012  F012         	movff	___fltol@f1+3,?___fltol+3
  8764  00CBEA                     l1017:
  8765  00CBEA  0012               	return		;funcret
  8766  00CBEC                     __end_of___fltol:
  8767                           	callstack 0
  8768                           
  8769 ;; *************** function ___flsub *****************
  8770 ;; Defined at:
  8771 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\sprcadd.c"
  8772 ;; Parameters:    Size  Location     Type
  8773 ;;  b               4   86[COMRAM] long 
  8774 ;;  a               4   90[COMRAM] long 
  8775 ;; Auto vars:     Size  Location     Type
  8776 ;;		None
  8777 ;; Return value:  Size  Location     Type
  8778 ;;                  4   86[COMRAM] long 
  8779 ;; Registers used:
  8780 ;;		wreg, status,2, status,0, cstack
  8781 ;; Tracked objects:
  8782 ;;		On entry : 0/0
  8783 ;;		On exit  : 0/0
  8784 ;;		Unchanged: 0/0
  8785 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8786 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8787 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8788 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8789 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8790 ;;Total ram usage:        8 bytes
  8791 ;; Hardware stack levels used:    1
  8792 ;; Hardware stack levels required when called:    1
  8793 ;; This function calls:
  8794 ;;		___fladd
  8795 ;; This function is called by:
  8796 ;;		_main
  8797 ;;		_printf
  8798 ;;		_exp
  8799 ;; This function uses a non-reentrant model
  8800 ;;
  8801                           
  8802                           	psect	text28
  8803  00C20C                     __ptext28:
  8804                           	callstack 0
  8805  00C20C                     ___flsub:
  8806                           	callstack 28
  8807  00C20C  0E00               	movlw	0
  8808  00C20E  1A5B               	xorwf	___flsub@a^0,f,c
  8809  00C210  0E00               	movlw	0
  8810  00C212  1A5C               	xorwf	(___flsub@a+1)^0,f,c
  8811  00C214  0E00               	movlw	0
  8812  00C216  1A5D               	xorwf	(___flsub@a+2)^0,f,c
  8813  00C218  0E80               	movlw	128
  8814  00C21A  1A5E               	xorwf	(___flsub@a+3)^0,f,c
  8815  00C21C  C057  F03B         	movff	___flsub@b,___fladd@b
  8816  00C220  C058  F03C         	movff	___flsub@b+1,___fladd@b+1
  8817  00C224  C059  F03D         	movff	___flsub@b+2,___fladd@b+2
  8818  00C228  C05A  F03E         	movff	___flsub@b+3,___fladd@b+3
  8819  00C22C  C05B  F03F         	movff	___flsub@a,___fladd@a
  8820  00C230  C05C  F040         	movff	___flsub@a+1,___fladd@a+1
  8821  00C234  C05D  F041         	movff	___flsub@a+2,___fladd@a+2
  8822  00C238  C05E  F042         	movff	___flsub@a+3,___fladd@a+3
  8823  00C23C  EC2C  F075         	call	___fladd	;wreg free
  8824  00C240  C03B  F057         	movff	?___fladd,?___flsub
  8825  00C244  C03C  F058         	movff	?___fladd+1,?___flsub+1
  8826  00C248  C03D  F059         	movff	?___fladd+2,?___flsub+2
  8827  00C24C  C03E  F05A         	movff	?___fladd+3,?___flsub+3
  8828  00C250  0012               	return		;funcret
  8829  00C252                     __end_of___flsub:
  8830                           	callstack 0
  8831                           
  8832 ;; *************** function ___fladd *****************
  8833 ;; Defined at:
  8834 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\sprcadd.c"
  8835 ;; Parameters:    Size  Location     Type
  8836 ;;  b               4   58[COMRAM] long 
  8837 ;;  a               4   62[COMRAM] long 
  8838 ;; Auto vars:     Size  Location     Type
  8839 ;;  grs             1   73[COMRAM] unsigned char 
  8840 ;;  bexp            1   72[COMRAM] unsigned char 
  8841 ;;  aexp            1   71[COMRAM] unsigned char 
  8842 ;;  signs           1   70[COMRAM] unsigned char 
  8843 ;; Return value:  Size  Location     Type
  8844 ;;                  4   58[COMRAM] unsigned char 
  8845 ;; Registers used:
  8846 ;;		wreg, status,2, status,0
  8847 ;; Tracked objects:
  8848 ;;		On entry : 0/0
  8849 ;;		On exit  : 0/0
  8850 ;;		Unchanged: 0/0
  8851 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8852 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8853 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8854 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8855 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8856 ;;Total ram usage:       16 bytes
  8857 ;; Hardware stack levels used:    1
  8858 ;; This function calls:
  8859 ;;		Nothing
  8860 ;; This function is called by:
  8861 ;;		_main
  8862 ;;		_printf
  8863 ;;		___flsub
  8864 ;;		_eval_poly
  8865 ;;		_floor
  8866 ;;		_log
  8867 ;; This function uses a non-reentrant model
  8868 ;;
  8869                           
  8870                           	psect	text29
  8871  00EA58                     __ptext29:
  8872                           	callstack 0
  8873  00EA58                     ___fladd:
  8874                           	callstack 28
  8875  00EA58  503E               	movf	(___fladd@b+3)^0,w,c
  8876  00EA5A  0B80               	andlw	128
  8877  00EA5C  6E47               	movwf	___fladd@signs^0,c
  8878  00EA5E  503E               	movf	(___fladd@b+3)^0,w,c
  8879  00EA60  243E               	addwf	(___fladd@b+3)^0,w,c
  8880  00EA62  6E49               	movwf	___fladd@bexp^0,c
  8881  00EA64  AE3D               	btfss	(___fladd@b+2)^0,7,c
  8882  00EA66  EF37  F075         	goto	u2591
  8883  00EA6A  EF39  F075         	goto	u2590
  8884  00EA6E                     u2591:
  8885  00EA6E  EF3A  F075         	goto	l3497
  8886  00EA72                     u2590:
  8887  00EA72  8049               	bsf	___fladd@bexp^0,0,c
  8888  00EA74                     l3497:
  8889  00EA74  5049               	movf	___fladd@bexp^0,w,c
  8890  00EA76  B4D8               	btfsc	status,2,c
  8891  00EA78  EF40  F075         	goto	u2601
  8892  00EA7C  EF42  F075         	goto	u2600
  8893  00EA80                     u2601:
  8894  00EA80  EF57  F075         	goto	l3507
  8895  00EA84                     u2600:
  8896  00EA84  2849               	incf	___fladd@bexp^0,w,c
  8897  00EA86  A4D8               	btfss	status,2,c
  8898  00EA88  EF48  F075         	goto	u2611
  8899  00EA8C  EF4A  F075         	goto	u2610
  8900  00EA90                     u2611:
  8901  00EA90  EF52  F075         	goto	l3503
  8902  00EA94                     u2610:
  8903  00EA94  0E00               	movlw	0
  8904  00EA96  6E3B               	movwf	___fladd@b^0,c
  8905  00EA98  0E00               	movlw	0
  8906  00EA9A  6E3C               	movwf	(___fladd@b+1)^0,c
  8907  00EA9C  0E00               	movlw	0
  8908  00EA9E  6E3D               	movwf	(___fladd@b+2)^0,c
  8909  00EAA0  0E00               	movlw	0
  8910  00EAA2  6E3E               	movwf	(___fladd@b+3)^0,c
  8911  00EAA4                     l3503:
  8912  00EAA4  8E3D               	bsf	(___fladd@b+2)^0,7,c
  8913  00EAA6  0E00               	movlw	0
  8914  00EAA8  6E3E               	movwf	(___fladd@b+3)^0,c
  8915  00EAAA  EF5F  F075         	goto	l3509
  8916  00EAAE                     l3507:
  8917  00EAAE  0E00               	movlw	0
  8918  00EAB0  6E3B               	movwf	___fladd@b^0,c
  8919  00EAB2  0E00               	movlw	0
  8920  00EAB4  6E3C               	movwf	(___fladd@b+1)^0,c
  8921  00EAB6  0E00               	movlw	0
  8922  00EAB8  6E3D               	movwf	(___fladd@b+2)^0,c
  8923  00EABA  0E00               	movlw	0
  8924  00EABC  6E3E               	movwf	(___fladd@b+3)^0,c
  8925  00EABE                     l3509:
  8926  00EABE  5042               	movf	(___fladd@a+3)^0,w,c
  8927  00EAC0  0B80               	andlw	128
  8928  00EAC2  6E48               	movwf	___fladd@aexp^0,c
  8929  00EAC4  5047               	movf	___fladd@signs^0,w,c
  8930  00EAC6  1848               	xorwf	___fladd@aexp^0,w,c
  8931  00EAC8  B4D8               	btfsc	status,2,c
  8932  00EACA  EF69  F075         	goto	u2621
  8933  00EACE  EF6B  F075         	goto	u2620
  8934  00EAD2                     u2621:
  8935  00EAD2  EF6C  F075         	goto	l3515
  8936  00EAD6                     u2620:
  8937  00EAD6  8C47               	bsf	___fladd@signs^0,6,c
  8938  00EAD8                     l3515:
  8939  00EAD8  5042               	movf	(___fladd@a+3)^0,w,c
  8940  00EADA  2442               	addwf	(___fladd@a+3)^0,w,c
  8941  00EADC  6E48               	movwf	___fladd@aexp^0,c
  8942  00EADE  AE41               	btfss	(___fladd@a+2)^0,7,c
  8943  00EAE0  EF74  F075         	goto	u2631
  8944  00EAE4  EF76  F075         	goto	u2630
  8945  00EAE8                     u2631:
  8946  00EAE8  EF77  F075         	goto	l3521
  8947  00EAEC                     u2630:
  8948  00EAEC  8048               	bsf	___fladd@aexp^0,0,c
  8949  00EAEE                     l3521:
  8950  00EAEE  5048               	movf	___fladd@aexp^0,w,c
  8951  00EAF0  B4D8               	btfsc	status,2,c
  8952  00EAF2  EF7D  F075         	goto	u2641
  8953  00EAF6  EF7F  F075         	goto	u2640
  8954  00EAFA                     u2641:
  8955  00EAFA  EF94  F075         	goto	l3531
  8956  00EAFE                     u2640:
  8957  00EAFE  2848               	incf	___fladd@aexp^0,w,c
  8958  00EB00  A4D8               	btfss	status,2,c
  8959  00EB02  EF85  F075         	goto	u2651
  8960  00EB06  EF87  F075         	goto	u2650
  8961  00EB0A                     u2651:
  8962  00EB0A  EF8F  F075         	goto	l3527
  8963  00EB0E                     u2650:
  8964  00EB0E  0E00               	movlw	0
  8965  00EB10  6E3F               	movwf	___fladd@a^0,c
  8966  00EB12  0E00               	movlw	0
  8967  00EB14  6E40               	movwf	(___fladd@a+1)^0,c
  8968  00EB16  0E00               	movlw	0
  8969  00EB18  6E41               	movwf	(___fladd@a+2)^0,c
  8970  00EB1A  0E00               	movlw	0
  8971  00EB1C  6E42               	movwf	(___fladd@a+3)^0,c
  8972  00EB1E                     l3527:
  8973  00EB1E  8E41               	bsf	(___fladd@a+2)^0,7,c
  8974  00EB20  0E00               	movlw	0
  8975  00EB22  6E42               	movwf	(___fladd@a+3)^0,c
  8976  00EB24  EF9C  F075         	goto	l3533
  8977  00EB28                     l3531:
  8978  00EB28  0E00               	movlw	0
  8979  00EB2A  6E3F               	movwf	___fladd@a^0,c
  8980  00EB2C  0E00               	movlw	0
  8981  00EB2E  6E40               	movwf	(___fladd@a+1)^0,c
  8982  00EB30  0E00               	movlw	0
  8983  00EB32  6E41               	movwf	(___fladd@a+2)^0,c
  8984  00EB34  0E00               	movlw	0
  8985  00EB36  6E42               	movwf	(___fladd@a+3)^0,c
  8986  00EB38                     l3533:
  8987  00EB38  5049               	movf	___fladd@bexp^0,w,c
  8988  00EB3A  5C48               	subwf	___fladd@aexp^0,w,c
  8989  00EB3C  B0D8               	btfsc	status,0,c
  8990  00EB3E  EFA3  F075         	goto	u2661
  8991  00EB42  EFA5  F075         	goto	u2660
  8992  00EB46                     u2661:
  8993  00EB46  EFCC  F075         	goto	l3569
  8994  00EB4A                     u2660:
  8995  00EB4A  AC47               	btfss	___fladd@signs^0,6,c
  8996  00EB4C  EFAA  F075         	goto	u2671
  8997  00EB50  EFAC  F075         	goto	u2670
  8998  00EB54                     u2671:
  8999  00EB54  EFAE  F075         	goto	l3539
  9000  00EB58                     u2670:
  9001  00EB58  0E80               	movlw	128
  9002  00EB5A  1A47               	xorwf	___fladd@signs^0,f,c
  9003  00EB5C                     l3539:
  9004  00EB5C  C049  F04A         	movff	___fladd@bexp,___fladd@grs
  9005  00EB60  C048  F049         	movff	___fladd@aexp,___fladd@bexp
  9006  00EB64  C04A  F048         	movff	___fladd@grs,___fladd@aexp
  9007  00EB68  C03B  F04A         	movff	___fladd@b,___fladd@grs
  9008  00EB6C  C03F  F03B         	movff	___fladd@a,___fladd@b
  9009  00EB70  C04A  F03F         	movff	___fladd@grs,___fladd@a
  9010  00EB74  C03C  F04A         	movff	___fladd@b+1,___fladd@grs
  9011  00EB78  C040  F03C         	movff	___fladd@a+1,___fladd@b+1
  9012  00EB7C  C04A  F040         	movff	___fladd@grs,___fladd@a+1
  9013  00EB80  C03D  F04A         	movff	___fladd@b+2,___fladd@grs
  9014  00EB84  C041  F03D         	movff	___fladd@a+2,___fladd@b+2
  9015  00EB88  C04A  F041         	movff	___fladd@grs,___fladd@a+2
  9016  00EB8C  C03E  F04A         	movff	___fladd@b+3,___fladd@grs
  9017  00EB90  C042  F03E         	movff	___fladd@a+3,___fladd@b+3
  9018  00EB94  C04A  F042         	movff	___fladd@grs,___fladd@a+3
  9019  00EB98                     l3569:
  9020  00EB98  0E00               	movlw	0
  9021  00EB9A  6E4A               	movwf	___fladd@grs^0,c
  9022  00EB9C  5049               	movf	___fladd@bexp^0,w,c
  9023  00EB9E  C048  F043         	movff	___fladd@aexp,??___fladd
  9024  00EBA2  6A44               	clrf	(??___fladd+1)^0,c
  9025  00EBA4  5E43               	subwf	??___fladd^0,f,c
  9026  00EBA6  0E00               	movlw	0
  9027  00EBA8  5A44               	subwfb	(??___fladd+1)^0,f,c
  9028  00EBAA  BE44               	btfsc	(??___fladd+1)^0,7,c
  9029  00EBAC  EFE1  F075         	goto	u2681
  9030  00EBB0  5044               	movf	(??___fladd+1)^0,w,c
  9031  00EBB2  E109               	bnz	u2680
  9032  00EBB4  0E1A               	movlw	26
  9033  00EBB6  5C43               	subwf	??___fladd^0,w,c
  9034  00EBB8  A0D8               	btfss	status,0,c
  9035  00EBBA  EFE1  F075         	goto	u2681
  9036  00EBBE  EFE3  F075         	goto	u2680
  9037  00EBC2                     u2681:
  9038  00EBC2  EF1A  F076         	goto	l1262
  9039  00EBC6                     u2680:
  9040  00EBC6  503B               	movf	___fladd@b^0,w,c
  9041  00EBC8  103C               	iorwf	(___fladd@b+1)^0,w,c
  9042  00EBCA  103D               	iorwf	(___fladd@b+2)^0,w,c
  9043  00EBCC  103E               	iorwf	(___fladd@b+3)^0,w,c
  9044  00EBCE  A4D8               	btfss	status,2,c
  9045  00EBD0  EFEC  F075         	goto	u2691
  9046  00EBD4  EFEF  F075         	goto	u2690
  9047  00EBD8                     u2691:
  9048  00EBD8  0E01               	movlw	1
  9049  00EBDA  EFF0  F075         	goto	u2700
  9050  00EBDE                     u2690:
  9051  00EBDE  0E00               	movlw	0
  9052  00EBE0                     u2700:
  9053  00EBE0  6E4A               	movwf	___fladd@grs^0,c
  9054  00EBE2  0E00               	movlw	0
  9055  00EBE4  6E3B               	movwf	___fladd@b^0,c
  9056  00EBE6  0E00               	movlw	0
  9057  00EBE8  6E3C               	movwf	(___fladd@b+1)^0,c
  9058  00EBEA  0E00               	movlw	0
  9059  00EBEC  6E3D               	movwf	(___fladd@b+2)^0,c
  9060  00EBEE  0E00               	movlw	0
  9061  00EBF0  6E3E               	movwf	(___fladd@b+3)^0,c
  9062  00EBF2  C048  F049         	movff	___fladd@aexp,___fladd@bexp
  9063  00EBF6  EF23  F076         	goto	l1261
  9064  00EBFA                     l1263:
  9065  00EBFA  A04A               	btfss	___fladd@grs^0,0,c
  9066  00EBFC  EF02  F076         	goto	u2711
  9067  00EC00  EF04  F076         	goto	u2710
  9068  00EC04                     u2711:
  9069  00EC04  EF0A  F076         	goto	l3581
  9070  00EC08                     u2710:
  9071  00EC08  90D8               	bcf	status,0,c
  9072  00EC0A  304A               	rrcf	___fladd@grs^0,w,c
  9073  00EC0C  0901               	iorlw	1
  9074  00EC0E  6E4A               	movwf	___fladd@grs^0,c
  9075  00EC10  EF0C  F076         	goto	l3583
  9076  00EC14                     l3581:
  9077  00EC14  90D8               	bcf	status,0,c
  9078  00EC16  324A               	rrcf	___fladd@grs^0,f,c
  9079  00EC18                     l3583:
  9080  00EC18  A03B               	btfss	___fladd@b^0,0,c
  9081  00EC1A  EF11  F076         	goto	u2721
  9082  00EC1E  EF13  F076         	goto	u2720
  9083  00EC22                     u2721:
  9084  00EC22  EF14  F076         	goto	l3587
  9085  00EC26                     u2720:
  9086  00EC26  8E4A               	bsf	___fladd@grs^0,7,c
  9087  00EC28                     l3587:
  9088  00EC28  343E               	rlcf	(___fladd@b+3)^0,w,c
  9089  00EC2A  323E               	rrcf	(___fladd@b+3)^0,f,c
  9090  00EC2C  323D               	rrcf	(___fladd@b+2)^0,f,c
  9091  00EC2E  323C               	rrcf	(___fladd@b+1)^0,f,c
  9092  00EC30  323B               	rrcf	___fladd@b^0,f,c
  9093  00EC32  2A49               	incf	___fladd@bexp^0,f,c
  9094  00EC34                     l1262:
  9095  00EC34  5048               	movf	___fladd@aexp^0,w,c
  9096  00EC36  5C49               	subwf	___fladd@bexp^0,w,c
  9097  00EC38  A0D8               	btfss	status,0,c
  9098  00EC3A  EF21  F076         	goto	u2731
  9099  00EC3E  EF23  F076         	goto	u2730
  9100  00EC42                     u2731:
  9101  00EC42  EFFD  F075         	goto	l1263
  9102  00EC46                     u2730:
  9103  00EC46                     l1261:
  9104  00EC46  BC47               	btfsc	___fladd@signs^0,6,c
  9105  00EC48  EF28  F076         	goto	u2741
  9106  00EC4C  EF2A  F076         	goto	u2740
  9107  00EC50                     u2741:
  9108  00EC50  EF6A  F076         	goto	l3615
  9109  00EC54                     u2740:
  9110  00EC54  5049               	movf	___fladd@bexp^0,w,c
  9111  00EC56  A4D8               	btfss	status,2,c
  9112  00EC58  EF30  F076         	goto	u2751
  9113  00EC5C  EF32  F076         	goto	u2750
  9114  00EC60                     u2751:
  9115  00EC60  EF3C  F076         	goto	l3597
  9116  00EC64                     u2750:
  9117  00EC64  0E00               	movlw	0
  9118  00EC66  6E3B               	movwf	?___fladd^0,c
  9119  00EC68  0E00               	movlw	0
  9120  00EC6A  6E3C               	movwf	(?___fladd+1)^0,c
  9121  00EC6C  0E00               	movlw	0
  9122  00EC6E  6E3D               	movwf	(?___fladd+2)^0,c
  9123  00EC70  0E00               	movlw	0
  9124  00EC72  6E3E               	movwf	(?___fladd+3)^0,c
  9125  00EC74  EF8B  F077         	goto	l1270
  9126  00EC78                     l3597:
  9127  00EC78  503F               	movf	___fladd@a^0,w,c
  9128  00EC7A  263B               	addwf	___fladd@b^0,f,c
  9129  00EC7C  5040               	movf	(___fladd@a+1)^0,w,c
  9130  00EC7E  223C               	addwfc	(___fladd@b+1)^0,f,c
  9131  00EC80  5041               	movf	(___fladd@a+2)^0,w,c
  9132  00EC82  223D               	addwfc	(___fladd@b+2)^0,f,c
  9133  00EC84  5042               	movf	(___fladd@a+3)^0,w,c
  9134  00EC86  223E               	addwfc	(___fladd@b+3)^0,f,c
  9135  00EC88  A03E               	btfss	(___fladd@b+3)^0,0,c
  9136  00EC8A  EF49  F076         	goto	u2761
  9137  00EC8E  EF4B  F076         	goto	u2760
  9138  00EC92                     u2761:
  9139  00EC92  EFF7  F076         	goto	l3651
  9140  00EC96                     u2760:
  9141  00EC96  A04A               	btfss	___fladd@grs^0,0,c
  9142  00EC98  EF50  F076         	goto	u2771
  9143  00EC9C  EF52  F076         	goto	u2770
  9144  00ECA0                     u2771:
  9145  00ECA0  EF58  F076         	goto	l3605
  9146  00ECA4                     u2770:
  9147  00ECA4  90D8               	bcf	status,0,c
  9148  00ECA6  304A               	rrcf	___fladd@grs^0,w,c
  9149  00ECA8  0901               	iorlw	1
  9150  00ECAA  6E4A               	movwf	___fladd@grs^0,c
  9151  00ECAC  EF5A  F076         	goto	l3607
  9152  00ECB0                     l3605:
  9153  00ECB0  90D8               	bcf	status,0,c
  9154  00ECB2  324A               	rrcf	___fladd@grs^0,f,c
  9155  00ECB4                     l3607:
  9156  00ECB4  A03B               	btfss	___fladd@b^0,0,c
  9157  00ECB6  EF5F  F076         	goto	u2781
  9158  00ECBA  EF61  F076         	goto	u2780
  9159  00ECBE                     u2781:
  9160  00ECBE  EF62  F076         	goto	l3611
  9161  00ECC2                     u2780:
  9162  00ECC2  8E4A               	bsf	___fladd@grs^0,7,c
  9163  00ECC4                     l3611:
  9164  00ECC4  343E               	rlcf	(___fladd@b+3)^0,w,c
  9165  00ECC6  323E               	rrcf	(___fladd@b+3)^0,f,c
  9166  00ECC8  323D               	rrcf	(___fladd@b+2)^0,f,c
  9167  00ECCA  323C               	rrcf	(___fladd@b+1)^0,f,c
  9168  00ECCC  323B               	rrcf	___fladd@b^0,f,c
  9169  00ECCE  2A49               	incf	___fladd@bexp^0,f,c
  9170  00ECD0  EFF7  F076         	goto	l3651
  9171  00ECD4                     l3615:
  9172  00ECD4  503F               	movf	___fladd@a^0,w,c
  9173  00ECD6  5C3B               	subwf	___fladd@b^0,w,c
  9174  00ECD8  5040               	movf	(___fladd@a+1)^0,w,c
  9175  00ECDA  583C               	subwfb	(___fladd@b+1)^0,w,c
  9176  00ECDC  5041               	movf	(___fladd@a+2)^0,w,c
  9177  00ECDE  583D               	subwfb	(___fladd@b+2)^0,w,c
  9178  00ECE0  503E               	movf	(___fladd@b+3)^0,w,c
  9179  00ECE2  0A80               	xorlw	128
  9180  00ECE4  6E43               	movwf	??___fladd^0,c
  9181  00ECE6  5042               	movf	(___fladd@a+3)^0,w,c
  9182  00ECE8  0A80               	xorlw	128
  9183  00ECEA  5843               	subwfb	??___fladd^0,w,c
  9184  00ECEC  B0D8               	btfsc	status,0,c
  9185  00ECEE  EF7B  F076         	goto	u2791
  9186  00ECF2  EF7D  F076         	goto	u2790
  9187  00ECF6                     u2791:
  9188  00ECF6  EFA8  F076         	goto	l3625
  9189  00ECFA                     u2790:
  9190  00ECFA  503B               	movf	___fladd@b^0,w,c
  9191  00ECFC  5C3F               	subwf	___fladd@a^0,w,c
  9192  00ECFE  6E43               	movwf	??___fladd^0,c
  9193  00ED00  503C               	movf	(___fladd@b+1)^0,w,c
  9194  00ED02  5840               	subwfb	(___fladd@a+1)^0,w,c
  9195  00ED04  6E44               	movwf	(??___fladd+1)^0,c
  9196  00ED06  503D               	movf	(___fladd@b+2)^0,w,c
  9197  00ED08  5841               	subwfb	(___fladd@a+2)^0,w,c
  9198  00ED0A  6E45               	movwf	(??___fladd+2)^0,c
  9199  00ED0C  503E               	movf	(___fladd@b+3)^0,w,c
  9200  00ED0E  5842               	subwfb	(___fladd@a+3)^0,w,c
  9201  00ED10  6E46               	movwf	(??___fladd+3)^0,c
  9202  00ED12  0EFF               	movlw	255
  9203  00ED14  2443               	addwf	??___fladd^0,w,c
  9204  00ED16  6E3B               	movwf	___fladd@b^0,c
  9205  00ED18  0EFF               	movlw	255
  9206  00ED1A  2044               	addwfc	(??___fladd+1)^0,w,c
  9207  00ED1C  6E3C               	movwf	(___fladd@b+1)^0,c
  9208  00ED1E  0EFF               	movlw	255
  9209  00ED20  2045               	addwfc	(??___fladd+2)^0,w,c
  9210  00ED22  6E3D               	movwf	(___fladd@b+2)^0,c
  9211  00ED24  0EFF               	movlw	255
  9212  00ED26  2046               	addwfc	(??___fladd+3)^0,w,c
  9213  00ED28  6E3E               	movwf	(___fladd@b+3)^0,c
  9214  00ED2A  0E80               	movlw	128
  9215  00ED2C  1A47               	xorwf	___fladd@signs^0,f,c
  9216  00ED2E  6C4A               	negf	___fladd@grs^0,c
  9217  00ED30  504A               	movf	___fladd@grs^0,w,c
  9218  00ED32  A4D8               	btfss	status,2,c
  9219  00ED34  EF9E  F076         	goto	u2801
  9220  00ED38  EFA0  F076         	goto	u2800
  9221  00ED3C                     u2801:
  9222  00ED3C  EFB0  F076         	goto	l1278
  9223  00ED40                     u2800:
  9224  00ED40  0E01               	movlw	1
  9225  00ED42  263B               	addwf	___fladd@b^0,f,c
  9226  00ED44  0E00               	movlw	0
  9227  00ED46  223C               	addwfc	(___fladd@b+1)^0,f,c
  9228  00ED48  223D               	addwfc	(___fladd@b+2)^0,f,c
  9229  00ED4A  223E               	addwfc	(___fladd@b+3)^0,f,c
  9230  00ED4C  EFB0  F076         	goto	l1278
  9231  00ED50                     l3625:
  9232  00ED50  503F               	movf	___fladd@a^0,w,c
  9233  00ED52  5E3B               	subwf	___fladd@b^0,f,c
  9234  00ED54  5040               	movf	(___fladd@a+1)^0,w,c
  9235  00ED56  5A3C               	subwfb	(___fladd@b+1)^0,f,c
  9236  00ED58  5041               	movf	(___fladd@a+2)^0,w,c
  9237  00ED5A  5A3D               	subwfb	(___fladd@b+2)^0,f,c
  9238  00ED5C  5042               	movf	(___fladd@a+3)^0,w,c
  9239  00ED5E  5A3E               	subwfb	(___fladd@b+3)^0,f,c
  9240  00ED60                     l1278:
  9241  00ED60  503B               	movf	___fladd@b^0,w,c
  9242  00ED62  103C               	iorwf	(___fladd@b+1)^0,w,c
  9243  00ED64  103D               	iorwf	(___fladd@b+2)^0,w,c
  9244  00ED66  103E               	iorwf	(___fladd@b+3)^0,w,c
  9245  00ED68  A4D8               	btfss	status,2,c
  9246  00ED6A  EFB9  F076         	goto	u2811
  9247  00ED6E  EFBB  F076         	goto	u2810
  9248  00ED72                     u2811:
  9249  00ED72  EFF0  F076         	goto	l3649
  9250  00ED76                     u2810:
  9251  00ED76  504A               	movf	___fladd@grs^0,w,c
  9252  00ED78  A4D8               	btfss	status,2,c
  9253  00ED7A  EFC1  F076         	goto	u2821
  9254  00ED7E  EFC3  F076         	goto	u2820
  9255  00ED82                     u2821:
  9256  00ED82  EFF0  F076         	goto	l3649
  9257  00ED86                     u2820:
  9258  00ED86  0E00               	movlw	0
  9259  00ED88  6E3B               	movwf	?___fladd^0,c
  9260  00ED8A  0E00               	movlw	0
  9261  00ED8C  6E3C               	movwf	(?___fladd+1)^0,c
  9262  00ED8E  0E00               	movlw	0
  9263  00ED90  6E3D               	movwf	(?___fladd+2)^0,c
  9264  00ED92  0E00               	movlw	0
  9265  00ED94  6E3E               	movwf	(?___fladd+3)^0,c
  9266  00ED96  EF8B  F077         	goto	l1270
  9267  00ED9A                     l3633:
  9268  00ED9A  90D8               	bcf	status,0,c
  9269  00ED9C  363B               	rlcf	___fladd@b^0,f,c
  9270  00ED9E  363C               	rlcf	(___fladd@b+1)^0,f,c
  9271  00EDA0  363D               	rlcf	(___fladd@b+2)^0,f,c
  9272  00EDA2  363E               	rlcf	(___fladd@b+3)^0,f,c
  9273  00EDA4  AE4A               	btfss	___fladd@grs^0,7,c
  9274  00EDA6  EFD7  F076         	goto	u2831
  9275  00EDAA  EFD9  F076         	goto	u2830
  9276  00EDAE                     u2831:
  9277  00EDAE  EFDA  F076         	goto	l3639
  9278  00EDB2                     u2830:
  9279  00EDB2  803B               	bsf	___fladd@b^0,0,c
  9280  00EDB4                     l3639:
  9281  00EDB4  A04A               	btfss	___fladd@grs^0,0,c
  9282  00EDB6  EFDF  F076         	goto	u2841
  9283  00EDBA  EFE1  F076         	goto	u2840
  9284  00EDBE                     u2841:
  9285  00EDBE  EFE5  F076         	goto	l3643
  9286  00EDC2                     u2840:
  9287  00EDC2  80D8               	bsf	status,0,c
  9288  00EDC4  364A               	rlcf	___fladd@grs^0,f,c
  9289  00EDC6  EFE7  F076         	goto	l3645
  9290  00EDCA                     l3643:
  9291  00EDCA  90D8               	bcf	status,0,c
  9292  00EDCC  364A               	rlcf	___fladd@grs^0,f,c
  9293  00EDCE                     l3645:
  9294  00EDCE  5049               	movf	___fladd@bexp^0,w,c
  9295  00EDD0  B4D8               	btfsc	status,2,c
  9296  00EDD2  EFED  F076         	goto	u2851
  9297  00EDD6  EFEF  F076         	goto	u2850
  9298  00EDDA                     u2851:
  9299  00EDDA  EFF0  F076         	goto	l3649
  9300  00EDDE                     u2850:
  9301  00EDDE  0649               	decf	___fladd@bexp^0,f,c
  9302  00EDE0                     l3649:
  9303  00EDE0  AE3D               	btfss	(___fladd@b+2)^0,7,c
  9304  00EDE2  EFF5  F076         	goto	u2861
  9305  00EDE6  EFF7  F076         	goto	u2860
  9306  00EDEA                     u2861:
  9307  00EDEA  EFCD  F076         	goto	l3633
  9308  00EDEE                     u2860:
  9309  00EDEE                     l3651:
  9310  00EDEE  0E00               	movlw	0
  9311  00EDF0  6E48               	movwf	___fladd@aexp^0,c
  9312  00EDF2  AE4A               	btfss	___fladd@grs^0,7,c
  9313  00EDF4  EFFE  F076         	goto	u2871
  9314  00EDF8  EF00  F077         	goto	u2870
  9315  00EDFC                     u2871:
  9316  00EDFC  EF18  F077         	goto	l1287
  9317  00EE00                     u2870:
  9318  00EE00  C04A  F043         	movff	___fladd@grs,??___fladd
  9319  00EE04  0E7F               	movlw	127
  9320  00EE06  1643               	andwf	??___fladd^0,f,c
  9321  00EE08  B4D8               	btfsc	status,2,c
  9322  00EE0A  EF09  F077         	goto	u2881
  9323  00EE0E  EF0B  F077         	goto	u2880
  9324  00EE12                     u2881:
  9325  00EE12  EF0F  F077         	goto	l1288
  9326  00EE16                     u2880:
  9327  00EE16                     l3657:
  9328  00EE16  0E01               	movlw	1
  9329  00EE18  6E48               	movwf	___fladd@aexp^0,c
  9330  00EE1A  EF18  F077         	goto	l1287
  9331  00EE1E                     l1288:
  9332  00EE1E  A03B               	btfss	___fladd@b^0,0,c
  9333  00EE20  EF14  F077         	goto	u2891
  9334  00EE24  EF16  F077         	goto	u2890
  9335  00EE28                     u2891:
  9336  00EE28  EF18  F077         	goto	l1287
  9337  00EE2C                     u2890:
  9338  00EE2C  EF0B  F077         	goto	l3657
  9339  00EE30                     l1287:
  9340  00EE30  5048               	movf	___fladd@aexp^0,w,c
  9341  00EE32  B4D8               	btfsc	status,2,c
  9342  00EE34  EF1E  F077         	goto	u2901
  9343  00EE38  EF20  F077         	goto	u2900
  9344  00EE3C                     u2901:
  9345  00EE3C  EF4B  F077         	goto	l3669
  9346  00EE40                     u2900:
  9347  00EE40  0E01               	movlw	1
  9348  00EE42  263B               	addwf	___fladd@b^0,f,c
  9349  00EE44  0E00               	movlw	0
  9350  00EE46  223C               	addwfc	(___fladd@b+1)^0,f,c
  9351  00EE48  223D               	addwfc	(___fladd@b+2)^0,f,c
  9352  00EE4A  223E               	addwfc	(___fladd@b+3)^0,f,c
  9353  00EE4C  A03E               	btfss	(___fladd@b+3)^0,0,c
  9354  00EE4E  EF2B  F077         	goto	u2911
  9355  00EE52  EF2D  F077         	goto	u2910
  9356  00EE56                     u2911:
  9357  00EE56  EF4B  F077         	goto	l3669
  9358  00EE5A                     u2910:
  9359  00EE5A  C03B  F043         	movff	___fladd@b,??___fladd
  9360  00EE5E  C03C  F044         	movff	___fladd@b+1,??___fladd+1
  9361  00EE62  C03D  F045         	movff	___fladd@b+2,??___fladd+2
  9362  00EE66  C03E  F046         	movff	___fladd@b+3,??___fladd+3
  9363  00EE6A  3446               	rlcf	(??___fladd+3)^0,w,c
  9364  00EE6C  3246               	rrcf	(??___fladd+3)^0,f,c
  9365  00EE6E  3245               	rrcf	(??___fladd+2)^0,f,c
  9366  00EE70  3244               	rrcf	(??___fladd+1)^0,f,c
  9367  00EE72  3243               	rrcf	??___fladd^0,f,c
  9368  00EE74  C043  F03B         	movff	??___fladd,___fladd@b
  9369  00EE78  C044  F03C         	movff	??___fladd+1,___fladd@b+1
  9370  00EE7C  C045  F03D         	movff	??___fladd+2,___fladd@b+2
  9371  00EE80  C046  F03E         	movff	??___fladd+3,___fladd@b+3
  9372  00EE84  2849               	incf	___fladd@bexp^0,w,c
  9373  00EE86  B4D8               	btfsc	status,2,c
  9374  00EE88  EF48  F077         	goto	u2921
  9375  00EE8C  EF4A  F077         	goto	u2920
  9376  00EE90                     u2921:
  9377  00EE90  EF4B  F077         	goto	l3669
  9378  00EE94                     u2920:
  9379  00EE94  2A49               	incf	___fladd@bexp^0,f,c
  9380  00EE96                     l3669:
  9381  00EE96  2849               	incf	___fladd@bexp^0,w,c
  9382  00EE98  B4D8               	btfsc	status,2,c
  9383  00EE9A  EF51  F077         	goto	u2931
  9384  00EE9E  EF53  F077         	goto	u2930
  9385  00EEA2                     u2931:
  9386  00EEA2  EF5B  F077         	goto	l3673
  9387  00EEA6                     u2930:
  9388  00EEA6  5049               	movf	___fladd@bexp^0,w,c
  9389  00EEA8  A4D8               	btfss	status,2,c
  9390  00EEAA  EF59  F077         	goto	u2941
  9391  00EEAE  EF5B  F077         	goto	u2940
  9392  00EEB2                     u2941:
  9393  00EEB2  EF6D  F077         	goto	l3677
  9394  00EEB6                     u2940:
  9395  00EEB6                     l3673:
  9396  00EEB6  0E00               	movlw	0
  9397  00EEB8  6E3B               	movwf	___fladd@b^0,c
  9398  00EEBA  0E00               	movlw	0
  9399  00EEBC  6E3C               	movwf	(___fladd@b+1)^0,c
  9400  00EEBE  0E00               	movlw	0
  9401  00EEC0  6E3D               	movwf	(___fladd@b+2)^0,c
  9402  00EEC2  0E00               	movlw	0
  9403  00EEC4  6E3E               	movwf	(___fladd@b+3)^0,c
  9404  00EEC6  5049               	movf	___fladd@bexp^0,w,c
  9405  00EEC8  A4D8               	btfss	status,2,c
  9406  00EECA  EF69  F077         	goto	u2951
  9407  00EECE  EF6B  F077         	goto	u2950
  9408  00EED2                     u2951:
  9409  00EED2  EF6D  F077         	goto	l3677
  9410  00EED6                     u2950:
  9411  00EED6  0E00               	movlw	0
  9412  00EED8  6E47               	movwf	___fladd@signs^0,c
  9413  00EEDA                     l3677:
  9414  00EEDA  A049               	btfss	___fladd@bexp^0,0,c
  9415  00EEDC  EF72  F077         	goto	u2961
  9416  00EEE0  EF74  F077         	goto	u2960
  9417  00EEE4                     u2961:
  9418  00EEE4  EF77  F077         	goto	l3681
  9419  00EEE8                     u2960:
  9420  00EEE8  8E3D               	bsf	(___fladd@b+2)^0,7,c
  9421  00EEEA  EF78  F077         	goto	l3683
  9422  00EEEE                     l3681:
  9423  00EEEE  9E3D               	bcf	(___fladd@b+2)^0,7,c
  9424  00EEF0                     l3683:
  9425  00EEF0  90D8               	bcf	status,0,c
  9426  00EEF2  3049               	rrcf	___fladd@bexp^0,w,c
  9427  00EEF4  6E3E               	movwf	(___fladd@b+3)^0,c
  9428  00EEF6  AE47               	btfss	___fladd@signs^0,7,c
  9429  00EEF8  EF80  F077         	goto	u2971
  9430  00EEFC  EF82  F077         	goto	u2970
  9431  00EF00                     u2971:
  9432  00EF00  EF83  F077         	goto	l3689
  9433  00EF04                     u2970:
  9434  00EF04  8E3E               	bsf	(___fladd@b+3)^0,7,c
  9435  00EF06                     l3689:
  9436  00EF06  C03B  F03B         	movff	___fladd@b,?___fladd
  9437  00EF0A  C03C  F03C         	movff	___fladd@b+1,?___fladd+1
  9438  00EF0E  C03D  F03D         	movff	___fladd@b+2,?___fladd+2
  9439  00EF12  C03E  F03E         	movff	___fladd@b+3,?___fladd+3
  9440  00EF16                     l1270:
  9441  00EF16  0012               	return		;funcret
  9442  00EF18                     __end_of___fladd:
  9443                           	callstack 0
  9444                           
  9445 ;; *************** function ___flneg *****************
  9446 ;; Defined at:
  9447 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\flneg.c"
  9448 ;; Parameters:    Size  Location     Type
  9449 ;;  f1              4    0[COMRAM] unsigned char 
  9450 ;; Auto vars:     Size  Location     Type
  9451 ;;		None
  9452 ;; Return value:  Size  Location     Type
  9453 ;;                  4    0[COMRAM] unsigned char 
  9454 ;; Registers used:
  9455 ;;		wreg, status,2, status,0
  9456 ;; Tracked objects:
  9457 ;;		On entry : 0/0
  9458 ;;		On exit  : 0/0
  9459 ;;		Unchanged: 0/0
  9460 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9461 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9462 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9463 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9464 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9465 ;;Total ram usage:        4 bytes
  9466 ;; Hardware stack levels used:    1
  9467 ;; This function calls:
  9468 ;;		Nothing
  9469 ;; This function is called by:
  9470 ;;		_printf
  9471 ;;		_pow
  9472 ;;		_exp
  9473 ;; This function uses a non-reentrant model
  9474 ;;
  9475                           
  9476                           	psect	text30
  9477  00C1D4                     __ptext30:
  9478                           	callstack 0
  9479  00C1D4                     ___flneg:
  9480                           	callstack 29
  9481  00C1D4  5001               	movf	___flneg@f1^0,w,c
  9482  00C1D6  1002               	iorwf	(___flneg@f1+1)^0,w,c
  9483  00C1D8  1003               	iorwf	(___flneg@f1+2)^0,w,c
  9484  00C1DA  1004               	iorwf	(___flneg@f1+3)^0,w,c
  9485  00C1DC  B4D8               	btfsc	status,2,c
  9486  00C1DE  EFF3  F060         	goto	u4081
  9487  00C1E2  EFF5  F060         	goto	u4080
  9488  00C1E6                     u4081:
  9489  00C1E6  EFFD  F060         	goto	l4429
  9490  00C1EA                     u4080:
  9491  00C1EA  0E00               	movlw	0
  9492  00C1EC  1A01               	xorwf	___flneg@f1^0,f,c
  9493  00C1EE  0E00               	movlw	0
  9494  00C1F0  1A02               	xorwf	(___flneg@f1+1)^0,f,c
  9495  00C1F2  0E00               	movlw	0
  9496  00C1F4  1A03               	xorwf	(___flneg@f1+2)^0,f,c
  9497  00C1F6  0E80               	movlw	128
  9498  00C1F8  1A04               	xorwf	(___flneg@f1+3)^0,f,c
  9499  00C1FA                     l4429:
  9500  00C1FA  C001  F001         	movff	___flneg@f1,?___flneg
  9501  00C1FE  C002  F002         	movff	___flneg@f1+1,?___flneg+1
  9502  00C202  C003  F003         	movff	___flneg@f1+2,?___flneg+2
  9503  00C206  C004  F004         	movff	___flneg@f1+3,?___flneg+3
  9504  00C20A  0012               	return		;funcret
  9505  00C20C                     __end_of___flneg:
  9506                           	callstack 0
  9507                           
  9508 ;; *************** function ___flge *****************
  9509 ;; Defined at:
  9510 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\flge.c"
  9511 ;; Parameters:    Size  Location     Type
  9512 ;;  ff1             4    0[COMRAM] unsigned char 
  9513 ;;  ff2             4    4[COMRAM] unsigned char 
  9514 ;; Auto vars:     Size  Location     Type
  9515 ;;		None
  9516 ;; Return value:  Size  Location     Type
  9517 ;;		None               void
  9518 ;; Registers used:
  9519 ;;		wreg, status,2, status,0
  9520 ;; Tracked objects:
  9521 ;;		On entry : 0/0
  9522 ;;		On exit  : 0/0
  9523 ;;		Unchanged: 0/0
  9524 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9525 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9526 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9527 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9528 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9529 ;;Total ram usage:       12 bytes
  9530 ;; Hardware stack levels used:    1
  9531 ;; This function calls:
  9532 ;;		Nothing
  9533 ;; This function is called by:
  9534 ;;		_printf
  9535 ;;		_pow
  9536 ;;		_exp
  9537 ;;		_floor
  9538 ;; This function uses a non-reentrant model
  9539 ;;
  9540                           
  9541                           	psect	text31
  9542  00C9E2                     __ptext31:
  9543                           	callstack 0
  9544  00C9E2                     ___flge:
  9545                           	callstack 29
  9546  00C9E2  0E00               	movlw	0
  9547  00C9E4  1401               	andwf	___flge@ff1^0,w,c
  9548  00C9E6  6E09               	movwf	??___flge^0,c
  9549  00C9E8  0E00               	movlw	0
  9550  00C9EA  1402               	andwf	(___flge@ff1+1)^0,w,c
  9551  00C9EC  6E0A               	movwf	(??___flge+1)^0,c
  9552  00C9EE  0E80               	movlw	128
  9553  00C9F0  1403               	andwf	(___flge@ff1+2)^0,w,c
  9554  00C9F2  6E0B               	movwf	(??___flge+2)^0,c
  9555  00C9F4  0E7F               	movlw	127
  9556  00C9F6  1404               	andwf	(___flge@ff1+3)^0,w,c
  9557  00C9F8  6E0C               	movwf	(??___flge+3)^0,c
  9558  00C9FA  5009               	movf	??___flge^0,w,c
  9559  00C9FC  100A               	iorwf	(??___flge+1)^0,w,c
  9560  00C9FE  100B               	iorwf	(??___flge+2)^0,w,c
  9561  00CA00  100C               	iorwf	(??___flge+3)^0,w,c
  9562  00CA02  A4D8               	btfss	status,2,c
  9563  00CA04  EF06  F065         	goto	u3291
  9564  00CA08  EF08  F065         	goto	u3290
  9565  00CA0C                     u3291:
  9566  00CA0C  EF10  F065         	goto	l3907
  9567  00CA10                     u3290:
  9568  00CA10  0E00               	movlw	0
  9569  00CA12  6E01               	movwf	___flge@ff1^0,c
  9570  00CA14  0E00               	movlw	0
  9571  00CA16  6E02               	movwf	(___flge@ff1+1)^0,c
  9572  00CA18  0E00               	movlw	0
  9573  00CA1A  6E03               	movwf	(___flge@ff1+2)^0,c
  9574  00CA1C  0E00               	movlw	0
  9575  00CA1E  6E04               	movwf	(___flge@ff1+3)^0,c
  9576  00CA20                     l3907:
  9577  00CA20  0E00               	movlw	0
  9578  00CA22  1405               	andwf	___flge@ff2^0,w,c
  9579  00CA24  6E09               	movwf	??___flge^0,c
  9580  00CA26  0E00               	movlw	0
  9581  00CA28  1406               	andwf	(___flge@ff2+1)^0,w,c
  9582  00CA2A  6E0A               	movwf	(??___flge+1)^0,c
  9583  00CA2C  0E80               	movlw	128
  9584  00CA2E  1407               	andwf	(___flge@ff2+2)^0,w,c
  9585  00CA30  6E0B               	movwf	(??___flge+2)^0,c
  9586  00CA32  0E7F               	movlw	127
  9587  00CA34  1408               	andwf	(___flge@ff2+3)^0,w,c
  9588  00CA36  6E0C               	movwf	(??___flge+3)^0,c
  9589  00CA38  5009               	movf	??___flge^0,w,c
  9590  00CA3A  100A               	iorwf	(??___flge+1)^0,w,c
  9591  00CA3C  100B               	iorwf	(??___flge+2)^0,w,c
  9592  00CA3E  100C               	iorwf	(??___flge+3)^0,w,c
  9593  00CA40  A4D8               	btfss	status,2,c
  9594  00CA42  EF25  F065         	goto	u3301
  9595  00CA46  EF27  F065         	goto	u3300
  9596  00CA4A                     u3301:
  9597  00CA4A  EF2F  F065         	goto	l3911
  9598  00CA4E                     u3300:
  9599  00CA4E  0E00               	movlw	0
  9600  00CA50  6E05               	movwf	___flge@ff2^0,c
  9601  00CA52  0E00               	movlw	0
  9602  00CA54  6E06               	movwf	(___flge@ff2+1)^0,c
  9603  00CA56  0E00               	movlw	0
  9604  00CA58  6E07               	movwf	(___flge@ff2+2)^0,c
  9605  00CA5A  0E00               	movlw	0
  9606  00CA5C  6E08               	movwf	(___flge@ff2+3)^0,c
  9607  00CA5E                     l3911:
  9608  00CA5E  AE04               	btfss	(___flge@ff1+3)^0,7,c
  9609  00CA60  EF34  F065         	goto	u3311
  9610  00CA64  EF36  F065         	goto	u3310
  9611  00CA68                     u3311:
  9612  00CA68  EF3F  F065         	goto	l3915
  9613  00CA6C                     u3310:
  9614  00CA6C  6C01               	negf	___flge@ff1^0,c
  9615  00CA6E  1E02               	comf	(___flge@ff1+1)^0,f,c
  9616  00CA70  B0D8               	btfsc	status,0,c
  9617  00CA72  2A02               	incf	(___flge@ff1+1)^0,f,c
  9618  00CA74  1E03               	comf	(___flge@ff1+2)^0,f,c
  9619  00CA76  B0D8               	btfsc	status,0,c
  9620  00CA78  2A03               	incf	(___flge@ff1+2)^0,f,c
  9621  00CA7A  0E80               	movlw	128
  9622  00CA7C  5604               	subfwb	(___flge@ff1+3)^0,f,c
  9623  00CA7E                     l3915:
  9624  00CA7E  AE08               	btfss	(___flge@ff2+3)^0,7,c
  9625  00CA80  EF44  F065         	goto	u3321
  9626  00CA84  EF46  F065         	goto	u3320
  9627  00CA88                     u3321:
  9628  00CA88  EF4F  F065         	goto	l989
  9629  00CA8C                     u3320:
  9630  00CA8C  6C05               	negf	___flge@ff2^0,c
  9631  00CA8E  1E06               	comf	(___flge@ff2+1)^0,f,c
  9632  00CA90  B0D8               	btfsc	status,0,c
  9633  00CA92  2A06               	incf	(___flge@ff2+1)^0,f,c
  9634  00CA94  1E07               	comf	(___flge@ff2+2)^0,f,c
  9635  00CA96  B0D8               	btfsc	status,0,c
  9636  00CA98  2A07               	incf	(___flge@ff2+2)^0,f,c
  9637  00CA9A  0E80               	movlw	128
  9638  00CA9C  5608               	subfwb	(___flge@ff2+3)^0,f,c
  9639  00CA9E                     l989:
  9640  00CA9E  0E00               	movlw	0
  9641  00CAA0  1A01               	xorwf	___flge@ff1^0,f,c
  9642  00CAA2  0E00               	movlw	0
  9643  00CAA4  1A02               	xorwf	(___flge@ff1+1)^0,f,c
  9644  00CAA6  0E00               	movlw	0
  9645  00CAA8  1A03               	xorwf	(___flge@ff1+2)^0,f,c
  9646  00CAAA  0E80               	movlw	128
  9647  00CAAC  1A04               	xorwf	(___flge@ff1+3)^0,f,c
  9648  00CAAE  0E00               	movlw	0
  9649  00CAB0  1A05               	xorwf	___flge@ff2^0,f,c
  9650  00CAB2  0E00               	movlw	0
  9651  00CAB4  1A06               	xorwf	(___flge@ff2+1)^0,f,c
  9652  00CAB6  0E00               	movlw	0
  9653  00CAB8  1A07               	xorwf	(___flge@ff2+2)^0,f,c
  9654  00CABA  0E80               	movlw	128
  9655  00CABC  1A08               	xorwf	(___flge@ff2+3)^0,f,c
  9656  00CABE  5005               	movf	___flge@ff2^0,w,c
  9657  00CAC0  5C01               	subwf	___flge@ff1^0,w,c
  9658  00CAC2  5006               	movf	(___flge@ff2+1)^0,w,c
  9659  00CAC4  5802               	subwfb	(___flge@ff1+1)^0,w,c
  9660  00CAC6  5007               	movf	(___flge@ff2+2)^0,w,c
  9661  00CAC8  5803               	subwfb	(___flge@ff1+2)^0,w,c
  9662  00CACA  5008               	movf	(___flge@ff2+3)^0,w,c
  9663  00CACC  5804               	subwfb	(___flge@ff1+3)^0,w,c
  9664  00CACE  B0D8               	btfsc	status,0,c
  9665  00CAD0  EF6C  F065         	goto	u3331
  9666  00CAD4  EF6E  F065         	goto	u3330
  9667  00CAD8                     u3331:
  9668  00CAD8  EF71  F065         	goto	l3921
  9669  00CADC                     u3330:
  9670  00CADC  90D8               	bcf	status,0,c
  9671  00CADE  EF72  F065         	goto	l990
  9672  00CAE2                     l3921:
  9673  00CAE2  80D8               	bsf	status,0,c
  9674  00CAE4                     l990:
  9675  00CAE4  0012               	return		;funcret
  9676  00CAE6                     __end_of___flge:
  9677                           	callstack 0
  9678                           
  9679 ;; *************** function ___fleq *****************
  9680 ;; Defined at:
  9681 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\fleq.c"
  9682 ;; Parameters:    Size  Location     Type
  9683 ;;  ff1             4   38[COMRAM] unsigned char 
  9684 ;;  ff2             4   42[COMRAM] unsigned char 
  9685 ;; Auto vars:     Size  Location     Type
  9686 ;;		None
  9687 ;; Return value:  Size  Location     Type
  9688 ;;		None               void
  9689 ;; Registers used:
  9690 ;;		wreg, status,2, status,0
  9691 ;; Tracked objects:
  9692 ;;		On entry : 0/0
  9693 ;;		On exit  : 0/0
  9694 ;;		Unchanged: 0/0
  9695 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9696 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9697 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9698 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9699 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9700 ;;Total ram usage:       12 bytes
  9701 ;; Hardware stack levels used:    1
  9702 ;; This function calls:
  9703 ;;		Nothing
  9704 ;; This function is called by:
  9705 ;;		_printf
  9706 ;;		_pow
  9707 ;;		_exp
  9708 ;;		_frexp
  9709 ;;		_ldexp
  9710 ;;		_log
  9711 ;; This function uses a non-reentrant model
  9712 ;;
  9713                           
  9714                           	psect	text32
  9715  00C6EC                     __ptext32:
  9716                           	callstack 0
  9717  00C6EC                     ___fleq:
  9718                           	callstack 29
  9719  00C6EC  0E00               	movlw	0
  9720  00C6EE  1427               	andwf	___fleq@ff1^0,w,c
  9721  00C6F0  6E2F               	movwf	??___fleq^0,c
  9722  00C6F2  0E00               	movlw	0
  9723  00C6F4  1428               	andwf	(___fleq@ff1+1)^0,w,c
  9724  00C6F6  6E30               	movwf	(??___fleq+1)^0,c
  9725  00C6F8  0E80               	movlw	128
  9726  00C6FA  1429               	andwf	(___fleq@ff1+2)^0,w,c
  9727  00C6FC  6E31               	movwf	(??___fleq+2)^0,c
  9728  00C6FE  0E7F               	movlw	127
  9729  00C700  142A               	andwf	(___fleq@ff1+3)^0,w,c
  9730  00C702  6E32               	movwf	(??___fleq+3)^0,c
  9731  00C704  502F               	movf	??___fleq^0,w,c
  9732  00C706  1030               	iorwf	(??___fleq+1)^0,w,c
  9733  00C708  1031               	iorwf	(??___fleq+2)^0,w,c
  9734  00C70A  1032               	iorwf	(??___fleq+3)^0,w,c
  9735  00C70C  A4D8               	btfss	status,2,c
  9736  00C70E  EF8B  F063         	goto	u2551
  9737  00C712  EF8D  F063         	goto	u2550
  9738  00C716                     u2551:
  9739  00C716  EF95  F063         	goto	l3475
  9740  00C71A                     u2550:
  9741  00C71A  0E00               	movlw	0
  9742  00C71C  6E27               	movwf	___fleq@ff1^0,c
  9743  00C71E  0E00               	movlw	0
  9744  00C720  6E28               	movwf	(___fleq@ff1+1)^0,c
  9745  00C722  0E00               	movlw	0
  9746  00C724  6E29               	movwf	(___fleq@ff1+2)^0,c
  9747  00C726  0E00               	movlw	0
  9748  00C728  6E2A               	movwf	(___fleq@ff1+3)^0,c
  9749  00C72A                     l3475:
  9750  00C72A  0E00               	movlw	0
  9751  00C72C  142B               	andwf	___fleq@ff2^0,w,c
  9752  00C72E  6E2F               	movwf	??___fleq^0,c
  9753  00C730  0E00               	movlw	0
  9754  00C732  142C               	andwf	(___fleq@ff2+1)^0,w,c
  9755  00C734  6E30               	movwf	(??___fleq+1)^0,c
  9756  00C736  0E80               	movlw	128
  9757  00C738  142D               	andwf	(___fleq@ff2+2)^0,w,c
  9758  00C73A  6E31               	movwf	(??___fleq+2)^0,c
  9759  00C73C  0E7F               	movlw	127
  9760  00C73E  142E               	andwf	(___fleq@ff2+3)^0,w,c
  9761  00C740  6E32               	movwf	(??___fleq+3)^0,c
  9762  00C742  502F               	movf	??___fleq^0,w,c
  9763  00C744  1030               	iorwf	(??___fleq+1)^0,w,c
  9764  00C746  1031               	iorwf	(??___fleq+2)^0,w,c
  9765  00C748  1032               	iorwf	(??___fleq+3)^0,w,c
  9766  00C74A  A4D8               	btfss	status,2,c
  9767  00C74C  EFAA  F063         	goto	u2561
  9768  00C750  EFAC  F063         	goto	u2560
  9769  00C754                     u2561:
  9770  00C754  EFB4  F063         	goto	l3479
  9771  00C758                     u2560:
  9772  00C758  0E00               	movlw	0
  9773  00C75A  6E2B               	movwf	___fleq@ff2^0,c
  9774  00C75C  0E00               	movlw	0
  9775  00C75E  6E2C               	movwf	(___fleq@ff2+1)^0,c
  9776  00C760  0E00               	movlw	0
  9777  00C762  6E2D               	movwf	(___fleq@ff2+2)^0,c
  9778  00C764  0E00               	movlw	0
  9779  00C766  6E2E               	movwf	(___fleq@ff2+3)^0,c
  9780  00C768                     l3479:
  9781  00C768  502B               	movf	___fleq@ff2^0,w,c
  9782  00C76A  1827               	xorwf	___fleq@ff1^0,w,c
  9783  00C76C  E10F               	bnz	u2570
  9784  00C76E  502C               	movf	(___fleq@ff2+1)^0,w,c
  9785  00C770  1828               	xorwf	(___fleq@ff1+1)^0,w,c
  9786  00C772  E10C               	bnz	u2570
  9787  00C774  502D               	movf	(___fleq@ff2+2)^0,w,c
  9788  00C776  1829               	xorwf	(___fleq@ff1+2)^0,w,c
  9789  00C778  E109               	bnz	u2570
  9790  00C77A  502E               	movf	(___fleq@ff2+3)^0,w,c
  9791  00C77C  182A               	xorwf	(___fleq@ff1+3)^0,w,c
  9792  00C77E  B4D8               	btfsc	status,2,c
  9793  00C780  EFC4  F063         	goto	u2571
  9794  00C784  EFC6  F063         	goto	u2570
  9795  00C788                     u2571:
  9796  00C788  EFC9  F063         	goto	l3483
  9797  00C78C                     u2570:
  9798  00C78C  90D8               	bcf	status,0,c
  9799  00C78E  EFCA  F063         	goto	l983
  9800  00C792                     l3483:
  9801  00C792  80D8               	bsf	status,0,c
  9802  00C794                     l983:
  9803  00C794  0012               	return		;funcret
  9804  00C796                     __end_of___fleq:
  9805                           	callstack 0
  9806                           
  9807 ;; *************** function _poll_switch1_for_edges *****************
  9808 ;; Defined at:
  9809 ;;		line 22 in file "../exercise10.X/buttons.c"
  9810 ;; Parameters:    Size  Location     Type
  9811 ;;  digitalinput    2    0[COMRAM] unsigned int 
  9812 ;; Auto vars:     Size  Location     Type
  9813 ;;  has_switch1_    2    2[COMRAM] unsigned int 
  9814 ;; Return value:  Size  Location     Type
  9815 ;;                  2    0[COMRAM] unsigned int 
  9816 ;; Registers used:
  9817 ;;		wreg, status,2, status,0
  9818 ;; Tracked objects:
  9819 ;;		On entry : 0/0
  9820 ;;		On exit  : 0/0
  9821 ;;		Unchanged: 0/0
  9822 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9823 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9824 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9825 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9826 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9827 ;;Total ram usage:        4 bytes
  9828 ;; Hardware stack levels used:    1
  9829 ;; This function calls:
  9830 ;;		Nothing
  9831 ;; This function is called by:
  9832 ;;		_buttonResponse
  9833 ;; This function uses a non-reentrant model
  9834 ;;
  9835                           
  9836                           	psect	text33
  9837  00C388                     __ptext33:
  9838                           	callstack 0
  9839  00C388                     _poll_switch1_for_edges:
  9840                           	callstack 29
  9841  00C388                     
  9842                           ;buttons.c: 25: unsigned int has_switch1_changed = 0;
  9843  00C388  0E00               	movlw	0
  9844  00C38A  6E04               	movwf	(poll_switch1_for_edges@has_switch1_changed+1)^0,c
  9845  00C38C  0E00               	movlw	0
  9846  00C38E  6E03               	movwf	poll_switch1_for_edges@has_switch1_changed^0,c
  9847  00C390                     
  9848                           ;buttons.c: 27: if (last_switch1_value == 0 && digitalinputpin >> 0)
  9849  00C390  0100               	movlb	0	; () banked
  9850  00C392  51C8               	movf	_last_switch1_value& (0+255),w,b
  9851  00C394  11C9               	iorwf	(_last_switch1_value+1)& (0+255),w,b
  9852  00C396  A4D8               	btfss	status,2,c
  9853  00C398  EFD0  F061         	goto	u4491
  9854  00C39C  EFD2  F061         	goto	u4490
  9855  00C3A0                     u4491:
  9856  00C3A0  EFE3  F061         	goto	l4773
  9857  00C3A4                     u4490:
  9858  00C3A4                     
  9859                           ; BSR set to: 0
  9860  00C3A4  5001               	movf	poll_switch1_for_edges@digitalinputpin^0,w,c
  9861  00C3A6  1002               	iorwf	(poll_switch1_for_edges@digitalinputpin+1)^0,w,c
  9862  00C3A8  B4D8               	btfsc	status,2,c
  9863  00C3AA  EFD9  F061         	goto	u4501
  9864  00C3AE  EFDB  F061         	goto	u4500
  9865  00C3B2                     u4501:
  9866  00C3B2  EFE3  F061         	goto	l4773
  9867  00C3B6                     u4500:
  9868  00C3B6                     
  9869                           ; BSR set to: 0
  9870                           ;buttons.c: 28: {;buttons.c: 29: last_switch1_value = 1;
  9871  00C3B6  0E00               	movlw	0
  9872  00C3B8  6FC9               	movwf	(_last_switch1_value+1)& (0+255),b
  9873  00C3BA  0E01               	movlw	1
  9874  00C3BC  6FC8               	movwf	_last_switch1_value& (0+255),b
  9875                           
  9876                           ;buttons.c: 30: has_switch1_changed = 1;
  9877  00C3BE  0E00               	movlw	0
  9878  00C3C0  6E04               	movwf	(poll_switch1_for_edges@has_switch1_changed+1)^0,c
  9879  00C3C2  0E01               	movlw	1
  9880  00C3C4  6E03               	movwf	poll_switch1_for_edges@has_switch1_changed^0,c
  9881  00C3C6                     l4773:
  9882                           
  9883                           ; BSR set to: 0
  9884                           ;buttons.c: 31: };buttons.c: 32: if (last_switch1_value == 1 && digitalinputpin == 0)
  9885  00C3C6  05C8               	decf	_last_switch1_value& (0+255),w,b
  9886  00C3C8  11C9               	iorwf	(_last_switch1_value+1)& (0+255),w,b
  9887  00C3CA  A4D8               	btfss	status,2,c
  9888  00C3CC  EFEA  F061         	goto	u4511
  9889  00C3D0  EFEC  F061         	goto	u4510
  9890  00C3D4                     u4511:
  9891  00C3D4  EFFD  F061         	goto	l4779
  9892  00C3D8                     u4510:
  9893  00C3D8                     
  9894                           ; BSR set to: 0
  9895  00C3D8  5001               	movf	poll_switch1_for_edges@digitalinputpin^0,w,c
  9896  00C3DA  1002               	iorwf	(poll_switch1_for_edges@digitalinputpin+1)^0,w,c
  9897  00C3DC  A4D8               	btfss	status,2,c
  9898  00C3DE  EFF3  F061         	goto	u4521
  9899  00C3E2  EFF5  F061         	goto	u4520
  9900  00C3E6                     u4521:
  9901  00C3E6  EFFD  F061         	goto	l4779
  9902  00C3EA                     u4520:
  9903  00C3EA                     
  9904                           ; BSR set to: 0
  9905                           ;buttons.c: 33: {;buttons.c: 34: last_switch1_value = 0;
  9906  00C3EA  0E00               	movlw	0
  9907  00C3EC  6FC9               	movwf	(_last_switch1_value+1)& (0+255),b
  9908  00C3EE  0E00               	movlw	0
  9909  00C3F0  6FC8               	movwf	_last_switch1_value& (0+255),b
  9910                           
  9911                           ;buttons.c: 35: has_switch1_changed = 2;
  9912  00C3F2  0E00               	movlw	0
  9913  00C3F4  6E04               	movwf	(poll_switch1_for_edges@has_switch1_changed+1)^0,c
  9914  00C3F6  0E02               	movlw	2
  9915  00C3F8  6E03               	movwf	poll_switch1_for_edges@has_switch1_changed^0,c
  9916  00C3FA                     l4779:
  9917                           
  9918                           ; BSR set to: 0
  9919                           ;buttons.c: 36: };buttons.c: 38: return has_switch1_changed;
  9920  00C3FA  C003  F001         	movff	poll_switch1_for_edges@has_switch1_changed,?_poll_switch1_for_edges
  9921  00C3FE  C004  F002         	movff	poll_switch1_for_edges@has_switch1_changed+1,?_poll_switch1_for_edges+1
  9922  00C402                     
  9923                           ; BSR set to: 0
  9924  00C402  0012               	return		;funcret
  9925  00C404                     __end_of_poll_switch1_for_edges:
  9926                           	callstack 0
  9927                           
  9928 ;; *************** function _DELAY_milliseconds *****************
  9929 ;; Defined at:
  9930 ;;		line 38 in file "mcc_generated_files/delay.c"
  9931 ;; Parameters:    Size  Location     Type
  9932 ;;  milliseconds    2    0[COMRAM] unsigned int 
  9933 ;; Auto vars:     Size  Location     Type
  9934 ;;		None
  9935 ;; Return value:  Size  Location     Type
  9936 ;;                  1    wreg      void 
  9937 ;; Registers used:
  9938 ;;		wreg, status,2, status,0
  9939 ;; Tracked objects:
  9940 ;;		On entry : 0/0
  9941 ;;		On exit  : 0/0
  9942 ;;		Unchanged: 0/0
  9943 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9944 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9945 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9946 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9947 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9948 ;;Total ram usage:        3 bytes
  9949 ;; Hardware stack levels used:    1
  9950 ;; This function calls:
  9951 ;;		Nothing
  9952 ;; This function is called by:
  9953 ;;		_buttonResponse
  9954 ;; This function uses a non-reentrant model
  9955 ;;
  9956                           
  9957                           	psect	text34
  9958  00C0DA                     __ptext34:
  9959                           	callstack 0
  9960  00C0DA                     _DELAY_milliseconds:
  9961                           	callstack 29
  9962  00C0DA                     
  9963                           ;delay.c: 39: while(milliseconds--){
  9964  00C0DA  EF76  F060         	goto	l4577
  9965  00C0DE                     l4575:
  9966                           
  9967                           ;delay.c: 40: _delay((unsigned long)((1)*(8000000/4000.0)));
  9968  00C0DE  0E03               	movlw	3
  9969  00C0E0  6E03               	movwf	??_DELAY_milliseconds^0,c
  9970  00C0E2  0E98               	movlw	152
  9971  00C0E4                     u5027:
  9972  00C0E4  2EE8               	decfsz	wreg,f,c
  9973  00C0E6  D7FE               	bra	u5027
  9974  00C0E8  2E03               	decfsz	??_DELAY_milliseconds^0,f,c
  9975  00C0EA  D7FC               	bra	u5027
  9976  00C0EC                     l4577:
  9977  00C0EC  0601               	decf	DELAY_milliseconds@milliseconds^0,f,c
  9978  00C0EE  A0D8               	btfss	status,0,c
  9979  00C0F0  0602               	decf	(DELAY_milliseconds@milliseconds+1)^0,f,c
  9980  00C0F2  2801               	incf	DELAY_milliseconds@milliseconds^0,w,c
  9981  00C0F4  E106               	bnz	u4221
  9982  00C0F6  2802               	incf	(DELAY_milliseconds@milliseconds+1)^0,w,c
  9983  00C0F8  A4D8               	btfss	status,2,c
  9984  00C0FA  EF81  F060         	goto	u4221
  9985  00C0FE  EF83  F060         	goto	u4220
  9986  00C102                     u4221:
  9987  00C102  EF6F  F060         	goto	l4575
  9988  00C106                     u4220:
  9989  00C106  0012               	return		;funcret
  9990  00C108                     __end_of_DELAY_milliseconds:
  9991                           	callstack 0
  9992                           
  9993 ;; *************** function _TMR0_WriteTimer *****************
  9994 ;; Defined at:
  9995 ;;		line 113 in file "mcc_generated_files/tmr0.c"
  9996 ;; Parameters:    Size  Location     Type
  9997 ;;  timerVal        2    0[COMRAM] unsigned int 
  9998 ;; Auto vars:     Size  Location     Type
  9999 ;;		None
 10000 ;; Return value:  Size  Location     Type
 10001 ;;                  1    wreg      void 
 10002 ;; Registers used:
 10003 ;;		wreg, status,2
 10004 ;; Tracked objects:
 10005 ;;		On entry : 0/0
 10006 ;;		On exit  : 0/0
 10007 ;;		Unchanged: 0/0
 10008 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10009 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10010 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10011 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10012 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10013 ;;Total ram usage:        2 bytes
 10014 ;; Hardware stack levels used:    1
 10015 ;; This function calls:
 10016 ;;		Nothing
 10017 ;; This function is called by:
 10018 ;;		_main
 10019 ;; This function uses a non-reentrant model
 10020 ;;
 10021                           
 10022                           	psect	text35
 10023  00BF8E                     __ptext35:
 10024                           	callstack 0
 10025  00BF8E                     _TMR0_WriteTimer:
 10026                           	callstack 30
 10027  00BF8E                     
 10028                           ;tmr0.c: 116: TMR0H = timerVal >> 8;
 10029  00BF8E  5002               	movf	(TMR0_WriteTimer@timerVal+1)^0,w,c
 10030  00BF90  6EB7               	movwf	183,c	;volatile
 10031  00BF92                     
 10032                           ;tmr0.c: 117: TMR0L = (uint8_t) timerVal;
 10033  00BF92  0060  F007  FFB6   	movff	TMR0_WriteTimer@timerVal,16310	;volatile
 10034  00BF98  0012               	return		;funcret
 10035  00BF9A                     __end_of_TMR0_WriteTimer:
 10036                           	callstack 0
 10037                           
 10038 ;; *************** function _SYSTEM_Initialize *****************
 10039 ;; Defined at:
 10040 ;;		line 50 in file "mcc_generated_files/mcc.c"
 10041 ;; Parameters:    Size  Location     Type
 10042 ;;		None
 10043 ;; Auto vars:     Size  Location     Type
 10044 ;;		None
 10045 ;; Return value:  Size  Location     Type
 10046 ;;                  1    wreg      void 
 10047 ;; Registers used:
 10048 ;;		wreg, status,2, status,0, cstack
 10049 ;; Tracked objects:
 10050 ;;		On entry : 0/0
 10051 ;;		On exit  : 0/0
 10052 ;;		Unchanged: 0/0
 10053 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10054 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10055 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10056 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10057 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10058 ;;Total ram usage:        0 bytes
 10059 ;; Hardware stack levels used:    1
 10060 ;; Hardware stack levels required when called:    2
 10061 ;; This function calls:
 10062 ;;		_OSCILLATOR_Initialize
 10063 ;;		_PIN_MANAGER_Initialize
 10064 ;;		_PMD_Initialize
 10065 ;;		_PWM5_Initialize
 10066 ;;		_PWM6_Initialize
 10067 ;;		_PWM7_Initialize
 10068 ;;		_TMR0_Initialize
 10069 ;;		_TMR2_Initialize
 10070 ;;		_TMR4_Initialize
 10071 ;;		_UART2_Initialize
 10072 ;; This function is called by:
 10073 ;;		_main
 10074 ;; This function uses a non-reentrant model
 10075 ;;
 10076                           
 10077                           	psect	text36
 10078  00C086                     __ptext36:
 10079                           	callstack 0
 10080  00C086                     _SYSTEM_Initialize:
 10081                           	callstack 28
 10082  00C086                     
 10083                           ;mcc.c: 52: PMD_Initialize();
 10084  00C086  EC31  F060         	call	_PMD_Initialize	;wreg free
 10085                           
 10086                           ;mcc.c: 53: PIN_MANAGER_Initialize();
 10087  00C08A  EC22  F063         	call	_PIN_MANAGER_Initialize	;wreg free
 10088                           
 10089                           ;mcc.c: 54: OSCILLATOR_Initialize();
 10090  00C08E  ECD6  F05F         	call	_OSCILLATOR_Initialize	;wreg free
 10091                           
 10092                           ;mcc.c: 55: PWM6_Initialize();
 10093  00C092  ECEE  F05F         	call	_PWM6_Initialize	;wreg free
 10094                           
 10095                           ;mcc.c: 56: TMR4_Initialize();
 10096  00C096  EC22  F060         	call	_TMR4_Initialize	;wreg free
 10097                           
 10098                           ;mcc.c: 57: PWM5_Initialize();
 10099  00C09A  ECE2  F05F         	call	_PWM5_Initialize	;wreg free
 10100                           
 10101                           ;mcc.c: 58: TMR2_Initialize();
 10102  00C09E  EC13  F060         	call	_TMR2_Initialize	;wreg free
 10103                           
 10104                           ;mcc.c: 59: PWM7_Initialize();
 10105  00C0A2  ECFA  F05F         	call	_PWM7_Initialize	;wreg free
 10106  00C0A6                     
 10107                           ;mcc.c: 60: TMR0_Initialize();
 10108  00C0A6  EC84  F060         	call	_TMR0_Initialize	;wreg free
 10109  00C0AA                     
 10110                           ;mcc.c: 61: UART2_Initialize();
 10111  00C0AA  EC29  F061         	call	_UART2_Initialize	;wreg free
 10112  00C0AE  0012               	return		;funcret
 10113  00C0B0                     __end_of_SYSTEM_Initialize:
 10114                           	callstack 0
 10115                           
 10116 ;; *************** function _UART2_Initialize *****************
 10117 ;; Defined at:
 10118 ;;		line 66 in file "mcc_generated_files/uart2.c"
 10119 ;; Parameters:    Size  Location     Type
 10120 ;;		None
 10121 ;; Auto vars:     Size  Location     Type
 10122 ;;		None
 10123 ;; Return value:  Size  Location     Type
 10124 ;;                  1    wreg      void 
 10125 ;; Registers used:
 10126 ;;		wreg, status,2, status,0, cstack
 10127 ;; Tracked objects:
 10128 ;;		On entry : 0/0
 10129 ;;		On exit  : 0/0
 10130 ;;		Unchanged: 0/0
 10131 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10132 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10133 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10134 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10135 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10136 ;;Total ram usage:        0 bytes
 10137 ;; Hardware stack levels used:    1
 10138 ;; Hardware stack levels required when called:    1
 10139 ;; This function calls:
 10140 ;;		_UART2_SetErrorHandler
 10141 ;;		_UART2_SetFramingErrorHandler
 10142 ;;		_UART2_SetOverrunErrorHandler
 10143 ;; This function is called by:
 10144 ;;		_SYSTEM_Initialize
 10145 ;; This function uses a non-reentrant model
 10146 ;;
 10147                           
 10148                           	psect	text37
 10149  00C252                     __ptext37:
 10150                           	callstack 0
 10151  00C252                     _UART2_Initialize:
 10152                           	callstack 28
 10153  00C252                     
 10154                           ;uart2.c: 73: U2P1L = 0x00;
 10155  00C252  0E00               	movlw	0
 10156  00C254  013D               	movlb	61	; () banked
 10157  00C256  6FD4               	movwf	212,b	;volatile
 10158                           
 10159                           ;uart2.c: 76: U2P2L = 0x00;
 10160  00C258  0E00               	movlw	0
 10161  00C25A  6FD6               	movwf	214,b	;volatile
 10162                           
 10163                           ;uart2.c: 79: U2P3L = 0x00;
 10164  00C25C  0E00               	movlw	0
 10165  00C25E  6FD8               	movwf	216,b	;volatile
 10166                           
 10167                           ;uart2.c: 82: U2CON0 = 0xB0;
 10168  00C260  0EB0               	movlw	176
 10169  00C262  6FDA               	movwf	218,b	;volatile
 10170                           
 10171                           ;uart2.c: 85: U2CON1 = 0x80;
 10172  00C264  0E80               	movlw	128
 10173  00C266  6FDB               	movwf	219,b	;volatile
 10174                           
 10175                           ;uart2.c: 88: U2CON2 = 0x00;
 10176  00C268  0E00               	movlw	0
 10177  00C26A  6FDC               	movwf	220,b	;volatile
 10178                           
 10179                           ;uart2.c: 91: U2BRGL = 0xCF;
 10180  00C26C  0ECF               	movlw	207
 10181  00C26E  6FDD               	movwf	221,b	;volatile
 10182                           
 10183                           ;uart2.c: 94: U2BRGH = 0x00;
 10184  00C270  0E00               	movlw	0
 10185  00C272  6FDE               	movwf	222,b	;volatile
 10186                           
 10187                           ;uart2.c: 97: U2FIFO = 0x00;
 10188  00C274  0E00               	movlw	0
 10189  00C276  6FDF               	movwf	223,b	;volatile
 10190                           
 10191                           ;uart2.c: 100: U2UIR = 0x00;
 10192  00C278  0E00               	movlw	0
 10193  00C27A  6FE0               	movwf	224,b	;volatile
 10194                           
 10195                           ;uart2.c: 103: U2ERRIR = 0x00;
 10196  00C27C  0E00               	movlw	0
 10197  00C27E  6FE1               	movwf	225,b	;volatile
 10198                           
 10199                           ;uart2.c: 106: U2ERRIE = 0x00;
 10200  00C280  0E00               	movlw	0
 10201  00C282  6FE2               	movwf	226,b	;volatile
 10202  00C284                     
 10203                           ; BSR set to: 61
 10204                           ;uart2.c: 109: UART2_SetFramingErrorHandler(UART2_DefaultFramingErrorHandler);
 10205  00C284  0E00               	movlw	0
 10206  00C286  6E01               	movwf	UART2_SetFramingErrorHandler@interruptHandler^0,c
 10207  00C288  0E00               	movlw	0
 10208  00C28A  6E02               	movwf	(UART2_SetFramingErrorHandler@interruptHandler+1)^0,c
 10209  00C28C  ECB8  F05F         	call	_UART2_SetFramingErrorHandler	;wreg free
 10210  00C290                     
 10211                           ;uart2.c: 110: UART2_SetOverrunErrorHandler(UART2_DefaultOverrunErrorHandler);
 10212  00C290  0E00               	movlw	0
 10213  00C292  6E01               	movwf	UART2_SetOverrunErrorHandler@interruptHandler^0,c
 10214  00C294  0E00               	movlw	0
 10215  00C296  6E02               	movwf	(UART2_SetOverrunErrorHandler@interruptHandler+1)^0,c
 10216  00C298  ECBD  F05F         	call	_UART2_SetOverrunErrorHandler	;wreg free
 10217  00C29C                     
 10218                           ;uart2.c: 111: UART2_SetErrorHandler(UART2_DefaultErrorHandler);
 10219  00C29C  0E00               	movlw	0
 10220  00C29E  6E01               	movwf	UART2_SetErrorHandler@interruptHandler^0,c
 10221  00C2A0  0E00               	movlw	0
 10222  00C2A2  6E02               	movwf	(UART2_SetErrorHandler@interruptHandler+1)^0,c
 10223  00C2A4  ECB3  F05F         	call	_UART2_SetErrorHandler	;wreg free
 10224  00C2A8                     
 10225                           ;uart2.c: 113: uart2RxLastError.status = 0;
 10226  00C2A8  0E00               	movlw	0
 10227  00C2AA  0100               	movlb	0	; () banked
 10228  00C2AC  6FCE               	movwf	_uart2RxLastError& (0+255),b	;volatile
 10229  00C2AE                     
 10230                           ; BSR set to: 0
 10231  00C2AE  0012               	return		;funcret
 10232  00C2B0                     __end_of_UART2_Initialize:
 10233                           	callstack 0
 10234                           
 10235 ;; *************** function _UART2_SetOverrunErrorHandler *****************
 10236 ;; Defined at:
 10237 ;;		line 195 in file "mcc_generated_files/uart2.c"
 10238 ;; Parameters:    Size  Location     Type
 10239 ;;  interruptHan    2    0[COMRAM] PTR FTN()void 
 10240 ;;		 -> UART2_DefaultOverrunErrorHandler(1), 
 10241 ;; Auto vars:     Size  Location     Type
 10242 ;;		None
 10243 ;; Return value:  Size  Location     Type
 10244 ;;                  1    wreg      void 
 10245 ;; Registers used:
 10246 ;;		wreg, status,2, status,0
 10247 ;; Tracked objects:
 10248 ;;		On entry : 0/0
 10249 ;;		On exit  : 0/0
 10250 ;;		Unchanged: 0/0
 10251 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10252 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10253 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10254 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10255 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10256 ;;Total ram usage:        2 bytes
 10257 ;; Hardware stack levels used:    1
 10258 ;; This function calls:
 10259 ;;		Nothing
 10260 ;; This function is called by:
 10261 ;;		_UART2_Initialize
 10262 ;; This function uses a non-reentrant model
 10263 ;;
 10264                           
 10265                           	psect	text38
 10266  00BF7A                     __ptext38:
 10267                           	callstack 0
 10268  00BF7A                     _UART2_SetOverrunErrorHandler:
 10269                           	callstack 28
 10270  00BF7A                     
 10271                           ;uart2.c: 196: UART2_OverrunErrorHandler = interruptHandler;
 10272  00BF7A  C001  F0D1         	movff	UART2_SetOverrunErrorHandler@interruptHandler,_UART2_OverrunErrorHandler
 10273  00BF7E  C002  F0D2         	movff	UART2_SetOverrunErrorHandler@interruptHandler+1,_UART2_OverrunErrorHandler+1
 10274  00BF82  0012               	return		;funcret
 10275  00BF84                     __end_of_UART2_SetOverrunErrorHandler:
 10276                           	callstack 0
 10277                           
 10278 ;; *************** function _UART2_SetFramingErrorHandler *****************
 10279 ;; Defined at:
 10280 ;;		line 191 in file "mcc_generated_files/uart2.c"
 10281 ;; Parameters:    Size  Location     Type
 10282 ;;  interruptHan    2    0[COMRAM] PTR FTN()void 
 10283 ;;		 -> UART2_DefaultFramingErrorHandler(1), 
 10284 ;; Auto vars:     Size  Location     Type
 10285 ;;		None
 10286 ;; Return value:  Size  Location     Type
 10287 ;;                  1    wreg      void 
 10288 ;; Registers used:
 10289 ;;		wreg, status,2, status,0
 10290 ;; Tracked objects:
 10291 ;;		On entry : 0/0
 10292 ;;		On exit  : 0/0
 10293 ;;		Unchanged: 0/0
 10294 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10295 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10296 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10297 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10298 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10299 ;;Total ram usage:        2 bytes
 10300 ;; Hardware stack levels used:    1
 10301 ;; This function calls:
 10302 ;;		Nothing
 10303 ;; This function is called by:
 10304 ;;		_UART2_Initialize
 10305 ;; This function uses a non-reentrant model
 10306 ;;
 10307                           
 10308                           	psect	text39
 10309  00BF70                     __ptext39:
 10310                           	callstack 0
 10311  00BF70                     _UART2_SetFramingErrorHandler:
 10312                           	callstack 28
 10313  00BF70                     
 10314                           ;uart2.c: 192: UART2_FramingErrorHandler = interruptHandler;
 10315  00BF70  C001  F0D3         	movff	UART2_SetFramingErrorHandler@interruptHandler,_UART2_FramingErrorHandler
 10316  00BF74  C002  F0D4         	movff	UART2_SetFramingErrorHandler@interruptHandler+1,_UART2_FramingErrorHandler+1
 10317  00BF78  0012               	return		;funcret
 10318  00BF7A                     __end_of_UART2_SetFramingErrorHandler:
 10319                           	callstack 0
 10320                           
 10321 ;; *************** function _UART2_SetErrorHandler *****************
 10322 ;; Defined at:
 10323 ;;		line 199 in file "mcc_generated_files/uart2.c"
 10324 ;; Parameters:    Size  Location     Type
 10325 ;;  interruptHan    2    0[COMRAM] PTR FTN()void 
 10326 ;;		 -> UART2_DefaultErrorHandler(1), 
 10327 ;; Auto vars:     Size  Location     Type
 10328 ;;		None
 10329 ;; Return value:  Size  Location     Type
 10330 ;;                  1    wreg      void 
 10331 ;; Registers used:
 10332 ;;		wreg, status,2, status,0
 10333 ;; Tracked objects:
 10334 ;;		On entry : 0/0
 10335 ;;		On exit  : 0/0
 10336 ;;		Unchanged: 0/0
 10337 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10338 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10339 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10340 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10341 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10342 ;;Total ram usage:        2 bytes
 10343 ;; Hardware stack levels used:    1
 10344 ;; This function calls:
 10345 ;;		Nothing
 10346 ;; This function is called by:
 10347 ;;		_UART2_Initialize
 10348 ;; This function uses a non-reentrant model
 10349 ;;
 10350                           
 10351                           	psect	text40
 10352  00BF66                     __ptext40:
 10353                           	callstack 0
 10354  00BF66                     _UART2_SetErrorHandler:
 10355                           	callstack 28
 10356  00BF66                     
 10357                           ;uart2.c: 200: UART2_ErrorHandler = interruptHandler;
 10358  00BF66  C001  F0CF         	movff	UART2_SetErrorHandler@interruptHandler,_UART2_ErrorHandler
 10359  00BF6A  C002  F0D0         	movff	UART2_SetErrorHandler@interruptHandler+1,_UART2_ErrorHandler+1
 10360  00BF6E  0012               	return		;funcret
 10361  00BF70                     __end_of_UART2_SetErrorHandler:
 10362                           	callstack 0
 10363                           
 10364 ;; *************** function _TMR4_Initialize *****************
 10365 ;; Defined at:
 10366 ;;		line 62 in file "mcc_generated_files/tmr4.c"
 10367 ;; Parameters:    Size  Location     Type
 10368 ;;		None
 10369 ;; Auto vars:     Size  Location     Type
 10370 ;;		None
 10371 ;; Return value:  Size  Location     Type
 10372 ;;                  1    wreg      void 
 10373 ;; Registers used:
 10374 ;;		wreg, status,2
 10375 ;; Tracked objects:
 10376 ;;		On entry : 0/0
 10377 ;;		On exit  : 0/0
 10378 ;;		Unchanged: 0/0
 10379 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10380 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10381 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10382 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10383 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10384 ;;Total ram usage:        0 bytes
 10385 ;; Hardware stack levels used:    1
 10386 ;; This function calls:
 10387 ;;		Nothing
 10388 ;; This function is called by:
 10389 ;;		_SYSTEM_Initialize
 10390 ;; This function uses a non-reentrant model
 10391 ;;
 10392                           
 10393                           	psect	text41
 10394  00C044                     __ptext41:
 10395                           	callstack 0
 10396  00C044                     _TMR4_Initialize:
 10397                           	callstack 29
 10398  00C044                     
 10399                           ;tmr4.c: 67: T4CLKCON = 0x01;
 10400  00C044  0E01               	movlw	1
 10401  00C046  6EA2               	movwf	162,c	;volatile
 10402                           
 10403                           ;tmr4.c: 70: T4HLT = 0x00;
 10404  00C048  0E00               	movlw	0
 10405  00C04A  6EA1               	movwf	161,c	;volatile
 10406                           
 10407                           ;tmr4.c: 73: T4RST = 0x00;
 10408  00C04C  0E00               	movlw	0
 10409  00C04E  6EA3               	movwf	163,c	;volatile
 10410                           
 10411                           ;tmr4.c: 76: T4PR = 0xF9;
 10412  00C050  0EF9               	movlw	249
 10413  00C052  6E9F               	movwf	159,c	;volatile
 10414                           
 10415                           ;tmr4.c: 79: T4TMR = 0x00;
 10416  00C054  0E00               	movlw	0
 10417  00C056  6E9E               	movwf	158,c	;volatile
 10418  00C058                     
 10419                           ;tmr4.c: 82: PIR7bits.TMR4IF = 0;
 10420  00C058  0139               	movlb	57	; () banked
 10421  00C05A  91A7               	bcf	167,0,b	;volatile
 10422                           
 10423                           ;tmr4.c: 85: T4CON = 0xF0;
 10424  00C05C  0EF0               	movlw	240
 10425  00C05E  6EA0               	movwf	160,c	;volatile
 10426  00C060                     
 10427                           ; BSR set to: 57
 10428  00C060  0012               	return		;funcret
 10429  00C062                     __end_of_TMR4_Initialize:
 10430                           	callstack 0
 10431                           
 10432 ;; *************** function _TMR2_Initialize *****************
 10433 ;; Defined at:
 10434 ;;		line 62 in file "mcc_generated_files/tmr2.c"
 10435 ;; Parameters:    Size  Location     Type
 10436 ;;		None
 10437 ;; Auto vars:     Size  Location     Type
 10438 ;;		None
 10439 ;; Return value:  Size  Location     Type
 10440 ;;                  1    wreg      void 
 10441 ;; Registers used:
 10442 ;;		wreg, status,2
 10443 ;; Tracked objects:
 10444 ;;		On entry : 0/0
 10445 ;;		On exit  : 0/0
 10446 ;;		Unchanged: 0/0
 10447 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10448 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10449 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10450 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10451 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10452 ;;Total ram usage:        0 bytes
 10453 ;; Hardware stack levels used:    1
 10454 ;; This function calls:
 10455 ;;		Nothing
 10456 ;; This function is called by:
 10457 ;;		_SYSTEM_Initialize
 10458 ;; This function uses a non-reentrant model
 10459 ;;
 10460                           
 10461                           	psect	text42
 10462  00C026                     __ptext42:
 10463                           	callstack 0
 10464  00C026                     _TMR2_Initialize:
 10465                           	callstack 29
 10466  00C026                     
 10467                           ;tmr2.c: 67: T2CLKCON = 0x01;
 10468  00C026  0E01               	movlw	1
 10469  00C028  6EAE               	movwf	174,c	;volatile
 10470                           
 10471                           ;tmr2.c: 70: T2HLT = 0x00;
 10472  00C02A  0E00               	movlw	0
 10473  00C02C  6EAD               	movwf	173,c	;volatile
 10474                           
 10475                           ;tmr2.c: 73: T2RST = 0x00;
 10476  00C02E  0E00               	movlw	0
 10477  00C030  6EAF               	movwf	175,c	;volatile
 10478                           
 10479                           ;tmr2.c: 76: T2PR = 0xF9;
 10480  00C032  0EF9               	movlw	249
 10481  00C034  6EAB               	movwf	171,c	;volatile
 10482                           
 10483                           ;tmr2.c: 79: T2TMR = 0x00;
 10484  00C036  0E00               	movlw	0
 10485  00C038  6EAA               	movwf	170,c	;volatile
 10486  00C03A                     
 10487                           ;tmr2.c: 82: PIR4bits.TMR2IF = 0;
 10488  00C03A  0139               	movlb	57	; () banked
 10489  00C03C  95A4               	bcf	164,2,b	;volatile
 10490                           
 10491                           ;tmr2.c: 85: T2CON = 0xF0;
 10492  00C03E  0EF0               	movlw	240
 10493  00C040  6EAC               	movwf	172,c	;volatile
 10494  00C042                     
 10495                           ; BSR set to: 57
 10496  00C042  0012               	return		;funcret
 10497  00C044                     __end_of_TMR2_Initialize:
 10498                           	callstack 0
 10499                           
 10500 ;; *************** function _TMR0_Initialize *****************
 10501 ;; Defined at:
 10502 ;;		line 65 in file "mcc_generated_files/tmr0.c"
 10503 ;; Parameters:    Size  Location     Type
 10504 ;;		None
 10505 ;; Auto vars:     Size  Location     Type
 10506 ;;		None
 10507 ;; Return value:  Size  Location     Type
 10508 ;;                  1    wreg      void 
 10509 ;; Registers used:
 10510 ;;		wreg, status,2, status,0
 10511 ;; Tracked objects:
 10512 ;;		On entry : 0/0
 10513 ;;		On exit  : 0/0
 10514 ;;		Unchanged: 0/0
 10515 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10516 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10517 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10518 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10519 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10520 ;;Total ram usage:        2 bytes
 10521 ;; Hardware stack levels used:    1
 10522 ;; This function calls:
 10523 ;;		Nothing
 10524 ;; This function is called by:
 10525 ;;		_SYSTEM_Initialize
 10526 ;; This function uses a non-reentrant model
 10527 ;;
 10528                           
 10529                           	psect	text43
 10530  00C108                     __ptext43:
 10531                           	callstack 0
 10532  00C108                     _TMR0_Initialize:
 10533                           	callstack 29
 10534  00C108                     
 10535                           ;tmr0.c: 70: T0CON1 = 0x40;
 10536  00C108  0E40               	movlw	64
 10537  00C10A  6EB9               	movwf	185,c	;volatile
 10538                           
 10539                           ;tmr0.c: 73: TMR0H = 0xF0;
 10540  00C10C  0EF0               	movlw	240
 10541  00C10E  6EB7               	movwf	183,c	;volatile
 10542                           
 10543                           ;tmr0.c: 76: TMR0L = 0x60;
 10544  00C110  0E60               	movlw	96
 10545  00C112  6EB6               	movwf	182,c	;volatile
 10546  00C114                     
 10547                           ;tmr0.c: 79: timer0ReloadVal16bit = (TMR0H << 8) | TMR0L;
 10548  00C114  50B6               	movf	182,w,c	;volatile
 10549  00C116  006F FEDC  F001    	movff	16311,??_TMR0_Initialize	;volatile
 10550  00C11C  6A02               	clrf	(??_TMR0_Initialize+1)^0,c
 10551  00C11E  C001  F002         	movff	??_TMR0_Initialize,??_TMR0_Initialize+1
 10552  00C122  6A01               	clrf	??_TMR0_Initialize^0,c
 10553  00C124  1001               	iorwf	??_TMR0_Initialize^0,w,c
 10554  00C126  0100               	movlb	0	; () banked
 10555  00C128  6FD5               	movwf	_timer0ReloadVal16bit& (0+255),b	;volatile
 10556  00C12A  5002               	movf	(??_TMR0_Initialize+1)^0,w,c
 10557  00C12C  6FD6               	movwf	(_timer0ReloadVal16bit+1)& (0+255),b	;volatile
 10558  00C12E                     
 10559                           ; BSR set to: 0
 10560                           ;tmr0.c: 82: PIR3bits.TMR0IF = 0;
 10561  00C12E  0139               	movlb	57	; () banked
 10562  00C130  9FA3               	bcf	163,7,b	;volatile
 10563  00C132                     
 10564                           ; BSR set to: 57
 10565                           ;tmr0.c: 85: T0CON0 = 0x90;
 10566  00C132  0E90               	movlw	144
 10567  00C134  6EB8               	movwf	184,c	;volatile
 10568  00C136                     
 10569                           ; BSR set to: 57
 10570  00C136  0012               	return		;funcret
 10571  00C138                     __end_of_TMR0_Initialize:
 10572                           	callstack 0
 10573                           
 10574 ;; *************** function _PWM7_Initialize *****************
 10575 ;; Defined at:
 10576 ;;		line 58 in file "mcc_generated_files/pwm7.c"
 10577 ;; Parameters:    Size  Location     Type
 10578 ;;		None
 10579 ;; Auto vars:     Size  Location     Type
 10580 ;;		None
 10581 ;; Return value:  Size  Location     Type
 10582 ;;                  1    wreg      void 
 10583 ;; Registers used:
 10584 ;;		wreg, status,2
 10585 ;; Tracked objects:
 10586 ;;		On entry : 0/0
 10587 ;;		On exit  : 0/0
 10588 ;;		Unchanged: 0/0
 10589 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10590 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10591 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10592 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10593 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10594 ;;Total ram usage:        0 bytes
 10595 ;; Hardware stack levels used:    1
 10596 ;; This function calls:
 10597 ;;		Nothing
 10598 ;; This function is called by:
 10599 ;;		_SYSTEM_Initialize
 10600 ;; This function uses a non-reentrant model
 10601 ;;
 10602                           
 10603                           	psect	text44
 10604  00BFF4                     __ptext44:
 10605                           	callstack 0
 10606  00BFF4                     _PWM7_Initialize:
 10607                           	callstack 29
 10608  00BFF4                     
 10609                           ;pwm7.c: 62: PWM7CON = 0x80;
 10610  00BFF4  0E80               	movlw	128
 10611  00BFF6  6E66               	movwf	102,c	;volatile
 10612                           
 10613                           ;pwm7.c: 65: PWM7DCH = 0x7C;
 10614  00BFF8  0E7C               	movlw	124
 10615  00BFFA  6E65               	movwf	101,c	;volatile
 10616                           
 10617                           ;pwm7.c: 68: PWM7DCL = 0xC0;
 10618  00BFFC  0EC0               	movlw	192
 10619  00BFFE  6E64               	movwf	100,c	;volatile
 10620                           
 10621                           ;pwm7.c: 71: CCPTMRS1bits.P7TSEL = 2;
 10622  00C000  013F               	movlb	63	; () banked
 10623  00C002  515F               	movf	95,w,b	;volatile
 10624  00C004  0BCF               	andlw	-49
 10625  00C006  0920               	iorlw	32
 10626  00C008  6F5F               	movwf	95,b	;volatile
 10627  00C00A                     
 10628                           ; BSR set to: 63
 10629  00C00A  0012               	return		;funcret
 10630  00C00C                     __end_of_PWM7_Initialize:
 10631                           	callstack 0
 10632                           
 10633 ;; *************** function _PWM6_Initialize *****************
 10634 ;; Defined at:
 10635 ;;		line 58 in file "mcc_generated_files/pwm6.c"
 10636 ;; Parameters:    Size  Location     Type
 10637 ;;		None
 10638 ;; Auto vars:     Size  Location     Type
 10639 ;;		None
 10640 ;; Return value:  Size  Location     Type
 10641 ;;                  1    wreg      void 
 10642 ;; Registers used:
 10643 ;;		wreg, status,2
 10644 ;; Tracked objects:
 10645 ;;		On entry : 0/0
 10646 ;;		On exit  : 0/0
 10647 ;;		Unchanged: 0/0
 10648 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10649 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10650 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10651 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10652 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10653 ;;Total ram usage:        0 bytes
 10654 ;; Hardware stack levels used:    1
 10655 ;; This function calls:
 10656 ;;		Nothing
 10657 ;; This function is called by:
 10658 ;;		_SYSTEM_Initialize
 10659 ;; This function uses a non-reentrant model
 10660 ;;
 10661                           
 10662                           	psect	text45
 10663  00BFDC                     __ptext45:
 10664                           	callstack 0
 10665  00BFDC                     _PWM6_Initialize:
 10666                           	callstack 29
 10667  00BFDC                     
 10668                           ;pwm6.c: 62: PWM6CON = 0x90;
 10669  00BFDC  0E90               	movlw	144
 10670  00BFDE  6E6A               	movwf	106,c	;volatile
 10671                           
 10672                           ;pwm6.c: 65: PWM6DCH = 0x7C;
 10673  00BFE0  0E7C               	movlw	124
 10674  00BFE2  6E69               	movwf	105,c	;volatile
 10675                           
 10676                           ;pwm6.c: 68: PWM6DCL = 0xC0;
 10677  00BFE4  0EC0               	movlw	192
 10678  00BFE6  6E68               	movwf	104,c	;volatile
 10679                           
 10680                           ;pwm6.c: 71: CCPTMRS1bits.P6TSEL = 1;
 10681  00BFE8  013F               	movlb	63	; () banked
 10682  00BFEA  515F               	movf	95,w,b	;volatile
 10683  00BFEC  0BF3               	andlw	-13
 10684  00BFEE  0904               	iorlw	4
 10685  00BFF0  6F5F               	movwf	95,b	;volatile
 10686  00BFF2                     
 10687                           ; BSR set to: 63
 10688  00BFF2  0012               	return		;funcret
 10689  00BFF4                     __end_of_PWM6_Initialize:
 10690                           	callstack 0
 10691                           
 10692 ;; *************** function _PWM5_Initialize *****************
 10693 ;; Defined at:
 10694 ;;		line 58 in file "mcc_generated_files/pwm5.c"
 10695 ;; Parameters:    Size  Location     Type
 10696 ;;		None
 10697 ;; Auto vars:     Size  Location     Type
 10698 ;;		None
 10699 ;; Return value:  Size  Location     Type
 10700 ;;                  1    wreg      void 
 10701 ;; Registers used:
 10702 ;;		wreg, status,2
 10703 ;; Tracked objects:
 10704 ;;		On entry : 0/0
 10705 ;;		On exit  : 0/0
 10706 ;;		Unchanged: 0/0
 10707 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10708 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10709 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10710 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10711 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10712 ;;Total ram usage:        0 bytes
 10713 ;; Hardware stack levels used:    1
 10714 ;; This function calls:
 10715 ;;		Nothing
 10716 ;; This function is called by:
 10717 ;;		_SYSTEM_Initialize
 10718 ;; This function uses a non-reentrant model
 10719 ;;
 10720                           
 10721                           	psect	text46
 10722  00BFC4                     __ptext46:
 10723                           	callstack 0
 10724  00BFC4                     _PWM5_Initialize:
 10725                           	callstack 29
 10726  00BFC4                     
 10727                           ;pwm5.c: 62: PWM5CON = 0x80;
 10728  00BFC4  0E80               	movlw	128
 10729  00BFC6  6E6E               	movwf	110,c	;volatile
 10730                           
 10731                           ;pwm5.c: 65: PWM5DCH = 0x7C;
 10732  00BFC8  0E7C               	movlw	124
 10733  00BFCA  6E6D               	movwf	109,c	;volatile
 10734                           
 10735                           ;pwm5.c: 68: PWM5DCL = 0xC0;
 10736  00BFCC  0EC0               	movlw	192
 10737  00BFCE  6E6C               	movwf	108,c	;volatile
 10738                           
 10739                           ;pwm5.c: 71: CCPTMRS1bits.P5TSEL = 1;
 10740  00BFD0  013F               	movlb	63	; () banked
 10741  00BFD2  515F               	movf	95,w,b	;volatile
 10742  00BFD4  0BFC               	andlw	-4
 10743  00BFD6  0901               	iorlw	1
 10744  00BFD8  6F5F               	movwf	95,b	;volatile
 10745  00BFDA                     
 10746                           ; BSR set to: 63
 10747  00BFDA  0012               	return		;funcret
 10748  00BFDC                     __end_of_PWM5_Initialize:
 10749                           	callstack 0
 10750                           
 10751 ;; *************** function _PMD_Initialize *****************
 10752 ;; Defined at:
 10753 ;;		line 78 in file "mcc_generated_files/mcc.c"
 10754 ;; Parameters:    Size  Location     Type
 10755 ;;		None
 10756 ;; Auto vars:     Size  Location     Type
 10757 ;;		None
 10758 ;; Return value:  Size  Location     Type
 10759 ;;                  1    wreg      void 
 10760 ;; Registers used:
 10761 ;;		wreg, status,2
 10762 ;; Tracked objects:
 10763 ;;		On entry : 0/0
 10764 ;;		On exit  : 0/0
 10765 ;;		Unchanged: 0/0
 10766 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10767 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10768 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10769 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10770 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10771 ;;Total ram usage:        0 bytes
 10772 ;; Hardware stack levels used:    1
 10773 ;; This function calls:
 10774 ;;		Nothing
 10775 ;; This function is called by:
 10776 ;;		_SYSTEM_Initialize
 10777 ;; This function uses a non-reentrant model
 10778 ;;
 10779                           
 10780                           	psect	text47
 10781  00C062                     __ptext47:
 10782                           	callstack 0
 10783  00C062                     _PMD_Initialize:
 10784                           	callstack 29
 10785  00C062                     
 10786                           ;mcc.c: 81: PMD0 = 0x00;
 10787  00C062  0E00               	movlw	0
 10788  00C064  0139               	movlb	57	; () banked
 10789  00C066  6FC0               	movwf	192,b	;volatile
 10790                           
 10791                           ;mcc.c: 83: PMD1 = 0x00;
 10792  00C068  0E00               	movlw	0
 10793  00C06A  6FC1               	movwf	193,b	;volatile
 10794                           
 10795                           ;mcc.c: 85: PMD2 = 0x00;
 10796  00C06C  0E00               	movlw	0
 10797  00C06E  6FC2               	movwf	194,b	;volatile
 10798                           
 10799                           ;mcc.c: 87: PMD3 = 0x00;
 10800  00C070  0E00               	movlw	0
 10801  00C072  6FC3               	movwf	195,b	;volatile
 10802                           
 10803                           ;mcc.c: 89: PMD4 = 0x00;
 10804  00C074  0E00               	movlw	0
 10805  00C076  6FC4               	movwf	196,b	;volatile
 10806                           
 10807                           ;mcc.c: 91: PMD5 = 0x00;
 10808  00C078  0E00               	movlw	0
 10809  00C07A  6FC5               	movwf	197,b	;volatile
 10810                           
 10811                           ;mcc.c: 93: PMD6 = 0x00;
 10812  00C07C  0E00               	movlw	0
 10813  00C07E  6FC6               	movwf	198,b	;volatile
 10814                           
 10815                           ;mcc.c: 95: PMD7 = 0x00;
 10816  00C080  0E00               	movlw	0
 10817  00C082  6FC7               	movwf	199,b	;volatile
 10818  00C084                     
 10819                           ; BSR set to: 57
 10820  00C084  0012               	return		;funcret
 10821  00C086                     __end_of_PMD_Initialize:
 10822                           	callstack 0
 10823                           
 10824 ;; *************** function _PIN_MANAGER_Initialize *****************
 10825 ;; Defined at:
 10826 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
 10827 ;; Parameters:    Size  Location     Type
 10828 ;;		None
 10829 ;; Auto vars:     Size  Location     Type
 10830 ;;		None
 10831 ;; Return value:  Size  Location     Type
 10832 ;;                  1    wreg      void 
 10833 ;; Registers used:
 10834 ;;		wreg, status,2
 10835 ;; Tracked objects:
 10836 ;;		On entry : 0/0
 10837 ;;		On exit  : 0/0
 10838 ;;		Unchanged: 0/0
 10839 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10840 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10841 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10842 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10843 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10844 ;;Total ram usage:        0 bytes
 10845 ;; Hardware stack levels used:    1
 10846 ;; This function calls:
 10847 ;;		Nothing
 10848 ;; This function is called by:
 10849 ;;		_SYSTEM_Initialize
 10850 ;; This function uses a non-reentrant model
 10851 ;;
 10852                           
 10853                           	psect	text48
 10854  00C644                     __ptext48:
 10855                           	callstack 0
 10856  00C644                     _PIN_MANAGER_Initialize:
 10857                           	callstack 29
 10858  00C644                     
 10859                           ;pin_manager.c: 60: LATE = 0x00;
 10860  00C644  0E00               	movlw	0
 10861  00C646  6EBE               	movwf	190,c	;volatile
 10862                           
 10863                           ;pin_manager.c: 61: LATD = 0x00;
 10864  00C648  0E00               	movlw	0
 10865  00C64A  6EBD               	movwf	189,c	;volatile
 10866                           
 10867                           ;pin_manager.c: 62: LATA = 0x00;
 10868  00C64C  0E00               	movlw	0
 10869  00C64E  6EBA               	movwf	186,c	;volatile
 10870                           
 10871                           ;pin_manager.c: 63: LATB = 0x00;
 10872  00C650  0E00               	movlw	0
 10873  00C652  6EBB               	movwf	187,c	;volatile
 10874                           
 10875                           ;pin_manager.c: 64: LATC = 0x00;
 10876  00C654  0E00               	movlw	0
 10877  00C656  6EBC               	movwf	188,c	;volatile
 10878                           
 10879                           ;pin_manager.c: 69: TRISE = 0x07;
 10880  00C658  0E07               	movlw	7
 10881  00C65A  6EC6               	movwf	198,c	;volatile
 10882  00C65C                     
 10883                           ;pin_manager.c: 70: TRISA = 0xFF;
 10884  00C65C  68C2               	setf	194,c	;volatile
 10885                           
 10886                           ;pin_manager.c: 71: TRISB = 0xBF;
 10887  00C65E  0EBF               	movlw	191
 10888  00C660  6EC3               	movwf	195,c	;volatile
 10889                           
 10890                           ;pin_manager.c: 72: TRISC = 0xFA;
 10891  00C662  0EFA               	movlw	250
 10892  00C664  6EC4               	movwf	196,c	;volatile
 10893                           
 10894                           ;pin_manager.c: 73: TRISD = 0xFB;
 10895  00C666  0EFB               	movlw	251
 10896  00C668  6EC5               	movwf	197,c	;volatile
 10897                           
 10898                           ;pin_manager.c: 78: ANSELD = 0xF9;
 10899  00C66A  0EF9               	movlw	249
 10900  00C66C  013A               	movlb	58	; () banked
 10901  00C66E  6F70               	movwf	112,b	;volatile
 10902                           
 10903                           ;pin_manager.c: 79: ANSELC = 0xFA;
 10904  00C670  0EFA               	movlw	250
 10905  00C672  6F60               	movwf	96,b	;volatile
 10906                           
 10907                           ;pin_manager.c: 80: ANSELB = 0x3F;
 10908  00C674  0E3F               	movlw	63
 10909  00C676  6F50               	movwf	80,b	;volatile
 10910                           
 10911                           ;pin_manager.c: 81: ANSELE = 0x07;
 10912  00C678  0E07               	movlw	7
 10913  00C67A  6F80               	movwf	128,b	;volatile
 10914  00C67C                     
 10915                           ; BSR set to: 58
 10916                           ;pin_manager.c: 82: ANSELA = 0xFF;
 10917  00C67C  6940               	setf	64,b	;volatile
 10918                           
 10919                           ;pin_manager.c: 87: WPUD = 0x00;
 10920  00C67E  0E00               	movlw	0
 10921  00C680  6F71               	movwf	113,b	;volatile
 10922                           
 10923                           ;pin_manager.c: 88: WPUE = 0x00;
 10924  00C682  0E00               	movlw	0
 10925  00C684  6F81               	movwf	129,b	;volatile
 10926                           
 10927                           ;pin_manager.c: 89: WPUB = 0x00;
 10928  00C686  0E00               	movlw	0
 10929  00C688  6F51               	movwf	81,b	;volatile
 10930                           
 10931                           ;pin_manager.c: 90: WPUA = 0x00;
 10932  00C68A  0E00               	movlw	0
 10933  00C68C  6F41               	movwf	65,b	;volatile
 10934                           
 10935                           ;pin_manager.c: 91: WPUC = 0x00;
 10936  00C68E  0E00               	movlw	0
 10937  00C690  6F61               	movwf	97,b	;volatile
 10938                           
 10939                           ;pin_manager.c: 96: RB1I2C = 0x00;
 10940  00C692  0E00               	movlw	0
 10941  00C694  6F5A               	movwf	90,b	;volatile
 10942                           
 10943                           ;pin_manager.c: 97: RB2I2C = 0x00;
 10944  00C696  0E00               	movlw	0
 10945  00C698  6F5B               	movwf	91,b	;volatile
 10946                           
 10947                           ;pin_manager.c: 98: RC3I2C = 0x00;
 10948  00C69A  0E00               	movlw	0
 10949  00C69C  6F6A               	movwf	106,b	;volatile
 10950                           
 10951                           ;pin_manager.c: 99: RC4I2C = 0x00;
 10952  00C69E  0E00               	movlw	0
 10953  00C6A0  6F6B               	movwf	107,b	;volatile
 10954                           
 10955                           ;pin_manager.c: 100: RD0I2C = 0x00;
 10956  00C6A2  0E00               	movlw	0
 10957  00C6A4  6F7A               	movwf	122,b	;volatile
 10958                           
 10959                           ;pin_manager.c: 101: RD1I2C = 0x00;
 10960  00C6A6  0E00               	movlw	0
 10961  00C6A8  6F7B               	movwf	123,b	;volatile
 10962                           
 10963                           ;pin_manager.c: 106: ODCONE = 0x00;
 10964  00C6AA  0E00               	movlw	0
 10965  00C6AC  6F82               	movwf	130,b	;volatile
 10966                           
 10967                           ;pin_manager.c: 107: ODCONA = 0x00;
 10968  00C6AE  0E00               	movlw	0
 10969  00C6B0  6F42               	movwf	66,b	;volatile
 10970                           
 10971                           ;pin_manager.c: 108: ODCONB = 0x00;
 10972  00C6B2  0E00               	movlw	0
 10973  00C6B4  6F52               	movwf	82,b	;volatile
 10974                           
 10975                           ;pin_manager.c: 109: ODCONC = 0x00;
 10976  00C6B6  0E00               	movlw	0
 10977  00C6B8  6F62               	movwf	98,b	;volatile
 10978                           
 10979                           ;pin_manager.c: 110: ODCOND = 0x00;
 10980  00C6BA  0E00               	movlw	0
 10981  00C6BC  6F72               	movwf	114,b	;volatile
 10982  00C6BE                     
 10983                           ; BSR set to: 58
 10984                           ;pin_manager.c: 115: SLRCONA = 0xFF;
 10985  00C6BE  6943               	setf	67,b	;volatile
 10986  00C6C0                     
 10987                           ; BSR set to: 58
 10988                           ;pin_manager.c: 116: SLRCONB = 0xFF;
 10989  00C6C0  6953               	setf	83,b	;volatile
 10990  00C6C2                     
 10991                           ; BSR set to: 58
 10992                           ;pin_manager.c: 117: SLRCONC = 0xFF;
 10993  00C6C2  6963               	setf	99,b	;volatile
 10994  00C6C4                     
 10995                           ; BSR set to: 58
 10996                           ;pin_manager.c: 118: SLRCOND = 0xFF;
 10997  00C6C4  6973               	setf	115,b	;volatile
 10998                           
 10999                           ;pin_manager.c: 119: SLRCONE = 0x07;
 11000  00C6C6  0E07               	movlw	7
 11001  00C6C8  6F83               	movwf	131,b	;volatile
 11002  00C6CA                     
 11003                           ; BSR set to: 58
 11004                           ;pin_manager.c: 124: INLVLA = 0xFF;
 11005  00C6CA  6944               	setf	68,b	;volatile
 11006  00C6CC                     
 11007                           ; BSR set to: 58
 11008                           ;pin_manager.c: 125: INLVLB = 0xFF;
 11009  00C6CC  6954               	setf	84,b	;volatile
 11010  00C6CE                     
 11011                           ; BSR set to: 58
 11012                           ;pin_manager.c: 126: INLVLC = 0xFF;
 11013  00C6CE  6964               	setf	100,b	;volatile
 11014  00C6D0                     
 11015                           ; BSR set to: 58
 11016                           ;pin_manager.c: 127: INLVLD = 0xFF;
 11017  00C6D0  6974               	setf	116,b	;volatile
 11018                           
 11019                           ;pin_manager.c: 128: INLVLE = 0x0F;
 11020  00C6D2  0E0F               	movlw	15
 11021  00C6D4  6F84               	movwf	132,b	;volatile
 11022                           
 11023                           ;pin_manager.c: 137: U2RXPPS = 0x0F;
 11024  00C6D6  0E0F               	movlw	15
 11025  00C6D8  6FE8               	movwf	232,b	;volatile
 11026                           
 11027                           ;pin_manager.c: 138: RC0PPS = 0x0F;
 11028  00C6DA  0E0F               	movlw	15
 11029  00C6DC  6F10               	movwf	16,b	;volatile
 11030                           
 11031                           ;pin_manager.c: 139: RD2PPS = 0x0E;
 11032  00C6DE  0E0E               	movlw	14
 11033  00C6E0  6F1A               	movwf	26,b	;volatile
 11034                           
 11035                           ;pin_manager.c: 140: RB6PPS = 0x16;
 11036  00C6E2  0E16               	movlw	22
 11037  00C6E4  6F0E               	movwf	14,b	;volatile
 11038                           
 11039                           ;pin_manager.c: 141: RC2PPS = 0x0D;
 11040  00C6E6  0E0D               	movlw	13
 11041  00C6E8  6F12               	movwf	18,b	;volatile
 11042  00C6EA                     
 11043                           ; BSR set to: 58
 11044  00C6EA  0012               	return		;funcret
 11045  00C6EC                     __end_of_PIN_MANAGER_Initialize:
 11046                           	callstack 0
 11047                           
 11048 ;; *************** function _OSCILLATOR_Initialize *****************
 11049 ;; Defined at:
 11050 ;;		line 64 in file "mcc_generated_files/mcc.c"
 11051 ;; Parameters:    Size  Location     Type
 11052 ;;		None
 11053 ;; Auto vars:     Size  Location     Type
 11054 ;;		None
 11055 ;; Return value:  Size  Location     Type
 11056 ;;                  1    wreg      void 
 11057 ;; Registers used:
 11058 ;;		wreg, status,2
 11059 ;; Tracked objects:
 11060 ;;		On entry : 0/0
 11061 ;;		On exit  : 0/0
 11062 ;;		Unchanged: 0/0
 11063 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11064 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11065 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11066 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11067 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11068 ;;Total ram usage:        0 bytes
 11069 ;; Hardware stack levels used:    1
 11070 ;; This function calls:
 11071 ;;		Nothing
 11072 ;; This function is called by:
 11073 ;;		_SYSTEM_Initialize
 11074 ;; This function uses a non-reentrant model
 11075 ;;
 11076                           
 11077                           	psect	text49
 11078  00BFAC                     __ptext49:
 11079                           	callstack 0
 11080  00BFAC                     _OSCILLATOR_Initialize:
 11081                           	callstack 29
 11082  00BFAC                     
 11083                           ;mcc.c: 67: OSCCON1 = 0x62;
 11084  00BFAC  0E62               	movlw	98
 11085  00BFAE  0139               	movlb	57	; () banked
 11086  00BFB0  6FD9               	movwf	217,b	;volatile
 11087                           
 11088                           ;mcc.c: 69: OSCCON3 = 0x00;
 11089  00BFB2  0E00               	movlw	0
 11090  00BFB4  6FDB               	movwf	219,b	;volatile
 11091                           
 11092                           ;mcc.c: 71: OSCEN = 0x00;
 11093  00BFB6  0E00               	movlw	0
 11094  00BFB8  6FDD               	movwf	221,b	;volatile
 11095                           
 11096                           ;mcc.c: 73: OSCFRQ = 0x06;
 11097  00BFBA  0E06               	movlw	6
 11098  00BFBC  6FDF               	movwf	223,b	;volatile
 11099                           
 11100                           ;mcc.c: 75: OSCTUNE = 0x00;
 11101  00BFBE  0E00               	movlw	0
 11102  00BFC0  6FDE               	movwf	222,b	;volatile
 11103  00BFC2                     
 11104                           ; BSR set to: 57
 11105  00BFC2  0012               	return		;funcret
 11106  00BFC4                     __end_of_OSCILLATOR_Initialize:
 11107                           	callstack 0
 11108                           
 11109 ;; *************** function _PWM7_LoadDutyValue *****************
 11110 ;; Defined at:
 11111 ;;		line 74 in file "mcc_generated_files/pwm7.c"
 11112 ;; Parameters:    Size  Location     Type
 11113 ;;  dutyValue       2    0[COMRAM] unsigned int 
 11114 ;; Auto vars:     Size  Location     Type
 11115 ;;		None
 11116 ;; Return value:  Size  Location     Type
 11117 ;;                  1    wreg      void 
 11118 ;; Registers used:
 11119 ;;		wreg, status,2, status,0
 11120 ;; Tracked objects:
 11121 ;;		On entry : 0/0
 11122 ;;		On exit  : 0/0
 11123 ;;		Unchanged: 0/0
 11124 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11125 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11126 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11127 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11128 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11129 ;;Total ram usage:        4 bytes
 11130 ;; Hardware stack levels used:    1
 11131 ;; This function calls:
 11132 ;;		Nothing
 11133 ;; This function is called by:
 11134 ;;		_main
 11135 ;; This function uses a non-reentrant model
 11136 ;;
 11137                           
 11138                           	psect	text50
 11139  00C1A0                     __ptext50:
 11140                           	callstack 0
 11141  00C1A0                     _PWM7_LoadDutyValue:
 11142                           	callstack 30
 11143  00C1A0                     
 11144                           ;pwm7.c: 77: PWM7DCH = (dutyValue & 0x03FC)>>2;
 11145  00C1A0  C001  F003         	movff	PWM7_LoadDutyValue@dutyValue,??_PWM7_LoadDutyValue
 11146  00C1A4  C002  F004         	movff	PWM7_LoadDutyValue@dutyValue+1,??_PWM7_LoadDutyValue+1
 11147  00C1A8  90D8               	bcf	status,0,c
 11148  00C1AA  3204               	rrcf	(??_PWM7_LoadDutyValue+1)^0,f,c
 11149  00C1AC  3203               	rrcf	??_PWM7_LoadDutyValue^0,f,c
 11150  00C1AE  90D8               	bcf	status,0,c
 11151  00C1B0  3204               	rrcf	(??_PWM7_LoadDutyValue+1)^0,f,c
 11152  00C1B2  3203               	rrcf	??_PWM7_LoadDutyValue^0,f,c
 11153  00C1B4  5003               	movf	??_PWM7_LoadDutyValue^0,w,c
 11154  00C1B6  6E65               	movwf	101,c	;volatile
 11155                           
 11156                           ;pwm7.c: 80: PWM7DCL = (dutyValue & 0x0003)<<6;
 11157  00C1B8  C001  F003         	movff	PWM7_LoadDutyValue@dutyValue,??_PWM7_LoadDutyValue
 11158  00C1BC  0E03               	movlw	3
 11159  00C1BE  1603               	andwf	??_PWM7_LoadDutyValue^0,f,c
 11160  00C1C0  0E06               	movlw	6
 11161  00C1C2  6E04               	movwf	(??_PWM7_LoadDutyValue+1)^0,c
 11162  00C1C4                     u4725:
 11163  00C1C4  90D8               	bcf	status,0,c
 11164  00C1C6  3603               	rlcf	??_PWM7_LoadDutyValue^0,f,c
 11165  00C1C8  2E04               	decfsz	(??_PWM7_LoadDutyValue+1)^0,f,c
 11166  00C1CA  EFE2  F060         	goto	u4725
 11167  00C1CE  5003               	movf	??_PWM7_LoadDutyValue^0,w,c
 11168  00C1D0  6E64               	movwf	100,c	;volatile
 11169  00C1D2  0012               	return		;funcret
 11170  00C1D4                     __end_of_PWM7_LoadDutyValue:
 11171                           	callstack 0
 11172                           
 11173 ;; *************** function _PWM6_LoadDutyValue *****************
 11174 ;; Defined at:
 11175 ;;		line 74 in file "mcc_generated_files/pwm6.c"
 11176 ;; Parameters:    Size  Location     Type
 11177 ;;  dutyValue       2    0[COMRAM] unsigned int 
 11178 ;; Auto vars:     Size  Location     Type
 11179 ;;		None
 11180 ;; Return value:  Size  Location     Type
 11181 ;;                  1    wreg      void 
 11182 ;; Registers used:
 11183 ;;		wreg, status,2, status,0
 11184 ;; Tracked objects:
 11185 ;;		On entry : 0/0
 11186 ;;		On exit  : 0/0
 11187 ;;		Unchanged: 0/0
 11188 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11189 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11190 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11191 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11192 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11193 ;;Total ram usage:        4 bytes
 11194 ;; Hardware stack levels used:    1
 11195 ;; This function calls:
 11196 ;;		Nothing
 11197 ;; This function is called by:
 11198 ;;		_main
 11199 ;; This function uses a non-reentrant model
 11200 ;;
 11201                           
 11202                           	psect	text51
 11203  00C16C                     __ptext51:
 11204                           	callstack 0
 11205  00C16C                     _PWM6_LoadDutyValue:
 11206                           	callstack 30
 11207  00C16C                     
 11208                           ;pwm6.c: 77: PWM6DCH = (dutyValue & 0x03FC)>>2;
 11209  00C16C  C001  F003         	movff	PWM6_LoadDutyValue@dutyValue,??_PWM6_LoadDutyValue
 11210  00C170  C002  F004         	movff	PWM6_LoadDutyValue@dutyValue+1,??_PWM6_LoadDutyValue+1
 11211  00C174  90D8               	bcf	status,0,c
 11212  00C176  3204               	rrcf	(??_PWM6_LoadDutyValue+1)^0,f,c
 11213  00C178  3203               	rrcf	??_PWM6_LoadDutyValue^0,f,c
 11214  00C17A  90D8               	bcf	status,0,c
 11215  00C17C  3204               	rrcf	(??_PWM6_LoadDutyValue+1)^0,f,c
 11216  00C17E  3203               	rrcf	??_PWM6_LoadDutyValue^0,f,c
 11217  00C180  5003               	movf	??_PWM6_LoadDutyValue^0,w,c
 11218  00C182  6E69               	movwf	105,c	;volatile
 11219                           
 11220                           ;pwm6.c: 80: PWM6DCL = (dutyValue & 0x0003)<<6;
 11221  00C184  C001  F003         	movff	PWM6_LoadDutyValue@dutyValue,??_PWM6_LoadDutyValue
 11222  00C188  0E03               	movlw	3
 11223  00C18A  1603               	andwf	??_PWM6_LoadDutyValue^0,f,c
 11224  00C18C  0E06               	movlw	6
 11225  00C18E  6E04               	movwf	(??_PWM6_LoadDutyValue+1)^0,c
 11226  00C190                     u4715:
 11227  00C190  90D8               	bcf	status,0,c
 11228  00C192  3603               	rlcf	??_PWM6_LoadDutyValue^0,f,c
 11229  00C194  2E04               	decfsz	(??_PWM6_LoadDutyValue+1)^0,f,c
 11230  00C196  EFC8  F060         	goto	u4715
 11231  00C19A  5003               	movf	??_PWM6_LoadDutyValue^0,w,c
 11232  00C19C  6E68               	movwf	104,c	;volatile
 11233  00C19E  0012               	return		;funcret
 11234  00C1A0                     __end_of_PWM6_LoadDutyValue:
 11235                           	callstack 0
 11236                           
 11237 ;; *************** function _PWM5_LoadDutyValue *****************
 11238 ;; Defined at:
 11239 ;;		line 74 in file "mcc_generated_files/pwm5.c"
 11240 ;; Parameters:    Size  Location     Type
 11241 ;;  dutyValue       2    0[COMRAM] unsigned int 
 11242 ;; Auto vars:     Size  Location     Type
 11243 ;;		None
 11244 ;; Return value:  Size  Location     Type
 11245 ;;                  1    wreg      void 
 11246 ;; Registers used:
 11247 ;;		wreg, status,2, status,0
 11248 ;; Tracked objects:
 11249 ;;		On entry : 0/0
 11250 ;;		On exit  : 0/0
 11251 ;;		Unchanged: 0/0
 11252 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11253 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11254 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11255 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11256 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11257 ;;Total ram usage:        4 bytes
 11258 ;; Hardware stack levels used:    1
 11259 ;; This function calls:
 11260 ;;		Nothing
 11261 ;; This function is called by:
 11262 ;;		_main
 11263 ;; This function uses a non-reentrant model
 11264 ;;
 11265                           
 11266                           	psect	text52
 11267  00C138                     __ptext52:
 11268                           	callstack 0
 11269  00C138                     _PWM5_LoadDutyValue:
 11270                           	callstack 30
 11271  00C138                     
 11272                           ;pwm5.c: 77: PWM5DCH = (dutyValue & 0x03FC)>>2;
 11273  00C138  C001  F003         	movff	PWM5_LoadDutyValue@dutyValue,??_PWM5_LoadDutyValue
 11274  00C13C  C002  F004         	movff	PWM5_LoadDutyValue@dutyValue+1,??_PWM5_LoadDutyValue+1
 11275  00C140  90D8               	bcf	status,0,c
 11276  00C142  3204               	rrcf	(??_PWM5_LoadDutyValue+1)^0,f,c
 11277  00C144  3203               	rrcf	??_PWM5_LoadDutyValue^0,f,c
 11278  00C146  90D8               	bcf	status,0,c
 11279  00C148  3204               	rrcf	(??_PWM5_LoadDutyValue+1)^0,f,c
 11280  00C14A  3203               	rrcf	??_PWM5_LoadDutyValue^0,f,c
 11281  00C14C  5003               	movf	??_PWM5_LoadDutyValue^0,w,c
 11282  00C14E  6E6D               	movwf	109,c	;volatile
 11283                           
 11284                           ;pwm5.c: 80: PWM5DCL = (dutyValue & 0x0003)<<6;
 11285  00C150  C001  F003         	movff	PWM5_LoadDutyValue@dutyValue,??_PWM5_LoadDutyValue
 11286  00C154  0E03               	movlw	3
 11287  00C156  1603               	andwf	??_PWM5_LoadDutyValue^0,f,c
 11288  00C158  0E06               	movlw	6
 11289  00C15A  6E04               	movwf	(??_PWM5_LoadDutyValue+1)^0,c
 11290  00C15C                     u4705:
 11291  00C15C  90D8               	bcf	status,0,c
 11292  00C15E  3603               	rlcf	??_PWM5_LoadDutyValue^0,f,c
 11293  00C160  2E04               	decfsz	(??_PWM5_LoadDutyValue+1)^0,f,c
 11294  00C162  EFAE  F060         	goto	u4705
 11295  00C166  5003               	movf	??_PWM5_LoadDutyValue^0,w,c
 11296  00C168  6E6C               	movwf	108,c	;volatile
 11297  00C16A  0012               	return		;funcret
 11298  00C16C                     __end_of_PWM5_LoadDutyValue:
 11299                           	callstack 0
 11300                           
 11301                           	psect	rparam
 11302  0000                     
 11303                           	psect	idloc
 11304                           
 11305                           ;Config register IDLOC0 @ 0x200000
 11306                           ;	unspecified, using default values
 11307  200000                     	org	2097152
 11308  200000  0FFF               	dw	4095
 11309                           
 11310                           ;Config register IDLOC1 @ 0x200002
 11311                           ;	unspecified, using default values
 11312  200002                     	org	2097154
 11313  200002  0FFF               	dw	4095
 11314                           
 11315                           ;Config register IDLOC2 @ 0x200004
 11316                           ;	unspecified, using default values
 11317  200004                     	org	2097156
 11318  200004  0FFF               	dw	4095
 11319                           
 11320                           ;Config register IDLOC3 @ 0x200006
 11321                           ;	unspecified, using default values
 11322  200006                     	org	2097158
 11323  200006  0FFF               	dw	4095
 11324                           
 11325                           ;Config register IDLOC4 @ 0x200008
 11326                           ;	unspecified, using default values
 11327  200008                     	org	2097160
 11328  200008  0FFF               	dw	4095
 11329                           
 11330                           ;Config register IDLOC5 @ 0x20000A
 11331                           ;	unspecified, using default values
 11332  20000A                     	org	2097162
 11333  20000A  0FFF               	dw	4095
 11334                           
 11335                           ;Config register IDLOC6 @ 0x20000C
 11336                           ;	unspecified, using default values
 11337  20000C                     	org	2097164
 11338  20000C  0FFF               	dw	4095
 11339                           
 11340                           ;Config register IDLOC7 @ 0x20000E
 11341                           ;	unspecified, using default values
 11342  20000E                     	org	2097166
 11343  20000E  0FFF               	dw	4095
 11344                           
 11345                           	psect	config
 11346                           
 11347                           ;Config register CONFIG1L @ 0x300000
 11348                           ;	External Oscillator Selection
 11349                           ;	FEXTOSC = OFF, Oscillator not enabled
 11350                           ;	Reset Oscillator Selection
 11351                           ;	RSTOSC = HFINTOSC_1MHZ, HFINTOSC with HFFRQ = 4 MHz and CDIV = 4:1
 11352  300000                     	org	3145728
 11353  300000  EC                 	db	236
 11354                           
 11355                           ;Config register CONFIG1H @ 0x300001
 11356                           ;	Clock out Enable bit
 11357                           ;	CLKOUTEN = ON, CLKOUT function is enabled
 11358                           ;	PRLOCKED One-Way Set Enable bit
 11359                           ;	PR1WAY = ON, PRLOCK bit can be cleared and set only once
 11360                           ;	Clock Switch Enable bit
 11361                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
 11362                           ;	Fail-Safe Clock Monitor Enable bit
 11363                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
 11364  300001                     	org	3145729
 11365  300001  FE                 	db	254
 11366                           
 11367                           ;Config register CONFIG2L @ 0x300002
 11368                           ;	MCLR Enable bit
 11369                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RE3 pin function is MCLR
 11370                           ;	Power-up timer selection bits
 11371                           ;	PWRTS = PWRT_OFF, PWRT is disabled
 11372                           ;	Multi-vector enable bit
 11373                           ;	MVECEN = OFF, Interrupt contoller does not use vector table to prioritze interrupts
 11374                           ;	IVTLOCK bit One-way set enable bit
 11375                           ;	IVT1WAY = ON, IVTLOCK bit can be cleared and set only once
 11376                           ;	Low Power BOR Enable bit
 11377                           ;	LPBOREN = OFF, ULPBOR disabled
 11378                           ;	Brown-out Reset Enable bits
 11379                           ;	BOREN = SBORDIS, Brown-out Reset enabled , SBOREN bit is ignored
 11380  300002                     	org	3145730
 11381  300002  F7                 	db	247
 11382                           
 11383                           ;Config register CONFIG2H @ 0x300003
 11384                           ;	Brown-out Reset Voltage Selection bits
 11385                           ;	BORV = VBOR_2P45, Brown-out Reset Voltage (VBOR) set to 2.45V
 11386                           ;	ZCD Disable bit
 11387                           ;	ZCD = OFF, ZCD disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCDCON
 11388                           ;	PPSLOCK bit One-Way Set Enable bit
 11389                           ;	PPS1WAY = ON, PPSLOCK bit can be cleared and set only once; PPS registers remain locke
      +                          d after one clear/set cycle
 11390                           ;	Stack Full/Underflow Reset Enable bit
 11391                           ;	STVREN = ON, Stack full/underflow will cause Reset
 11392                           ;	Debugger Enable bit
 11393                           ;	DEBUG = OFF, Background debugger disabled
 11394                           ;	Extended Instruction Set Enable bit
 11395                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
 11396  300003                     	org	3145731
 11397  300003  FF                 	db	255
 11398                           
 11399                           ;Config register CONFIG3L @ 0x300004
 11400                           ;	WDT Period selection bits
 11401                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
 11402                           ;	WDT operating mode
 11403                           ;	WDTE = OFF, WDT Disabled; SWDTEN is ignored
 11404  300004                     	org	3145732
 11405  300004  9F                 	db	159
 11406                           
 11407                           ;Config register CONFIG3H @ 0x300005
 11408                           ;	WDT Window Select bits
 11409                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
 11410                           ;	WDT input clock selector
 11411                           ;	WDTCCS = SC, Software Control
 11412  300005                     	org	3145733
 11413  300005  FF                 	db	255
 11414                           
 11415                           ;Config register CONFIG4L @ 0x300006
 11416                           ;	Boot Block Size selection bits
 11417                           ;	BBSIZE = BBSIZE_512, Boot Block size is 512 words
 11418                           ;	Boot Block enable bit
 11419                           ;	BBEN = OFF, Boot block disabled
 11420                           ;	Storage Area Flash enable bit
 11421                           ;	SAFEN = OFF, SAF disabled
 11422                           ;	Application Block write protection bit
 11423                           ;	WRTAPP = OFF, Application Block not write protected
 11424  300006                     	org	3145734
 11425  300006  FF                 	db	255
 11426                           
 11427                           ;Config register CONFIG4H @ 0x300007
 11428                           ;	Configuration Register Write Protection bit
 11429                           ;	WRTB = OFF, Configuration registers (300000-30000Bh) not write-protected
 11430                           ;	Boot Block Write Protection bit
 11431                           ;	WRTC = OFF, Boot Block (000000-0007FFh) not write-protected
 11432                           ;	Data EEPROM Write Protection bit
 11433                           ;	WRTD = OFF, Data EEPROM not write-protected
 11434                           ;	SAF Write protection bit
 11435                           ;	WRTSAF = OFF, SAF not Write Protected
 11436                           ;	Low Voltage Programming Enable bit
 11437                           ;	LVP = ON, Low voltage programming enabled. MCLR/VPP pin function is MCLR. MCLRE config
      +                          uration bit is ignored
 11438  300007                     	org	3145735
 11439  300007  FF                 	db	255
 11440                           
 11441                           ;Config register CONFIG5L @ 0x300008
 11442                           ;	PFM and Data EEPROM Code Protection bit
 11443                           ;	CP = OFF, PFM and Data EEPROM code protection disabled
 11444  300008                     	org	3145736
 11445  300008  FF                 	db	255
 11446                           
 11447                           ;Config register CONFIG5H @ 0x300009
 11448                           ;	unspecified, using default values
 11449  300009                     	org	3145737
 11450  300009  FF                 	db	255
 11451                           tosu	equ	0x3FFF
 11452                           tosh	equ	0x3FFE
 11453                           tosl	equ	0x3FFD
 11454                           stkptr	equ	0x3FFC
 11455                           pclatu	equ	0x3FFB
 11456                           pclath	equ	0x3FFA
 11457                           pcl	equ	0x3FF9
 11458                           tblptru	equ	0x3FF8
 11459                           tblptrh	equ	0x3FF7
 11460                           tblptrl	equ	0x3FF6
 11461                           tablat	equ	0x3FF5
 11462                           prodh	equ	0x3FF4
 11463                           prodl	equ	0x3FF3
 11464                           indf0	equ	0x3FEF
 11465                           postinc0	equ	0x3FEE
 11466                           postdec0	equ	0x3FED
 11467                           preinc0	equ	0x3FEC
 11468                           plusw0	equ	0x3FEB
 11469                           fsr0h	equ	0x3FEA
 11470                           fsr0l	equ	0x3FE9
 11471                           wreg	equ	0x3FE8
 11472                           indf1	equ	0x3FE7
 11473                           postinc1	equ	0x3FE6
 11474                           postdec1	equ	0x3FE5
 11475                           preinc1	equ	0x3FE4
 11476                           plusw1	equ	0x3FE3
 11477                           fsr1h	equ	0x3FE2
 11478                           fsr1l	equ	0x3FE1
 11479                           bsr	equ	0x3FE0
 11480                           indf2	equ	0x3FDF
 11481                           postinc2	equ	0x3FDE
 11482                           postdec2	equ	0x3FDD
 11483                           preinc2	equ	0x3FDC
 11484                           plusw2	equ	0x3FDB
 11485                           fsr2h	equ	0x3FDA
 11486                           fsr2l	equ	0x3FD9
 11487                           status	equ	0x3FD8

Data Sizes:
    Strings     137
    Constant    220
    Data        0
    BSS         9
    Persistent  8
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     95      95
    BANK0           160    102     119
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0

Pointer List with Targets:

    frexp@eptr	PTR int  size(2) Largest target is 2
		 -> log@exponent(BANK0[2]), floor@expon(COMRAM[2]), 

    eval_poly@d	PTR const  size(2) Largest target is 40
		 -> log@coeff(CODE[36]), exp@coeff(CODE[40]), 

    printf@f	PTR const unsigned char  size(2) Largest target is 48
		 -> STR_8(CODE[7]), STR_7(CODE[9]), STR_6(CODE[9]), STR_5(CODE[14]), 
		 -> STR_4(CODE[48]), STR_3(CODE[48]), STR_2(CODE[48]), STR_1(CODE[18]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    UART2_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART2_DefaultErrorHandler(), 

    UART2_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART2_DefaultOverrunErrorHandler(), 

    UART2_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART2_DefaultFramingErrorHandler(), 

    UART2_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), UART2_DefaultErrorHandler(), 

    UART2_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), UART2_DefaultOverrunErrorHandler(), 

    UART2_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), UART2_DefaultFramingErrorHandler(), 


Critical Paths under _main in COMRAM

    _log->_eval_poly
    _exp->___flsub
    _exp->_eval_poly
    _ldexp->_eval_poly
    _floor->___fladd
    _frexp->___fleq
    _eval_poly->___flmul
    ___fldiv->___flsub
    _printf->_scale
    _scale->___flmul
    ___awdiv->___awmod
    _putch->_UART2_Write
    _fround->___flmul
    ___lwdiv->___lwmod
    ___flmul->___fladd
    ___xxtofl->___fltol
    ___llmod->___lldiv
    ___fltol->___awdiv
    ___flsub->___flmul
    ___fladd->_frexp
    ___fleq->___xxtofl
    _SYSTEM_Initialize->_TMR0_Initialize
    _UART2_Initialize->_UART2_SetErrorHandler
    _UART2_Initialize->_UART2_SetFramingErrorHandler
    _UART2_Initialize->_UART2_SetOverrunErrorHandler

Critical Paths under _main in BANK0

    _main->_pow
    _pow->_exp
    _log->_eval_poly
    _exp->___fldiv
    _ldexp->_eval_poly
    _eval_poly->___flmul
    ___fldiv->___flmul
    _clearPuTTY->_printf
    _buttonResponse->_printf
    _printf->_fround
    _scale->___flmul
    _fround->___flmul
    ___flsub->___flmul

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                36    36      0  201828
                                             70 BANK0     32    32      0
                 _PWM5_LoadDutyValue
                 _PWM6_LoadDutyValue
                 _PWM7_LoadDutyValue
                  _SYSTEM_Initialize
                    _TMR0_WriteTimer
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___flsub
                           ___xxtofl
                     _buttonResponse
                         _clearPuTTY
                                _pow
                             _printf
 ---------------------------------------------------------------------------------
 (1) _pow                                                 21    13      8   69064
                                             49 BANK0     21    13      8
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___fltol
                           ___xxtofl
                                _exp
                                _log
 ---------------------------------------------------------------------------------
 (2) _log                                                  6     2      4   22592
                                             21 BANK0      6     2      4
                            ___fladd
                             ___fleq
                            ___flmul
                           ___xxtofl
                          _eval_poly
                              _frexp
 ---------------------------------------------------------------------------------
 (2) _exp                                                 11     7      4   35827
                                             38 BANK0     11     7      4
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                           ___xxtofl
                          _eval_poly
                              _floor
                              _ldexp
                                _log (ARG)
 ---------------------------------------------------------------------------------
 (3) _ldexp                                                8     2      6    2262
                                             21 BANK0      8     2      6
                             ___fleq
                          _eval_poly (ARG)
 ---------------------------------------------------------------------------------
 (3) _floor                                               10     6      4    8752
                                             74 COMRAM    10     6      4
                            ___fladd
                             ___flge
                            ___fltol
                           ___xxtofl
                              _frexp
 ---------------------------------------------------------------------------------
 (3) _frexp                                                8     2      6    2390
                                             50 COMRAM     8     2      6
                             ___fleq
 ---------------------------------------------------------------------------------
 (3) _eval_poly                                           16     8      8    8870
                                             86 COMRAM     8     0      8
                                             13 BANK0      8     8      0
                            ___fladd
                            ___flmul
 ---------------------------------------------------------------------------------
 (3) ___fldiv                                             25    17      8    1551
                                             13 BANK0     25    17      8
                            ___fladd (ARG)
                            ___flmul (ARG)
                            ___flsub (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _clearPuTTY                                           0     0      0   38007
                             _printf
 ---------------------------------------------------------------------------------
 (1) _buttonResponse                                       1     1      0   38326
                                             59 BANK0      1     1      0
                 _DELAY_milliseconds
             _poll_switch1_for_edges
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                              45    35     10   38007
                                             22 BANK0     37    27     10
                            ___awdiv
                            ___fladd
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                            ___lldiv
                            ___llmod
                             ___wmul
                           ___xxtofl
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                              _putch
                              _scale
 ---------------------------------------------------------------------------------
 (2) _scale                                                9     5      4    8077
                                             86 COMRAM     9     5      4
                            ___awdiv
                            ___awmod
                            ___flmul
                            ___fltol (ARG)
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              6     2      4    1208
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4    1364
                                              6 COMRAM     8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) _putch                                                1     1      0      44
                                              1 COMRAM     1     1      0
                        _UART2_Write
 ---------------------------------------------------------------------------------
 (3) _UART2_Write                                          1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _fround                                              13     9      4    6540
                                             86 COMRAM     4     0      4
                                             13 BANK0      9     9      0
                            ___fladd (ARG)
                            ___flmul
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              5     1      4     615
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     618
                                              5 COMRAM     7     3      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             25    17      8    5062
                                             74 COMRAM    12     4      8
                                              0 BANK0     13    13      0
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___fladd (ARG)
                            ___fltol (ARG)
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
                           ___xxtofl (ARG)
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (2) __tdiv_to_l_                                         17     9      8     455
                                              0 COMRAM    17     9      8
 ---------------------------------------------------------------------------------
 (2) __div_to_l_                                          14     6      8     455
                                              0 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     930
                                             24 COMRAM    14    10      4
                            ___fltol (ARG)
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     311
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___llmod                                              9     1      8     767
                                             13 COMRAM     9     1      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8     618
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             10     6      4     685
                                             14 COMRAM    10     6      4
                            ___awdiv (ARG)
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flsub                                              8     0      8    3801
                                             86 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             16     8      8    3174
                                             58 COMRAM    16     8      8
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
                           ___xxtofl (ARG)
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flneg                                              4     0      4     349
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8    1246
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (2) ___fleq                                              12     4      8    1862
                                             38 COMRAM    12     4      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) _poll_switch1_for_edges                               4     2      2     145
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) _DELAY_milliseconds                                   3     1      2     174
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (1) _TMR0_WriteTimer                                      2     0      2     500
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     294
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _PWM5_Initialize
                    _PWM6_Initialize
                    _PWM7_Initialize
                    _TMR0_Initialize
                    _TMR2_Initialize
                    _TMR4_Initialize
                   _UART2_Initialize
 ---------------------------------------------------------------------------------
 (2) _UART2_Initialize                                     0     0      0     294
              _UART2_SetErrorHandler
       _UART2_SetFramingErrorHandler
       _UART2_SetOverrunErrorHandler
 ---------------------------------------------------------------------------------
 (3) _UART2_SetOverrunErrorHandler                         2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _UART2_SetFramingErrorHandler                         2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _UART2_SetErrorHandler                                2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR4_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _PWM7_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM6_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM5_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWM7_LoadDutyValue                                   4     2      2     880
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _PWM6_LoadDutyValue                                   4     2      2     956
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _PWM5_LoadDutyValue                                   4     2      2     956
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _PWM5_LoadDutyValue
   _PWM6_LoadDutyValue
   _PWM7_LoadDutyValue
   _SYSTEM_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _PWM5_Initialize
     _PWM6_Initialize
     _PWM7_Initialize
     _TMR0_Initialize
     _TMR2_Initialize
     _TMR4_Initialize
     _UART2_Initialize
       _UART2_SetErrorHandler
       _UART2_SetFramingErrorHandler
       _UART2_SetOverrunErrorHandler
   _TMR0_WriteTimer
   ___fladd
     ___lwdiv (ARG)
       ___lwmod (ARG)
     ___lwmod (ARG)
     ___xxtofl (ARG)
       ___fltol (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
     _frexp (ARG)
       ___fleq
         ___xxtofl (ARG)
           ___fltol (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
   ___fldiv
     ___fladd (ARG)
       ___lwdiv (ARG)
         ___lwmod (ARG)
       ___lwmod (ARG)
       ___xxtofl (ARG)
         ___fltol (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       _frexp (ARG)
         ___fleq
           ___xxtofl (ARG)
             ___fltol (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
     ___flmul (ARG)
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___fladd (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
           ___fltol (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         _frexp (ARG)
           ___fleq
             ___xxtofl (ARG)
               ___fltol (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
       ___fltol (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
       ___lwdiv (ARG)
         ___lwmod (ARG)
       ___lwmod (ARG)
       ___xxtofl (ARG)
         ___fltol (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       _frexp (ARG)
         ___fleq
           ___xxtofl (ARG)
             ___fltol (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
     ___flsub (ARG)
       ___fladd
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
           ___fltol (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         _frexp (ARG)
           ___fleq
             ___xxtofl (ARG)
               ___fltol (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
       ___flmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___fladd (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
             ___fltol (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           _frexp (ARG)
             ___fleq
               ___xxtofl (ARG)
                 ___fltol (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
         ___fltol (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
           ___fltol (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         _frexp (ARG)
           ___fleq
             ___xxtofl (ARG)
               ___fltol (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
       ___xxtofl (ARG)
         ___fltol (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
     ___xxtofl (ARG)
       ___fltol (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
   ___flmul
     ___awdiv (ARG)
       ___awmod (ARG)
     ___awmod (ARG)
     ___fladd (ARG)
       ___lwdiv (ARG)
         ___lwmod (ARG)
       ___lwmod (ARG)
       ___xxtofl (ARG)
         ___fltol (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       _frexp (ARG)
         ___fleq
           ___xxtofl (ARG)
             ___fltol (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
     ___fltol (ARG)
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
     ___lwdiv (ARG)
       ___lwmod (ARG)
     ___lwmod (ARG)
     ___xxtofl (ARG)
       ___fltol (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
     _frexp (ARG)
       ___fleq
         ___xxtofl (ARG)
           ___fltol (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
   ___flsub
     ___fladd
       ___lwdiv (ARG)
         ___lwmod (ARG)
       ___lwmod (ARG)
       ___xxtofl (ARG)
         ___fltol (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       _frexp (ARG)
         ___fleq
           ___xxtofl (ARG)
             ___fltol (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
     ___flmul (ARG)
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___fladd (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
           ___fltol (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         _frexp (ARG)
           ___fleq
             ___xxtofl (ARG)
               ___fltol (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
       ___fltol (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
       ___lwdiv (ARG)
         ___lwmod (ARG)
       ___lwmod (ARG)
       ___xxtofl (ARG)
         ___fltol (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       _frexp (ARG)
         ___fleq
           ___xxtofl (ARG)
             ___fltol (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
     ___xxtofl (ARG)
       ___fltol (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
   ___xxtofl
     ___fltol (ARG)
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
   _buttonResponse
     _DELAY_milliseconds
     _poll_switch1_for_edges
     _printf
       ___awdiv
         ___awmod (ARG)
       ___fladd
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
           ___fltol (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         _frexp (ARG)
           ___fleq
             ___xxtofl (ARG)
               ___fltol (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
       ___fleq
         ___xxtofl (ARG)
           ___fltol (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___flge
       ___flmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___fladd (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
             ___fltol (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           _frexp (ARG)
             ___fleq
               ___xxtofl (ARG)
                 ___fltol (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
         ___fltol (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
           ___fltol (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         _frexp (ARG)
           ___fleq
             ___xxtofl (ARG)
               ___fltol (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
       ___flneg
       ___flsub
         ___fladd
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
             ___fltol (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           _frexp (ARG)
             ___fleq
               ___xxtofl (ARG)
                 ___fltol (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
         ___flmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fladd (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
             ___xxtofl (ARG)
               ___fltol (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             _frexp (ARG)
               ___fleq
                 ___xxtofl (ARG)
                   ___fltol (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
           ___fltol (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
             ___fltol (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           _frexp (ARG)
             ___fleq
               ___xxtofl (ARG)
                 ___fltol (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
         ___xxtofl (ARG)
           ___fltol (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___fltol
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
       ___lldiv
       ___llmod
         ___lldiv (ARG)
       ___wmul
       ___xxtofl
         ___fltol (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       __div_to_l_
       __tdiv_to_l_
       _fround
         ___fladd (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
             ___fltol (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           _frexp (ARG)
             ___fleq
               ___xxtofl (ARG)
                 ___fltol (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
         ___flmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fladd (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
             ___xxtofl (ARG)
               ___fltol (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             _frexp (ARG)
               ___fleq
                 ___xxtofl (ARG)
                   ___fltol (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
           ___fltol (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
             ___fltol (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           _frexp (ARG)
             ___fleq
               ___xxtofl (ARG)
                 ___fltol (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
       _putch
         _UART2_Write
       _scale
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fladd (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
             ___xxtofl (ARG)
               ___fltol (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             _frexp (ARG)
               ___fleq
                 ___xxtofl (ARG)
                   ___fltol (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
           ___fltol (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
             ___fltol (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           _frexp (ARG)
             ___fleq
               ___xxtofl (ARG)
                 ___fltol (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
         ___fltol (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
   _clearPuTTY
     _printf
       ___awdiv
         ___awmod (ARG)
       ___fladd
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
           ___fltol (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         _frexp (ARG)
           ___fleq
             ___xxtofl (ARG)
               ___fltol (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
       ___fleq
         ___xxtofl (ARG)
           ___fltol (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___flge
       ___flmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___fladd (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
             ___fltol (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           _frexp (ARG)
             ___fleq
               ___xxtofl (ARG)
                 ___fltol (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
         ___fltol (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
           ___fltol (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         _frexp (ARG)
           ___fleq
             ___xxtofl (ARG)
               ___fltol (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
       ___flneg
       ___flsub
         ___fladd
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
             ___fltol (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           _frexp (ARG)
             ___fleq
               ___xxtofl (ARG)
                 ___fltol (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
         ___flmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fladd (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
             ___xxtofl (ARG)
               ___fltol (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             _frexp (ARG)
               ___fleq
                 ___xxtofl (ARG)
                   ___fltol (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
           ___fltol (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
             ___fltol (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           _frexp (ARG)
             ___fleq
               ___xxtofl (ARG)
                 ___fltol (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
         ___xxtofl (ARG)
           ___fltol (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___fltol
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
       ___lldiv
       ___llmod
         ___lldiv (ARG)
       ___wmul
       ___xxtofl
         ___fltol (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       __div_to_l_
       __tdiv_to_l_
       _fround
         ___fladd (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
             ___fltol (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           _frexp (ARG)
             ___fleq
               ___xxtofl (ARG)
                 ___fltol (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
         ___flmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fladd (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
             ___xxtofl (ARG)
               ___fltol (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             _frexp (ARG)
               ___fleq
                 ___xxtofl (ARG)
                   ___fltol (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
           ___fltol (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
             ___fltol (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           _frexp (ARG)
             ___fleq
               ___xxtofl (ARG)
                 ___fltol (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
       _putch
         _UART2_Write
       _scale
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fladd (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
             ___xxtofl (ARG)
               ___fltol (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             _frexp (ARG)
               ___fleq
                 ___xxtofl (ARG)
                   ___fltol (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
           ___fltol (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
             ___fltol (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           _frexp (ARG)
             ___fleq
               ___xxtofl (ARG)
                 ___fltol (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
         ___fltol (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
   _pow
     ___fleq
       ___xxtofl (ARG)
         ___fltol (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
     ___flge
     ___flmul
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___fladd (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
           ___fltol (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         _frexp (ARG)
           ___fleq
             ___xxtofl (ARG)
               ___fltol (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
       ___fltol (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
       ___lwdiv (ARG)
         ___lwmod (ARG)
       ___lwmod (ARG)
       ___xxtofl (ARG)
         ___fltol (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       _frexp (ARG)
         ___fleq
           ___xxtofl (ARG)
             ___fltol (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
     ___flneg
     ___fltol
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
     ___xxtofl
       ___fltol (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
     _exp
       ___fldiv
         ___fladd (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
             ___fltol (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           _frexp (ARG)
             ___fleq
               ___xxtofl (ARG)
                 ___fltol (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
         ___flmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fladd (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
             ___xxtofl (ARG)
               ___fltol (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             _frexp (ARG)
               ___fleq
                 ___xxtofl (ARG)
                   ___fltol (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
           ___fltol (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
             ___fltol (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           _frexp (ARG)
             ___fleq
               ___xxtofl (ARG)
                 ___fltol (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
         ___flsub (ARG)
           ___fladd
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
             ___xxtofl (ARG)
               ___fltol (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             _frexp (ARG)
               ___fleq
                 ___xxtofl (ARG)
                   ___fltol (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fladd (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
               ___xxtofl (ARG)
                 ___fltol (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               _frexp (ARG)
                 ___fleq
                   ___xxtofl (ARG)
                     ___fltol (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
             ___fltol (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
             ___xxtofl (ARG)
               ___fltol (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             _frexp (ARG)
               ___fleq
                 ___xxtofl (ARG)
                   ___fltol (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
           ___xxtofl (ARG)
             ___fltol (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___xxtofl (ARG)
           ___fltol (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___fleq
         ___xxtofl (ARG)
           ___fltol (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___flge
       ___flmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___fladd (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
             ___fltol (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           _frexp (ARG)
             ___fleq
               ___xxtofl (ARG)
                 ___fltol (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
         ___fltol (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
           ___fltol (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         _frexp (ARG)
           ___fleq
             ___xxtofl (ARG)
               ___fltol (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
       ___flneg
       ___flsub
         ___fladd
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
             ___fltol (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           _frexp (ARG)
             ___fleq
               ___xxtofl (ARG)
                 ___fltol (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
         ___flmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fladd (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
             ___xxtofl (ARG)
               ___fltol (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             _frexp (ARG)
               ___fleq
                 ___xxtofl (ARG)
                   ___fltol (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
           ___fltol (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
             ___fltol (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           _frexp (ARG)
             ___fleq
               ___xxtofl (ARG)
                 ___fltol (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
         ___xxtofl (ARG)
           ___fltol (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___fltol
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
       ___xxtofl
         ___fltol (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       _eval_poly
         ___fladd
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
             ___fltol (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           _frexp (ARG)
             ___fleq
               ___xxtofl (ARG)
                 ___fltol (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fladd (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
             ___xxtofl (ARG)
               ___fltol (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             _frexp (ARG)
               ___fleq
                 ___xxtofl (ARG)
                   ___fltol (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
           ___fltol (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
             ___fltol (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           _frexp (ARG)
             ___fleq
               ___xxtofl (ARG)
                 ___fltol (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
       _floor
         ___fladd
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
             ___fltol (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           _frexp (ARG)
             ___fleq
               ___xxtofl (ARG)
                 ___fltol (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
         ___flge
         ___fltol
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         ___xxtofl
           ___fltol (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         _frexp
           ___fleq
             ___xxtofl (ARG)
               ___fltol (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
       _ldexp
         ___fleq
           ___xxtofl (ARG)
             ___fltol (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         _eval_poly (ARG)
           ___fladd
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
             ___xxtofl (ARG)
               ___fltol (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             _frexp (ARG)
               ___fleq
                 ___xxtofl (ARG)
                   ___fltol (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fladd (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
               ___xxtofl (ARG)
                 ___fltol (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               _frexp (ARG)
                 ___fleq
                   ___xxtofl (ARG)
                     ___fltol (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
             ___fltol (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
             ___xxtofl (ARG)
               ___fltol (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             _frexp (ARG)
               ___fleq
                 ___xxtofl (ARG)
                   ___fltol (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
       _log (ARG)
         ___fladd
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
             ___fltol (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           _frexp (ARG)
             ___fleq
               ___xxtofl (ARG)
                 ___fltol (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
         ___fleq
           ___xxtofl (ARG)
             ___fltol (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fladd (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
             ___xxtofl (ARG)
               ___fltol (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             _frexp (ARG)
               ___fleq
                 ___xxtofl (ARG)
                   ___fltol (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
           ___fltol (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
             ___fltol (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           _frexp (ARG)
             ___fleq
               ___xxtofl (ARG)
                 ___fltol (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
         ___xxtofl
           ___fltol (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         _eval_poly
           ___fladd
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
             ___xxtofl (ARG)
               ___fltol (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             _frexp (ARG)
               ___fleq
                 ___xxtofl (ARG)
                   ___fltol (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fladd (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
               ___xxtofl (ARG)
                 ___fltol (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               _frexp (ARG)
                 ___fleq
                   ___xxtofl (ARG)
                     ___fltol (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
             ___fltol (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
             ___xxtofl (ARG)
               ___fltol (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             _frexp (ARG)
               ___fleq
                 ___xxtofl (ARG)
                   ___fltol (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
         _frexp
           ___fleq
             ___xxtofl (ARG)
               ___fltol (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
     _log
       ___fladd
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
           ___fltol (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         _frexp (ARG)
           ___fleq
             ___xxtofl (ARG)
               ___fltol (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
       ___fleq
         ___xxtofl (ARG)
           ___fltol (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___flmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___fladd (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
             ___fltol (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           _frexp (ARG)
             ___fleq
               ___xxtofl (ARG)
                 ___fltol (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
         ___fltol (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
           ___fltol (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         _frexp (ARG)
           ___fleq
             ___xxtofl (ARG)
               ___fltol (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
       ___xxtofl
         ___fltol (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       _eval_poly
         ___fladd
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
             ___fltol (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           _frexp (ARG)
             ___fleq
               ___xxtofl (ARG)
                 ___fltol (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fladd (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
             ___xxtofl (ARG)
               ___fltol (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             _frexp (ARG)
               ___fleq
                 ___xxtofl (ARG)
                   ___fltol (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
           ___fltol (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
             ___fltol (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           _frexp (ARG)
             ___fleq
               ___xxtofl (ARG)
                 ___fltol (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
       _frexp
         ___fleq
           ___xxtofl (ARG)
             ___fltol (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
   _printf
     ___awdiv
       ___awmod (ARG)
     ___fladd
       ___lwdiv (ARG)
         ___lwmod (ARG)
       ___lwmod (ARG)
       ___xxtofl (ARG)
         ___fltol (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       _frexp (ARG)
         ___fleq
           ___xxtofl (ARG)
             ___fltol (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
     ___fleq
       ___xxtofl (ARG)
         ___fltol (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
     ___flge
     ___flmul
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___fladd (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
           ___fltol (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         _frexp (ARG)
           ___fleq
             ___xxtofl (ARG)
               ___fltol (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
       ___fltol (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
       ___lwdiv (ARG)
         ___lwmod (ARG)
       ___lwmod (ARG)
       ___xxtofl (ARG)
         ___fltol (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       _frexp (ARG)
         ___fleq
           ___xxtofl (ARG)
             ___fltol (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
     ___flneg
     ___flsub
       ___fladd
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
           ___fltol (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         _frexp (ARG)
           ___fleq
             ___xxtofl (ARG)
               ___fltol (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
       ___flmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___fladd (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
             ___fltol (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           _frexp (ARG)
             ___fleq
               ___xxtofl (ARG)
                 ___fltol (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
         ___fltol (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
           ___fltol (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         _frexp (ARG)
           ___fleq
             ___xxtofl (ARG)
               ___fltol (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
       ___xxtofl (ARG)
         ___fltol (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
     ___fltol
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
     ___lldiv
     ___llmod
       ___lldiv (ARG)
     ___wmul
     ___xxtofl
       ___fltol (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
     __div_to_l_
     __tdiv_to_l_
     _fround
       ___fladd (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
           ___fltol (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         _frexp (ARG)
           ___fleq
             ___xxtofl (ARG)
               ___fltol (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
       ___flmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___fladd (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
             ___fltol (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           _frexp (ARG)
             ___fleq
               ___xxtofl (ARG)
                 ___fltol (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
         ___fltol (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
           ___fltol (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         _frexp (ARG)
           ___fleq
             ___xxtofl (ARG)
               ___fltol (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
       ___lwdiv (ARG)
         ___lwmod (ARG)
       ___lwmod (ARG)
     _putch
       _UART2_Write
     _scale
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___flmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___fladd (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
             ___fltol (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           _frexp (ARG)
             ___fleq
               ___xxtofl (ARG)
                 ___fltol (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
         ___fltol (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
           ___fltol (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         _frexp (ARG)
           ___fleq
             ___xxtofl (ARG)
               ___fltol (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
       ___fltol (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             FFF      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK15          100      0       0      30        0.0%
BANK15             100      0       0      31        0.0%
BITBANK14          100      0       0      28        0.0%
BANK14             100      0       0      29        0.0%
BITBANK13          100      0       0      36        0.0%
BANK13             100      0       0      27        0.0%
BITBANK12          100      0       0      35        0.0%
BANK12             100      0       0      26        0.0%
BITBANK11          100      0       0      34        0.0%
BANK11             100      0       0      25        0.0%
BITBANK10          100      0       0      33        0.0%
BANK10             100      0       0      24        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     66      77       5       74.4%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5F      5F       1      100.0%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      D6      32        0.0%
DATA                 0      0      D6       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.30 build 20200825195618 
Symbol Table                                                                                   Thu Dec 03 15:25:29 2020

                                ___fldiv@aexp 0085                                  ___fldiv@bexp 0084  
                                ___fldiv@sign 007D                                            l17 C136  
                                          l29 BF98                                            l90 C084  
                                          l84 C0AE                                            l87 BFC2  
                                          l98 C106                                  ___awdiv@sign 000C  
                         ___wmul@multiplicand 0003                   __size_of_PWM6_LoadDutyValue 0034  
                                         l202 C6EA                                           l312 BF82  
                                         l315 BF6E                                           l309 BF78  
                                         l326 BFDA                                           l262 C2AE  
                                         l423 C042                                           l329 C16A  
                                         l291 C024                                           l356 C060  
                                         l540 F224                                           l550 F320  
                                         l711 C0D8                                           l288 C00E  
                                         l544 F27E                                           l297 BF8C  
                                         l617 C486                                           l474 BFF2  
                                         l554 F392                                           l491 C1D2  
                                         l563 F462                                           l644 EA56  
                                         l708 FE92                                           l477 C19E  
                                         l637 DDB6                                           l559 F408  
                                         l488 C00A                                           l584 C402  
                                         l745 C642                                           l577 C59E  
                                         l738 C632                                           l691 FB54  
                                         l942 C908                                           l955 C844  
                                         l965 D0CC                                           l990 CAE4  
                                         l974 D0BC                                           l983 C794  
                                         l994 C20A                                           l989 CA9E  
                                         _PR2 003FAB                                           _PR4 003F9F  
                  __end_of_DELAY_milliseconds C108                                           _exp D7D6  
                                         _log D224                                           _pow D576  
                     __size_of_PMD_Initialize 0024                                  ___awmod@sign 0006  
                             _TMR2_Initialize C026                                           wreg 003FE8  
                                ___flmul@aexp 0065                                  ___flmul@bexp 0066  
                                ___flmul@sign 0060                                  ___flmul@temp 006B  
                                ___flmul@prod 0067                                  ___fltol@exp1 0018  
                                        l1017 CBEA                                          l1303 C250  
                                        l1231 C386                                          l1160 C50E  
                                        l1224 C37E                                          l1320 DF76  
                                        l1153 C4FE                                          l1241 C312  
                                        l1402 D50C                                          l1074 D222  
                                        l1234 C30A                                          l1083 D212  
                                        l1315 E152                                          l1076 D168  
                                        l1261 EC46                                          l1077 D19A  
                                        l1317 DFB2                                          l1270 EF16  
                                        l1262 EC34                                          l1326 DFF8  
                                        l1414 D5EA                                          l1263 EBFA  
                                        l1351 E5A2                                          l1415 D7D4  
                                        l1328 E070                                          l4001 C2F6  
                                        l1329 E05E                                          l1354 E434  
                                        l4011 D3E2                                          l1347 E21A  
                                        l4003 C2FE                                          l1435 DABC  
                                        l1419 D7C4                                          l1364 E564  
                                        l1356 E4AC                                          l4021 D45A  
                                        l4013 D428                                          l1357 E49A  
                                        l4005 C304                                          l4101 E5B4  
                                        l1445 CCF8                                          l1461 C9E0  
                                        l1453 CF80                                          l1278 ED60  
                                        l1446 CD08                                          l1287 EE30  
                                        l4031 D4E2                                          l4023 D466  
                                        l1391 D574                                          l4015 D43E  
                                        l4007 D3C4                                          l4111 E71A  
                                        l4103 E5CA                                          l1455 CF70  
                                        l1439 DAAC                                          l1288 EE1E  
                                        l4041 D520                                          l4033 D4EE  
                                        l4025 D498                                          l4009 D3D4  
                                        l4121 E81C                                          l1465 CE40  
                                        l5001 F178                                          l4043 D544  
                                        l4035 D4FC                                          l4027 D49A  
                                        l1395 D4B0                                          l4019 D452  
                                        l4211 CFEA                                          l4115 E7CE  
                                        l1483 D3C0                                          l5011 F1B0  
                                        l5003 F184                                          l1388 D418  
                                        l3501 EA94                                          l4045 D554  
                                        l4037 D51A                                          l4029 D4A6  
                                        l4221 D012                                          l4213 CFFA  
                                        l4205 CFC6                                          l4133 EA20  
                                        l4109 E706                                          l4301 DE26  
                                        l4061 C964                                          l4053 C90A  
                                        l5101 F418                                          l5021 F1E6  
                                        l5013 F1BC                                          l5005 F190  
                                        l3511 EAC4                                          l3503 EAA4  
                                        l4047 D562                                          l4039 D51C  
                                        l4231 D052                                          l4223 D030  
                                        l4215 CFFE                                          l4207 CFC8  
                                        l4151 D130                                          l4143 D106  
                                        l4127 E958                                          l4119 E808  
                                        l4311 DE5C                                          l4303 DE2C  
                                        l4063 C9B2                                          l4055 C93C  
                                        l5103 F430                                          l5023 F1F2  
                                        l5015 F1CA                                          l5007 F1A0  
                                        l4073 BF70                                          l3601 EC96  
                                        l3521 EAEE                                          l3513 EAD6  
                                        l3505 EAA6                                          l4049 D564  
                                        l4241 D082                                          l4233 D060  
                                        l4225 D040                                          l4217 D004  
                                        l4209 CFD8                                          l4161 D164  
                                        l4153 D13E                                          l4137 D0CE  
                                        l4081 DAC2                                          l4129 E96C  
                                        l4401 E112                                          l4321 DE9C  
                                        l4313 DE6C                                          l4305 DE3A  
                                        l4065 C9C6                                          l4057 C950  
                                        l5121 F4A2                                          l5113 F476  
                                        l5105 F434                                          l5041 F264  
                                        l5033 F234                                          l5025 F1F6  
                                        l5017 F1CE                                          l5009 F1A4  
                                        l4075 BF7A                                          l3611 ECC4  
                                        l3603 ECA4                                          l3523 EAFE  
                                        l3531 EB28                                          l3515 EAD8  
                                        l3507 EAAE                                          l4251 D0AC  
                                        l4243 D08C                                          l4227 D042  
                                        l4219 D008                                          l4171 D1A8  
                                        l4163 D172                                          l4155 D14A  
                                        l4139 D0F2                                          l4091 DC68  
                                        l4083 DAD4                                          l4411 E148  
                                        l4403 E12E                                          l4323 DEAC  
                                        l4331 DECC                                          l4315 DE6E  
                                        l4307 DE3C                                          l4067 C9CE  
                                        l5123 F4A6                                          l5115 F47A  
                                        l5107 F444                                          l5051 F2AE  
                                        l5035 F24C                                          l5027 F206  
                                        l5019 F1DA                                          l4077 BF66  
                                        l3621 ED30                                          l3613 ECCE  
                                        l3605 ECB0                                          l3541 EB60  
                                        l3533 EB38                                          l3525 EB0E  
                                        l3517 EADE                                          l3509 EABE  
                                        l4421 C21C                                          l4261 C5B0  
                                        l4253 C0B0                                          l4229 D04C  
                                        l4181 D1D8                                          l4173 D1B6  
                                        l4165 D18C                                          l4157 D15A  
                                        l4149 D12E                                          l3701 E182  
                                        l4405 E132                                          l4341 DF0A  
                                        l4333 DEDC                                          l4325 DEB4  
                                        l4309 DE4C                                          l4317 DE76  
                                        l4069 C9D0                                          l5125 F4B2  
                                        l5117 F486                                          l5109 F448  
                                        l5061 F2F2                                          l5053 F2BE  
                                        l5045 F292                                          l5037 F250  
                                        l5029 F20A                                          l5133 F4F6  
                                        l3471 C6EC                                          l3623 ED40  
                                        l3607 ECB4                                          l3615 ECD4  
                                        l3551 EB74                                          l3543 EB64  
                                        l3535 EB4A                                          l3527 EB1E  
                                        l3519 EAEC                                          l4271 C5F2  
                                        l4263 C5C6                                          l4255 C0D0  
                                        l4239 D078                                          l4191 D202  
                                        l4183 D1E2                                          l4167 D198  
                                        l4159 D15E                                          l3711 E1BE  
                                        l3703 E192                                          l4095 DD5C  
                                        l4079 BF86                                          l4407 E140  
                                        l4351 DF52                                          l4343 DF1A  
                                        l4335 DEDC                                          l4327 DEB8  
                                        l4319 DE86                                          l4511 CE30  
                                        l5207 F50E                                          l5127 F4BE  
                                        l5119 F492                                          l5071 F334  
                                        l5063 F302                                          l5055 F2C2  
                                        l5047 F296                                          l5039 F260  
                                        l4521 C132                                          l3481 C78C  
                                        l3473 C71A                                          l4425 C1D4  
                                        l3641 EDC2                                          l3633 ED9A  
                                        l3617 ECFA                                          l3625 ED50  
                                        l3609 ECC2                                          l3561 EB88  
                                        l3553 EB78                                          l3545 EB68  
                                        l3537 EB58                                          l3529 EB20  
                                        l4273 C610                                          l4265 C5CE  
                                        l4441 C4C0                                          l4433 C488  
                                        l4249 D0A0                                          l4193 CF82  
                                        l4169 D1A2                                          l3801 E504  
                                        l3721 E1F4                                          l3713 E1C4  
                                        l3705 E1A2                                          l4089 DC58  
                                        l4601 F606                                          l4409 E146  
                                        l4361 DFA0                                          l4353 DF66  
                                        l4345 DF2A                                          l4281 DDB8  
                                        l4505 CDF2                                          l5129 F4CE  
                                        l5081 F378                                          l5073 F340  
                                        l5065 F306                                          l5057 F2CE  
                                        l5049 F2A2                                          l4531 C6BE  
                                        l4523 C062                                          l4515 C108  
                                        l3483 C792                                          l3475 C72A  
                                        l4427 C1EA                                          l3643 EDCA  
                                        l3635 EDA4                                          l3627 ED76  
                                        l3619 ED2E                                          l3651 EDEE  
                                        l3571 EB9C                                          l3563 EB8C  
                                        l3555 EB7C                                          l3547 EB6C  
                                        l3539 EB5C                                          l3491 EA58  
                                        l4419 C20C                                          l4275 C620  
                                        l4267 C5DA                                          l4259 C5A0  
                                        l4443 C4DE                                          l4435 C49E  
                                        l4195 CF98                                          l4179 D1CE  
                                        l3811 E578                                          l3803 E51E  
                                        l3723 E204                                          l3715 E1D2  
                                        l3707 E1A8                                          l4099 E5A6  
                                        l4611 F65A                                          l4603 F618  
                                        l4371 DFE8                                          l4363 DFB0  
                                        l4355 DF74                                          l4347 DF3A  
                                        l4339 DEF0                                          l4291 DDF6  
                                        l4283 DDC6                                          l4451 CE5E  
                                        l5091 F3D6                                          l5075 F360  
                                        l5059 F2EE                                          l4541 C6CC  
                                        l4533 C6C0                                          l4525 C644  
                                        l4517 C114                                          l3477 C758  
                                        l4429 C1FA                                          l3661 EE40  
                                        l3653 EDF2                                          l3645 EDCE  
                                        l3637 EDB2                                          l3629 ED86  
                                        l3581 EC14                                          l3573 EBC6  
                                        l3565 EB90                                          l3557 EB80  
                                        l3549 EB70                                          l3493 EA64  
                                        l4277 C622                                          l4269 C5E8  
                                        l4445 C4EE                                          l4437 C4A6  
                                        l4189 D1F6                                          l3813 E586  
                                        l3805 E532                                          l3741 E28E  
                                        l3733 E24E                                          l3725 E20A  
                                        l3717 E1D4                                          l3709 E1B8  
                                        l4701 FB0E                                          l4621 F6CE  
                                        l4613 F67E                                          l4605 F620  
                                        l4381 E028                                          l4373 DFF6  
                                        l4365 DFC2                                          l4357 DF80  
                                        l4349 DF42                                          l4293 DE06  
                                        l4285 DDD4                                          l4453 CE6C  
                                        l4509 CE06                                          l5093 F3DA  
                                        l5085 F3A6                                          l5077 F364  
                                        l5069 F330                                          l4543 C6CE  
                                        l4535 C6C2                                          l4527 C65C  
                                        l4519 C12E                                          l4551 C044  
                                        l3479 C768                                          l3911 CA5E  
                                        l3903 C9E2                                          l3671 EEA6  
                                        l3663 EE4C                                          l3655 EE00  
                                        l3647 EDDE                                          l3639 EDB4  
                                        l3591 EC54                                          l3583 EC18  
                                        l3575 EBE2                                          l3567 EB94  
                                        l3559 EB84                                          l3495 EA72  
                                        l4279 C62C                                          l4447 C4F8  
                                        l4439 C4B2                                          l4199 CFAC  
                                        l3815 E588                                          l3807 E54C  
                                        l3751 E2E0                                          l3743 E2AA  
                                        l3735 E25E                                          l3727 E22A  
                                        l3719 E1E4                                          l3487 C00E  
                                        l3831 C864                                          l3823 C846  
                                        l4711 FB60                                          l4703 FB16  
                                        l4631 F722                                          l4623 F6D4  
                                        l4615 F684                                          l4607 F644  
                                        l4391 E09A                                          l4383 E056  
                                        l4367 DFD8                                          l4375 E008  
                                        l4359 DF9E                                          l4295 DE08  
                                        l4287 DDD6                                          l4455 CE7A  
                                        l4463 CEA2                                          l5095 F3EA  
                                        l5087 F3AA                                          l5079 F374  
                                        l4545 C6D0                                          l4537 C6C4  
                                        l4529 C67C                                          l4561 BFF4  
                                        l4553 C058                                          l3921 CAE2  
                                        l3913 CA6C                                          l3905 CA10  
                                        l3681 EEEE                                          l3673 EEB6  
                                        l3665 EE5A                                          l3657 EE16  
                                        l3649 EDE0                                          l3593 EC64  
                                        l3585 EC26                                          l3577 EBF2  
                                        l3569 EB98                                          l3497 EA74  
                                        l3809 E568                                          l3817 E58E  
                                        l3761 E33E                                          l3753 E2F0  
                                        l3745 E2B6                                          l3737 E268  
                                        l3729 E23A                                          l3489 C01E  
                                        l3841 C898                                          l3833 C872  
                                        l3825 C84A                                          l4721 FC34  
                                        l4713 FB70                                          l4705 FB30  
                                        l4641 F7DE                                          l4633 F73A  
                                        l4625 F6F0                                          l4617 F68C  
                                        l4609 F64C                                          l4393 E0C4  
                                        l4377 E016                                          l4369 DFDE  
                                        l4289 DDE6                                          l4297 DE10  
                                        l4473 CBEC                                          l4465 CEB8  
                                        l4449 CE42                                          l4481 CD3C  
                                        l4801 D350                                          l5097 F3EE  
                                        l5089 F3B6                                          l4547 BFAC  
                                        l4539 C6CA                                          l4555 BFC4  
                                        l4571 C2A8                                          l4563 C252  
                                        l3915 CA7E                                          l3907 CA20  
                                        l3683 EEF0                                          l3675 EED6  
                                        l3667 EE94                                          l3587 EC28  
                                        l3579 EC08                                          l3499 EA84  
                                        l3931 CB10                                          l3819 E592  
                                        l3771 E3EE                                          l3763 E35E  
                                        l3755 E300                                          l3747 E2C2  
                                        l3739 E282                                          l3851 C8D2  
                                        l3843 C8A0                                          l3835 C87A  
                                        l3827 C858                                          l4731 FCF4  
                                        l4723 FC68                                          l4715 FB76  
                                        l4707 FB4C                                          l4651 F86E  
                                        l4635 F76E                                          l4627 F70C  
                                        l4619 F6BE                                          l4643 F7E4  
                                        l4387 E080                                          l4395 E0C8  
                                        l4379 E01A                                          l4299 DE20  
                                        l4475 CC44                                          l4467 CECC  
                                        l4459 CE8E                                          l4811 D81E  
                                        l4549 BFDC                                          l4557 C026  
                                        l4565 C284                                          l4573 C0DA  
                                        l3917 CA8C                                          l3909 CA4E  
                                        l3685 EEF6                                          l3677 EEDA  
                                        l3669 EE96                                          l3597 EC78  
                                        l3589 EC32                                          l3941 CB5E  
                                        l3933 CB3A                                          l3925 CAE6  
                                        l3781 E444                                          l3773 E3FC  
                                        l3765 E36E                                          l3757 E310  
                                        l3749 E2D0                                          l3693 E154  
                                        l3861 C8F8                                          l3853 C8DA  
                                        l3845 C8A8                                          l3837 C87E  
                                        l3829 C860                                          l4725 FCCE  
                                        l4717 FB8E                                          l4709 FB58  
                                        l4661 F900                                          l4653 F898  
                                        l4645 F7E4                                          l4637 F7A0  
                                        l4629 F71C                                          l4733 FD0A  
                                        l4581 F56E                                          l4397 E0E2  
                                        l4389 E08C                                          l4477 CCE6  
                                        l4469 CF38                                          l4493 CDB2  
                                        l4485 CD52                                          l4813 D850  
                                        l4805 D7D6                                          l4559 C03A  
                                        l4567 C290                                          l4575 C0DE  
                                        l3919 CADC                                          l3687 EF04  
                                        l3679 EEE8                                          l3599 EC88  
                                        l3951 CB8A                                          l3935 CB3C  
                                        l3927 CAFC                                          l3783 E452  
                                        l3775 E41A                                          l3767 E38E  
                                        l3759 E32E                                          l3695 E162  
                                        l3863 C900                                          l3855 C8DC  
                                        l3847 C8B6                                          l3839 C886  
                                        l3871 C7A8                                          l4751 FD8E  
                                        l4743 FD3A                                          l4735 FD2E  
                                        l4727 FCE6                                          l4719 FBDA  
                                        l4671 F9CE                                          l4663 F916  
                                        l4655 F8B6                                          l4647 F81E  
                                        l4639 F7AC                                          l4591 F5AC  
                                        l4583 F580                                          l4399 E0F8  
                                        l4495 CDC8                                          l4487 CD96  
                                        l4479 CD0A                                          l4831 D93C  
                                        l4823 D8BE                                          l4807 D808  
                                        l4911 D658                                          l4903 D600  
                                        l4569 C29C                                          l4577 C0EC  
                                        l3689 EF06                                          l3961 CBBA  
                                        l3937 CB4C                                          l3793 E4BC  
                                        l3785 E456                                          l3777 E424  
                                        l3769 E3B8                                          l3697 E170  
                                        l3857 C8E2                                          l3849 C8BC  
                                        l3881 C7DC                                          l3873 C7B0  
                                        l4761 FE4A                                          l4753 FDAC  
                                        l4737 FD36                                          l4729 FCEC  
                                        l4673 F9D8                                          l4657 F8E8  
                                        l4649 F83C                                          l4593 F5B4  
                                        l4585 F58A                                          l4497 CDD0  
                                        l4841 DA2A                                          l4833 D960  
                                        l4825 D8D4                                          l4817 D86E  
                                        l4913 D6C4                                          l4921 D70E  
                                        l4905 D632                                          l4851 BF8E  
                                        l4771 C3B6                                          l3963 CBCA  
                                        l3947 CB76                                          l3939 CB50  
                                        l3795 E4C8                                          l3787 E464  
                                        l3779 E432                                          l3699 E172  
                                        l3971 C31C                                          l3859 C8E8  
                                        l3891 C818                                          l3883 C7E4  
                                        l3875 C7B4                                          l3867 C796  
                                        l4755 FDB2                                          l4747 FD7A  
                                        l4691 FA58                                          l4683 FA1C  
                                        l4667 F94A                                          l4659 F8F6  
                                        l4595 F5BE                                          l4587 F596  
                                        l4763 FE66                                          l4579 F560  
                                        l4499 CDDE                                          l4843 DA5C  
                                        l4835 D97C                                          l4827 D8E4  
                                        l4819 D8A0                                          l4923 D732  
                                        ?_exp 0086                                          l4853 BF92  
                                        l4773 C3C6                                          l4765 C388  
                                        l3965 CBDA                                          l3957 CB9E  
                                        l3949 CB80                                          l3797 E4D6  
                                        l3789 E492                                          l3981 C352  
                                        l3973 C32E                                          l3893 C81E  
                                        l3885 C7EC                                          l3877 C7C2  
                                        l3869 C79A                                          l4757 FDBE  
                                        l4749 FD7C                                          l4693 FAB2  
                                        l4685 FA1E                                          l4669 F960  
                                        l4589 F59C                                          l4941 C56C  
                                        l4933 C510                                          l4837 D9C8  
                                        l4829 D908                                          l4925 D766  
                                        l4917 D6E2                                          l4909 D648  
                                        ?_log 0075                                          l4855 C086  
                                        l4775 C3D8                                          l4767 C390  
                                        l3959 CBAA                                          l3799 E500  
                                        l3983 C368                                          l3975 C336  
                                        l3991 C2B0                                          l3887 C7FA  
                                        l3895 C824                                          l3879 C7CA  
                                        l4759 FE44                                          l4695 FAE6  
                                        l4687 FA30                                          l4679 F9DC  
                                        l4599 F5C6                                          l4943 C582  
                                        l4935 C546                                          l4847 DA72  
                                        l4839 DA18                                          l4791 D282  
                                        l4783 D224                                          l4927 D78A  
                                        l4919 D6EA                                          l4857 C0A6  
                                        l4777 C3EA                                          l4769 C3A4  
                                        l3985 C370                                          l3977 C33E  
                                        l3969 C314                                          l3993 C2C2  
                                        l3897 C834                                          l3889 C810  
                                        l4689 FA4E                                          l4697 FAF0  
                                        l4945 C58A                                          l4937 C55A  
                                        l4785 D234                                          l4929 D79C  
                                        l4961 EF20                                          l4859 C0AA  
                                        l4779 C3FA                                          l3987 C372  
                                        l3979 C34C                                          l3995 C2CA  
                                        l3899 C83C                                          l4699 FB08  
                                        l4939 C566                                          l4891 C404  
                                        l4795 D2A0                                          l4971 EF42  
                                        l4963 EF20                                          l4955 EF18  
                                        l4885 C138                                          l3989 C378  
                                        l3997 C2D2                                          l4797 D314  
                                        l4789 D250                                          l4893 D576  
                                        l4981 EFEA                                          l4973 EF46  
                                        l4965 EF2A                                          l4957 EF1C  
                                        l4887 C16C                                          l3999 C2E0  
                                        l4799 D31C                                          l4895 D57C  
                                        l4991 F124                                          l4983 F020  
                                        l4975 EF52                                          l4967 EF32  
                                        l4959 EF20                                          l4889 C1A0  
                                        l4897 D5AE                                          l4993 F142  
                                        l4985 F08E                                          l4977 EF5E  
                                        l4969 EF3A                                          l4899 D5E0  
                                        l4995 F160                                          l4987 F0E8  
                                        l4979 EF80                                          l4997 F16C  
                                        l4989 F106                                          l4999 F174  
                                        ?_pow 0091                                          STR_1 FFD1  
                                        STR_2 FF71                                          STR_3 FFA1  
                                        STR_4 FFA1                                          STR_5 FFE3  
                                        STR_6 FFF1                                          STR_7 FFF1  
                                        STR_8 FFF3                                          u3000 E192  
                                        u3001 E18E                                          u3010 E1D2  
                                        u3011 E1CE                                          u3100 E492  
                                        u3020 E1E4                                          u3101 E48E  
                                        u3021 E1E0                                          _LATA 003FBA  
                                        u3110 E4A8                                          u3030 E1F4  
                                        _LATB 003FBB                                          u3111 E4A4  
                                        u3031 E1F0                                          _LATC 003FBC  
                                        u3120 E4BC                                          u3040 E22A  
                                        u3200 C8B6                                          u4000 E028  
                                        _LATD 003FBD                                          u3121 E4B8  
                                        u3041 E226                                          u3201 C8B2  
                                        u4001 E024                                          _LATE 003FBE  
                                        u3130 E4D6                                          u3050 E23A  
                                        u3210 C8D2                                          u4010 E056  
                                        u3131 E4D2                                          u3051 E236  
                                        u3211 C8CE                                          u4011 E052  
                                        u3300 CA4E                                          u4100 C4C0  
                                        u3140 E51E                                          u3060 E3D8  
                                        u3220 C8F8                                          u4020 E06C  
                                        u3301 CA4A                                          u4101 C4BC  
                                        u3141 E51A                                          u3221 C8F4  
                                        u4021 E068                                          u3310 CA6C  
                                        u4110 C4DE                                          u3150 E54C  
                                        u3070 E432                                          u3230 C7A8  
                                        u4030 E080                                          u3311 CA68  
                                        u4111 C4DA                                          u3151 E548  
                                        u3071 E42E                                          u3231 C7A4  
                                        u4031 E07C                                          u3320 CA8C  
                                        u2600 EA84                                          u3400 CBCA  
                                        u3160 E586                                          u3080 E452  
                                        u3240 C7C2                                          u4040 E09A  
                                        u4120 CE6C                                          u4200 CDC8  
                                        u3321 CA88                                          u2601 EA80  
                                        u3401 CBC6                                          u3161 E582  
                                        u3081 E44E                                          u3065 E3CE  
                                        u3241 C7BE                                          u4041 E096  
                                        u4121 CE68                                          u4201 CDC4  
                                        u3330 CADC                                          u2610 EA94  
                                        u3090 E464                                          u3410 C32E  
                                        u3170 C858                                          u3250 C7DC  
                                        u4050 E0E2                                          u4130 CE7A  
                                        u4210 CDDE                                          _T2PR 003FAB  
                                        u3331 CAD8                                          u2611 EA90  
                                        u3091 E460                                          u3411 C32A  
                                        u3171 C854                                          u3251 C7D8  
                                        u4051 E0DE                                          u4131 CE76  
                                        u4211 CDDA                                          u4220 C106  
                                        u2700 EBE0                                          u2620 EAD6  
                                        u3340 CAFC                                          u3500 D494  
                                        u3420 C34C                                          u3180 C872  
                                        u3260 C7FA                                          u4300 F83C  
                                        u4060 E112                                          u4140 CEB8  
                                        u4221 C102                                          u2621 EAD2  
                                        u3341 CAF8                                          u3501 D490  
                                        u3421 C348                                          u3181 C86E  
                                        u3261 C7F6                                          u4301 F838  
                                        u4061 E10E                                          u4141 CEB4  
                                        u2550 C71A                                          u2710 EC08  
                                        u2630 EAEC                                          u3350 CB30  
                                        u3510 D4DE                                          u3430 C368  
                                        u3190 C898                                          u3270 C810  
                                        u4310 F86E                                          u4230 F580  
                                        u4070 E140                                          u4150 CF38  
                                        u2551 C716                                          u2711 EC04  
                                        u2631 EAE8                                          u3511 D4DA  
                                        u3431 C364                                          u3191 C894  
                                        u3271 C80C                                          u4311 F86A  
                                        u4231 F57C                                          u4071 E13C  
                                        u4151 CF34                                          u2560 C758  
                                        u4080 C1EA                                          u2800 ED40  
                                        u2720 EC26                                          u2640 EAFE  
                                        u3360 CB5E                                          u3520 D4FC  
                                        u3440 C2C2                                          u3600 DC68  
                                        u3280 C834                                          u4400 FB4C  
                                        u4320 F898                                          u4240 F618  
                                        u4160 CCF8                                          u2561 C754  
                                        u4081 C1E6                                          u2801 ED3C  
                                        u2721 EC22                                          u2641 EAFA  
                                        u3361 CB5A                                          u3521 D4F8  
                                        u3441 C2BE                                          u3601 DC64  
                                        u3281 C830                                          u4401 FB48  
                                        u4321 F894                                          u4241 F614  
                                        u4161 CCF4                                          u2570 C78C  
                                        u3290 CA10                                          u2810 ED76  
                                        u2730 EC46                                          u2650 EB0E  
                                        u3370 CB72                                          u4090 C49E  
                                        u3530 D50C                                          u3450 C2E0  
                                        u3610 E5B4                                          u4410 FB70  
                                        u4330 F8B6                                          u4250 F65A  
                                        u4170 CD3C                                          _T4PR 003F9F  
                                        u5027 C0E4                                          u2571 C788  
                                        u3291 CA0C                                          u2811 ED72  
                                        u2731 EC42                                          u2651 EB0A  
                                        u3371 CB6E                                          u3355 CB26  
                                        u4091 C49A                                          u3531 D508  
                                        u3451 C2DC                                          u3611 E5B0  
                                        u4411 FB6C                                          u4331 F8B2  
                                        u4251 F656                                          u4171 CD38  
                                printf@tmpval 0092                                          u4500 C3B6  
                                        u2900 EE40                                          u2820 ED86  
                                        u2740 EC54                                          u2660 EB4A  
                                        u3380 CB9A                                          u3540 D51A  
                                        u3700 D18C                                          u3460 C2F6  
                                        u2580 C01E                                          u3620 E5CA  
                                        u4420 FCE2                                          u4340 F8E8  
                                        u4260 F6BE                                          u4180 CD7C  
                                        u4501 C3B2                                          u2901 EE3C  
                                        u2821 ED82                                          u2741 EC50  
                                        u2661 EB46                                          u3381 CB96  
                                        u3541 D516                                          u3701 D188  
                                        u3461 C2F2                                          u2581 C01A  
                                        u3621 E5C6                                          u4421 FCDE  
                                        u4341 F8E4                                          u4261 F6BA  
                                        u4181 CD74                                          u4510 C3D8  
                                        u2910 EE5A                                          u2830 EDB2  
                                        u2750 EC64                                          u2670 EB58  
                                        u2590 EA72                                          u3390 CBBA  
                                        u3550 D554                                          u3470 D3D4  
                                        u3710 D1B6                                          u3630 E71A  
                                        u4430 FD06                                          u4350 FA18  
                                        u4270 F71C                                          u4190 CD96  
                                        u4511 C3D4                                          u2911 EE56  
                                        u2831 EDAE                                          u2751 EC60  
                                        u2671 EB54                                          u2591 EA6E  
                                        u3391 CBB6                                          u3551 D550  
                                        u3471 D3D0                                          u3711 D1B2  
                                        u3631 E716                                          u4431 FD02  
                                        u4351 FA14                                          u4271 F718  
                                        u4191 CD92                                          u4520 C3EA  
                                        u2920 EE94                                          u2840 EDC2  
                                        u2760 EC96                                          u2680 EBC6  
                                        u3560 D562                                          u3480 D3E2  
                                        u3800 D09C                                          u3720 D1CA  
                                        u3640 E81C                                          u4440 FD76  
                                        u4360 FA30                                          u4280 F7A0  
                                        u4600 D8E4                                          u4521 C3E6  
                                        u2921 EE90                                          u2841 EDBE  
                                        u2761 EC92                                          u2681 EBC2  
                                        u3561 D55E                                          u3481 D3DE  
                                        u3801 D098                                          u3721 D1C6  
                                        u3641 E818                                          u4441 FD72  
                                        u4361 FA2C                                          u4281 F79C  
                                        u4601 D8E0                                          u2930 EEA6  
                                        u2850 EDDE                                          u2770 ECA4  
                                        u2690 EBDE                                          u3490 D43E  
                                        u3810 D0BC                                          u3730 D1F2  
                                        u3650 E96C                                          u4450 FD8E  
                                        u4370 FA4E                                          u4290 F7DE  
                                        u3570 C93C                                          u4610 DA2A  
                                        u4530 D234                                          u2931 EEA2  
                                        u2851 EDDA                                          u2771 ECA0  
                                        u2691 EBD8                                          u3491 D43A  
                                        u3811 D0B8                                          u3731 D1EE  
                                        u3651 E968                                          u4451 FD8A  
                                        u4371 FA4A                                          u4291 F7DA  
                                        u3571 C938                                          u4611 DA26  
                                        u4531 D230                                          u2940 EEB6  
                                        u2860 EDEE                                          u2780 ECC2  
                                        u3820 C5C6                                          u3740 D212  
                                        u4460 FDAC                                          u4380 FB04  
                                        u3900 DE5C                                          u3580 C99C  
                                        u4188 CD80                                          u4620 DA5C  
                                        u4540 D282                                          _PMD0 0039C0  
                                        u2941 EEB2                                          u2861 EDEA  
                                        u2781 ECBE                                          u3821 C5C2  
                                        u3741 D20E                                          u3661 D0DE  
                                        u4461 FDA8                                          u4381 FB00  
                                        u3901 DE58                                          u3581 C994  
                                        u4621 DA58                                          u4541 D27E  
                                        _PMD1 0039C1                                          u2950 EED6  
                                        u2870 EE00                                          u2790 ECFA  
                                        u3830 C5E8                                          u3750 CF98  
                                        u3670 D0F2                                          u3590 DAD4  
                                        u4470 FE66                                          u4390 FB30  
                                        u3910 DE9C                                          u4550 D808  
                                        _PMD2 0039C2                                          u2951 EED2  
                                        u2871 EDFC                                          u2791 ECF6  
                                        u3831 C5E4                                          u3751 CF94  
                                        u3671 D0EE                                          u3591 DAD0  
                                        u4471 FE62                                          u4391 FB2C  
                                        u3911 DE98                                          u4551 D804  
                                        _PMD3 0039C3                                          u2960 EEE8  
                                        u2880 EE16                                          u3840 C610  
                                        u3760 CFC2                                          u4480 FE92  
                                        u4800 C55A                                          u3920 DEDC  
                                        u4560 D850                                          _PMD4 0039C4  
                                        u4705 C15C                                          u2961 EEE4  
                                        u2881 EE12                                          u3841 C60C  
                                        u3761 CFBE                                          u3681 D116  
                                        u4481 FE8E                                          u4801 C556  
                                        u3921 DED8                                          u4561 D84C  
                                        _PMD5 0039C5                                          u4490 C3A4  
                                        u2970 EF04                                          u2890 EE2C  
                                        u3770 D030                                          u3690 D12A  
                                        u4810 C582                                          u3930 DF52  
                                        u3850 DDD4                                          u4570 D8A0  
                                        u4730 D5AE                                          _PMD6 0039C6  
                                        u4715 C190                                          u4491 C3A0  
                                        u2971 EF00                                          u2891 EE28  
                                        u3771 D02C                                          u3691 D126  
                                        u4811 C57E                                          u3931 DF4E  
                                        u3851 DDD0                                          u4571 D89C  
                                        u4731 D5AA                                          _PMD7 0039C7  
                                        u3780 D060                                          u2980 E170  
                                        u3940 DF74                                          u3860 DDE6  
                                        u3588 C99E                                          u4580 D8D0  
                                        u4740 D5E0                                          u4900 F404  
                                        u4820 F220                                          u4725 C1C4  
                                        u3781 D05C                                          u2981 E16C  
                                        u3941 DF70                                          u3861 DDE2  
                                        u4581 D8CA                                          u4741 D5DC  
                                        u4901 F400                                          u4821 F21C  
                                        u3790 D074                                          u2990 E182  
                                        u3950 DF9E                                          u3870 DDF6  
                                        u4590 D8D2                                          u4750 D632  
                                        u4910 F418                                          u4830 F234  
                                        u3791 D070                                          u2991 E17E  
                                        u3951 DF9A                                          u3871 DDF2  
                                        u4751 D62E                                          u4911 F414  
                                        u4831 F230                                          u3960 DFC2  
                                        u3880 DE3A                                          u4760 D658  
                                        u4920 F45E                                          u4840 F27A  
                                        u3961 DFBE                                          u3881 DE36  
                                        u4761 D654                                          u4921 F45A  
                                        u4841 F276                                          u3970 DFD8  
                                        u3890 DE4C                                          u4770 D6C4  
                                        u4930 F472                                          u4850 F28E  
                                        u3971 DFD4                                          u3891 DE48  
                                        u4771 D6C0                                          u4931 F46E  
                                        u4851 F28A                                          u3980 DFF6  
                                        u4780 D79C                                          u4860 F31C  
                                        u3981 DFF2                                          u4781 D798  
                                        u4861 F318                                          u4790 C524  
                                        u3990 E016                                          u4870 F330  
                                        u4791 C51A                                          u3991 E012  
                                        u4871 F32C                                          u4880 F38E  
                                        u4881 F38A                                          u4890 F3A2  
                                        u4891 F39E                                          u4798 C528  
                                        _TMR2 003FAA                                          _TMR4 003F9E  
                                        _WPUA 003A41                                          _WPUB 003A51  
                                        _WPUC 003A61                                          _WPUD 003A71  
                                        _WPUE 003A81                                          _main EF18  
                                        fsr2h 003FDA                                          indf2 003FDF  
                                        fsr2l 003FD9                                          exp@x 0086  
                                        log@x 0075                                          pow@x 0091  
                                        pow@y 0095                                          prodh 003FF4  
                                        prodl 003FF3                                          start FFFC  
                             ___fldiv@new_exp 007E                               _PWM5_Initialize BFC4  
                                ___param_bank 000000                    __end_of_PWM5_LoadDutyValue C16C  
                                       ??_exp 005F                                         ??_log 005F  
                                       ??_pow 005F                       __end_of_TMR0_Initialize C138  
              __size_of_OSCILLATOR_Initialize 0018                 __end_of_OSCILLATOR_Initialize BFC4  
                               ___fltol@sign1 0017                               __end_of___fladd EF18  
                                       ?_main 0001                               __end_of___fldiv E154  
                             __end_of___awdiv C90A                               __end_of___flneg C20C  
                             __end_of___awmod C846                               __end_of___flmul E5A4  
                             __end_of___flsub C252                               __end_of___fltol CBEC  
                             __end_of___lldiv C644                               ___awdiv@divisor 0009  
                             __end_of___llmod C510                                         _T2CON 003FAC  
                                       _U2P1L 003DD4                                         _U2P2L 003DD6  
                                       _U2P3L 003DD8                                         _T4CON 003FA0  
                                       _T2HLT 003FAD                                         _T4HLT 003FA1  
                             __end_of___lwdiv C388                                         _T2TMR 003FAA  
                                       _T2RST 003FAF                                         _U2UIR 003DE0  
                             __end_of___lwmod C314                                         _U2RXB 003DD0  
                                       _T4TMR 003F9E                                         _T4RST 003FA3  
                                       _U2TXB 003DD2                               _TMR0_WriteTimer BF8E  
                             ___awdiv@counter 000B                                         _OSCEN 0039DD  
                                       _TMR0H 003FB7                                         _TMR0L 003FB6  
                                       _TRISA 003FC2                                         _TRISB 003FC3  
                                       _TRISC 003FC4                                         _TRISD 003FC5  
                                       _TRISE 003FC6                               _TMR4_Initialize C044  
                             _PWM6_Initialize BFDC                               __end_of_dpowers FF4D  
                                       _floor CE42                                         _ldexp CD0A  
                                       _frexp C90A                                         _errno 00C6  
                                       _scale E5A4                                         main@T 00A8  
                                       _putch BF84                                         main@h 00BE  
                                       main@j 00C4                                         main@k 00BC  
                                       main@m 00C2                                         main@n 00C0  
                                       tablat 003FF5                                         pow@yi 00A2  
                                       status 003FD8                                   exp@exponent 008E  
                             _PWM7_Initialize BFF4                                   ldexp@newexp 0079  
              ??_UART2_SetOverrunErrorHandler 0003                               __initialization BF9A  
                                 log@exponent 0079                                  __end_of_main F560  
                     __end_of_TMR2_Initialize C044                                  ?_UART2_Write 0001  
                                      ??_main 00A6                                 __activetblptr 000003  
                        __size_of__tdiv_to_l_ 0156                                        ?_floor 004B  
                                      ?_ldexp 0075                                        ?_frexp 0033  
                            ___llmod@dividend 000E                                        ?_scale 0057  
                            ___awdiv@dividend 0007                                        _ANSELA 003A40  
                                      ?_putch 0001                                        _ANSELB 003A50  
                                      _ANSELC 003A60                                        _ANSELD 003A70  
                                      _ANSELE 003A80                                        _T0CON0 003FB8  
                                      _T0CON1 003FB9                                        _RB1I2C 003A5A  
                                      _RB2I2C 003A5B                                        _RD0I2C 003A7A  
                                      _RC3I2C 003A6A                                        _RD1I2C 003A7B  
                                      _RC4I2C 003A6B                                        _U2CON0 003DDA  
                                      _U2CON1 003DDB                                        _U2CON2 003DDC  
                                      _U2BRGH 003DDE                                        _U2FIFO 003DDF  
                                      _U2BRGL 003DDD                                        _RC0PPS 003A10  
                                      _RC2PPS 003A12                                        _RD2PPS 003A1A  
                                      _RB6PPS 003A0E                                        _ODCONA 003A42  
                                      _ODCONB 003A52                                        _ODCONC 003A62  
                                      _ODCOND 003A72                                        _ODCONE 003A82  
                     __end_of_PWM5_Initialize BFDC                                        _INLVLA 003A44  
                                      _INLVLB 003A54                                        _INLVLC 003A64  
                                      _INLVLD 003A74                                        _INLVLE 003A84  
                                      _OSCFRQ 0039DF                                        _TMR0IF 01CD1F  
                            __end_of___xxtofl D576                              _UART2_Initialize C252  
                            __end_of__powers_ FEC9                                  _CCPTMRS1bits 003F5F  
                   _UART2_OverrunErrorHandler 00D1                                        ___flge C9E2  
                                      ___fleq C6EC                                     ??___fladd 0043  
                                      ___wmul C0B0                                     ??___fldiv 0075  
                                   ??___awdiv 000B                                     ??___flneg 0005  
                                   ??___awmod 0005                                     ??___flmul 0053  
                                   ??___flsub 005F                                     ??___fltol 0013  
                     __end_of_TMR0_WriteTimer BF9A                                     ??___lldiv 0009  
                                   ??___llmod 0016                                     ??___lwdiv 000A  
                                   ??___lwmod 0005                              ?_TMR0_Initialize 0001  
                     __end_of_PWM6_Initialize BFF4                       __end_of_TMR4_Initialize C062  
                                      _fround DABE                                        clear_0 BFA0  
                            ___awdiv@quotient 000D                               ___awmod@divisor 0003  
                             ___awmod@counter 0005                                        _printf F560  
                                      floor@i 004F                                        floor@x 004B  
                              _PMD_Initialize C062                                  __mediumconst FE94  
                                      tblptrh 003FF7                                        tblptrl 003FF6  
                                      tblptru 003FF8                                    ___flge@ff1 0001  
                                  ___flge@ff2 0005                       __end_of_PWM7_Initialize C00C  
                                ___xxtofl@arg 0023                              __end_ofexp@coeff FF25  
                                ___xxtofl@exp 0022                             _SYSTEM_Initialize C086  
                                ___xxtofl@val 0019                                    ___fleq@ff1 0027  
                                  ___fleq@ff2 002B                              __end_oflog@coeff FF71  
                                  __accesstop 0060                       __end_of__initialization BFA6  
                                  ___flneg@f1 0001                            ?_SYSTEM_Initialize 0001  
                                eval_poly@res 0071                                 ___rparam_used 000001  
                                  ___fltol@f1 000F                                __pcstackCOMRAM 0001  
                       _UART2_SetErrorHandler BF66                           ??_SYSTEM_Initialize 0003  
                               __end_of_floor CF82                                 __end_of_ldexp CE42  
                               __end_of_frexp C9E2                                 __end_of_scale EA58  
                               __end_of_putch BF8E                              ?_TMR2_Initialize 0001  
                      __end_of_PMD_Initialize C086                      ??_poll_switch1_for_edges 0003  
                 __size_of_PWM7_LoadDutyValue 0034                                    __div_to_l_ CF82  
                             __div_to_l_@exp1 000E                                       ??_floor 004F  
                                     ??_ldexp 007B                               __div_to_l_@cntr 000D  
                                     ??_frexp 0039                                       ??_scale 005B  
                   __end_of_SYSTEM_Initialize C0B0                               __div_to_l_@quot 0009  
                                     ??_putch 0002                   PWM7_LoadDutyValue@dutyValue 0001  
                                  __pbssBANK0 00C6                            __size_of_eval_poly 011E  
                            ?_PWM5_Initialize 0001                            _DELAY_milliseconds C0DA  
                               __div_to_l_@f1 0001                                 __div_to_l_@f2 0005  
                                  _clearPuTTY C404                           ?_DELAY_milliseconds 0001  
                                     ?___flge 0001                                       ?___fleq 0027  
                                     ?___wmul 0001          __end_of_UART2_SetFramingErrorHandler BF7A  
       __size_of_UART2_SetFramingErrorHandler 000A                  _UART2_SetFramingErrorHandler BF70  
                  __end_of_PWM6_LoadDutyValue C1A0                              ?_TMR0_WriteTimer 0001  
                                     ?_fround 0057                              ?_TMR4_Initialize 0001  
                            ?_PWM6_Initialize 0001                                       ?_printf 0076  
                             ?_PMD_Initialize 0001                                       _U2ERRIE 003DE2  
                                     _U2ERRIR 003DE1                          __size_of_UART2_Write 001A  
                                   ?___xxtofl 0019                                       _U2RXPPS 003AE8  
                          _PWM5_LoadDutyValue C138                          ??_DELAY_milliseconds 0003  
                                     _OSCCON1 0039D9                                       _OSCCON3 0039DB  
                                     _OSCTUNE 0039DE                                       _PWM5DCH 003F6D  
                                     _PWM5DCL 003F6C                                       _PWM6DCH 003F69  
                                     _PWM6DCL 003F68                                       _PWM7DCH 003F65  
                                     _PWM7DCL 003F64                                       _PWM5CON 003F6E  
                                     _PWM6CON 003F6A                                       _PWM7CON 003F66  
                                     _SLRCONA 003A43                                       _SLRCONB 003A53  
                                     _SLRCONC 003A63                                       _SLRCOND 003A73  
                                     _SLRCONE 003A83                           ?_PWM5_LoadDutyValue 0001  
                            ?_PWM7_Initialize 0001                             __end_of__npowers_ FEFD  
                                     __Hparam 0000                                    _scale$2198 005B  
                      ?_UART2_SetErrorHandler 0001                                       __Lparam 0000  
                             __size_of___flge 0104                               __size_of___fleq 00AA  
                                     ___fladd EA58                                       ___fldiv DDB8  
                                     ___awdiv C846                                       ___flneg C1D4  
                                     ___awmod C796                                       ___flmul E154  
                                     ___flsub C20C                                       ___fltol CAE6  
                                     ___lldiv C5A0                               __size_of___wmul 002A  
                                     ___llmod C488                                       ___lwdiv C314  
                                     ___lwmod C2B0                          ??_PWM5_LoadDutyValue 0003  
               ?_UART2_SetFramingErrorHandler 0001                                       __pcinit BF9A  
                           __end_of_eval_poly CD0A                               __size_of_fround 02FA  
                                     __ramtop 1000                                       __ptext0 EF18  
                                     __ptext1 D576                                       __ptext2 D224  
                                     __ptext3 D7D6                                       __ptext4 CD0A  
                                     __ptext5 CE42                                       __ptext6 C90A  
                                     __ptext7 CBEC                                       __ptext8 DDB8  
                                     __ptext9 C404                               __size_of_printf 0934  
                     __size_of_buttonResponse 0090               __size_of_poll_switch1_for_edges 007C  
                                 ?__div_to_l_ 0001                                       _counter 00CC  
            _UART2_DefaultOverrunErrorHandler 000000                                       _dpowers FF25  
                       _OSCILLATOR_Initialize BFAC                                     _T2CONbits 003FAC  
                                __size_of_exp 02E8                                  __size_of_log 019E  
                                __size_of_pow 0260                                    ??___xxtofl 001D  
                            ___awmod@dividend 0001                                     _T4CONbits 003FA0  
                    ??_PIN_MANAGER_Initialize 0001                                     _T2HLTbits 003FAD  
                    __end_of_UART2_Initialize C2B0                                     _T4HLTbits 003FA1  
                  __size_of_SYSTEM_Initialize 002A                          end_of_initialization BFA6  
                                   _T2RSTbits 003FAF                                       exp@sign 0090  
                                   _T4RSTbits 003FA3                                   ?_clearPuTTY 0001  
                             ___lldiv@divisor 0005                                       pow@sign 00A1  
                             ___lldiv@counter 000D                                       printf@c 009A  
                                     printf@f 0076                                       postdec2 003FDD  
                                     postinc0 003FEE                                       postinc2 003FDE  
                              __tdiv_to_l_@f1 0001                                __tdiv_to_l_@f2 0005  
                               ??__tdiv_to_l_ 0009                                     _PORTDbits 003FCD  
                                 ___fladd@grs 004A                                 ___xxtofl@sign 0021  
                                 ___fldiv@grs 0080                                   ___fldiv@rem 0079  
                                 ___flmul@grs 0061                        _poll_switch1_for_edges C388  
                         __size_of__div_to_l_ 014C                          _timer0ReloadVal16bit 00D5  
                              __end_of___flge CAE6                                __end_of___fleq C796  
                              __end_of___wmul C0DA                        ?_OSCILLATOR_Initialize 0001  
                              __end_of_fround DDB8                                    floor@expon 0053  
                              __end_of_printf FE94                ??_UART2_SetFramingErrorHandler 0003  
                         start_initialization BF9A                                    eval_poly@d 005B  
                                  eval_poly@n 005D                                    eval_poly@x 0057  
                         __size_of_clearPuTTY 0084                      __size_of_TMR0_Initialize 0030  
                                  ldexp@value 0075               __size_of_PIN_MANAGER_Initialize 00A8  
                         __end_of__tdiv_to_l_ D224                                   __end_of_exp DABE  
                                 __end_of_log D3C2                                   __end_of_pow D7D6  
                   _UART2_DefaultErrorHandler 000000                                   putch@txData 0002  
                                  frexp@value 0033                               ___llmod@divisor 0012  
                             ___llmod@counter 0016     poll_switch1_for_edges@has_switch1_changed 0003  
                                    ??___flge 0009                                      ??___fleq 002F  
                            ??_PMD_Initialize 0001                                      ??___wmul 0005  
                  __end_of_PWM7_LoadDutyValue C1D4                                      ??_fround 005B  
                           UART2_Write@txData 0001                                      ??_printf 0080  
                              _buttonResponse C510                                     ___fladd@a 003F  
                                   ___fladd@b 003B                                    fround@prec 0075  
                                   ___fldiv@a 0071                                     ___fldiv@b 006D  
                 PWM5_LoadDutyValue@dutyValue 0001                                     ___flmul@a 004F  
                                   ___flmul@b 004B                                     ___flsub@a 005B  
                                   ___flsub@b 0057                     _UART2_FramingErrorHandler 00D3  
                               __pcstackBANK0 0060                            _PWM6_LoadDutyValue C16C  
                    __size_of_TMR2_Initialize 001E                             __size_of___xxtofl 01B4  
                         ?_PWM6_LoadDutyValue 0001                       ??_UART2_SetErrorHandler 0003  
                                   __pnvBANK0 00CF                                     _main$2192 00AC  
                                   _main$2193 00B0                                     _main$2194 00B4  
                                   _main$2195 00B8                              ___lwdiv@dividend 0006  
                      _PIN_MANAGER_Initialize C644                      __size_of_PWM5_Initialize 0018  
                               __pmediumconst FE94                                      ?___fladd 003B  
                                    ?___fldiv 006D                                      ?___awdiv 0007  
                                    ?___flneg 0001                                      ?___awmod 0001  
                                    ?___flmul 004B                                      ?___flsub 0057  
                                    ?___fltol 000F                                      ?___lldiv 0001  
                                    ?___llmod 000E                                     __npowers_ FEC9  
                                    ?___lwdiv 0006                                      ?___lwmod 0001  
                      __end_of_buttonResponse C5A0                          ??_PWM6_LoadDutyValue 0003  
                               ??_UART2_Write 0001                                   __tdiv_to_l_ D0CE  
                                ??__div_to_l_ 0009                                     _eval_poly CBEC  
                    __size_of_TMR0_WriteTimer 000C                   __size_of_DELAY_milliseconds 002E  
                    __size_of_PWM6_Initialize 0018                      __size_of_TMR4_Initialize 001E  
                           ?_UART2_Initialize 0001                              ___lwdiv@quotient 000A  
                              __size_of_floor 0140                                __size_of_ldexp 0138  
                              __size_of_frexp 00D8                                      _T2CLKCON 003FAE  
                              __size_of_scale 04B4                                      _T4CLKCON 003FA2  
                          ??_UART2_Initialize 0003                                __size_of_putch 000A  
                            _uart2RxLastError 00CE                             ??_TMR0_Initialize 0001  
                                 _U2ERRIRbits 003DE1                                ___wmul@product 0005  
       UART2_SetErrorHandler@interruptHandler 0001                            _last_switch1_value 00C8  
                                ??_clearPuTTY 0060                            __end_of__div_to_l_ D0CE  
                                    _PIR3bits 0039A3                                      _PIR4bits 0039A4  
                         _has_switch1_changed 00CA                                      _PIR6bits 0039A6  
                                    _PIR7bits 0039A7                      __size_of_PWM7_Initialize 0018  
              DELAY_milliseconds@milliseconds 0001                               ?_buttonResponse 0001  
                 __size_of_PWM5_LoadDutyValue 0034                             ___wmul@multiplier 0001  
                                  printf@flag 0088                                    printf@eexp 0090  
                                  printf@fval 0096                                    printf@prec 008A  
                                  ?_eval_poly 0057                            _UART2_ErrorHandler 00CF  
                         __end_of_UART2_Write C026                            __end_of_clearPuTTY C488  
                     ?_poll_switch1_for_edges 0001                             ??_TMR2_Initialize 0001  
                                   frexp@eptr 0037                                      __Hrparam 0000  
                                    __Lrparam 0000                       ??_OSCILLATOR_Initialize 0001  
                            __size_of___fladd 04C0                              __size_of___fldiv 039C  
                            __size_of___awdiv 00C4                              __size_of___flneg 0038  
                            __size_of___awmod 00B0                              __size_of___flmul 0450  
                            __size_of___flsub 0046                              __size_of___fltol 0106  
                            __size_of___lldiv 00A4                              __size_of___llmod 0088  
                            __size_of___lwdiv 0074                              __size_of___lwmod 0064  
                                 _fround$2196 0071                                   _fround$2197 006D  
                           ??_PWM5_Initialize 0001                                      _exp$2202 008A  
                                    ___xxtofl D3C2                                    _T0CON0bits 003FB8  
                                  _T0CON1bits 003FB9                               ___lwdiv@divisor 0008  
              __end_of_poll_switch1_for_edges C404                               ___lwdiv@counter 000C  
                                    __ptext10 C510                                      __ptext11 F560  
                                    __ptext20 E154                                      __ptext12 E5A4  
                                    __ptext21 D0CE                                      __ptext13 C796  
                                    __ptext30 C1D4                                      __ptext22 CF82  
                                    __ptext14 C846                                      __ptext31 C9E2  
                                    __ptext23 D3C2                                      __ptext15 BF84  
                                    __ptext40 BF66                                      __ptext32 C6EC  
                                    __ptext24 C0B0                                      __ptext16 C00C  
                                    __ptext41 C044                                      __ptext33 C388  
                                    __ptext25 C488                                      __ptext17 DABE  
                                    __ptext50 C1A0                                      __ptext42 C026  
                                    __ptext34 C0DA                                      __ptext26 C5A0  
                                    __ptext18 C2B0                                      __ptext51 C16C  
                                    __ptext43 C108                                      __ptext35 BF8E  
                                    __ptext27 CAE6                                      __ptext19 C314  
                                    __ptext52 C138                                      __ptext44 BFF4  
                                    __ptext36 C086                                      __ptext28 C20C  
                                    __ptext45 BFDC                                      __ptext37 C252  
                                    __ptext29 EA58                                      __ptext46 BFC4  
                                    __ptext38 BF7A                                      __ptext47 C062  
                                    __ptext39 BF70                                      __ptext48 C644  
                                    __ptext49 BFAC                                      __powers_ FE95  
                                    _pow$2200 0099                                      _pow$2201 009D  
                     TMR0_WriteTimer@timerVal 0001                                    _U2CON0bits 003DDA  
                           ??_TMR0_WriteTimer 0003                             ??_TMR4_Initialize 0001  
                           ??_PWM6_Initialize 0001                                 __size_of_main 0648  
            _UART2_DefaultFramingErrorHandler 000000  UART2_SetOverrunErrorHandler@interruptHandler 0001  
                                   printf@val 008C                                   _UART2_Write C00C  
                           ??_PWM7_Initialize 0001                                      exp@coeff FEFD  
                                    log@coeff FF4D                                   ??_eval_poly 006D  
                          _PWM7_LoadDutyValue C1A0                                      scale@scl 005F  
        __end_of_UART2_SetOverrunErrorHandler BF84         __size_of_UART2_SetOverrunErrorHandler 000A  
                _UART2_SetOverrunErrorHandler BF7A                              __tdiv_to_l_@exp1 0011  
                            __tdiv_to_l_@cntr 0010                              __tdiv_to_l_@quot 000C  
                            ___lwmod@dividend 0001                              ___lldiv@dividend 0001  
                     ?_PIN_MANAGER_Initialize 0001                           ?_PWM7_LoadDutyValue 0001  
              __size_of_UART2_SetErrorHandler 000A                 __end_of_UART2_SetErrorHandler BF70  
                                    printf@ap 0086  UART2_SetFramingErrorHandler@interruptHandler 0001  
                                ?__tdiv_to_l_ 0001                          ??_PWM7_LoadDutyValue 0003  
                                 _printf$2199 0082                              ___lldiv@quotient 0009  
                             ___lwmod@divisor 0003                               _TMR0_Initialize C108  
                             ___lwmod@counter 0005                   PWM6_LoadDutyValue@dutyValue 0001  
                               ___fladd@signs 0047                __end_of_PIN_MANAGER_Initialize C6EC  
       poll_switch1_for_edges@digitalinputpin 0001                 ?_UART2_SetOverrunErrorHandler 0001  
                                ___fladd@aexp 0048                                  ___fladd@bexp 0049  
                            ??_buttonResponse 009B                     __size_of_UART2_Initialize 005E  
