

Microchip MPLAB XC8 Assembler V2.30 build 20200825195618 
                                                                                               Tue Dec 01 14:22:01 2020

Microchip MPLAB XC8 C Compiler v2.30 (Free license) build 20200825195618 Og1 
     1                           	processor	18F46K42
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     6                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=3
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=3
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=3
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=3
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=2
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=2
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=3
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=1
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=2
    34                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=2
    35                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    36                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=2
    40                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=2
    41                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=2
    42                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=2
    43                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=2
    44                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=2
    45                           	psect	text34,global,reloc=2,class=CODE,delta=1
    46                           	psect	text35,global,reloc=2,class=CODE,delta=1
    47                           	psect	text36,global,reloc=2,class=CODE,delta=1
    48                           	psect	text37,global,reloc=2,class=CODE,delta=1
    49                           	psect	text38,global,reloc=2,class=CODE,delta=1
    50                           	psect	text39,global,reloc=2,class=CODE,delta=1
    51                           	psect	text40,global,reloc=2,class=CODE,delta=1
    52                           	psect	text41,global,reloc=2,class=CODE,delta=1
    53                           	psect	text42,global,reloc=2,class=CODE,delta=1
    54                           	psect	text43,global,reloc=2,class=CODE,delta=1
    55                           	psect	text44,global,reloc=2,class=CODE,delta=1
    56                           	psect	text45,global,reloc=2,class=CODE,delta=1
    57                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    58                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    59                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    60                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    61  0000                     
    62                           ; Version 2.20
    63                           ; Generated 05/05/2020 GMT
    64                           ; 
    65                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    66                           ; All rights reserved.
    67                           ; 
    68                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    69                           ; 
    70                           ; Redistribution and use in source and binary forms, with or without modification, are
    71                           ; permitted provided that the following conditions are met:
    72                           ; 
    73                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    74                           ;        conditions and the following disclaimer.
    75                           ; 
    76                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    77                           ;        of conditions and the following disclaimer in the documentation and/or other
    78                           ;        materials provided with the distribution.
    79                           ; 
    80                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    81                           ;        software without specific prior written permission.
    82                           ; 
    83                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    84                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    85                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    86                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    87                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    88                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    89                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    90                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    91                           ; 
    92                           ; 
    93                           ; Code-generator required, PIC18F46K42 Definitions
    94                           ; 
    95                           ; SFR Addresses
    96  0000                     
    97 ;; Function _UART2_DefaultFramingErrorHandler is unused but had its address taken
    98  0000                     
    99 ;; Function _UART2_DefaultOverrunErrorHandler is unused but had its address taken
   100  0000                     
   101 ;; Function _UART2_DefaultErrorHandler is unused but had its address taken
   102  0000                     
   103                           	psect	mediumconst
   104  00FE3C                     __pmediumconst:
   105                           	callstack 0
   106  00FE3C  00                 	db	0
   107  00FE3D                     __powers_:
   108                           	callstack 0
   109  00FE3D  0000               	dw	0
   110  00FE3F  3F80               	dw	16256
   111  00FE41  0000               	dw	0
   112  00FE43  4120               	dw	16672
   113  00FE45  0000               	dw	0
   114  00FE47  42C8               	dw	17096
   115  00FE49  0000               	dw	0
   116  00FE4B  447A               	dw	17530
   117  00FE4D  4000               	dw	16384
   118  00FE4F  461C               	dw	17948
   119  00FE51  5000               	dw	20480
   120  00FE53  47C3               	dw	18371
   121  00FE55  2400               	dw	9216
   122  00FE57  4974               	dw	18804
   123  00FE59  9680               	dw	38528
   124  00FE5B  4B18               	dw	19224
   125  00FE5D  BC20               	dw	48160
   126  00FE5F  4CBE               	dw	19646
   127  00FE61  6B28               	dw	27432
   128  00FE63  4E6E               	dw	20078
   129  00FE65  02F9               	dw	761
   130  00FE67  5015               	dw	20501
   131  00FE69  78EC               	dw	30956
   132  00FE6B  60AD               	dw	24749
   133  00FE6D  F2CA               	dw	62154
   134  00FE6F  7149               	dw	29001
   135  00FE71                     __end_of__powers_:
   136                           	callstack 0
   137  00FE71                     __npowers_:
   138                           	callstack 0
   139  00FE71  0000               	dw	0
   140  00FE73  3F80               	dw	16256
   141  00FE75  CCCD               	dw	52429
   142  00FE77  3DCC               	dw	15820
   143  00FE79  D70A               	dw	55050
   144  00FE7B  3C23               	dw	15395
   145  00FE7D  126F               	dw	4719
   146  00FE7F  3A83               	dw	14979
   147  00FE81  B717               	dw	46871
   148  00FE83  38D1               	dw	14545
   149  00FE85  C5AC               	dw	50604
   150  00FE87  3727               	dw	14119
   151  00FE89  37BD               	dw	14269
   152  00FE8B  3586               	dw	13702
   153  00FE8D  BF95               	dw	49045
   154  00FE8F  33D6               	dw	13270
   155  00FE91  CC77               	dw	52343
   156  00FE93  322B               	dw	12843
   157  00FE95  705F               	dw	28767
   158  00FE97  3089               	dw	12425
   159  00FE99  E6FF               	dw	59135
   160  00FE9B  2EDB               	dw	11995
   161  00FE9D  E508               	dw	58632
   162  00FE9F  1E3C               	dw	7740
   163  00FEA1  4260               	dw	16992
   164  00FEA3  0DA2               	dw	3490
   165  00FEA5                     __end_of__npowers_:
   166                           	callstack 0
   167  00FEA5                     _hexpowers:
   168                           	callstack 0
   169  00FEA5  0001               	dw	1
   170  00FEA7  0000               	dw	0
   171  00FEA9  0010               	dw	16
   172  00FEAB  0000               	dw	0
   173  00FEAD  0100               	dw	256
   174  00FEAF  0000               	dw	0
   175  00FEB1  1000               	dw	4096
   176  00FEB3  0000               	dw	0
   177  00FEB5  0000               	dw	0
   178  00FEB7  0001               	dw	1
   179  00FEB9  0000               	dw	0
   180  00FEBB  0010               	dw	16
   181  00FEBD  0000               	dw	0
   182  00FEBF  0100               	dw	256
   183  00FEC1  0000               	dw	0
   184  00FEC3  1000               	dw	4096
   185  00FEC5                     __end_of_hexpowers:
   186                           	callstack 0
   187  00FEC5                     exp@coeff:
   188                           	callstack 0
   189  00FEC5  0000               	dw	0
   190  00FEC7  3F80               	dw	16256
   191  00FEC9  7218               	dw	29208
   192  00FECB  3F31               	dw	16177
   193  00FECD  FDF0               	dw	65008
   194  00FECF  3E75               	dw	15989
   195  00FED1  5847               	dw	22599
   196  00FED3  3D63               	dw	15715
   197  00FED5  9558               	dw	38232
   198  00FED7  3C1D               	dw	15389
   199  00FED9  C482               	dw	50306
   200  00FEDB  3AAE               	dw	15022
   201  00FEDD  78A8               	dw	30888
   202  00FEDF  3921               	dw	14625
   203  00FEE1  93EF               	dw	37871
   204  00FEE3  3780               	dw	14208
   205  00FEE5  92A0               	dw	37536
   206  00FEE7  35A7               	dw	13735
   207  00FEE9  5646               	dw	22086
   208  00FEEB  3415               	dw	13333
   209  00FEED                     __end_ofexp@coeff:
   210                           	callstack 0
   211  00FEED                     _dpowers:
   212                           	callstack 0
   213  00FEED  0001               	dw	1
   214  00FEEF  0000               	dw	0
   215  00FEF1  000A               	dw	10
   216  00FEF3  0000               	dw	0
   217  00FEF5  0064               	dw	100
   218  00FEF7  0000               	dw	0
   219  00FEF9  03E8               	dw	1000
   220  00FEFB  0000               	dw	0
   221  00FEFD  2710               	dw	10000
   222  00FEFF  0000               	dw	0
   223  00FF01  86A0               	dw	34464
   224  00FF03  0001               	dw	1
   225  00FF05  4240               	dw	16960
   226  00FF07  000F               	dw	15
   227  00FF09  9680               	dw	38528
   228  00FF0B  0098               	dw	152
   229  00FF0D  E100               	dw	57600
   230  00FF0F  05F5               	dw	1525
   231  00FF11  CA00               	dw	51712
   232  00FF13  3B9A               	dw	15258
   233  00FF15                     __end_of_dpowers:
   234                           	callstack 0
   235  00FF15                     log@coeff:
   236                           	callstack 0
   237  00FF15  0000               	dw	0
   238  00FF17  0000               	dw	0
   239  00FF19  FFC4               	dw	65476
   240  00FF1B  3F7F               	dw	16255
   241  00FF1D  EF80               	dw	61312
   242  00FF1F  BEFF               	dw	48895
   243  00FF21  E190               	dw	57744
   244  00FF23  3EA9               	dw	16041
   245  00FF25  82EC               	dw	33516
   246  00FF27  BE76               	dw	48758
   247  00FF29  AD82               	dw	44418
   248  00FF2B  3E2B               	dw	15915
   249  00FF2D  3C0E               	dw	15374
   250  00FF2F  BDC3               	dw	48579
   251  00FF31  D187               	dw	53639
   252  00FF33  3D13               	dw	15635
   253  00FF35  7841               	dw	30785
   254  00FF37  BBD3               	dw	48083
   255  00FF39                     __end_oflog@coeff:
   256                           	callstack 0
   257  00FF39                     STR_2:
   258                           
   259                           ; BSR set to: 57
   260  00FF39  74                 	db	116	;'t'
   261  00FF3A  69                 	db	105	;'i'
   262  00FF3B  6D                 	db	109	;'m'
   263  00FF3C  65                 	db	101	;'e'
   264  00FF3D  72                 	db	114	;'r'
   265  00FF3E  30                 	db	48	;'0'
   266  00FF3F  52                 	db	82	;'R'
   267  00FF40  65                 	db	101	;'e'
   268  00FF41  6C                 	db	108	;'l'
   269  00FF42  6F                 	db	111	;'o'
   270  00FF43  61                 	db	97	;'a'
   271  00FF44  64                 	db	100	;'d'
   272  00FF45  56                 	db	86	;'V'
   273  00FF46  61                 	db	97	;'a'
   274  00FF47  6C                 	db	108	;'l'
   275  00FF48  31                 	db	49	;'1'
   276  00FF49  36                 	db	54	;'6'
   277  00FF4A  62                 	db	98	;'b'
   278  00FF4B  69                 	db	105	;'i'
   279  00FF4C  74                 	db	116	;'t'
   280  00FF4D  20                 	db	32
   281  00FF4E  25                 	db	37
   282  00FF4F  75                 	db	117	;'u'
   283  00FF50  20                 	db	32
   284  00FF51  3D                 	db	61	;'='
   285  00FF52  20                 	db	32
   286  00FF53  30                 	db	48	;'0'
   287  00FF54  78                 	db	120	;'x'
   288  00FF55  25                 	db	37
   289  00FF56  78                 	db	120	;'x'
   290  00FF57  2C                 	db	44
   291  00FF58  20                 	db	32
   292  00FF59  6E                 	db	110	;'n'
   293  00FF5A  20                 	db	32
   294  00FF5B  3D                 	db	61	;'='
   295  00FF5C  20                 	db	32
   296  00FF5D  25                 	db	37
   297  00FF5E  75                 	db	117	;'u'
   298  00FF5F  2C                 	db	44
   299  00FF60  20                 	db	32
   300  00FF61  4E                 	db	78	;'N'
   301  00FF62  20                 	db	32
   302  00FF63  3D                 	db	61	;'='
   303  00FF64  20                 	db	32
   304  00FF65  25                 	db	37
   305  00FF66  2E                 	db	46
   306  00FF67  30                 	db	48	;'0'
   307  00FF68  66                 	db	102	;'f'
   308  00FF69  2C                 	db	44
   309  00FF6A  20                 	db	32
   310  00FF6B  6D                 	db	109	;'m'
   311  00FF6C  20                 	db	32
   312  00FF6D  3D                 	db	61	;'='
   313  00FF6E  20                 	db	32
   314  00FF6F  25                 	db	37
   315  00FF70  75                 	db	117	;'u'
   316  00FF71  2C                 	db	44
   317  00FF72  20                 	db	32
   318  00FF73  4D                 	db	77	;'M'
   319  00FF74  20                 	db	32
   320  00FF75  3D                 	db	61	;'='
   321  00FF76  20                 	db	32
   322  00FF77  25                 	db	37
   323  00FF78  75                 	db	117	;'u'
   324  00FF79  20                 	db	32
   325  00FF7A  0A                 	db	10
   326  00FF7B  0A                 	db	10
   327  00FF7C  0D                 	db	13
   328  00FF7D  00                 	db	0
   329  00FF7E                     STR_3:
   330                           
   331                           ; BSR set to: 57
   332  00FF7E  52                 	db	82	;'R'
   333  00FF7F  44                 	db	68	;'D'
   334  00FF80  32                 	db	50	;'2'
   335  00FF81  20                 	db	32
   336  00FF82  4F                 	db	79	;'O'
   337  00FF83  6E                 	db	110	;'n'
   338  00FF84  20                 	db	32
   339  00FF85  54                 	db	84	;'T'
   340  00FF86  69                 	db	105	;'i'
   341  00FF87  6D                 	db	109	;'m'
   342  00FF88  65                 	db	101	;'e'
   343  00FF89  20                 	db	32
   344  00FF8A  25                 	db	37
   345  00FF8B  66                 	db	102	;'f'
   346  00FF8C  2C                 	db	44
   347  00FF8D  20                 	db	32
   348  00FF8E  4F                 	db	79	;'O'
   349  00FF8F  66                 	db	102	;'f'
   350  00FF90  66                 	db	102	;'f'
   351  00FF91  20                 	db	32
   352  00FF92  54                 	db	84	;'T'
   353  00FF93  69                 	db	105	;'i'
   354  00FF94  6D                 	db	109	;'m'
   355  00FF95  65                 	db	101	;'e'
   356  00FF96  20                 	db	32
   357  00FF97  25                 	db	37
   358  00FF98  66                 	db	102	;'f'
   359  00FF99  20                 	db	32
   360  00FF9A  73                 	db	115	;'s'
   361  00FF9B  65                 	db	101	;'e'
   362  00FF9C  63                 	db	99	;'c'
   363  00FF9D  6F                 	db	111	;'o'
   364  00FF9E  6E                 	db	110	;'n'
   365  00FF9F  64                 	db	100	;'d'
   366  00FFA0  73                 	db	115	;'s'
   367  00FFA1  2C                 	db	44
   368  00FFA2  20                 	db	32
   369  00FFA3  66                 	db	102	;'f'
   370  00FFA4  72                 	db	114	;'r'
   371  00FFA5  65                 	db	101	;'e'
   372  00FFA6  71                 	db	113	;'q'
   373  00FFA7  75                 	db	117	;'u'
   374  00FFA8  65                 	db	101	;'e'
   375  00FFA9  6E                 	db	110	;'n'
   376  00FFAA  63                 	db	99	;'c'
   377  00FFAB  79                 	db	121	;'y'
   378  00FFAC  20                 	db	32
   379  00FFAD  3D                 	db	61	;'='
   380  00FFAE  20                 	db	32
   381  00FFAF  25                 	db	37
   382  00FFB0  66                 	db	102	;'f'
   383  00FFB1  20                 	db	32
   384  00FFB2  48                 	db	72	;'H'
   385  00FFB3  7A                 	db	122	;'z'
   386  00FFB4  0A                 	db	10
   387  00FFB5  0A                 	db	10
   388  00FFB6  0D                 	db	13
   389  00FFB7  00                 	db	0
   390  00FFB8                     STR_1:
   391                           
   392                           ; BSR set to: 57
   393  00FFB8  31                 	db	49	;'1'
   394  00FFB9  36                 	db	54	;'6'
   395  00FFBA  2D                 	db	45
   396  00FFBB  42                 	db	66	;'B'
   397  00FFBC  49                 	db	73	;'I'
   398  00FFBD  54                 	db	84	;'T'
   399  00FFBE  20                 	db	32
   400  00FFBF  54                 	db	84	;'T'
   401  00FFC0  4D                 	db	77	;'M'
   402  00FFC1  52                 	db	82	;'R'
   403  00FFC2  30                 	db	48	;'0'
   404  00FFC3  20                 	db	32
   405  00FFC4  44                 	db	68	;'D'
   406  00FFC5  65                 	db	101	;'e'
   407  00FFC6  6C                 	db	108	;'l'
   408  00FFC7  61                 	db	97	;'a'
   409  00FFC8  79                 	db	121	;'y'
   410  00FFC9  73                 	db	115	;'s'
   411  00FFCA  20                 	db	32
   412  00FFCB  0A                 	db	10
   413  00FFCC  0A                 	db	10
   414  00FFCD  0D                 	db	13
   415  00FFCE  00                 	db	0
   416  00FFCF                     STR_4:
   417                           
   418                           ; BSR set to: 57
   419  00FFCF  62                 	db	98	;'b'
   420  00FFD0  6C                 	db	108	;'l'
   421  00FFD1  69                 	db	105	;'i'
   422  00FFD2  6E                 	db	110	;'n'
   423  00FFD3  6B                 	db	107	;'k'
   424  00FFD4  72                 	db	114	;'r'
   425  00FFD5  61                 	db	97	;'a'
   426  00FFD6  74                 	db	116	;'t'
   427  00FFD7  65                 	db	101	;'e'
   428  00FFD8  20                 	db	32
   429  00FFD9  3D                 	db	61	;'='
   430  00FFDA  20                 	db	32
   431  00FFDB  25                 	db	37
   432  00FFDC  75                 	db	117	;'u'
   433  00FFDD  20                 	db	32
   434  00FFDE  0A                 	db	10
   435  00FFDF  0D                 	db	13
   436  00FFE0  00                 	db	0
   437  00FFE1                     STR_8:
   438                           
   439                           ; BSR set to: 57
   440  00FFE1  30                 	db	48	;'0'
   441  00FFE2  31                 	db	49	;'1'
   442  00FFE3  32                 	db	50	;'2'
   443  00FFE4  33                 	db	51	;'3'
   444  00FFE5  34                 	db	52	;'4'
   445  00FFE6  35                 	db	53	;'5'
   446  00FFE7  36                 	db	54	;'6'
   447  00FFE8  37                 	db	55	;'7'
   448  00FFE9  38                 	db	56	;'8'
   449  00FFEA  39                 	db	57	;'9'
   450  00FFEB  61                 	db	97	;'a'
   451  00FFEC  62                 	db	98	;'b'
   452  00FFED  63                 	db	99	;'c'
   453  00FFEE  64                 	db	100	;'d'
   454  00FFEF  65                 	db	101	;'e'
   455  00FFF0  66                 	db	102	;'f'
   456  00FFF1  00                 	db	0
   457  00FFF2                     STR_5:
   458                           
   459                           ; BSR set to: 57
   460  00FFF2  25                 	db	37
   461  00FFF3  63                 	db	99	;'c'
   462  00FFF4  25                 	db	37
   463  00FFF5  63                 	db	99	;'c'
   464  00FFF6  25                 	db	37
   465  00FFF7  63                 	db	99	;'c'
   466  00FFF8  25                 	db	37
   467  00FFF9  63                 	db	99	;'c'
   468  00FFFA  00                 	db	0
   469  00FFFB  00                 	db	0	; dummy byte at the end
   470  0000                     
   471                           	psect	nvBANK1
   472  000100                     __pnvBANK1:
   473                           	callstack 0
   474  000100                     _UART2_ErrorHandler:
   475                           	callstack 0
   476  000100                     	ds	2
   477  000102                     _UART2_OverrunErrorHandler:
   478                           	callstack 0
   479  000102                     	ds	2
   480  000104                     _UART2_FramingErrorHandler:
   481                           	callstack 0
   482  000104                     	ds	2
   483  000106                     _timer0ReloadVal16bit:
   484                           	callstack 0
   485  000106                     	ds	2
   486  0000                     _PIR6bits	set	14758
   487  0000                     _PIR3bits	set	14755
   488  0000                     _PMD7	set	14791
   489  0000                     _PMD6	set	14790
   490  0000                     _PMD5	set	14789
   491  0000                     _PMD4	set	14788
   492  0000                     _PMD3	set	14787
   493  0000                     _PMD2	set	14786
   494  0000                     _PMD1	set	14785
   495  0000                     _PMD0	set	14784
   496  0000                     _OSCTUNE	set	14814
   497  0000                     _OSCFRQ	set	14815
   498  0000                     _OSCEN	set	14813
   499  0000                     _OSCCON3	set	14811
   500  0000                     _OSCCON1	set	14809
   501  0000                     _TMR0IF	set	118047
   502  0000                     _RB6PPS	set	14862
   503  0000                     _RC0PPS	set	14864
   504  0000                     _U2RXPPS	set	15080
   505  0000                     _INLVLE	set	14980
   506  0000                     _INLVLD	set	14964
   507  0000                     _INLVLC	set	14948
   508  0000                     _INLVLB	set	14932
   509  0000                     _INLVLA	set	14916
   510  0000                     _SLRCONE	set	14979
   511  0000                     _SLRCOND	set	14963
   512  0000                     _SLRCONC	set	14947
   513  0000                     _SLRCONB	set	14931
   514  0000                     _SLRCONA	set	14915
   515  0000                     _ODCOND	set	14962
   516  0000                     _ODCONC	set	14946
   517  0000                     _ODCONB	set	14930
   518  0000                     _ODCONA	set	14914
   519  0000                     _ODCONE	set	14978
   520  0000                     _RD1I2C	set	14971
   521  0000                     _RD0I2C	set	14970
   522  0000                     _RC4I2C	set	14955
   523  0000                     _RC3I2C	set	14954
   524  0000                     _RB2I2C	set	14939
   525  0000                     _RB1I2C	set	14938
   526  0000                     _WPUC	set	14945
   527  0000                     _WPUA	set	14913
   528  0000                     _WPUB	set	14929
   529  0000                     _WPUE	set	14977
   530  0000                     _WPUD	set	14961
   531  0000                     _ANSELA	set	14912
   532  0000                     _ANSELE	set	14976
   533  0000                     _ANSELB	set	14928
   534  0000                     _ANSELC	set	14944
   535  0000                     _ANSELD	set	14960
   536  0000                     _U2TXB	set	15826
   537  0000                     _U2RXB	set	15824
   538  0000                     _U2ERRIRbits	set	15841
   539  0000                     _U2CON0bits	set	15834
   540  0000                     _U2ERRIE	set	15842
   541  0000                     _U2ERRIR	set	15841
   542  0000                     _U2UIR	set	15840
   543  0000                     _U2FIFO	set	15839
   544  0000                     _U2BRGH	set	15838
   545  0000                     _U2BRGL	set	15837
   546  0000                     _U2CON2	set	15836
   547  0000                     _U2CON1	set	15835
   548  0000                     _U2CON0	set	15834
   549  0000                     _U2P3L	set	15832
   550  0000                     _U2P2L	set	15830
   551  0000                     _U2P1L	set	15828
   552  0000                     _PORTDbits	set	16333
   553  0000                     _LATDbits	set	16317
   554  0000                     _LATCbits	set	16316
   555  0000                     _T0CON1bits	set	16313
   556  0000                     _TRISD	set	16325
   557  0000                     _TRISC	set	16324
   558  0000                     _TRISB	set	16323
   559  0000                     _TRISA	set	16322
   560  0000                     _TRISE	set	16326
   561  0000                     _LATC	set	16316
   562  0000                     _LATB	set	16315
   563  0000                     _LATA	set	16314
   564  0000                     _LATD	set	16317
   565  0000                     _LATE	set	16318
   566  0000                     _T0CON0bits	set	16312
   567  0000                     _T0CON0	set	16312
   568  0000                     _TMR0L	set	16310
   569  0000                     _TMR0H	set	16311
   570  0000                     _T0CON1	set	16313
   571                           
   572                           ; #config settings
   573                           
   574                           	psect	cinit
   575  00BDD4                     __pcinit:
   576                           	callstack 0
   577  00BDD4                     start_initialization:
   578                           	callstack 0
   579  00BDD4                     __initialization:
   580                           	callstack 0
   581                           
   582                           ; Clear objects allocated to BANK1 (8 bytes)
   583  00BDD4  EE00  F108         	lfsr	0,__pbssBANK1
   584  00BDD8  0E08               	movlw	8
   585  00BDDA                     clear_0:
   586  00BDDA  6AEE               	clrf	postinc0,c
   587  00BDDC  06E8               	decf	wreg,f,c
   588  00BDDE  E1FD               	bnz	clear_0
   589  00BDE0                     end_of_initialization:
   590                           	callstack 0
   591  00BDE0                     __end_of__initialization:
   592                           	callstack 0
   593  00BDE0  0100               	movlb	0
   594  00BDE2  EF28  F076         	goto	_main	;jump to C main() function
   595                           
   596                           	psect	bssBANK1
   597  000108                     __pbssBANK1:
   598                           	callstack 0
   599  000108                     _errno:
   600                           	callstack 0
   601  000108                     	ds	2
   602  00010A                     _last_switch1_value:
   603                           	callstack 0
   604  00010A                     	ds	2
   605  00010C                     _has_switch1_changed:
   606                           	callstack 0
   607  00010C                     	ds	2
   608  00010E                     _blinkrate:
   609                           	callstack 0
   610  00010E                     	ds	1
   611  00010F                     _uart2RxLastError:
   612                           	callstack 0
   613  00010F                     	ds	1
   614                           
   615                           	psect	cstackBANK0
   616  000060                     __pcstackBANK0:
   617                           	callstack 0
   618  000060                     ___flmul@sign:
   619                           	callstack 0
   620                           
   621                           ; 1 bytes @ 0x0
   622  000060                     	ds	1
   623  000061                     ___flmul@grs:
   624                           	callstack 0
   625                           
   626                           ; 4 bytes @ 0x1
   627  000061                     	ds	4
   628  000065                     ___flmul@aexp:
   629                           	callstack 0
   630                           
   631                           ; 1 bytes @ 0x5
   632  000065                     	ds	1
   633  000066                     ___flmul@bexp:
   634                           	callstack 0
   635                           
   636                           ; 1 bytes @ 0x6
   637  000066                     	ds	1
   638  000067                     ___flmul@prod:
   639                           	callstack 0
   640                           
   641                           ; 4 bytes @ 0x7
   642  000067                     	ds	4
   643  00006B                     ___flmul@temp:
   644                           	callstack 0
   645                           
   646                           ; 2 bytes @ 0xB
   647  00006B                     	ds	2
   648  00006D                     ??_eval_poly:
   649  00006D                     ?___fldiv:
   650                           	callstack 0
   651  00006D                     ___fldiv@b:
   652                           	callstack 0
   653  00006D                     _fround$1578:
   654                           	callstack 0
   655                           
   656                           ; 4 bytes @ 0xD
   657  00006D                     	ds	4
   658  000071                     ___fldiv@a:
   659                           	callstack 0
   660  000071                     eval_poly@res:
   661                           	callstack 0
   662  000071                     _fround$1577:
   663                           	callstack 0
   664                           
   665                           ; 4 bytes @ 0x11
   666  000071                     	ds	4
   667  000075                     ??___fldiv:
   668  000075                     ?_log:
   669                           	callstack 0
   670  000075                     ?_ldexp:
   671                           	callstack 0
   672  000075                     fround@prec:
   673                           	callstack 0
   674  000075                     ldexp@value:
   675                           	callstack 0
   676  000075                     log@x:
   677                           	callstack 0
   678                           
   679                           ; 4 bytes @ 0x15
   680  000075                     	ds	4
   681  000079                     ldexp@newexp:
   682                           	callstack 0
   683  000079                     log@exponent:
   684                           	callstack 0
   685  000079                     ___fldiv@rem:
   686                           	callstack 0
   687                           
   688                           ; 4 bytes @ 0x19
   689  000079                     	ds	2
   690  00007B                     ??_ldexp:
   691                           
   692                           ; 1 bytes @ 0x1B
   693  00007B                     	ds	2
   694  00007D                     ___fldiv@sign:
   695                           	callstack 0
   696                           
   697                           ; 1 bytes @ 0x1D
   698  00007D                     	ds	1
   699  00007E                     ___fldiv@new_exp:
   700                           	callstack 0
   701                           
   702                           ; 2 bytes @ 0x1E
   703  00007E                     	ds	2
   704  000080                     ___fldiv@grs:
   705                           	callstack 0
   706                           
   707                           ; 4 bytes @ 0x20
   708  000080                     	ds	4
   709  000084                     ___fldiv@bexp:
   710                           	callstack 0
   711                           
   712                           ; 1 bytes @ 0x24
   713  000084                     	ds	1
   714  000085                     ___fldiv@aexp:
   715                           	callstack 0
   716                           
   717                           ; 1 bytes @ 0x25
   718  000085                     	ds	1
   719  000086                     ?_exp:
   720                           	callstack 0
   721  000086                     exp@x:
   722                           	callstack 0
   723                           
   724                           ; 4 bytes @ 0x26
   725  000086                     	ds	4
   726  00008A                     _exp$1583:
   727                           	callstack 0
   728                           
   729                           ; 4 bytes @ 0x2A
   730  00008A                     	ds	4
   731  00008E                     exp@exponent:
   732                           	callstack 0
   733                           
   734                           ; 2 bytes @ 0x2E
   735  00008E                     	ds	2
   736  000090                     exp@sign:
   737                           	callstack 0
   738                           
   739                           ; 1 bytes @ 0x30
   740  000090                     	ds	1
   741  000091                     ?_pow:
   742                           	callstack 0
   743  000091                     pow@x:
   744                           	callstack 0
   745                           
   746                           ; 4 bytes @ 0x31
   747  000091                     	ds	4
   748  000095                     pow@y:
   749                           	callstack 0
   750                           
   751                           ; 4 bytes @ 0x35
   752  000095                     	ds	4
   753  000099                     _pow$1581:
   754                           	callstack 0
   755                           
   756                           ; 4 bytes @ 0x39
   757  000099                     	ds	4
   758  00009D                     _pow$1582:
   759                           	callstack 0
   760                           
   761                           ; 4 bytes @ 0x3D
   762  00009D                     	ds	4
   763  0000A1                     pow@sign:
   764                           	callstack 0
   765                           
   766                           ; 1 bytes @ 0x41
   767  0000A1                     	ds	1
   768  0000A2                     pow@yi:
   769                           	callstack 0
   770                           
   771                           ; 4 bytes @ 0x42
   772  0000A2                     	ds	4
   773  0000A6                     ?_printf:
   774                           	callstack 0
   775  0000A6                     printf@f:
   776                           	callstack 0
   777                           
   778                           ; 2 bytes @ 0x46
   779  0000A6                     	ds	16
   780  0000B6                     ??_printf:
   781                           
   782                           ; 1 bytes @ 0x56
   783  0000B6                     	ds	4
   784  0000BA                     _printf$1580:
   785                           	callstack 0
   786                           
   787                           ; 4 bytes @ 0x5A
   788  0000BA                     	ds	4
   789  0000BE                     printf@cp:
   790                           	callstack 0
   791                           
   792                           ; 2 bytes @ 0x5E
   793  0000BE                     	ds	2
   794  0000C0                     printf@idx:
   795                           	callstack 0
   796                           
   797                           ; 1 bytes @ 0x60
   798  0000C0                     	ds	1
   799  0000C1                     printf@len:
   800                           	callstack 0
   801                           
   802                           ; 2 bytes @ 0x61
   803  0000C1                     	ds	2
   804  0000C3                     printf@ap:
   805                           	callstack 0
   806                           
   807                           ; 2 bytes @ 0x63
   808  0000C3                     	ds	2
   809  0000C5                     printf@flag:
   810                           	callstack 0
   811                           
   812                           ; 2 bytes @ 0x65
   813  0000C5                     	ds	2
   814  0000C7                     printf@eexp:
   815                           	callstack 0
   816                           
   817                           ; 2 bytes @ 0x67
   818  0000C7                     	ds	2
   819  0000C9                     printf@val:
   820                           	callstack 0
   821                           
   822                           ; 4 bytes @ 0x69
   823  0000C9                     	ds	4
   824  0000CD                     printf@tmpval:
   825                           	callstack 0
   826                           
   827                           ; 4 bytes @ 0x6D
   828  0000CD                     	ds	4
   829  0000D1                     printf@fval:
   830                           	callstack 0
   831                           
   832                           ; 4 bytes @ 0x71
   833  0000D1                     	ds	4
   834  0000D5                     printf@prec:
   835                           	callstack 0
   836                           
   837                           ; 2 bytes @ 0x75
   838  0000D5                     	ds	2
   839  0000D7                     printf@c:
   840                           	callstack 0
   841                           
   842                           ; 1 bytes @ 0x77
   843  0000D7                     	ds	1
   844  0000D8                     ??_buttonResponse:
   845                           
   846                           ; 1 bytes @ 0x78
   847  0000D8                     	ds	1
   848  0000D9                     ??_main:
   849                           
   850                           ; 1 bytes @ 0x79
   851  0000D9                     	ds	1
   852  0000DA                     main@f:
   853                           	callstack 0
   854                           
   855                           ; 4 bytes @ 0x7A
   856  0000DA                     	ds	4
   857  0000DE                     _main$1573:
   858                           	callstack 0
   859                           
   860                           ; 4 bytes @ 0x7E
   861  0000DE                     	ds	4
   862  0000E2                     _main$1576:
   863                           	callstack 0
   864                           
   865                           ; 4 bytes @ 0x82
   866  0000E2                     	ds	4
   867  0000E6                     main@T_on:
   868                           	callstack 0
   869                           
   870                           ; 4 bytes @ 0x86
   871  0000E6                     	ds	4
   872  0000EA                     main@T_off:
   873                           	callstack 0
   874                           
   875                           ; 4 bytes @ 0x8A
   876  0000EA                     	ds	4
   877  0000EE                     main@k:
   878                           	callstack 0
   879                           
   880                           ; 2 bytes @ 0x8E
   881  0000EE                     	ds	2
   882  0000F0                     _main$1574:
   883                           	callstack 0
   884                           
   885                           ; 4 bytes @ 0x90
   886  0000F0                     	ds	4
   887  0000F4                     _main$1575:
   888                           	callstack 0
   889                           
   890                           ; 4 bytes @ 0x94
   891  0000F4                     	ds	4
   892  0000F8                     _main$1572:
   893                           	callstack 0
   894                           
   895                           ; 4 bytes @ 0x98
   896  0000F8                     	ds	4
   897  0000FC                     main@n:
   898                           	callstack 0
   899                           
   900                           ; 2 bytes @ 0x9C
   901  0000FC                     	ds	2
   902  0000FE                     main@m:
   903                           	callstack 0
   904                           
   905                           ; 2 bytes @ 0x9E
   906  0000FE                     	ds	2
   907                           
   908                           	psect	cstackCOMRAM
   909  000001                     __pcstackCOMRAM:
   910                           	callstack 0
   911  000001                     ??_TMR0_Initialize:
   912  000001                     ??_isdigit:
   913  000001                     ?_poll_switch1_for_edges:
   914                           	callstack 0
   915  000001                     ?___wmul:
   916                           	callstack 0
   917  000001                     ?___awmod:
   918                           	callstack 0
   919  000001                     ?___lwmod:
   920                           	callstack 0
   921  000001                     ?__tdiv_to_l_:
   922                           	callstack 0
   923  000001                     ?__div_to_l_:
   924                           	callstack 0
   925  000001                     ?___lldiv:
   926                           	callstack 0
   927  000001                     ?___flneg:
   928                           	callstack 0
   929  000001                     UART2_Write@txData:
   930                           	callstack 0
   931  000001                     DELAY_milliseconds@milliseconds:
   932                           	callstack 0
   933  000001                     TMR0_WriteTimer@timerVal:
   934                           	callstack 0
   935  000001                     UART2_SetFramingErrorHandler@interruptHandler:
   936                           	callstack 0
   937  000001                     UART2_SetOverrunErrorHandler@interruptHandler:
   938                           	callstack 0
   939  000001                     UART2_SetErrorHandler@interruptHandler:
   940                           	callstack 0
   941  000001                     poll_switch1_for_edges@digitalinputpin:
   942                           	callstack 0
   943  000001                     ___wmul@multiplier:
   944                           	callstack 0
   945  000001                     ___awmod@dividend:
   946                           	callstack 0
   947  000001                     ___lwmod@dividend:
   948                           	callstack 0
   949  000001                     ___lldiv@dividend:
   950                           	callstack 0
   951  000001                     __div_to_l_@f1:
   952                           	callstack 0
   953  000001                     ___flge@ff1:
   954                           	callstack 0
   955  000001                     ___flneg@f1:
   956                           	callstack 0
   957  000001                     __tdiv_to_l_@f1:
   958                           	callstack 0
   959                           
   960                           ; 4 bytes @ 0x0
   961  000001                     	ds	1
   962  000002                     putch@txData:
   963                           	callstack 0
   964  000002                     _isdigit$1245:
   965                           	callstack 0
   966                           
   967                           ; 1 bytes @ 0x1
   968  000002                     	ds	1
   969  000003                     ??_DELAY_milliseconds:
   970  000003                     isdigit@c:
   971                           	callstack 0
   972  000003                     poll_switch1_for_edges@has_switch1_changed:
   973                           	callstack 0
   974  000003                     ___wmul@multiplicand:
   975                           	callstack 0
   976  000003                     ___awmod@divisor:
   977                           	callstack 0
   978  000003                     ___lwmod@divisor:
   979                           	callstack 0
   980                           
   981                           ; 2 bytes @ 0x2
   982  000003                     	ds	2
   983  000005                     ___awmod@counter:
   984                           	callstack 0
   985  000005                     ___lwmod@counter:
   986                           	callstack 0
   987  000005                     ___wmul@product:
   988                           	callstack 0
   989  000005                     ___lldiv@divisor:
   990                           	callstack 0
   991  000005                     __div_to_l_@f2:
   992                           	callstack 0
   993  000005                     ___flge@ff2:
   994                           	callstack 0
   995  000005                     __tdiv_to_l_@f2:
   996                           	callstack 0
   997                           
   998                           ; 4 bytes @ 0x4
   999  000005                     	ds	1
  1000  000006                     ?___lwdiv:
  1001                           	callstack 0
  1002  000006                     ___awmod@sign:
  1003                           	callstack 0
  1004  000006                     ___lwdiv@dividend:
  1005                           	callstack 0
  1006                           
  1007                           ; 2 bytes @ 0x5
  1008  000006                     	ds	1
  1009  000007                     ?___awdiv:
  1010                           	callstack 0
  1011  000007                     ___awdiv@dividend:
  1012                           	callstack 0
  1013                           
  1014                           ; 2 bytes @ 0x6
  1015  000007                     	ds	1
  1016  000008                     ___lwdiv@divisor:
  1017                           	callstack 0
  1018                           
  1019                           ; 2 bytes @ 0x7
  1020  000008                     	ds	1
  1021  000009                     ??__tdiv_to_l_:
  1022  000009                     ??___flge:
  1023  000009                     ___awdiv@divisor:
  1024                           	callstack 0
  1025  000009                     ___lldiv@quotient:
  1026                           	callstack 0
  1027  000009                     __div_to_l_@quot:
  1028                           	callstack 0
  1029                           
  1030                           ; 4 bytes @ 0x8
  1031  000009                     	ds	1
  1032  00000A                     ___lwdiv@quotient:
  1033                           	callstack 0
  1034                           
  1035                           ; 2 bytes @ 0x9
  1036  00000A                     	ds	1
  1037  00000B                     ___awdiv@counter:
  1038                           	callstack 0
  1039                           
  1040                           ; 1 bytes @ 0xA
  1041  00000B                     	ds	1
  1042  00000C                     ___awdiv@sign:
  1043                           	callstack 0
  1044  00000C                     ___lwdiv@counter:
  1045                           	callstack 0
  1046  00000C                     __tdiv_to_l_@quot:
  1047                           	callstack 0
  1048                           
  1049                           ; 4 bytes @ 0xB
  1050  00000C                     	ds	1
  1051  00000D                     ___lldiv@counter:
  1052                           	callstack 0
  1053  00000D                     __div_to_l_@cntr:
  1054                           	callstack 0
  1055  00000D                     ___awdiv@quotient:
  1056                           	callstack 0
  1057                           
  1058                           ; 2 bytes @ 0xC
  1059  00000D                     	ds	1
  1060  00000E                     ?___llmod:
  1061                           	callstack 0
  1062  00000E                     __div_to_l_@exp1:
  1063                           	callstack 0
  1064  00000E                     ___llmod@dividend:
  1065                           	callstack 0
  1066                           
  1067                           ; 4 bytes @ 0xD
  1068  00000E                     	ds	1
  1069  00000F                     ?___fltol:
  1070                           	callstack 0
  1071  00000F                     ___fltol@f1:
  1072                           	callstack 0
  1073                           
  1074                           ; 4 bytes @ 0xE
  1075  00000F                     	ds	1
  1076  000010                     __tdiv_to_l_@cntr:
  1077                           	callstack 0
  1078                           
  1079                           ; 1 bytes @ 0xF
  1080  000010                     	ds	1
  1081  000011                     __tdiv_to_l_@exp1:
  1082                           	callstack 0
  1083                           
  1084                           ; 1 bytes @ 0x10
  1085  000011                     	ds	1
  1086  000012                     ___llmod@divisor:
  1087                           	callstack 0
  1088                           
  1089                           ; 4 bytes @ 0x11
  1090  000012                     	ds	1
  1091  000013                     ??___fltol:
  1092                           
  1093                           ; 1 bytes @ 0x12
  1094  000013                     	ds	3
  1095  000016                     ___llmod@counter:
  1096                           	callstack 0
  1097                           
  1098                           ; 1 bytes @ 0x15
  1099  000016                     	ds	1
  1100  000017                     ___fltol@sign1:
  1101                           	callstack 0
  1102                           
  1103                           ; 1 bytes @ 0x16
  1104  000017                     	ds	1
  1105  000018                     ___fltol@exp1:
  1106                           	callstack 0
  1107                           
  1108                           ; 1 bytes @ 0x17
  1109  000018                     	ds	1
  1110  000019                     ?___xxtofl:
  1111                           	callstack 0
  1112  000019                     ___xxtofl@val:
  1113                           	callstack 0
  1114                           
  1115                           ; 4 bytes @ 0x18
  1116  000019                     	ds	4
  1117  00001D                     ??___xxtofl:
  1118                           
  1119                           ; 1 bytes @ 0x1C
  1120  00001D                     	ds	4
  1121  000021                     ___xxtofl@sign:
  1122                           	callstack 0
  1123                           
  1124                           ; 1 bytes @ 0x20
  1125  000021                     	ds	1
  1126  000022                     ___xxtofl@exp:
  1127                           	callstack 0
  1128                           
  1129                           ; 1 bytes @ 0x21
  1130  000022                     	ds	1
  1131  000023                     ___xxtofl@arg:
  1132                           	callstack 0
  1133                           
  1134                           ; 4 bytes @ 0x22
  1135  000023                     	ds	4
  1136  000027                     ___fleq@ff1:
  1137                           	callstack 0
  1138                           
  1139                           ; 4 bytes @ 0x26
  1140  000027                     	ds	4
  1141  00002B                     ___fleq@ff2:
  1142                           	callstack 0
  1143                           
  1144                           ; 4 bytes @ 0x2A
  1145  00002B                     	ds	4
  1146  00002F                     ??___fleq:
  1147                           
  1148                           ; 1 bytes @ 0x2E
  1149  00002F                     	ds	4
  1150  000033                     ?_frexp:
  1151                           	callstack 0
  1152  000033                     frexp@value:
  1153                           	callstack 0
  1154                           
  1155                           ; 4 bytes @ 0x32
  1156  000033                     	ds	4
  1157  000037                     frexp@eptr:
  1158                           	callstack 0
  1159                           
  1160                           ; 2 bytes @ 0x36
  1161  000037                     	ds	2
  1162  000039                     ??_frexp:
  1163                           
  1164                           ; 1 bytes @ 0x38
  1165  000039                     	ds	2
  1166  00003B                     ?___fladd:
  1167                           	callstack 0
  1168  00003B                     ___fladd@b:
  1169                           	callstack 0
  1170                           
  1171                           ; 4 bytes @ 0x3A
  1172  00003B                     	ds	4
  1173  00003F                     ___fladd@a:
  1174                           	callstack 0
  1175                           
  1176                           ; 4 bytes @ 0x3E
  1177  00003F                     	ds	4
  1178  000043                     ??___fladd:
  1179                           
  1180                           ; 1 bytes @ 0x42
  1181  000043                     	ds	4
  1182  000047                     ___fladd@signs:
  1183                           	callstack 0
  1184                           
  1185                           ; 1 bytes @ 0x46
  1186  000047                     	ds	1
  1187  000048                     ___fladd@aexp:
  1188                           	callstack 0
  1189                           
  1190                           ; 1 bytes @ 0x47
  1191  000048                     	ds	1
  1192  000049                     ___fladd@bexp:
  1193                           	callstack 0
  1194                           
  1195                           ; 1 bytes @ 0x48
  1196  000049                     	ds	1
  1197  00004A                     ___fladd@grs:
  1198                           	callstack 0
  1199                           
  1200                           ; 1 bytes @ 0x49
  1201  00004A                     	ds	1
  1202  00004B                     ?___flmul:
  1203                           	callstack 0
  1204  00004B                     ?_floor:
  1205                           	callstack 0
  1206  00004B                     ___flmul@b:
  1207                           	callstack 0
  1208  00004B                     floor@x:
  1209                           	callstack 0
  1210                           
  1211                           ; 4 bytes @ 0x4A
  1212  00004B                     	ds	4
  1213  00004F                     ___flmul@a:
  1214                           	callstack 0
  1215  00004F                     floor@i:
  1216                           	callstack 0
  1217                           
  1218                           ; 4 bytes @ 0x4E
  1219  00004F                     	ds	4
  1220  000053                     ??___flmul:
  1221  000053                     floor@expon:
  1222                           	callstack 0
  1223                           
  1224                           ; 2 bytes @ 0x52
  1225  000053                     	ds	4
  1226  000057                     ?___flsub:
  1227                           	callstack 0
  1228  000057                     ?_eval_poly:
  1229                           	callstack 0
  1230  000057                     ?_fround:
  1231                           	callstack 0
  1232  000057                     ?_scale:
  1233                           	callstack 0
  1234  000057                     ___flsub@b:
  1235                           	callstack 0
  1236  000057                     eval_poly@x:
  1237                           	callstack 0
  1238                           
  1239                           ; 4 bytes @ 0x56
  1240  000057                     	ds	4
  1241  00005B                     eval_poly@d:
  1242                           	callstack 0
  1243  00005B                     ___flsub@a:
  1244                           	callstack 0
  1245  00005B                     _scale$1579:
  1246                           	callstack 0
  1247                           
  1248                           ; 4 bytes @ 0x5A
  1249  00005B                     	ds	2
  1250  00005D                     eval_poly@n:
  1251                           	callstack 0
  1252                           
  1253                           ; 2 bytes @ 0x5C
  1254  00005D                     	ds	2
  1255  00005F                     scale@scl:
  1256                           	callstack 0
  1257                           
  1258                           ; 1 bytes @ 0x5E
  1259  00005F                     	ds	1
  1260  000060                     
  1261                           ; 1 bytes @ 0x5F
  1262 ;;
  1263 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  1264 ;;
  1265 ;; *************** function _main *****************
  1266 ;; Defined at:
  1267 ;;		line 18 in file "main.c"
  1268 ;; Parameters:    Size  Location     Type
  1269 ;;		None
  1270 ;; Auto vars:     Size  Location     Type
  1271 ;;  k               2  142[BANK0 ] unsigned int 
  1272 ;;  T_off           4  138[BANK0 ] float 
  1273 ;;  T_on            4  134[BANK0 ] float 
  1274 ;;  f               4  122[BANK0 ] float 
  1275 ;;  m               2  158[BANK0 ] unsigned int 
  1276 ;;  n               2  156[BANK0 ] unsigned int 
  1277 ;; Return value:  Size  Location     Type
  1278 ;;                  1    wreg      void 
  1279 ;; Registers used:
  1280 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1281 ;; Tracked objects:
  1282 ;;		On entry : 0/0
  1283 ;;		On exit  : 0/0
  1284 ;;		Unchanged: 0/0
  1285 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1286 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1287 ;;      Locals:         0      38       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1288 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1289 ;;      Totals:         0      39       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1290 ;;Total ram usage:       39 bytes
  1291 ;; Hardware stack levels required when called:    5
  1292 ;; This function calls:
  1293 ;;		_SYSTEM_Initialize
  1294 ;;		_TMR0_WriteTimer
  1295 ;;		___fladd
  1296 ;;		___fldiv
  1297 ;;		___flmul
  1298 ;;		___flsub
  1299 ;;		___xxtofl
  1300 ;;		_buttonResponse
  1301 ;;		_clearPuTTY
  1302 ;;		_pow
  1303 ;;		_printf
  1304 ;; This function is called by:
  1305 ;;		Startup code after reset
  1306 ;; This function uses a non-reentrant model
  1307 ;;
  1308                           
  1309                           	psect	text0
  1310  00EC50                     __ptext0:
  1311                           	callstack 0
  1312  00EC50                     _main:
  1313                           	callstack 26
  1314  00EC50                     
  1315                           ;main.c: 22: SYSTEM_Initialize();
  1316  00EC50  ECF3  F05E         	call	_SYSTEM_Initialize	;wreg free
  1317  00EC54                     
  1318                           ;main.c: 25: float T_on, T_off, f;;main.c: 28: clearPuTTY();
  1319  00EC54  ECE0  F060         	call	_clearPuTTY	;wreg free
  1320  00EC58                     
  1321                           ;main.c: 29: printf("16-BIT TMR0 Delays \n\n\r");
  1322  00EC58  0EB8               	movlw	low STR_1
  1323  00EC5A  0100               	movlb	0	; () banked
  1324  00EC5C  6FA6               	movwf	printf@f& (0+255),b
  1325  00EC5E  0EFF               	movlw	high STR_1
  1326  00EC60  6FA7               	movwf	(printf@f+1)& (0+255),b
  1327  00EC62  ECFE  F078         	call	_printf	;wreg free
  1328  00EC66                     
  1329                           ;main.c: 32: timer0ReloadVal16bit = 4598u;
  1330  00EC66  0E11               	movlw	17
  1331  00EC68  0101               	movlb	1	; () banked
  1332  00EC6A  6F07               	movwf	(_timer0ReloadVal16bit+1)& (0+255),b	;volatile
  1333  00EC6C  0EF6               	movlw	246
  1334  00EC6E  6F06               	movwf	_timer0ReloadVal16bit& (0+255),b	;volatile
  1335  00EC70                     
  1336                           ; BSR set to: 1
  1337                           ;main.c: 33: T0CON1bits.CKPS = 5;
  1338  00EC70  50B9               	movf	185,w,c	;volatile
  1339  00EC72  0BF0               	andlw	-16
  1340  00EC74  0905               	iorlw	5
  1341  00EC76  6EB9               	movwf	185,c	;volatile
  1342  00EC78                     
  1343                           ; BSR set to: 1
  1344                           ;main.c: 34: T0CON0bits.OUTPS = 0;
  1345  00EC78  0EF0               	movlw	-16
  1346  00EC7A  16B8               	andwf	184,f,c	;volatile
  1347  00EC7C                     
  1348                           ; BSR set to: 1
  1349                           ;main.c: 35: n = T0CON1bits.CKPS;
  1350  00EC7C  50B9               	movf	185,w,c	;volatile
  1351  00EC7E  0B0F               	andlw	15
  1352  00EC80  0100               	movlb	0	; () banked
  1353  00EC82  6FD9               	movwf	??_main& (0+255),b
  1354  00EC84  51D9               	movf	??_main& (0+255),w,b
  1355  00EC86  6FFC               	movwf	main@n& (0+255),b
  1356  00EC88  6BFD               	clrf	(main@n+1)& (0+255),b
  1357  00EC8A                     
  1358                           ; BSR set to: 0
  1359                           ;main.c: 36: m = T0CON0bits.OUTPS;
  1360  00EC8A  50B8               	movf	184,w,c	;volatile
  1361  00EC8C  0B0F               	andlw	15
  1362  00EC8E  6FD9               	movwf	??_main& (0+255),b
  1363  00EC90  51D9               	movf	??_main& (0+255),w,b
  1364  00EC92  6FFE               	movwf	main@m& (0+255),b
  1365  00EC94  6BFF               	clrf	(main@m+1)& (0+255),b
  1366  00EC96                     
  1367                           ; BSR set to: 0
  1368                           ;main.c: 38: printf("timer0ReloadVal16bit %u = 0x%x, n = %u, N = %.0f, m = %u, M = %u \n
      +                          \n\r",;main.c: 39: timer0ReloadVal16bit, timer0ReloadVal16bit, n, pow(2,n), m, m+1);
  1369  00EC96  C0FC  F019         	movff	main@n,___xxtofl@val
  1370  00EC9A  C0FD  F01A         	movff	main@n+1,___xxtofl@val+1
  1371  00EC9E  6A1B               	clrf	(___xxtofl@val+2)^0,c
  1372  00ECA0  6A1C               	clrf	(___xxtofl@val+3)^0,c
  1373  00ECA2  0E00               	movlw	0
  1374  00ECA4  EC7A  F068         	call	___xxtofl
  1375  00ECA8  C019  F0F8         	movff	?___xxtofl,_main$1572
  1376  00ECAC  C01A  F0F9         	movff	?___xxtofl+1,_main$1572+1
  1377  00ECB0  C01B  F0FA         	movff	?___xxtofl+2,_main$1572+2
  1378  00ECB4  C01C  F0FB         	movff	?___xxtofl+3,_main$1572+3
  1379  00ECB8                     
  1380                           ;main.c: 38: printf("timer0ReloadVal16bit %u = 0x%x, n = %u, N = %.0f, m = %u, M = %u \n
      +                          \n\r",;main.c: 39: timer0ReloadVal16bit, timer0ReloadVal16bit, n, pow(2,n), m, m+1);
  1381  00ECB8  0E39               	movlw	low STR_2
  1382  00ECBA  0100               	movlb	0	; () banked
  1383  00ECBC  6FA6               	movwf	printf@f& (0+255),b
  1384  00ECBE  0EFF               	movlw	high STR_2
  1385  00ECC0  6FA7               	movwf	(printf@f+1)& (0+255),b
  1386  00ECC2  C106  F0A8         	movff	_timer0ReloadVal16bit,?_printf+2	;volatile
  1387  00ECC6  C107  F0A9         	movff	_timer0ReloadVal16bit+1,?_printf+3	;volatile
  1388  00ECCA  C106  F0AA         	movff	_timer0ReloadVal16bit,?_printf+4	;volatile
  1389  00ECCE  C107  F0AB         	movff	_timer0ReloadVal16bit+1,?_printf+5	;volatile
  1390  00ECD2  C0FC  F0AC         	movff	main@n,?_printf+6
  1391  00ECD6  C0FD  F0AD         	movff	main@n+1,?_printf+7
  1392  00ECDA  0E00               	movlw	0
  1393  00ECDC  6F91               	movwf	pow@x& (0+255),b
  1394  00ECDE  0E00               	movlw	0
  1395  00ECE0  6F92               	movwf	(pow@x+1)& (0+255),b
  1396  00ECE2  0E00               	movlw	0
  1397  00ECE4  6F93               	movwf	(pow@x+2)& (0+255),b
  1398  00ECE6  0E40               	movlw	64
  1399  00ECE8  6F94               	movwf	(pow@x+3)& (0+255),b
  1400  00ECEA  C0F8  F095         	movff	_main$1572,pow@y
  1401  00ECEE  C0F9  F096         	movff	_main$1572+1,pow@y+1
  1402  00ECF2  C0FA  F097         	movff	_main$1572+2,pow@y+2
  1403  00ECF6  C0FB  F098         	movff	_main$1572+3,pow@y+3
  1404  00ECFA  EC54  F069         	call	_pow	;wreg free
  1405  00ECFE  C091  F0AE         	movff	?_pow,?_printf+8
  1406  00ED02  C092  F0AF         	movff	?_pow+1,?_printf+9
  1407  00ED06  C093  F0B0         	movff	?_pow+2,?_printf+10
  1408  00ED0A  C094  F0B1         	movff	?_pow+3,?_printf+11
  1409  00ED0E  C0FE  F0B2         	movff	main@m,?_printf+12
  1410  00ED12  C0FF  F0B3         	movff	main@m+1,?_printf+13
  1411  00ED16  0E01               	movlw	1
  1412  00ED18  0100               	movlb	0	; () banked
  1413  00ED1A  25FE               	addwf	main@m& (0+255),w,b
  1414  00ED1C  6FB4               	movwf	(?_printf+14)& (0+255),b
  1415  00ED1E  0E00               	movlw	0
  1416  00ED20  21FF               	addwfc	(main@m+1)& (0+255),w,b
  1417  00ED22  6FB5               	movwf	(?_printf+15)& (0+255),b
  1418  00ED24  ECFE  F078         	call	_printf	;wreg free
  1419  00ED28                     
  1420                           ;main.c: 43: T_on = ((m+1.0)*65536.0 - (float)timer0ReloadVal16bit)*pow(2.0,n)*4.0/ 8000
      +                          000;
  1421  00ED28  C0FC  F019         	movff	main@n,___xxtofl@val
  1422  00ED2C  C0FD  F01A         	movff	main@n+1,___xxtofl@val+1
  1423  00ED30  6A1B               	clrf	(___xxtofl@val+2)^0,c
  1424  00ED32  6A1C               	clrf	(___xxtofl@val+3)^0,c
  1425  00ED34  0E00               	movlw	0
  1426  00ED36  EC7A  F068         	call	___xxtofl
  1427  00ED3A  C019  F0F8         	movff	?___xxtofl,_main$1572
  1428  00ED3E  C01A  F0F9         	movff	?___xxtofl+1,_main$1572+1
  1429  00ED42  C01B  F0FA         	movff	?___xxtofl+2,_main$1572+2
  1430  00ED46  C01C  F0FB         	movff	?___xxtofl+3,_main$1572+3
  1431  00ED4A                     
  1432                           ;main.c: 43: T_on = ((m+1.0)*65536.0 - (float)timer0ReloadVal16bit)*pow(2.0,n)*4.0/ 8000
      +                          000;
  1433  00ED4A  0E00               	movlw	0
  1434  00ED4C  6E4F               	movwf	___flmul@a^0,c
  1435  00ED4E  0E00               	movlw	0
  1436  00ED50  6E50               	movwf	(___flmul@a+1)^0,c
  1437  00ED52  0E80               	movlw	128
  1438  00ED54  6E51               	movwf	(___flmul@a+2)^0,c
  1439  00ED56  0E47               	movlw	71
  1440  00ED58  6E52               	movwf	(___flmul@a+3)^0,c
  1441  00ED5A  0E00               	movlw	0
  1442  00ED5C  6E3F               	movwf	___fladd@a^0,c
  1443  00ED5E  0E00               	movlw	0
  1444  00ED60  6E40               	movwf	(___fladd@a+1)^0,c
  1445  00ED62  0E80               	movlw	128
  1446  00ED64  6E41               	movwf	(___fladd@a+2)^0,c
  1447  00ED66  0E3F               	movlw	63
  1448  00ED68  6E42               	movwf	(___fladd@a+3)^0,c
  1449  00ED6A  C0FE  F019         	movff	main@m,___xxtofl@val
  1450  00ED6E  C0FF  F01A         	movff	main@m+1,___xxtofl@val+1
  1451  00ED72  6A1B               	clrf	(___xxtofl@val+2)^0,c
  1452  00ED74  6A1C               	clrf	(___xxtofl@val+3)^0,c
  1453  00ED76  0E00               	movlw	0
  1454  00ED78  EC7A  F068         	call	___xxtofl
  1455  00ED7C  C019  F03B         	movff	?___xxtofl,___fladd@b
  1456  00ED80  C01A  F03C         	movff	?___xxtofl+1,___fladd@b+1
  1457  00ED84  C01B  F03D         	movff	?___xxtofl+2,___fladd@b+2
  1458  00ED88  C01C  F03E         	movff	?___xxtofl+3,___fladd@b+3
  1459  00ED8C  ECC8  F073         	call	___fladd	;wreg free
  1460  00ED90  C03B  F04B         	movff	?___fladd,___flmul@b
  1461  00ED94  C03C  F04C         	movff	?___fladd+1,___flmul@b+1
  1462  00ED98  C03D  F04D         	movff	?___fladd+2,___flmul@b+2
  1463  00ED9C  C03E  F04E         	movff	?___fladd+3,___flmul@b+3
  1464  00EDA0  EC46  F06F         	call	___flmul	;wreg free
  1465  00EDA4  C04B  F0DE         	movff	?___flmul,_main$1573
  1466  00EDA8  C04C  F0DF         	movff	?___flmul+1,_main$1573+1
  1467  00EDAC  C04D  F0E0         	movff	?___flmul+2,_main$1573+2
  1468  00EDB0  C04E  F0E1         	movff	?___flmul+3,_main$1573+3
  1469  00EDB4                     
  1470                           ;main.c: 43: T_on = ((m+1.0)*65536.0 - (float)timer0ReloadVal16bit)*pow(2.0,n)*4.0/ 8000
      +                          000;
  1471  00EDB4  C0F8  F095         	movff	_main$1572,pow@y
  1472  00EDB8  C0F9  F096         	movff	_main$1572+1,pow@y+1
  1473  00EDBC  C0FA  F097         	movff	_main$1572+2,pow@y+2
  1474  00EDC0  C0FB  F098         	movff	_main$1572+3,pow@y+3
  1475  00EDC4  0E00               	movlw	0
  1476  00EDC6  0100               	movlb	0	; () banked
  1477  00EDC8  6F91               	movwf	pow@x& (0+255),b
  1478  00EDCA  0E00               	movlw	0
  1479  00EDCC  6F92               	movwf	(pow@x+1)& (0+255),b
  1480  00EDCE  0E00               	movlw	0
  1481  00EDD0  6F93               	movwf	(pow@x+2)& (0+255),b
  1482  00EDD2  0E40               	movlw	64
  1483  00EDD4  6F94               	movwf	(pow@x+3)& (0+255),b
  1484  00EDD6  EC54  F069         	call	_pow	;wreg free
  1485  00EDDA  C091  F0F0         	movff	?_pow,_main$1574
  1486  00EDDE  C092  F0F1         	movff	?_pow+1,_main$1574+1
  1487  00EDE2  C093  F0F2         	movff	?_pow+2,_main$1574+2
  1488  00EDE6  C094  F0F3         	movff	?_pow+3,_main$1574+3
  1489  00EDEA                     
  1490                           ;main.c: 43: T_on = ((m+1.0)*65536.0 - (float)timer0ReloadVal16bit)*pow(2.0,n)*4.0/ 8000
      +                          000;
  1491  00EDEA  C0F0  F04F         	movff	_main$1574,___flmul@a
  1492  00EDEE  C0F1  F050         	movff	_main$1574+1,___flmul@a+1
  1493  00EDF2  C0F2  F051         	movff	_main$1574+2,___flmul@a+2
  1494  00EDF6  C0F3  F052         	movff	_main$1574+3,___flmul@a+3
  1495  00EDFA  C106  F019         	movff	_timer0ReloadVal16bit,___xxtofl@val	;volatile
  1496  00EDFE  C107  F01A         	movff	_timer0ReloadVal16bit+1,___xxtofl@val+1	;volatile
  1497  00EE02  6A1B               	clrf	(___xxtofl@val+2)^0,c
  1498  00EE04  6A1C               	clrf	(___xxtofl@val+3)^0,c
  1499  00EE06  0E00               	movlw	0
  1500  00EE08  EC7A  F068         	call	___xxtofl
  1501  00EE0C  C019  F05B         	movff	?___xxtofl,___flsub@a
  1502  00EE10  C01A  F05C         	movff	?___xxtofl+1,___flsub@a+1
  1503  00EE14  C01B  F05D         	movff	?___xxtofl+2,___flsub@a+2
  1504  00EE18  C01C  F05E         	movff	?___xxtofl+3,___flsub@a+3
  1505  00EE1C  C0DE  F057         	movff	_main$1573,___flsub@b
  1506  00EE20  C0DF  F058         	movff	_main$1573+1,___flsub@b+1
  1507  00EE24  C0E0  F059         	movff	_main$1573+2,___flsub@b+2
  1508  00EE28  C0E1  F05A         	movff	_main$1573+3,___flsub@b+3
  1509  00EE2C  ECA2  F05F         	call	___flsub	;wreg free
  1510  00EE30  C057  F04B         	movff	?___flsub,___flmul@b
  1511  00EE34  C058  F04C         	movff	?___flsub+1,___flmul@b+1
  1512  00EE38  C059  F04D         	movff	?___flsub+2,___flmul@b+2
  1513  00EE3C  C05A  F04E         	movff	?___flsub+3,___flmul@b+3
  1514  00EE40  EC46  F06F         	call	___flmul	;wreg free
  1515  00EE44  C04B  F0F4         	movff	?___flmul,_main$1575
  1516  00EE48  C04C  F0F5         	movff	?___flmul+1,_main$1575+1
  1517  00EE4C  C04D  F0F6         	movff	?___flmul+2,_main$1575+2
  1518  00EE50  C04E  F0F7         	movff	?___flmul+3,_main$1575+3
  1519  00EE54                     
  1520                           ;main.c: 43: T_on = ((m+1.0)*65536.0 - (float)timer0ReloadVal16bit)*pow(2.0,n)*4.0/ 8000
      +                          000;
  1521  00EE54  0E00               	movlw	0
  1522  00EE56  6E4F               	movwf	___flmul@a^0,c
  1523  00EE58  0E00               	movlw	0
  1524  00EE5A  6E50               	movwf	(___flmul@a+1)^0,c
  1525  00EE5C  0E80               	movlw	128
  1526  00EE5E  6E51               	movwf	(___flmul@a+2)^0,c
  1527  00EE60  0E40               	movlw	64
  1528  00EE62  6E52               	movwf	(___flmul@a+3)^0,c
  1529  00EE64  C0F4  F04B         	movff	_main$1575,___flmul@b
  1530  00EE68  C0F5  F04C         	movff	_main$1575+1,___flmul@b+1
  1531  00EE6C  C0F6  F04D         	movff	_main$1575+2,___flmul@b+2
  1532  00EE70  C0F7  F04E         	movff	_main$1575+3,___flmul@b+3
  1533  00EE74  EC46  F06F         	call	___flmul	;wreg free
  1534  00EE78  C04B  F06D         	movff	?___flmul,___fldiv@b
  1535  00EE7C  C04C  F06E         	movff	?___flmul+1,___fldiv@b+1
  1536  00EE80  C04D  F06F         	movff	?___flmul+2,___fldiv@b+2
  1537  00EE84  C04E  F070         	movff	?___flmul+3,___fldiv@b+3
  1538  00EE88  0E00               	movlw	0
  1539  00EE8A  0100               	movlb	0	; () banked
  1540  00EE8C  6F71               	movwf	___fldiv@a& (0+255),b
  1541  00EE8E  0E24               	movlw	36
  1542  00EE90  6F72               	movwf	(___fldiv@a+1)& (0+255),b
  1543  00EE92  0EF4               	movlw	244
  1544  00EE94  6F73               	movwf	(___fldiv@a+2)& (0+255),b
  1545  00EE96  0E4A               	movlw	74
  1546  00EE98  6F74               	movwf	(___fldiv@a+3)& (0+255),b
  1547  00EE9A  EC78  F06D         	call	___fldiv	;wreg free
  1548  00EE9E  C06D  F0E6         	movff	?___fldiv,main@T_on
  1549  00EEA2  C06E  F0E7         	movff	?___fldiv+1,main@T_on+1
  1550  00EEA6  C06F  F0E8         	movff	?___fldiv+2,main@T_on+2
  1551  00EEAA  C070  F0E9         	movff	?___fldiv+3,main@T_on+3
  1552  00EEAE                     
  1553                           ;main.c: 44: T_off = ((m+1.0)*65536.0 - 19786.0)*pow(2.0,n)*4.0/ 8000000;
  1554  00EEAE  C0FC  F019         	movff	main@n,___xxtofl@val
  1555  00EEB2  C0FD  F01A         	movff	main@n+1,___xxtofl@val+1
  1556  00EEB6  6A1B               	clrf	(___xxtofl@val+2)^0,c
  1557  00EEB8  6A1C               	clrf	(___xxtofl@val+3)^0,c
  1558  00EEBA  0E00               	movlw	0
  1559  00EEBC  EC7A  F068         	call	___xxtofl
  1560  00EEC0  C019  F0F8         	movff	?___xxtofl,_main$1572
  1561  00EEC4  C01A  F0F9         	movff	?___xxtofl+1,_main$1572+1
  1562  00EEC8  C01B  F0FA         	movff	?___xxtofl+2,_main$1572+2
  1563  00EECC  C01C  F0FB         	movff	?___xxtofl+3,_main$1572+3
  1564  00EED0                     
  1565                           ;main.c: 44: T_off = ((m+1.0)*65536.0 - 19786.0)*pow(2.0,n)*4.0/ 8000000;
  1566  00EED0  0E00               	movlw	0
  1567  00EED2  6E4F               	movwf	___flmul@a^0,c
  1568  00EED4  0E00               	movlw	0
  1569  00EED6  6E50               	movwf	(___flmul@a+1)^0,c
  1570  00EED8  0E80               	movlw	128
  1571  00EEDA  6E51               	movwf	(___flmul@a+2)^0,c
  1572  00EEDC  0E47               	movlw	71
  1573  00EEDE  6E52               	movwf	(___flmul@a+3)^0,c
  1574  00EEE0  0E00               	movlw	0
  1575  00EEE2  6E3F               	movwf	___fladd@a^0,c
  1576  00EEE4  0E00               	movlw	0
  1577  00EEE6  6E40               	movwf	(___fladd@a+1)^0,c
  1578  00EEE8  0E80               	movlw	128
  1579  00EEEA  6E41               	movwf	(___fladd@a+2)^0,c
  1580  00EEEC  0E3F               	movlw	63
  1581  00EEEE  6E42               	movwf	(___fladd@a+3)^0,c
  1582  00EEF0  C0FE  F019         	movff	main@m,___xxtofl@val
  1583  00EEF4  C0FF  F01A         	movff	main@m+1,___xxtofl@val+1
  1584  00EEF8  6A1B               	clrf	(___xxtofl@val+2)^0,c
  1585  00EEFA  6A1C               	clrf	(___xxtofl@val+3)^0,c
  1586  00EEFC  0E00               	movlw	0
  1587  00EEFE  EC7A  F068         	call	___xxtofl
  1588  00EF02  C019  F03B         	movff	?___xxtofl,___fladd@b
  1589  00EF06  C01A  F03C         	movff	?___xxtofl+1,___fladd@b+1
  1590  00EF0A  C01B  F03D         	movff	?___xxtofl+2,___fladd@b+2
  1591  00EF0E  C01C  F03E         	movff	?___xxtofl+3,___fladd@b+3
  1592  00EF12  ECC8  F073         	call	___fladd	;wreg free
  1593  00EF16  C03B  F04B         	movff	?___fladd,___flmul@b
  1594  00EF1A  C03C  F04C         	movff	?___fladd+1,___flmul@b+1
  1595  00EF1E  C03D  F04D         	movff	?___fladd+2,___flmul@b+2
  1596  00EF22  C03E  F04E         	movff	?___fladd+3,___flmul@b+3
  1597  00EF26  EC46  F06F         	call	___flmul	;wreg free
  1598  00EF2A  C04B  F0E2         	movff	?___flmul,_main$1576
  1599  00EF2E  C04C  F0E3         	movff	?___flmul+1,_main$1576+1
  1600  00EF32  C04D  F0E4         	movff	?___flmul+2,_main$1576+2
  1601  00EF36  C04E  F0E5         	movff	?___flmul+3,_main$1576+3
  1602  00EF3A                     
  1603                           ;main.c: 44: T_off = ((m+1.0)*65536.0 - 19786.0)*pow(2.0,n)*4.0/ 8000000;
  1604  00EF3A  C0F8  F095         	movff	_main$1572,pow@y
  1605  00EF3E  C0F9  F096         	movff	_main$1572+1,pow@y+1
  1606  00EF42  C0FA  F097         	movff	_main$1572+2,pow@y+2
  1607  00EF46  C0FB  F098         	movff	_main$1572+3,pow@y+3
  1608  00EF4A  0E00               	movlw	0
  1609  00EF4C  0100               	movlb	0	; () banked
  1610  00EF4E  6F91               	movwf	pow@x& (0+255),b
  1611  00EF50  0E00               	movlw	0
  1612  00EF52  6F92               	movwf	(pow@x+1)& (0+255),b
  1613  00EF54  0E00               	movlw	0
  1614  00EF56  6F93               	movwf	(pow@x+2)& (0+255),b
  1615  00EF58  0E40               	movlw	64
  1616  00EF5A  6F94               	movwf	(pow@x+3)& (0+255),b
  1617  00EF5C  EC54  F069         	call	_pow	;wreg free
  1618  00EF60  C091  F0F0         	movff	?_pow,_main$1574
  1619  00EF64  C092  F0F1         	movff	?_pow+1,_main$1574+1
  1620  00EF68  C093  F0F2         	movff	?_pow+2,_main$1574+2
  1621  00EF6C  C094  F0F3         	movff	?_pow+3,_main$1574+3
  1622  00EF70                     
  1623                           ;main.c: 44: T_off = ((m+1.0)*65536.0 - 19786.0)*pow(2.0,n)*4.0/ 8000000;
  1624  00EF70  C0F0  F04F         	movff	_main$1574,___flmul@a
  1625  00EF74  C0F1  F050         	movff	_main$1574+1,___flmul@a+1
  1626  00EF78  C0F2  F051         	movff	_main$1574+2,___flmul@a+2
  1627  00EF7C  C0F3  F052         	movff	_main$1574+3,___flmul@a+3
  1628  00EF80  0E00               	movlw	0
  1629  00EF82  6E3F               	movwf	___fladd@a^0,c
  1630  00EF84  0E94               	movlw	148
  1631  00EF86  6E40               	movwf	(___fladd@a+1)^0,c
  1632  00EF88  0E9A               	movlw	154
  1633  00EF8A  6E41               	movwf	(___fladd@a+2)^0,c
  1634  00EF8C  0EC6               	movlw	198
  1635  00EF8E  6E42               	movwf	(___fladd@a+3)^0,c
  1636  00EF90  C0E2  F03B         	movff	_main$1576,___fladd@b
  1637  00EF94  C0E3  F03C         	movff	_main$1576+1,___fladd@b+1
  1638  00EF98  C0E4  F03D         	movff	_main$1576+2,___fladd@b+2
  1639  00EF9C  C0E5  F03E         	movff	_main$1576+3,___fladd@b+3
  1640  00EFA0  ECC8  F073         	call	___fladd	;wreg free
  1641  00EFA4  C03B  F04B         	movff	?___fladd,___flmul@b
  1642  00EFA8  C03C  F04C         	movff	?___fladd+1,___flmul@b+1
  1643  00EFAC  C03D  F04D         	movff	?___fladd+2,___flmul@b+2
  1644  00EFB0  C03E  F04E         	movff	?___fladd+3,___flmul@b+3
  1645  00EFB4  EC46  F06F         	call	___flmul	;wreg free
  1646  00EFB8  C04B  F0F4         	movff	?___flmul,_main$1575
  1647  00EFBC  C04C  F0F5         	movff	?___flmul+1,_main$1575+1
  1648  00EFC0  C04D  F0F6         	movff	?___flmul+2,_main$1575+2
  1649  00EFC4  C04E  F0F7         	movff	?___flmul+3,_main$1575+3
  1650  00EFC8                     
  1651                           ;main.c: 44: T_off = ((m+1.0)*65536.0 - 19786.0)*pow(2.0,n)*4.0/ 8000000;
  1652  00EFC8  0E00               	movlw	0
  1653  00EFCA  6E4F               	movwf	___flmul@a^0,c
  1654  00EFCC  0E00               	movlw	0
  1655  00EFCE  6E50               	movwf	(___flmul@a+1)^0,c
  1656  00EFD0  0E80               	movlw	128
  1657  00EFD2  6E51               	movwf	(___flmul@a+2)^0,c
  1658  00EFD4  0E40               	movlw	64
  1659  00EFD6  6E52               	movwf	(___flmul@a+3)^0,c
  1660  00EFD8  C0F4  F04B         	movff	_main$1575,___flmul@b
  1661  00EFDC  C0F5  F04C         	movff	_main$1575+1,___flmul@b+1
  1662  00EFE0  C0F6  F04D         	movff	_main$1575+2,___flmul@b+2
  1663  00EFE4  C0F7  F04E         	movff	_main$1575+3,___flmul@b+3
  1664  00EFE8  EC46  F06F         	call	___flmul	;wreg free
  1665  00EFEC  C04B  F06D         	movff	?___flmul,___fldiv@b
  1666  00EFF0  C04C  F06E         	movff	?___flmul+1,___fldiv@b+1
  1667  00EFF4  C04D  F06F         	movff	?___flmul+2,___fldiv@b+2
  1668  00EFF8  C04E  F070         	movff	?___flmul+3,___fldiv@b+3
  1669  00EFFC  0E00               	movlw	0
  1670  00EFFE  0100               	movlb	0	; () banked
  1671  00F000  6F71               	movwf	___fldiv@a& (0+255),b
  1672  00F002  0E24               	movlw	36
  1673  00F004  6F72               	movwf	(___fldiv@a+1)& (0+255),b
  1674  00F006  0EF4               	movlw	244
  1675  00F008  6F73               	movwf	(___fldiv@a+2)& (0+255),b
  1676  00F00A  0E4A               	movlw	74
  1677  00F00C  6F74               	movwf	(___fldiv@a+3)& (0+255),b
  1678  00F00E  EC78  F06D         	call	___fldiv	;wreg free
  1679  00F012  C06D  F0EA         	movff	?___fldiv,main@T_off
  1680  00F016  C06E  F0EB         	movff	?___fldiv+1,main@T_off+1
  1681  00F01A  C06F  F0EC         	movff	?___fldiv+2,main@T_off+2
  1682  00F01E  C070  F0ED         	movff	?___fldiv+3,main@T_off+3
  1683  00F022                     
  1684                           ;main.c: 45: f = 1/(T_on + T_off);
  1685  00F022  0E00               	movlw	0
  1686  00F024  0100               	movlb	0	; () banked
  1687  00F026  6F6D               	movwf	___fldiv@b& (0+255),b
  1688  00F028  0E00               	movlw	0
  1689  00F02A  6F6E               	movwf	(___fldiv@b+1)& (0+255),b
  1690  00F02C  0E80               	movlw	128
  1691  00F02E  6F6F               	movwf	(___fldiv@b+2)& (0+255),b
  1692  00F030  0E3F               	movlw	63
  1693  00F032  6F70               	movwf	(___fldiv@b+3)& (0+255),b
  1694  00F034  C0EA  F03F         	movff	main@T_off,___fladd@a
  1695  00F038  C0EB  F040         	movff	main@T_off+1,___fladd@a+1
  1696  00F03C  C0EC  F041         	movff	main@T_off+2,___fladd@a+2
  1697  00F040  C0ED  F042         	movff	main@T_off+3,___fladd@a+3
  1698  00F044  C0E6  F03B         	movff	main@T_on,___fladd@b
  1699  00F048  C0E7  F03C         	movff	main@T_on+1,___fladd@b+1
  1700  00F04C  C0E8  F03D         	movff	main@T_on+2,___fladd@b+2
  1701  00F050  C0E9  F03E         	movff	main@T_on+3,___fladd@b+3
  1702  00F054  ECC8  F073         	call	___fladd	;wreg free
  1703  00F058  C03B  F071         	movff	?___fladd,___fldiv@a
  1704  00F05C  C03C  F072         	movff	?___fladd+1,___fldiv@a+1
  1705  00F060  C03D  F073         	movff	?___fladd+2,___fldiv@a+2
  1706  00F064  C03E  F074         	movff	?___fladd+3,___fldiv@a+3
  1707  00F068  EC78  F06D         	call	___fldiv	;wreg free
  1708  00F06C  C06D  F0DA         	movff	?___fldiv,main@f
  1709  00F070  C06E  F0DB         	movff	?___fldiv+1,main@f+1
  1710  00F074  C06F  F0DC         	movff	?___fldiv+2,main@f+2
  1711  00F078  C070  F0DD         	movff	?___fldiv+3,main@f+3
  1712  00F07C                     
  1713                           ;main.c: 46: printf("RD2 On Time %f, Off Time %f seconds, frequency = %f Hz\n\n\r",T_on,
      +                           T_off, f);
  1714  00F07C  0E7E               	movlw	low STR_3
  1715  00F07E  0100               	movlb	0	; () banked
  1716  00F080  6FA6               	movwf	printf@f& (0+255),b
  1717  00F082  0EFF               	movlw	high STR_3
  1718  00F084  6FA7               	movwf	(printf@f+1)& (0+255),b
  1719  00F086  C0E6  F0A8         	movff	main@T_on,?_printf+2
  1720  00F08A  C0E7  F0A9         	movff	main@T_on+1,?_printf+3
  1721  00F08E  C0E8  F0AA         	movff	main@T_on+2,?_printf+4
  1722  00F092  C0E9  F0AB         	movff	main@T_on+3,?_printf+5
  1723  00F096  C0EA  F0AC         	movff	main@T_off,?_printf+6
  1724  00F09A  C0EB  F0AD         	movff	main@T_off+1,?_printf+7
  1725  00F09E  C0EC  F0AE         	movff	main@T_off+2,?_printf+8
  1726  00F0A2  C0ED  F0AF         	movff	main@T_off+3,?_printf+9
  1727  00F0A6  C0DA  F0B0         	movff	main@f,?_printf+10
  1728  00F0AA  C0DB  F0B1         	movff	main@f+1,?_printf+11
  1729  00F0AE  C0DC  F0B2         	movff	main@f+2,?_printf+12
  1730  00F0B2  C0DD  F0B3         	movff	main@f+3,?_printf+13
  1731  00F0B6  ECFE  F078         	call	_printf	;wreg free
  1732  00F0BA                     l4778:
  1733                           
  1734                           ;main.c: 49: {;main.c: 51: buttonResponse();
  1735  00F0BA  EC9E  F060         	call	_buttonResponse	;wreg free
  1736  00F0BE                     
  1737                           ;main.c: 53: unsigned int k=19786;
  1738  00F0BE  0E4D               	movlw	77
  1739  00F0C0  0100               	movlb	0	; () banked
  1740  00F0C2  6FEF               	movwf	(main@k+1)& (0+255),b
  1741  00F0C4  0E4A               	movlw	74
  1742  00F0C6  6FEE               	movwf	main@k& (0+255),b
  1743                           
  1744                           ;main.c: 55: switch(blinkrate)
  1745  00F0C8  EFF0  F078         	goto	l4816
  1746  00F0CC                     l343:
  1747                           
  1748                           ; BSR set to: 1
  1749  00F0CC  84BC               	bsf	188,2,c	;volatile
  1750  00F0CE                     
  1751                           ; BSR set to: 1
  1752  00F0CE  94BD               	bcf	189,2,c	;volatile
  1753  00F0D0                     
  1754                           ; BSR set to: 1
  1755                           ;main.c: 60: TMR0IF = 0;
  1756  00F0D0  0139               	movlb	57	; () banked
  1757  00F0D2  9FA3               	bcf	163,7,b	;volatile
  1758  00F0D4                     
  1759                           ; BSR set to: 57
  1760                           ;main.c: 61: TMR0_WriteTimer(timer0ReloadVal16bit);
  1761  00F0D4  C106  F001         	movff	_timer0ReloadVal16bit,TMR0_WriteTimer@timerVal	;volatile
  1762  00F0D8  C107  F002         	movff	_timer0ReloadVal16bit+1,TMR0_WriteTimer@timerVal+1	;volatile
  1763  00F0DC  ECE4  F05E         	call	_TMR0_WriteTimer	;wreg free
  1764                           
  1765                           ;main.c: 62: while(!TMR0IF)
  1766  00F0E0  EF80  F078         	goto	l347
  1767  00F0E4                     l4784:
  1768                           
  1769                           ; BSR set to: 57
  1770                           ;main.c: 63: {;main.c: 64: buttonResponse();
  1771  00F0E4  EC9E  F060         	call	_buttonResponse	;wreg free
  1772  00F0E8                     
  1773                           ;main.c: 65: if(blinkrate==2)break;
  1774  00F0E8  0E02               	movlw	2
  1775  00F0EA  0101               	movlb	1	; () banked
  1776  00F0EC  190E               	xorwf	_blinkrate& (0+255),w,b
  1777  00F0EE  A4D8               	btfss	status,2,c
  1778  00F0F0  EF7C  F078         	goto	u5001
  1779  00F0F4  EF7E  F078         	goto	u5000
  1780  00F0F8                     u5001:
  1781  00F0F8  EF80  F078         	goto	l347
  1782  00F0FC                     u5000:
  1783  00F0FC  EF88  F078         	goto	l351
  1784  00F100                     l347:
  1785  00F100  0139               	movlb	57	; () banked
  1786  00F102  AFA3               	btfss	163,7,b	;volatile
  1787  00F104  EF86  F078         	goto	u5011
  1788  00F108  EF88  F078         	goto	u5010
  1789  00F10C                     u5011:
  1790  00F10C  EF72  F078         	goto	l4784
  1791  00F110                     u5010:
  1792  00F110                     l351:
  1793  00F110  94BC               	bcf	188,2,c	;volatile
  1794  00F112  84BD               	bsf	189,2,c	;volatile
  1795  00F114                     
  1796                           ;main.c: 69: TMR0IF = 0;
  1797  00F114  0139               	movlb	57	; () banked
  1798  00F116  9FA3               	bcf	163,7,b	;volatile
  1799  00F118                     
  1800                           ; BSR set to: 57
  1801                           ;main.c: 70: TMR0_WriteTimer(k);
  1802  00F118  C0EE  F001         	movff	main@k,TMR0_WriteTimer@timerVal
  1803  00F11C  C0EF  F002         	movff	main@k+1,TMR0_WriteTimer@timerVal+1
  1804  00F120  ECE4  F05E         	call	_TMR0_WriteTimer	;wreg free
  1805                           
  1806                           ;main.c: 71: while(!TMR0IF)
  1807  00F124  EFA2  F078         	goto	l355
  1808  00F128                     l4792:
  1809                           
  1810                           ; BSR set to: 57
  1811                           ;main.c: 72: {;main.c: 73: buttonResponse();
  1812  00F128  EC9E  F060         	call	_buttonResponse	;wreg free
  1813  00F12C                     
  1814                           ;main.c: 74: if(blinkrate==2)break;
  1815  00F12C  0E02               	movlw	2
  1816  00F12E  0101               	movlb	1	; () banked
  1817  00F130  190E               	xorwf	_blinkrate& (0+255),w,b
  1818  00F132  A4D8               	btfss	status,2,c
  1819  00F134  EF9E  F078         	goto	u5021
  1820  00F138  EFA0  F078         	goto	u5020
  1821  00F13C                     u5021:
  1822  00F13C  EFA2  F078         	goto	l355
  1823  00F140                     u5020:
  1824  00F140  EF5D  F078         	goto	l4778
  1825  00F144                     l355:
  1826  00F144  0139               	movlb	57	; () banked
  1827  00F146  AFA3               	btfss	163,7,b	;volatile
  1828  00F148  EFA8  F078         	goto	u5031
  1829  00F14C  EFAA  F078         	goto	u5030
  1830  00F150                     u5031:
  1831  00F150  EF94  F078         	goto	l4792
  1832  00F154                     u5030:
  1833  00F154  EF5D  F078         	goto	l4778
  1834  00F158                     l361:
  1835                           
  1836                           ; BSR set to: 1
  1837  00F158  84BC               	bsf	188,2,c	;volatile
  1838  00F15A                     
  1839                           ; BSR set to: 1
  1840  00F15A  84BD               	bsf	189,2,c	;volatile
  1841  00F15C                     
  1842                           ; BSR set to: 1
  1843                           ;main.c: 80: TMR0IF = 0;
  1844  00F15C  0139               	movlb	57	; () banked
  1845  00F15E  9FA3               	bcf	163,7,b	;volatile
  1846  00F160                     
  1847                           ; BSR set to: 57
  1848                           ;main.c: 81: TMR0_WriteTimer(timer0ReloadVal16bit);
  1849  00F160  C106  F001         	movff	_timer0ReloadVal16bit,TMR0_WriteTimer@timerVal	;volatile
  1850  00F164  C107  F002         	movff	_timer0ReloadVal16bit+1,TMR0_WriteTimer@timerVal+1	;volatile
  1851  00F168  ECE4  F05E         	call	_TMR0_WriteTimer	;wreg free
  1852                           
  1853                           ;main.c: 82: while(!TMR0IF)
  1854  00F16C  EFC5  F078         	goto	l365
  1855  00F170                     l4800:
  1856                           
  1857                           ; BSR set to: 57
  1858                           ;main.c: 83: {;main.c: 84: buttonResponse();
  1859  00F170  EC9E  F060         	call	_buttonResponse	;wreg free
  1860  00F174                     
  1861                           ;main.c: 85: if(blinkrate==1)break;
  1862  00F174  0101               	movlb	1	; () banked
  1863  00F176  050E               	decf	_blinkrate& (0+255),w,b
  1864  00F178  A4D8               	btfss	status,2,c
  1865  00F17A  EFC1  F078         	goto	u5041
  1866  00F17E  EFC3  F078         	goto	u5040
  1867  00F182                     u5041:
  1868  00F182  EFC5  F078         	goto	l365
  1869  00F186                     u5040:
  1870  00F186  EFCD  F078         	goto	l369
  1871  00F18A                     l365:
  1872  00F18A  0139               	movlb	57	; () banked
  1873  00F18C  AFA3               	btfss	163,7,b	;volatile
  1874  00F18E  EFCB  F078         	goto	u5051
  1875  00F192  EFCD  F078         	goto	u5050
  1876  00F196                     u5051:
  1877  00F196  EFB8  F078         	goto	l4800
  1878  00F19A                     u5050:
  1879  00F19A                     l369:
  1880  00F19A  94BC               	bcf	188,2,c	;volatile
  1881  00F19C  94BD               	bcf	189,2,c	;volatile
  1882  00F19E                     
  1883                           ;main.c: 89: TMR0IF = 0;
  1884  00F19E  0139               	movlb	57	; () banked
  1885  00F1A0  9FA3               	bcf	163,7,b	;volatile
  1886  00F1A2                     
  1887                           ; BSR set to: 57
  1888                           ;main.c: 90: TMR0_WriteTimer(k);
  1889  00F1A2  C0EE  F001         	movff	main@k,TMR0_WriteTimer@timerVal
  1890  00F1A6  C0EF  F002         	movff	main@k+1,TMR0_WriteTimer@timerVal+1
  1891  00F1AA  ECE4  F05E         	call	_TMR0_WriteTimer	;wreg free
  1892                           
  1893                           ;main.c: 91: while(!TMR0IF)
  1894  00F1AE  EFE6  F078         	goto	l373
  1895  00F1B2                     l4808:
  1896                           
  1897                           ; BSR set to: 57
  1898                           ;main.c: 92: {;main.c: 93: buttonResponse();
  1899  00F1B2  EC9E  F060         	call	_buttonResponse	;wreg free
  1900  00F1B6                     
  1901                           ;main.c: 94: if(blinkrate==1)break;
  1902  00F1B6  0101               	movlb	1	; () banked
  1903  00F1B8  050E               	decf	_blinkrate& (0+255),w,b
  1904  00F1BA  A4D8               	btfss	status,2,c
  1905  00F1BC  EFE2  F078         	goto	u5061
  1906  00F1C0  EFE4  F078         	goto	u5060
  1907  00F1C4                     u5061:
  1908  00F1C4  EFE6  F078         	goto	l373
  1909  00F1C8                     u5060:
  1910  00F1C8  EF5D  F078         	goto	l4778
  1911  00F1CC                     l373:
  1912  00F1CC  0139               	movlb	57	; () banked
  1913  00F1CE  AFA3               	btfss	163,7,b	;volatile
  1914  00F1D0  EFEC  F078         	goto	u5071
  1915  00F1D4  EFEE  F078         	goto	u5070
  1916  00F1D8                     u5071:
  1917  00F1D8  EFD9  F078         	goto	l4808
  1918  00F1DC                     u5070:
  1919  00F1DC  EF5D  F078         	goto	l4778
  1920  00F1E0                     l4816:
  1921                           
  1922                           ; BSR set to: 0
  1923  00F1E0  0101               	movlb	1	; () banked
  1924  00F1E2  510E               	movf	_blinkrate& (0+255),w,b
  1925                           
  1926                           ; Switch size 1, requested type "simple"
  1927                           ; Number of cases is 2, Range of values is 1 to 2
  1928                           ; switch strategies available:
  1929                           ; Name         Instructions Cycles
  1930                           ; simple_byte            7     4 (average)
  1931                           ;	Chosen strategy is simple_byte
  1932  00F1E4  0A01               	xorlw	1	; case 1
  1933  00F1E6  B4D8               	btfsc	status,2,c
  1934  00F1E8  EF66  F078         	goto	l343
  1935  00F1EC  0A03               	xorlw	3	; case 2
  1936  00F1EE  B4D8               	btfsc	status,2,c
  1937  00F1F0  EFAC  F078         	goto	l361
  1938  00F1F4  EF5D  F078         	goto	l4778
  1939  00F1F8  EFFE  F07F         	goto	start
  1940  00F1FC                     __end_of_main:
  1941                           	callstack 0
  1942                           
  1943 ;; *************** function _pow *****************
  1944 ;; Defined at:
  1945 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\pow.c"
  1946 ;; Parameters:    Size  Location     Type
  1947 ;;  x               4   49[BANK0 ] void 
  1948 ;;  y               4   53[BANK0 ] void 
  1949 ;; Auto vars:     Size  Location     Type
  1950 ;;  yi              4   66[BANK0 ] unsigned long 
  1951 ;;  sign            1   65[BANK0 ] unsigned char 
  1952 ;; Return value:  Size  Location     Type
  1953 ;;                  4   49[BANK0 ] unsigned char 
  1954 ;; Registers used:
  1955 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1956 ;; Tracked objects:
  1957 ;;		On entry : 0/0
  1958 ;;		On exit  : 0/0
  1959 ;;		Unchanged: 0/0
  1960 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1961 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1962 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1963 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1964 ;;      Totals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1965 ;;Total ram usage:       21 bytes
  1966 ;; Hardware stack levels used:    1
  1967 ;; Hardware stack levels required when called:    4
  1968 ;; This function calls:
  1969 ;;		___fleq
  1970 ;;		___flge
  1971 ;;		___flmul
  1972 ;;		___flneg
  1973 ;;		___fltol
  1974 ;;		___xxtofl
  1975 ;;		_exp
  1976 ;;		_log
  1977 ;; This function is called by:
  1978 ;;		_main
  1979 ;; This function uses a non-reentrant model
  1980 ;;
  1981                           
  1982                           	psect	text1
  1983  00D2A8                     __ptext1:
  1984                           	callstack 0
  1985  00D2A8                     _pow:
  1986                           	callstack 26
  1987  00D2A8  0E00               	movlw	0
  1988  00D2AA  0100               	movlb	0	; () banked
  1989  00D2AC  6FA1               	movwf	pow@sign& (0+255),b
  1990  00D2AE                     
  1991                           ; BSR set to: 0
  1992  00D2AE  C091  F027         	movff	pow@x,___fleq@ff1
  1993  00D2B2  C092  F028         	movff	pow@x+1,___fleq@ff1+1
  1994  00D2B6  C093  F029         	movff	pow@x+2,___fleq@ff1+2
  1995  00D2BA  C094  F02A         	movff	pow@x+3,___fleq@ff1+3
  1996  00D2BE  0E00               	movlw	0
  1997  00D2C0  6E2B               	movwf	___fleq@ff2^0,c
  1998  00D2C2  0E00               	movlw	0
  1999  00D2C4  6E2C               	movwf	(___fleq@ff2+1)^0,c
  2000  00D2C6  0E00               	movlw	0
  2001  00D2C8  6E2D               	movwf	(___fleq@ff2+2)^0,c
  2002  00D2CA  0E00               	movlw	0
  2003  00D2CC  6E2E               	movwf	(___fleq@ff2+3)^0,c
  2004  00D2CE  EC08  F062         	call	___fleq	;wreg free
  2005  00D2D2  A0D8               	btfss	status,0,c
  2006  00D2D4  EF6E  F069         	goto	u4911
  2007  00D2D8  EF70  F069         	goto	u4910
  2008  00D2DC                     u4911:
  2009  00D2DC  EF99  F069         	goto	l4678
  2010  00D2E0                     u4910:
  2011  00D2E0  0E00               	movlw	0
  2012  00D2E2  6E01               	movwf	___flge@ff1^0,c
  2013  00D2E4  0E00               	movlw	0
  2014  00D2E6  6E02               	movwf	(___flge@ff1+1)^0,c
  2015  00D2E8  0E00               	movlw	0
  2016  00D2EA  6E03               	movwf	(___flge@ff1+2)^0,c
  2017  00D2EC  0E00               	movlw	0
  2018  00D2EE  6E04               	movwf	(___flge@ff1+3)^0,c
  2019  00D2F0  C095  F005         	movff	pow@y,___flge@ff2
  2020  00D2F4  C096  F006         	movff	pow@y+1,___flge@ff2+1
  2021  00D2F8  C097  F007         	movff	pow@y+2,___flge@ff2+2
  2022  00D2FC  C098  F008         	movff	pow@y+3,___flge@ff2+3
  2023  00D300  EC83  F063         	call	___flge	;wreg free
  2024  00D304  A0D8               	btfss	status,0,c
  2025  00D306  EF87  F069         	goto	u4921
  2026  00D30A  EF89  F069         	goto	u4920
  2027  00D30E                     u4921:
  2028  00D30E  EF8E  F069         	goto	l1257
  2029  00D312                     u4920:
  2030  00D312  0E00               	movlw	0
  2031  00D314  0101               	movlb	1	; () banked
  2032  00D316  6F09               	movwf	(_errno+1)& (0+255),b
  2033  00D318  0E21               	movlw	33
  2034  00D31A  6F08               	movwf	_errno& (0+255),b
  2035  00D31C                     l1257:
  2036  00D31C  0E00               	movlw	0
  2037  00D31E  0100               	movlb	0	; () banked
  2038  00D320  6F91               	movwf	?_pow& (0+255),b
  2039  00D322  0E00               	movlw	0
  2040  00D324  6F92               	movwf	(?_pow+1)& (0+255),b
  2041  00D326  0E00               	movlw	0
  2042  00D328  6F93               	movwf	(?_pow+2)& (0+255),b
  2043  00D32A  0E00               	movlw	0
  2044  00D32C  6F94               	movwf	(?_pow+3)& (0+255),b
  2045  00D32E  EF84  F06A         	goto	l1258
  2046  00D332                     l4678:
  2047  00D332  C095  F027         	movff	pow@y,___fleq@ff1
  2048  00D336  C096  F028         	movff	pow@y+1,___fleq@ff1+1
  2049  00D33A  C097  F029         	movff	pow@y+2,___fleq@ff1+2
  2050  00D33E  C098  F02A         	movff	pow@y+3,___fleq@ff1+3
  2051  00D342  0E00               	movlw	0
  2052  00D344  6E2B               	movwf	___fleq@ff2^0,c
  2053  00D346  0E00               	movlw	0
  2054  00D348  6E2C               	movwf	(___fleq@ff2+1)^0,c
  2055  00D34A  0E00               	movlw	0
  2056  00D34C  6E2D               	movwf	(___fleq@ff2+2)^0,c
  2057  00D34E  0E00               	movlw	0
  2058  00D350  6E2E               	movwf	(___fleq@ff2+3)^0,c
  2059  00D352  EC08  F062         	call	___fleq	;wreg free
  2060  00D356  A0D8               	btfss	status,0,c
  2061  00D358  EFB0  F069         	goto	u4931
  2062  00D35C  EFB2  F069         	goto	u4930
  2063  00D360                     u4931:
  2064  00D360  EFBD  F069         	goto	l4684
  2065  00D364                     u4930:
  2066  00D364  0E00               	movlw	0
  2067  00D366  0100               	movlb	0	; () banked
  2068  00D368  6F91               	movwf	?_pow& (0+255),b
  2069  00D36A  0E00               	movlw	0
  2070  00D36C  6F92               	movwf	(?_pow+1)& (0+255),b
  2071  00D36E  0E80               	movlw	128
  2072  00D370  6F93               	movwf	(?_pow+2)& (0+255),b
  2073  00D372  0E3F               	movlw	63
  2074  00D374  6F94               	movwf	(?_pow+3)& (0+255),b
  2075  00D376  EF84  F06A         	goto	l1258
  2076  00D37A                     l4684:
  2077  00D37A  0100               	movlb	0	; () banked
  2078  00D37C  BF94               	btfsc	(pow@x+3)& (0+255),7,b
  2079  00D37E  EFC5  F069         	goto	u4940
  2080  00D382  EFC3  F069         	goto	u4941
  2081  00D386                     u4941:
  2082  00D386  EF21  F06A         	goto	l4696
  2083  00D38A                     u4940:
  2084  00D38A                     
  2085                           ; BSR set to: 0
  2086  00D38A  C095  F00F         	movff	pow@y,___fltol@f1
  2087  00D38E  C096  F010         	movff	pow@y+1,___fltol@f1+1
  2088  00D392  C097  F011         	movff	pow@y+2,___fltol@f1+2
  2089  00D396  C098  F012         	movff	pow@y+3,___fltol@f1+3
  2090  00D39A  EC05  F064         	call	___fltol	;wreg free
  2091  00D39E  C00F  F0A2         	movff	?___fltol,pow@yi
  2092  00D3A2  C010  F0A3         	movff	?___fltol+1,pow@yi+1
  2093  00D3A6  C011  F0A4         	movff	?___fltol+2,pow@yi+2
  2094  00D3AA  C012  F0A5         	movff	?___fltol+3,pow@yi+3
  2095  00D3AE  C0A2  F019         	movff	pow@yi,___xxtofl@val
  2096  00D3B2  C0A3  F01A         	movff	pow@yi+1,___xxtofl@val+1
  2097  00D3B6  C0A4  F01B         	movff	pow@yi+2,___xxtofl@val+2
  2098  00D3BA  C0A5  F01C         	movff	pow@yi+3,___xxtofl@val+3
  2099  00D3BE  0E00               	movlw	0
  2100  00D3C0  EC7A  F068         	call	___xxtofl
  2101  00D3C4  C019  F027         	movff	?___xxtofl,___fleq@ff1
  2102  00D3C8  C01A  F028         	movff	?___xxtofl+1,___fleq@ff1+1
  2103  00D3CC  C01B  F029         	movff	?___xxtofl+2,___fleq@ff1+2
  2104  00D3D0  C01C  F02A         	movff	?___xxtofl+3,___fleq@ff1+3
  2105  00D3D4  C095  F02B         	movff	pow@y,___fleq@ff2
  2106  00D3D8  C096  F02C         	movff	pow@y+1,___fleq@ff2+1
  2107  00D3DC  C097  F02D         	movff	pow@y+2,___fleq@ff2+2
  2108  00D3E0  C098  F02E         	movff	pow@y+3,___fleq@ff2+3
  2109  00D3E4  EC08  F062         	call	___fleq	;wreg free
  2110  00D3E8  B0D8               	btfsc	status,0,c
  2111  00D3EA  EFF9  F069         	goto	u4951
  2112  00D3EE  EFFB  F069         	goto	u4950
  2113  00D3F2                     u4951:
  2114  00D3F2  EF0B  F06A         	goto	l4692
  2115  00D3F6                     u4950:
  2116  00D3F6  0E00               	movlw	0
  2117  00D3F8  0101               	movlb	1	; () banked
  2118  00D3FA  6F09               	movwf	(_errno+1)& (0+255),b
  2119  00D3FC  0E21               	movlw	33
  2120  00D3FE  6F08               	movwf	_errno& (0+255),b
  2121  00D400  0E00               	movlw	0
  2122  00D402  0100               	movlb	0	; () banked
  2123  00D404  6F91               	movwf	?_pow& (0+255),b
  2124  00D406  0E00               	movlw	0
  2125  00D408  6F92               	movwf	(?_pow+1)& (0+255),b
  2126  00D40A  0E00               	movlw	0
  2127  00D40C  6F93               	movwf	(?_pow+2)& (0+255),b
  2128  00D40E  0E00               	movlw	0
  2129  00D410  6F94               	movwf	(?_pow+3)& (0+255),b
  2130  00D412  EF84  F06A         	goto	l1258
  2131  00D416                     l4692:
  2132  00D416  0100               	movlb	0	; () banked
  2133  00D418  51A2               	movf	pow@yi& (0+255),w,b
  2134  00D41A  0B01               	andlw	1
  2135  00D41C  6FA1               	movwf	pow@sign& (0+255),b
  2136  00D41E                     
  2137                           ; BSR set to: 0
  2138  00D41E  C091  F001         	movff	pow@x,___flneg@f1
  2139  00D422  C092  F002         	movff	pow@x+1,___flneg@f1+1
  2140  00D426  C093  F003         	movff	pow@x+2,___flneg@f1+2
  2141  00D42A  C094  F004         	movff	pow@x+3,___flneg@f1+3
  2142  00D42E  EC86  F05F         	call	___flneg	;wreg free
  2143  00D432  C001  F091         	movff	?___flneg,pow@x
  2144  00D436  C002  F092         	movff	?___flneg+1,pow@x+1
  2145  00D43A  C003  F093         	movff	?___flneg+2,pow@x+2
  2146  00D43E  C004  F094         	movff	?___flneg+3,pow@x+3
  2147  00D442                     l4696:
  2148  00D442  C091  F075         	movff	pow@x,log@x
  2149  00D446  C092  F076         	movff	pow@x+1,log@x+1
  2150  00D44A  C093  F077         	movff	pow@x+2,log@x+2
  2151  00D44E  C094  F078         	movff	pow@x+3,log@x+3
  2152  00D452  ECA8  F067         	call	_log	;wreg free
  2153  00D456  C075  F099         	movff	?_log,_pow$1581
  2154  00D45A  C076  F09A         	movff	?_log+1,_pow$1581+1
  2155  00D45E  C077  F09B         	movff	?_log+2,_pow$1581+2
  2156  00D462  C078  F09C         	movff	?_log+3,_pow$1581+3
  2157  00D466  C099  F04B         	movff	_pow$1581,___flmul@b
  2158  00D46A  C09A  F04C         	movff	_pow$1581+1,___flmul@b+1
  2159  00D46E  C09B  F04D         	movff	_pow$1581+2,___flmul@b+2
  2160  00D472  C09C  F04E         	movff	_pow$1581+3,___flmul@b+3
  2161  00D476  C095  F04F         	movff	pow@y,___flmul@a
  2162  00D47A  C096  F050         	movff	pow@y+1,___flmul@a+1
  2163  00D47E  C097  F051         	movff	pow@y+2,___flmul@a+2
  2164  00D482  C098  F052         	movff	pow@y+3,___flmul@a+3
  2165  00D486  EC46  F06F         	call	___flmul	;wreg free
  2166  00D48A  C04B  F09D         	movff	?___flmul,_pow$1582
  2167  00D48E  C04C  F09E         	movff	?___flmul+1,_pow$1582+1
  2168  00D492  C04D  F09F         	movff	?___flmul+2,_pow$1582+2
  2169  00D496  C04E  F0A0         	movff	?___flmul+3,_pow$1582+3
  2170  00D49A  C09D  F086         	movff	_pow$1582,exp@x
  2171  00D49E  C09E  F087         	movff	_pow$1582+1,exp@x+1
  2172  00D4A2  C09F  F088         	movff	_pow$1582+2,exp@x+2
  2173  00D4A6  C0A0  F089         	movff	_pow$1582+3,exp@x+3
  2174  00D4AA  EC85  F06A         	call	_exp	;wreg free
  2175  00D4AE  C086  F091         	movff	?_exp,pow@x
  2176  00D4B2  C087  F092         	movff	?_exp+1,pow@x+1
  2177  00D4B6  C088  F093         	movff	?_exp+2,pow@x+2
  2178  00D4BA  C089  F094         	movff	?_exp+3,pow@x+3
  2179  00D4BE  0100               	movlb	0	; () banked
  2180  00D4C0  51A1               	movf	pow@sign& (0+255),w,b
  2181  00D4C2  B4D8               	btfsc	status,2,c
  2182  00D4C4  EF66  F06A         	goto	u4961
  2183  00D4C8  EF68  F06A         	goto	u4960
  2184  00D4CC                     u4961:
  2185  00D4CC  EF7C  F06A         	goto	l1262
  2186  00D4D0                     u4960:
  2187  00D4D0                     
  2188                           ; BSR set to: 0
  2189  00D4D0  C091  F001         	movff	pow@x,___flneg@f1
  2190  00D4D4  C092  F002         	movff	pow@x+1,___flneg@f1+1
  2191  00D4D8  C093  F003         	movff	pow@x+2,___flneg@f1+2
  2192  00D4DC  C094  F004         	movff	pow@x+3,___flneg@f1+3
  2193  00D4E0  EC86  F05F         	call	___flneg	;wreg free
  2194  00D4E4  C001  F091         	movff	?___flneg,?_pow
  2195  00D4E8  C002  F092         	movff	?___flneg+1,?_pow+1
  2196  00D4EC  C003  F093         	movff	?___flneg+2,?_pow+2
  2197  00D4F0  C004  F094         	movff	?___flneg+3,?_pow+3
  2198  00D4F4  EF84  F06A         	goto	l1258
  2199  00D4F8                     l1262:
  2200                           
  2201                           ; BSR set to: 0
  2202  00D4F8  C091  F091         	movff	pow@x,?_pow
  2203  00D4FC  C092  F092         	movff	pow@x+1,?_pow+1
  2204  00D500  C093  F093         	movff	pow@x+2,?_pow+2
  2205  00D504  C094  F094         	movff	pow@x+3,?_pow+3
  2206  00D508                     l1258:
  2207  00D508  0012               	return		;funcret
  2208  00D50A                     __end_of_pow:
  2209                           	callstack 0
  2210                           
  2211 ;; *************** function _log *****************
  2212 ;; Defined at:
  2213 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\log.c"
  2214 ;; Parameters:    Size  Location     Type
  2215 ;;  x               4   21[BANK0 ] unsigned char 
  2216 ;; Auto vars:     Size  Location     Type
  2217 ;;  exponent        2   25[BANK0 ] int 
  2218 ;; Return value:  Size  Location     Type
  2219 ;;                  4   21[BANK0 ] int 
  2220 ;; Registers used:
  2221 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2222 ;; Tracked objects:
  2223 ;;		On entry : 0/0
  2224 ;;		On exit  : 0/0
  2225 ;;		Unchanged: 0/0
  2226 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2227 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2228 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2229 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2230 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2231 ;;Total ram usage:        6 bytes
  2232 ;; Hardware stack levels used:    1
  2233 ;; Hardware stack levels required when called:    2
  2234 ;; This function calls:
  2235 ;;		___fladd
  2236 ;;		___fleq
  2237 ;;		___flmul
  2238 ;;		___xxtofl
  2239 ;;		_eval_poly
  2240 ;;		_frexp
  2241 ;; This function is called by:
  2242 ;;		_pow
  2243 ;; This function uses a non-reentrant model
  2244 ;;
  2245                           
  2246                           	psect	text2
  2247  00CF50                     __ptext2:
  2248                           	callstack 0
  2249  00CF50                     _log:
  2250                           	callstack 27
  2251  00CF50  0100               	movlb	0	; () banked
  2252  00CF52  BF78               	btfsc	(log@x+3)& (0+255),7,b
  2253  00CF54  EFB0  F067         	goto	u4740
  2254  00CF58  EFAE  F067         	goto	u4741
  2255  00CF5C                     u4741:
  2256  00CF5C  EFC0  F067         	goto	l4570
  2257  00CF60                     u4740:
  2258  00CF60                     
  2259                           ; BSR set to: 0
  2260  00CF60  0E00               	movlw	0
  2261  00CF62  0101               	movlb	1	; () banked
  2262  00CF64  6F09               	movwf	(_errno+1)& (0+255),b
  2263  00CF66  0E21               	movlw	33
  2264  00CF68  6F08               	movwf	_errno& (0+255),b
  2265  00CF6A  0E00               	movlw	0
  2266  00CF6C  0100               	movlb	0	; () banked
  2267  00CF6E  6F75               	movwf	?_log& (0+255),b
  2268  00CF70  0E00               	movlw	0
  2269  00CF72  6F76               	movwf	(?_log+1)& (0+255),b
  2270  00CF74  0E00               	movlw	0
  2271  00CF76  6F77               	movwf	(?_log+2)& (0+255),b
  2272  00CF78  0E00               	movlw	0
  2273  00CF7A  6F78               	movwf	(?_log+3)& (0+255),b
  2274  00CF7C  EF79  F068         	goto	l1326
  2275  00CF80                     l4570:
  2276                           
  2277                           ; BSR set to: 0
  2278  00CF80  C075  F027         	movff	log@x,___fleq@ff1
  2279  00CF84  C076  F028         	movff	log@x+1,___fleq@ff1+1
  2280  00CF88  C077  F029         	movff	log@x+2,___fleq@ff1+2
  2281  00CF8C  C078  F02A         	movff	log@x+3,___fleq@ff1+3
  2282  00CF90  0E00               	movlw	0
  2283  00CF92  6E2B               	movwf	___fleq@ff2^0,c
  2284  00CF94  0E00               	movlw	0
  2285  00CF96  6E2C               	movwf	(___fleq@ff2+1)^0,c
  2286  00CF98  0E00               	movlw	0
  2287  00CF9A  6E2D               	movwf	(___fleq@ff2+2)^0,c
  2288  00CF9C  0E00               	movlw	0
  2289  00CF9E  6E2E               	movwf	(___fleq@ff2+3)^0,c
  2290  00CFA0  EC08  F062         	call	___fleq	;wreg free
  2291  00CFA4  A0D8               	btfss	status,0,c
  2292  00CFA6  EFD7  F067         	goto	u4751
  2293  00CFAA  EFD9  F067         	goto	u4750
  2294  00CFAE                     u4751:
  2295  00CFAE  EFE9  F067         	goto	l4576
  2296  00CFB2                     u4750:
  2297  00CFB2  0E00               	movlw	0
  2298  00CFB4  0101               	movlb	1	; () banked
  2299  00CFB6  6F09               	movwf	(_errno+1)& (0+255),b
  2300  00CFB8  0E22               	movlw	34
  2301  00CFBA  6F08               	movwf	_errno& (0+255),b
  2302  00CFBC  0E00               	movlw	0
  2303  00CFBE  0100               	movlb	0	; () banked
  2304  00CFC0  6F75               	movwf	?_log& (0+255),b
  2305  00CFC2  0E00               	movlw	0
  2306  00CFC4  6F76               	movwf	(?_log+1)& (0+255),b
  2307  00CFC6  0E00               	movlw	0
  2308  00CFC8  6F77               	movwf	(?_log+2)& (0+255),b
  2309  00CFCA  0E00               	movlw	0
  2310  00CFCC  6F78               	movwf	(?_log+3)& (0+255),b
  2311  00CFCE  EF79  F068         	goto	l1326
  2312  00CFD2                     l4576:
  2313  00CFD2  0E00               	movlw	0
  2314  00CFD4  6E4F               	movwf	___flmul@a^0,c
  2315  00CFD6  0E00               	movlw	0
  2316  00CFD8  6E50               	movwf	(___flmul@a+1)^0,c
  2317  00CFDA  0E00               	movlw	0
  2318  00CFDC  6E51               	movwf	(___flmul@a+2)^0,c
  2319  00CFDE  0E40               	movlw	64
  2320  00CFE0  6E52               	movwf	(___flmul@a+3)^0,c
  2321  00CFE2  0E79               	movlw	low log@exponent
  2322  00CFE4  6E37               	movwf	frexp@eptr^0,c
  2323  00CFE6  0E00               	movlw	high log@exponent
  2324  00CFE8  6E38               	movwf	(frexp@eptr+1)^0,c
  2325  00CFEA  C075  F033         	movff	log@x,frexp@value
  2326  00CFEE  C076  F034         	movff	log@x+1,frexp@value+1
  2327  00CFF2  C077  F035         	movff	log@x+2,frexp@value+2
  2328  00CFF6  C078  F036         	movff	log@x+3,frexp@value+3
  2329  00CFFA  EC17  F063         	call	_frexp	;wreg free
  2330  00CFFE  C033  F04B         	movff	?_frexp,___flmul@b
  2331  00D002  C034  F04C         	movff	?_frexp+1,___flmul@b+1
  2332  00D006  C035  F04D         	movff	?_frexp+2,___flmul@b+2
  2333  00D00A  C036  F04E         	movff	?_frexp+3,___flmul@b+3
  2334  00D00E  EC46  F06F         	call	___flmul	;wreg free
  2335  00D012  C04B  F03B         	movff	?___flmul,___fladd@b
  2336  00D016  C04C  F03C         	movff	?___flmul+1,___fladd@b+1
  2337  00D01A  C04D  F03D         	movff	?___flmul+2,___fladd@b+2
  2338  00D01E  C04E  F03E         	movff	?___flmul+3,___fladd@b+3
  2339  00D022  0E00               	movlw	0
  2340  00D024  6E3F               	movwf	___fladd@a^0,c
  2341  00D026  0E00               	movlw	0
  2342  00D028  6E40               	movwf	(___fladd@a+1)^0,c
  2343  00D02A  0E80               	movlw	128
  2344  00D02C  6E41               	movwf	(___fladd@a+2)^0,c
  2345  00D02E  0EBF               	movlw	191
  2346  00D030  6E42               	movwf	(___fladd@a+3)^0,c
  2347  00D032  ECC8  F073         	call	___fladd	;wreg free
  2348  00D036  C03B  F075         	movff	?___fladd,log@x
  2349  00D03A  C03C  F076         	movff	?___fladd+1,log@x+1
  2350  00D03E  C03D  F077         	movff	?___fladd+2,log@x+2
  2351  00D042  C03E  F078         	movff	?___fladd+3,log@x+3
  2352  00D046  0100               	movlb	0	; () banked
  2353  00D048  0779               	decf	log@exponent& (0+255),f,b
  2354  00D04A  A0D8               	btfss	status,0,c
  2355  00D04C  077A               	decf	(log@exponent+1)& (0+255),f,b
  2356  00D04E                     
  2357                           ; BSR set to: 0
  2358  00D04E  C075  F057         	movff	log@x,eval_poly@x
  2359  00D052  C076  F058         	movff	log@x+1,eval_poly@x+1
  2360  00D056  C077  F059         	movff	log@x+2,eval_poly@x+2
  2361  00D05A  C078  F05A         	movff	log@x+3,eval_poly@x+3
  2362  00D05E  0E15               	movlw	low log@coeff
  2363  00D060  6E5B               	movwf	eval_poly@d^0,c
  2364  00D062  0EFF               	movlw	high log@coeff
  2365  00D064  6E5C               	movwf	(eval_poly@d+1)^0,c
  2366  00D066  0E00               	movlw	0
  2367  00D068  6E5E               	movwf	(eval_poly@n+1)^0,c
  2368  00D06A  0E08               	movlw	8
  2369  00D06C  6E5D               	movwf	eval_poly@n^0,c
  2370  00D06E  EC88  F064         	call	_eval_poly	;wreg free
  2371  00D072  C057  F075         	movff	?_eval_poly,log@x
  2372  00D076  C058  F076         	movff	?_eval_poly+1,log@x+1
  2373  00D07A  C059  F077         	movff	?_eval_poly+2,log@x+2
  2374  00D07E  C05A  F078         	movff	?_eval_poly+3,log@x+3
  2375  00D082  0E18               	movlw	24
  2376  00D084  6E4F               	movwf	___flmul@a^0,c
  2377  00D086  0E72               	movlw	114
  2378  00D088  6E50               	movwf	(___flmul@a+1)^0,c
  2379  00D08A  0E31               	movlw	49
  2380  00D08C  6E51               	movwf	(___flmul@a+2)^0,c
  2381  00D08E  0E3F               	movlw	63
  2382  00D090  6E52               	movwf	(___flmul@a+3)^0,c
  2383  00D092  C079  F019         	movff	log@exponent,___xxtofl@val
  2384  00D096  C07A  F01A         	movff	log@exponent+1,___xxtofl@val+1
  2385  00D09A  0E00               	movlw	0
  2386  00D09C  BE1A               	btfsc	(___xxtofl@val+1)^0,7,c
  2387  00D09E  0EFF               	movlw	-1
  2388  00D0A0  6E1B               	movwf	(___xxtofl@val+2)^0,c
  2389  00D0A2  6E1C               	movwf	(___xxtofl@val+3)^0,c
  2390  00D0A4  0E01               	movlw	1
  2391  00D0A6  EC7A  F068         	call	___xxtofl
  2392  00D0AA  C019  F04B         	movff	?___xxtofl,___flmul@b
  2393  00D0AE  C01A  F04C         	movff	?___xxtofl+1,___flmul@b+1
  2394  00D0B2  C01B  F04D         	movff	?___xxtofl+2,___flmul@b+2
  2395  00D0B6  C01C  F04E         	movff	?___xxtofl+3,___flmul@b+3
  2396  00D0BA  EC46  F06F         	call	___flmul	;wreg free
  2397  00D0BE  C04B  F03B         	movff	?___flmul,___fladd@b
  2398  00D0C2  C04C  F03C         	movff	?___flmul+1,___fladd@b+1
  2399  00D0C6  C04D  F03D         	movff	?___flmul+2,___fladd@b+2
  2400  00D0CA  C04E  F03E         	movff	?___flmul+3,___fladd@b+3
  2401  00D0CE  C075  F03F         	movff	log@x,___fladd@a
  2402  00D0D2  C076  F040         	movff	log@x+1,___fladd@a+1
  2403  00D0D6  C077  F041         	movff	log@x+2,___fladd@a+2
  2404  00D0DA  C078  F042         	movff	log@x+3,___fladd@a+3
  2405  00D0DE  ECC8  F073         	call	___fladd	;wreg free
  2406  00D0E2  C03B  F075         	movff	?___fladd,?_log
  2407  00D0E6  C03C  F076         	movff	?___fladd+1,?_log+1
  2408  00D0EA  C03D  F077         	movff	?___fladd+2,?_log+2
  2409  00D0EE  C03E  F078         	movff	?___fladd+3,?_log+3
  2410  00D0F2                     l1326:
  2411  00D0F2  0012               	return		;funcret
  2412  00D0F4                     __end_of_log:
  2413                           	callstack 0
  2414                           
  2415 ;; *************** function _exp *****************
  2416 ;; Defined at:
  2417 ;;		line 12 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\exp.c"
  2418 ;; Parameters:    Size  Location     Type
  2419 ;;  x               4   38[BANK0 ] int 
  2420 ;; Auto vars:     Size  Location     Type
  2421 ;;  exponent        2   46[BANK0 ] int 
  2422 ;;  sign            1   48[BANK0 ] unsigned char 
  2423 ;; Return value:  Size  Location     Type
  2424 ;;                  4   38[BANK0 ] unsigned char 
  2425 ;; Registers used:
  2426 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2427 ;; Tracked objects:
  2428 ;;		On entry : 0/0
  2429 ;;		On exit  : 0/0
  2430 ;;		Unchanged: 0/0
  2431 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2432 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2433 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2434 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2435 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2436 ;;Total ram usage:       11 bytes
  2437 ;; Hardware stack levels used:    1
  2438 ;; Hardware stack levels required when called:    3
  2439 ;; This function calls:
  2440 ;;		___fldiv
  2441 ;;		___fleq
  2442 ;;		___flge
  2443 ;;		___flmul
  2444 ;;		___flneg
  2445 ;;		___flsub
  2446 ;;		___fltol
  2447 ;;		___xxtofl
  2448 ;;		_eval_poly
  2449 ;;		_floor
  2450 ;;		_ldexp
  2451 ;; This function is called by:
  2452 ;;		_pow
  2453 ;; This function uses a non-reentrant model
  2454 ;;
  2455                           
  2456                           	psect	text3
  2457  00D50A                     __ptext3:
  2458                           	callstack 0
  2459  00D50A                     _exp:
  2460                           	callstack 26
  2461  00D50A  C086  F027         	movff	exp@x,___fleq@ff1
  2462  00D50E  C087  F028         	movff	exp@x+1,___fleq@ff1+1
  2463  00D512  C088  F029         	movff	exp@x+2,___fleq@ff1+2
  2464  00D516  C089  F02A         	movff	exp@x+3,___fleq@ff1+3
  2465  00D51A  0E00               	movlw	0
  2466  00D51C  6E2B               	movwf	___fleq@ff2^0,c
  2467  00D51E  0E00               	movlw	0
  2468  00D520  6E2C               	movwf	(___fleq@ff2+1)^0,c
  2469  00D522  0E00               	movlw	0
  2470  00D524  6E2D               	movwf	(___fleq@ff2+2)^0,c
  2471  00D526  0E00               	movlw	0
  2472  00D528  6E2E               	movwf	(___fleq@ff2+3)^0,c
  2473  00D52A  EC08  F062         	call	___fleq	;wreg free
  2474  00D52E  A0D8               	btfss	status,0,c
  2475  00D530  EF9C  F06A         	goto	u4761
  2476  00D534  EF9E  F06A         	goto	u4760
  2477  00D538                     u4761:
  2478  00D538  EFA9  F06A         	goto	l4592
  2479  00D53C                     u4760:
  2480  00D53C  0E00               	movlw	0
  2481  00D53E  0100               	movlb	0	; () banked
  2482  00D540  6F86               	movwf	?_exp& (0+255),b
  2483  00D542  0E00               	movlw	0
  2484  00D544  6F87               	movwf	(?_exp+1)& (0+255),b
  2485  00D546  0E80               	movlw	128
  2486  00D548  6F88               	movwf	(?_exp+2)& (0+255),b
  2487  00D54A  0E3F               	movlw	63
  2488  00D54C  6F89               	movwf	(?_exp+3)& (0+255),b
  2489  00D54E  EFFA  F06B         	goto	l1278
  2490  00D552                     l4592:
  2491  00D552  0E18               	movlw	24
  2492  00D554  6E01               	movwf	___flge@ff1^0,c
  2493  00D556  0E72               	movlw	114
  2494  00D558  6E02               	movwf	(___flge@ff1+1)^0,c
  2495  00D55A  0E31               	movlw	49
  2496  00D55C  6E03               	movwf	(___flge@ff1+2)^0,c
  2497  00D55E  0E44               	movlw	68
  2498  00D560  6E04               	movwf	(___flge@ff1+3)^0,c
  2499  00D562  C086  F005         	movff	exp@x,___flge@ff2
  2500  00D566  C087  F006         	movff	exp@x+1,___flge@ff2+1
  2501  00D56A  C088  F007         	movff	exp@x+2,___flge@ff2+2
  2502  00D56E  C089  F008         	movff	exp@x+3,___flge@ff2+3
  2503  00D572  EC83  F063         	call	___flge	;wreg free
  2504  00D576  B0D8               	btfsc	status,0,c
  2505  00D578  EFC0  F06A         	goto	u4771
  2506  00D57C  EFC2  F06A         	goto	u4770
  2507  00D580                     u4771:
  2508  00D580  EFD2  F06A         	goto	l4598
  2509  00D584                     u4770:
  2510  00D584  0E00               	movlw	0
  2511  00D586  0101               	movlb	1	; () banked
  2512  00D588  6F09               	movwf	(_errno+1)& (0+255),b
  2513  00D58A  0E22               	movlw	34
  2514  00D58C  6F08               	movwf	_errno& (0+255),b
  2515  00D58E  0EFF               	movlw	255
  2516  00D590  0100               	movlb	0	; () banked
  2517  00D592  6F86               	movwf	?_exp& (0+255),b
  2518  00D594  0EFF               	movlw	255
  2519  00D596  6F87               	movwf	(?_exp+1)& (0+255),b
  2520  00D598  0E7F               	movlw	127
  2521  00D59A  6F88               	movwf	(?_exp+2)& (0+255),b
  2522  00D59C  0E7F               	movlw	127
  2523  00D59E  6F89               	movwf	(?_exp+3)& (0+255),b
  2524  00D5A0  EFFA  F06B         	goto	l1278
  2525  00D5A4                     l4598:
  2526  00D5A4  C086  F001         	movff	exp@x,___flge@ff1
  2527  00D5A8  C087  F002         	movff	exp@x+1,___flge@ff1+1
  2528  00D5AC  C088  F003         	movff	exp@x+2,___flge@ff1+2
  2529  00D5B0  C089  F004         	movff	exp@x+3,___flge@ff1+3
  2530  00D5B4  0E87               	movlw	135
  2531  00D5B6  6E05               	movwf	___flge@ff2^0,c
  2532  00D5B8  0E48               	movlw	72
  2533  00D5BA  6E06               	movwf	(___flge@ff2+1)^0,c
  2534  00D5BC  0E3A               	movlw	58
  2535  00D5BE  6E07               	movwf	(___flge@ff2+2)^0,c
  2536  00D5C0  0EC4               	movlw	196
  2537  00D5C2  6E08               	movwf	(___flge@ff2+3)^0,c
  2538  00D5C4  EC83  F063         	call	___flge	;wreg free
  2539  00D5C8  B0D8               	btfsc	status,0,c
  2540  00D5CA  EFE9  F06A         	goto	u4781
  2541  00D5CE  EFEB  F06A         	goto	u4780
  2542  00D5D2                     u4781:
  2543  00D5D2  EFFB  F06A         	goto	l4604
  2544  00D5D6                     u4780:
  2545  00D5D6  0E00               	movlw	0
  2546  00D5D8  0101               	movlb	1	; () banked
  2547  00D5DA  6F09               	movwf	(_errno+1)& (0+255),b
  2548  00D5DC  0E22               	movlw	34
  2549  00D5DE  6F08               	movwf	_errno& (0+255),b
  2550  00D5E0  0E00               	movlw	0
  2551  00D5E2  0100               	movlb	0	; () banked
  2552  00D5E4  6F86               	movwf	?_exp& (0+255),b
  2553  00D5E6  0E00               	movlw	0
  2554  00D5E8  6F87               	movwf	(?_exp+1)& (0+255),b
  2555  00D5EA  0E00               	movlw	0
  2556  00D5EC  6F88               	movwf	(?_exp+2)& (0+255),b
  2557  00D5EE  0E00               	movlw	0
  2558  00D5F0  6F89               	movwf	(?_exp+3)& (0+255),b
  2559  00D5F2  EFFA  F06B         	goto	l1278
  2560  00D5F6                     l4604:
  2561  00D5F6  0100               	movlb	0	; () banked
  2562  00D5F8  BF89               	btfsc	(exp@x+3)& (0+255),7,b
  2563  00D5FA  EF01  F06B         	goto	u4791
  2564  00D5FE  EF04  F06B         	goto	u4790
  2565  00D602                     u4791:
  2566  00D602  0E01               	movlw	1
  2567  00D604  EF05  F06B         	goto	u4800
  2568  00D608                     u4790:
  2569  00D608  0E00               	movlw	0
  2570  00D60A                     u4800:
  2571  00D60A  6F90               	movwf	exp@sign& (0+255),b
  2572  00D60C                     
  2573                           ; BSR set to: 0
  2574  00D60C  5190               	movf	exp@sign& (0+255),w,b
  2575  00D60E  B4D8               	btfsc	status,2,c
  2576  00D610  EF0C  F06B         	goto	u4811
  2577  00D614  EF0E  F06B         	goto	u4810
  2578  00D618                     u4811:
  2579  00D618  EF20  F06B         	goto	l4610
  2580  00D61C                     u4810:
  2581  00D61C                     
  2582                           ; BSR set to: 0
  2583  00D61C  C086  F001         	movff	exp@x,___flneg@f1
  2584  00D620  C087  F002         	movff	exp@x+1,___flneg@f1+1
  2585  00D624  C088  F003         	movff	exp@x+2,___flneg@f1+2
  2586  00D628  C089  F004         	movff	exp@x+3,___flneg@f1+3
  2587  00D62C  EC86  F05F         	call	___flneg	;wreg free
  2588  00D630  C001  F086         	movff	?___flneg,exp@x
  2589  00D634  C002  F087         	movff	?___flneg+1,exp@x+1
  2590  00D638  C003  F088         	movff	?___flneg+2,exp@x+2
  2591  00D63C  C004  F089         	movff	?___flneg+3,exp@x+3
  2592  00D640                     l4610:
  2593  00D640  C086  F04B         	movff	exp@x,___flmul@b
  2594  00D644  C087  F04C         	movff	exp@x+1,___flmul@b+1
  2595  00D648  C088  F04D         	movff	exp@x+2,___flmul@b+2
  2596  00D64C  C089  F04E         	movff	exp@x+3,___flmul@b+3
  2597  00D650  0E3B               	movlw	59
  2598  00D652  6E4F               	movwf	___flmul@a^0,c
  2599  00D654  0EAA               	movlw	170
  2600  00D656  6E50               	movwf	(___flmul@a+1)^0,c
  2601  00D658  0EB8               	movlw	184
  2602  00D65A  6E51               	movwf	(___flmul@a+2)^0,c
  2603  00D65C  0E3F               	movlw	63
  2604  00D65E  6E52               	movwf	(___flmul@a+3)^0,c
  2605  00D660  EC46  F06F         	call	___flmul	;wreg free
  2606  00D664  C04B  F086         	movff	?___flmul,exp@x
  2607  00D668  C04C  F087         	movff	?___flmul+1,exp@x+1
  2608  00D66C  C04D  F088         	movff	?___flmul+2,exp@x+2
  2609  00D670  C04E  F089         	movff	?___flmul+3,exp@x+3
  2610  00D674  C086  F04B         	movff	exp@x,floor@x
  2611  00D678  C087  F04C         	movff	exp@x+1,floor@x+1
  2612  00D67C  C088  F04D         	movff	exp@x+2,floor@x+2
  2613  00D680  C089  F04E         	movff	exp@x+3,floor@x+3
  2614  00D684  EC17  F065         	call	_floor	;wreg free
  2615  00D688  C04B  F08A         	movff	?_floor,_exp$1583
  2616  00D68C  C04C  F08B         	movff	?_floor+1,_exp$1583+1
  2617  00D690  C04D  F08C         	movff	?_floor+2,_exp$1583+2
  2618  00D694  C04E  F08D         	movff	?_floor+3,_exp$1583+3
  2619  00D698  C08A  F00F         	movff	_exp$1583,___fltol@f1
  2620  00D69C  C08B  F010         	movff	_exp$1583+1,___fltol@f1+1
  2621  00D6A0  C08C  F011         	movff	_exp$1583+2,___fltol@f1+2
  2622  00D6A4  C08D  F012         	movff	_exp$1583+3,___fltol@f1+3
  2623  00D6A8  EC05  F064         	call	___fltol	;wreg free
  2624  00D6AC  C00F  F08E         	movff	?___fltol,exp@exponent
  2625  00D6B0  C010  F08F         	movff	?___fltol+1,exp@exponent+1
  2626  00D6B4  C086  F057         	movff	exp@x,___flsub@b
  2627  00D6B8  C087  F058         	movff	exp@x+1,___flsub@b+1
  2628  00D6BC  C088  F059         	movff	exp@x+2,___flsub@b+2
  2629  00D6C0  C089  F05A         	movff	exp@x+3,___flsub@b+3
  2630  00D6C4  C08E  F019         	movff	exp@exponent,___xxtofl@val
  2631  00D6C8  C08F  F01A         	movff	exp@exponent+1,___xxtofl@val+1
  2632  00D6CC  0E00               	movlw	0
  2633  00D6CE  BE1A               	btfsc	(___xxtofl@val+1)^0,7,c
  2634  00D6D0  0EFF               	movlw	-1
  2635  00D6D2  6E1B               	movwf	(___xxtofl@val+2)^0,c
  2636  00D6D4  6E1C               	movwf	(___xxtofl@val+3)^0,c
  2637  00D6D6  0E01               	movlw	1
  2638  00D6D8  EC7A  F068         	call	___xxtofl
  2639  00D6DC  C019  F05B         	movff	?___xxtofl,___flsub@a
  2640  00D6E0  C01A  F05C         	movff	?___xxtofl+1,___flsub@a+1
  2641  00D6E4  C01B  F05D         	movff	?___xxtofl+2,___flsub@a+2
  2642  00D6E8  C01C  F05E         	movff	?___xxtofl+3,___flsub@a+3
  2643  00D6EC  ECA2  F05F         	call	___flsub	;wreg free
  2644  00D6F0  C057  F086         	movff	?___flsub,exp@x
  2645  00D6F4  C058  F087         	movff	?___flsub+1,exp@x+1
  2646  00D6F8  C059  F088         	movff	?___flsub+2,exp@x+2
  2647  00D6FC  C05A  F089         	movff	?___flsub+3,exp@x+3
  2648  00D700  C086  F057         	movff	exp@x,eval_poly@x
  2649  00D704  C087  F058         	movff	exp@x+1,eval_poly@x+1
  2650  00D708  C088  F059         	movff	exp@x+2,eval_poly@x+2
  2651  00D70C  C089  F05A         	movff	exp@x+3,eval_poly@x+3
  2652  00D710  0EC5               	movlw	low exp@coeff
  2653  00D712  6E5B               	movwf	eval_poly@d^0,c
  2654  00D714  0EFE               	movlw	high exp@coeff
  2655  00D716  6E5C               	movwf	(eval_poly@d+1)^0,c
  2656  00D718  0E00               	movlw	0
  2657  00D71A  6E5E               	movwf	(eval_poly@n+1)^0,c
  2658  00D71C  0E09               	movlw	9
  2659  00D71E  6E5D               	movwf	eval_poly@n^0,c
  2660  00D720  EC88  F064         	call	_eval_poly	;wreg free
  2661  00D724  C057  F075         	movff	?_eval_poly,ldexp@value
  2662  00D728  C058  F076         	movff	?_eval_poly+1,ldexp@value+1
  2663  00D72C  C059  F077         	movff	?_eval_poly+2,ldexp@value+2
  2664  00D730  C05A  F078         	movff	?_eval_poly+3,ldexp@value+3
  2665  00D734  C08E  F079         	movff	exp@exponent,ldexp@newexp
  2666  00D738  C08F  F07A         	movff	exp@exponent+1,ldexp@newexp+1
  2667  00D73C  ECB7  F065         	call	_ldexp	;wreg free
  2668  00D740  C075  F086         	movff	?_ldexp,exp@x
  2669  00D744  C076  F087         	movff	?_ldexp+1,exp@x+1
  2670  00D748  C077  F088         	movff	?_ldexp+2,exp@x+2
  2671  00D74C  C078  F089         	movff	?_ldexp+3,exp@x+3
  2672  00D750  0100               	movlb	0	; () banked
  2673  00D752  5190               	movf	exp@sign& (0+255),w,b
  2674  00D754  B4D8               	btfsc	status,2,c
  2675  00D756  EFAF  F06B         	goto	u4821
  2676  00D75A  EFB1  F06B         	goto	u4820
  2677  00D75E                     u4821:
  2678  00D75E  EFF2  F06B         	goto	l1282
  2679  00D762                     u4820:
  2680  00D762                     
  2681                           ; BSR set to: 0
  2682  00D762  C086  F027         	movff	exp@x,___fleq@ff1
  2683  00D766  C087  F028         	movff	exp@x+1,___fleq@ff1+1
  2684  00D76A  C088  F029         	movff	exp@x+2,___fleq@ff1+2
  2685  00D76E  C089  F02A         	movff	exp@x+3,___fleq@ff1+3
  2686  00D772  0EFF               	movlw	255
  2687  00D774  6E2B               	movwf	___fleq@ff2^0,c
  2688  00D776  0EFF               	movlw	255
  2689  00D778  6E2C               	movwf	(___fleq@ff2+1)^0,c
  2690  00D77A  0E7F               	movlw	127
  2691  00D77C  6E2D               	movwf	(___fleq@ff2+2)^0,c
  2692  00D77E  0E7F               	movlw	127
  2693  00D780  6E2E               	movwf	(___fleq@ff2+3)^0,c
  2694  00D782  EC08  F062         	call	___fleq	;wreg free
  2695  00D786  A0D8               	btfss	status,0,c
  2696  00D788  EFC8  F06B         	goto	u4831
  2697  00D78C  EFCA  F06B         	goto	u4830
  2698  00D790                     u4831:
  2699  00D790  EFD5  F06B         	goto	l4628
  2700  00D794                     u4830:
  2701  00D794  0E00               	movlw	0
  2702  00D796  0100               	movlb	0	; () banked
  2703  00D798  6F86               	movwf	?_exp& (0+255),b
  2704  00D79A  0E00               	movlw	0
  2705  00D79C  6F87               	movwf	(?_exp+1)& (0+255),b
  2706  00D79E  0E00               	movlw	0
  2707  00D7A0  6F88               	movwf	(?_exp+2)& (0+255),b
  2708  00D7A2  0E00               	movlw	0
  2709  00D7A4  6F89               	movwf	(?_exp+3)& (0+255),b
  2710  00D7A6  EFFA  F06B         	goto	l1278
  2711  00D7AA                     l4628:
  2712  00D7AA  0E00               	movlw	0
  2713  00D7AC  0100               	movlb	0	; () banked
  2714  00D7AE  6F6D               	movwf	___fldiv@b& (0+255),b
  2715  00D7B0  0E00               	movlw	0
  2716  00D7B2  6F6E               	movwf	(___fldiv@b+1)& (0+255),b
  2717  00D7B4  0E80               	movlw	128
  2718  00D7B6  6F6F               	movwf	(___fldiv@b+2)& (0+255),b
  2719  00D7B8  0E3F               	movlw	63
  2720  00D7BA  6F70               	movwf	(___fldiv@b+3)& (0+255),b
  2721  00D7BC  C086  F071         	movff	exp@x,___fldiv@a
  2722  00D7C0  C087  F072         	movff	exp@x+1,___fldiv@a+1
  2723  00D7C4  C088  F073         	movff	exp@x+2,___fldiv@a+2
  2724  00D7C8  C089  F074         	movff	exp@x+3,___fldiv@a+3
  2725  00D7CC  EC78  F06D         	call	___fldiv	;wreg free
  2726  00D7D0  C06D  F086         	movff	?___fldiv,?_exp
  2727  00D7D4  C06E  F087         	movff	?___fldiv+1,?_exp+1
  2728  00D7D8  C06F  F088         	movff	?___fldiv+2,?_exp+2
  2729  00D7DC  C070  F089         	movff	?___fldiv+3,?_exp+3
  2730  00D7E0  EFFA  F06B         	goto	l1278
  2731  00D7E4                     l1282:
  2732                           
  2733                           ; BSR set to: 0
  2734  00D7E4  C086  F086         	movff	exp@x,?_exp
  2735  00D7E8  C087  F087         	movff	exp@x+1,?_exp+1
  2736  00D7EC  C088  F088         	movff	exp@x+2,?_exp+2
  2737  00D7F0  C089  F089         	movff	exp@x+3,?_exp+3
  2738  00D7F4                     l1278:
  2739  00D7F4  0012               	return		;funcret
  2740  00D7F6                     __end_of_exp:
  2741                           	callstack 0
  2742                           
  2743 ;; *************** function _ldexp *****************
  2744 ;; Defined at:
  2745 ;;		line 277 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\frexp.c"
  2746 ;; Parameters:    Size  Location     Type
  2747 ;;  value           4   21[BANK0 ] unsigned char 
  2748 ;;  newexp          2   25[BANK0 ] int 
  2749 ;; Auto vars:     Size  Location     Type
  2750 ;;		None
  2751 ;; Return value:  Size  Location     Type
  2752 ;;                  4   21[BANK0 ] int 
  2753 ;; Registers used:
  2754 ;;		wreg, status,2, status,0, cstack
  2755 ;; Tracked objects:
  2756 ;;		On entry : 0/0
  2757 ;;		On exit  : 0/0
  2758 ;;		Unchanged: 0/0
  2759 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2760 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2761 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2762 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2763 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2764 ;;Total ram usage:        8 bytes
  2765 ;; Hardware stack levels used:    1
  2766 ;; Hardware stack levels required when called:    1
  2767 ;; This function calls:
  2768 ;;		___fleq
  2769 ;; This function is called by:
  2770 ;;		_exp
  2771 ;; This function uses a non-reentrant model
  2772 ;;
  2773                           
  2774                           	psect	text4
  2775  00CB6E                     __ptext4:
  2776                           	callstack 0
  2777  00CB6E                     _ldexp:
  2778                           	callstack 27
  2779  00CB6E  C075  F027         	movff	ldexp@value,___fleq@ff1
  2780  00CB72  C076  F028         	movff	ldexp@value+1,___fleq@ff1+1
  2781  00CB76  C077  F029         	movff	ldexp@value+2,___fleq@ff1+2
  2782  00CB7A  C078  F02A         	movff	ldexp@value+3,___fleq@ff1+3
  2783  00CB7E  0E00               	movlw	0
  2784  00CB80  6E2B               	movwf	___fleq@ff2^0,c
  2785  00CB82  0E00               	movlw	0
  2786  00CB84  6E2C               	movwf	(___fleq@ff2+1)^0,c
  2787  00CB86  0E00               	movlw	0
  2788  00CB88  6E2D               	movwf	(___fleq@ff2+2)^0,c
  2789  00CB8A  0E00               	movlw	0
  2790  00CB8C  6E2E               	movwf	(___fleq@ff2+3)^0,c
  2791  00CB8E  EC08  F062         	call	___fleq	;wreg free
  2792  00CB92  A0D8               	btfss	status,0,c
  2793  00CB94  EFCE  F065         	goto	u4251
  2794  00CB98  EFD0  F065         	goto	u4250
  2795  00CB9C                     u4251:
  2796  00CB9C  EFDB  F065         	goto	l4206
  2797  00CBA0                     u4250:
  2798  00CBA0  0E00               	movlw	0
  2799  00CBA2  0100               	movlb	0	; () banked
  2800  00CBA4  6F75               	movwf	?_ldexp& (0+255),b
  2801  00CBA6  0E00               	movlw	0
  2802  00CBA8  6F76               	movwf	(?_ldexp+1)& (0+255),b
  2803  00CBAA  0E00               	movlw	0
  2804  00CBAC  6F77               	movwf	(?_ldexp+2)& (0+255),b
  2805  00CBAE  0E00               	movlw	0
  2806  00CBB0  6F78               	movwf	(?_ldexp+3)& (0+255),b
  2807  00CBB2  EF56  F066         	goto	l1308
  2808  00CBB6                     l4206:
  2809  00CBB6  0100               	movlb	0	; () banked
  2810  00CBB8  5178               	movf	(ldexp@value+3)& (0+255),w,b
  2811  00CBBA  0B7F               	andlw	127
  2812  00CBBC  6F7B               	movwf	??_ldexp& (0+255),b
  2813  00CBBE  6B7C               	clrf	(??_ldexp+1)& (0+255),b
  2814  00CBC0  90D8               	bcf	status,0,c
  2815  00CBC2  377B               	rlcf	??_ldexp& (0+255),f,b
  2816  00CBC4  377C               	rlcf	(??_ldexp+1)& (0+255),f,b
  2817  00CBC6  517B               	movf	??_ldexp& (0+255),w,b
  2818  00CBC8  2779               	addwf	ldexp@newexp& (0+255),f,b
  2819  00CBCA  517C               	movf	(??_ldexp+1)& (0+255),w,b
  2820  00CBCC  237A               	addwfc	(ldexp@newexp+1)& (0+255),f,b
  2821  00CBCE  BF77               	btfsc	(ldexp@value+2)& (0+255),7,b
  2822  00CBD0  EFEC  F065         	goto	u4261
  2823  00CBD4  EFF0  F065         	goto	u4260
  2824  00CBD8                     u4261:
  2825  00CBD8  6B7B               	clrf	??_ldexp& (0+255),b
  2826  00CBDA  2B7B               	incf	??_ldexp& (0+255),f,b
  2827  00CBDC  EFF2  F065         	goto	u4268
  2828  00CBE0                     u4260:
  2829  00CBE0  0100               	movlb	0	; () banked
  2830  00CBE2  6B7B               	clrf	??_ldexp& (0+255),b
  2831  00CBE4                     u4268:
  2832  00CBE4  517B               	movf	??_ldexp& (0+255),w,b
  2833  00CBE6  2779               	addwf	ldexp@newexp& (0+255),f,b
  2834  00CBE8  0E00               	movlw	0
  2835  00CBEA  237A               	addwfc	(ldexp@newexp+1)& (0+255),f,b
  2836  00CBEC  BF7A               	btfsc	(ldexp@newexp+1)& (0+255),7,b
  2837  00CBEE  EFFD  F065         	goto	u4270
  2838  00CBF2  EFFB  F065         	goto	u4271
  2839  00CBF6                     u4271:
  2840  00CBF6  EF0D  F066         	goto	l4214
  2841  00CBFA                     u4270:
  2842  00CBFA                     
  2843                           ; BSR set to: 0
  2844  00CBFA  0E00               	movlw	0
  2845  00CBFC  0101               	movlb	1	; () banked
  2846  00CBFE  6F09               	movwf	(_errno+1)& (0+255),b
  2847  00CC00  0E22               	movlw	34
  2848  00CC02  6F08               	movwf	_errno& (0+255),b
  2849  00CC04  0E00               	movlw	0
  2850  00CC06  0100               	movlb	0	; () banked
  2851  00CC08  6F75               	movwf	?_ldexp& (0+255),b
  2852  00CC0A  0E00               	movlw	0
  2853  00CC0C  6F76               	movwf	(?_ldexp+1)& (0+255),b
  2854  00CC0E  0E00               	movlw	0
  2855  00CC10  6F77               	movwf	(?_ldexp+2)& (0+255),b
  2856  00CC12  0E00               	movlw	0
  2857  00CC14  6F78               	movwf	(?_ldexp+3)& (0+255),b
  2858  00CC16  EF56  F066         	goto	l1308
  2859  00CC1A                     l4214:
  2860                           
  2861                           ; BSR set to: 0
  2862  00CC1A  BF7A               	btfsc	(ldexp@newexp+1)& (0+255),7,b
  2863  00CC1C  EF16  F066         	goto	u4281
  2864  00CC20  057A               	decf	(ldexp@newexp+1)& (0+255),w,b
  2865  00CC22  A0D8               	btfss	status,0,c
  2866  00CC24  EF16  F066         	goto	u4281
  2867  00CC28  EF18  F066         	goto	u4280
  2868  00CC2C                     u4281:
  2869  00CC2C  EF39  F066         	goto	l4230
  2870  00CC30                     u4280:
  2871  00CC30                     
  2872                           ; BSR set to: 0
  2873  00CC30  0E00               	movlw	0
  2874  00CC32  0101               	movlb	1	; () banked
  2875  00CC34  6F09               	movwf	(_errno+1)& (0+255),b
  2876  00CC36  0E22               	movlw	34
  2877  00CC38  6F08               	movwf	_errno& (0+255),b
  2878  00CC3A                     
  2879                           ; BSR set to: 1
  2880  00CC3A  0100               	movlb	0	; () banked
  2881  00CC3C  BF78               	btfsc	(ldexp@value+3)& (0+255),7,b
  2882  00CC3E  EF25  F066         	goto	u4290
  2883  00CC42  EF23  F066         	goto	u4291
  2884  00CC46                     u4291:
  2885  00CC46  EF2F  F066         	goto	l4226
  2886  00CC4A                     u4290:
  2887  00CC4A                     
  2888                           ; BSR set to: 0
  2889  00CC4A  0EFF               	movlw	255
  2890  00CC4C  6F75               	movwf	?_ldexp& (0+255),b
  2891  00CC4E  0EFF               	movlw	255
  2892  00CC50  6F76               	movwf	(?_ldexp+1)& (0+255),b
  2893  00CC52  0E7F               	movlw	127
  2894  00CC54  6F77               	movwf	(?_ldexp+2)& (0+255),b
  2895  00CC56  0EFF               	movlw	255
  2896  00CC58  6F78               	movwf	(?_ldexp+3)& (0+255),b
  2897  00CC5A  EF56  F066         	goto	l1308
  2898  00CC5E                     l4226:
  2899                           
  2900                           ; BSR set to: 0
  2901  00CC5E  0EFF               	movlw	255
  2902  00CC60  6F75               	movwf	?_ldexp& (0+255),b
  2903  00CC62  0EFF               	movlw	255
  2904  00CC64  6F76               	movwf	(?_ldexp+1)& (0+255),b
  2905  00CC66  0E7F               	movlw	127
  2906  00CC68  6F77               	movwf	(?_ldexp+2)& (0+255),b
  2907  00CC6A  0E7F               	movlw	127
  2908  00CC6C  6F78               	movwf	(?_ldexp+3)& (0+255),b
  2909  00CC6E  EF56  F066         	goto	l1308
  2910  00CC72                     l4230:
  2911                           
  2912                           ; BSR set to: 0
  2913  00CC72  357A               	rlcf	(ldexp@newexp+1)& (0+255),w,b
  2914  00CC74  317A               	rrcf	(ldexp@newexp+1)& (0+255),w,b
  2915  00CC76  6F7C               	movwf	(??_ldexp+1)& (0+255),b
  2916  00CC78  3179               	rrcf	ldexp@newexp& (0+255),w,b
  2917  00CC7A  6F7B               	movwf	??_ldexp& (0+255),b
  2918  00CC7C  5178               	movf	(ldexp@value+3)& (0+255),w,b
  2919  00CC7E  197B               	xorwf	??_ldexp& (0+255),w,b
  2920  00CC80  0B80               	andlw	-128
  2921  00CC82  197B               	xorwf	??_ldexp& (0+255),w,b
  2922  00CC84  6F78               	movwf	(ldexp@value+3)& (0+255),b
  2923  00CC86  C079  F07B         	movff	ldexp@newexp,??_ldexp
  2924  00CC8A  0E01               	movlw	1
  2925  00CC8C  177B               	andwf	??_ldexp& (0+255),f,b
  2926  00CC8E  337B               	rrcf	??_ldexp& (0+255),f,b
  2927  00CC90  337B               	rrcf	??_ldexp& (0+255),f,b
  2928  00CC92  5177               	movf	(ldexp@value+2)& (0+255),w,b
  2929  00CC94  197B               	xorwf	??_ldexp& (0+255),w,b
  2930  00CC96  0B7F               	andlw	-129
  2931  00CC98  197B               	xorwf	??_ldexp& (0+255),w,b
  2932  00CC9A  6F77               	movwf	(ldexp@value+2)& (0+255),b
  2933  00CC9C                     
  2934                           ; BSR set to: 0
  2935  00CC9C  C075  F075         	movff	ldexp@value,?_ldexp
  2936  00CCA0  C076  F076         	movff	ldexp@value+1,?_ldexp+1
  2937  00CCA4  C077  F077         	movff	ldexp@value+2,?_ldexp+2
  2938  00CCA8  C078  F078         	movff	ldexp@value+3,?_ldexp+3
  2939  00CCAC                     l1308:
  2940                           
  2941                           ; BSR set to: 0
  2942  00CCAC  0012               	return		;funcret
  2943  00CCAE                     __end_of_ldexp:
  2944                           	callstack 0
  2945                           
  2946 ;; *************** function _floor *****************
  2947 ;; Defined at:
  2948 ;;		line 13 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\floor.c"
  2949 ;; Parameters:    Size  Location     Type
  2950 ;;  x               4   74[COMRAM] int 
  2951 ;; Auto vars:     Size  Location     Type
  2952 ;;  i               4   78[COMRAM] int 
  2953 ;;  expon           2   82[COMRAM] int 
  2954 ;; Return value:  Size  Location     Type
  2955 ;;                  4   74[COMRAM] int 
  2956 ;; Registers used:
  2957 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2958 ;; Tracked objects:
  2959 ;;		On entry : 0/0
  2960 ;;		On exit  : 0/0
  2961 ;;		Unchanged: 0/0
  2962 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2963 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2964 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2965 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2966 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2967 ;;Total ram usage:       10 bytes
  2968 ;; Hardware stack levels used:    1
  2969 ;; Hardware stack levels required when called:    2
  2970 ;; This function calls:
  2971 ;;		___fladd
  2972 ;;		___flge
  2973 ;;		___fltol
  2974 ;;		___xxtofl
  2975 ;;		_frexp
  2976 ;; This function is called by:
  2977 ;;		_exp
  2978 ;; This function uses a non-reentrant model
  2979 ;;
  2980                           
  2981                           	psect	text5
  2982  00CA2E                     __ptext5:
  2983                           	callstack 0
  2984  00CA2E                     _floor:
  2985                           	callstack 26
  2986  00CA2E  C04B  F033         	movff	floor@x,frexp@value
  2987  00CA32  C04C  F034         	movff	floor@x+1,frexp@value+1
  2988  00CA36  C04D  F035         	movff	floor@x+2,frexp@value+2
  2989  00CA3A  C04E  F036         	movff	floor@x+3,frexp@value+3
  2990  00CA3E  0E53               	movlw	low floor@expon
  2991  00CA40  6E37               	movwf	frexp@eptr^0,c
  2992  00CA42  0E00               	movlw	high floor@expon
  2993  00CA44  6E38               	movwf	(frexp@eptr+1)^0,c
  2994  00CA46  EC17  F063         	call	_frexp	;wreg free
  2995  00CA4A  BE54               	btfsc	(floor@expon+1)^0,7,c
  2996  00CA4C  EF2C  F065         	goto	u4200
  2997  00CA50  EF2A  F065         	goto	u4201
  2998  00CA54                     u4201:
  2999  00CA54  EF47  F065         	goto	l4184
  3000  00CA58                     u4200:
  3001  00CA58  BE4E               	btfsc	(floor@x+3)^0,7,c
  3002  00CA5A  EF33  F065         	goto	u4210
  3003  00CA5E  EF31  F065         	goto	u4211
  3004  00CA62                     u4211:
  3005  00CA62  EF3D  F065         	goto	l4180
  3006  00CA66                     u4210:
  3007  00CA66  0E00               	movlw	0
  3008  00CA68  6E4B               	movwf	?_floor^0,c
  3009  00CA6A  0E00               	movlw	0
  3010  00CA6C  6E4C               	movwf	(?_floor+1)^0,c
  3011  00CA6E  0E80               	movlw	128
  3012  00CA70  6E4D               	movwf	(?_floor+2)^0,c
  3013  00CA72  0EBF               	movlw	191
  3014  00CA74  6E4E               	movwf	(?_floor+3)^0,c
  3015  00CA76  EFB6  F065         	goto	l1296
  3016  00CA7A                     l4180:
  3017  00CA7A  0E00               	movlw	0
  3018  00CA7C  6E4B               	movwf	?_floor^0,c
  3019  00CA7E  0E00               	movlw	0
  3020  00CA80  6E4C               	movwf	(?_floor+1)^0,c
  3021  00CA82  0E00               	movlw	0
  3022  00CA84  6E4D               	movwf	(?_floor+2)^0,c
  3023  00CA86  0E00               	movlw	0
  3024  00CA88  6E4E               	movwf	(?_floor+3)^0,c
  3025  00CA8A  EFB6  F065         	goto	l1296
  3026  00CA8E                     l4184:
  3027  00CA8E  5054               	movf	(floor@expon+1)^0,w,c
  3028  00CA90  E109               	bnz	u4220
  3029  00CA92  0E1D               	movlw	29
  3030  00CA94  5C53               	subwf	floor@expon^0,w,c
  3031  00CA96  A0D8               	btfss	status,0,c
  3032  00CA98  EF50  F065         	goto	u4221
  3033  00CA9C  EF52  F065         	goto	u4220
  3034  00CAA0                     u4221:
  3035  00CAA0  EF5C  F065         	goto	l4188
  3036  00CAA4                     u4220:
  3037  00CAA4  C04B  F04B         	movff	floor@x,?_floor
  3038  00CAA8  C04C  F04C         	movff	floor@x+1,?_floor+1
  3039  00CAAC  C04D  F04D         	movff	floor@x+2,?_floor+2
  3040  00CAB0  C04E  F04E         	movff	floor@x+3,?_floor+3
  3041  00CAB4  EFB6  F065         	goto	l1296
  3042  00CAB8                     l4188:
  3043  00CAB8  C04B  F00F         	movff	floor@x,___fltol@f1
  3044  00CABC  C04C  F010         	movff	floor@x+1,___fltol@f1+1
  3045  00CAC0  C04D  F011         	movff	floor@x+2,___fltol@f1+2
  3046  00CAC4  C04E  F012         	movff	floor@x+3,___fltol@f1+3
  3047  00CAC8  EC05  F064         	call	___fltol	;wreg free
  3048  00CACC  C00F  F019         	movff	?___fltol,___xxtofl@val
  3049  00CAD0  C010  F01A         	movff	?___fltol+1,___xxtofl@val+1
  3050  00CAD4  C011  F01B         	movff	?___fltol+2,___xxtofl@val+2
  3051  00CAD8  C012  F01C         	movff	?___fltol+3,___xxtofl@val+3
  3052  00CADC  0E01               	movlw	1
  3053  00CADE  EC7A  F068         	call	___xxtofl
  3054  00CAE2  C019  F04F         	movff	?___xxtofl,floor@i
  3055  00CAE6  C01A  F050         	movff	?___xxtofl+1,floor@i+1
  3056  00CAEA  C01B  F051         	movff	?___xxtofl+2,floor@i+2
  3057  00CAEE  C01C  F052         	movff	?___xxtofl+3,floor@i+3
  3058  00CAF2  C04B  F001         	movff	floor@x,___flge@ff1
  3059  00CAF6  C04C  F002         	movff	floor@x+1,___flge@ff1+1
  3060  00CAFA  C04D  F003         	movff	floor@x+2,___flge@ff1+2
  3061  00CAFE  C04E  F004         	movff	floor@x+3,___flge@ff1+3
  3062  00CB02  C04F  F005         	movff	floor@i,___flge@ff2
  3063  00CB06  C050  F006         	movff	floor@i+1,___flge@ff2+1
  3064  00CB0A  C051  F007         	movff	floor@i+2,___flge@ff2+2
  3065  00CB0E  C052  F008         	movff	floor@i+3,___flge@ff2+3
  3066  00CB12  EC83  F063         	call	___flge	;wreg free
  3067  00CB16  B0D8               	btfsc	status,0,c
  3068  00CB18  EF90  F065         	goto	u4231
  3069  00CB1C  EF92  F065         	goto	u4230
  3070  00CB20                     u4231:
  3071  00CB20  EFAE  F065         	goto	l1298
  3072  00CB24                     u4230:
  3073  00CB24  C04F  F03B         	movff	floor@i,___fladd@b
  3074  00CB28  C050  F03C         	movff	floor@i+1,___fladd@b+1
  3075  00CB2C  C051  F03D         	movff	floor@i+2,___fladd@b+2
  3076  00CB30  C052  F03E         	movff	floor@i+3,___fladd@b+3
  3077  00CB34  0E00               	movlw	0
  3078  00CB36  6E3F               	movwf	___fladd@a^0,c
  3079  00CB38  0E00               	movlw	0
  3080  00CB3A  6E40               	movwf	(___fladd@a+1)^0,c
  3081  00CB3C  0E80               	movlw	128
  3082  00CB3E  6E41               	movwf	(___fladd@a+2)^0,c
  3083  00CB40  0EBF               	movlw	191
  3084  00CB42  6E42               	movwf	(___fladd@a+3)^0,c
  3085  00CB44  ECC8  F073         	call	___fladd	;wreg free
  3086  00CB48  C03B  F04B         	movff	?___fladd,?_floor
  3087  00CB4C  C03C  F04C         	movff	?___fladd+1,?_floor+1
  3088  00CB50  C03D  F04D         	movff	?___fladd+2,?_floor+2
  3089  00CB54  C03E  F04E         	movff	?___fladd+3,?_floor+3
  3090  00CB58  EFB6  F065         	goto	l1296
  3091  00CB5C                     l1298:
  3092  00CB5C  C04F  F04B         	movff	floor@i,?_floor
  3093  00CB60  C050  F04C         	movff	floor@i+1,?_floor+1
  3094  00CB64  C051  F04D         	movff	floor@i+2,?_floor+2
  3095  00CB68  C052  F04E         	movff	floor@i+3,?_floor+3
  3096  00CB6C                     l1296:
  3097  00CB6C  0012               	return		;funcret
  3098  00CB6E                     __end_of_floor:
  3099                           	callstack 0
  3100                           
  3101 ;; *************** function _frexp *****************
  3102 ;; Defined at:
  3103 ;;		line 254 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\frexp.c"
  3104 ;; Parameters:    Size  Location     Type
  3105 ;;  value           4   50[COMRAM] int 
  3106 ;;  eptr            2   54[COMRAM] PTR int 
  3107 ;;		 -> log@exponent(2), floor@expon(2), 
  3108 ;; Auto vars:     Size  Location     Type
  3109 ;;		None
  3110 ;; Return value:  Size  Location     Type
  3111 ;;                  4   50[COMRAM] PTR int 
  3112 ;; Registers used:
  3113 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3114 ;; Tracked objects:
  3115 ;;		On entry : 0/0
  3116 ;;		On exit  : 0/0
  3117 ;;		Unchanged: 0/0
  3118 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3119 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3120 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3121 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3122 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3123 ;;Total ram usage:        8 bytes
  3124 ;; Hardware stack levels used:    1
  3125 ;; Hardware stack levels required when called:    1
  3126 ;; This function calls:
  3127 ;;		___fleq
  3128 ;; This function is called by:
  3129 ;;		_floor
  3130 ;;		_log
  3131 ;; This function uses a non-reentrant model
  3132 ;;
  3133                           
  3134                           	psect	text6
  3135  00C62E                     __ptext6:
  3136                           	callstack 0
  3137  00C62E                     _frexp:
  3138                           	callstack 27
  3139  00C62E  C033  F027         	movff	frexp@value,___fleq@ff1
  3140  00C632  C034  F028         	movff	frexp@value+1,___fleq@ff1+1
  3141  00C636  C035  F029         	movff	frexp@value+2,___fleq@ff1+2
  3142  00C63A  C036  F02A         	movff	frexp@value+3,___fleq@ff1+3
  3143  00C63E  0E00               	movlw	0
  3144  00C640  6E2B               	movwf	___fleq@ff2^0,c
  3145  00C642  0E00               	movlw	0
  3146  00C644  6E2C               	movwf	(___fleq@ff2+1)^0,c
  3147  00C646  0E00               	movlw	0
  3148  00C648  6E2D               	movwf	(___fleq@ff2+2)^0,c
  3149  00C64A  0E00               	movlw	0
  3150  00C64C  6E2E               	movwf	(___fleq@ff2+3)^0,c
  3151  00C64E  EC08  F062         	call	___fleq	;wreg free
  3152  00C652  A0D8               	btfss	status,0,c
  3153  00C654  EF2E  F063         	goto	u3631
  3154  00C658  EF30  F063         	goto	u3630
  3155  00C65C                     u3631:
  3156  00C65C  EF44  F063         	goto	l3770
  3157  00C660                     u3630:
  3158  00C660  0060  F0DF  FFD9   	movff	frexp@eptr,fsr2l
  3159  00C666  0060  F0E3  FFDA   	movff	frexp@eptr+1,fsr2h
  3160  00C66C  0E00               	movlw	0
  3161  00C66E  6EDE               	movwf	postinc2,c
  3162  00C670  0E00               	movlw	0
  3163  00C672  6EDD               	movwf	postdec2,c
  3164  00C674  0E00               	movlw	0
  3165  00C676  6E33               	movwf	?_frexp^0,c
  3166  00C678  0E00               	movlw	0
  3167  00C67A  6E34               	movwf	(?_frexp+1)^0,c
  3168  00C67C  0E00               	movlw	0
  3169  00C67E  6E35               	movwf	(?_frexp+2)^0,c
  3170  00C680  0E00               	movlw	0
  3171  00C682  6E36               	movwf	(?_frexp+3)^0,c
  3172  00C684  EF82  F063         	goto	l1304
  3173  00C688                     l3770:
  3174  00C688  5036               	movf	(frexp@value+3)^0,w,c
  3175  00C68A  0B7F               	andlw	127
  3176  00C68C  6E39               	movwf	??_frexp^0,c
  3177  00C68E  6A3A               	clrf	(??_frexp+1)^0,c
  3178  00C690  90D8               	bcf	status,0,c
  3179  00C692  3639               	rlcf	??_frexp^0,f,c
  3180  00C694  363A               	rlcf	(??_frexp+1)^0,f,c
  3181  00C696  0060  F0DF  FFD9   	movff	frexp@eptr,fsr2l
  3182  00C69C  0060  F0E3  FFDA   	movff	frexp@eptr+1,fsr2h
  3183  00C6A2  0060  F0E7  FFDE   	movff	??_frexp,postinc2
  3184  00C6A8  0060  F0EB  FFDD   	movff	??_frexp+1,postdec2
  3185  00C6AE  BE35               	btfsc	(frexp@value+2)^0,7,c
  3186  00C6B0  EF5C  F063         	goto	u3641
  3187  00C6B4  EF60  F063         	goto	u3640
  3188  00C6B8                     u3641:
  3189  00C6B8  6A39               	clrf	??_frexp^0,c
  3190  00C6BA  2A39               	incf	??_frexp^0,f,c
  3191  00C6BC  EF61  F063         	goto	u3648
  3192  00C6C0                     u3640:
  3193  00C6C0  6A39               	clrf	??_frexp^0,c
  3194  00C6C2                     u3648:
  3195  00C6C2  5039               	movf	??_frexp^0,w,c
  3196  00C6C4  0060  F0DF  FFD9   	movff	frexp@eptr,fsr2l
  3197  00C6CA  0060  F0E3  FFDA   	movff	frexp@eptr+1,fsr2h
  3198  00C6D0  12DE               	iorwf	postinc2,f,c
  3199  00C6D2  0E00               	movlw	0
  3200  00C6D4  12DD               	iorwf	postdec2,f,c
  3201  00C6D6  0060  F0DF  FFD9   	movff	frexp@eptr,fsr2l
  3202  00C6DC  0060  F0E3  FFDA   	movff	frexp@eptr+1,fsr2h
  3203  00C6E2  0E82               	movlw	130
  3204  00C6E4  26DE               	addwf	postinc2,f,c
  3205  00C6E6  0EFF               	movlw	255
  3206  00C6E8  22DD               	addwfc	postdec2,f,c
  3207  00C6EA  5036               	movf	(frexp@value+3)^0,w,c
  3208  00C6EC  0B80               	andlw	-128
  3209  00C6EE  093F               	iorlw	63
  3210  00C6F0  6E36               	movwf	(frexp@value+3)^0,c
  3211  00C6F2  9E35               	bcf	(frexp@value+2)^0,7,c
  3212  00C6F4  C033  F033         	movff	frexp@value,?_frexp
  3213  00C6F8  C034  F034         	movff	frexp@value+1,?_frexp+1
  3214  00C6FC  C035  F035         	movff	frexp@value+2,?_frexp+2
  3215  00C700  C036  F036         	movff	frexp@value+3,?_frexp+3
  3216  00C704                     l1304:
  3217  00C704  0012               	return		;funcret
  3218  00C706                     __end_of_frexp:
  3219                           	callstack 0
  3220                           
  3221 ;; *************** function _eval_poly *****************
  3222 ;; Defined at:
  3223 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\evalpoly.c"
  3224 ;; Parameters:    Size  Location     Type
  3225 ;;  x               4   86[COMRAM] PTR int 
  3226 ;;  d               2   90[COMRAM] PTR const 
  3227 ;;		 -> log@coeff(36), exp@coeff(40), 
  3228 ;;  n               2   92[COMRAM] int 
  3229 ;; Auto vars:     Size  Location     Type
  3230 ;;  res             4   17[BANK0 ] int 
  3231 ;; Return value:  Size  Location     Type
  3232 ;;                  4   86[COMRAM] int 
  3233 ;; Registers used:
  3234 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3235 ;; Tracked objects:
  3236 ;;		On entry : 0/0
  3237 ;;		On exit  : 0/0
  3238 ;;		Unchanged: 0/0
  3239 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3240 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3241 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3242 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3243 ;;      Totals:         8       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3244 ;;Total ram usage:       16 bytes
  3245 ;; Hardware stack levels used:    1
  3246 ;; Hardware stack levels required when called:    1
  3247 ;; This function calls:
  3248 ;;		___fladd
  3249 ;;		___flmul
  3250 ;; This function is called by:
  3251 ;;		_exp
  3252 ;;		_log
  3253 ;; This function uses a non-reentrant model
  3254 ;;
  3255                           
  3256                           	psect	text7
  3257  00C910                     __ptext7:
  3258                           	callstack 0
  3259  00C910                     _eval_poly:
  3260                           	callstack 27
  3261  00C910  C05D  F06D         	movff	eval_poly@n,??_eval_poly
  3262  00C914  C05E  F06E         	movff	eval_poly@n+1,??_eval_poly+1
  3263  00C918  0100               	movlb	0	; () banked
  3264  00C91A  90D8               	bcf	status,0,c
  3265  00C91C  376D               	rlcf	??_eval_poly& (0+255),f,b
  3266  00C91E  376E               	rlcf	(??_eval_poly+1)& (0+255),f,b
  3267  00C920  90D8               	bcf	status,0,c
  3268  00C922  376D               	rlcf	??_eval_poly& (0+255),f,b
  3269  00C924  376E               	rlcf	(??_eval_poly+1)& (0+255),f,b
  3270  00C926  C05B  F06F         	movff	eval_poly@d,??_eval_poly+2
  3271  00C92A  C05C  F070         	movff	eval_poly@d+1,??_eval_poly+3
  3272  00C92E  516D               	movf	??_eval_poly& (0+255),w,b
  3273  00C930  276F               	addwf	(??_eval_poly+2)& (0+255),f,b
  3274  00C932  516E               	movf	(??_eval_poly+1)& (0+255),w,b
  3275  00C934  2370               	addwfc	(??_eval_poly+3)& (0+255),f,b
  3276  00C936  0060  F1BF  FFF6   	movff	??_eval_poly+2,tblptrl
  3277  00C93C  0060  F1C3  FFF7   	movff	??_eval_poly+3,tblptrh
  3278  00C942                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3279  00C942  6AF8               	clrf	tblptru,c
  3280  00C944                     	endif
  3281  00C944                     	if	0	;tblptru may be non-zero
  3282  00C944                     	endif
  3283  00C944  0009               	tblrd		*+
  3284  00C946  006F FFD4  F071    	movff	tablat,eval_poly@res
  3285  00C94C  0009               	tblrd		*+
  3286  00C94E  006F FFD4  F072    	movff	tablat,eval_poly@res+1
  3287  00C954  0009               	tblrd		*+
  3288  00C956  006F FFD4  F073    	movff	tablat,eval_poly@res+2
  3289  00C95C  000A               	tblrd		*-
  3290  00C95E  006F FFD4  F074    	movff	tablat,eval_poly@res+3
  3291  00C964  EF05  F065         	goto	l4198
  3292  00C968                     l4196:
  3293  00C968  C071  F04F         	movff	eval_poly@res,___flmul@a
  3294  00C96C  C072  F050         	movff	eval_poly@res+1,___flmul@a+1
  3295  00C970  C073  F051         	movff	eval_poly@res+2,___flmul@a+2
  3296  00C974  C074  F052         	movff	eval_poly@res+3,___flmul@a+3
  3297  00C978  C057  F04B         	movff	eval_poly@x,___flmul@b
  3298  00C97C  C058  F04C         	movff	eval_poly@x+1,___flmul@b+1
  3299  00C980  C059  F04D         	movff	eval_poly@x+2,___flmul@b+2
  3300  00C984  C05A  F04E         	movff	eval_poly@x+3,___flmul@b+3
  3301  00C988  EC46  F06F         	call	___flmul	;wreg free
  3302  00C98C  C04B  F03B         	movff	?___flmul,___fladd@b
  3303  00C990  C04C  F03C         	movff	?___flmul+1,___fladd@b+1
  3304  00C994  C04D  F03D         	movff	?___flmul+2,___fladd@b+2
  3305  00C998  C04E  F03E         	movff	?___flmul+3,___fladd@b+3
  3306  00C99C  065D               	decf	eval_poly@n^0,f,c
  3307  00C99E  A0D8               	btfss	status,0,c
  3308  00C9A0  065E               	decf	(eval_poly@n+1)^0,f,c
  3309  00C9A2  C05D  F06D         	movff	eval_poly@n,??_eval_poly
  3310  00C9A6  C05E  F06E         	movff	eval_poly@n+1,??_eval_poly+1
  3311  00C9AA  0100               	movlb	0	; () banked
  3312  00C9AC  90D8               	bcf	status,0,c
  3313  00C9AE  376D               	rlcf	??_eval_poly& (0+255),f,b
  3314  00C9B0  376E               	rlcf	(??_eval_poly+1)& (0+255),f,b
  3315  00C9B2  90D8               	bcf	status,0,c
  3316  00C9B4  376D               	rlcf	??_eval_poly& (0+255),f,b
  3317  00C9B6  376E               	rlcf	(??_eval_poly+1)& (0+255),f,b
  3318  00C9B8  C05B  F06F         	movff	eval_poly@d,??_eval_poly+2
  3319  00C9BC  C05C  F070         	movff	eval_poly@d+1,??_eval_poly+3
  3320  00C9C0  516D               	movf	??_eval_poly& (0+255),w,b
  3321  00C9C2  276F               	addwf	(??_eval_poly+2)& (0+255),f,b
  3322  00C9C4  516E               	movf	(??_eval_poly+1)& (0+255),w,b
  3323  00C9C6  2370               	addwfc	(??_eval_poly+3)& (0+255),f,b
  3324  00C9C8  0060  F1BF  FFF6   	movff	??_eval_poly+2,tblptrl
  3325  00C9CE  0060  F1C3  FFF7   	movff	??_eval_poly+3,tblptrh
  3326  00C9D4                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3327  00C9D4  6AF8               	clrf	tblptru,c
  3328  00C9D6                     	endif
  3329  00C9D6                     	if	0	;tblptru may be non-zero
  3330  00C9D6                     	endif
  3331  00C9D6  0009               	tblrd		*+
  3332  00C9D8  006F FFD4  F03F    	movff	tablat,___fladd@a
  3333  00C9DE  0009               	tblrd		*+
  3334  00C9E0  006F FFD4  F040    	movff	tablat,___fladd@a+1
  3335  00C9E6  0009               	tblrd		*+
  3336  00C9E8  006F FFD4  F041    	movff	tablat,___fladd@a+2
  3337  00C9EE  000A               	tblrd		*-
  3338  00C9F0  006F FFD4  F042    	movff	tablat,___fladd@a+3
  3339  00C9F6  ECC8  F073         	call	___fladd	;wreg free
  3340  00C9FA  C03B  F071         	movff	?___fladd,eval_poly@res
  3341  00C9FE  C03C  F072         	movff	?___fladd+1,eval_poly@res+1
  3342  00CA02  C03D  F073         	movff	?___fladd+2,eval_poly@res+2
  3343  00CA06  C03E  F074         	movff	?___fladd+3,eval_poly@res+3
  3344  00CA0A                     l4198:
  3345  00CA0A  505D               	movf	eval_poly@n^0,w,c
  3346  00CA0C  105E               	iorwf	(eval_poly@n+1)^0,w,c
  3347  00CA0E  A4D8               	btfss	status,2,c
  3348  00CA10  EF0C  F065         	goto	u4241
  3349  00CA14  EF0E  F065         	goto	u4240
  3350  00CA18                     u4241:
  3351  00CA18  EFB4  F064         	goto	l4196
  3352  00CA1C                     u4240:
  3353  00CA1C  C071  F057         	movff	eval_poly@res,?_eval_poly
  3354  00CA20  C072  F058         	movff	eval_poly@res+1,?_eval_poly+1
  3355  00CA24  C073  F059         	movff	eval_poly@res+2,?_eval_poly+2
  3356  00CA28  C074  F05A         	movff	eval_poly@res+3,?_eval_poly+3
  3357  00CA2C  0012               	return		;funcret
  3358  00CA2E                     __end_of_eval_poly:
  3359                           	callstack 0
  3360                           
  3361 ;; *************** function ___fldiv *****************
  3362 ;; Defined at:
  3363 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\sprcdiv.c"
  3364 ;; Parameters:    Size  Location     Type
  3365 ;;  b               4   13[BANK0 ] int 
  3366 ;;  a               4   17[BANK0 ] int 
  3367 ;; Auto vars:     Size  Location     Type
  3368 ;;  grs             4   32[BANK0 ] unsigned long 
  3369 ;;  rem             4   25[BANK0 ] unsigned long 
  3370 ;;  new_exp         2   30[BANK0 ] int 
  3371 ;;  aexp            1   37[BANK0 ] unsigned char 
  3372 ;;  bexp            1   36[BANK0 ] unsigned char 
  3373 ;;  sign            1   29[BANK0 ] unsigned char 
  3374 ;; Return value:  Size  Location     Type
  3375 ;;                  4   13[BANK0 ] unsigned char 
  3376 ;; Registers used:
  3377 ;;		wreg, status,2, status,0
  3378 ;; Tracked objects:
  3379 ;;		On entry : 0/0
  3380 ;;		On exit  : 0/0
  3381 ;;		Unchanged: 0/0
  3382 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3383 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3384 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3385 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3386 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3387 ;;Total ram usage:       25 bytes
  3388 ;; Hardware stack levels used:    1
  3389 ;; This function calls:
  3390 ;;		Nothing
  3391 ;; This function is called by:
  3392 ;;		_main
  3393 ;;		_exp
  3394 ;; This function uses a non-reentrant model
  3395 ;;
  3396                           
  3397                           	psect	text8
  3398  00DAF0                     __ptext8:
  3399                           	callstack 0
  3400  00DAF0                     ___fldiv:
  3401                           	callstack 28
  3402  00DAF0  0100               	movlb	0	; () banked
  3403  00DAF2  5170               	movf	(___fldiv@b+3)& (0+255),w,b
  3404  00DAF4  0B80               	andlw	128
  3405  00DAF6  6F7D               	movwf	___fldiv@sign& (0+255),b
  3406  00DAF8  5170               	movf	(___fldiv@b+3)& (0+255),w,b
  3407  00DAFA  2570               	addwf	(___fldiv@b+3)& (0+255),w,b
  3408  00DAFC  6F84               	movwf	___fldiv@bexp& (0+255),b
  3409  00DAFE                     
  3410                           ; BSR set to: 0
  3411  00DAFE  AF6F               	btfss	(___fldiv@b+2)& (0+255),7,b
  3412  00DB00  EF84  F06D         	goto	u3931
  3413  00DB04  EF86  F06D         	goto	u3930
  3414  00DB08                     u3931:
  3415  00DB08  EF87  F06D         	goto	l4008
  3416  00DB0C                     u3930:
  3417  00DB0C                     
  3418                           ; BSR set to: 0
  3419  00DB0C  8184               	bsf	___fldiv@bexp& (0+255),0,b
  3420  00DB0E                     l4008:
  3421                           
  3422                           ; BSR set to: 0
  3423  00DB0E  5184               	movf	___fldiv@bexp& (0+255),w,b
  3424  00DB10  B4D8               	btfsc	status,2,c
  3425  00DB12  EF8D  F06D         	goto	u3941
  3426  00DB16  EF8F  F06D         	goto	u3940
  3427  00DB1A                     u3941:
  3428  00DB1A  EFA4  F06D         	goto	l4018
  3429  00DB1E                     u3940:
  3430  00DB1E                     
  3431                           ; BSR set to: 0
  3432  00DB1E  2984               	incf	___fldiv@bexp& (0+255),w,b
  3433  00DB20  A4D8               	btfss	status,2,c
  3434  00DB22  EF95  F06D         	goto	u3951
  3435  00DB26  EF97  F06D         	goto	u3950
  3436  00DB2A                     u3951:
  3437  00DB2A  EF9F  F06D         	goto	l4014
  3438  00DB2E                     u3950:
  3439  00DB2E                     
  3440                           ; BSR set to: 0
  3441  00DB2E  0E00               	movlw	0
  3442  00DB30  6F6D               	movwf	___fldiv@b& (0+255),b
  3443  00DB32  0E00               	movlw	0
  3444  00DB34  6F6E               	movwf	(___fldiv@b+1)& (0+255),b
  3445  00DB36  0E00               	movlw	0
  3446  00DB38  6F6F               	movwf	(___fldiv@b+2)& (0+255),b
  3447  00DB3A  0E00               	movlw	0
  3448  00DB3C  6F70               	movwf	(___fldiv@b+3)& (0+255),b
  3449  00DB3E                     l4014:
  3450                           
  3451                           ; BSR set to: 0
  3452  00DB3E  8F6F               	bsf	(___fldiv@b+2)& (0+255),7,b
  3453  00DB40                     
  3454                           ; BSR set to: 0
  3455  00DB40  0E00               	movlw	0
  3456  00DB42  6F70               	movwf	(___fldiv@b+3)& (0+255),b
  3457  00DB44  EFAC  F06D         	goto	l4020
  3458  00DB48                     l4018:
  3459                           
  3460                           ; BSR set to: 0
  3461  00DB48  0E00               	movlw	0
  3462  00DB4A  6F6D               	movwf	___fldiv@b& (0+255),b
  3463  00DB4C  0E00               	movlw	0
  3464  00DB4E  6F6E               	movwf	(___fldiv@b+1)& (0+255),b
  3465  00DB50  0E00               	movlw	0
  3466  00DB52  6F6F               	movwf	(___fldiv@b+2)& (0+255),b
  3467  00DB54  0E00               	movlw	0
  3468  00DB56  6F70               	movwf	(___fldiv@b+3)& (0+255),b
  3469  00DB58                     l4020:
  3470                           
  3471                           ; BSR set to: 0
  3472  00DB58  5174               	movf	(___fldiv@a+3)& (0+255),w,b
  3473  00DB5A  0B80               	andlw	128
  3474  00DB5C  1B7D               	xorwf	___fldiv@sign& (0+255),f,b
  3475  00DB5E                     
  3476                           ; BSR set to: 0
  3477  00DB5E  5174               	movf	(___fldiv@a+3)& (0+255),w,b
  3478  00DB60  2574               	addwf	(___fldiv@a+3)& (0+255),w,b
  3479  00DB62  6F85               	movwf	___fldiv@aexp& (0+255),b
  3480  00DB64                     
  3481                           ; BSR set to: 0
  3482  00DB64  AF73               	btfss	(___fldiv@a+2)& (0+255),7,b
  3483  00DB66  EFB7  F06D         	goto	u3961
  3484  00DB6A  EFB9  F06D         	goto	u3960
  3485  00DB6E                     u3961:
  3486  00DB6E  EFBA  F06D         	goto	l4028
  3487  00DB72                     u3960:
  3488  00DB72                     
  3489                           ; BSR set to: 0
  3490  00DB72  8185               	bsf	___fldiv@aexp& (0+255),0,b
  3491  00DB74                     l4028:
  3492                           
  3493                           ; BSR set to: 0
  3494  00DB74  5185               	movf	___fldiv@aexp& (0+255),w,b
  3495  00DB76  B4D8               	btfsc	status,2,c
  3496  00DB78  EFC0  F06D         	goto	u3971
  3497  00DB7C  EFC2  F06D         	goto	u3970
  3498  00DB80                     u3971:
  3499  00DB80  EFD7  F06D         	goto	l4038
  3500  00DB84                     u3970:
  3501  00DB84                     
  3502                           ; BSR set to: 0
  3503  00DB84  2985               	incf	___fldiv@aexp& (0+255),w,b
  3504  00DB86  A4D8               	btfss	status,2,c
  3505  00DB88  EFC8  F06D         	goto	u3981
  3506  00DB8C  EFCA  F06D         	goto	u3980
  3507  00DB90                     u3981:
  3508  00DB90  EFD2  F06D         	goto	l4034
  3509  00DB94                     u3980:
  3510  00DB94                     
  3511                           ; BSR set to: 0
  3512  00DB94  0E00               	movlw	0
  3513  00DB96  6F71               	movwf	___fldiv@a& (0+255),b
  3514  00DB98  0E00               	movlw	0
  3515  00DB9A  6F72               	movwf	(___fldiv@a+1)& (0+255),b
  3516  00DB9C  0E00               	movlw	0
  3517  00DB9E  6F73               	movwf	(___fldiv@a+2)& (0+255),b
  3518  00DBA0  0E00               	movlw	0
  3519  00DBA2  6F74               	movwf	(___fldiv@a+3)& (0+255),b
  3520  00DBA4                     l4034:
  3521                           
  3522                           ; BSR set to: 0
  3523  00DBA4  8F73               	bsf	(___fldiv@a+2)& (0+255),7,b
  3524  00DBA6                     
  3525                           ; BSR set to: 0
  3526  00DBA6  0E00               	movlw	0
  3527  00DBA8  6F74               	movwf	(___fldiv@a+3)& (0+255),b
  3528  00DBAA  EFDF  F06D         	goto	l4040
  3529  00DBAE                     l4038:
  3530                           
  3531                           ; BSR set to: 0
  3532  00DBAE  0E00               	movlw	0
  3533  00DBB0  6F71               	movwf	___fldiv@a& (0+255),b
  3534  00DBB2  0E00               	movlw	0
  3535  00DBB4  6F72               	movwf	(___fldiv@a+1)& (0+255),b
  3536  00DBB6  0E00               	movlw	0
  3537  00DBB8  6F73               	movwf	(___fldiv@a+2)& (0+255),b
  3538  00DBBA  0E00               	movlw	0
  3539  00DBBC  6F74               	movwf	(___fldiv@a+3)& (0+255),b
  3540  00DBBE                     l4040:
  3541                           
  3542                           ; BSR set to: 0
  3543  00DBBE  5171               	movf	___fldiv@a& (0+255),w,b
  3544  00DBC0  1172               	iorwf	(___fldiv@a+1)& (0+255),w,b
  3545  00DBC2  1173               	iorwf	(___fldiv@a+2)& (0+255),w,b
  3546  00DBC4  1174               	iorwf	(___fldiv@a+3)& (0+255),w,b
  3547  00DBC6  A4D8               	btfss	status,2,c
  3548  00DBC8  EFE8  F06D         	goto	u3991
  3549  00DBCC  EFEA  F06D         	goto	u3990
  3550  00DBD0                     u3991:
  3551  00DBD0  EF02  F06E         	goto	l4052
  3552  00DBD4                     u3990:
  3553  00DBD4                     
  3554                           ; BSR set to: 0
  3555  00DBD4  0E00               	movlw	0
  3556  00DBD6  6F6D               	movwf	___fldiv@b& (0+255),b
  3557  00DBD8  0E00               	movlw	0
  3558  00DBDA  6F6E               	movwf	(___fldiv@b+1)& (0+255),b
  3559  00DBDC  0E00               	movlw	0
  3560  00DBDE  6F6F               	movwf	(___fldiv@b+2)& (0+255),b
  3561  00DBE0  0E00               	movlw	0
  3562  00DBE2  6F70               	movwf	(___fldiv@b+3)& (0+255),b
  3563  00DBE4                     
  3564                           ; BSR set to: 0
  3565  00DBE4  0E80               	movlw	128
  3566  00DBE6  136F               	iorwf	(___fldiv@b+2)& (0+255),f,b
  3567  00DBE8  0E7F               	movlw	127
  3568  00DBEA  1370               	iorwf	(___fldiv@b+3)& (0+255),f,b
  3569  00DBEC                     l4046:
  3570                           
  3571                           ; BSR set to: 0
  3572  00DBEC  517D               	movf	___fldiv@sign& (0+255),w,b
  3573  00DBEE  1370               	iorwf	(___fldiv@b+3)& (0+255),f,b
  3574  00DBF0                     
  3575                           ; BSR set to: 0
  3576  00DBF0  C06D  F06D         	movff	___fldiv@b,?___fldiv
  3577  00DBF4  C06E  F06E         	movff	___fldiv@b+1,?___fldiv+1
  3578  00DBF8  C06F  F06F         	movff	___fldiv@b+2,?___fldiv+2
  3579  00DBFC  C070  F070         	movff	___fldiv@b+3,?___fldiv+3
  3580  00DC00  EF45  F06F         	goto	l1153
  3581  00DC04                     l4052:
  3582                           
  3583                           ; BSR set to: 0
  3584  00DC04  5184               	movf	___fldiv@bexp& (0+255),w,b
  3585  00DC06  A4D8               	btfss	status,2,c
  3586  00DC08  EF08  F06E         	goto	u4001
  3587  00DC0C  EF0A  F06E         	goto	u4000
  3588  00DC10                     u4001:
  3589  00DC10  EF14  F06E         	goto	l4060
  3590  00DC14                     u4000:
  3591  00DC14                     
  3592                           ; BSR set to: 0
  3593  00DC14  0E00               	movlw	0
  3594  00DC16  6F6D               	movwf	?___fldiv& (0+255),b
  3595  00DC18  0E00               	movlw	0
  3596  00DC1A  6F6E               	movwf	(?___fldiv+1)& (0+255),b
  3597  00DC1C  0E00               	movlw	0
  3598  00DC1E  6F6F               	movwf	(?___fldiv+2)& (0+255),b
  3599  00DC20  0E00               	movlw	0
  3600  00DC22  6F70               	movwf	(?___fldiv+3)& (0+255),b
  3601  00DC24  EF45  F06F         	goto	l1153
  3602  00DC28                     l4060:
  3603                           
  3604                           ; BSR set to: 0
  3605  00DC28  5185               	movf	___fldiv@aexp& (0+255),w,b
  3606  00DC2A  C084  F075         	movff	___fldiv@bexp,??___fldiv
  3607  00DC2E  6B76               	clrf	(??___fldiv+1)& (0+255),b
  3608  00DC30  5F75               	subwf	??___fldiv& (0+255),f,b
  3609  00DC32  0E00               	movlw	0
  3610  00DC34  5B76               	subwfb	(??___fldiv+1)& (0+255),f,b
  3611  00DC36  0E7F               	movlw	127
  3612  00DC38  2575               	addwf	??___fldiv& (0+255),w,b
  3613  00DC3A  6F7E               	movwf	___fldiv@new_exp& (0+255),b
  3614  00DC3C  0E00               	movlw	0
  3615  00DC3E  2176               	addwfc	(??___fldiv+1)& (0+255),w,b
  3616  00DC40  6F7F               	movwf	(___fldiv@new_exp+1)& (0+255),b
  3617  00DC42                     
  3618                           ; BSR set to: 0
  3619  00DC42  C06D  F079         	movff	___fldiv@b,___fldiv@rem
  3620  00DC46  C06E  F07A         	movff	___fldiv@b+1,___fldiv@rem+1
  3621  00DC4A  C06F  F07B         	movff	___fldiv@b+2,___fldiv@rem+2
  3622  00DC4E  C070  F07C         	movff	___fldiv@b+3,___fldiv@rem+3
  3623  00DC52                     
  3624                           ; BSR set to: 0
  3625  00DC52  0E00               	movlw	0
  3626  00DC54  6F6D               	movwf	___fldiv@b& (0+255),b
  3627  00DC56  0E00               	movlw	0
  3628  00DC58  6F6E               	movwf	(___fldiv@b+1)& (0+255),b
  3629  00DC5A  0E00               	movlw	0
  3630  00DC5C  6F6F               	movwf	(___fldiv@b+2)& (0+255),b
  3631  00DC5E  0E00               	movlw	0
  3632  00DC60  6F70               	movwf	(___fldiv@b+3)& (0+255),b
  3633  00DC62                     
  3634                           ; BSR set to: 0
  3635  00DC62  0E00               	movlw	0
  3636  00DC64  6F80               	movwf	___fldiv@grs& (0+255),b
  3637  00DC66  0E00               	movlw	0
  3638  00DC68  6F81               	movwf	(___fldiv@grs+1)& (0+255),b
  3639  00DC6A  0E00               	movlw	0
  3640  00DC6C  6F82               	movwf	(___fldiv@grs+2)& (0+255),b
  3641  00DC6E  0E00               	movlw	0
  3642  00DC70  6F83               	movwf	(___fldiv@grs+3)& (0+255),b
  3643  00DC72                     
  3644                           ; BSR set to: 0
  3645  00DC72  0E00               	movlw	0
  3646  00DC74  6F85               	movwf	___fldiv@aexp& (0+255),b
  3647  00DC76  EF75  F06E         	goto	l1155
  3648  00DC7A                     l4070:
  3649                           
  3650                           ; BSR set to: 0
  3651  00DC7A  5185               	movf	___fldiv@aexp& (0+255),w,b
  3652  00DC7C  B4D8               	btfsc	status,2,c
  3653  00DC7E  EF43  F06E         	goto	u4011
  3654  00DC82  EF45  F06E         	goto	u4010
  3655  00DC86                     u4011:
  3656  00DC86  EF5C  F06E         	goto	l4078
  3657  00DC8A                     u4010:
  3658  00DC8A                     
  3659                           ; BSR set to: 0
  3660  00DC8A  90D8               	bcf	status,0,c
  3661  00DC8C  3779               	rlcf	___fldiv@rem& (0+255),f,b
  3662  00DC8E  377A               	rlcf	(___fldiv@rem+1)& (0+255),f,b
  3663  00DC90  377B               	rlcf	(___fldiv@rem+2)& (0+255),f,b
  3664  00DC92  377C               	rlcf	(___fldiv@rem+3)& (0+255),f,b
  3665  00DC94  90D8               	bcf	status,0,c
  3666  00DC96  376D               	rlcf	___fldiv@b& (0+255),f,b
  3667  00DC98  376E               	rlcf	(___fldiv@b+1)& (0+255),f,b
  3668  00DC9A  376F               	rlcf	(___fldiv@b+2)& (0+255),f,b
  3669  00DC9C  3770               	rlcf	(___fldiv@b+3)& (0+255),f,b
  3670  00DC9E                     
  3671                           ; BSR set to: 0
  3672  00DC9E  AF83               	btfss	(___fldiv@grs+3)& (0+255),7,b
  3673  00DCA0  EF54  F06E         	goto	u4021
  3674  00DCA4  EF56  F06E         	goto	u4020
  3675  00DCA8                     u4021:
  3676  00DCA8  EF57  F06E         	goto	l1158
  3677  00DCAC                     u4020:
  3678  00DCAC                     
  3679                           ; BSR set to: 0
  3680  00DCAC  816D               	bsf	___fldiv@b& (0+255),0,b
  3681  00DCAE                     l1158:
  3682                           
  3683                           ; BSR set to: 0
  3684  00DCAE  90D8               	bcf	status,0,c
  3685  00DCB0  3780               	rlcf	___fldiv@grs& (0+255),f,b
  3686  00DCB2  3781               	rlcf	(___fldiv@grs+1)& (0+255),f,b
  3687  00DCB4  3782               	rlcf	(___fldiv@grs+2)& (0+255),f,b
  3688  00DCB6  3783               	rlcf	(___fldiv@grs+3)& (0+255),f,b
  3689  00DCB8                     l4078:
  3690                           
  3691                           ; BSR set to: 0
  3692  00DCB8  5171               	movf	___fldiv@a& (0+255),w,b
  3693  00DCBA  5D79               	subwf	___fldiv@rem& (0+255),w,b
  3694  00DCBC  5172               	movf	(___fldiv@a+1)& (0+255),w,b
  3695  00DCBE  597A               	subwfb	(___fldiv@rem+1)& (0+255),w,b
  3696  00DCC0  5173               	movf	(___fldiv@a+2)& (0+255),w,b
  3697  00DCC2  597B               	subwfb	(___fldiv@rem+2)& (0+255),w,b
  3698  00DCC4  5174               	movf	(___fldiv@a+3)& (0+255),w,b
  3699  00DCC6  597C               	subwfb	(___fldiv@rem+3)& (0+255),w,b
  3700  00DCC8  A0D8               	btfss	status,0,c
  3701  00DCCA  EF69  F06E         	goto	u4031
  3702  00DCCE  EF6B  F06E         	goto	u4030
  3703  00DCD2                     u4031:
  3704  00DCD2  EF74  F06E         	goto	l4084
  3705  00DCD6                     u4030:
  3706  00DCD6                     
  3707                           ; BSR set to: 0
  3708  00DCD6  8D83               	bsf	(___fldiv@grs+3)& (0+255),6,b
  3709  00DCD8                     
  3710                           ; BSR set to: 0
  3711  00DCD8  5171               	movf	___fldiv@a& (0+255),w,b
  3712  00DCDA  5F79               	subwf	___fldiv@rem& (0+255),f,b
  3713  00DCDC  5172               	movf	(___fldiv@a+1)& (0+255),w,b
  3714  00DCDE  5B7A               	subwfb	(___fldiv@rem+1)& (0+255),f,b
  3715  00DCE0  5173               	movf	(___fldiv@a+2)& (0+255),w,b
  3716  00DCE2  5B7B               	subwfb	(___fldiv@rem+2)& (0+255),f,b
  3717  00DCE4  5174               	movf	(___fldiv@a+3)& (0+255),w,b
  3718  00DCE6  5B7C               	subwfb	(___fldiv@rem+3)& (0+255),f,b
  3719  00DCE8                     l4084:
  3720                           
  3721                           ; BSR set to: 0
  3722  00DCE8  2B85               	incf	___fldiv@aexp& (0+255),f,b
  3723  00DCEA                     l1155:
  3724                           
  3725                           ; BSR set to: 0
  3726  00DCEA  0E19               	movlw	25
  3727  00DCEC  6585               	cpfsgt	___fldiv@aexp& (0+255),b
  3728  00DCEE  EF7B  F06E         	goto	u4041
  3729  00DCF2  EF7D  F06E         	goto	u4040
  3730  00DCF6                     u4041:
  3731  00DCF6  EF3D  F06E         	goto	l4070
  3732  00DCFA                     u4040:
  3733  00DCFA                     
  3734                           ; BSR set to: 0
  3735  00DCFA  5179               	movf	___fldiv@rem& (0+255),w,b
  3736  00DCFC  117A               	iorwf	(___fldiv@rem+1)& (0+255),w,b
  3737  00DCFE  117B               	iorwf	(___fldiv@rem+2)& (0+255),w,b
  3738  00DD00  117C               	iorwf	(___fldiv@rem+3)& (0+255),w,b
  3739  00DD02  B4D8               	btfsc	status,2,c
  3740  00DD04  EF86  F06E         	goto	u4051
  3741  00DD08  EF88  F06E         	goto	u4050
  3742  00DD0C                     u4051:
  3743  00DD0C  EFA0  F06E         	goto	l4096
  3744  00DD10                     u4050:
  3745  00DD10                     
  3746                           ; BSR set to: 0
  3747  00DD10  8180               	bsf	___fldiv@grs& (0+255),0,b
  3748  00DD12  EFA0  F06E         	goto	l4096
  3749  00DD16                     l4090:
  3750                           
  3751                           ; BSR set to: 0
  3752  00DD16  90D8               	bcf	status,0,c
  3753  00DD18  376D               	rlcf	___fldiv@b& (0+255),f,b
  3754  00DD1A  376E               	rlcf	(___fldiv@b+1)& (0+255),f,b
  3755  00DD1C  376F               	rlcf	(___fldiv@b+2)& (0+255),f,b
  3756  00DD1E  3770               	rlcf	(___fldiv@b+3)& (0+255),f,b
  3757  00DD20                     
  3758                           ; BSR set to: 0
  3759  00DD20  AF83               	btfss	(___fldiv@grs+3)& (0+255),7,b
  3760  00DD22  EF95  F06E         	goto	u4061
  3761  00DD26  EF97  F06E         	goto	u4060
  3762  00DD2A                     u4061:
  3763  00DD2A  EF98  F06E         	goto	l1164
  3764  00DD2E                     u4060:
  3765  00DD2E                     
  3766                           ; BSR set to: 0
  3767  00DD2E  816D               	bsf	___fldiv@b& (0+255),0,b
  3768  00DD30                     l1164:
  3769                           
  3770                           ; BSR set to: 0
  3771  00DD30  90D8               	bcf	status,0,c
  3772  00DD32  3780               	rlcf	___fldiv@grs& (0+255),f,b
  3773  00DD34  3781               	rlcf	(___fldiv@grs+1)& (0+255),f,b
  3774  00DD36  3782               	rlcf	(___fldiv@grs+2)& (0+255),f,b
  3775  00DD38  3783               	rlcf	(___fldiv@grs+3)& (0+255),f,b
  3776  00DD3A  077E               	decf	___fldiv@new_exp& (0+255),f,b
  3777  00DD3C  A0D8               	btfss	status,0,c
  3778  00DD3E  077F               	decf	(___fldiv@new_exp+1)& (0+255),f,b
  3779  00DD40                     l4096:
  3780                           
  3781                           ; BSR set to: 0
  3782  00DD40  AF6F               	btfss	(___fldiv@b+2)& (0+255),7,b
  3783  00DD42  EFA5  F06E         	goto	u4071
  3784  00DD46  EFA7  F06E         	goto	u4070
  3785  00DD4A                     u4071:
  3786  00DD4A  EF8B  F06E         	goto	l4090
  3787  00DD4E                     u4070:
  3788  00DD4E                     
  3789                           ; BSR set to: 0
  3790  00DD4E  0E00               	movlw	0
  3791  00DD50  6F85               	movwf	___fldiv@aexp& (0+255),b
  3792  00DD52                     
  3793                           ; BSR set to: 0
  3794  00DD52  AF83               	btfss	(___fldiv@grs+3)& (0+255),7,b
  3795  00DD54  EFAE  F06E         	goto	u4081
  3796  00DD58  EFB0  F06E         	goto	u4080
  3797  00DD5C                     u4081:
  3798  00DD5C  EFD4  F06E         	goto	l1166
  3799  00DD60                     u4080:
  3800  00DD60                     
  3801                           ; BSR set to: 0
  3802  00DD60  0EFF               	movlw	255
  3803  00DD62  1580               	andwf	___fldiv@grs& (0+255),w,b
  3804  00DD64  6F75               	movwf	??___fldiv& (0+255),b
  3805  00DD66  0EFF               	movlw	255
  3806  00DD68  1581               	andwf	(___fldiv@grs+1)& (0+255),w,b
  3807  00DD6A  6F76               	movwf	(??___fldiv+1)& (0+255),b
  3808  00DD6C  0EFF               	movlw	255
  3809  00DD6E  1582               	andwf	(___fldiv@grs+2)& (0+255),w,b
  3810  00DD70  6F77               	movwf	(??___fldiv+2)& (0+255),b
  3811  00DD72  0E7F               	movlw	127
  3812  00DD74  1583               	andwf	(___fldiv@grs+3)& (0+255),w,b
  3813  00DD76  6F78               	movwf	(??___fldiv+3)& (0+255),b
  3814  00DD78  5175               	movf	??___fldiv& (0+255),w,b
  3815  00DD7A  1176               	iorwf	(??___fldiv+1)& (0+255),w,b
  3816  00DD7C  1177               	iorwf	(??___fldiv+2)& (0+255),w,b
  3817  00DD7E  1178               	iorwf	(??___fldiv+3)& (0+255),w,b
  3818  00DD80  B4D8               	btfsc	status,2,c
  3819  00DD82  EFC5  F06E         	goto	u4091
  3820  00DD86  EFC7  F06E         	goto	u4090
  3821  00DD8A                     u4091:
  3822  00DD8A  EFCB  F06E         	goto	l1167
  3823  00DD8E                     u4090:
  3824  00DD8E                     l4104:
  3825                           
  3826                           ; BSR set to: 0
  3827  00DD8E  0E01               	movlw	1
  3828  00DD90  6F85               	movwf	___fldiv@aexp& (0+255),b
  3829  00DD92  EFD4  F06E         	goto	l1166
  3830  00DD96                     l1167:
  3831                           
  3832                           ; BSR set to: 0
  3833  00DD96  A16D               	btfss	___fldiv@b& (0+255),0,b
  3834  00DD98  EFD0  F06E         	goto	u4101
  3835  00DD9C  EFD2  F06E         	goto	u4100
  3836  00DDA0                     u4101:
  3837  00DDA0  EFD4  F06E         	goto	l1166
  3838  00DDA4                     u4100:
  3839  00DDA4  EFC7  F06E         	goto	l4104
  3840  00DDA8                     l1166:
  3841                           
  3842                           ; BSR set to: 0
  3843  00DDA8  5185               	movf	___fldiv@aexp& (0+255),w,b
  3844  00DDAA  B4D8               	btfsc	status,2,c
  3845  00DDAC  EFDA  F06E         	goto	u4111
  3846  00DDB0  EFDC  F06E         	goto	u4110
  3847  00DDB4                     u4111:
  3848  00DDB4  EF00  F06F         	goto	l4116
  3849  00DDB8                     u4110:
  3850  00DDB8                     
  3851                           ; BSR set to: 0
  3852  00DDB8  0E01               	movlw	1
  3853  00DDBA  276D               	addwf	___fldiv@b& (0+255),f,b
  3854  00DDBC  0E00               	movlw	0
  3855  00DDBE  236E               	addwfc	(___fldiv@b+1)& (0+255),f,b
  3856  00DDC0  236F               	addwfc	(___fldiv@b+2)& (0+255),f,b
  3857  00DDC2  2370               	addwfc	(___fldiv@b+3)& (0+255),f,b
  3858  00DDC4                     
  3859                           ; BSR set to: 0
  3860  00DDC4  A170               	btfss	(___fldiv@b+3)& (0+255),0,b
  3861  00DDC6  EFE7  F06E         	goto	u4121
  3862  00DDCA  EFE9  F06E         	goto	u4120
  3863  00DDCE                     u4121:
  3864  00DDCE  EF00  F06F         	goto	l4116
  3865  00DDD2                     u4120:
  3866  00DDD2                     
  3867                           ; BSR set to: 0
  3868  00DDD2  C06D  F075         	movff	___fldiv@b,??___fldiv
  3869  00DDD6  C06E  F076         	movff	___fldiv@b+1,??___fldiv+1
  3870  00DDDA  C06F  F077         	movff	___fldiv@b+2,??___fldiv+2
  3871  00DDDE  C070  F078         	movff	___fldiv@b+3,??___fldiv+3
  3872  00DDE2  3578               	rlcf	(??___fldiv+3)& (0+255),w,b
  3873  00DDE4  3378               	rrcf	(??___fldiv+3)& (0+255),f,b
  3874  00DDE6  3377               	rrcf	(??___fldiv+2)& (0+255),f,b
  3875  00DDE8  3376               	rrcf	(??___fldiv+1)& (0+255),f,b
  3876  00DDEA  3375               	rrcf	??___fldiv& (0+255),f,b
  3877  00DDEC  C075  F06D         	movff	??___fldiv,___fldiv@b
  3878  00DDF0  C076  F06E         	movff	??___fldiv+1,___fldiv@b+1
  3879  00DDF4  C077  F06F         	movff	??___fldiv+2,___fldiv@b+2
  3880  00DDF8  C078  F070         	movff	??___fldiv+3,___fldiv@b+3
  3881  00DDFC                     
  3882                           ; BSR set to: 0
  3883  00DDFC  4B7E               	infsnz	___fldiv@new_exp& (0+255),f,b
  3884  00DDFE  2B7F               	incf	(___fldiv@new_exp+1)& (0+255),f,b
  3885  00DE00                     l4116:
  3886                           
  3887                           ; BSR set to: 0
  3888  00DE00  BF7F               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
  3889  00DE02  EF0B  F06F         	goto	u4131
  3890  00DE06  517F               	movf	(___fldiv@new_exp+1)& (0+255),w,b
  3891  00DE08  E108               	bnz	u4130
  3892  00DE0A  297E               	incf	___fldiv@new_exp& (0+255),w,b
  3893  00DE0C  A0D8               	btfss	status,0,c
  3894  00DE0E  EF0B  F06F         	goto	u4131
  3895  00DE12  EF0D  F06F         	goto	u4130
  3896  00DE16                     u4131:
  3897  00DE16  EF18  F06F         	goto	l4120
  3898  00DE1A                     u4130:
  3899  00DE1A                     
  3900                           ; BSR set to: 0
  3901  00DE1A  0E00               	movlw	0
  3902  00DE1C  6F7F               	movwf	(___fldiv@new_exp+1)& (0+255),b
  3903  00DE1E  697E               	setf	___fldiv@new_exp& (0+255),b
  3904  00DE20  0E00               	movlw	0
  3905  00DE22  6F6D               	movwf	___fldiv@b& (0+255),b
  3906  00DE24  0E00               	movlw	0
  3907  00DE26  6F6E               	movwf	(___fldiv@b+1)& (0+255),b
  3908  00DE28  0E00               	movlw	0
  3909  00DE2A  6F6F               	movwf	(___fldiv@b+2)& (0+255),b
  3910  00DE2C  0E00               	movlw	0
  3911  00DE2E  6F70               	movwf	(___fldiv@b+3)& (0+255),b
  3912  00DE30                     l4120:
  3913                           
  3914                           ; BSR set to: 0
  3915  00DE30  BF7F               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
  3916  00DE32  EF25  F06F         	goto	u4140
  3917  00DE36  517F               	movf	(___fldiv@new_exp+1)& (0+255),w,b
  3918  00DE38  E106               	bnz	u4141
  3919  00DE3A  057E               	decf	___fldiv@new_exp& (0+255),w,b
  3920  00DE3C  B0D8               	btfsc	status,0,c
  3921  00DE3E  EF23  F06F         	goto	u4141
  3922  00DE42  EF25  F06F         	goto	u4140
  3923  00DE46                     u4141:
  3924  00DE46  EF33  F06F         	goto	l4124
  3925  00DE4A                     u4140:
  3926  00DE4A                     
  3927                           ; BSR set to: 0
  3928  00DE4A  0E00               	movlw	0
  3929  00DE4C  6F7F               	movwf	(___fldiv@new_exp+1)& (0+255),b
  3930  00DE4E  0E00               	movlw	0
  3931  00DE50  6F7E               	movwf	___fldiv@new_exp& (0+255),b
  3932  00DE52  0E00               	movlw	0
  3933  00DE54  6F6D               	movwf	___fldiv@b& (0+255),b
  3934  00DE56  0E00               	movlw	0
  3935  00DE58  6F6E               	movwf	(___fldiv@b+1)& (0+255),b
  3936  00DE5A  0E00               	movlw	0
  3937  00DE5C  6F6F               	movwf	(___fldiv@b+2)& (0+255),b
  3938  00DE5E  0E00               	movlw	0
  3939  00DE60  6F70               	movwf	(___fldiv@b+3)& (0+255),b
  3940  00DE62  0E00               	movlw	0
  3941  00DE64  6F7D               	movwf	___fldiv@sign& (0+255),b
  3942  00DE66                     l4124:
  3943                           
  3944                           ; BSR set to: 0
  3945  00DE66  C07E  F084         	movff	___fldiv@new_exp,___fldiv@bexp
  3946  00DE6A                     
  3947                           ; BSR set to: 0
  3948  00DE6A  A184               	btfss	___fldiv@bexp& (0+255),0,b
  3949  00DE6C  EF3A  F06F         	goto	u4151
  3950  00DE70  EF3C  F06F         	goto	u4150
  3951  00DE74                     u4151:
  3952  00DE74  EF3F  F06F         	goto	l4130
  3953  00DE78                     u4150:
  3954  00DE78                     
  3955                           ; BSR set to: 0
  3956  00DE78  8F6F               	bsf	(___fldiv@b+2)& (0+255),7,b
  3957  00DE7A  EF40  F06F         	goto	l4132
  3958  00DE7E                     l4130:
  3959                           
  3960                           ; BSR set to: 0
  3961  00DE7E  9F6F               	bcf	(___fldiv@b+2)& (0+255),7,b
  3962  00DE80                     l4132:
  3963                           
  3964                           ; BSR set to: 0
  3965  00DE80  90D8               	bcf	status,0,c
  3966  00DE82  3184               	rrcf	___fldiv@bexp& (0+255),w,b
  3967  00DE84  6F70               	movwf	(___fldiv@b+3)& (0+255),b
  3968  00DE86  EFF6  F06D         	goto	l4046
  3969  00DE8A                     l1153:
  3970                           
  3971                           ; BSR set to: 0
  3972  00DE8A  0012               	return		;funcret
  3973  00DE8C                     __end_of___fldiv:
  3974                           	callstack 0
  3975                           
  3976 ;; *************** function _clearPuTTY *****************
  3977 ;; Defined at:
  3978 ;;		line 4 in file "putty.c"
  3979 ;; Parameters:    Size  Location     Type
  3980 ;;		None
  3981 ;; Auto vars:     Size  Location     Type
  3982 ;;		None
  3983 ;; Return value:  Size  Location     Type
  3984 ;;                  1    wreg      void 
  3985 ;; Registers used:
  3986 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3987 ;; Tracked objects:
  3988 ;;		On entry : 0/0
  3989 ;;		On exit  : 0/0
  3990 ;;		Unchanged: 0/0
  3991 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3992 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3993 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3994 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3995 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3996 ;;Total ram usage:        0 bytes
  3997 ;; Hardware stack levels used:    1
  3998 ;; Hardware stack levels required when called:    3
  3999 ;; This function calls:
  4000 ;;		_printf
  4001 ;; This function is called by:
  4002 ;;		_main
  4003 ;; This function uses a non-reentrant model
  4004 ;;
  4005                           
  4006                           	psect	text9
  4007  00C1C0                     __ptext9:
  4008                           	callstack 0
  4009  00C1C0                     _clearPuTTY:
  4010                           	callstack 27
  4011  00C1C0                     
  4012                           ;putty.c: 6: printf("%c%c%c%c",27,'[','2','J');
  4013  00C1C0  0EF2               	movlw	low STR_5
  4014  00C1C2  0100               	movlb	0	; () banked
  4015  00C1C4  6FA6               	movwf	printf@f& (0+255),b
  4016  00C1C6  0EFF               	movlw	high STR_5
  4017  00C1C8  6FA7               	movwf	(printf@f+1)& (0+255),b
  4018  00C1CA  0E00               	movlw	0
  4019  00C1CC  6FA9               	movwf	(?_printf+3)& (0+255),b
  4020  00C1CE  0E1B               	movlw	27
  4021  00C1D0  6FA8               	movwf	(?_printf+2)& (0+255),b
  4022  00C1D2  0E00               	movlw	0
  4023  00C1D4  6FAB               	movwf	(?_printf+5)& (0+255),b
  4024  00C1D6  0E5B               	movlw	91
  4025  00C1D8  6FAA               	movwf	(?_printf+4)& (0+255),b
  4026  00C1DA  0E00               	movlw	0
  4027  00C1DC  6FAD               	movwf	(?_printf+7)& (0+255),b
  4028  00C1DE  0E32               	movlw	50
  4029  00C1E0  6FAC               	movwf	(?_printf+6)& (0+255),b
  4030  00C1E2  0E00               	movlw	0
  4031  00C1E4  6FAF               	movwf	(?_printf+9)& (0+255),b
  4032  00C1E6  0E4A               	movlw	74
  4033  00C1E8  6FAE               	movwf	(?_printf+8)& (0+255),b
  4034  00C1EA  ECFE  F078         	call	_printf	;wreg free
  4035                           
  4036                           ;putty.c: 7: printf("%c%c%c%c",27,'[','3','J');
  4037  00C1EE  0EF2               	movlw	low STR_5
  4038  00C1F0  0100               	movlb	0	; () banked
  4039  00C1F2  6FA6               	movwf	printf@f& (0+255),b
  4040  00C1F4  0EFF               	movlw	high STR_5
  4041  00C1F6  6FA7               	movwf	(printf@f+1)& (0+255),b
  4042  00C1F8  0E00               	movlw	0
  4043  00C1FA  6FA9               	movwf	(?_printf+3)& (0+255),b
  4044  00C1FC  0E1B               	movlw	27
  4045  00C1FE  6FA8               	movwf	(?_printf+2)& (0+255),b
  4046  00C200  0E00               	movlw	0
  4047  00C202  6FAB               	movwf	(?_printf+5)& (0+255),b
  4048  00C204  0E5B               	movlw	91
  4049  00C206  6FAA               	movwf	(?_printf+4)& (0+255),b
  4050  00C208  0E00               	movlw	0
  4051  00C20A  6FAD               	movwf	(?_printf+7)& (0+255),b
  4052  00C20C  0E33               	movlw	51
  4053  00C20E  6FAC               	movwf	(?_printf+6)& (0+255),b
  4054  00C210  0E00               	movlw	0
  4055  00C212  6FAF               	movwf	(?_printf+9)& (0+255),b
  4056  00C214  0E4A               	movlw	74
  4057  00C216  6FAE               	movwf	(?_printf+8)& (0+255),b
  4058  00C218  ECFE  F078         	call	_printf	;wreg free
  4059                           
  4060                           ;putty.c: 8: printf("%c%c%c",27,'[','H');
  4061  00C21C  0EF4               	movlw	low (STR_5+2)
  4062  00C21E  0100               	movlb	0	; () banked
  4063  00C220  6FA6               	movwf	printf@f& (0+255),b
  4064  00C222  0EFF               	movlw	high (STR_5+2)
  4065  00C224  6FA7               	movwf	(printf@f+1)& (0+255),b
  4066  00C226  0E00               	movlw	0
  4067  00C228  6FA9               	movwf	(?_printf+3)& (0+255),b
  4068  00C22A  0E1B               	movlw	27
  4069  00C22C  6FA8               	movwf	(?_printf+2)& (0+255),b
  4070  00C22E  0E00               	movlw	0
  4071  00C230  6FAB               	movwf	(?_printf+5)& (0+255),b
  4072  00C232  0E5B               	movlw	91
  4073  00C234  6FAA               	movwf	(?_printf+4)& (0+255),b
  4074  00C236  0E00               	movlw	0
  4075  00C238  6FAD               	movwf	(?_printf+7)& (0+255),b
  4076  00C23A  0E48               	movlw	72
  4077  00C23C  6FAC               	movwf	(?_printf+6)& (0+255),b
  4078  00C23E  ECFE  F078         	call	_printf	;wreg free
  4079  00C242  0012               	return		;funcret
  4080  00C244                     __end_of_clearPuTTY:
  4081                           	callstack 0
  4082                           
  4083 ;; *************** function _buttonResponse *****************
  4084 ;; Defined at:
  4085 ;;		line 103 in file "main.c"
  4086 ;; Parameters:    Size  Location     Type
  4087 ;;		None
  4088 ;; Auto vars:     Size  Location     Type
  4089 ;;		None
  4090 ;; Return value:  Size  Location     Type
  4091 ;;                  1    wreg      void 
  4092 ;; Registers used:
  4093 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4094 ;; Tracked objects:
  4095 ;;		On entry : 0/0
  4096 ;;		On exit  : 0/0
  4097 ;;		Unchanged: 0/0
  4098 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4099 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4100 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4101 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4102 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4103 ;;Total ram usage:        1 bytes
  4104 ;; Hardware stack levels used:    1
  4105 ;; Hardware stack levels required when called:    3
  4106 ;; This function calls:
  4107 ;;		_DELAY_milliseconds
  4108 ;;		_poll_switch1_for_edges
  4109 ;;		_printf
  4110 ;; This function is called by:
  4111 ;;		_main
  4112 ;; This function uses a non-reentrant model
  4113 ;;
  4114                           
  4115                           	psect	text10
  4116  00C13C                     __ptext10:
  4117                           	callstack 0
  4118  00C13C                     _buttonResponse:
  4119                           	callstack 27
  4120  00C13C                     
  4121                           ;main.c: 105: has_switch1_changed = poll_switch1_for_edges(PORTDbits.RD1);
  4122  00C13C  B2CD               	btfsc	205,1,c	;volatile
  4123  00C13E  EFA3  F060         	goto	u4971
  4124  00C142  EFA8  F060         	goto	u4970
  4125  00C146                     u4971:
  4126  00C146  0100               	movlb	0	; () banked
  4127  00C148  6BD8               	clrf	??_buttonResponse& (0+255),b
  4128  00C14A  2BD8               	incf	??_buttonResponse& (0+255),f,b
  4129  00C14C  EFAA  F060         	goto	u4978
  4130  00C150                     u4970:
  4131  00C150  0100               	movlb	0	; () banked
  4132  00C152  6BD8               	clrf	??_buttonResponse& (0+255),b
  4133  00C154                     u4978:
  4134  00C154  51D8               	movf	??_buttonResponse& (0+255),w,b
  4135  00C156  6E01               	movwf	poll_switch1_for_edges@digitalinputpin^0,c
  4136  00C158  6A02               	clrf	(poll_switch1_for_edges@digitalinputpin+1)^0,c
  4137  00C15A  EC60  F060         	call	_poll_switch1_for_edges	;wreg free
  4138  00C15E  C001  F10C         	movff	?_poll_switch1_for_edges,_has_switch1_changed
  4139  00C162  C002  F10D         	movff	?_poll_switch1_for_edges+1,_has_switch1_changed+1
  4140                           
  4141                           ;main.c: 107: DELAY_milliseconds(10);
  4142  00C166  0E00               	movlw	0
  4143  00C168  6E02               	movwf	(DELAY_milliseconds@milliseconds+1)^0,c
  4144  00C16A  0E0A               	movlw	10
  4145  00C16C  6E01               	movwf	DELAY_milliseconds@milliseconds^0,c
  4146  00C16E  EC3E  F05F         	call	_DELAY_milliseconds	;wreg free
  4147  00C172                     
  4148                           ;main.c: 108: if (has_switch1_changed == 1)
  4149  00C172  0101               	movlb	1	; () banked
  4150  00C174  050C               	decf	_has_switch1_changed& (0+255),w,b
  4151  00C176  110D               	iorwf	(_has_switch1_changed+1)& (0+255),w,b
  4152  00C178  A4D8               	btfss	status,2,c
  4153  00C17A  EFC1  F060         	goto	u4981
  4154  00C17E  EFC3  F060         	goto	u4980
  4155  00C182                     u4981:
  4156  00C182  EFDF  F060         	goto	l384
  4157  00C186                     u4980:
  4158  00C186                     
  4159                           ; BSR set to: 1
  4160                           ;main.c: 109: {;main.c: 110: DELAY_milliseconds(10);
  4161  00C186  0E00               	movlw	0
  4162  00C188  6E02               	movwf	(DELAY_milliseconds@milliseconds+1)^0,c
  4163  00C18A  0E0A               	movlw	10
  4164  00C18C  6E01               	movwf	DELAY_milliseconds@milliseconds^0,c
  4165  00C18E  EC3E  F05F         	call	_DELAY_milliseconds	;wreg free
  4166  00C192                     
  4167                           ;main.c: 112: blinkrate++;
  4168  00C192  0101               	movlb	1	; () banked
  4169  00C194  2B0E               	incf	_blinkrate& (0+255),f,b
  4170  00C196                     
  4171                           ; BSR set to: 1
  4172                           ;main.c: 113: if (blinkrate > 2) blinkrate = 1;
  4173  00C196  0E02               	movlw	2
  4174  00C198  650E               	cpfsgt	_blinkrate& (0+255),b
  4175  00C19A  EFD1  F060         	goto	u4991
  4176  00C19E  EFD3  F060         	goto	u4990
  4177  00C1A2                     u4991:
  4178  00C1A2  EFD5  F060         	goto	l4720
  4179  00C1A6                     u4990:
  4180  00C1A6                     
  4181                           ; BSR set to: 1
  4182  00C1A6  0E01               	movlw	1
  4183  00C1A8  6F0E               	movwf	_blinkrate& (0+255),b
  4184  00C1AA                     l4720:
  4185                           
  4186                           ; BSR set to: 1
  4187                           ;main.c: 114: printf("blinkrate = %u \n\r",blinkrate);
  4188  00C1AA  0ECF               	movlw	low STR_4
  4189  00C1AC  0100               	movlb	0	; () banked
  4190  00C1AE  6FA6               	movwf	printf@f& (0+255),b
  4191  00C1B0  0EFF               	movlw	high STR_4
  4192  00C1B2  6FA7               	movwf	(printf@f+1)& (0+255),b
  4193  00C1B4  C10E  F0A8         	movff	_blinkrate,?_printf+2
  4194  00C1B8  6BA9               	clrf	(?_printf+3)& (0+255),b
  4195  00C1BA  ECFE  F078         	call	_printf	;wreg free
  4196  00C1BE                     l384:
  4197  00C1BE  0012               	return		;funcret
  4198  00C1C0                     __end_of_buttonResponse:
  4199                           	callstack 0
  4200                           
  4201 ;; *************** function _printf *****************
  4202 ;; Defined at:
  4203 ;;		line 477 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c"
  4204 ;; Parameters:    Size  Location     Type
  4205 ;;  f               2   70[BANK0 ] PTR const unsigned char 
  4206 ;;		 -> STR_7(7), STR_6(9), STR_5(9), STR_4(18), 
  4207 ;;		 -> STR_3(58), STR_2(69), STR_1(23), 
  4208 ;; Auto vars:     Size  Location     Type
  4209 ;;  idx             1   96[BANK0 ] unsigned char 
  4210 ;;  fval            4  113[BANK0 ] unsigned char 
  4211 ;;  tmpval          4  109[BANK0 ] struct .
  4212 ;;  val             4  105[BANK0 ] unsigned long 
  4213 ;;  prec            2  117[BANK0 ] int 
  4214 ;;  eexp            2  103[BANK0 ] int 
  4215 ;;  flag            2  101[BANK0 ] unsigned short 
  4216 ;;  ap              2   99[BANK0 ] PTR void [1]
  4217 ;;		 -> ?_printf(2), 
  4218 ;;  len             2   97[BANK0 ] unsigned int 
  4219 ;;  cp              2   94[BANK0 ] PTR const unsigned char 
  4220 ;;		 -> printf@c(1), 
  4221 ;;  width           2    0        int 
  4222 ;;  c               1  119[BANK0 ] unsigned char 
  4223 ;;  d               1    0        unsigned char 
  4224 ;; Return value:  Size  Location     Type
  4225 ;;                  2   70[BANK0 ] int 
  4226 ;; Registers used:
  4227 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4228 ;; Tracked objects:
  4229 ;;		On entry : 0/0
  4230 ;;		On exit  : 0/0
  4231 ;;		Unchanged: 0/0
  4232 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4233 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4234 ;;      Locals:         0      30       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4235 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4236 ;;      Totals:         0      50       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4237 ;;Total ram usage:       50 bytes
  4238 ;; Hardware stack levels used:    1
  4239 ;; Hardware stack levels required when called:    2
  4240 ;; This function calls:
  4241 ;;		___awdiv
  4242 ;;		___fladd
  4243 ;;		___fleq
  4244 ;;		___flge
  4245 ;;		___flmul
  4246 ;;		___flneg
  4247 ;;		___flsub
  4248 ;;		___fltol
  4249 ;;		___lldiv
  4250 ;;		___llmod
  4251 ;;		___wmul
  4252 ;;		___xxtofl
  4253 ;;		__div_to_l_
  4254 ;;		__tdiv_to_l_
  4255 ;;		_fround
  4256 ;;		_isdigit
  4257 ;;		_putch
  4258 ;;		_scale
  4259 ;; This function is called by:
  4260 ;;		_main
  4261 ;;		_buttonResponse
  4262 ;;		_clearPuTTY
  4263 ;; This function uses a non-reentrant model
  4264 ;;
  4265                           
  4266                           	psect	text11
  4267  00F1FC                     __ptext11:
  4268                           	callstack 0
  4269  00F1FC                     _printf:
  4270                           	callstack 28
  4271  00F1FC                     
  4272                           ;doprnt.c: 479: va_list ap;;doprnt.c: 512: char c;;doprnt.c: 514: int width;;doprnt.c: 5
      +                          17: int prec;;doprnt.c: 525: unsigned short flag;;doprnt.c: 532: char d;;doprnt.c: 533: 
      +                          double fval;;doprnt.c: 534: int eexp;;doprnt.c: 540: union {;doprnt.c: 541: unsigned lon
      +                          g vd;;doprnt.c: 542: double integ;;doprnt.c: 543: } tmpval;;doprnt.c: 545: unsigned long
      +                           val;;doprnt.c: 546: unsigned len;;doprnt.c: 547: const char * cp;;doprnt.c: 550: *ap = 
      +                          __va_start();
  4273  00F1FC  0EA8               	movlw	low (?_printf+2)
  4274  00F1FE  0100               	movlb	0	; () banked
  4275  00F200  6FC3               	movwf	printf@ap& (0+255),b
  4276  00F202  0E00               	movlw	high (?_printf+2)
  4277  00F204  6FC4               	movwf	(printf@ap+1)& (0+255),b
  4278                           
  4279                           ;doprnt.c: 553: while((c = *f++)) {
  4280  00F206  EF07  F07F         	goto	l4544
  4281  00F20A                     l4288:
  4282                           
  4283                           ; BSR set to: 0
  4284                           ;doprnt.c: 555: if(c != '%')
  4285  00F20A  0E25               	movlw	37
  4286  00F20C  19D7               	xorwf	printf@c& (0+255),w,b
  4287  00F20E  B4D8               	btfsc	status,2,c
  4288  00F210  EF0C  F079         	goto	u4311
  4289  00F214  EF0E  F079         	goto	u4310
  4290  00F218                     u4311:
  4291  00F218  EF13  F079         	goto	l4292
  4292  00F21C                     u4310:
  4293  00F21C                     
  4294                           ; BSR set to: 0
  4295                           ;doprnt.c: 557: {;doprnt.c: 558: (putch(c) );
  4296  00F21C  51D7               	movf	printf@c& (0+255),w,b
  4297  00F21E  ECDF  F05E         	call	_putch
  4298                           
  4299                           ;doprnt.c: 559: continue;
  4300  00F222  EF07  F07F         	goto	l4544
  4301  00F226                     l4292:
  4302                           
  4303                           ; BSR set to: 0
  4304                           ;doprnt.c: 560: };doprnt.c: 565: flag = 0;
  4305  00F226  0E00               	movlw	0
  4306  00F228  6FC6               	movwf	(printf@flag+1)& (0+255),b
  4307  00F22A  0E00               	movlw	0
  4308  00F22C  6FC5               	movwf	printf@flag& (0+255),b
  4309  00F22E                     
  4310                           ; BSR set to: 0
  4311                           ;doprnt.c: 628: if(*f == '.') {
  4312  00F22E  0060  F29B  FFF6   	movff	printf@f,tblptrl
  4313  00F234  0060  F29F  FFF7   	movff	printf@f+1,tblptrh
  4314  00F23A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4315  00F23A  6AF8               	clrf	tblptru,c
  4316  00F23C                     	endif
  4317  00F23C                     	if	0	;tblptru may be non-zero
  4318  00F23C                     	endif
  4319  00F23C  0008               	tblrd		*
  4320  00F23E  50F5               	movf	tablat,w,c
  4321  00F240  0A2E               	xorlw	46
  4322  00F242  A4D8               	btfss	status,2,c
  4323  00F244  EF26  F079         	goto	u4321
  4324  00F248  EF28  F079         	goto	u4320
  4325  00F24C                     u4321:
  4326  00F24C  EF6D  F079         	goto	l4308
  4327  00F250                     u4320:
  4328  00F250                     
  4329                           ; BSR set to: 0
  4330                           ;doprnt.c: 629: flag |= 0x4000;
  4331  00F250  8DC6               	bsf	(printf@flag+1)& (0+255),6,b
  4332                           
  4333                           ;doprnt.c: 630: f++;
  4334  00F252  4BA6               	infsnz	printf@f& (0+255),f,b
  4335  00F254  2BA7               	incf	(printf@f+1)& (0+255),f,b
  4336  00F256                     
  4337                           ; BSR set to: 0
  4338                           ;doprnt.c: 644: {;doprnt.c: 645: prec = 0;
  4339  00F256  0E00               	movlw	0
  4340  00F258  6FD6               	movwf	(printf@prec+1)& (0+255),b
  4341  00F25A  0E00               	movlw	0
  4342  00F25C  6FD5               	movwf	printf@prec& (0+255),b
  4343                           
  4344                           ;doprnt.c: 646: while(isdigit((unsigned)*f)) {
  4345  00F25E  EF59  F079         	goto	l4306
  4346  00F262                     l4300:
  4347                           
  4348                           ;doprnt.c: 647: prec *= 10;
  4349  00F262  C0D5  F001         	movff	printf@prec,___wmul@multiplier
  4350  00F266  C0D6  F002         	movff	printf@prec+1,___wmul@multiplier+1
  4351  00F26A  0E00               	movlw	0
  4352  00F26C  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  4353  00F26E  0E0A               	movlw	10
  4354  00F270  6E03               	movwf	___wmul@multiplicand^0,c
  4355  00F272  EC29  F05F         	call	___wmul	;wreg free
  4356  00F276  C001  F0D5         	movff	?___wmul,printf@prec
  4357  00F27A  C002  F0D6         	movff	?___wmul+1,printf@prec+1
  4358  00F27E                     
  4359                           ;doprnt.c: 648: prec += *f++ - '0';
  4360  00F27E  0ED0               	movlw	208
  4361  00F280  0100               	movlb	0	; () banked
  4362  00F282  6FB6               	movwf	??_printf& (0+255),b
  4363  00F284  0EFF               	movlw	255
  4364  00F286  6FB7               	movwf	(??_printf+1)& (0+255),b
  4365  00F288  0060  F29B  FFF6   	movff	printf@f,tblptrl
  4366  00F28E  0060  F29F  FFF7   	movff	printf@f+1,tblptrh
  4367  00F294                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4368  00F294  6AF8               	clrf	tblptru,c
  4369  00F296                     	endif
  4370  00F296                     	if	0	;tblptru may be non-zero
  4371  00F296                     	endif
  4372  00F296  0008               	tblrd		*
  4373  00F298  50F5               	movf	tablat,w,c
  4374  00F29A  6FB8               	movwf	(??_printf+2)& (0+255),b
  4375  00F29C  6BB9               	clrf	(??_printf+3)& (0+255),b
  4376  00F29E  51B6               	movf	??_printf& (0+255),w,b
  4377  00F2A0  27B8               	addwf	(??_printf+2)& (0+255),f,b
  4378  00F2A2  51B7               	movf	(??_printf+1)& (0+255),w,b
  4379  00F2A4  23B9               	addwfc	(??_printf+3)& (0+255),f,b
  4380  00F2A6  51B8               	movf	(??_printf+2)& (0+255),w,b
  4381  00F2A8  27D5               	addwf	printf@prec& (0+255),f,b
  4382  00F2AA  51B9               	movf	(??_printf+3)& (0+255),w,b
  4383  00F2AC  23D6               	addwfc	(printf@prec+1)& (0+255),f,b
  4384  00F2AE                     
  4385                           ; BSR set to: 0
  4386  00F2AE  4BA6               	infsnz	printf@f& (0+255),f,b
  4387  00F2B0  2BA7               	incf	(printf@f+1)& (0+255),f,b
  4388  00F2B2                     l4306:
  4389                           
  4390                           ; BSR set to: 0
  4391  00F2B2  0060  F29B  FFF6   	movff	printf@f,tblptrl
  4392  00F2B8  0060  F29F  FFF7   	movff	printf@f+1,tblptrh
  4393  00F2BE                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4394  00F2BE  6AF8               	clrf	tblptru,c
  4395  00F2C0                     	endif
  4396  00F2C0                     	if	0	;tblptru may be non-zero
  4397  00F2C0                     	endif
  4398  00F2C0  0008               	tblrd		*
  4399  00F2C2  50F5               	movf	tablat,w,c
  4400  00F2C4  EC6D  F05F         	call	_isdigit
  4401  00F2C8  B0D8               	btfsc	status,0,c
  4402  00F2CA  EF69  F079         	goto	u4331
  4403  00F2CE  EF6B  F079         	goto	u4330
  4404  00F2D2                     u4331:
  4405  00F2D2  EF31  F079         	goto	l4300
  4406  00F2D6                     u4330:
  4407  00F2D6  EFCB  F079         	goto	l4340
  4408  00F2DA                     l4308:
  4409                           
  4410                           ; BSR set to: 0
  4411                           ;doprnt.c: 652: prec = 0;
  4412  00F2DA  0E00               	movlw	0
  4413  00F2DC  6FD6               	movwf	(printf@prec+1)& (0+255),b
  4414  00F2DE  0E00               	movlw	0
  4415  00F2E0  6FD5               	movwf	printf@prec& (0+255),b
  4416  00F2E2                     
  4417                           ; BSR set to: 0
  4418                           ;doprnt.c: 654: flag |= 0x1000;
  4419  00F2E2  89C6               	bsf	(printf@flag+1)& (0+255),4,b
  4420  00F2E4  EFCB  F079         	goto	l4340
  4421  00F2E8                     l4312:
  4422                           
  4423                           ; BSR set to: 0
  4424                           ;doprnt.c: 689: flag |= 0x400;
  4425  00F2E8  85C6               	bsf	(printf@flag+1)& (0+255),2,b
  4426                           
  4427                           ;doprnt.c: 690: break;
  4428  00F2EA  EFF0  F079         	goto	l4342
  4429  00F2EE                     l4314:
  4430                           
  4431                           ; BSR set to: 0
  4432                           ;doprnt.c: 747: flag |= 0x80;
  4433  00F2EE  8FC5               	bsf	printf@flag& (0+255),7,b
  4434                           
  4435                           ;doprnt.c: 749: break;
  4436  00F2F0  EFF0  F079         	goto	l4342
  4437  00F2F4                     l4316:
  4438                           
  4439                           ; BSR set to: 0
  4440                           ;doprnt.c: 779: if(prec && (prec < ((int)len)))
  4441  00F2F4  51D5               	movf	printf@prec& (0+255),w,b
  4442  00F2F6  11D6               	iorwf	(printf@prec+1)& (0+255),w,b
  4443  00F2F8  B4D8               	btfsc	status,2,c
  4444  00F2FA  EF81  F079         	goto	u4341
  4445  00F2FE  EF83  F079         	goto	u4340
  4446  00F302                     u4341:
  4447  00F302  EFA2  F079         	goto	l4326
  4448  00F306                     u4340:
  4449  00F306                     
  4450                           ; BSR set to: 0
  4451  00F306  BFD6               	btfsc	(printf@prec+1)& (0+255),7,b
  4452  00F308  EF90  F079         	goto	u4350
  4453  00F30C  51D6               	movf	(printf@prec+1)& (0+255),w,b
  4454  00F30E  E106               	bnz	u4351
  4455  00F310  05D5               	decf	printf@prec& (0+255),w,b
  4456  00F312  B0D8               	btfsc	status,0,c
  4457  00F314  EF8E  F079         	goto	u4351
  4458  00F318  EF90  F079         	goto	u4350
  4459  00F31C                     u4351:
  4460  00F31C  EFA2  F079         	goto	l4326
  4461  00F320                     u4350:
  4462  00F320                     
  4463                           ; BSR set to: 0
  4464                           ;doprnt.c: 780: len = (unsigned int)prec;
  4465  00F320  C0D5  F0C1         	movff	printf@prec,printf@len
  4466  00F324  C0D6  F0C2         	movff	printf@prec+1,printf@len+1
  4467  00F328  EFA2  F079         	goto	l4326
  4468  00F32C                     l4322:
  4469                           
  4470                           ; BSR set to: 0
  4471                           ;doprnt.c: 794: (putch(*cp++) );
  4472  00F32C  0060  F2FB  FFD9   	movff	printf@cp,fsr2l
  4473  00F332  0060  F2FF  FFDA   	movff	printf@cp+1,fsr2h
  4474  00F338  50DF               	movf	indf2,w,c
  4475  00F33A  ECDF  F05E         	call	_putch
  4476  00F33E  0100               	movlb	0	; () banked
  4477  00F340  4BBE               	infsnz	printf@cp& (0+255),f,b
  4478  00F342  2BBF               	incf	(printf@cp+1)& (0+255),f,b
  4479  00F344                     l4326:
  4480                           
  4481                           ; BSR set to: 0
  4482  00F344  07C1               	decf	printf@len& (0+255),f,b
  4483  00F346  A0D8               	btfss	status,0,c
  4484  00F348  07C2               	decf	(printf@len+1)& (0+255),f,b
  4485  00F34A  29C1               	incf	printf@len& (0+255),w,b
  4486  00F34C  E106               	bnz	u4361
  4487  00F34E  29C2               	incf	(printf@len+1)& (0+255),w,b
  4488  00F350  A4D8               	btfss	status,2,c
  4489  00F352  EFAD  F079         	goto	u4361
  4490  00F356  EFAF  F079         	goto	u4360
  4491  00F35A                     u4361:
  4492  00F35A  EF96  F079         	goto	l4322
  4493  00F35E                     u4360:
  4494  00F35E  EF07  F07F         	goto	l4544
  4495  00F362                     l4328:
  4496                           
  4497                           ; BSR set to: 0
  4498                           ;doprnt.c: 825: c = (char)(*(int *)__va_arg((*(int **)ap), (int)0));
  4499  00F362  0060  F30F  FFD9   	movff	printf@ap,fsr2l
  4500  00F368  0060  F313  FFDA   	movff	printf@ap+1,fsr2h
  4501  00F36E  50DF               	movf	indf2,w,c
  4502  00F370  6FD7               	movwf	printf@c& (0+255),b
  4503  00F372                     
  4504                           ; BSR set to: 0
  4505  00F372  0E02               	movlw	2
  4506  00F374  27C3               	addwf	printf@ap& (0+255),f,b
  4507  00F376  0E00               	movlw	0
  4508  00F378  23C4               	addwfc	(printf@ap+1)& (0+255),f,b
  4509  00F37A                     l4332:
  4510                           
  4511                           ; BSR set to: 0
  4512                           ;doprnt.c: 831: cp = (char *)&c;
  4513  00F37A  0ED7               	movlw	low printf@c
  4514  00F37C  6FBE               	movwf	printf@cp& (0+255),b
  4515  00F37E  0E00               	movlw	high printf@c
  4516  00F380  6FBF               	movwf	(printf@cp+1)& (0+255),b
  4517  00F382                     
  4518                           ; BSR set to: 0
  4519                           ;doprnt.c: 832: len = 1;
  4520  00F382  0E00               	movlw	0
  4521  00F384  6FC2               	movwf	(printf@len+1)& (0+255),b
  4522  00F386  0E01               	movlw	1
  4523  00F388  6FC1               	movwf	printf@len& (0+255),b
  4524                           
  4525                           ;doprnt.c: 833: goto dostring;
  4526  00F38A  EF7A  F079         	goto	l4316
  4527  00F38E                     l4336:
  4528                           
  4529                           ; BSR set to: 0
  4530                           ;doprnt.c: 844: flag |= 0xC0;
  4531  00F38E  0EC0               	movlw	192
  4532  00F390  13C5               	iorwf	printf@flag& (0+255),f,b
  4533                           
  4534                           ;doprnt.c: 845: break;
  4535  00F392  EFF0  F079         	goto	l4342
  4536  00F396                     l4340:
  4537  00F396  0060  F29B  FFF6   	movff	printf@f,tblptrl
  4538  00F39C  0060  F29F  FFF7   	movff	printf@f+1,tblptrh
  4539  00F3A2  0100               	movlb	0	; () banked
  4540  00F3A4  4BA6               	infsnz	printf@f& (0+255),f,b
  4541  00F3A6  2BA7               	incf	(printf@f+1)& (0+255),f,b
  4542  00F3A8                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4543  00F3A8  6AF8               	clrf	tblptru,c
  4544  00F3AA                     	endif
  4545  00F3AA                     	if	0	;tblptru may be non-zero
  4546  00F3AA                     	endif
  4547  00F3AA  0008               	tblrd		*
  4548  00F3AC  006F FFD4  F0D7    	movff	tablat,printf@c
  4549  00F3B2  51D7               	movf	printf@c& (0+255),w,b
  4550                           
  4551                           ; Switch size 1, requested type "simple"
  4552                           ; Number of cases is 5, Range of values is 0 to 120
  4553                           ; switch strategies available:
  4554                           ; Name         Instructions Cycles
  4555                           ; simple_byte           16     9 (average)
  4556                           ;	Chosen strategy is simple_byte
  4557  00F3B4  0A00               	xorlw	0	; case 0
  4558  00F3B6  B4D8               	btfsc	status,2,c
  4559  00F3B8  EF1D  F07F         	goto	l546
  4560  00F3BC  0A63               	xorlw	99	; case 99
  4561  00F3BE  B4D8               	btfsc	status,2,c
  4562  00F3C0  EFB1  F079         	goto	l4328
  4563  00F3C4  0A05               	xorlw	5	; case 102
  4564  00F3C6  B4D8               	btfsc	status,2,c
  4565  00F3C8  EF74  F079         	goto	l4312
  4566  00F3CC  0A13               	xorlw	19	; case 117
  4567  00F3CE  B4D8               	btfsc	status,2,c
  4568  00F3D0  EFC7  F079         	goto	l4336
  4569  00F3D4  0A0D               	xorlw	13	; case 120
  4570  00F3D6  B4D8               	btfsc	status,2,c
  4571  00F3D8  EF77  F079         	goto	l4314
  4572  00F3DC  EFBD  F079         	goto	l4332
  4573  00F3E0                     l4342:
  4574                           
  4575                           ; BSR set to: 0
  4576                           ;doprnt.c: 851: if(flag & (0x700)) {
  4577  00F3E0  0E07               	movlw	7
  4578  00F3E2  15C6               	andwf	(printf@flag+1)& (0+255),w,b
  4579  00F3E4  B4D8               	btfsc	status,2,c
  4580  00F3E6  EFF7  F079         	goto	u4371
  4581  00F3EA  EFF9  F079         	goto	u4370
  4582  00F3EE                     u4371:
  4583  00F3EE  EF8C  F07D         	goto	l4476
  4584  00F3F2                     u4370:
  4585  00F3F2                     
  4586                           ; BSR set to: 0
  4587                           ;doprnt.c: 853: if(flag & 0x1000)
  4588  00F3F2  A9C6               	btfss	(printf@flag+1)& (0+255),4,b
  4589  00F3F4  EFFE  F079         	goto	u4381
  4590  00F3F8  EF00  F07A         	goto	u4380
  4591  00F3FC                     u4381:
  4592  00F3FC  EF04  F07A         	goto	l4348
  4593  00F400                     u4380:
  4594  00F400                     
  4595                           ; BSR set to: 0
  4596                           ;doprnt.c: 855: prec = 6;
  4597  00F400  0E00               	movlw	0
  4598  00F402  6FD6               	movwf	(printf@prec+1)& (0+255),b
  4599  00F404  0E06               	movlw	6
  4600  00F406  6FD5               	movwf	printf@prec& (0+255),b
  4601  00F408                     l4348:
  4602                           
  4603                           ; BSR set to: 0
  4604                           ;doprnt.c: 856: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
  4605  00F408  0060  F30F  FFD9   	movff	printf@ap,fsr2l
  4606  00F40E  0060  F313  FFDA   	movff	printf@ap+1,fsr2h
  4607  00F414  006F FF78  F0D1    	movff	postinc2,printf@fval
  4608  00F41A  006F FF78  F0D2    	movff	postinc2,printf@fval+1
  4609  00F420  006F FF78  F0D3    	movff	postinc2,printf@fval+2
  4610  00F426  006F FF78  F0D4    	movff	postinc2,printf@fval+3
  4611  00F42C                     
  4612                           ; BSR set to: 0
  4613  00F42C  0E04               	movlw	4
  4614  00F42E  27C3               	addwf	printf@ap& (0+255),f,b
  4615  00F430  0E00               	movlw	0
  4616  00F432  23C4               	addwfc	(printf@ap+1)& (0+255),f,b
  4617  00F434                     
  4618                           ; BSR set to: 0
  4619                           ;doprnt.c: 857: if(fval < 0.0) {
  4620  00F434  BFD4               	btfsc	(printf@fval+3)& (0+255),7,b
  4621  00F436  EF21  F07A         	goto	u4390
  4622  00F43A  EF1F  F07A         	goto	u4391
  4623  00F43E                     u4391:
  4624  00F43E  EF36  F07A         	goto	l4358
  4625  00F442                     u4390:
  4626  00F442                     
  4627                           ; BSR set to: 0
  4628                           ;doprnt.c: 858: fval = -fval;
  4629  00F442  C0D1  F001         	movff	printf@fval,___flneg@f1
  4630  00F446  C0D2  F002         	movff	printf@fval+1,___flneg@f1+1
  4631  00F44A  C0D3  F003         	movff	printf@fval+2,___flneg@f1+2
  4632  00F44E  C0D4  F004         	movff	printf@fval+3,___flneg@f1+3
  4633  00F452  EC86  F05F         	call	___flneg	;wreg free
  4634  00F456  C001  F0D1         	movff	?___flneg,printf@fval
  4635  00F45A  C002  F0D2         	movff	?___flneg+1,printf@fval+1
  4636  00F45E  C003  F0D3         	movff	?___flneg+2,printf@fval+2
  4637  00F462  C004  F0D4         	movff	?___flneg+3,printf@fval+3
  4638  00F466                     
  4639                           ;doprnt.c: 859: flag |= 0x03;
  4640  00F466  0E03               	movlw	3
  4641  00F468  0100               	movlb	0	; () banked
  4642  00F46A  13C5               	iorwf	printf@flag& (0+255),f,b
  4643  00F46C                     l4358:
  4644                           
  4645                           ; BSR set to: 0
  4646                           ;doprnt.c: 860: };doprnt.c: 861: eexp = 0;
  4647  00F46C  0E00               	movlw	0
  4648  00F46E  6FC8               	movwf	(printf@eexp+1)& (0+255),b
  4649  00F470  0E00               	movlw	0
  4650  00F472  6FC7               	movwf	printf@eexp& (0+255),b
  4651  00F474                     
  4652                           ; BSR set to: 0
  4653                           ;doprnt.c: 862: if( fval!=0) {
  4654  00F474  C0D1  F027         	movff	printf@fval,___fleq@ff1
  4655  00F478  C0D2  F028         	movff	printf@fval+1,___fleq@ff1+1
  4656  00F47C  C0D3  F029         	movff	printf@fval+2,___fleq@ff1+2
  4657  00F480  C0D4  F02A         	movff	printf@fval+3,___fleq@ff1+3
  4658  00F484  0E00               	movlw	0
  4659  00F486  6E2B               	movwf	___fleq@ff2^0,c
  4660  00F488  0E00               	movlw	0
  4661  00F48A  6E2C               	movwf	(___fleq@ff2+1)^0,c
  4662  00F48C  0E00               	movlw	0
  4663  00F48E  6E2D               	movwf	(___fleq@ff2+2)^0,c
  4664  00F490  0E00               	movlw	0
  4665  00F492  6E2E               	movwf	(___fleq@ff2+3)^0,c
  4666  00F494  EC08  F062         	call	___fleq	;wreg free
  4667  00F498  B0D8               	btfsc	status,0,c
  4668  00F49A  EF51  F07A         	goto	u4401
  4669  00F49E  EF53  F07A         	goto	u4400
  4670  00F4A2                     u4401:
  4671  00F4A2  EFE6  F07A         	goto	l4386
  4672  00F4A6                     u4400:
  4673  00F4A6                     
  4674                           ;doprnt.c: 863: (void)(*(&eexp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255)
      +                           - 126);
  4675  00F4A6  0100               	movlb	0	; () banked
  4676  00F4A8  35D3               	rlcf	(printf@fval+2)& (0+255),w,b
  4677  00F4AA  35D4               	rlcf	(printf@fval+3)& (0+255),w,b
  4678  00F4AC  0F82               	addlw	130
  4679  00F4AE  6FC7               	movwf	printf@eexp& (0+255),b
  4680  00F4B0  6BC8               	clrf	(printf@eexp+1)& (0+255),b
  4681  00F4B2  0EFF               	movlw	255
  4682  00F4B4  23C8               	addwfc	(printf@eexp+1)& (0+255),f,b
  4683  00F4B6                     
  4684                           ; BSR set to: 0
  4685                           ;doprnt.c: 864: eexp--;
  4686  00F4B6  07C7               	decf	printf@eexp& (0+255),f,b
  4687  00F4B8  A0D8               	btfss	status,0,c
  4688  00F4BA  07C8               	decf	(printf@eexp+1)& (0+255),f,b
  4689  00F4BC                     
  4690                           ; BSR set to: 0
  4691                           ;doprnt.c: 865: eexp *= 3;
  4692  00F4BC  C0C7  F001         	movff	printf@eexp,___wmul@multiplier
  4693  00F4C0  C0C8  F002         	movff	printf@eexp+1,___wmul@multiplier+1
  4694  00F4C4  0E00               	movlw	0
  4695  00F4C6  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  4696  00F4C8  0E03               	movlw	3
  4697  00F4CA  6E03               	movwf	___wmul@multiplicand^0,c
  4698  00F4CC  EC29  F05F         	call	___wmul	;wreg free
  4699  00F4D0  C001  F0C7         	movff	?___wmul,printf@eexp
  4700  00F4D4  C002  F0C8         	movff	?___wmul+1,printf@eexp+1
  4701  00F4D8                     
  4702                           ;doprnt.c: 866: eexp /= 10;
  4703  00F4D8  C0C7  F007         	movff	printf@eexp,___awdiv@dividend
  4704  00F4DC  C0C8  F008         	movff	printf@eexp+1,___awdiv@dividend+1
  4705  00F4E0  0E00               	movlw	0
  4706  00F4E2  6E0A               	movwf	(___awdiv@divisor+1)^0,c
  4707  00F4E4  0E0A               	movlw	10
  4708  00F4E6  6E09               	movwf	___awdiv@divisor^0,c
  4709  00F4E8  ECB5  F062         	call	___awdiv	;wreg free
  4710  00F4EC  C007  F0C7         	movff	?___awdiv,printf@eexp
  4711  00F4F0  C008  F0C8         	movff	?___awdiv+1,printf@eexp+1
  4712  00F4F4                     
  4713                           ;doprnt.c: 867: if(eexp < 0)
  4714  00F4F4  0100               	movlb	0	; () banked
  4715  00F4F6  BFC8               	btfsc	(printf@eexp+1)& (0+255),7,b
  4716  00F4F8  EF82  F07A         	goto	u4410
  4717  00F4FC  EF80  F07A         	goto	u4411
  4718  00F500                     u4411:
  4719  00F500  EF85  F07A         	goto	l4374
  4720  00F504                     u4410:
  4721  00F504                     
  4722                           ; BSR set to: 0
  4723                           ;doprnt.c: 868: eexp--;
  4724  00F504  07C7               	decf	printf@eexp& (0+255),f,b
  4725  00F506  A0D8               	btfss	status,0,c
  4726  00F508  07C8               	decf	(printf@eexp+1)& (0+255),f,b
  4727  00F50A                     l4374:
  4728                           
  4729                           ; BSR set to: 0
  4730                           ;doprnt.c: 872: tmpval.integ = scale(-eexp);
  4731  00F50A  51C7               	movf	printf@eexp& (0+255),w,b
  4732  00F50C  0800               	sublw	0
  4733  00F50E  EC6E  F071         	call	_scale
  4734  00F512  C057  F0CD         	movff	?_scale,printf@tmpval
  4735  00F516  C058  F0CE         	movff	?_scale+1,printf@tmpval+1
  4736  00F51A  C059  F0CF         	movff	?_scale+2,printf@tmpval+2
  4737  00F51E  C05A  F0D0         	movff	?_scale+3,printf@tmpval+3
  4738  00F522                     
  4739                           ;doprnt.c: 873: tmpval.integ *= fval;
  4740  00F522  C0CD  F04B         	movff	printf@tmpval,___flmul@b
  4741  00F526  C0CE  F04C         	movff	printf@tmpval+1,___flmul@b+1
  4742  00F52A  C0CF  F04D         	movff	printf@tmpval+2,___flmul@b+2
  4743  00F52E  C0D0  F04E         	movff	printf@tmpval+3,___flmul@b+3
  4744  00F532  C0D1  F04F         	movff	printf@fval,___flmul@a
  4745  00F536  C0D2  F050         	movff	printf@fval+1,___flmul@a+1
  4746  00F53A  C0D3  F051         	movff	printf@fval+2,___flmul@a+2
  4747  00F53E  C0D4  F052         	movff	printf@fval+3,___flmul@a+3
  4748  00F542  EC46  F06F         	call	___flmul	;wreg free
  4749  00F546  C04B  F0CD         	movff	?___flmul,printf@tmpval
  4750  00F54A  C04C  F0CE         	movff	?___flmul+1,printf@tmpval+1
  4751  00F54E  C04D  F0CF         	movff	?___flmul+2,printf@tmpval+2
  4752  00F552  C04E  F0D0         	movff	?___flmul+3,printf@tmpval+3
  4753  00F556                     
  4754                           ;doprnt.c: 874: if(tmpval.integ < 1.0)
  4755  00F556  C0CD  F001         	movff	printf@tmpval,___flge@ff1
  4756  00F55A  C0CE  F002         	movff	printf@tmpval+1,___flge@ff1+1
  4757  00F55E  C0CF  F003         	movff	printf@tmpval+2,___flge@ff1+2
  4758  00F562  C0D0  F004         	movff	printf@tmpval+3,___flge@ff1+3
  4759  00F566  0E00               	movlw	0
  4760  00F568  6E05               	movwf	___flge@ff2^0,c
  4761  00F56A  0E00               	movlw	0
  4762  00F56C  6E06               	movwf	(___flge@ff2+1)^0,c
  4763  00F56E  0E80               	movlw	128
  4764  00F570  6E07               	movwf	(___flge@ff2+2)^0,c
  4765  00F572  0E3F               	movlw	63
  4766  00F574  6E08               	movwf	(___flge@ff2+3)^0,c
  4767  00F576  EC83  F063         	call	___flge	;wreg free
  4768  00F57A  B0D8               	btfsc	status,0,c
  4769  00F57C  EFC2  F07A         	goto	u4421
  4770  00F580  EFC4  F07A         	goto	u4420
  4771  00F584                     u4421:
  4772  00F584  EFCA  F07A         	goto	l4382
  4773  00F588                     u4420:
  4774  00F588                     
  4775                           ;doprnt.c: 875: eexp--;
  4776  00F588  0100               	movlb	0	; () banked
  4777  00F58A  07C7               	decf	printf@eexp& (0+255),f,b
  4778  00F58C  A0D8               	btfss	status,0,c
  4779  00F58E  07C8               	decf	(printf@eexp+1)& (0+255),f,b
  4780  00F590  EFE6  F07A         	goto	l4386
  4781  00F594                     l4382:
  4782                           
  4783                           ;doprnt.c: 876: else if(tmpval.integ >= 10.0)
  4784  00F594  C0CD  F001         	movff	printf@tmpval,___flge@ff1
  4785  00F598  C0CE  F002         	movff	printf@tmpval+1,___flge@ff1+1
  4786  00F59C  C0CF  F003         	movff	printf@tmpval+2,___flge@ff1+2
  4787  00F5A0  C0D0  F004         	movff	printf@tmpval+3,___flge@ff1+3
  4788  00F5A4  0E00               	movlw	0
  4789  00F5A6  6E05               	movwf	___flge@ff2^0,c
  4790  00F5A8  0E00               	movlw	0
  4791  00F5AA  6E06               	movwf	(___flge@ff2+1)^0,c
  4792  00F5AC  0E20               	movlw	32
  4793  00F5AE  6E07               	movwf	(___flge@ff2+2)^0,c
  4794  00F5B0  0E41               	movlw	65
  4795  00F5B2  6E08               	movwf	(___flge@ff2+3)^0,c
  4796  00F5B4  EC83  F063         	call	___flge	;wreg free
  4797  00F5B8  A0D8               	btfss	status,0,c
  4798  00F5BA  EFE1  F07A         	goto	u4431
  4799  00F5BE  EFE3  F07A         	goto	u4430
  4800  00F5C2                     u4431:
  4801  00F5C2  EFE6  F07A         	goto	l4386
  4802  00F5C6                     u4430:
  4803  00F5C6                     
  4804                           ;doprnt.c: 877: eexp++;
  4805  00F5C6  0100               	movlb	0	; () banked
  4806  00F5C8  4BC7               	infsnz	printf@eexp& (0+255),f,b
  4807  00F5CA  2BC8               	incf	(printf@eexp+1)& (0+255),f,b
  4808  00F5CC                     l4386:
  4809                           
  4810                           ;doprnt.c: 878: };doprnt.c: 1138: if(prec <= 12)
  4811  00F5CC  0100               	movlb	0	; () banked
  4812  00F5CE  BFD6               	btfsc	(printf@prec+1)& (0+255),7,b
  4813  00F5D0  EFF5  F07A         	goto	u4440
  4814  00F5D4  51D6               	movf	(printf@prec+1)& (0+255),w,b
  4815  00F5D6  E107               	bnz	u4441
  4816  00F5D8  0E0D               	movlw	13
  4817  00F5DA  5DD5               	subwf	printf@prec& (0+255),w,b
  4818  00F5DC  B0D8               	btfsc	status,0,c
  4819  00F5DE  EFF3  F07A         	goto	u4441
  4820  00F5E2  EFF5  F07A         	goto	u4440
  4821  00F5E6                     u4441:
  4822  00F5E6  EF12  F07B         	goto	l4390
  4823  00F5EA                     u4440:
  4824  00F5EA                     
  4825                           ; BSR set to: 0
  4826                           ;doprnt.c: 1139: fval += fround((unsigned int)prec);
  4827  00F5EA  C0D1  F03B         	movff	printf@fval,___fladd@b
  4828  00F5EE  C0D2  F03C         	movff	printf@fval+1,___fladd@b+1
  4829  00F5F2  C0D3  F03D         	movff	printf@fval+2,___fladd@b+2
  4830  00F5F6  C0D4  F03E         	movff	printf@fval+3,___fladd@b+3
  4831  00F5FA  51D5               	movf	printf@prec& (0+255),w,b
  4832  00F5FC  ECFB  F06B         	call	_fround
  4833  00F600  C057  F03F         	movff	?_fround,___fladd@a
  4834  00F604  C058  F040         	movff	?_fround+1,___fladd@a+1
  4835  00F608  C059  F041         	movff	?_fround+2,___fladd@a+2
  4836  00F60C  C05A  F042         	movff	?_fround+3,___fladd@a+3
  4837  00F610  ECC8  F073         	call	___fladd	;wreg free
  4838  00F614  C03B  F0D1         	movff	?___fladd,printf@fval
  4839  00F618  C03C  F0D2         	movff	?___fladd+1,printf@fval+1
  4840  00F61C  C03D  F0D3         	movff	?___fladd+2,printf@fval+2
  4841  00F620  C03E  F0D4         	movff	?___fladd+3,printf@fval+3
  4842  00F624                     l4390:
  4843                           
  4844                           ;doprnt.c: 1142: if((eexp > 9)||(fval != 0 && (unsigned long)fval == 0 && eexp > 1)) {
  4845  00F624  0100               	movlb	0	; () banked
  4846  00F626  BFC8               	btfsc	(printf@eexp+1)& (0+255),7,b
  4847  00F628  EF21  F07B         	goto	u4450
  4848  00F62C  51C8               	movf	(printf@eexp+1)& (0+255),w,b
  4849  00F62E  E107               	bnz	u4451
  4850  00F630  0E0A               	movlw	10
  4851  00F632  5DC7               	subwf	printf@eexp& (0+255),w,b
  4852  00F634  B0D8               	btfsc	status,0,c
  4853  00F636  EF1F  F07B         	goto	u4451
  4854  00F63A  EF21  F07B         	goto	u4450
  4855  00F63E                     u4451:
  4856  00F63E  EF5E  F07B         	goto	l4398
  4857  00F642                     u4450:
  4858  00F642                     
  4859                           ; BSR set to: 0
  4860  00F642  C0D1  F027         	movff	printf@fval,___fleq@ff1
  4861  00F646  C0D2  F028         	movff	printf@fval+1,___fleq@ff1+1
  4862  00F64A  C0D3  F029         	movff	printf@fval+2,___fleq@ff1+2
  4863  00F64E  C0D4  F02A         	movff	printf@fval+3,___fleq@ff1+3
  4864  00F652  0E00               	movlw	0
  4865  00F654  6E2B               	movwf	___fleq@ff2^0,c
  4866  00F656  0E00               	movlw	0
  4867  00F658  6E2C               	movwf	(___fleq@ff2+1)^0,c
  4868  00F65A  0E00               	movlw	0
  4869  00F65C  6E2D               	movwf	(___fleq@ff2+2)^0,c
  4870  00F65E  0E00               	movlw	0
  4871  00F660  6E2E               	movwf	(___fleq@ff2+3)^0,c
  4872  00F662  EC08  F062         	call	___fleq	;wreg free
  4873  00F666  B0D8               	btfsc	status,0,c
  4874  00F668  EF38  F07B         	goto	u4461
  4875  00F66C  EF3A  F07B         	goto	u4460
  4876  00F670                     u4461:
  4877  00F670  EFB3  F07B         	goto	l4412
  4878  00F674                     u4460:
  4879  00F674  C0D1  F00F         	movff	printf@fval,___fltol@f1
  4880  00F678  C0D2  F010         	movff	printf@fval+1,___fltol@f1+1
  4881  00F67C  C0D3  F011         	movff	printf@fval+2,___fltol@f1+2
  4882  00F680  C0D4  F012         	movff	printf@fval+3,___fltol@f1+3
  4883  00F684  EC05  F064         	call	___fltol	;wreg free
  4884  00F688  500F               	movf	?___fltol^0,w,c
  4885  00F68A  1010               	iorwf	(?___fltol+1)^0,w,c
  4886  00F68C  1011               	iorwf	(?___fltol+2)^0,w,c
  4887  00F68E  1012               	iorwf	(?___fltol+3)^0,w,c
  4888  00F690  A4D8               	btfss	status,2,c
  4889  00F692  EF4D  F07B         	goto	u4471
  4890  00F696  EF4F  F07B         	goto	u4470
  4891  00F69A                     u4471:
  4892  00F69A  EFB3  F07B         	goto	l4412
  4893  00F69E                     u4470:
  4894  00F69E  0100               	movlb	0	; () banked
  4895  00F6A0  BFC8               	btfsc	(printf@eexp+1)& (0+255),7,b
  4896  00F6A2  EF5C  F07B         	goto	u4481
  4897  00F6A6  51C8               	movf	(printf@eexp+1)& (0+255),w,b
  4898  00F6A8  E109               	bnz	u4480
  4899  00F6AA  0E02               	movlw	2
  4900  00F6AC  5DC7               	subwf	printf@eexp& (0+255),w,b
  4901  00F6AE  A0D8               	btfss	status,0,c
  4902  00F6B0  EF5C  F07B         	goto	u4481
  4903  00F6B4  EF5E  F07B         	goto	u4480
  4904  00F6B8                     u4481:
  4905  00F6B8  EFB3  F07B         	goto	l4412
  4906  00F6BC                     u4480:
  4907  00F6BC                     l4398:
  4908                           
  4909                           ; BSR set to: 0
  4910                           ;doprnt.c: 1146: if(tmpval.integ < 4.294967296){
  4911  00F6BC  C0CD  F001         	movff	printf@tmpval,___flge@ff1
  4912  00F6C0  C0CE  F002         	movff	printf@tmpval+1,___flge@ff1+1
  4913  00F6C4  C0CF  F003         	movff	printf@tmpval+2,___flge@ff1+2
  4914  00F6C8  C0D0  F004         	movff	printf@tmpval+3,___flge@ff1+3
  4915  00F6CC  0E5F               	movlw	95
  4916  00F6CE  6E05               	movwf	___flge@ff2^0,c
  4917  00F6D0  0E70               	movlw	112
  4918  00F6D2  6E06               	movwf	(___flge@ff2+1)^0,c
  4919  00F6D4  0E89               	movlw	137
  4920  00F6D6  6E07               	movwf	(___flge@ff2+2)^0,c
  4921  00F6D8  0E40               	movlw	64
  4922  00F6DA  6E08               	movwf	(___flge@ff2+3)^0,c
  4923  00F6DC  EC83  F063         	call	___flge	;wreg free
  4924  00F6E0  B0D8               	btfsc	status,0,c
  4925  00F6E2  EF75  F07B         	goto	u4491
  4926  00F6E6  EF77  F07B         	goto	u4490
  4927  00F6EA                     u4491:
  4928  00F6EA  EF7E  F07B         	goto	l4402
  4929  00F6EE                     u4490:
  4930  00F6EE                     
  4931                           ;doprnt.c: 1147: eexp -= (sizeof dpowers/sizeof dpowers[0])-1;
  4932  00F6EE  0100               	movlb	0	; () banked
  4933  00F6F0  0EF7               	movlw	247
  4934  00F6F2  27C7               	addwf	printf@eexp& (0+255),f,b
  4935  00F6F4  0EFF               	movlw	255
  4936  00F6F6  23C8               	addwfc	(printf@eexp+1)& (0+255),f,b
  4937                           
  4938                           ;doprnt.c: 1148: }else{
  4939  00F6F8  EF83  F07B         	goto	l4404
  4940  00F6FC                     l4402:
  4941                           
  4942                           ;doprnt.c: 1149: eexp -= (sizeof dpowers/sizeof dpowers[0])-2;
  4943  00F6FC  0100               	movlb	0	; () banked
  4944  00F6FE  0EF8               	movlw	248
  4945  00F700  27C7               	addwf	printf@eexp& (0+255),f,b
  4946  00F702  0EFF               	movlw	255
  4947  00F704  23C8               	addwfc	(printf@eexp+1)& (0+255),f,b
  4948  00F706                     l4404:
  4949                           
  4950                           ; BSR set to: 0
  4951                           ;doprnt.c: 1152: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
  4952  00F706  51C7               	movf	printf@eexp& (0+255),w,b
  4953  00F708  EC6E  F071         	call	_scale
  4954  00F70C  C057  F0CD         	movff	?_scale,printf@tmpval
  4955  00F710  C058  F0CE         	movff	?_scale+1,printf@tmpval+1
  4956  00F714  C059  F0CF         	movff	?_scale+2,printf@tmpval+2
  4957  00F718  C05A  F0D0         	movff	?_scale+3,printf@tmpval+3
  4958  00F71C  C0D1  F001         	movff	printf@fval,__div_to_l_@f1
  4959  00F720  C0D2  F002         	movff	printf@fval+1,__div_to_l_@f1+1
  4960  00F724  C0D3  F003         	movff	printf@fval+2,__div_to_l_@f1+2
  4961  00F728  C0D4  F004         	movff	printf@fval+3,__div_to_l_@f1+3
  4962  00F72C  C0CD  F005         	movff	printf@tmpval,__div_to_l_@f2
  4963  00F730  C0CE  F006         	movff	printf@tmpval+1,__div_to_l_@f2+1
  4964  00F734  C0CF  F007         	movff	printf@tmpval+2,__div_to_l_@f2+2
  4965  00F738  C0D0  F008         	movff	printf@tmpval+3,__div_to_l_@f2+3
  4966  00F73C  EC57  F066         	call	__div_to_l_	;wreg free
  4967  00F740  C001  F0C9         	movff	?__div_to_l_,printf@val
  4968  00F744  C002  F0CA         	movff	?__div_to_l_+1,printf@val+1
  4969  00F748  C003  F0CB         	movff	?__div_to_l_+2,printf@val+2
  4970  00F74C  C004  F0CC         	movff	?__div_to_l_+3,printf@val+3
  4971  00F750                     
  4972                           ;doprnt.c: 1155: fval = 0.0;
  4973  00F750  0E00               	movlw	0
  4974  00F752  0100               	movlb	0	; () banked
  4975  00F754  6FD1               	movwf	printf@fval& (0+255),b
  4976  00F756  0E00               	movlw	0
  4977  00F758  6FD2               	movwf	(printf@fval+1)& (0+255),b
  4978  00F75A  0E00               	movlw	0
  4979  00F75C  6FD3               	movwf	(printf@fval+2)& (0+255),b
  4980  00F75E  0E00               	movlw	0
  4981  00F760  6FD4               	movwf	(printf@fval+3)& (0+255),b
  4982                           
  4983                           ;doprnt.c: 1156: } else {
  4984  00F762  EFEF  F07B         	goto	l4416
  4985  00F766                     l4412:
  4986                           
  4987                           ;doprnt.c: 1157: val = (unsigned long)fval;
  4988  00F766  C0D1  F00F         	movff	printf@fval,___fltol@f1
  4989  00F76A  C0D2  F010         	movff	printf@fval+1,___fltol@f1+1
  4990  00F76E  C0D3  F011         	movff	printf@fval+2,___fltol@f1+2
  4991  00F772  C0D4  F012         	movff	printf@fval+3,___fltol@f1+3
  4992  00F776  EC05  F064         	call	___fltol	;wreg free
  4993  00F77A  C00F  F0C9         	movff	?___fltol,printf@val
  4994  00F77E  C010  F0CA         	movff	?___fltol+1,printf@val+1
  4995  00F782  C011  F0CB         	movff	?___fltol+2,printf@val+2
  4996  00F786  C012  F0CC         	movff	?___fltol+3,printf@val+3
  4997                           
  4998                           ;doprnt.c: 1158: fval -= (double)val;
  4999  00F78A  C0D1  F057         	movff	printf@fval,___flsub@b
  5000  00F78E  C0D2  F058         	movff	printf@fval+1,___flsub@b+1
  5001  00F792  C0D3  F059         	movff	printf@fval+2,___flsub@b+2
  5002  00F796  C0D4  F05A         	movff	printf@fval+3,___flsub@b+3
  5003  00F79A  C0C9  F019         	movff	printf@val,___xxtofl@val
  5004  00F79E  C0CA  F01A         	movff	printf@val+1,___xxtofl@val+1
  5005  00F7A2  C0CB  F01B         	movff	printf@val+2,___xxtofl@val+2
  5006  00F7A6  C0CC  F01C         	movff	printf@val+3,___xxtofl@val+3
  5007  00F7AA  0E00               	movlw	0
  5008  00F7AC  EC7A  F068         	call	___xxtofl
  5009  00F7B0  C019  F05B         	movff	?___xxtofl,___flsub@a
  5010  00F7B4  C01A  F05C         	movff	?___xxtofl+1,___flsub@a+1
  5011  00F7B8  C01B  F05D         	movff	?___xxtofl+2,___flsub@a+2
  5012  00F7BC  C01C  F05E         	movff	?___xxtofl+3,___flsub@a+3
  5013  00F7C0  ECA2  F05F         	call	___flsub	;wreg free
  5014  00F7C4  C057  F0D1         	movff	?___flsub,printf@fval
  5015  00F7C8  C058  F0D2         	movff	?___flsub+1,printf@fval+1
  5016  00F7CC  C059  F0D3         	movff	?___flsub+2,printf@fval+2
  5017  00F7D0  C05A  F0D4         	movff	?___flsub+3,printf@fval+3
  5018  00F7D4                     
  5019                           ;doprnt.c: 1159: eexp = 0;
  5020  00F7D4  0E00               	movlw	0
  5021  00F7D6  0100               	movlb	0	; () banked
  5022  00F7D8  6FC8               	movwf	(printf@eexp+1)& (0+255),b
  5023  00F7DA  0E00               	movlw	0
  5024  00F7DC  6FC7               	movwf	printf@eexp& (0+255),b
  5025  00F7DE                     l4416:
  5026                           
  5027                           ; BSR set to: 0
  5028                           ;doprnt.c: 1160: };doprnt.c: 1162: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ;
      +                           c++)
  5029  00F7DE  0E01               	movlw	1
  5030  00F7E0  6FD7               	movwf	printf@c& (0+255),b
  5031  00F7E2                     l4418:
  5032                           
  5033                           ; BSR set to: 0
  5034  00F7E2  0E0A               	movlw	10
  5035  00F7E4  19D7               	xorwf	printf@c& (0+255),w,b
  5036  00F7E6  A4D8               	btfss	status,2,c
  5037  00F7E8  EFF8  F07B         	goto	u4501
  5038  00F7EC  EFFA  F07B         	goto	u4500
  5039  00F7F0                     u4501:
  5040  00F7F0  EFFC  F07B         	goto	l4422
  5041  00F7F4                     u4500:
  5042  00F7F4  EF1F  F07C         	goto	l4430
  5043  00F7F8                     l4422:
  5044                           
  5045                           ; BSR set to: 0
  5046                           ;doprnt.c: 1163: if(val < dpowers[c])
  5047  00F7F8  51D7               	movf	printf@c& (0+255),w,b
  5048  00F7FA  0D04               	mullw	4
  5049  00F7FC  0EED               	movlw	low _dpowers
  5050  00F7FE  24F3               	addwf	243,w,c
  5051  00F800  6EF6               	movwf	tblptrl,c
  5052  00F802  0EFE               	movlw	high _dpowers
  5053  00F804  20F4               	addwfc	244,w,c
  5054  00F806  6EF7               	movwf	tblptrh,c
  5055  00F808                     	if	1	;There are 3 active tblptr bytes
  5056  00F808  6AF8               	clrf	tblptru,c
  5057  00F80A  0E00               	movlw	low (__mediumconst shr (0+16))
  5058  00F80C  22F8               	addwfc	tblptru,f,c
  5059  00F80E                     	endif
  5060  00F80E  0009               	tblrd		*+
  5061  00F810  50F5               	movf	tablat,w,c
  5062  00F812  5DC9               	subwf	printf@val& (0+255),w,b
  5063  00F814  0009               	tblrd		*+
  5064  00F816  50F5               	movf	tablat,w,c
  5065  00F818  59CA               	subwfb	(printf@val+1)& (0+255),w,b
  5066  00F81A  0009               	tblrd		*+
  5067  00F81C  50F5               	movf	tablat,w,c
  5068  00F81E  59CB               	subwfb	(printf@val+2)& (0+255),w,b
  5069  00F820  0009               	tblrd		*+
  5070  00F822  50F5               	movf	tablat,w,c
  5071  00F824  59CC               	subwfb	(printf@val+3)& (0+255),w,b
  5072  00F826  B0D8               	btfsc	status,0,c
  5073  00F828  EF18  F07C         	goto	u4511
  5074  00F82C  EF1A  F07C         	goto	u4510
  5075  00F830                     u4511:
  5076  00F830  EF1C  F07C         	goto	l4426
  5077  00F834                     u4510:
  5078  00F834  EF1F  F07C         	goto	l4430
  5079  00F838                     l4426:
  5080                           
  5081                           ; BSR set to: 0
  5082  00F838  2BD7               	incf	printf@c& (0+255),f,b
  5083  00F83A  EFF1  F07B         	goto	l4418
  5084  00F83E                     l4430:
  5085                           
  5086                           ; BSR set to: 0
  5087                           ;doprnt.c: 1201: {;doprnt.c: 1214: if(flag & 0x03)
  5088  00F83E  0E03               	movlw	3
  5089  00F840  15C5               	andwf	printf@flag& (0+255),w,b
  5090  00F842  6FB6               	movwf	??_printf& (0+255),b
  5091  00F844  0E00               	movlw	0
  5092  00F846  15C6               	andwf	(printf@flag+1)& (0+255),w,b
  5093  00F848  6FB7               	movwf	(??_printf+1)& (0+255),b
  5094  00F84A  51B6               	movf	??_printf& (0+255),w,b
  5095  00F84C  11B7               	iorwf	(??_printf+1)& (0+255),w,b
  5096  00F84E  B4D8               	btfsc	status,2,c
  5097  00F850  EF2C  F07C         	goto	u4521
  5098  00F854  EF2E  F07C         	goto	u4520
  5099  00F858                     u4521:
  5100  00F858  EF7F  F07C         	goto	l4440
  5101  00F85C                     u4520:
  5102  00F85C                     
  5103                           ; BSR set to: 0
  5104                           ;doprnt.c: 1216: (putch('-') );
  5105  00F85C  0E2D               	movlw	45
  5106  00F85E  ECDF  F05E         	call	_putch
  5107  00F862  EF7F  F07C         	goto	l4440
  5108  00F866                     l4434:
  5109                           
  5110                           ; BSR set to: 0
  5111                           ;doprnt.c: 1226: {;doprnt.c: 1227: tmpval.vd = val/dpowers[c];
  5112  00F866  C0C9  F001         	movff	printf@val,___lldiv@dividend
  5113  00F86A  C0CA  F002         	movff	printf@val+1,___lldiv@dividend+1
  5114  00F86E  C0CB  F003         	movff	printf@val+2,___lldiv@dividend+2
  5115  00F872  C0CC  F004         	movff	printf@val+3,___lldiv@dividend+3
  5116  00F876  51D7               	movf	printf@c& (0+255),w,b
  5117  00F878  0D04               	mullw	4
  5118  00F87A  0EED               	movlw	low _dpowers
  5119  00F87C  24F3               	addwf	243,w,c
  5120  00F87E  6EF6               	movwf	tblptrl,c
  5121  00F880  0EFE               	movlw	high _dpowers
  5122  00F882  20F4               	addwfc	244,w,c
  5123  00F884  6EF7               	movwf	tblptrh,c
  5124  00F886                     	if	1	;There are 3 active tblptr bytes
  5125  00F886  6AF8               	clrf	tblptru,c
  5126  00F888  0E00               	movlw	low (__mediumconst shr (0+16))
  5127  00F88A  22F8               	addwfc	tblptru,f,c
  5128  00F88C                     	endif
  5129  00F88C  0009               	tblrd		*+
  5130  00F88E  006F FFD4  F005    	movff	tablat,___lldiv@divisor
  5131  00F894  0009               	tblrd		*+
  5132  00F896  006F FFD4  F006    	movff	tablat,___lldiv@divisor+1
  5133  00F89C  0009               	tblrd		*+
  5134  00F89E  006F FFD4  F007    	movff	tablat,___lldiv@divisor+2
  5135  00F8A4  000A               	tblrd		*-
  5136  00F8A6  006F FFD4  F008    	movff	tablat,___lldiv@divisor+3
  5137  00F8AC  ECB6  F061         	call	___lldiv	;wreg free
  5138  00F8B0  C001  F0CD         	movff	?___lldiv,printf@tmpval
  5139  00F8B4  C002  F0CE         	movff	?___lldiv+1,printf@tmpval+1
  5140  00F8B8  C003  F0CF         	movff	?___lldiv+2,printf@tmpval+2
  5141  00F8BC  C004  F0D0         	movff	?___lldiv+3,printf@tmpval+3
  5142  00F8C0                     
  5143                           ;doprnt.c: 1228: tmpval.vd %= 10;
  5144  00F8C0  C0CD  F00E         	movff	printf@tmpval,___llmod@dividend
  5145  00F8C4  C0CE  F00F         	movff	printf@tmpval+1,___llmod@dividend+1
  5146  00F8C8  C0CF  F010         	movff	printf@tmpval+2,___llmod@dividend+2
  5147  00F8CC  C0D0  F011         	movff	printf@tmpval+3,___llmod@dividend+3
  5148  00F8D0  0E0A               	movlw	10
  5149  00F8D2  6E12               	movwf	___llmod@divisor^0,c
  5150  00F8D4  0E00               	movlw	0
  5151  00F8D6  6E13               	movwf	(___llmod@divisor+1)^0,c
  5152  00F8D8  0E00               	movlw	0
  5153  00F8DA  6E14               	movwf	(___llmod@divisor+2)^0,c
  5154  00F8DC  0E00               	movlw	0
  5155  00F8DE  6E15               	movwf	(___llmod@divisor+3)^0,c
  5156  00F8E0  EC22  F061         	call	___llmod	;wreg free
  5157  00F8E4  C00E  F0CD         	movff	?___llmod,printf@tmpval
  5158  00F8E8  C00F  F0CE         	movff	?___llmod+1,printf@tmpval+1
  5159  00F8EC  C010  F0CF         	movff	?___llmod+2,printf@tmpval+2
  5160  00F8F0  C011  F0D0         	movff	?___llmod+3,printf@tmpval+3
  5161  00F8F4                     
  5162                           ;doprnt.c: 1229: (putch('0' + tmpval.vd) );
  5163  00F8F4  0100               	movlb	0	; () banked
  5164  00F8F6  51CD               	movf	printf@tmpval& (0+255),w,b
  5165  00F8F8  0F30               	addlw	48
  5166  00F8FA  ECDF  F05E         	call	_putch
  5167  00F8FE                     l4440:
  5168  00F8FE  0100               	movlb	0	; () banked
  5169  00F900  07D7               	decf	printf@c& (0+255),f,b
  5170  00F902  29D7               	incf	printf@c& (0+255),w,b
  5171  00F904  A4D8               	btfss	status,2,c
  5172  00F906  EF87  F07C         	goto	u4531
  5173  00F90A  EF89  F07C         	goto	u4530
  5174  00F90E                     u4531:
  5175  00F90E  EF33  F07C         	goto	l4434
  5176  00F912                     u4530:
  5177  00F912  EF92  F07C         	goto	l4446
  5178  00F916                     l4442:
  5179                           
  5180                           ; BSR set to: 0
  5181                           ;doprnt.c: 1234: (putch('0') );
  5182  00F916  0E30               	movlw	48
  5183  00F918  ECDF  F05E         	call	_putch
  5184  00F91C                     
  5185                           ;doprnt.c: 1235: eexp--;
  5186  00F91C  0100               	movlb	0	; () banked
  5187  00F91E  07C7               	decf	printf@eexp& (0+255),f,b
  5188  00F920  A0D8               	btfss	status,0,c
  5189  00F922  07C8               	decf	(printf@eexp+1)& (0+255),f,b
  5190  00F924                     l4446:
  5191                           
  5192                           ; BSR set to: 0
  5193  00F924  BFC8               	btfsc	(printf@eexp+1)& (0+255),7,b
  5194  00F926  EF9F  F07C         	goto	u4540
  5195  00F92A  51C8               	movf	(printf@eexp+1)& (0+255),w,b
  5196  00F92C  E106               	bnz	u4541
  5197  00F92E  05C7               	decf	printf@eexp& (0+255),w,b
  5198  00F930  B0D8               	btfsc	status,0,c
  5199  00F932  EF9D  F07C         	goto	u4541
  5200  00F936  EF9F  F07C         	goto	u4540
  5201  00F93A                     u4541:
  5202  00F93A  EF8B  F07C         	goto	l4442
  5203  00F93E                     u4540:
  5204  00F93E                     
  5205                           ; BSR set to: 0
  5206                           ;doprnt.c: 1236: };doprnt.c: 1237: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2)
      +                          )
  5207  00F93E  BFD6               	btfsc	(printf@prec+1)& (0+255),7,b
  5208  00F940  EFAB  F07C         	goto	u4551
  5209  00F944  51D6               	movf	(printf@prec+1)& (0+255),w,b
  5210  00F946  E109               	bnz	u4550
  5211  00F948  0E09               	movlw	9
  5212  00F94A  5DD5               	subwf	printf@prec& (0+255),w,b
  5213  00F94C  A0D8               	btfss	status,0,c
  5214  00F94E  EFAB  F07C         	goto	u4551
  5215  00F952  EFAD  F07C         	goto	u4550
  5216  00F956                     u4551:
  5217  00F956  EFB1  F07C         	goto	l514
  5218  00F95A                     u4550:
  5219  00F95A                     
  5220                           ; BSR set to: 0
  5221                           ;doprnt.c: 1238: c = (sizeof dpowers/sizeof dpowers[0])-2;
  5222  00F95A  0E08               	movlw	8
  5223  00F95C  6FD7               	movwf	printf@c& (0+255),b
  5224  00F95E  EFB3  F07C         	goto	l4452
  5225  00F962                     l514:
  5226                           
  5227                           ; BSR set to: 0
  5228                           ;doprnt.c: 1239: else;doprnt.c: 1240: c = (char)prec;
  5229  00F962  C0D5  F0D7         	movff	printf@prec,printf@c
  5230  00F966                     l4452:
  5231                           
  5232                           ; BSR set to: 0
  5233                           ;doprnt.c: 1241: prec -= (int)c;
  5234  00F966  51D7               	movf	printf@c& (0+255),w,b
  5235  00F968  5FD5               	subwf	printf@prec& (0+255),f,b
  5236  00F96A  0E00               	movlw	0
  5237  00F96C  5BD6               	subwfb	(printf@prec+1)& (0+255),f,b
  5238  00F96E                     
  5239                           ; BSR set to: 0
  5240                           ;doprnt.c: 1245: if(c)
  5241  00F96E  51D7               	movf	printf@c& (0+255),w,b
  5242  00F970  B4D8               	btfsc	status,2,c
  5243  00F972  EFBD  F07C         	goto	u4561
  5244  00F976  EFBF  F07C         	goto	u4560
  5245  00F97A                     u4561:
  5246  00F97A  EFC2  F07C         	goto	l4458
  5247  00F97E                     u4560:
  5248  00F97E                     
  5249                           ; BSR set to: 0
  5250                           ;doprnt.c: 1247: (putch('.') );
  5251  00F97E  0E2E               	movlw	46
  5252  00F980  ECDF  F05E         	call	_putch
  5253  00F984                     l4458:
  5254                           
  5255                           ;doprnt.c: 1253: val = (unsigned long)(fval * scale((signed char)c));
  5256  00F984  0100               	movlb	0	; () banked
  5257  00F986  51D7               	movf	printf@c& (0+255),w,b
  5258  00F988  EC6E  F071         	call	_scale
  5259  00F98C  C057  F0BA         	movff	?_scale,_printf$1580
  5260  00F990  C058  F0BB         	movff	?_scale+1,_printf$1580+1
  5261  00F994  C059  F0BC         	movff	?_scale+2,_printf$1580+2
  5262  00F998  C05A  F0BD         	movff	?_scale+3,_printf$1580+3
  5263  00F99C                     
  5264                           ;doprnt.c: 1253: val = (unsigned long)(fval * scale((signed char)c));
  5265  00F99C  C0D1  F04F         	movff	printf@fval,___flmul@a
  5266  00F9A0  C0D2  F050         	movff	printf@fval+1,___flmul@a+1
  5267  00F9A4  C0D3  F051         	movff	printf@fval+2,___flmul@a+2
  5268  00F9A8  C0D4  F052         	movff	printf@fval+3,___flmul@a+3
  5269  00F9AC  C0BA  F04B         	movff	_printf$1580,___flmul@b
  5270  00F9B0  C0BB  F04C         	movff	_printf$1580+1,___flmul@b+1
  5271  00F9B4  C0BC  F04D         	movff	_printf$1580+2,___flmul@b+2
  5272  00F9B8  C0BD  F04E         	movff	_printf$1580+3,___flmul@b+3
  5273  00F9BC  EC46  F06F         	call	___flmul	;wreg free
  5274  00F9C0  C04B  F00F         	movff	?___flmul,___fltol@f1
  5275  00F9C4  C04C  F010         	movff	?___flmul+1,___fltol@f1+1
  5276  00F9C8  C04D  F011         	movff	?___flmul+2,___fltol@f1+2
  5277  00F9CC  C04E  F012         	movff	?___flmul+3,___fltol@f1+3
  5278  00F9D0  EC05  F064         	call	___fltol	;wreg free
  5279  00F9D4  C00F  F0C9         	movff	?___fltol,printf@val
  5280  00F9D8  C010  F0CA         	movff	?___fltol+1,printf@val+1
  5281  00F9DC  C011  F0CB         	movff	?___fltol+2,printf@val+2
  5282  00F9E0  C012  F0CC         	movff	?___fltol+3,printf@val+3
  5283                           
  5284                           ;doprnt.c: 1254: while(c--) {
  5285  00F9E4  EF6E  F07D         	goto	l4468
  5286  00F9E8                     l4462:
  5287                           
  5288                           ; BSR set to: 0
  5289                           ;doprnt.c: 1255: tmpval.vd = val/dpowers[c];
  5290  00F9E8  C0C9  F001         	movff	printf@val,___lldiv@dividend
  5291  00F9EC  C0CA  F002         	movff	printf@val+1,___lldiv@dividend+1
  5292  00F9F0  C0CB  F003         	movff	printf@val+2,___lldiv@dividend+2
  5293  00F9F4  C0CC  F004         	movff	printf@val+3,___lldiv@dividend+3
  5294  00F9F8  51D7               	movf	printf@c& (0+255),w,b
  5295  00F9FA  0D04               	mullw	4
  5296  00F9FC  0EED               	movlw	low _dpowers
  5297  00F9FE  24F3               	addwf	243,w,c
  5298  00FA00  6EF6               	movwf	tblptrl,c
  5299  00FA02  0EFE               	movlw	high _dpowers
  5300  00FA04  20F4               	addwfc	244,w,c
  5301  00FA06  6EF7               	movwf	tblptrh,c
  5302  00FA08                     	if	1	;There are 3 active tblptr bytes
  5303  00FA08  6AF8               	clrf	tblptru,c
  5304  00FA0A  0E00               	movlw	low (__mediumconst shr (0+16))
  5305  00FA0C  22F8               	addwfc	tblptru,f,c
  5306  00FA0E                     	endif
  5307  00FA0E  0009               	tblrd		*+
  5308  00FA10  006F FFD4  F005    	movff	tablat,___lldiv@divisor
  5309  00FA16  0009               	tblrd		*+
  5310  00FA18  006F FFD4  F006    	movff	tablat,___lldiv@divisor+1
  5311  00FA1E  0009               	tblrd		*+
  5312  00FA20  006F FFD4  F007    	movff	tablat,___lldiv@divisor+2
  5313  00FA26  000A               	tblrd		*-
  5314  00FA28  006F FFD4  F008    	movff	tablat,___lldiv@divisor+3
  5315  00FA2E  ECB6  F061         	call	___lldiv	;wreg free
  5316  00FA32  C001  F0CD         	movff	?___lldiv,printf@tmpval
  5317  00FA36  C002  F0CE         	movff	?___lldiv+1,printf@tmpval+1
  5318  00FA3A  C003  F0CF         	movff	?___lldiv+2,printf@tmpval+2
  5319  00FA3E  C004  F0D0         	movff	?___lldiv+3,printf@tmpval+3
  5320  00FA42                     
  5321                           ;doprnt.c: 1256: tmpval.vd %= 10;
  5322  00FA42  C0CD  F00E         	movff	printf@tmpval,___llmod@dividend
  5323  00FA46  C0CE  F00F         	movff	printf@tmpval+1,___llmod@dividend+1
  5324  00FA4A  C0CF  F010         	movff	printf@tmpval+2,___llmod@dividend+2
  5325  00FA4E  C0D0  F011         	movff	printf@tmpval+3,___llmod@dividend+3
  5326  00FA52  0E0A               	movlw	10
  5327  00FA54  6E12               	movwf	___llmod@divisor^0,c
  5328  00FA56  0E00               	movlw	0
  5329  00FA58  6E13               	movwf	(___llmod@divisor+1)^0,c
  5330  00FA5A  0E00               	movlw	0
  5331  00FA5C  6E14               	movwf	(___llmod@divisor+2)^0,c
  5332  00FA5E  0E00               	movlw	0
  5333  00FA60  6E15               	movwf	(___llmod@divisor+3)^0,c
  5334  00FA62  EC22  F061         	call	___llmod	;wreg free
  5335  00FA66  C00E  F0CD         	movff	?___llmod,printf@tmpval
  5336  00FA6A  C00F  F0CE         	movff	?___llmod+1,printf@tmpval+1
  5337  00FA6E  C010  F0CF         	movff	?___llmod+2,printf@tmpval+2
  5338  00FA72  C011  F0D0         	movff	?___llmod+3,printf@tmpval+3
  5339  00FA76                     
  5340                           ;doprnt.c: 1257: (putch('0' + tmpval.vd) );
  5341  00FA76  0100               	movlb	0	; () banked
  5342  00FA78  51CD               	movf	printf@tmpval& (0+255),w,b
  5343  00FA7A  0F30               	addlw	48
  5344  00FA7C  ECDF  F05E         	call	_putch
  5345                           
  5346                           ;doprnt.c: 1258: val %= dpowers[c];
  5347  00FA80  C0C9  F00E         	movff	printf@val,___llmod@dividend
  5348  00FA84  C0CA  F00F         	movff	printf@val+1,___llmod@dividend+1
  5349  00FA88  C0CB  F010         	movff	printf@val+2,___llmod@dividend+2
  5350  00FA8C  C0CC  F011         	movff	printf@val+3,___llmod@dividend+3
  5351  00FA90  0100               	movlb	0	; () banked
  5352  00FA92  51D7               	movf	printf@c& (0+255),w,b
  5353  00FA94  0D04               	mullw	4
  5354  00FA96  0EED               	movlw	low _dpowers
  5355  00FA98  24F3               	addwf	243,w,c
  5356  00FA9A  6EF6               	movwf	tblptrl,c
  5357  00FA9C  0EFE               	movlw	high _dpowers
  5358  00FA9E  20F4               	addwfc	244,w,c
  5359  00FAA0  6EF7               	movwf	tblptrh,c
  5360  00FAA2                     	if	1	;There are 3 active tblptr bytes
  5361  00FAA2  6AF8               	clrf	tblptru,c
  5362  00FAA4  0E00               	movlw	low (__mediumconst shr (0+16))
  5363  00FAA6  22F8               	addwfc	tblptru,f,c
  5364  00FAA8                     	endif
  5365  00FAA8  0009               	tblrd		*+
  5366  00FAAA  006F FFD4  F012    	movff	tablat,___llmod@divisor
  5367  00FAB0  0009               	tblrd		*+
  5368  00FAB2  006F FFD4  F013    	movff	tablat,___llmod@divisor+1
  5369  00FAB8  0009               	tblrd		*+
  5370  00FABA  006F FFD4  F014    	movff	tablat,___llmod@divisor+2
  5371  00FAC0  000A               	tblrd		*-
  5372  00FAC2  006F FFD4  F015    	movff	tablat,___llmod@divisor+3
  5373  00FAC8  EC22  F061         	call	___llmod	;wreg free
  5374  00FACC  C00E  F0C9         	movff	?___llmod,printf@val
  5375  00FAD0  C00F  F0CA         	movff	?___llmod+1,printf@val+1
  5376  00FAD4  C010  F0CB         	movff	?___llmod+2,printf@val+2
  5377  00FAD8  C011  F0CC         	movff	?___llmod+3,printf@val+3
  5378  00FADC                     l4468:
  5379  00FADC  0100               	movlb	0	; () banked
  5380  00FADE  07D7               	decf	printf@c& (0+255),f,b
  5381  00FAE0  29D7               	incf	printf@c& (0+255),w,b
  5382  00FAE2  A4D8               	btfss	status,2,c
  5383  00FAE4  EF76  F07D         	goto	u4571
  5384  00FAE8  EF78  F07D         	goto	u4570
  5385  00FAEC                     u4571:
  5386  00FAEC  EFF4  F07C         	goto	l4462
  5387  00FAF0                     u4570:
  5388  00FAF0  EF81  F07D         	goto	l4474
  5389  00FAF4                     l4470:
  5390                           
  5391                           ; BSR set to: 0
  5392                           ;doprnt.c: 1262: (putch('0') );
  5393  00FAF4  0E30               	movlw	48
  5394  00FAF6  ECDF  F05E         	call	_putch
  5395  00FAFA                     
  5396                           ;doprnt.c: 1263: prec--;
  5397  00FAFA  0100               	movlb	0	; () banked
  5398  00FAFC  07D5               	decf	printf@prec& (0+255),f,b
  5399  00FAFE  A0D8               	btfss	status,0,c
  5400  00FB00  07D6               	decf	(printf@prec+1)& (0+255),f,b
  5401  00FB02                     l4474:
  5402                           
  5403                           ; BSR set to: 0
  5404  00FB02  51D5               	movf	printf@prec& (0+255),w,b
  5405  00FB04  11D6               	iorwf	(printf@prec+1)& (0+255),w,b
  5406  00FB06  A4D8               	btfss	status,2,c
  5407  00FB08  EF88  F07D         	goto	u4581
  5408  00FB0C  EF8A  F07D         	goto	u4580
  5409  00FB10                     u4581:
  5410  00FB10  EF7A  F07D         	goto	l4470
  5411  00FB14                     u4580:
  5412  00FB14  EF07  F07F         	goto	l4544
  5413  00FB18                     l4476:
  5414                           
  5415                           ; BSR set to: 0
  5416                           ;doprnt.c: 1272: };doprnt.c: 1299: {;doprnt.c: 1312: val = (*(unsigned *)__va_arg((*(uns
      +                          igned **)ap), (unsigned)0));
  5417  00FB18  0060  F30F  FFD9   	movff	printf@ap,fsr2l
  5418  00FB1E  0060  F313  FFDA   	movff	printf@ap+1,fsr2h
  5419  00FB24  006F FF78  F0B6    	movff	postinc2,??_printf
  5420  00FB2A  006F FF74  F0B7    	movff	postdec2,??_printf+1
  5421  00FB30  C0B6  F0C9         	movff	??_printf,printf@val
  5422  00FB34  C0B7  F0CA         	movff	??_printf+1,printf@val+1
  5423  00FB38  6BCB               	clrf	(printf@val+2)& (0+255),b
  5424  00FB3A  6BCC               	clrf	(printf@val+3)& (0+255),b
  5425  00FB3C                     
  5426                           ; BSR set to: 0
  5427  00FB3C  0E02               	movlw	2
  5428  00FB3E  27C3               	addwf	printf@ap& (0+255),f,b
  5429  00FB40  0E00               	movlw	0
  5430  00FB42  23C4               	addwfc	(printf@ap+1)& (0+255),f,b
  5431  00FB44                     
  5432                           ; BSR set to: 0
  5433                           ;doprnt.c: 1313: };doprnt.c: 1316: if(prec == 0 && val == 0)
  5434  00FB44  51D5               	movf	printf@prec& (0+255),w,b
  5435  00FB46  11D6               	iorwf	(printf@prec+1)& (0+255),w,b
  5436  00FB48  A4D8               	btfss	status,2,c
  5437  00FB4A  EFA9  F07D         	goto	u4591
  5438  00FB4E  EFAB  F07D         	goto	u4590
  5439  00FB52                     u4591:
  5440  00FB52  EF1A  F07E         	goto	l4516
  5441  00FB56                     u4590:
  5442  00FB56                     
  5443                           ; BSR set to: 0
  5444  00FB56  51C9               	movf	printf@val& (0+255),w,b
  5445  00FB58  11CA               	iorwf	(printf@val+1)& (0+255),w,b
  5446  00FB5A  11CB               	iorwf	(printf@val+2)& (0+255),w,b
  5447  00FB5C  11CC               	iorwf	(printf@val+3)& (0+255),w,b
  5448  00FB5E  A4D8               	btfss	status,2,c
  5449  00FB60  EFB4  F07D         	goto	u4601
  5450  00FB64  EFB6  F07D         	goto	u4600
  5451  00FB68                     u4601:
  5452  00FB68  EF1A  F07E         	goto	l4516
  5453  00FB6C                     u4600:
  5454  00FB6C                     
  5455                           ; BSR set to: 0
  5456                           ;doprnt.c: 1317: prec++;
  5457  00FB6C  4BD5               	infsnz	printf@prec& (0+255),f,b
  5458  00FB6E  2BD6               	incf	(printf@prec+1)& (0+255),f,b
  5459  00FB70  EF1A  F07E         	goto	l4516
  5460  00FB74                     l4486:
  5461                           
  5462                           ; BSR set to: 0
  5463                           ;doprnt.c: 1331: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  5464  00FB74  0E01               	movlw	1
  5465  00FB76  6FD7               	movwf	printf@c& (0+255),b
  5466  00FB78                     l4488:
  5467                           
  5468                           ; BSR set to: 0
  5469  00FB78  0E0A               	movlw	10
  5470  00FB7A  19D7               	xorwf	printf@c& (0+255),w,b
  5471  00FB7C  A4D8               	btfss	status,2,c
  5472  00FB7E  EFC3  F07D         	goto	u4611
  5473  00FB82  EFC5  F07D         	goto	u4610
  5474  00FB86                     u4611:
  5475  00FB86  EFC7  F07D         	goto	l4492
  5476  00FB8A                     u4610:
  5477  00FB8A  EF26  F07E         	goto	l4518
  5478  00FB8E                     l4492:
  5479                           
  5480                           ; BSR set to: 0
  5481                           ;doprnt.c: 1332: if(val < dpowers[c])
  5482  00FB8E  51D7               	movf	printf@c& (0+255),w,b
  5483  00FB90  0D04               	mullw	4
  5484  00FB92  0EED               	movlw	low _dpowers
  5485  00FB94  24F3               	addwf	243,w,c
  5486  00FB96  6EF6               	movwf	tblptrl,c
  5487  00FB98  0EFE               	movlw	high _dpowers
  5488  00FB9A  20F4               	addwfc	244,w,c
  5489  00FB9C  6EF7               	movwf	tblptrh,c
  5490  00FB9E                     	if	1	;There are 3 active tblptr bytes
  5491  00FB9E  6AF8               	clrf	tblptru,c
  5492  00FBA0  0E00               	movlw	low (__mediumconst shr (0+16))
  5493  00FBA2  22F8               	addwfc	tblptru,f,c
  5494  00FBA4                     	endif
  5495  00FBA4  0009               	tblrd		*+
  5496  00FBA6  50F5               	movf	tablat,w,c
  5497  00FBA8  5DC9               	subwf	printf@val& (0+255),w,b
  5498  00FBAA  0009               	tblrd		*+
  5499  00FBAC  50F5               	movf	tablat,w,c
  5500  00FBAE  59CA               	subwfb	(printf@val+1)& (0+255),w,b
  5501  00FBB0  0009               	tblrd		*+
  5502  00FBB2  50F5               	movf	tablat,w,c
  5503  00FBB4  59CB               	subwfb	(printf@val+2)& (0+255),w,b
  5504  00FBB6  0009               	tblrd		*+
  5505  00FBB8  50F5               	movf	tablat,w,c
  5506  00FBBA  59CC               	subwfb	(printf@val+3)& (0+255),w,b
  5507  00FBBC  B0D8               	btfsc	status,0,c
  5508  00FBBE  EFE3  F07D         	goto	u4621
  5509  00FBC2  EFE5  F07D         	goto	u4620
  5510  00FBC6                     u4621:
  5511  00FBC6  EFE7  F07D         	goto	l4496
  5512  00FBCA                     u4620:
  5513  00FBCA  EF26  F07E         	goto	l4518
  5514  00FBCE                     l4496:
  5515                           
  5516                           ; BSR set to: 0
  5517  00FBCE  2BD7               	incf	printf@c& (0+255),f,b
  5518  00FBD0  EFBC  F07D         	goto	l4488
  5519  00FBD4                     l4500:
  5520                           
  5521                           ; BSR set to: 0
  5522                           ;doprnt.c: 1342: for(c = 1 ; c != sizeof hexpowers/sizeof hexpowers[0] ; c++)
  5523  00FBD4  0E01               	movlw	1
  5524  00FBD6  6FD7               	movwf	printf@c& (0+255),b
  5525  00FBD8                     l4502:
  5526                           
  5527                           ; BSR set to: 0
  5528  00FBD8  0E08               	movlw	8
  5529  00FBDA  19D7               	xorwf	printf@c& (0+255),w,b
  5530  00FBDC  A4D8               	btfss	status,2,c
  5531  00FBDE  EFF3  F07D         	goto	u4631
  5532  00FBE2  EFF5  F07D         	goto	u4630
  5533  00FBE6                     u4631:
  5534  00FBE6  EFF7  F07D         	goto	l4506
  5535  00FBEA                     u4630:
  5536  00FBEA  EF26  F07E         	goto	l4518
  5537  00FBEE                     l4506:
  5538                           
  5539                           ; BSR set to: 0
  5540                           ;doprnt.c: 1343: if(val < hexpowers[c])
  5541  00FBEE  51D7               	movf	printf@c& (0+255),w,b
  5542  00FBF0  0D04               	mullw	4
  5543  00FBF2  0EA5               	movlw	low _hexpowers
  5544  00FBF4  24F3               	addwf	243,w,c
  5545  00FBF6  6EF6               	movwf	tblptrl,c
  5546  00FBF8  0EFE               	movlw	high _hexpowers
  5547  00FBFA  20F4               	addwfc	244,w,c
  5548  00FBFC  6EF7               	movwf	tblptrh,c
  5549  00FBFE                     	if	1	;There are 3 active tblptr bytes
  5550  00FBFE  6AF8               	clrf	tblptru,c
  5551  00FC00  0E00               	movlw	low (__mediumconst shr (0+16))
  5552  00FC02  22F8               	addwfc	tblptru,f,c
  5553  00FC04                     	endif
  5554  00FC04  0009               	tblrd		*+
  5555  00FC06  50F5               	movf	tablat,w,c
  5556  00FC08  5DC9               	subwf	printf@val& (0+255),w,b
  5557  00FC0A  0009               	tblrd		*+
  5558  00FC0C  50F5               	movf	tablat,w,c
  5559  00FC0E  59CA               	subwfb	(printf@val+1)& (0+255),w,b
  5560  00FC10  0009               	tblrd		*+
  5561  00FC12  50F5               	movf	tablat,w,c
  5562  00FC14  59CB               	subwfb	(printf@val+2)& (0+255),w,b
  5563  00FC16  0009               	tblrd		*+
  5564  00FC18  50F5               	movf	tablat,w,c
  5565  00FC1A  59CC               	subwfb	(printf@val+3)& (0+255),w,b
  5566  00FC1C  B0D8               	btfsc	status,0,c
  5567  00FC1E  EF13  F07E         	goto	u4641
  5568  00FC22  EF15  F07E         	goto	u4640
  5569  00FC26                     u4641:
  5570  00FC26  EF17  F07E         	goto	l4510
  5571  00FC2A                     u4640:
  5572  00FC2A  EF26  F07E         	goto	l4518
  5573  00FC2E                     l4510:
  5574                           
  5575                           ; BSR set to: 0
  5576  00FC2E  2BD7               	incf	printf@c& (0+255),f,b
  5577  00FC30  EFEC  F07D         	goto	l4502
  5578  00FC34                     l4516:
  5579                           
  5580                           ; BSR set to: 0
  5581  00FC34  51C5               	movf	printf@flag& (0+255),w,b
  5582  00FC36  0BC0               	andlw	192
  5583                           
  5584                           ; Switch size 1, requested type "simple"
  5585                           ; Number of cases is 2, Range of values is 128 to 192
  5586                           ; switch strategies available:
  5587                           ; Name         Instructions Cycles
  5588                           ; simple_byte            7     4 (average)
  5589                           ;	Chosen strategy is simple_byte
  5590  00FC38  0A80               	xorlw	128	; case 128
  5591  00FC3A  B4D8               	btfsc	status,2,c
  5592  00FC3C  EFEA  F07D         	goto	l4500
  5593  00FC40  0A40               	xorlw	64	; case 192
  5594  00FC42  B4D8               	btfsc	status,2,c
  5595  00FC44  EFBA  F07D         	goto	l4486
  5596  00FC48  EF26  F07E         	goto	l4518
  5597  00FC4C                     l4518:
  5598                           
  5599                           ; BSR set to: 0
  5600                           ;doprnt.c: 1365: if(c < prec)
  5601  00FC4C  51D7               	movf	printf@c& (0+255),w,b
  5602  00FC4E  6FB6               	movwf	??_printf& (0+255),b
  5603  00FC50  6BB7               	clrf	(??_printf+1)& (0+255),b
  5604  00FC52  51D5               	movf	printf@prec& (0+255),w,b
  5605  00FC54  5DB6               	subwf	??_printf& (0+255),w,b
  5606  00FC56  51B7               	movf	(??_printf+1)& (0+255),w,b
  5607  00FC58  0A80               	xorlw	128
  5608  00FC5A  6FB8               	movwf	(??_printf+2)& (0+255),b
  5609  00FC5C  51D6               	movf	(printf@prec+1)& (0+255),w,b
  5610  00FC5E  0A80               	xorlw	128
  5611  00FC60  59B8               	subwfb	(??_printf+2)& (0+255),w,b
  5612  00FC62  B0D8               	btfsc	status,0,c
  5613  00FC64  EF36  F07E         	goto	u4651
  5614  00FC68  EF38  F07E         	goto	u4650
  5615  00FC6C                     u4651:
  5616  00FC6C  EF3C  F07E         	goto	l4522
  5617  00FC70                     u4650:
  5618  00FC70                     
  5619                           ; BSR set to: 0
  5620                           ;doprnt.c: 1366: c = (char)prec;
  5621  00FC70  C0D5  F0D7         	movff	printf@prec,printf@c
  5622  00FC74  EF51  F07E         	goto	l4526
  5623  00FC78                     l4522:
  5624                           
  5625                           ; BSR set to: 0
  5626                           ;doprnt.c: 1367: else if(prec < c)
  5627  00FC78  51D7               	movf	printf@c& (0+255),w,b
  5628  00FC7A  6FB6               	movwf	??_printf& (0+255),b
  5629  00FC7C  6BB7               	clrf	(??_printf+1)& (0+255),b
  5630  00FC7E  51B6               	movf	??_printf& (0+255),w,b
  5631  00FC80  5DD5               	subwf	printf@prec& (0+255),w,b
  5632  00FC82  51D6               	movf	(printf@prec+1)& (0+255),w,b
  5633  00FC84  0A80               	xorlw	128
  5634  00FC86  6FB8               	movwf	(??_printf+2)& (0+255),b
  5635  00FC88  51B7               	movf	(??_printf+1)& (0+255),w,b
  5636  00FC8A  0A80               	xorlw	128
  5637  00FC8C  59B8               	subwfb	(??_printf+2)& (0+255),w,b
  5638  00FC8E  B0D8               	btfsc	status,0,c
  5639  00FC90  EF4C  F07E         	goto	u4661
  5640  00FC94  EF4E  F07E         	goto	u4660
  5641  00FC98                     u4661:
  5642  00FC98  EF51  F07E         	goto	l4526
  5643  00FC9C                     u4660:
  5644  00FC9C                     
  5645                           ; BSR set to: 0
  5646                           ;doprnt.c: 1368: prec = c;
  5647  00FC9C  C0D7  F0D5         	movff	printf@c,printf@prec
  5648  00FCA0  6BD6               	clrf	(printf@prec+1)& (0+255),b
  5649  00FCA2                     l4526:
  5650                           
  5651                           ; BSR set to: 0
  5652                           ;doprnt.c: 1448: {;doprnt.c: 1464: if(flag & 0x03)
  5653  00FCA2  0E03               	movlw	3
  5654  00FCA4  15C5               	andwf	printf@flag& (0+255),w,b
  5655  00FCA6  6FB6               	movwf	??_printf& (0+255),b
  5656  00FCA8  0E00               	movlw	0
  5657  00FCAA  15C6               	andwf	(printf@flag+1)& (0+255),w,b
  5658  00FCAC  6FB7               	movwf	(??_printf+1)& (0+255),b
  5659  00FCAE  51B6               	movf	??_printf& (0+255),w,b
  5660  00FCB0  11B7               	iorwf	(??_printf+1)& (0+255),w,b
  5661  00FCB2  B4D8               	btfsc	status,2,c
  5662  00FCB4  EF5E  F07E         	goto	u4671
  5663  00FCB8  EF60  F07E         	goto	u4670
  5664  00FCBC                     u4671:
  5665  00FCBC  EFF9  F07E         	goto	l4542
  5666  00FCC0                     u4670:
  5667  00FCC0                     
  5668                           ; BSR set to: 0
  5669                           ;doprnt.c: 1465: (putch('-') );
  5670  00FCC0  0E2D               	movlw	45
  5671  00FCC2  ECDF  F05E         	call	_putch
  5672  00FCC6  EFF9  F07E         	goto	l4542
  5673  00FCCA                     l4530:
  5674                           
  5675                           ; BSR set to: 0
  5676                           ;doprnt.c: 1515: c = (val / dpowers[(unsigned int)prec]) % 10 + '0';
  5677  00FCCA  C0D5  F0B6         	movff	printf@prec,??_printf
  5678  00FCCE  C0D6  F0B7         	movff	printf@prec+1,??_printf+1
  5679  00FCD2  90D8               	bcf	status,0,c
  5680  00FCD4  37B6               	rlcf	??_printf& (0+255),f,b
  5681  00FCD6  37B7               	rlcf	(??_printf+1)& (0+255),f,b
  5682  00FCD8  90D8               	bcf	status,0,c
  5683  00FCDA  37B6               	rlcf	??_printf& (0+255),f,b
  5684  00FCDC  37B7               	rlcf	(??_printf+1)& (0+255),f,b
  5685  00FCDE  0EED               	movlw	low _dpowers
  5686  00FCE0  25B6               	addwf	??_printf& (0+255),w,b
  5687  00FCE2  6EF6               	movwf	tblptrl,c
  5688  00FCE4  0EFE               	movlw	high _dpowers
  5689  00FCE6  21B7               	addwfc	(??_printf+1)& (0+255),w,b
  5690  00FCE8  6EF7               	movwf	tblptrh,c
  5691  00FCEA                     	if	1	;There are 3 active tblptr bytes
  5692  00FCEA  6AF8               	clrf	tblptru,c
  5693  00FCEC  0E00               	movlw	low (__mediumconst shr (0+16))
  5694  00FCEE  22F8               	addwfc	tblptru,f,c
  5695  00FCF0                     	endif
  5696  00FCF0  0009               	tblrd		*+
  5697  00FCF2  006F FFD4  F005    	movff	tablat,___lldiv@divisor
  5698  00FCF8  0009               	tblrd		*+
  5699  00FCFA  006F FFD4  F006    	movff	tablat,___lldiv@divisor+1
  5700  00FD00  0009               	tblrd		*+
  5701  00FD02  006F FFD4  F007    	movff	tablat,___lldiv@divisor+2
  5702  00FD08  000A               	tblrd		*-
  5703  00FD0A  006F FFD4  F008    	movff	tablat,___lldiv@divisor+3
  5704  00FD10  C0C9  F001         	movff	printf@val,___lldiv@dividend
  5705  00FD14  C0CA  F002         	movff	printf@val+1,___lldiv@dividend+1
  5706  00FD18  C0CB  F003         	movff	printf@val+2,___lldiv@dividend+2
  5707  00FD1C  C0CC  F004         	movff	printf@val+3,___lldiv@dividend+3
  5708  00FD20  ECB6  F061         	call	___lldiv	;wreg free
  5709  00FD24  C001  F00E         	movff	?___lldiv,___llmod@dividend
  5710  00FD28  C002  F00F         	movff	?___lldiv+1,___llmod@dividend+1
  5711  00FD2C  C003  F010         	movff	?___lldiv+2,___llmod@dividend+2
  5712  00FD30  C004  F011         	movff	?___lldiv+3,___llmod@dividend+3
  5713  00FD34  0E0A               	movlw	10
  5714  00FD36  6E12               	movwf	___llmod@divisor^0,c
  5715  00FD38  0E00               	movlw	0
  5716  00FD3A  6E13               	movwf	(___llmod@divisor+1)^0,c
  5717  00FD3C  0E00               	movlw	0
  5718  00FD3E  6E14               	movwf	(___llmod@divisor+2)^0,c
  5719  00FD40  0E00               	movlw	0
  5720  00FD42  6E15               	movwf	(___llmod@divisor+3)^0,c
  5721  00FD44  EC22  F061         	call	___llmod	;wreg free
  5722  00FD48  500E               	movf	?___llmod^0,w,c
  5723  00FD4A  0F30               	addlw	48
  5724  00FD4C  0100               	movlb	0	; () banked
  5725  00FD4E  6FD7               	movwf	printf@c& (0+255),b
  5726                           
  5727                           ;doprnt.c: 1517: break;
  5728  00FD50  EFF6  F07E         	goto	l4540
  5729  00FD54                     l4532:
  5730                           
  5731                           ; BSR set to: 0
  5732                           ;doprnt.c: 1525: {;doprnt.c: 1526: unsigned char idx = (val / hexpowers[(unsigned int)pr
      +                          ec]) & 0xF;
  5733  00FD54  C0C9  F001         	movff	printf@val,___lldiv@dividend
  5734  00FD58  C0CA  F002         	movff	printf@val+1,___lldiv@dividend+1
  5735  00FD5C  C0CB  F003         	movff	printf@val+2,___lldiv@dividend+2
  5736  00FD60  C0CC  F004         	movff	printf@val+3,___lldiv@dividend+3
  5737  00FD64  C0D5  F0B6         	movff	printf@prec,??_printf
  5738  00FD68  C0D6  F0B7         	movff	printf@prec+1,??_printf+1
  5739  00FD6C  90D8               	bcf	status,0,c
  5740  00FD6E  37B6               	rlcf	??_printf& (0+255),f,b
  5741  00FD70  37B7               	rlcf	(??_printf+1)& (0+255),f,b
  5742  00FD72  90D8               	bcf	status,0,c
  5743  00FD74  37B6               	rlcf	??_printf& (0+255),f,b
  5744  00FD76  37B7               	rlcf	(??_printf+1)& (0+255),f,b
  5745  00FD78  0EA5               	movlw	low _hexpowers
  5746  00FD7A  25B6               	addwf	??_printf& (0+255),w,b
  5747  00FD7C  6EF6               	movwf	tblptrl,c
  5748  00FD7E  0EFE               	movlw	high _hexpowers
  5749  00FD80  21B7               	addwfc	(??_printf+1)& (0+255),w,b
  5750  00FD82  6EF7               	movwf	tblptrh,c
  5751  00FD84                     	if	1	;There are 3 active tblptr bytes
  5752  00FD84  6AF8               	clrf	tblptru,c
  5753  00FD86  0E00               	movlw	low (__mediumconst shr (0+16))
  5754  00FD88  22F8               	addwfc	tblptru,f,c
  5755  00FD8A                     	endif
  5756  00FD8A  0009               	tblrd		*+
  5757  00FD8C  006F FFD4  F005    	movff	tablat,___lldiv@divisor
  5758  00FD92  0009               	tblrd		*+
  5759  00FD94  006F FFD4  F006    	movff	tablat,___lldiv@divisor+1
  5760  00FD9A  0009               	tblrd		*+
  5761  00FD9C  006F FFD4  F007    	movff	tablat,___lldiv@divisor+2
  5762  00FDA2  000A               	tblrd		*-
  5763  00FDA4  006F FFD4  F008    	movff	tablat,___lldiv@divisor+3
  5764  00FDAA  ECB6  F061         	call	___lldiv	;wreg free
  5765  00FDAE  5001               	movf	?___lldiv^0,w,c
  5766  00FDB0  0B0F               	andlw	15
  5767  00FDB2  0100               	movlb	0	; () banked
  5768  00FDB4  6FC0               	movwf	printf@idx& (0+255),b
  5769  00FDB6                     
  5770                           ; BSR set to: 0
  5771                           ;doprnt.c: 1532: c = "0123456789abcdef"[idx];
  5772  00FDB6  0EE1               	movlw	low STR_8
  5773  00FDB8  25C0               	addwf	printf@idx& (0+255),w,b
  5774  00FDBA  6EF6               	movwf	tblptrl,c
  5775  00FDBC  6AF7               	clrf	tblptrh,c
  5776  00FDBE  0EFF               	movlw	high STR_8
  5777  00FDC0  22F7               	addwfc	tblptrh,f,c
  5778  00FDC2                     	if	1	;There are 3 active tblptr bytes
  5779  00FDC2  6AF8               	clrf	tblptru,c
  5780  00FDC4  0E00               	movlw	low (__mediumconst shr (0+16))
  5781  00FDC6  22F8               	addwfc	tblptru,f,c
  5782  00FDC8                     	endif
  5783  00FDC8  0008               	tblrd		*
  5784  00FDCA  006F FFD4  F0D7    	movff	tablat,printf@c
  5785                           
  5786                           ;doprnt.c: 1534: };doprnt.c: 1536: break;
  5787  00FDD0  EFF6  F07E         	goto	l4540
  5788  00FDD4                     l4538:
  5789                           
  5790                           ; BSR set to: 0
  5791  00FDD4  51C5               	movf	printf@flag& (0+255),w,b
  5792  00FDD6  0BC0               	andlw	192
  5793                           
  5794                           ; Switch size 1, requested type "simple"
  5795                           ; Number of cases is 2, Range of values is 128 to 192
  5796                           ; switch strategies available:
  5797                           ; Name         Instructions Cycles
  5798                           ; simple_byte            7     4 (average)
  5799                           ;	Chosen strategy is simple_byte
  5800  00FDD8  0A80               	xorlw	128	; case 128
  5801  00FDDA  B4D8               	btfsc	status,2,c
  5802  00FDDC  EFAA  F07E         	goto	l4532
  5803  00FDE0  0A40               	xorlw	64	; case 192
  5804  00FDE2  B4D8               	btfsc	status,2,c
  5805  00FDE4  EF65  F07E         	goto	l4530
  5806  00FDE8  EFF6  F07E         	goto	l4540
  5807  00FDEC                     l4540:
  5808                           
  5809                           ; BSR set to: 0
  5810                           ;doprnt.c: 1550: (putch(c) );
  5811  00FDEC  51D7               	movf	printf@c& (0+255),w,b
  5812  00FDEE  ECDF  F05E         	call	_putch
  5813  00FDF2                     l4542:
  5814  00FDF2  0100               	movlb	0	; () banked
  5815  00FDF4  07D5               	decf	printf@prec& (0+255),f,b
  5816  00FDF6  A0D8               	btfss	status,0,c
  5817  00FDF8  07D6               	decf	(printf@prec+1)& (0+255),f,b
  5818  00FDFA  29D5               	incf	printf@prec& (0+255),w,b
  5819  00FDFC  E106               	bnz	u4681
  5820  00FDFE  29D6               	incf	(printf@prec+1)& (0+255),w,b
  5821  00FE00  A4D8               	btfss	status,2,c
  5822  00FE02  EF05  F07F         	goto	u4681
  5823  00FE06  EF07  F07F         	goto	u4680
  5824  00FE0A                     u4681:
  5825  00FE0A  EFEA  F07E         	goto	l4538
  5826  00FE0E                     u4680:
  5827  00FE0E                     l4544:
  5828  00FE0E  0060  F29B  FFF6   	movff	printf@f,tblptrl
  5829  00FE14  0060  F29F  FFF7   	movff	printf@f+1,tblptrh
  5830  00FE1A  0100               	movlb	0	; () banked
  5831  00FE1C  4BA6               	infsnz	printf@f& (0+255),f,b
  5832  00FE1E  2BA7               	incf	(printf@f+1)& (0+255),f,b
  5833  00FE20                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5834  00FE20  6AF8               	clrf	tblptru,c
  5835  00FE22                     	endif
  5836  00FE22                     	if	0	;tblptru may be non-zero
  5837  00FE22                     	endif
  5838  00FE22  0008               	tblrd		*
  5839  00FE24  006F FFD4  F0D7    	movff	tablat,printf@c
  5840  00FE2A  51D7               	movf	printf@c& (0+255),w,b
  5841  00FE2C  A4D8               	btfss	status,2,c
  5842  00FE2E  EF1B  F07F         	goto	u4691
  5843  00FE32  EF1D  F07F         	goto	u4690
  5844  00FE36                     u4691:
  5845  00FE36  EF05  F079         	goto	l4288
  5846  00FE3A                     u4690:
  5847  00FE3A                     l546:
  5848                           
  5849                           ; BSR set to: 0
  5850  00FE3A  0012               	return		;funcret
  5851  00FE3C                     __end_of_printf:
  5852                           	callstack 0
  5853                           
  5854 ;; *************** function _scale *****************
  5855 ;; Defined at:
  5856 ;;		line 433 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c"
  5857 ;; Parameters:    Size  Location     Type
  5858 ;;  scl             1    wreg     char 
  5859 ;; Auto vars:     Size  Location     Type
  5860 ;;  scl             1   94[COMRAM] char 
  5861 ;; Return value:  Size  Location     Type
  5862 ;;                  4   86[COMRAM] char 
  5863 ;; Registers used:
  5864 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5865 ;; Tracked objects:
  5866 ;;		On entry : 0/0
  5867 ;;		On exit  : 0/0
  5868 ;;		Unchanged: 0/0
  5869 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5870 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5871 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5872 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5873 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5874 ;;Total ram usage:        9 bytes
  5875 ;; Hardware stack levels used:    1
  5876 ;; Hardware stack levels required when called:    1
  5877 ;; This function calls:
  5878 ;;		___awdiv
  5879 ;;		___awmod
  5880 ;;		___flmul
  5881 ;; This function is called by:
  5882 ;;		_printf
  5883 ;; This function uses a non-reentrant model
  5884 ;;
  5885                           
  5886                           	psect	text12
  5887  00E2DC                     __ptext12:
  5888                           	callstack 0
  5889  00E2DC                     _scale:
  5890                           	callstack 28
  5891                           
  5892                           ; BSR set to: 0
  5893                           ;incstack = 0
  5894                           ;scale@scl stored from wreg
  5895  00E2DC  6E5F               	movwf	scale@scl^0,c
  5896  00E2DE                     
  5897                           ;doprnt.c: 436: if(scl < 0) {
  5898  00E2DE  BE5F               	btfsc	scale@scl^0,7,c
  5899  00E2E0  EF76  F071         	goto	u3670
  5900  00E2E4  EF74  F071         	goto	u3671
  5901  00E2E8                     u3671:
  5902  00E2E8  EFA0  F072         	goto	l3828
  5903  00E2EC                     u3670:
  5904  00E2EC                     
  5905                           ;doprnt.c: 437: scl = -scl;
  5906  00E2EC  6C5F               	negf	scale@scl^0,c
  5907                           
  5908                           ;doprnt.c: 438: if(scl>=110)
  5909  00E2EE  505F               	movf	scale@scl^0,w,c
  5910  00E2F0  0A80               	xorlw	128
  5911  00E2F2  0F12               	addlw	-238
  5912  00E2F4  A0D8               	btfss	status,0,c
  5913  00E2F6  EF7F  F071         	goto	u3681
  5914  00E2FA  EF81  F071         	goto	u3680
  5915  00E2FE                     u3681:
  5916  00E2FE  EF1F  F072         	goto	l3818
  5917  00E302                     u3680:
  5918  00E302                     
  5919                           ;doprnt.c: 439: return _npowers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char
      +                          )((scl%100)/10+9)] * _npowers_[(unsigned char)(scl%10)];
  5920  00E302  0E00               	movlw	0
  5921  00E304  6E0A               	movwf	(___awdiv@divisor+1)^0,c
  5922  00E306  0E0A               	movlw	10
  5923  00E308  6E09               	movwf	___awdiv@divisor^0,c
  5924  00E30A  0E00               	movlw	0
  5925  00E30C  6E04               	movwf	(___awmod@divisor+1)^0,c
  5926  00E30E  0E64               	movlw	100
  5927  00E310  6E03               	movwf	___awmod@divisor^0,c
  5928  00E312  505F               	movf	scale@scl^0,w,c
  5929  00E314  6E01               	movwf	___awmod@dividend^0,c
  5930  00E316  6A02               	clrf	(___awmod@dividend+1)^0,c
  5931  00E318  BE01               	btfsc	___awmod@dividend^0,7,c
  5932  00E31A  0602               	decf	(___awmod@dividend+1)^0,f,c
  5933  00E31C  EC5D  F062         	call	___awmod	;wreg free
  5934  00E320  C001  F007         	movff	?___awmod,___awdiv@dividend
  5935  00E324  C002  F008         	movff	?___awmod+1,___awdiv@dividend+1
  5936  00E328  ECB5  F062         	call	___awdiv	;wreg free
  5937  00E32C  0E09               	movlw	9
  5938  00E32E  2607               	addwf	?___awdiv^0,f,c
  5939  00E330  5007               	movf	?___awdiv^0,w,c
  5940  00E332  0D04               	mullw	4
  5941  00E334  0E71               	movlw	low __npowers_
  5942  00E336  24F3               	addwf	243,w,c
  5943  00E338  6EF6               	movwf	tblptrl,c
  5944  00E33A  0EFE               	movlw	high __npowers_
  5945  00E33C  20F4               	addwfc	244,w,c
  5946  00E33E  6EF7               	movwf	tblptrh,c
  5947  00E340                     	if	1	;There are 3 active tblptr bytes
  5948  00E340  6AF8               	clrf	tblptru,c
  5949  00E342  0E00               	movlw	low (__mediumconst shr (0+16))
  5950  00E344  22F8               	addwfc	tblptru,f,c
  5951  00E346                     	endif
  5952  00E346  0009               	tblrd		*+
  5953  00E348  006F FFD4  F04F    	movff	tablat,___flmul@a
  5954  00E34E  0009               	tblrd		*+
  5955  00E350  006F FFD4  F050    	movff	tablat,___flmul@a+1
  5956  00E356  0009               	tblrd		*+
  5957  00E358  006F FFD4  F051    	movff	tablat,___flmul@a+2
  5958  00E35E  000A               	tblrd		*-
  5959  00E360  006F FFD4  F052    	movff	tablat,___flmul@a+3
  5960  00E366  0E00               	movlw	0
  5961  00E368  6E0A               	movwf	(___awdiv@divisor+1)^0,c
  5962  00E36A  0E64               	movlw	100
  5963  00E36C  6E09               	movwf	___awdiv@divisor^0,c
  5964  00E36E  505F               	movf	scale@scl^0,w,c
  5965  00E370  6E07               	movwf	___awdiv@dividend^0,c
  5966  00E372  6A08               	clrf	(___awdiv@dividend+1)^0,c
  5967  00E374  BE07               	btfsc	___awdiv@dividend^0,7,c
  5968  00E376  0608               	decf	(___awdiv@dividend+1)^0,f,c
  5969  00E378  ECB5  F062         	call	___awdiv	;wreg free
  5970  00E37C  0E12               	movlw	18
  5971  00E37E  2607               	addwf	?___awdiv^0,f,c
  5972  00E380  5007               	movf	?___awdiv^0,w,c
  5973  00E382  0D04               	mullw	4
  5974  00E384  0E71               	movlw	low __npowers_
  5975  00E386  24F3               	addwf	243,w,c
  5976  00E388  6EF6               	movwf	tblptrl,c
  5977  00E38A  0EFE               	movlw	high __npowers_
  5978  00E38C  20F4               	addwfc	244,w,c
  5979  00E38E  6EF7               	movwf	tblptrh,c
  5980  00E390                     	if	1	;There are 3 active tblptr bytes
  5981  00E390  6AF8               	clrf	tblptru,c
  5982  00E392  0E00               	movlw	low (__mediumconst shr (0+16))
  5983  00E394  22F8               	addwfc	tblptru,f,c
  5984  00E396                     	endif
  5985  00E396  0009               	tblrd		*+
  5986  00E398  006F FFD4  F04B    	movff	tablat,___flmul@b
  5987  00E39E  0009               	tblrd		*+
  5988  00E3A0  006F FFD4  F04C    	movff	tablat,___flmul@b+1
  5989  00E3A6  0009               	tblrd		*+
  5990  00E3A8  006F FFD4  F04D    	movff	tablat,___flmul@b+2
  5991  00E3AE  000A               	tblrd		*-
  5992  00E3B0  006F FFD4  F04E    	movff	tablat,___flmul@b+3
  5993  00E3B6  EC46  F06F         	call	___flmul	;wreg free
  5994  00E3BA  C04B  F05B         	movff	?___flmul,_scale$1579
  5995  00E3BE  C04C  F05C         	movff	?___flmul+1,_scale$1579+1
  5996  00E3C2  C04D  F05D         	movff	?___flmul+2,_scale$1579+2
  5997  00E3C6  C04E  F05E         	movff	?___flmul+3,_scale$1579+3
  5998                           
  5999                           ;doprnt.c: 439: return _npowers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char
      +                          )((scl%100)/10+9)] * _npowers_[(unsigned char)(scl%10)];
  6000  00E3CA  C05B  F04B         	movff	_scale$1579,___flmul@b
  6001  00E3CE  C05C  F04C         	movff	_scale$1579+1,___flmul@b+1
  6002  00E3D2  C05D  F04D         	movff	_scale$1579+2,___flmul@b+2
  6003  00E3D6  C05E  F04E         	movff	_scale$1579+3,___flmul@b+3
  6004  00E3DA  0E00               	movlw	0
  6005  00E3DC  6E04               	movwf	(___awmod@divisor+1)^0,c
  6006  00E3DE  0E0A               	movlw	10
  6007  00E3E0  6E03               	movwf	___awmod@divisor^0,c
  6008  00E3E2  505F               	movf	scale@scl^0,w,c
  6009  00E3E4  6E01               	movwf	___awmod@dividend^0,c
  6010  00E3E6  6A02               	clrf	(___awmod@dividend+1)^0,c
  6011  00E3E8  BE01               	btfsc	___awmod@dividend^0,7,c
  6012  00E3EA  0602               	decf	(___awmod@dividend+1)^0,f,c
  6013  00E3EC  EC5D  F062         	call	___awmod	;wreg free
  6014  00E3F0  5001               	movf	?___awmod^0,w,c
  6015  00E3F2  0D04               	mullw	4
  6016  00E3F4  0E71               	movlw	low __npowers_
  6017  00E3F6  24F3               	addwf	243,w,c
  6018  00E3F8  6EF6               	movwf	tblptrl,c
  6019  00E3FA  0EFE               	movlw	high __npowers_
  6020  00E3FC  20F4               	addwfc	244,w,c
  6021  00E3FE  6EF7               	movwf	tblptrh,c
  6022  00E400                     	if	1	;There are 3 active tblptr bytes
  6023  00E400  6AF8               	clrf	tblptru,c
  6024  00E402  0E00               	movlw	low (__mediumconst shr (0+16))
  6025  00E404  22F8               	addwfc	tblptru,f,c
  6026  00E406                     	endif
  6027  00E406  0009               	tblrd		*+
  6028  00E408  006F FFD4  F04F    	movff	tablat,___flmul@a
  6029  00E40E  0009               	tblrd		*+
  6030  00E410  006F FFD4  F050    	movff	tablat,___flmul@a+1
  6031  00E416  0009               	tblrd		*+
  6032  00E418  006F FFD4  F051    	movff	tablat,___flmul@a+2
  6033  00E41E  000A               	tblrd		*-
  6034  00E420  006F FFD4  F052    	movff	tablat,___flmul@a+3
  6035  00E426  EC46  F06F         	call	___flmul	;wreg free
  6036  00E42A  C04B  F057         	movff	?___flmul,?_scale
  6037  00E42E  C04C  F058         	movff	?___flmul+1,?_scale+1
  6038  00E432  C04D  F059         	movff	?___flmul+2,?_scale+2
  6039  00E436  C04E  F05A         	movff	?___flmul+3,?_scale+3
  6040  00E43A  EFC7  F073         	goto	l455
  6041  00E43E                     l3818:
  6042                           
  6043                           ;doprnt.c: 440: else if(scl > 10)
  6044  00E43E  505F               	movf	scale@scl^0,w,c
  6045  00E440  0A80               	xorlw	128
  6046  00E442  0F75               	addlw	-139
  6047  00E444  A0D8               	btfss	status,0,c
  6048  00E446  EF27  F072         	goto	u3691
  6049  00E44A  EF29  F072         	goto	u3690
  6050  00E44E                     u3691:
  6051  00E44E  EF83  F072         	goto	l3824
  6052  00E452                     u3690:
  6053  00E452                     
  6054                           ;doprnt.c: 441: return _npowers_[(unsigned char)(scl/10+9)] * _npowers_[(unsigned char)(
      +                          scl%10)];
  6055  00E452  0E00               	movlw	0
  6056  00E454  6E0A               	movwf	(___awdiv@divisor+1)^0,c
  6057  00E456  0E0A               	movlw	10
  6058  00E458  6E09               	movwf	___awdiv@divisor^0,c
  6059  00E45A  505F               	movf	scale@scl^0,w,c
  6060  00E45C  6E07               	movwf	___awdiv@dividend^0,c
  6061  00E45E  6A08               	clrf	(___awdiv@dividend+1)^0,c
  6062  00E460  BE07               	btfsc	___awdiv@dividend^0,7,c
  6063  00E462  0608               	decf	(___awdiv@dividend+1)^0,f,c
  6064  00E464  ECB5  F062         	call	___awdiv	;wreg free
  6065  00E468  0E09               	movlw	9
  6066  00E46A  2607               	addwf	?___awdiv^0,f,c
  6067  00E46C  5007               	movf	?___awdiv^0,w,c
  6068  00E46E  0D04               	mullw	4
  6069  00E470  0E71               	movlw	low __npowers_
  6070  00E472  24F3               	addwf	243,w,c
  6071  00E474  6EF6               	movwf	tblptrl,c
  6072  00E476  0EFE               	movlw	high __npowers_
  6073  00E478  20F4               	addwfc	244,w,c
  6074  00E47A  6EF7               	movwf	tblptrh,c
  6075  00E47C                     	if	1	;There are 3 active tblptr bytes
  6076  00E47C  6AF8               	clrf	tblptru,c
  6077  00E47E  0E00               	movlw	low (__mediumconst shr (0+16))
  6078  00E480  22F8               	addwfc	tblptru,f,c
  6079  00E482                     	endif
  6080  00E482  0009               	tblrd		*+
  6081  00E484  006F FFD4  F04B    	movff	tablat,___flmul@b
  6082  00E48A  0009               	tblrd		*+
  6083  00E48C  006F FFD4  F04C    	movff	tablat,___flmul@b+1
  6084  00E492  0009               	tblrd		*+
  6085  00E494  006F FFD4  F04D    	movff	tablat,___flmul@b+2
  6086  00E49A  000A               	tblrd		*-
  6087  00E49C  006F FFD4  F04E    	movff	tablat,___flmul@b+3
  6088  00E4A2  0E00               	movlw	0
  6089  00E4A4  6E04               	movwf	(___awmod@divisor+1)^0,c
  6090  00E4A6  0E0A               	movlw	10
  6091  00E4A8  6E03               	movwf	___awmod@divisor^0,c
  6092  00E4AA  505F               	movf	scale@scl^0,w,c
  6093  00E4AC  6E01               	movwf	___awmod@dividend^0,c
  6094  00E4AE  6A02               	clrf	(___awmod@dividend+1)^0,c
  6095  00E4B0  BE01               	btfsc	___awmod@dividend^0,7,c
  6096  00E4B2  0602               	decf	(___awmod@dividend+1)^0,f,c
  6097  00E4B4  EC5D  F062         	call	___awmod	;wreg free
  6098  00E4B8  5001               	movf	?___awmod^0,w,c
  6099  00E4BA  0D04               	mullw	4
  6100  00E4BC  0E71               	movlw	low __npowers_
  6101  00E4BE  24F3               	addwf	243,w,c
  6102  00E4C0  6EF6               	movwf	tblptrl,c
  6103  00E4C2  0EFE               	movlw	high __npowers_
  6104  00E4C4  20F4               	addwfc	244,w,c
  6105  00E4C6  6EF7               	movwf	tblptrh,c
  6106  00E4C8                     	if	1	;There are 3 active tblptr bytes
  6107  00E4C8  6AF8               	clrf	tblptru,c
  6108  00E4CA  0E00               	movlw	low (__mediumconst shr (0+16))
  6109  00E4CC  22F8               	addwfc	tblptru,f,c
  6110  00E4CE                     	endif
  6111  00E4CE  0009               	tblrd		*+
  6112  00E4D0  006F FFD4  F04F    	movff	tablat,___flmul@a
  6113  00E4D6  0009               	tblrd		*+
  6114  00E4D8  006F FFD4  F050    	movff	tablat,___flmul@a+1
  6115  00E4DE  0009               	tblrd		*+
  6116  00E4E0  006F FFD4  F051    	movff	tablat,___flmul@a+2
  6117  00E4E6  000A               	tblrd		*-
  6118  00E4E8  006F FFD4  F052    	movff	tablat,___flmul@a+3
  6119  00E4EE  EC46  F06F         	call	___flmul	;wreg free
  6120  00E4F2  C04B  F057         	movff	?___flmul,?_scale
  6121  00E4F6  C04C  F058         	movff	?___flmul+1,?_scale+1
  6122  00E4FA  C04D  F059         	movff	?___flmul+2,?_scale+2
  6123  00E4FE  C04E  F05A         	movff	?___flmul+3,?_scale+3
  6124  00E502  EFC7  F073         	goto	l455
  6125  00E506                     l3824:
  6126                           
  6127                           ;doprnt.c: 442: return _npowers_[(unsigned char)scl];
  6128  00E506  505F               	movf	scale@scl^0,w,c
  6129  00E508  0D04               	mullw	4
  6130  00E50A  0E71               	movlw	low __npowers_
  6131  00E50C  24F3               	addwf	243,w,c
  6132  00E50E  6EF6               	movwf	tblptrl,c
  6133  00E510  0EFE               	movlw	high __npowers_
  6134  00E512  20F4               	addwfc	244,w,c
  6135  00E514  6EF7               	movwf	tblptrh,c
  6136  00E516                     	if	1	;There are 3 active tblptr bytes
  6137  00E516  6AF8               	clrf	tblptru,c
  6138  00E518  0E00               	movlw	low (__mediumconst shr (0+16))
  6139  00E51A  22F8               	addwfc	tblptru,f,c
  6140  00E51C                     	endif
  6141  00E51C  0009               	tblrd		*+
  6142  00E51E  006F FFD4  F057    	movff	tablat,?_scale
  6143  00E524  0009               	tblrd		*+
  6144  00E526  006F FFD4  F058    	movff	tablat,?_scale+1
  6145  00E52C  0009               	tblrd		*+
  6146  00E52E  006F FFD4  F059    	movff	tablat,?_scale+2
  6147  00E534  000A               	tblrd		*-
  6148  00E536  006F FFD4  F05A    	movff	tablat,?_scale+3
  6149  00E53C  EFC7  F073         	goto	l455
  6150  00E540                     l3828:
  6151                           
  6152                           ;doprnt.c: 443: };doprnt.c: 444: if(scl>=110)
  6153  00E540  505F               	movf	scale@scl^0,w,c
  6154  00E542  0A80               	xorlw	128
  6155  00E544  0F12               	addlw	-238
  6156  00E546  A0D8               	btfss	status,0,c
  6157  00E548  EFA8  F072         	goto	u3701
  6158  00E54C  EFAA  F072         	goto	u3700
  6159  00E550                     u3701:
  6160  00E550  EF48  F073         	goto	l3836
  6161  00E554                     u3700:
  6162  00E554                     
  6163                           ;doprnt.c: 445: return _powers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)(
      +                          (scl%100)/10+9)] * _powers_[(unsigned char)(scl%10)];
  6164  00E554  0E00               	movlw	0
  6165  00E556  6E0A               	movwf	(___awdiv@divisor+1)^0,c
  6166  00E558  0E0A               	movlw	10
  6167  00E55A  6E09               	movwf	___awdiv@divisor^0,c
  6168  00E55C  0E00               	movlw	0
  6169  00E55E  6E04               	movwf	(___awmod@divisor+1)^0,c
  6170  00E560  0E64               	movlw	100
  6171  00E562  6E03               	movwf	___awmod@divisor^0,c
  6172  00E564  505F               	movf	scale@scl^0,w,c
  6173  00E566  6E01               	movwf	___awmod@dividend^0,c
  6174  00E568  6A02               	clrf	(___awmod@dividend+1)^0,c
  6175  00E56A  BE01               	btfsc	___awmod@dividend^0,7,c
  6176  00E56C  0602               	decf	(___awmod@dividend+1)^0,f,c
  6177  00E56E  EC5D  F062         	call	___awmod	;wreg free
  6178  00E572  C001  F007         	movff	?___awmod,___awdiv@dividend
  6179  00E576  C002  F008         	movff	?___awmod+1,___awdiv@dividend+1
  6180  00E57A  ECB5  F062         	call	___awdiv	;wreg free
  6181  00E57E  0E09               	movlw	9
  6182  00E580  2607               	addwf	?___awdiv^0,f,c
  6183  00E582  5007               	movf	?___awdiv^0,w,c
  6184  00E584  0D04               	mullw	4
  6185  00E586  0E3D               	movlw	low __powers_
  6186  00E588  24F3               	addwf	243,w,c
  6187  00E58A  6EF6               	movwf	tblptrl,c
  6188  00E58C  0EFE               	movlw	high __powers_
  6189  00E58E  20F4               	addwfc	244,w,c
  6190  00E590  6EF7               	movwf	tblptrh,c
  6191  00E592                     	if	1	;There are 3 active tblptr bytes
  6192  00E592  6AF8               	clrf	tblptru,c
  6193  00E594  0E00               	movlw	low (__mediumconst shr (0+16))
  6194  00E596  22F8               	addwfc	tblptru,f,c
  6195  00E598                     	endif
  6196  00E598  0009               	tblrd		*+
  6197  00E59A  006F FFD4  F04F    	movff	tablat,___flmul@a
  6198  00E5A0  0009               	tblrd		*+
  6199  00E5A2  006F FFD4  F050    	movff	tablat,___flmul@a+1
  6200  00E5A8  0009               	tblrd		*+
  6201  00E5AA  006F FFD4  F051    	movff	tablat,___flmul@a+2
  6202  00E5B0  000A               	tblrd		*-
  6203  00E5B2  006F FFD4  F052    	movff	tablat,___flmul@a+3
  6204  00E5B8  0E00               	movlw	0
  6205  00E5BA  6E0A               	movwf	(___awdiv@divisor+1)^0,c
  6206  00E5BC  0E64               	movlw	100
  6207  00E5BE  6E09               	movwf	___awdiv@divisor^0,c
  6208  00E5C0  505F               	movf	scale@scl^0,w,c
  6209  00E5C2  6E07               	movwf	___awdiv@dividend^0,c
  6210  00E5C4  6A08               	clrf	(___awdiv@dividend+1)^0,c
  6211  00E5C6  BE07               	btfsc	___awdiv@dividend^0,7,c
  6212  00E5C8  0608               	decf	(___awdiv@dividend+1)^0,f,c
  6213  00E5CA  ECB5  F062         	call	___awdiv	;wreg free
  6214  00E5CE  0E12               	movlw	18
  6215  00E5D0  2607               	addwf	?___awdiv^0,f,c
  6216  00E5D2  5007               	movf	?___awdiv^0,w,c
  6217  00E5D4  0D04               	mullw	4
  6218  00E5D6  0E3D               	movlw	low __powers_
  6219  00E5D8  24F3               	addwf	243,w,c
  6220  00E5DA  6EF6               	movwf	tblptrl,c
  6221  00E5DC  0EFE               	movlw	high __powers_
  6222  00E5DE  20F4               	addwfc	244,w,c
  6223  00E5E0  6EF7               	movwf	tblptrh,c
  6224  00E5E2                     	if	1	;There are 3 active tblptr bytes
  6225  00E5E2  6AF8               	clrf	tblptru,c
  6226  00E5E4  0E00               	movlw	low (__mediumconst shr (0+16))
  6227  00E5E6  22F8               	addwfc	tblptru,f,c
  6228  00E5E8                     	endif
  6229  00E5E8  0009               	tblrd		*+
  6230  00E5EA  006F FFD4  F04B    	movff	tablat,___flmul@b
  6231  00E5F0  0009               	tblrd		*+
  6232  00E5F2  006F FFD4  F04C    	movff	tablat,___flmul@b+1
  6233  00E5F8  0009               	tblrd		*+
  6234  00E5FA  006F FFD4  F04D    	movff	tablat,___flmul@b+2
  6235  00E600  000A               	tblrd		*-
  6236  00E602  006F FFD4  F04E    	movff	tablat,___flmul@b+3
  6237  00E608  EC46  F06F         	call	___flmul	;wreg free
  6238  00E60C  C04B  F05B         	movff	?___flmul,_scale$1579
  6239  00E610  C04C  F05C         	movff	?___flmul+1,_scale$1579+1
  6240  00E614  C04D  F05D         	movff	?___flmul+2,_scale$1579+2
  6241  00E618  C04E  F05E         	movff	?___flmul+3,_scale$1579+3
  6242                           
  6243                           ;doprnt.c: 445: return _powers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)(
      +                          (scl%100)/10+9)] * _powers_[(unsigned char)(scl%10)];
  6244  00E61C  C05B  F04B         	movff	_scale$1579,___flmul@b
  6245  00E620  C05C  F04C         	movff	_scale$1579+1,___flmul@b+1
  6246  00E624  C05D  F04D         	movff	_scale$1579+2,___flmul@b+2
  6247  00E628  C05E  F04E         	movff	_scale$1579+3,___flmul@b+3
  6248  00E62C  0E00               	movlw	0
  6249  00E62E  6E04               	movwf	(___awmod@divisor+1)^0,c
  6250  00E630  0E0A               	movlw	10
  6251  00E632  6E03               	movwf	___awmod@divisor^0,c
  6252  00E634  505F               	movf	scale@scl^0,w,c
  6253  00E636  6E01               	movwf	___awmod@dividend^0,c
  6254  00E638  6A02               	clrf	(___awmod@dividend+1)^0,c
  6255  00E63A  BE01               	btfsc	___awmod@dividend^0,7,c
  6256  00E63C  0602               	decf	(___awmod@dividend+1)^0,f,c
  6257  00E63E  EC5D  F062         	call	___awmod	;wreg free
  6258  00E642  5001               	movf	?___awmod^0,w,c
  6259  00E644  0D04               	mullw	4
  6260  00E646  0E3D               	movlw	low __powers_
  6261  00E648  24F3               	addwf	243,w,c
  6262  00E64A  6EF6               	movwf	tblptrl,c
  6263  00E64C  0EFE               	movlw	high __powers_
  6264  00E64E  20F4               	addwfc	244,w,c
  6265  00E650  6EF7               	movwf	tblptrh,c
  6266  00E652                     	if	1	;There are 3 active tblptr bytes
  6267  00E652  6AF8               	clrf	tblptru,c
  6268  00E654  0E00               	movlw	low (__mediumconst shr (0+16))
  6269  00E656  22F8               	addwfc	tblptru,f,c
  6270  00E658                     	endif
  6271  00E658  0009               	tblrd		*+
  6272  00E65A  006F FFD4  F04F    	movff	tablat,___flmul@a
  6273  00E660  0009               	tblrd		*+
  6274  00E662  006F FFD4  F050    	movff	tablat,___flmul@a+1
  6275  00E668  0009               	tblrd		*+
  6276  00E66A  006F FFD4  F051    	movff	tablat,___flmul@a+2
  6277  00E670  000A               	tblrd		*-
  6278  00E672  006F FFD4  F052    	movff	tablat,___flmul@a+3
  6279  00E678  EC46  F06F         	call	___flmul	;wreg free
  6280  00E67C  C04B  F057         	movff	?___flmul,?_scale
  6281  00E680  C04C  F058         	movff	?___flmul+1,?_scale+1
  6282  00E684  C04D  F059         	movff	?___flmul+2,?_scale+2
  6283  00E688  C04E  F05A         	movff	?___flmul+3,?_scale+3
  6284  00E68C  EFC7  F073         	goto	l455
  6285  00E690                     l3836:
  6286                           
  6287                           ;doprnt.c: 446: else if(scl > 10)
  6288  00E690  505F               	movf	scale@scl^0,w,c
  6289  00E692  0A80               	xorlw	128
  6290  00E694  0F75               	addlw	-139
  6291  00E696  A0D8               	btfss	status,0,c
  6292  00E698  EF50  F073         	goto	u3711
  6293  00E69C  EF52  F073         	goto	u3710
  6294  00E6A0                     u3711:
  6295  00E6A0  EFAC  F073         	goto	l3842
  6296  00E6A4                     u3710:
  6297  00E6A4                     
  6298                           ;doprnt.c: 447: return _powers_[(unsigned char)(scl/10+9)] * _powers_[(unsigned char)(sc
      +                          l%10)];
  6299  00E6A4  0E00               	movlw	0
  6300  00E6A6  6E0A               	movwf	(___awdiv@divisor+1)^0,c
  6301  00E6A8  0E0A               	movlw	10
  6302  00E6AA  6E09               	movwf	___awdiv@divisor^0,c
  6303  00E6AC  505F               	movf	scale@scl^0,w,c
  6304  00E6AE  6E07               	movwf	___awdiv@dividend^0,c
  6305  00E6B0  6A08               	clrf	(___awdiv@dividend+1)^0,c
  6306  00E6B2  BE07               	btfsc	___awdiv@dividend^0,7,c
  6307  00E6B4  0608               	decf	(___awdiv@dividend+1)^0,f,c
  6308  00E6B6  ECB5  F062         	call	___awdiv	;wreg free
  6309  00E6BA  0E09               	movlw	9
  6310  00E6BC  2607               	addwf	?___awdiv^0,f,c
  6311  00E6BE  5007               	movf	?___awdiv^0,w,c
  6312  00E6C0  0D04               	mullw	4
  6313  00E6C2  0E3D               	movlw	low __powers_
  6314  00E6C4  24F3               	addwf	243,w,c
  6315  00E6C6  6EF6               	movwf	tblptrl,c
  6316  00E6C8  0EFE               	movlw	high __powers_
  6317  00E6CA  20F4               	addwfc	244,w,c
  6318  00E6CC  6EF7               	movwf	tblptrh,c
  6319  00E6CE                     	if	1	;There are 3 active tblptr bytes
  6320  00E6CE  6AF8               	clrf	tblptru,c
  6321  00E6D0  0E00               	movlw	low (__mediumconst shr (0+16))
  6322  00E6D2  22F8               	addwfc	tblptru,f,c
  6323  00E6D4                     	endif
  6324  00E6D4  0009               	tblrd		*+
  6325  00E6D6  006F FFD4  F04B    	movff	tablat,___flmul@b
  6326  00E6DC  0009               	tblrd		*+
  6327  00E6DE  006F FFD4  F04C    	movff	tablat,___flmul@b+1
  6328  00E6E4  0009               	tblrd		*+
  6329  00E6E6  006F FFD4  F04D    	movff	tablat,___flmul@b+2
  6330  00E6EC  000A               	tblrd		*-
  6331  00E6EE  006F FFD4  F04E    	movff	tablat,___flmul@b+3
  6332  00E6F4  0E00               	movlw	0
  6333  00E6F6  6E04               	movwf	(___awmod@divisor+1)^0,c
  6334  00E6F8  0E0A               	movlw	10
  6335  00E6FA  6E03               	movwf	___awmod@divisor^0,c
  6336  00E6FC  505F               	movf	scale@scl^0,w,c
  6337  00E6FE  6E01               	movwf	___awmod@dividend^0,c
  6338  00E700  6A02               	clrf	(___awmod@dividend+1)^0,c
  6339  00E702  BE01               	btfsc	___awmod@dividend^0,7,c
  6340  00E704  0602               	decf	(___awmod@dividend+1)^0,f,c
  6341  00E706  EC5D  F062         	call	___awmod	;wreg free
  6342  00E70A  5001               	movf	?___awmod^0,w,c
  6343  00E70C  0D04               	mullw	4
  6344  00E70E  0E3D               	movlw	low __powers_
  6345  00E710  24F3               	addwf	243,w,c
  6346  00E712  6EF6               	movwf	tblptrl,c
  6347  00E714  0EFE               	movlw	high __powers_
  6348  00E716  20F4               	addwfc	244,w,c
  6349  00E718  6EF7               	movwf	tblptrh,c
  6350  00E71A                     	if	1	;There are 3 active tblptr bytes
  6351  00E71A  6AF8               	clrf	tblptru,c
  6352  00E71C  0E00               	movlw	low (__mediumconst shr (0+16))
  6353  00E71E  22F8               	addwfc	tblptru,f,c
  6354  00E720                     	endif
  6355  00E720  0009               	tblrd		*+
  6356  00E722  006F FFD4  F04F    	movff	tablat,___flmul@a
  6357  00E728  0009               	tblrd		*+
  6358  00E72A  006F FFD4  F050    	movff	tablat,___flmul@a+1
  6359  00E730  0009               	tblrd		*+
  6360  00E732  006F FFD4  F051    	movff	tablat,___flmul@a+2
  6361  00E738  000A               	tblrd		*-
  6362  00E73A  006F FFD4  F052    	movff	tablat,___flmul@a+3
  6363  00E740  EC46  F06F         	call	___flmul	;wreg free
  6364  00E744  C04B  F057         	movff	?___flmul,?_scale
  6365  00E748  C04C  F058         	movff	?___flmul+1,?_scale+1
  6366  00E74C  C04D  F059         	movff	?___flmul+2,?_scale+2
  6367  00E750  C04E  F05A         	movff	?___flmul+3,?_scale+3
  6368  00E754  EFC7  F073         	goto	l455
  6369  00E758                     l3842:
  6370                           
  6371                           ;doprnt.c: 448: return _powers_[(unsigned char)scl];
  6372  00E758  505F               	movf	scale@scl^0,w,c
  6373  00E75A  0D04               	mullw	4
  6374  00E75C  0E3D               	movlw	low __powers_
  6375  00E75E  24F3               	addwf	243,w,c
  6376  00E760  6EF6               	movwf	tblptrl,c
  6377  00E762  0EFE               	movlw	high __powers_
  6378  00E764  20F4               	addwfc	244,w,c
  6379  00E766  6EF7               	movwf	tblptrh,c
  6380  00E768                     	if	1	;There are 3 active tblptr bytes
  6381  00E768  6AF8               	clrf	tblptru,c
  6382  00E76A  0E00               	movlw	low (__mediumconst shr (0+16))
  6383  00E76C  22F8               	addwfc	tblptru,f,c
  6384  00E76E                     	endif
  6385  00E76E  0009               	tblrd		*+
  6386  00E770  006F FFD4  F057    	movff	tablat,?_scale
  6387  00E776  0009               	tblrd		*+
  6388  00E778  006F FFD4  F058    	movff	tablat,?_scale+1
  6389  00E77E  0009               	tblrd		*+
  6390  00E780  006F FFD4  F059    	movff	tablat,?_scale+2
  6391  00E786  000A               	tblrd		*-
  6392  00E788  006F FFD4  F05A    	movff	tablat,?_scale+3
  6393  00E78E                     l455:
  6394  00E78E  0012               	return		;funcret
  6395  00E790                     __end_of_scale:
  6396                           	callstack 0
  6397                           
  6398 ;; *************** function ___awmod *****************
  6399 ;; Defined at:
  6400 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\awmod.c"
  6401 ;; Parameters:    Size  Location     Type
  6402 ;;  dividend        2    0[COMRAM] int 
  6403 ;;  divisor         2    2[COMRAM] int 
  6404 ;; Auto vars:     Size  Location     Type
  6405 ;;  sign            1    5[COMRAM] unsigned char 
  6406 ;;  counter         1    4[COMRAM] unsigned char 
  6407 ;; Return value:  Size  Location     Type
  6408 ;;                  2    0[COMRAM] int 
  6409 ;; Registers used:
  6410 ;;		wreg, status,2, status,0
  6411 ;; Tracked objects:
  6412 ;;		On entry : 0/0
  6413 ;;		On exit  : 0/0
  6414 ;;		Unchanged: 0/0
  6415 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6416 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6417 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6418 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6419 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6420 ;;Total ram usage:        6 bytes
  6421 ;; Hardware stack levels used:    1
  6422 ;; This function calls:
  6423 ;;		Nothing
  6424 ;; This function is called by:
  6425 ;;		_scale
  6426 ;; This function uses a non-reentrant model
  6427 ;;
  6428                           
  6429                           	psect	text13
  6430  00C4BA                     __ptext13:
  6431                           	callstack 0
  6432  00C4BA                     ___awmod:
  6433                           	callstack 28
  6434  00C4BA  0E00               	movlw	0
  6435  00C4BC  6E06               	movwf	___awmod@sign^0,c
  6436  00C4BE  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
  6437  00C4C0  EF66  F062         	goto	u3290
  6438  00C4C4  EF64  F062         	goto	u3291
  6439  00C4C8                     u3291:
  6440  00C4C8  EF6C  F062         	goto	l3584
  6441  00C4CC                     u3290:
  6442  00C4CC  6C01               	negf	___awmod@dividend^0,c
  6443  00C4CE  1E02               	comf	(___awmod@dividend+1)^0,f,c
  6444  00C4D0  B0D8               	btfsc	status,0,c
  6445  00C4D2  2A02               	incf	(___awmod@dividend+1)^0,f,c
  6446  00C4D4  0E01               	movlw	1
  6447  00C4D6  6E06               	movwf	___awmod@sign^0,c
  6448  00C4D8                     l3584:
  6449  00C4D8  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
  6450  00C4DA  EF73  F062         	goto	u3300
  6451  00C4DE  EF71  F062         	goto	u3301
  6452  00C4E2                     u3301:
  6453  00C4E2  EF77  F062         	goto	l3588
  6454  00C4E6                     u3300:
  6455  00C4E6  6C03               	negf	___awmod@divisor^0,c
  6456  00C4E8  1E04               	comf	(___awmod@divisor+1)^0,f,c
  6457  00C4EA  B0D8               	btfsc	status,0,c
  6458  00C4EC  2A04               	incf	(___awmod@divisor+1)^0,f,c
  6459  00C4EE                     l3588:
  6460  00C4EE  5003               	movf	___awmod@divisor^0,w,c
  6461  00C4F0  1004               	iorwf	(___awmod@divisor+1)^0,w,c
  6462  00C4F2  B4D8               	btfsc	status,2,c
  6463  00C4F4  EF7E  F062         	goto	u3311
  6464  00C4F8  EF80  F062         	goto	u3310
  6465  00C4FC                     u3311:
  6466  00C4FC  EFA4  F062         	goto	l3604
  6467  00C500                     u3310:
  6468  00C500  0E01               	movlw	1
  6469  00C502  6E05               	movwf	___awmod@counter^0,c
  6470  00C504  EF88  F062         	goto	l3594
  6471  00C508                     l3592:
  6472  00C508  90D8               	bcf	status,0,c
  6473  00C50A  3603               	rlcf	___awmod@divisor^0,f,c
  6474  00C50C  3604               	rlcf	(___awmod@divisor+1)^0,f,c
  6475  00C50E  2A05               	incf	___awmod@counter^0,f,c
  6476  00C510                     l3594:
  6477  00C510  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  6478  00C512  EF8D  F062         	goto	u3321
  6479  00C516  EF8F  F062         	goto	u3320
  6480  00C51A                     u3321:
  6481  00C51A  EF84  F062         	goto	l3592
  6482  00C51E                     u3320:
  6483  00C51E                     l3596:
  6484  00C51E  5003               	movf	___awmod@divisor^0,w,c
  6485  00C520  5C01               	subwf	___awmod@dividend^0,w,c
  6486  00C522  5004               	movf	(___awmod@divisor+1)^0,w,c
  6487  00C524  5802               	subwfb	(___awmod@dividend+1)^0,w,c
  6488  00C526  A0D8               	btfss	status,0,c
  6489  00C528  EF98  F062         	goto	u3331
  6490  00C52C  EF9A  F062         	goto	u3330
  6491  00C530                     u3331:
  6492  00C530  EF9E  F062         	goto	l3600
  6493  00C534                     u3330:
  6494  00C534  5003               	movf	___awmod@divisor^0,w,c
  6495  00C536  5E01               	subwf	___awmod@dividend^0,f,c
  6496  00C538  5004               	movf	(___awmod@divisor+1)^0,w,c
  6497  00C53A  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
  6498  00C53C                     l3600:
  6499  00C53C  90D8               	bcf	status,0,c
  6500  00C53E  3204               	rrcf	(___awmod@divisor+1)^0,f,c
  6501  00C540  3203               	rrcf	___awmod@divisor^0,f,c
  6502  00C542  2E05               	decfsz	___awmod@counter^0,f,c
  6503  00C544  EF8F  F062         	goto	l3596
  6504  00C548                     l3604:
  6505  00C548  5006               	movf	___awmod@sign^0,w,c
  6506  00C54A  B4D8               	btfsc	status,2,c
  6507  00C54C  EFAA  F062         	goto	u3341
  6508  00C550  EFAC  F062         	goto	u3340
  6509  00C554                     u3341:
  6510  00C554  EFB0  F062         	goto	l3608
  6511  00C558                     u3340:
  6512  00C558  6C01               	negf	___awmod@dividend^0,c
  6513  00C55A  1E02               	comf	(___awmod@dividend+1)^0,f,c
  6514  00C55C  B0D8               	btfsc	status,0,c
  6515  00C55E  2A02               	incf	(___awmod@dividend+1)^0,f,c
  6516  00C560                     l3608:
  6517  00C560  C001  F001         	movff	___awmod@dividend,?___awmod
  6518  00C564  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  6519  00C568  0012               	return		;funcret
  6520  00C56A                     __end_of___awmod:
  6521                           	callstack 0
  6522                           
  6523 ;; *************** function ___awdiv *****************
  6524 ;; Defined at:
  6525 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\awdiv.c"
  6526 ;; Parameters:    Size  Location     Type
  6527 ;;  dividend        2    6[COMRAM] int 
  6528 ;;  divisor         2    8[COMRAM] int 
  6529 ;; Auto vars:     Size  Location     Type
  6530 ;;  quotient        2   12[COMRAM] int 
  6531 ;;  sign            1   11[COMRAM] unsigned char 
  6532 ;;  counter         1   10[COMRAM] unsigned char 
  6533 ;; Return value:  Size  Location     Type
  6534 ;;                  2    6[COMRAM] int 
  6535 ;; Registers used:
  6536 ;;		wreg, status,2, status,0
  6537 ;; Tracked objects:
  6538 ;;		On entry : 0/0
  6539 ;;		On exit  : 0/0
  6540 ;;		Unchanged: 0/0
  6541 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6542 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6543 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6544 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6545 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6546 ;;Total ram usage:        8 bytes
  6547 ;; Hardware stack levels used:    1
  6548 ;; This function calls:
  6549 ;;		Nothing
  6550 ;; This function is called by:
  6551 ;;		_scale
  6552 ;;		_printf
  6553 ;; This function uses a non-reentrant model
  6554 ;;
  6555                           
  6556                           	psect	text14
  6557  00C56A                     __ptext14:
  6558                           	callstack 0
  6559  00C56A                     ___awdiv:
  6560                           	callstack 28
  6561  00C56A  0E00               	movlw	0
  6562  00C56C  6E0C               	movwf	___awdiv@sign^0,c
  6563  00C56E  BE0A               	btfsc	(___awdiv@divisor+1)^0,7,c
  6564  00C570  EFBE  F062         	goto	u3230
  6565  00C574  EFBC  F062         	goto	u3231
  6566  00C578                     u3231:
  6567  00C578  EFC4  F062         	goto	l3540
  6568  00C57C                     u3230:
  6569  00C57C  6C09               	negf	___awdiv@divisor^0,c
  6570  00C57E  1E0A               	comf	(___awdiv@divisor+1)^0,f,c
  6571  00C580  B0D8               	btfsc	status,0,c
  6572  00C582  2A0A               	incf	(___awdiv@divisor+1)^0,f,c
  6573  00C584  0E01               	movlw	1
  6574  00C586  6E0C               	movwf	___awdiv@sign^0,c
  6575  00C588                     l3540:
  6576  00C588  BE08               	btfsc	(___awdiv@dividend+1)^0,7,c
  6577  00C58A  EFCB  F062         	goto	u3240
  6578  00C58E  EFC9  F062         	goto	u3241
  6579  00C592                     u3241:
  6580  00C592  EFD1  F062         	goto	l3546
  6581  00C596                     u3240:
  6582  00C596  6C07               	negf	___awdiv@dividend^0,c
  6583  00C598  1E08               	comf	(___awdiv@dividend+1)^0,f,c
  6584  00C59A  B0D8               	btfsc	status,0,c
  6585  00C59C  2A08               	incf	(___awdiv@dividend+1)^0,f,c
  6586  00C59E  0E01               	movlw	1
  6587  00C5A0  1A0C               	xorwf	___awdiv@sign^0,f,c
  6588  00C5A2                     l3546:
  6589  00C5A2  0E00               	movlw	0
  6590  00C5A4  6E0E               	movwf	(___awdiv@quotient+1)^0,c
  6591  00C5A6  0E00               	movlw	0
  6592  00C5A8  6E0D               	movwf	___awdiv@quotient^0,c
  6593  00C5AA  5009               	movf	___awdiv@divisor^0,w,c
  6594  00C5AC  100A               	iorwf	(___awdiv@divisor+1)^0,w,c
  6595  00C5AE  B4D8               	btfsc	status,2,c
  6596  00C5B0  EFDC  F062         	goto	u3251
  6597  00C5B4  EFDE  F062         	goto	u3250
  6598  00C5B8                     u3251:
  6599  00C5B8  EF06  F063         	goto	l3568
  6600  00C5BC                     u3250:
  6601  00C5BC  0E01               	movlw	1
  6602  00C5BE  6E0B               	movwf	___awdiv@counter^0,c
  6603  00C5C0  EFE6  F062         	goto	l3554
  6604  00C5C4                     l3552:
  6605  00C5C4  90D8               	bcf	status,0,c
  6606  00C5C6  3609               	rlcf	___awdiv@divisor^0,f,c
  6607  00C5C8  360A               	rlcf	(___awdiv@divisor+1)^0,f,c
  6608  00C5CA  2A0B               	incf	___awdiv@counter^0,f,c
  6609  00C5CC                     l3554:
  6610  00C5CC  AE0A               	btfss	(___awdiv@divisor+1)^0,7,c
  6611  00C5CE  EFEB  F062         	goto	u3261
  6612  00C5D2  EFED  F062         	goto	u3260
  6613  00C5D6                     u3261:
  6614  00C5D6  EFE2  F062         	goto	l3552
  6615  00C5DA                     u3260:
  6616  00C5DA                     l3556:
  6617  00C5DA  90D8               	bcf	status,0,c
  6618  00C5DC  360D               	rlcf	___awdiv@quotient^0,f,c
  6619  00C5DE  360E               	rlcf	(___awdiv@quotient+1)^0,f,c
  6620  00C5E0  5009               	movf	___awdiv@divisor^0,w,c
  6621  00C5E2  5C07               	subwf	___awdiv@dividend^0,w,c
  6622  00C5E4  500A               	movf	(___awdiv@divisor+1)^0,w,c
  6623  00C5E6  5808               	subwfb	(___awdiv@dividend+1)^0,w,c
  6624  00C5E8  A0D8               	btfss	status,0,c
  6625  00C5EA  EFF9  F062         	goto	u3271
  6626  00C5EE  EFFB  F062         	goto	u3270
  6627  00C5F2                     u3271:
  6628  00C5F2  EF00  F063         	goto	l3564
  6629  00C5F6                     u3270:
  6630  00C5F6  5009               	movf	___awdiv@divisor^0,w,c
  6631  00C5F8  5E07               	subwf	___awdiv@dividend^0,f,c
  6632  00C5FA  500A               	movf	(___awdiv@divisor+1)^0,w,c
  6633  00C5FC  5A08               	subwfb	(___awdiv@dividend+1)^0,f,c
  6634  00C5FE  800D               	bsf	___awdiv@quotient^0,0,c
  6635  00C600                     l3564:
  6636  00C600  90D8               	bcf	status,0,c
  6637  00C602  320A               	rrcf	(___awdiv@divisor+1)^0,f,c
  6638  00C604  3209               	rrcf	___awdiv@divisor^0,f,c
  6639  00C606  2E0B               	decfsz	___awdiv@counter^0,f,c
  6640  00C608  EFED  F062         	goto	l3556
  6641  00C60C                     l3568:
  6642  00C60C  500C               	movf	___awdiv@sign^0,w,c
  6643  00C60E  B4D8               	btfsc	status,2,c
  6644  00C610  EF0C  F063         	goto	u3281
  6645  00C614  EF0E  F063         	goto	u3280
  6646  00C618                     u3281:
  6647  00C618  EF12  F063         	goto	l3572
  6648  00C61C                     u3280:
  6649  00C61C  6C0D               	negf	___awdiv@quotient^0,c
  6650  00C61E  1E0E               	comf	(___awdiv@quotient+1)^0,f,c
  6651  00C620  B0D8               	btfsc	status,0,c
  6652  00C622  2A0E               	incf	(___awdiv@quotient+1)^0,f,c
  6653  00C624                     l3572:
  6654  00C624  C00D  F007         	movff	___awdiv@quotient,?___awdiv
  6655  00C628  C00E  F008         	movff	___awdiv@quotient+1,?___awdiv+1
  6656  00C62C  0012               	return		;funcret
  6657  00C62E                     __end_of___awdiv:
  6658                           	callstack 0
  6659                           
  6660 ;; *************** function _putch *****************
  6661 ;; Defined at:
  6662 ;;		line 175 in file "mcc_generated_files/uart2.c"
  6663 ;; Parameters:    Size  Location     Type
  6664 ;;  txData          1    wreg     unsigned char 
  6665 ;; Auto vars:     Size  Location     Type
  6666 ;;  txData          1    1[COMRAM] unsigned char 
  6667 ;; Return value:  Size  Location     Type
  6668 ;;                  1    wreg      void 
  6669 ;; Registers used:
  6670 ;;		wreg, status,2, cstack
  6671 ;; Tracked objects:
  6672 ;;		On entry : 0/0
  6673 ;;		On exit  : 0/0
  6674 ;;		Unchanged: 0/0
  6675 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6676 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6677 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6678 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6679 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6680 ;;Total ram usage:        1 bytes
  6681 ;; Hardware stack levels used:    1
  6682 ;; Hardware stack levels required when called:    1
  6683 ;; This function calls:
  6684 ;;		_UART2_Write
  6685 ;; This function is called by:
  6686 ;;		_printf
  6687 ;; This function uses a non-reentrant model
  6688 ;;
  6689                           
  6690                           	psect	text15
  6691  00BDBE                     __ptext15:
  6692                           	callstack 0
  6693  00BDBE                     _putch:
  6694                           	callstack 28
  6695                           
  6696                           ;incstack = 0
  6697                           ;putch@txData stored from wreg
  6698  00BDBE  6E02               	movwf	putch@txData^0,c
  6699  00BDC0                     
  6700                           ;uart2.c: 177: UART2_Write(txData);
  6701  00BDC0  5002               	movf	putch@txData^0,w,c
  6702  00BDC2  EC0A  F05F         	call	_UART2_Write
  6703  00BDC6  0012               	return		;funcret
  6704  00BDC8                     __end_of_putch:
  6705                           	callstack 0
  6706                           
  6707 ;; *************** function _UART2_Write *****************
  6708 ;; Defined at:
  6709 ;;		line 161 in file "mcc_generated_files/uart2.c"
  6710 ;; Parameters:    Size  Location     Type
  6711 ;;  txData          1    wreg     unsigned char 
  6712 ;; Auto vars:     Size  Location     Type
  6713 ;;  txData          1    0[COMRAM] unsigned char 
  6714 ;; Return value:  Size  Location     Type
  6715 ;;                  1    wreg      void 
  6716 ;; Registers used:
  6717 ;;		wreg
  6718 ;; Tracked objects:
  6719 ;;		On entry : 0/0
  6720 ;;		On exit  : 0/0
  6721 ;;		Unchanged: 0/0
  6722 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6723 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6724 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6725 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6726 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6727 ;;Total ram usage:        1 bytes
  6728 ;; Hardware stack levels used:    1
  6729 ;; This function calls:
  6730 ;;		Nothing
  6731 ;; This function is called by:
  6732 ;;		_putch
  6733 ;; This function uses a non-reentrant model
  6734 ;;
  6735                           
  6736                           	psect	text16
  6737  00BE14                     __ptext16:
  6738                           	callstack 0
  6739  00BE14                     _UART2_Write:
  6740                           	callstack 28
  6741                           
  6742                           ;incstack = 0
  6743                           ;UART2_Write@txData stored from wreg
  6744  00BE14  6E01               	movwf	UART2_Write@txData^0,c
  6745  00BE16                     l180:
  6746  00BE16  0139               	movlb	57	; () banked
  6747  00BE18  A7A6               	btfss	166,3,b	;volatile
  6748  00BE1A  EF11  F05F         	goto	u2641
  6749  00BE1E  EF13  F05F         	goto	u2640
  6750  00BE22                     u2641:
  6751  00BE22  EF0B  F05F         	goto	l180
  6752  00BE26                     u2640:
  6753  00BE26                     
  6754                           ; BSR set to: 57
  6755                           ;uart2.c: 165: };uart2.c: 167: U2TXB = txData;
  6756  00BE26  0060  F007  FDD2   	movff	UART2_Write@txData,15826	;volatile
  6757  00BE2C                     
  6758                           ; BSR set to: 57
  6759  00BE2C  0012               	return		;funcret
  6760  00BE2E                     __end_of_UART2_Write:
  6761                           	callstack 0
  6762                           
  6763 ;; *************** function _isdigit *****************
  6764 ;; Defined at:
  6765 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\isdigit.c"
  6766 ;; Parameters:    Size  Location     Type
  6767 ;;  c               1    wreg     unsigned char 
  6768 ;; Auto vars:     Size  Location     Type
  6769 ;;  c               1    2[COMRAM] unsigned char 
  6770 ;; Return value:  Size  Location     Type
  6771 ;;		None               void
  6772 ;; Registers used:
  6773 ;;		wreg, status,2, status,0
  6774 ;; Tracked objects:
  6775 ;;		On entry : 0/0
  6776 ;;		On exit  : 0/0
  6777 ;;		Unchanged: 0/0
  6778 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6779 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6780 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6781 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6782 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6783 ;;Total ram usage:        3 bytes
  6784 ;; Hardware stack levels used:    1
  6785 ;; This function calls:
  6786 ;;		Nothing
  6787 ;; This function is called by:
  6788 ;;		_printf
  6789 ;; This function uses a non-reentrant model
  6790 ;;
  6791                           
  6792                           	psect	text17
  6793  00BEDA                     __ptext17:
  6794                           	callstack 0
  6795  00BEDA                     _isdigit:
  6796                           	callstack 29
  6797                           
  6798                           ; BSR set to: 57
  6799                           ;incstack = 0
  6800                           ;isdigit@c stored from wreg
  6801  00BEDA  6E03               	movwf	isdigit@c^0,c
  6802  00BEDC  0E00               	movlw	0
  6803  00BEDE  6E02               	movwf	_isdigit$1245^0,c
  6804  00BEE0  0E3A               	movlw	58
  6805  00BEE2  6003               	cpfslt	isdigit@c^0,c
  6806  00BEE4  EF76  F05F         	goto	u3721
  6807  00BEE8  EF78  F05F         	goto	u3720
  6808  00BEEC                     u3721:
  6809  00BEEC  EF82  F05F         	goto	l3854
  6810  00BEF0                     u3720:
  6811  00BEF0  0E2F               	movlw	47
  6812  00BEF2  6403               	cpfsgt	isdigit@c^0,c
  6813  00BEF4  EF7E  F05F         	goto	u3731
  6814  00BEF8  EF80  F05F         	goto	u3730
  6815  00BEFC                     u3731:
  6816  00BEFC  EF82  F05F         	goto	l3854
  6817  00BF00                     u3730:
  6818  00BF00  0E01               	movlw	1
  6819  00BF02  6E02               	movwf	_isdigit$1245^0,c
  6820  00BF04                     l3854:
  6821  00BF04  C002  F001         	movff	_isdigit$1245,??_isdigit
  6822  00BF08  3001               	rrcf	??_isdigit^0,w,c
  6823  00BF0A  0012               	return		;funcret
  6824  00BF0C                     __end_of_isdigit:
  6825                           	callstack 0
  6826                           
  6827 ;; *************** function _fround *****************
  6828 ;; Defined at:
  6829 ;;		line 417 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c"
  6830 ;; Parameters:    Size  Location     Type
  6831 ;;  prec            1    wreg     unsigned char 
  6832 ;; Auto vars:     Size  Location     Type
  6833 ;;  prec            1   21[BANK0 ] unsigned char 
  6834 ;; Return value:  Size  Location     Type
  6835 ;;                  4   86[COMRAM] unsigned char 
  6836 ;; Registers used:
  6837 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6838 ;; Tracked objects:
  6839 ;;		On entry : 0/0
  6840 ;;		On exit  : 0/0
  6841 ;;		Unchanged: 0/0
  6842 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6843 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6844 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6845 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6846 ;;      Totals:         4       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6847 ;;Total ram usage:       13 bytes
  6848 ;; Hardware stack levels used:    1
  6849 ;; Hardware stack levels required when called:    1
  6850 ;; This function calls:
  6851 ;;		___flmul
  6852 ;;		___lwdiv
  6853 ;;		___lwmod
  6854 ;; This function is called by:
  6855 ;;		_printf
  6856 ;; This function uses a non-reentrant model
  6857 ;;
  6858                           
  6859                           	psect	text18
  6860  00D7F6                     __ptext18:
  6861                           	callstack 0
  6862  00D7F6                     _fround:
  6863                           	callstack 28
  6864                           
  6865                           ;incstack = 0
  6866                           ;fround@prec stored from wreg
  6867  00D7F6  0100               	movlb	0	; () banked
  6868  00D7F8  6F75               	movwf	fround@prec& (0+255),b
  6869  00D7FA                     
  6870                           ;doprnt.c: 421: if(prec>=110)
  6871  00D7FA  0E6D               	movlw	109
  6872  00D7FC  0100               	movlb	0	; () banked
  6873  00D7FE  6575               	cpfsgt	fround@prec& (0+255),b
  6874  00D800  EF04  F06C         	goto	u3651
  6875  00D804  EF06  F06C         	goto	u3650
  6876  00D808                     u3651:
  6877  00D808  EFC8  F06C         	goto	l3798
  6878  00D80C                     u3650:
  6879  00D80C                     
  6880                           ; BSR set to: 0
  6881                           ;doprnt.c: 422: return 0.5 * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * 
      +                          _npowers_[prec%10U];
  6882  00D80C  0E00               	movlw	0
  6883  00D80E  6E4F               	movwf	___flmul@a^0,c
  6884  00D810  0E00               	movlw	0
  6885  00D812  6E50               	movwf	(___flmul@a+1)^0,c
  6886  00D814  0E00               	movlw	0
  6887  00D816  6E51               	movwf	(___flmul@a+2)^0,c
  6888  00D818  0E3F               	movlw	63
  6889  00D81A  6E52               	movwf	(___flmul@a+3)^0,c
  6890  00D81C  0E00               	movlw	0
  6891  00D81E  6E09               	movwf	(___lwdiv@divisor+1)^0,c
  6892  00D820  0E64               	movlw	100
  6893  00D822  6E08               	movwf	___lwdiv@divisor^0,c
  6894  00D824  C075  F006         	movff	fround@prec,___lwdiv@dividend
  6895  00D828  6A07               	clrf	(___lwdiv@dividend+1)^0,c
  6896  00D82A  EC26  F060         	call	___lwdiv	;wreg free
  6897  00D82E  90D8               	bcf	status,0,c
  6898  00D830  3606               	rlcf	?___lwdiv^0,f,c
  6899  00D832  3607               	rlcf	(?___lwdiv+1)^0,f,c
  6900  00D834  90D8               	bcf	status,0,c
  6901  00D836  3606               	rlcf	?___lwdiv^0,f,c
  6902  00D838  3607               	rlcf	(?___lwdiv+1)^0,f,c
  6903  00D83A  0E48               	movlw	72
  6904  00D83C  2606               	addwf	?___lwdiv^0,f,c
  6905  00D83E  0E00               	movlw	0
  6906  00D840  2207               	addwfc	(?___lwdiv+1)^0,f,c
  6907  00D842  0E71               	movlw	low __npowers_
  6908  00D844  2406               	addwf	?___lwdiv^0,w,c
  6909  00D846  6EF6               	movwf	tblptrl,c
  6910  00D848  0EFE               	movlw	high __npowers_
  6911  00D84A  2007               	addwfc	(?___lwdiv+1)^0,w,c
  6912  00D84C  6EF7               	movwf	tblptrh,c
  6913  00D84E                     	if	1	;There are 3 active tblptr bytes
  6914  00D84E  6AF8               	clrf	tblptru,c
  6915  00D850  0E00               	movlw	low (__mediumconst shr (0+16))
  6916  00D852  22F8               	addwfc	tblptru,f,c
  6917  00D854                     	endif
  6918  00D854  0009               	tblrd		*+
  6919  00D856  006F FFD4  F04B    	movff	tablat,___flmul@b
  6920  00D85C  0009               	tblrd		*+
  6921  00D85E  006F FFD4  F04C    	movff	tablat,___flmul@b+1
  6922  00D864  0009               	tblrd		*+
  6923  00D866  006F FFD4  F04D    	movff	tablat,___flmul@b+2
  6924  00D86C  000A               	tblrd		*-
  6925  00D86E  006F FFD4  F04E    	movff	tablat,___flmul@b+3
  6926  00D874  EC46  F06F         	call	___flmul	;wreg free
  6927  00D878  C04B  F071         	movff	?___flmul,_fround$1577
  6928  00D87C  C04C  F072         	movff	?___flmul+1,_fround$1577+1
  6929  00D880  C04D  F073         	movff	?___flmul+2,_fround$1577+2
  6930  00D884  C04E  F074         	movff	?___flmul+3,_fround$1577+3
  6931                           
  6932                           ;doprnt.c: 422: return 0.5 * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * 
      +                          _npowers_[prec%10U];
  6933  00D888  0E00               	movlw	0
  6934  00D88A  6E09               	movwf	(___lwdiv@divisor+1)^0,c
  6935  00D88C  0E0A               	movlw	10
  6936  00D88E  6E08               	movwf	___lwdiv@divisor^0,c
  6937  00D890  0E00               	movlw	0
  6938  00D892  6E04               	movwf	(___lwmod@divisor+1)^0,c
  6939  00D894  0E64               	movlw	100
  6940  00D896  6E03               	movwf	___lwmod@divisor^0,c
  6941  00D898  C075  F001         	movff	fround@prec,___lwmod@dividend
  6942  00D89C  6A02               	clrf	(___lwmod@dividend+1)^0,c
  6943  00D89E  ECF4  F05F         	call	___lwmod	;wreg free
  6944  00D8A2  C001  F006         	movff	?___lwmod,___lwdiv@dividend
  6945  00D8A6  C002  F007         	movff	?___lwmod+1,___lwdiv@dividend+1
  6946  00D8AA  EC26  F060         	call	___lwdiv	;wreg free
  6947  00D8AE  90D8               	bcf	status,0,c
  6948  00D8B0  3606               	rlcf	?___lwdiv^0,f,c
  6949  00D8B2  3607               	rlcf	(?___lwdiv+1)^0,f,c
  6950  00D8B4  90D8               	bcf	status,0,c
  6951  00D8B6  3606               	rlcf	?___lwdiv^0,f,c
  6952  00D8B8  3607               	rlcf	(?___lwdiv+1)^0,f,c
  6953  00D8BA  0E24               	movlw	36
  6954  00D8BC  2606               	addwf	?___lwdiv^0,f,c
  6955  00D8BE  0E00               	movlw	0
  6956  00D8C0  2207               	addwfc	(?___lwdiv+1)^0,f,c
  6957  00D8C2  0E71               	movlw	low __npowers_
  6958  00D8C4  2406               	addwf	?___lwdiv^0,w,c
  6959  00D8C6  6EF6               	movwf	tblptrl,c
  6960  00D8C8  0EFE               	movlw	high __npowers_
  6961  00D8CA  2007               	addwfc	(?___lwdiv+1)^0,w,c
  6962  00D8CC  6EF7               	movwf	tblptrh,c
  6963  00D8CE                     	if	1	;There are 3 active tblptr bytes
  6964  00D8CE  6AF8               	clrf	tblptru,c
  6965  00D8D0  0E00               	movlw	low (__mediumconst shr (0+16))
  6966  00D8D2  22F8               	addwfc	tblptru,f,c
  6967  00D8D4                     	endif
  6968  00D8D4  0009               	tblrd		*+
  6969  00D8D6  006F FFD4  F04F    	movff	tablat,___flmul@a
  6970  00D8DC  0009               	tblrd		*+
  6971  00D8DE  006F FFD4  F050    	movff	tablat,___flmul@a+1
  6972  00D8E4  0009               	tblrd		*+
  6973  00D8E6  006F FFD4  F051    	movff	tablat,___flmul@a+2
  6974  00D8EC  000A               	tblrd		*-
  6975  00D8EE  006F FFD4  F052    	movff	tablat,___flmul@a+3
  6976  00D8F4  C071  F04B         	movff	_fround$1577,___flmul@b
  6977  00D8F8  C072  F04C         	movff	_fround$1577+1,___flmul@b+1
  6978  00D8FC  C073  F04D         	movff	_fround$1577+2,___flmul@b+2
  6979  00D900  C074  F04E         	movff	_fround$1577+3,___flmul@b+3
  6980  00D904  EC46  F06F         	call	___flmul	;wreg free
  6981  00D908  C04B  F06D         	movff	?___flmul,_fround$1578
  6982  00D90C  C04C  F06E         	movff	?___flmul+1,_fround$1578+1
  6983  00D910  C04D  F06F         	movff	?___flmul+2,_fround$1578+2
  6984  00D914  C04E  F070         	movff	?___flmul+3,_fround$1578+3
  6985                           
  6986                           ;doprnt.c: 422: return 0.5 * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * 
      +                          _npowers_[prec%10U];
  6987  00D918  C06D  F04B         	movff	_fround$1578,___flmul@b
  6988  00D91C  C06E  F04C         	movff	_fround$1578+1,___flmul@b+1
  6989  00D920  C06F  F04D         	movff	_fround$1578+2,___flmul@b+2
  6990  00D924  C070  F04E         	movff	_fround$1578+3,___flmul@b+3
  6991  00D928  0E00               	movlw	0
  6992  00D92A  6E04               	movwf	(___lwmod@divisor+1)^0,c
  6993  00D92C  0E0A               	movlw	10
  6994  00D92E  6E03               	movwf	___lwmod@divisor^0,c
  6995  00D930  C075  F001         	movff	fround@prec,___lwmod@dividend
  6996  00D934  6A02               	clrf	(___lwmod@dividend+1)^0,c
  6997  00D936  ECF4  F05F         	call	___lwmod	;wreg free
  6998  00D93A  90D8               	bcf	status,0,c
  6999  00D93C  3601               	rlcf	?___lwmod^0,f,c
  7000  00D93E  3602               	rlcf	(?___lwmod+1)^0,f,c
  7001  00D940  90D8               	bcf	status,0,c
  7002  00D942  3601               	rlcf	?___lwmod^0,f,c
  7003  00D944  3602               	rlcf	(?___lwmod+1)^0,f,c
  7004  00D946  0E71               	movlw	low __npowers_
  7005  00D948  2401               	addwf	?___lwmod^0,w,c
  7006  00D94A  6EF6               	movwf	tblptrl,c
  7007  00D94C  0EFE               	movlw	high __npowers_
  7008  00D94E  2002               	addwfc	(?___lwmod+1)^0,w,c
  7009  00D950  6EF7               	movwf	tblptrh,c
  7010  00D952                     	if	1	;There are 3 active tblptr bytes
  7011  00D952  6AF8               	clrf	tblptru,c
  7012  00D954  0E00               	movlw	low (__mediumconst shr (0+16))
  7013  00D956  22F8               	addwfc	tblptru,f,c
  7014  00D958                     	endif
  7015  00D958  0009               	tblrd		*+
  7016  00D95A  006F FFD4  F04F    	movff	tablat,___flmul@a
  7017  00D960  0009               	tblrd		*+
  7018  00D962  006F FFD4  F050    	movff	tablat,___flmul@a+1
  7019  00D968  0009               	tblrd		*+
  7020  00D96A  006F FFD4  F051    	movff	tablat,___flmul@a+2
  7021  00D970  000A               	tblrd		*-
  7022  00D972  006F FFD4  F052    	movff	tablat,___flmul@a+3
  7023  00D978  EC46  F06F         	call	___flmul	;wreg free
  7024  00D97C  C04B  F057         	movff	?___flmul,?_fround
  7025  00D980  C04C  F058         	movff	?___flmul+1,?_fround+1
  7026  00D984  C04D  F059         	movff	?___flmul+2,?_fround+2
  7027  00D988  C04E  F05A         	movff	?___flmul+3,?_fround+3
  7028  00D98C  EF77  F06D         	goto	l448
  7029  00D990                     l3798:
  7030                           
  7031                           ; BSR set to: 0
  7032                           ;doprnt.c: 423: else if(prec > 10)
  7033  00D990  0E0A               	movlw	10
  7034  00D992  6575               	cpfsgt	fround@prec& (0+255),b
  7035  00D994  EFCE  F06C         	goto	u3661
  7036  00D998  EFD0  F06C         	goto	u3660
  7037  00D99C                     u3661:
  7038  00D99C  EF4A  F06D         	goto	l3804
  7039  00D9A0                     u3660:
  7040  00D9A0                     
  7041                           ; BSR set to: 0
  7042                           ;doprnt.c: 424: return 0.5 * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  7043  00D9A0  0E00               	movlw	0
  7044  00D9A2  6E4F               	movwf	___flmul@a^0,c
  7045  00D9A4  0E00               	movlw	0
  7046  00D9A6  6E50               	movwf	(___flmul@a+1)^0,c
  7047  00D9A8  0E00               	movlw	0
  7048  00D9AA  6E51               	movwf	(___flmul@a+2)^0,c
  7049  00D9AC  0E3F               	movlw	63
  7050  00D9AE  6E52               	movwf	(___flmul@a+3)^0,c
  7051  00D9B0  0E00               	movlw	0
  7052  00D9B2  6E09               	movwf	(___lwdiv@divisor+1)^0,c
  7053  00D9B4  0E0A               	movlw	10
  7054  00D9B6  6E08               	movwf	___lwdiv@divisor^0,c
  7055  00D9B8  C075  F006         	movff	fround@prec,___lwdiv@dividend
  7056  00D9BC  6A07               	clrf	(___lwdiv@dividend+1)^0,c
  7057  00D9BE  EC26  F060         	call	___lwdiv	;wreg free
  7058  00D9C2  90D8               	bcf	status,0,c
  7059  00D9C4  3606               	rlcf	?___lwdiv^0,f,c
  7060  00D9C6  3607               	rlcf	(?___lwdiv+1)^0,f,c
  7061  00D9C8  90D8               	bcf	status,0,c
  7062  00D9CA  3606               	rlcf	?___lwdiv^0,f,c
  7063  00D9CC  3607               	rlcf	(?___lwdiv+1)^0,f,c
  7064  00D9CE  0E24               	movlw	36
  7065  00D9D0  2606               	addwf	?___lwdiv^0,f,c
  7066  00D9D2  0E00               	movlw	0
  7067  00D9D4  2207               	addwfc	(?___lwdiv+1)^0,f,c
  7068  00D9D6  0E71               	movlw	low __npowers_
  7069  00D9D8  2406               	addwf	?___lwdiv^0,w,c
  7070  00D9DA  6EF6               	movwf	tblptrl,c
  7071  00D9DC  0EFE               	movlw	high __npowers_
  7072  00D9DE  2007               	addwfc	(?___lwdiv+1)^0,w,c
  7073  00D9E0  6EF7               	movwf	tblptrh,c
  7074  00D9E2                     	if	1	;There are 3 active tblptr bytes
  7075  00D9E2  6AF8               	clrf	tblptru,c
  7076  00D9E4  0E00               	movlw	low (__mediumconst shr (0+16))
  7077  00D9E6  22F8               	addwfc	tblptru,f,c
  7078  00D9E8                     	endif
  7079  00D9E8  0009               	tblrd		*+
  7080  00D9EA  006F FFD4  F04B    	movff	tablat,___flmul@b
  7081  00D9F0  0009               	tblrd		*+
  7082  00D9F2  006F FFD4  F04C    	movff	tablat,___flmul@b+1
  7083  00D9F8  0009               	tblrd		*+
  7084  00D9FA  006F FFD4  F04D    	movff	tablat,___flmul@b+2
  7085  00DA00  000A               	tblrd		*-
  7086  00DA02  006F FFD4  F04E    	movff	tablat,___flmul@b+3
  7087  00DA08  EC46  F06F         	call	___flmul	;wreg free
  7088  00DA0C  C04B  F071         	movff	?___flmul,_fround$1577
  7089  00DA10  C04C  F072         	movff	?___flmul+1,_fround$1577+1
  7090  00DA14  C04D  F073         	movff	?___flmul+2,_fround$1577+2
  7091  00DA18  C04E  F074         	movff	?___flmul+3,_fround$1577+3
  7092                           
  7093                           ;doprnt.c: 424: return 0.5 * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  7094  00DA1C  C071  F04B         	movff	_fround$1577,___flmul@b
  7095  00DA20  C072  F04C         	movff	_fround$1577+1,___flmul@b+1
  7096  00DA24  C073  F04D         	movff	_fround$1577+2,___flmul@b+2
  7097  00DA28  C074  F04E         	movff	_fround$1577+3,___flmul@b+3
  7098  00DA2C  0E00               	movlw	0
  7099  00DA2E  6E04               	movwf	(___lwmod@divisor+1)^0,c
  7100  00DA30  0E0A               	movlw	10
  7101  00DA32  6E03               	movwf	___lwmod@divisor^0,c
  7102  00DA34  C075  F001         	movff	fround@prec,___lwmod@dividend
  7103  00DA38  6A02               	clrf	(___lwmod@dividend+1)^0,c
  7104  00DA3A  ECF4  F05F         	call	___lwmod	;wreg free
  7105  00DA3E  90D8               	bcf	status,0,c
  7106  00DA40  3601               	rlcf	?___lwmod^0,f,c
  7107  00DA42  3602               	rlcf	(?___lwmod+1)^0,f,c
  7108  00DA44  90D8               	bcf	status,0,c
  7109  00DA46  3601               	rlcf	?___lwmod^0,f,c
  7110  00DA48  3602               	rlcf	(?___lwmod+1)^0,f,c
  7111  00DA4A  0E71               	movlw	low __npowers_
  7112  00DA4C  2401               	addwf	?___lwmod^0,w,c
  7113  00DA4E  6EF6               	movwf	tblptrl,c
  7114  00DA50  0EFE               	movlw	high __npowers_
  7115  00DA52  2002               	addwfc	(?___lwmod+1)^0,w,c
  7116  00DA54  6EF7               	movwf	tblptrh,c
  7117  00DA56                     	if	1	;There are 3 active tblptr bytes
  7118  00DA56  6AF8               	clrf	tblptru,c
  7119  00DA58  0E00               	movlw	low (__mediumconst shr (0+16))
  7120  00DA5A  22F8               	addwfc	tblptru,f,c
  7121  00DA5C                     	endif
  7122  00DA5C  0009               	tblrd		*+
  7123  00DA5E  006F FFD4  F04F    	movff	tablat,___flmul@a
  7124  00DA64  0009               	tblrd		*+
  7125  00DA66  006F FFD4  F050    	movff	tablat,___flmul@a+1
  7126  00DA6C  0009               	tblrd		*+
  7127  00DA6E  006F FFD4  F051    	movff	tablat,___flmul@a+2
  7128  00DA74  000A               	tblrd		*-
  7129  00DA76  006F FFD4  F052    	movff	tablat,___flmul@a+3
  7130  00DA7C  EC46  F06F         	call	___flmul	;wreg free
  7131  00DA80  C04B  F057         	movff	?___flmul,?_fround
  7132  00DA84  C04C  F058         	movff	?___flmul+1,?_fround+1
  7133  00DA88  C04D  F059         	movff	?___flmul+2,?_fround+2
  7134  00DA8C  C04E  F05A         	movff	?___flmul+3,?_fround+3
  7135  00DA90  EF77  F06D         	goto	l448
  7136  00DA94                     l3804:
  7137                           
  7138                           ; BSR set to: 0
  7139                           ;doprnt.c: 425: return 0.5 * _npowers_[prec];
  7140  00DA94  5175               	movf	fround@prec& (0+255),w,b
  7141  00DA96  0D04               	mullw	4
  7142  00DA98  0E71               	movlw	low __npowers_
  7143  00DA9A  24F3               	addwf	243,w,c
  7144  00DA9C  6EF6               	movwf	tblptrl,c
  7145  00DA9E  0EFE               	movlw	high __npowers_
  7146  00DAA0  20F4               	addwfc	244,w,c
  7147  00DAA2  6EF7               	movwf	tblptrh,c
  7148  00DAA4                     	if	1	;There are 3 active tblptr bytes
  7149  00DAA4  6AF8               	clrf	tblptru,c
  7150  00DAA6  0E00               	movlw	low (__mediumconst shr (0+16))
  7151  00DAA8  22F8               	addwfc	tblptru,f,c
  7152  00DAAA                     	endif
  7153  00DAAA  0009               	tblrd		*+
  7154  00DAAC  006F FFD4  F04B    	movff	tablat,___flmul@b
  7155  00DAB2  0009               	tblrd		*+
  7156  00DAB4  006F FFD4  F04C    	movff	tablat,___flmul@b+1
  7157  00DABA  0009               	tblrd		*+
  7158  00DABC  006F FFD4  F04D    	movff	tablat,___flmul@b+2
  7159  00DAC2  000A               	tblrd		*-
  7160  00DAC4  006F FFD4  F04E    	movff	tablat,___flmul@b+3
  7161  00DACA  0E00               	movlw	0
  7162  00DACC  6E4F               	movwf	___flmul@a^0,c
  7163  00DACE  0E00               	movlw	0
  7164  00DAD0  6E50               	movwf	(___flmul@a+1)^0,c
  7165  00DAD2  0E00               	movlw	0
  7166  00DAD4  6E51               	movwf	(___flmul@a+2)^0,c
  7167  00DAD6  0E3F               	movlw	63
  7168  00DAD8  6E52               	movwf	(___flmul@a+3)^0,c
  7169  00DADA  EC46  F06F         	call	___flmul	;wreg free
  7170  00DADE  C04B  F057         	movff	?___flmul,?_fround
  7171  00DAE2  C04C  F058         	movff	?___flmul+1,?_fround+1
  7172  00DAE6  C04D  F059         	movff	?___flmul+2,?_fround+2
  7173  00DAEA  C04E  F05A         	movff	?___flmul+3,?_fround+3
  7174  00DAEE                     l448:
  7175  00DAEE  0012               	return		;funcret
  7176  00DAF0                     __end_of_fround:
  7177                           	callstack 0
  7178                           
  7179 ;; *************** function ___lwmod *****************
  7180 ;; Defined at:
  7181 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\lwmod.c"
  7182 ;; Parameters:    Size  Location     Type
  7183 ;;  dividend        2    0[COMRAM] unsigned int 
  7184 ;;  divisor         2    2[COMRAM] unsigned int 
  7185 ;; Auto vars:     Size  Location     Type
  7186 ;;  counter         1    4[COMRAM] unsigned char 
  7187 ;; Return value:  Size  Location     Type
  7188 ;;                  2    0[COMRAM] unsigned int 
  7189 ;; Registers used:
  7190 ;;		wreg, status,2, status,0
  7191 ;; Tracked objects:
  7192 ;;		On entry : 0/0
  7193 ;;		On exit  : 0/0
  7194 ;;		Unchanged: 0/0
  7195 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7196 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7197 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7198 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7199 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7200 ;;Total ram usage:        5 bytes
  7201 ;; Hardware stack levels used:    1
  7202 ;; This function calls:
  7203 ;;		Nothing
  7204 ;; This function is called by:
  7205 ;;		_fround
  7206 ;; This function uses a non-reentrant model
  7207 ;;
  7208                           
  7209                           	psect	text19
  7210  00BFE8                     __ptext19:
  7211                           	callstack 0
  7212  00BFE8                     ___lwmod:
  7213                           	callstack 28
  7214  00BFE8  5003               	movf	___lwmod@divisor^0,w,c
  7215  00BFEA  1004               	iorwf	(___lwmod@divisor+1)^0,w,c
  7216  00BFEC  B4D8               	btfsc	status,2,c
  7217  00BFEE  EFFB  F05F         	goto	u3501
  7218  00BFF2  EFFD  F05F         	goto	u3500
  7219  00BFF6                     u3501:
  7220  00BFF6  EF21  F060         	goto	l1072
  7221  00BFFA                     u3500:
  7222  00BFFA  0E01               	movlw	1
  7223  00BFFC  6E05               	movwf	___lwmod@counter^0,c
  7224  00BFFE  EF05  F060         	goto	l3706
  7225  00C002                     l3704:
  7226  00C002  90D8               	bcf	status,0,c
  7227  00C004  3603               	rlcf	___lwmod@divisor^0,f,c
  7228  00C006  3604               	rlcf	(___lwmod@divisor+1)^0,f,c
  7229  00C008  2A05               	incf	___lwmod@counter^0,f,c
  7230  00C00A                     l3706:
  7231  00C00A  AE04               	btfss	(___lwmod@divisor+1)^0,7,c
  7232  00C00C  EF0A  F060         	goto	u3511
  7233  00C010  EF0C  F060         	goto	u3510
  7234  00C014                     u3511:
  7235  00C014  EF01  F060         	goto	l3704
  7236  00C018                     u3510:
  7237  00C018                     l3708:
  7238  00C018  5003               	movf	___lwmod@divisor^0,w,c
  7239  00C01A  5C01               	subwf	___lwmod@dividend^0,w,c
  7240  00C01C  5004               	movf	(___lwmod@divisor+1)^0,w,c
  7241  00C01E  5802               	subwfb	(___lwmod@dividend+1)^0,w,c
  7242  00C020  A0D8               	btfss	status,0,c
  7243  00C022  EF15  F060         	goto	u3521
  7244  00C026  EF17  F060         	goto	u3520
  7245  00C02A                     u3521:
  7246  00C02A  EF1B  F060         	goto	l3712
  7247  00C02E                     u3520:
  7248  00C02E  5003               	movf	___lwmod@divisor^0,w,c
  7249  00C030  5E01               	subwf	___lwmod@dividend^0,f,c
  7250  00C032  5004               	movf	(___lwmod@divisor+1)^0,w,c
  7251  00C034  5A02               	subwfb	(___lwmod@dividend+1)^0,f,c
  7252  00C036                     l3712:
  7253  00C036  90D8               	bcf	status,0,c
  7254  00C038  3204               	rrcf	(___lwmod@divisor+1)^0,f,c
  7255  00C03A  3203               	rrcf	___lwmod@divisor^0,f,c
  7256  00C03C  2E05               	decfsz	___lwmod@counter^0,f,c
  7257  00C03E  EF0C  F060         	goto	l3708
  7258  00C042                     l1072:
  7259  00C042  C001  F001         	movff	___lwmod@dividend,?___lwmod
  7260  00C046  C002  F002         	movff	___lwmod@dividend+1,?___lwmod+1
  7261  00C04A  0012               	return		;funcret
  7262  00C04C                     __end_of___lwmod:
  7263                           	callstack 0
  7264                           
  7265 ;; *************** function ___lwdiv *****************
  7266 ;; Defined at:
  7267 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\lwdiv.c"
  7268 ;; Parameters:    Size  Location     Type
  7269 ;;  dividend        2    5[COMRAM] unsigned int 
  7270 ;;  divisor         2    7[COMRAM] unsigned int 
  7271 ;; Auto vars:     Size  Location     Type
  7272 ;;  quotient        2    9[COMRAM] unsigned int 
  7273 ;;  counter         1   11[COMRAM] unsigned char 
  7274 ;; Return value:  Size  Location     Type
  7275 ;;                  2    5[COMRAM] unsigned int 
  7276 ;; Registers used:
  7277 ;;		wreg, status,2, status,0
  7278 ;; Tracked objects:
  7279 ;;		On entry : 0/0
  7280 ;;		On exit  : 0/0
  7281 ;;		Unchanged: 0/0
  7282 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7283 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7284 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7285 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7286 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7287 ;;Total ram usage:        7 bytes
  7288 ;; Hardware stack levels used:    1
  7289 ;; This function calls:
  7290 ;;		Nothing
  7291 ;; This function is called by:
  7292 ;;		_fround
  7293 ;; This function uses a non-reentrant model
  7294 ;;
  7295                           
  7296                           	psect	text20
  7297  00C04C                     __ptext20:
  7298                           	callstack 0
  7299  00C04C                     ___lwdiv:
  7300                           	callstack 28
  7301  00C04C  0E00               	movlw	0
  7302  00C04E  6E0B               	movwf	(___lwdiv@quotient+1)^0,c
  7303  00C050  0E00               	movlw	0
  7304  00C052  6E0A               	movwf	___lwdiv@quotient^0,c
  7305  00C054  5008               	movf	___lwdiv@divisor^0,w,c
  7306  00C056  1009               	iorwf	(___lwdiv@divisor+1)^0,w,c
  7307  00C058  B4D8               	btfsc	status,2,c
  7308  00C05A  EF31  F060         	goto	u3471
  7309  00C05E  EF33  F060         	goto	u3470
  7310  00C062                     u3471:
  7311  00C062  EF5B  F060         	goto	l1062
  7312  00C066                     u3470:
  7313  00C066  0E01               	movlw	1
  7314  00C068  6E0C               	movwf	___lwdiv@counter^0,c
  7315  00C06A  EF3B  F060         	goto	l3686
  7316  00C06E                     l3684:
  7317  00C06E  90D8               	bcf	status,0,c
  7318  00C070  3608               	rlcf	___lwdiv@divisor^0,f,c
  7319  00C072  3609               	rlcf	(___lwdiv@divisor+1)^0,f,c
  7320  00C074  2A0C               	incf	___lwdiv@counter^0,f,c
  7321  00C076                     l3686:
  7322  00C076  AE09               	btfss	(___lwdiv@divisor+1)^0,7,c
  7323  00C078  EF40  F060         	goto	u3481
  7324  00C07C  EF42  F060         	goto	u3480
  7325  00C080                     u3481:
  7326  00C080  EF37  F060         	goto	l3684
  7327  00C084                     u3480:
  7328  00C084                     l3688:
  7329  00C084  90D8               	bcf	status,0,c
  7330  00C086  360A               	rlcf	___lwdiv@quotient^0,f,c
  7331  00C088  360B               	rlcf	(___lwdiv@quotient+1)^0,f,c
  7332  00C08A  5008               	movf	___lwdiv@divisor^0,w,c
  7333  00C08C  5C06               	subwf	___lwdiv@dividend^0,w,c
  7334  00C08E  5009               	movf	(___lwdiv@divisor+1)^0,w,c
  7335  00C090  5807               	subwfb	(___lwdiv@dividend+1)^0,w,c
  7336  00C092  A0D8               	btfss	status,0,c
  7337  00C094  EF4E  F060         	goto	u3491
  7338  00C098  EF50  F060         	goto	u3490
  7339  00C09C                     u3491:
  7340  00C09C  EF55  F060         	goto	l3696
  7341  00C0A0                     u3490:
  7342  00C0A0  5008               	movf	___lwdiv@divisor^0,w,c
  7343  00C0A2  5E06               	subwf	___lwdiv@dividend^0,f,c
  7344  00C0A4  5009               	movf	(___lwdiv@divisor+1)^0,w,c
  7345  00C0A6  5A07               	subwfb	(___lwdiv@dividend+1)^0,f,c
  7346  00C0A8  800A               	bsf	___lwdiv@quotient^0,0,c
  7347  00C0AA                     l3696:
  7348  00C0AA  90D8               	bcf	status,0,c
  7349  00C0AC  3209               	rrcf	(___lwdiv@divisor+1)^0,f,c
  7350  00C0AE  3208               	rrcf	___lwdiv@divisor^0,f,c
  7351  00C0B0  2E0C               	decfsz	___lwdiv@counter^0,f,c
  7352  00C0B2  EF42  F060         	goto	l3688
  7353  00C0B6                     l1062:
  7354  00C0B6  C00A  F006         	movff	___lwdiv@quotient,?___lwdiv
  7355  00C0BA  C00B  F007         	movff	___lwdiv@quotient+1,?___lwdiv+1
  7356  00C0BE  0012               	return		;funcret
  7357  00C0C0                     __end_of___lwdiv:
  7358                           	callstack 0
  7359                           
  7360 ;; *************** function ___flmul *****************
  7361 ;; Defined at:
  7362 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\sprcmul.c"
  7363 ;; Parameters:    Size  Location     Type
  7364 ;;  b               4   74[COMRAM] unsigned int 
  7365 ;;  a               4   78[COMRAM] unsigned int 
  7366 ;; Auto vars:     Size  Location     Type
  7367 ;;  prod            4    7[BANK0 ] struct .
  7368 ;;  grs             4    1[BANK0 ] unsigned long 
  7369 ;;  temp            2   11[BANK0 ] struct .
  7370 ;;  bexp            1    6[BANK0 ] unsigned char 
  7371 ;;  aexp            1    5[BANK0 ] unsigned char 
  7372 ;;  sign            1    0[BANK0 ] unsigned char 
  7373 ;; Return value:  Size  Location     Type
  7374 ;;                  4   74[COMRAM] unsigned char 
  7375 ;; Registers used:
  7376 ;;		wreg, status,2, status,0, prodl, prodh
  7377 ;; Tracked objects:
  7378 ;;		On entry : 0/0
  7379 ;;		On exit  : 0/0
  7380 ;;		Unchanged: 0/0
  7381 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7382 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7383 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7384 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7385 ;;      Totals:        12      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7386 ;;Total ram usage:       25 bytes
  7387 ;; Hardware stack levels used:    1
  7388 ;; This function calls:
  7389 ;;		Nothing
  7390 ;; This function is called by:
  7391 ;;		_main
  7392 ;;		_fround
  7393 ;;		_scale
  7394 ;;		_printf
  7395 ;;		_pow
  7396 ;;		_exp
  7397 ;;		_eval_poly
  7398 ;;		_log
  7399 ;; This function uses a non-reentrant model
  7400 ;;
  7401                           
  7402                           	psect	text21
  7403  00DE8C                     __ptext21:
  7404                           	callstack 0
  7405  00DE8C                     ___flmul:
  7406                           	callstack 28
  7407  00DE8C  504E               	movf	(___flmul@b+3)^0,w,c
  7408  00DE8E  0B80               	andlw	128
  7409  00DE90  0100               	movlb	0	; () banked
  7410  00DE92  6F60               	movwf	___flmul@sign& (0+255),b
  7411  00DE94  504E               	movf	(___flmul@b+3)^0,w,c
  7412  00DE96  244E               	addwf	(___flmul@b+3)^0,w,c
  7413  00DE98  6F66               	movwf	___flmul@bexp& (0+255),b
  7414  00DE9A                     
  7415                           ; BSR set to: 0
  7416  00DE9A  AE4D               	btfss	(___flmul@b+2)^0,7,c
  7417  00DE9C  EF52  F06F         	goto	u3041
  7418  00DEA0  EF54  F06F         	goto	u3040
  7419  00DEA4                     u3041:
  7420  00DEA4  EF55  F06F         	goto	l3408
  7421  00DEA8                     u3040:
  7422  00DEA8                     
  7423                           ; BSR set to: 0
  7424  00DEA8  8166               	bsf	___flmul@bexp& (0+255),0,b
  7425  00DEAA                     l3408:
  7426                           
  7427                           ; BSR set to: 0
  7428  00DEAA  5166               	movf	___flmul@bexp& (0+255),w,b
  7429  00DEAC  B4D8               	btfsc	status,2,c
  7430  00DEAE  EF5B  F06F         	goto	u3051
  7431  00DEB2  EF5D  F06F         	goto	u3050
  7432  00DEB6                     u3051:
  7433  00DEB6  EF70  F06F         	goto	l3416
  7434  00DEBA                     u3050:
  7435  00DEBA                     
  7436                           ; BSR set to: 0
  7437  00DEBA  2966               	incf	___flmul@bexp& (0+255),w,b
  7438  00DEBC  A4D8               	btfss	status,2,c
  7439  00DEBE  EF63  F06F         	goto	u3061
  7440  00DEC2  EF65  F06F         	goto	u3060
  7441  00DEC6                     u3061:
  7442  00DEC6  EF6D  F06F         	goto	l3414
  7443  00DECA                     u3060:
  7444  00DECA                     
  7445                           ; BSR set to: 0
  7446  00DECA  0E00               	movlw	0
  7447  00DECC  6E4B               	movwf	___flmul@b^0,c
  7448  00DECE  0E00               	movlw	0
  7449  00DED0  6E4C               	movwf	(___flmul@b+1)^0,c
  7450  00DED2  0E00               	movlw	0
  7451  00DED4  6E4D               	movwf	(___flmul@b+2)^0,c
  7452  00DED6  0E00               	movlw	0
  7453  00DED8  6E4E               	movwf	(___flmul@b+3)^0,c
  7454  00DEDA                     l3414:
  7455                           
  7456                           ; BSR set to: 0
  7457  00DEDA  8E4D               	bsf	(___flmul@b+2)^0,7,c
  7458  00DEDC  EF78  F06F         	goto	l3418
  7459  00DEE0                     l3416:
  7460                           
  7461                           ; BSR set to: 0
  7462  00DEE0  0E00               	movlw	0
  7463  00DEE2  6E4B               	movwf	___flmul@b^0,c
  7464  00DEE4  0E00               	movlw	0
  7465  00DEE6  6E4C               	movwf	(___flmul@b+1)^0,c
  7466  00DEE8  0E00               	movlw	0
  7467  00DEEA  6E4D               	movwf	(___flmul@b+2)^0,c
  7468  00DEEC  0E00               	movlw	0
  7469  00DEEE  6E4E               	movwf	(___flmul@b+3)^0,c
  7470  00DEF0                     l3418:
  7471                           
  7472                           ; BSR set to: 0
  7473  00DEF0  5052               	movf	(___flmul@a+3)^0,w,c
  7474  00DEF2  0B80               	andlw	128
  7475  00DEF4  1B60               	xorwf	___flmul@sign& (0+255),f,b
  7476  00DEF6                     
  7477                           ; BSR set to: 0
  7478  00DEF6  5052               	movf	(___flmul@a+3)^0,w,c
  7479  00DEF8  2452               	addwf	(___flmul@a+3)^0,w,c
  7480  00DEFA  6F65               	movwf	___flmul@aexp& (0+255),b
  7481  00DEFC                     
  7482                           ; BSR set to: 0
  7483  00DEFC  AE51               	btfss	(___flmul@a+2)^0,7,c
  7484  00DEFE  EF83  F06F         	goto	u3071
  7485  00DF02  EF85  F06F         	goto	u3070
  7486  00DF06                     u3071:
  7487  00DF06  EF86  F06F         	goto	l3426
  7488  00DF0A                     u3070:
  7489  00DF0A                     
  7490                           ; BSR set to: 0
  7491  00DF0A  8165               	bsf	___flmul@aexp& (0+255),0,b
  7492  00DF0C                     l3426:
  7493                           
  7494                           ; BSR set to: 0
  7495  00DF0C  5165               	movf	___flmul@aexp& (0+255),w,b
  7496  00DF0E  B4D8               	btfsc	status,2,c
  7497  00DF10  EF8C  F06F         	goto	u3081
  7498  00DF14  EF8E  F06F         	goto	u3080
  7499  00DF18                     u3081:
  7500  00DF18  EFA1  F06F         	goto	l3434
  7501  00DF1C                     u3080:
  7502  00DF1C                     
  7503                           ; BSR set to: 0
  7504  00DF1C  2965               	incf	___flmul@aexp& (0+255),w,b
  7505  00DF1E  A4D8               	btfss	status,2,c
  7506  00DF20  EF94  F06F         	goto	u3091
  7507  00DF24  EF96  F06F         	goto	u3090
  7508  00DF28                     u3091:
  7509  00DF28  EF9E  F06F         	goto	l3432
  7510  00DF2C                     u3090:
  7511  00DF2C                     
  7512                           ; BSR set to: 0
  7513  00DF2C  0E00               	movlw	0
  7514  00DF2E  6E4F               	movwf	___flmul@a^0,c
  7515  00DF30  0E00               	movlw	0
  7516  00DF32  6E50               	movwf	(___flmul@a+1)^0,c
  7517  00DF34  0E00               	movlw	0
  7518  00DF36  6E51               	movwf	(___flmul@a+2)^0,c
  7519  00DF38  0E00               	movlw	0
  7520  00DF3A  6E52               	movwf	(___flmul@a+3)^0,c
  7521  00DF3C                     l3432:
  7522                           
  7523                           ; BSR set to: 0
  7524  00DF3C  8E51               	bsf	(___flmul@a+2)^0,7,c
  7525  00DF3E  EFA9  F06F         	goto	l1185
  7526  00DF42                     l3434:
  7527                           
  7528                           ; BSR set to: 0
  7529  00DF42  0E00               	movlw	0
  7530  00DF44  6E4F               	movwf	___flmul@a^0,c
  7531  00DF46  0E00               	movlw	0
  7532  00DF48  6E50               	movwf	(___flmul@a+1)^0,c
  7533  00DF4A  0E00               	movlw	0
  7534  00DF4C  6E51               	movwf	(___flmul@a+2)^0,c
  7535  00DF4E  0E00               	movlw	0
  7536  00DF50  6E52               	movwf	(___flmul@a+3)^0,c
  7537  00DF52                     l1185:
  7538                           
  7539                           ; BSR set to: 0
  7540  00DF52  5165               	movf	___flmul@aexp& (0+255),w,b
  7541  00DF54  B4D8               	btfsc	status,2,c
  7542  00DF56  EFAF  F06F         	goto	u3101
  7543  00DF5A  EFB1  F06F         	goto	u3100
  7544  00DF5E                     u3101:
  7545  00DF5E  EFB9  F06F         	goto	l3438
  7546  00DF62                     u3100:
  7547  00DF62                     
  7548                           ; BSR set to: 0
  7549  00DF62  5166               	movf	___flmul@bexp& (0+255),w,b
  7550  00DF64  A4D8               	btfss	status,2,c
  7551  00DF66  EFB7  F06F         	goto	u3111
  7552  00DF6A  EFB9  F06F         	goto	u3110
  7553  00DF6E                     u3111:
  7554  00DF6E  EFC3  F06F         	goto	l3442
  7555  00DF72                     u3110:
  7556  00DF72                     l3438:
  7557                           
  7558                           ; BSR set to: 0
  7559  00DF72  0E00               	movlw	0
  7560  00DF74  6E4B               	movwf	?___flmul^0,c
  7561  00DF76  0E00               	movlw	0
  7562  00DF78  6E4C               	movwf	(?___flmul+1)^0,c
  7563  00DF7A  0E00               	movlw	0
  7564  00DF7C  6E4D               	movwf	(?___flmul+2)^0,c
  7565  00DF7E  0E00               	movlw	0
  7566  00DF80  6E4E               	movwf	(?___flmul+3)^0,c
  7567  00DF82  EF6D  F071         	goto	l1189
  7568  00DF86                     l3442:
  7569                           
  7570                           ; BSR set to: 0
  7571  00DF86  5051               	movf	(___flmul@a+2)^0,w,c
  7572  00DF88  024B               	mulwf	___flmul@b^0,c
  7573  00DF8A  006F FFCC  F06B    	movff	prodl,___flmul@temp
  7574  00DF90  006F FFD0  F06C    	movff	prodh,___flmul@temp+1
  7575  00DF96                     
  7576                           ; BSR set to: 0
  7577  00DF96  516B               	movf	___flmul@temp& (0+255),w,b
  7578  00DF98  6F61               	movwf	___flmul@grs& (0+255),b
  7579  00DF9A  6B62               	clrf	(___flmul@grs+1)& (0+255),b
  7580  00DF9C  6B63               	clrf	(___flmul@grs+2)& (0+255),b
  7581  00DF9E  6B64               	clrf	(___flmul@grs+3)& (0+255),b
  7582  00DFA0                     
  7583                           ; BSR set to: 0
  7584  00DFA0  516C               	movf	(___flmul@temp+1)& (0+255),w,b
  7585  00DFA2  6F67               	movwf	___flmul@prod& (0+255),b
  7586  00DFA4  6B68               	clrf	(___flmul@prod+1)& (0+255),b
  7587  00DFA6  6B69               	clrf	(___flmul@prod+2)& (0+255),b
  7588  00DFA8  6B6A               	clrf	(___flmul@prod+3)& (0+255),b
  7589  00DFAA  5050               	movf	(___flmul@a+1)^0,w,c
  7590  00DFAC  024C               	mulwf	(___flmul@b+1)^0,c
  7591  00DFAE  006F FFCC  F06B    	movff	prodl,___flmul@temp
  7592  00DFB4  006F FFD0  F06C    	movff	prodh,___flmul@temp+1
  7593  00DFBA                     
  7594                           ; BSR set to: 0
  7595  00DFBA  516B               	movf	___flmul@temp& (0+255),w,b
  7596  00DFBC  2761               	addwf	___flmul@grs& (0+255),f,b
  7597  00DFBE  0E00               	movlw	0
  7598  00DFC0  2362               	addwfc	(___flmul@grs+1)& (0+255),f,b
  7599  00DFC2  2363               	addwfc	(___flmul@grs+2)& (0+255),f,b
  7600  00DFC4  2364               	addwfc	(___flmul@grs+3)& (0+255),f,b
  7601  00DFC6                     
  7602                           ; BSR set to: 0
  7603  00DFC6  516C               	movf	(___flmul@temp+1)& (0+255),w,b
  7604  00DFC8  2767               	addwf	___flmul@prod& (0+255),f,b
  7605  00DFCA  0E00               	movlw	0
  7606  00DFCC  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
  7607  00DFCE  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
  7608  00DFD0  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
  7609  00DFD2  504F               	movf	___flmul@a^0,w,c
  7610  00DFD4  024D               	mulwf	(___flmul@b+2)^0,c
  7611  00DFD6  006F FFCC  F06B    	movff	prodl,___flmul@temp
  7612  00DFDC  006F FFD0  F06C    	movff	prodh,___flmul@temp+1
  7613  00DFE2                     
  7614                           ; BSR set to: 0
  7615  00DFE2  516B               	movf	___flmul@temp& (0+255),w,b
  7616  00DFE4  2761               	addwf	___flmul@grs& (0+255),f,b
  7617  00DFE6  0E00               	movlw	0
  7618  00DFE8  2362               	addwfc	(___flmul@grs+1)& (0+255),f,b
  7619  00DFEA  2363               	addwfc	(___flmul@grs+2)& (0+255),f,b
  7620  00DFEC  2364               	addwfc	(___flmul@grs+3)& (0+255),f,b
  7621  00DFEE                     
  7622                           ; BSR set to: 0
  7623  00DFEE  516C               	movf	(___flmul@temp+1)& (0+255),w,b
  7624  00DFF0  2767               	addwf	___flmul@prod& (0+255),f,b
  7625  00DFF2  0E00               	movlw	0
  7626  00DFF4  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
  7627  00DFF6  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
  7628  00DFF8  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
  7629  00DFFA                     
  7630                           ; BSR set to: 0
  7631  00DFFA  C063  F064         	movff	___flmul@grs+2,___flmul@grs+3
  7632  00DFFE  C062  F063         	movff	___flmul@grs+1,___flmul@grs+2
  7633  00E002  C061  F062         	movff	___flmul@grs,___flmul@grs+1
  7634  00E006  6B61               	clrf	___flmul@grs& (0+255),b
  7635  00E008                     
  7636                           ; BSR set to: 0
  7637  00E008  504F               	movf	___flmul@a^0,w,c
  7638  00E00A  024C               	mulwf	(___flmul@b+1)^0,c
  7639  00E00C  006F FFCC  F06B    	movff	prodl,___flmul@temp
  7640  00E012  006F FFD0  F06C    	movff	prodh,___flmul@temp+1
  7641  00E018                     
  7642                           ; BSR set to: 0
  7643  00E018  516B               	movf	___flmul@temp& (0+255),w,b
  7644  00E01A  2761               	addwf	___flmul@grs& (0+255),f,b
  7645  00E01C  516C               	movf	(___flmul@temp+1)& (0+255),w,b
  7646  00E01E  2362               	addwfc	(___flmul@grs+1)& (0+255),f,b
  7647  00E020  0E00               	movlw	0
  7648  00E022  2363               	addwfc	(___flmul@grs+2)& (0+255),f,b
  7649  00E024  0E00               	movlw	0
  7650  00E026  2364               	addwfc	(___flmul@grs+3)& (0+255),f,b
  7651  00E028                     
  7652                           ; BSR set to: 0
  7653  00E028  5050               	movf	(___flmul@a+1)^0,w,c
  7654  00E02A  024B               	mulwf	___flmul@b^0,c
  7655  00E02C  006F FFCC  F06B    	movff	prodl,___flmul@temp
  7656  00E032  006F FFD0  F06C    	movff	prodh,___flmul@temp+1
  7657  00E038                     
  7658                           ; BSR set to: 0
  7659  00E038  516B               	movf	___flmul@temp& (0+255),w,b
  7660  00E03A  2761               	addwf	___flmul@grs& (0+255),f,b
  7661  00E03C  516C               	movf	(___flmul@temp+1)& (0+255),w,b
  7662  00E03E  2362               	addwfc	(___flmul@grs+1)& (0+255),f,b
  7663  00E040  0E00               	movlw	0
  7664  00E042  2363               	addwfc	(___flmul@grs+2)& (0+255),f,b
  7665  00E044  0E00               	movlw	0
  7666  00E046  2364               	addwfc	(___flmul@grs+3)& (0+255),f,b
  7667  00E048                     
  7668                           ; BSR set to: 0
  7669  00E048  C063  F064         	movff	___flmul@grs+2,___flmul@grs+3
  7670  00E04C  C062  F063         	movff	___flmul@grs+1,___flmul@grs+2
  7671  00E050  C061  F062         	movff	___flmul@grs,___flmul@grs+1
  7672  00E054  6B61               	clrf	___flmul@grs& (0+255),b
  7673  00E056  504F               	movf	___flmul@a^0,w,c
  7674  00E058  024B               	mulwf	___flmul@b^0,c
  7675  00E05A  006F FFCC  F06B    	movff	prodl,___flmul@temp
  7676  00E060  006F FFD0  F06C    	movff	prodh,___flmul@temp+1
  7677  00E066                     
  7678                           ; BSR set to: 0
  7679  00E066  516B               	movf	___flmul@temp& (0+255),w,b
  7680  00E068  2761               	addwf	___flmul@grs& (0+255),f,b
  7681  00E06A  516C               	movf	(___flmul@temp+1)& (0+255),w,b
  7682  00E06C  2362               	addwfc	(___flmul@grs+1)& (0+255),f,b
  7683  00E06E  0E00               	movlw	0
  7684  00E070  2363               	addwfc	(___flmul@grs+2)& (0+255),f,b
  7685  00E072  0E00               	movlw	0
  7686  00E074  2364               	addwfc	(___flmul@grs+3)& (0+255),f,b
  7687  00E076                     
  7688                           ; BSR set to: 0
  7689  00E076  5051               	movf	(___flmul@a+2)^0,w,c
  7690  00E078  024C               	mulwf	(___flmul@b+1)^0,c
  7691  00E07A  006F FFCC  F06B    	movff	prodl,___flmul@temp
  7692  00E080  006F FFD0  F06C    	movff	prodh,___flmul@temp+1
  7693  00E086  516B               	movf	___flmul@temp& (0+255),w,b
  7694  00E088  2767               	addwf	___flmul@prod& (0+255),f,b
  7695  00E08A  516C               	movf	(___flmul@temp+1)& (0+255),w,b
  7696  00E08C  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
  7697  00E08E  0E00               	movlw	0
  7698  00E090  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
  7699  00E092  0E00               	movlw	0
  7700  00E094  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
  7701  00E096                     
  7702                           ; BSR set to: 0
  7703  00E096  5050               	movf	(___flmul@a+1)^0,w,c
  7704  00E098  024D               	mulwf	(___flmul@b+2)^0,c
  7705  00E09A  006F FFCC  F06B    	movff	prodl,___flmul@temp
  7706  00E0A0  006F FFD0  F06C    	movff	prodh,___flmul@temp+1
  7707  00E0A6                     
  7708                           ; BSR set to: 0
  7709  00E0A6  516B               	movf	___flmul@temp& (0+255),w,b
  7710  00E0A8  2767               	addwf	___flmul@prod& (0+255),f,b
  7711  00E0AA  516C               	movf	(___flmul@temp+1)& (0+255),w,b
  7712  00E0AC  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
  7713  00E0AE  0E00               	movlw	0
  7714  00E0B0  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
  7715  00E0B2  0E00               	movlw	0
  7716  00E0B4  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
  7717  00E0B6  5051               	movf	(___flmul@a+2)^0,w,c
  7718  00E0B8  024D               	mulwf	(___flmul@b+2)^0,c
  7719  00E0BA  006F FFCC  F06B    	movff	prodl,___flmul@temp
  7720  00E0C0  006F FFD0  F06C    	movff	prodh,___flmul@temp+1
  7721  00E0C6                     
  7722                           ; BSR set to: 0
  7723  00E0C6  516B               	movf	___flmul@temp& (0+255),w,b
  7724  00E0C8  6E53               	movwf	??___flmul^0,c
  7725  00E0CA  516C               	movf	(___flmul@temp+1)& (0+255),w,b
  7726  00E0CC  6E54               	movwf	(??___flmul+1)^0,c
  7727  00E0CE  6A55               	clrf	(??___flmul+2)^0,c
  7728  00E0D0  6A56               	clrf	(??___flmul+3)^0,c
  7729  00E0D2  C055  F056         	movff	??___flmul+2,??___flmul+3
  7730  00E0D6  C054  F055         	movff	??___flmul+1,??___flmul+2
  7731  00E0DA  C053  F054         	movff	??___flmul,??___flmul+1
  7732  00E0DE  6A53               	clrf	??___flmul^0,c
  7733  00E0E0  5053               	movf	??___flmul^0,w,c
  7734  00E0E2  2767               	addwf	___flmul@prod& (0+255),f,b
  7735  00E0E4  5054               	movf	(??___flmul+1)^0,w,c
  7736  00E0E6  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
  7737  00E0E8  5055               	movf	(??___flmul+2)^0,w,c
  7738  00E0EA  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
  7739  00E0EC  5056               	movf	(??___flmul+3)^0,w,c
  7740  00E0EE  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
  7741  00E0F0                     
  7742                           ; BSR set to: 0
  7743  00E0F0  C061  F053         	movff	___flmul@grs,??___flmul
  7744  00E0F4  C062  F054         	movff	___flmul@grs+1,??___flmul+1
  7745  00E0F8  C063  F055         	movff	___flmul@grs+2,??___flmul+2
  7746  00E0FC  C064  F056         	movff	___flmul@grs+3,??___flmul+3
  7747  00E100  0E19               	movlw	25
  7748  00E102  EF88  F070         	goto	u3120
  7749  00E106                     u3125:
  7750  00E106  90D8               	bcf	status,0,c
  7751  00E108  3256               	rrcf	(??___flmul+3)^0,f,c
  7752  00E10A  3255               	rrcf	(??___flmul+2)^0,f,c
  7753  00E10C  3254               	rrcf	(??___flmul+1)^0,f,c
  7754  00E10E  3253               	rrcf	??___flmul^0,f,c
  7755  00E110                     u3120:
  7756  00E110  2EE8               	decfsz	wreg,f,c
  7757  00E112  EF83  F070         	goto	u3125
  7758  00E116  5053               	movf	??___flmul^0,w,c
  7759  00E118  2767               	addwf	___flmul@prod& (0+255),f,b
  7760  00E11A  5054               	movf	(??___flmul+1)^0,w,c
  7761  00E11C  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
  7762  00E11E  5055               	movf	(??___flmul+2)^0,w,c
  7763  00E120  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
  7764  00E122  5056               	movf	(??___flmul+3)^0,w,c
  7765  00E124  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
  7766  00E126                     
  7767                           ; BSR set to: 0
  7768  00E126  C063  F064         	movff	___flmul@grs+2,___flmul@grs+3
  7769  00E12A  C062  F063         	movff	___flmul@grs+1,___flmul@grs+2
  7770  00E12E  C061  F062         	movff	___flmul@grs,___flmul@grs+1
  7771  00E132  6B61               	clrf	___flmul@grs& (0+255),b
  7772  00E134                     
  7773                           ; BSR set to: 0
  7774  00E134  5165               	movf	___flmul@aexp& (0+255),w,b
  7775  00E136  C066  F053         	movff	___flmul@bexp,??___flmul
  7776  00E13A  6A54               	clrf	(??___flmul+1)^0,c
  7777  00E13C  2653               	addwf	??___flmul^0,f,c
  7778  00E13E  0E00               	movlw	0
  7779  00E140  2254               	addwfc	(??___flmul+1)^0,f,c
  7780  00E142  0E82               	movlw	130
  7781  00E144  2453               	addwf	??___flmul^0,w,c
  7782  00E146  6F6B               	movwf	___flmul@temp& (0+255),b
  7783  00E148  0EFF               	movlw	255
  7784  00E14A  2054               	addwfc	(??___flmul+1)^0,w,c
  7785  00E14C  6F6C               	movwf	(___flmul@temp+1)& (0+255),b
  7786  00E14E  EFBE  F070         	goto	l3490
  7787  00E152                     l3484:
  7788                           
  7789                           ; BSR set to: 0
  7790  00E152  90D8               	bcf	status,0,c
  7791  00E154  3767               	rlcf	___flmul@prod& (0+255),f,b
  7792  00E156  3768               	rlcf	(___flmul@prod+1)& (0+255),f,b
  7793  00E158  3769               	rlcf	(___flmul@prod+2)& (0+255),f,b
  7794  00E15A  376A               	rlcf	(___flmul@prod+3)& (0+255),f,b
  7795  00E15C                     
  7796                           ; BSR set to: 0
  7797  00E15C  AF64               	btfss	(___flmul@grs+3)& (0+255),7,b
  7798  00E15E  EFB3  F070         	goto	u3131
  7799  00E162  EFB5  F070         	goto	u3130
  7800  00E166                     u3131:
  7801  00E166  EFB6  F070         	goto	l1192
  7802  00E16A                     u3130:
  7803  00E16A                     
  7804                           ; BSR set to: 0
  7805  00E16A  8167               	bsf	___flmul@prod& (0+255),0,b
  7806  00E16C                     l1192:
  7807                           
  7808                           ; BSR set to: 0
  7809  00E16C  90D8               	bcf	status,0,c
  7810  00E16E  3761               	rlcf	___flmul@grs& (0+255),f,b
  7811  00E170  3762               	rlcf	(___flmul@grs+1)& (0+255),f,b
  7812  00E172  3763               	rlcf	(___flmul@grs+2)& (0+255),f,b
  7813  00E174  3764               	rlcf	(___flmul@grs+3)& (0+255),f,b
  7814  00E176  076B               	decf	___flmul@temp& (0+255),f,b
  7815  00E178  A0D8               	btfss	status,0,c
  7816  00E17A  076C               	decf	(___flmul@temp+1)& (0+255),f,b
  7817  00E17C                     l3490:
  7818                           
  7819                           ; BSR set to: 0
  7820  00E17C  AF69               	btfss	(___flmul@prod+2)& (0+255),7,b
  7821  00E17E  EFC3  F070         	goto	u3141
  7822  00E182  EFC5  F070         	goto	u3140
  7823  00E186                     u3141:
  7824  00E186  EFA9  F070         	goto	l3484
  7825  00E18A                     u3140:
  7826  00E18A                     
  7827                           ; BSR set to: 0
  7828  00E18A  0E00               	movlw	0
  7829  00E18C  6F65               	movwf	___flmul@aexp& (0+255),b
  7830  00E18E                     
  7831                           ; BSR set to: 0
  7832  00E18E  AF64               	btfss	(___flmul@grs+3)& (0+255),7,b
  7833  00E190  EFCC  F070         	goto	u3151
  7834  00E194  EFCE  F070         	goto	u3150
  7835  00E198                     u3151:
  7836  00E198  EFF2  F070         	goto	l1194
  7837  00E19C                     u3150:
  7838  00E19C                     
  7839                           ; BSR set to: 0
  7840  00E19C  0EFF               	movlw	255
  7841  00E19E  1561               	andwf	___flmul@grs& (0+255),w,b
  7842  00E1A0  6E53               	movwf	??___flmul^0,c
  7843  00E1A2  0EFF               	movlw	255
  7844  00E1A4  1562               	andwf	(___flmul@grs+1)& (0+255),w,b
  7845  00E1A6  6E54               	movwf	(??___flmul+1)^0,c
  7846  00E1A8  0EFF               	movlw	255
  7847  00E1AA  1563               	andwf	(___flmul@grs+2)& (0+255),w,b
  7848  00E1AC  6E55               	movwf	(??___flmul+2)^0,c
  7849  00E1AE  0E7F               	movlw	127
  7850  00E1B0  1564               	andwf	(___flmul@grs+3)& (0+255),w,b
  7851  00E1B2  6E56               	movwf	(??___flmul+3)^0,c
  7852  00E1B4  5053               	movf	??___flmul^0,w,c
  7853  00E1B6  1054               	iorwf	(??___flmul+1)^0,w,c
  7854  00E1B8  1055               	iorwf	(??___flmul+2)^0,w,c
  7855  00E1BA  1056               	iorwf	(??___flmul+3)^0,w,c
  7856  00E1BC  B4D8               	btfsc	status,2,c
  7857  00E1BE  EFE3  F070         	goto	u3161
  7858  00E1C2  EFE5  F070         	goto	u3160
  7859  00E1C6                     u3161:
  7860  00E1C6  EFE9  F070         	goto	l1195
  7861  00E1CA                     u3160:
  7862  00E1CA                     l3498:
  7863                           
  7864                           ; BSR set to: 0
  7865  00E1CA  0E01               	movlw	1
  7866  00E1CC  6F65               	movwf	___flmul@aexp& (0+255),b
  7867  00E1CE  EFF2  F070         	goto	l1194
  7868  00E1D2                     l1195:
  7869                           
  7870                           ; BSR set to: 0
  7871  00E1D2  A167               	btfss	___flmul@prod& (0+255),0,b
  7872  00E1D4  EFEE  F070         	goto	u3171
  7873  00E1D8  EFF0  F070         	goto	u3170
  7874  00E1DC                     u3171:
  7875  00E1DC  EFF2  F070         	goto	l1194
  7876  00E1E0                     u3170:
  7877  00E1E0  EFE5  F070         	goto	l3498
  7878  00E1E4                     l1194:
  7879                           
  7880                           ; BSR set to: 0
  7881  00E1E4  5165               	movf	___flmul@aexp& (0+255),w,b
  7882  00E1E6  B4D8               	btfsc	status,2,c
  7883  00E1E8  EFF8  F070         	goto	u3181
  7884  00E1EC  EFFA  F070         	goto	u3180
  7885  00E1F0                     u3181:
  7886  00E1F0  EF1E  F071         	goto	l3510
  7887  00E1F4                     u3180:
  7888  00E1F4                     
  7889                           ; BSR set to: 0
  7890  00E1F4  0E01               	movlw	1
  7891  00E1F6  2767               	addwf	___flmul@prod& (0+255),f,b
  7892  00E1F8  0E00               	movlw	0
  7893  00E1FA  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
  7894  00E1FC  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
  7895  00E1FE  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
  7896  00E200                     
  7897                           ; BSR set to: 0
  7898  00E200  A16A               	btfss	(___flmul@prod+3)& (0+255),0,b
  7899  00E202  EF05  F071         	goto	u3191
  7900  00E206  EF07  F071         	goto	u3190
  7901  00E20A                     u3191:
  7902  00E20A  EF1E  F071         	goto	l3510
  7903  00E20E                     u3190:
  7904  00E20E                     
  7905                           ; BSR set to: 0
  7906  00E20E  C067  F053         	movff	___flmul@prod,??___flmul
  7907  00E212  C068  F054         	movff	___flmul@prod+1,??___flmul+1
  7908  00E216  C069  F055         	movff	___flmul@prod+2,??___flmul+2
  7909  00E21A  C06A  F056         	movff	___flmul@prod+3,??___flmul+3
  7910  00E21E  3456               	rlcf	(??___flmul+3)^0,w,c
  7911  00E220  3256               	rrcf	(??___flmul+3)^0,f,c
  7912  00E222  3255               	rrcf	(??___flmul+2)^0,f,c
  7913  00E224  3254               	rrcf	(??___flmul+1)^0,f,c
  7914  00E226  3253               	rrcf	??___flmul^0,f,c
  7915  00E228  C053  F067         	movff	??___flmul,___flmul@prod
  7916  00E22C  C054  F068         	movff	??___flmul+1,___flmul@prod+1
  7917  00E230  C055  F069         	movff	??___flmul+2,___flmul@prod+2
  7918  00E234  C056  F06A         	movff	??___flmul+3,___flmul@prod+3
  7919  00E238                     
  7920                           ; BSR set to: 0
  7921  00E238  4B6B               	infsnz	___flmul@temp& (0+255),f,b
  7922  00E23A  2B6C               	incf	(___flmul@temp+1)& (0+255),f,b
  7923  00E23C                     l3510:
  7924                           
  7925                           ; BSR set to: 0
  7926  00E23C  BF6C               	btfsc	(___flmul@temp+1)& (0+255),7,b
  7927  00E23E  EF29  F071         	goto	u3201
  7928  00E242  516C               	movf	(___flmul@temp+1)& (0+255),w,b
  7929  00E244  E108               	bnz	u3200
  7930  00E246  296B               	incf	___flmul@temp& (0+255),w,b
  7931  00E248  A0D8               	btfss	status,0,c
  7932  00E24A  EF29  F071         	goto	u3201
  7933  00E24E  EF2B  F071         	goto	u3200
  7934  00E252                     u3201:
  7935  00E252  EF35  F071         	goto	l3514
  7936  00E256                     u3200:
  7937  00E256                     
  7938                           ; BSR set to: 0
  7939  00E256  0E00               	movlw	0
  7940  00E258  6F67               	movwf	___flmul@prod& (0+255),b
  7941  00E25A  0E00               	movlw	0
  7942  00E25C  6F68               	movwf	(___flmul@prod+1)& (0+255),b
  7943  00E25E  0E80               	movlw	128
  7944  00E260  6F69               	movwf	(___flmul@prod+2)& (0+255),b
  7945  00E262  0E7F               	movlw	127
  7946  00E264  6F6A               	movwf	(___flmul@prod+3)& (0+255),b
  7947  00E266  EF63  F071         	goto	l3526
  7948  00E26A                     l3514:
  7949                           
  7950                           ; BSR set to: 0
  7951  00E26A  BF6C               	btfsc	(___flmul@temp+1)& (0+255),7,b
  7952  00E26C  EF42  F071         	goto	u3210
  7953  00E270  516C               	movf	(___flmul@temp+1)& (0+255),w,b
  7954  00E272  E106               	bnz	u3211
  7955  00E274  056B               	decf	___flmul@temp& (0+255),w,b
  7956  00E276  B0D8               	btfsc	status,0,c
  7957  00E278  EF40  F071         	goto	u3211
  7958  00E27C  EF42  F071         	goto	u3210
  7959  00E280                     u3211:
  7960  00E280  EF4E  F071         	goto	l1202
  7961  00E284                     u3210:
  7962  00E284                     
  7963                           ; BSR set to: 0
  7964  00E284  0E00               	movlw	0
  7965  00E286  6F67               	movwf	___flmul@prod& (0+255),b
  7966  00E288  0E00               	movlw	0
  7967  00E28A  6F68               	movwf	(___flmul@prod+1)& (0+255),b
  7968  00E28C  0E00               	movlw	0
  7969  00E28E  6F69               	movwf	(___flmul@prod+2)& (0+255),b
  7970  00E290  0E00               	movlw	0
  7971  00E292  6F6A               	movwf	(___flmul@prod+3)& (0+255),b
  7972  00E294  0E00               	movlw	0
  7973  00E296  6F60               	movwf	___flmul@sign& (0+255),b
  7974  00E298  EF63  F071         	goto	l3526
  7975  00E29C                     l1202:
  7976                           
  7977                           ; BSR set to: 0
  7978  00E29C  C06B  F066         	movff	___flmul@temp,___flmul@bexp
  7979  00E2A0                     
  7980                           ; BSR set to: 0
  7981  00E2A0  0EFF               	movlw	255
  7982  00E2A2  1767               	andwf	___flmul@prod& (0+255),f,b
  7983  00E2A4  0EFF               	movlw	255
  7984  00E2A6  1768               	andwf	(___flmul@prod+1)& (0+255),f,b
  7985  00E2A8  0E7F               	movlw	127
  7986  00E2AA  1769               	andwf	(___flmul@prod+2)& (0+255),f,b
  7987  00E2AC  0E00               	movlw	0
  7988  00E2AE  176A               	andwf	(___flmul@prod+3)& (0+255),f,b
  7989  00E2B0                     
  7990                           ; BSR set to: 0
  7991  00E2B0  A166               	btfss	___flmul@bexp& (0+255),0,b
  7992  00E2B2  EF5D  F071         	goto	u3221
  7993  00E2B6  EF5F  F071         	goto	u3220
  7994  00E2BA                     u3221:
  7995  00E2BA  EF60  F071         	goto	l3524
  7996  00E2BE                     u3220:
  7997  00E2BE                     
  7998                           ; BSR set to: 0
  7999  00E2BE  8F69               	bsf	(___flmul@prod+2)& (0+255),7,b
  8000  00E2C0                     l3524:
  8001                           
  8002                           ; BSR set to: 0
  8003  00E2C0  90D8               	bcf	status,0,c
  8004  00E2C2  3166               	rrcf	___flmul@bexp& (0+255),w,b
  8005  00E2C4  6F6A               	movwf	(___flmul@prod+3)& (0+255),b
  8006  00E2C6                     l3526:
  8007                           
  8008                           ; BSR set to: 0
  8009  00E2C6  5160               	movf	___flmul@sign& (0+255),w,b
  8010  00E2C8  136A               	iorwf	(___flmul@prod+3)& (0+255),f,b
  8011  00E2CA                     
  8012                           ; BSR set to: 0
  8013  00E2CA  C067  F04B         	movff	___flmul@prod,?___flmul
  8014  00E2CE  C068  F04C         	movff	___flmul@prod+1,?___flmul+1
  8015  00E2D2  C069  F04D         	movff	___flmul@prod+2,?___flmul+2
  8016  00E2D6  C06A  F04E         	movff	___flmul@prod+3,?___flmul+3
  8017  00E2DA                     l1189:
  8018                           
  8019                           ; BSR set to: 0
  8020  00E2DA  0012               	return		;funcret
  8021  00E2DC                     __end_of___flmul:
  8022                           	callstack 0
  8023                           
  8024 ;; *************** function __tdiv_to_l_ *****************
  8025 ;; Defined at:
  8026 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\ftdivl.c"
  8027 ;; Parameters:    Size  Location     Type
  8028 ;;  f1              4    0[COMRAM] float 
  8029 ;;  f2              4    4[COMRAM] float 
  8030 ;; Auto vars:     Size  Location     Type
  8031 ;;  quot            4   11[COMRAM] unsigned long 
  8032 ;;  exp1            1   16[COMRAM] unsigned char 
  8033 ;;  cntr            1   15[COMRAM] unsigned char 
  8034 ;; Return value:  Size  Location     Type
  8035 ;;                  4    0[COMRAM] unsigned long 
  8036 ;; Registers used:
  8037 ;;		wreg, status,2, status,0
  8038 ;; Tracked objects:
  8039 ;;		On entry : 0/0
  8040 ;;		On exit  : 0/0
  8041 ;;		Unchanged: 0/0
  8042 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8043 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8044 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8045 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8046 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8047 ;;Total ram usage:       17 bytes
  8048 ;; Hardware stack levels used:    1
  8049 ;; This function calls:
  8050 ;;		Nothing
  8051 ;; This function is called by:
  8052 ;;		_printf
  8053 ;; This function uses a non-reentrant model
  8054 ;;
  8055                           
  8056                           	psect	text22
  8057  00CDFA                     __ptext22:
  8058                           	callstack 0
  8059  00CDFA                     __tdiv_to_l_:
  8060                           	callstack 29
  8061  00CDFA  C003  F009         	movff	__tdiv_to_l_@f1+2,??__tdiv_to_l_
  8062  00CDFE  6A0A               	clrf	(??__tdiv_to_l_+1)^0,c
  8063  00CE00  6A0B               	clrf	(??__tdiv_to_l_+2)^0,c
  8064  00CE02  3402               	rlcf	(__tdiv_to_l_@f1+1)^0,w,c
  8065  00CE04  3609               	rlcf	??__tdiv_to_l_^0,f,c
  8066  00CE06  E301               	bnc	u3741
  8067  00CE08  800A               	bsf	(??__tdiv_to_l_+1)^0,0,c
  8068  00CE0A                     u3741:
  8069  00CE0A  5009               	movf	??__tdiv_to_l_^0,w,c
  8070  00CE0C  6E11               	movwf	__tdiv_to_l_@exp1^0,c
  8071  00CE0E  5011               	movf	__tdiv_to_l_@exp1^0,w,c
  8072  00CE10  A4D8               	btfss	status,2,c
  8073  00CE12  EF0D  F067         	goto	u3751
  8074  00CE16  EF0F  F067         	goto	u3750
  8075  00CE1A                     u3751:
  8076  00CE1A  EF19  F067         	goto	l3864
  8077  00CE1E                     u3750:
  8078  00CE1E                     l3860:
  8079  00CE1E  0E00               	movlw	0
  8080  00CE20  6E01               	movwf	?__tdiv_to_l_^0,c
  8081  00CE22  0E00               	movlw	0
  8082  00CE24  6E02               	movwf	(?__tdiv_to_l_+1)^0,c
  8083  00CE26  0E00               	movlw	0
  8084  00CE28  6E03               	movwf	(?__tdiv_to_l_+2)^0,c
  8085  00CE2A  0E00               	movlw	0
  8086  00CE2C  6E04               	movwf	(?__tdiv_to_l_+3)^0,c
  8087  00CE2E  EFA7  F067         	goto	l912
  8088  00CE32                     l3864:
  8089  00CE32  C007  F009         	movff	__tdiv_to_l_@f2+2,??__tdiv_to_l_
  8090  00CE36  6A0A               	clrf	(??__tdiv_to_l_+1)^0,c
  8091  00CE38  6A0B               	clrf	(??__tdiv_to_l_+2)^0,c
  8092  00CE3A  3406               	rlcf	(__tdiv_to_l_@f2+1)^0,w,c
  8093  00CE3C  3609               	rlcf	??__tdiv_to_l_^0,f,c
  8094  00CE3E  E301               	bnc	u3761
  8095  00CE40  800A               	bsf	(??__tdiv_to_l_+1)^0,0,c
  8096  00CE42                     u3761:
  8097  00CE42  5009               	movf	??__tdiv_to_l_^0,w,c
  8098  00CE44  6E10               	movwf	__tdiv_to_l_@cntr^0,c
  8099  00CE46  5010               	movf	__tdiv_to_l_@cntr^0,w,c
  8100  00CE48  A4D8               	btfss	status,2,c
  8101  00CE4A  EF29  F067         	goto	u3771
  8102  00CE4E  EF2B  F067         	goto	u3770
  8103  00CE52                     u3771:
  8104  00CE52  EF2D  F067         	goto	l3870
  8105  00CE56                     u3770:
  8106  00CE56  EF0F  F067         	goto	l3860
  8107  00CE5A                     l3870:
  8108  00CE5A  8E02               	bsf	(__tdiv_to_l_@f1+1)^0,7,c
  8109  00CE5C  0EFF               	movlw	255
  8110  00CE5E  1601               	andwf	__tdiv_to_l_@f1^0,f,c
  8111  00CE60  0EFF               	movlw	255
  8112  00CE62  1602               	andwf	(__tdiv_to_l_@f1+1)^0,f,c
  8113  00CE64  0E00               	movlw	0
  8114  00CE66  1603               	andwf	(__tdiv_to_l_@f1+2)^0,f,c
  8115  00CE68  8E06               	bsf	(__tdiv_to_l_@f2+1)^0,7,c
  8116  00CE6A  0EFF               	movlw	255
  8117  00CE6C  1605               	andwf	__tdiv_to_l_@f2^0,f,c
  8118  00CE6E  0EFF               	movlw	255
  8119  00CE70  1606               	andwf	(__tdiv_to_l_@f2+1)^0,f,c
  8120  00CE72  0E00               	movlw	0
  8121  00CE74  1607               	andwf	(__tdiv_to_l_@f2+2)^0,f,c
  8122  00CE76  0E00               	movlw	0
  8123  00CE78  6E0C               	movwf	__tdiv_to_l_@quot^0,c
  8124  00CE7A  0E00               	movlw	0
  8125  00CE7C  6E0D               	movwf	(__tdiv_to_l_@quot+1)^0,c
  8126  00CE7E  0E00               	movlw	0
  8127  00CE80  6E0E               	movwf	(__tdiv_to_l_@quot+2)^0,c
  8128  00CE82  0E00               	movlw	0
  8129  00CE84  6E0F               	movwf	(__tdiv_to_l_@quot+3)^0,c
  8130  00CE86  0E7F               	movlw	127
  8131  00CE88  5E11               	subwf	__tdiv_to_l_@exp1^0,f,c
  8132  00CE8A  5010               	movf	__tdiv_to_l_@cntr^0,w,c
  8133  00CE8C  0F98               	addlw	152
  8134  00CE8E  5E11               	subwf	__tdiv_to_l_@exp1^0,f,c
  8135  00CE90  0E18               	movlw	24
  8136  00CE92  6E10               	movwf	__tdiv_to_l_@cntr^0,c
  8137  00CE94                     l914:
  8138  00CE94  90D8               	bcf	status,0,c
  8139  00CE96  360C               	rlcf	__tdiv_to_l_@quot^0,f,c
  8140  00CE98  360D               	rlcf	(__tdiv_to_l_@quot+1)^0,f,c
  8141  00CE9A  360E               	rlcf	(__tdiv_to_l_@quot+2)^0,f,c
  8142  00CE9C  360F               	rlcf	(__tdiv_to_l_@quot+3)^0,f,c
  8143  00CE9E  5005               	movf	__tdiv_to_l_@f2^0,w,c
  8144  00CEA0  5C01               	subwf	__tdiv_to_l_@f1^0,w,c
  8145  00CEA2  5006               	movf	(__tdiv_to_l_@f2+1)^0,w,c
  8146  00CEA4  5802               	subwfb	(__tdiv_to_l_@f1+1)^0,w,c
  8147  00CEA6  5007               	movf	(__tdiv_to_l_@f2+2)^0,w,c
  8148  00CEA8  5803               	subwfb	(__tdiv_to_l_@f1+2)^0,w,c
  8149  00CEAA  A0D8               	btfss	status,0,c
  8150  00CEAC  EF5A  F067         	goto	u3781
  8151  00CEB0  EF5C  F067         	goto	u3780
  8152  00CEB4                     u3781:
  8153  00CEB4  EF63  F067         	goto	l915
  8154  00CEB8                     u3780:
  8155  00CEB8  5005               	movf	__tdiv_to_l_@f2^0,w,c
  8156  00CEBA  5E01               	subwf	__tdiv_to_l_@f1^0,f,c
  8157  00CEBC  5006               	movf	(__tdiv_to_l_@f2+1)^0,w,c
  8158  00CEBE  5A02               	subwfb	(__tdiv_to_l_@f1+1)^0,f,c
  8159  00CEC0  5007               	movf	(__tdiv_to_l_@f2+2)^0,w,c
  8160  00CEC2  5A03               	subwfb	(__tdiv_to_l_@f1+2)^0,f,c
  8161  00CEC4  800C               	bsf	__tdiv_to_l_@quot^0,0,c
  8162  00CEC6                     l915:
  8163  00CEC6  90D8               	bcf	status,0,c
  8164  00CEC8  3601               	rlcf	__tdiv_to_l_@f1^0,f,c
  8165  00CECA  3602               	rlcf	(__tdiv_to_l_@f1+1)^0,f,c
  8166  00CECC  3603               	rlcf	(__tdiv_to_l_@f1+2)^0,f,c
  8167  00CECE  2E10               	decfsz	__tdiv_to_l_@cntr^0,f,c
  8168  00CED0  EF4A  F067         	goto	l914
  8169  00CED4  BE11               	btfsc	__tdiv_to_l_@exp1^0,7,c
  8170  00CED6  EF71  F067         	goto	u3790
  8171  00CEDA  EF6F  F067         	goto	u3791
  8172  00CEDE                     u3791:
  8173  00CEDE  EF87  F067         	goto	l3904
  8174  00CEE2                     u3790:
  8175  00CEE2  5011               	movf	__tdiv_to_l_@exp1^0,w,c
  8176  00CEE4  0A80               	xorlw	128
  8177  00CEE6  0F97               	addlw	151
  8178  00CEE8  B0D8               	btfsc	status,0,c
  8179  00CEEA  EF79  F067         	goto	u3801
  8180  00CEEE  EF7B  F067         	goto	u3800
  8181  00CEF2                     u3801:
  8182  00CEF2  EF7D  F067         	goto	l3900
  8183  00CEF6                     u3800:
  8184  00CEF6  EF0F  F067         	goto	l3860
  8185  00CEFA                     l3900:
  8186  00CEFA  90D8               	bcf	status,0,c
  8187  00CEFC  320F               	rrcf	(__tdiv_to_l_@quot+3)^0,f,c
  8188  00CEFE  320E               	rrcf	(__tdiv_to_l_@quot+2)^0,f,c
  8189  00CF00  320D               	rrcf	(__tdiv_to_l_@quot+1)^0,f,c
  8190  00CF02  320C               	rrcf	__tdiv_to_l_@quot^0,f,c
  8191  00CF04  3E11               	incfsz	__tdiv_to_l_@exp1^0,f,c
  8192  00CF06  EF7D  F067         	goto	l3900
  8193  00CF0A  EF9F  F067         	goto	l921
  8194  00CF0E                     l3904:
  8195  00CF0E  0E17               	movlw	23
  8196  00CF10  6411               	cpfsgt	__tdiv_to_l_@exp1^0,c
  8197  00CF12  EF8D  F067         	goto	u3811
  8198  00CF16  EF8F  F067         	goto	u3810
  8199  00CF1A                     u3811:
  8200  00CF1A  EF97  F067         	goto	l3912
  8201  00CF1E                     u3810:
  8202  00CF1E  EF0F  F067         	goto	l3860
  8203  00CF22                     l3910:
  8204  00CF22  90D8               	bcf	status,0,c
  8205  00CF24  360C               	rlcf	__tdiv_to_l_@quot^0,f,c
  8206  00CF26  360D               	rlcf	(__tdiv_to_l_@quot+1)^0,f,c
  8207  00CF28  360E               	rlcf	(__tdiv_to_l_@quot+2)^0,f,c
  8208  00CF2A  360F               	rlcf	(__tdiv_to_l_@quot+3)^0,f,c
  8209  00CF2C  0611               	decf	__tdiv_to_l_@exp1^0,f,c
  8210  00CF2E                     l3912:
  8211  00CF2E  5011               	movf	__tdiv_to_l_@exp1^0,w,c
  8212  00CF30  A4D8               	btfss	status,2,c
  8213  00CF32  EF9D  F067         	goto	u3821
  8214  00CF36  EF9F  F067         	goto	u3820
  8215  00CF3A                     u3821:
  8216  00CF3A  EF91  F067         	goto	l3910
  8217  00CF3E                     u3820:
  8218  00CF3E                     l921:
  8219  00CF3E  C00C  F001         	movff	__tdiv_to_l_@quot,?__tdiv_to_l_
  8220  00CF42  C00D  F002         	movff	__tdiv_to_l_@quot+1,?__tdiv_to_l_+1
  8221  00CF46  C00E  F003         	movff	__tdiv_to_l_@quot+2,?__tdiv_to_l_+2
  8222  00CF4A  C00F  F004         	movff	__tdiv_to_l_@quot+3,?__tdiv_to_l_+3
  8223  00CF4E                     l912:
  8224  00CF4E  0012               	return		;funcret
  8225  00CF50                     __end_of__tdiv_to_l_:
  8226                           	callstack 0
  8227                           
  8228 ;; *************** function __div_to_l_ *****************
  8229 ;; Defined at:
  8230 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\fldivl.c"
  8231 ;; Parameters:    Size  Location     Type
  8232 ;;  f1              4    0[COMRAM] unsigned long 
  8233 ;;  f2              4    4[COMRAM] unsigned long 
  8234 ;; Auto vars:     Size  Location     Type
  8235 ;;  quot            4    8[COMRAM] unsigned long 
  8236 ;;  exp1            1   13[COMRAM] unsigned char 
  8237 ;;  cntr            1   12[COMRAM] unsigned char 
  8238 ;; Return value:  Size  Location     Type
  8239 ;;                  4    0[COMRAM] unsigned long 
  8240 ;; Registers used:
  8241 ;;		wreg, status,2, status,0
  8242 ;; Tracked objects:
  8243 ;;		On entry : 0/0
  8244 ;;		On exit  : 0/0
  8245 ;;		Unchanged: 0/0
  8246 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8247 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8248 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8249 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8250 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8251 ;;Total ram usage:       14 bytes
  8252 ;; Hardware stack levels used:    1
  8253 ;; This function calls:
  8254 ;;		Nothing
  8255 ;; This function is called by:
  8256 ;;		_printf
  8257 ;; This function uses a non-reentrant model
  8258 ;;
  8259                           
  8260                           	psect	text23
  8261  00CCAE                     __ptext23:
  8262                           	callstack 0
  8263  00CCAE                     __div_to_l_:
  8264                           	callstack 29
  8265  00CCAE  3403               	rlcf	(__div_to_l_@f1+2)^0,w,c
  8266  00CCB0  3404               	rlcf	(__div_to_l_@f1+3)^0,w,c
  8267  00CCB2  6E0E               	movwf	__div_to_l_@exp1^0,c
  8268  00CCB4  500E               	movf	__div_to_l_@exp1^0,w,c
  8269  00CCB6  A4D8               	btfss	status,2,c
  8270  00CCB8  EF60  F066         	goto	u3831
  8271  00CCBC  EF62  F066         	goto	u3830
  8272  00CCC0                     u3831:
  8273  00CCC0  EF6C  F066         	goto	l3920
  8274  00CCC4                     u3830:
  8275  00CCC4                     l3916:
  8276  00CCC4  0E00               	movlw	0
  8277  00CCC6  6E01               	movwf	?__div_to_l_^0,c
  8278  00CCC8  0E00               	movlw	0
  8279  00CCCA  6E02               	movwf	(?__div_to_l_+1)^0,c
  8280  00CCCC  0E00               	movlw	0
  8281  00CCCE  6E03               	movwf	(?__div_to_l_+2)^0,c
  8282  00CCD0  0E00               	movlw	0
  8283  00CCD2  6E04               	movwf	(?__div_to_l_+3)^0,c
  8284  00CCD4  EFFC  F066         	goto	l803
  8285  00CCD8                     l3920:
  8286  00CCD8  3407               	rlcf	(__div_to_l_@f2+2)^0,w,c
  8287  00CCDA  3408               	rlcf	(__div_to_l_@f2+3)^0,w,c
  8288  00CCDC  6E0D               	movwf	__div_to_l_@cntr^0,c
  8289  00CCDE  500D               	movf	__div_to_l_@cntr^0,w,c
  8290  00CCE0  A4D8               	btfss	status,2,c
  8291  00CCE2  EF75  F066         	goto	u3841
  8292  00CCE6  EF77  F066         	goto	u3840
  8293  00CCEA                     u3841:
  8294  00CCEA  EF79  F066         	goto	l3926
  8295  00CCEE                     u3840:
  8296  00CCEE  EF62  F066         	goto	l3916
  8297  00CCF2                     l3926:
  8298  00CCF2  8E03               	bsf	(__div_to_l_@f1+2)^0,7,c
  8299  00CCF4  0EFF               	movlw	255
  8300  00CCF6  1601               	andwf	__div_to_l_@f1^0,f,c
  8301  00CCF8  0EFF               	movlw	255
  8302  00CCFA  1602               	andwf	(__div_to_l_@f1+1)^0,f,c
  8303  00CCFC  0EFF               	movlw	255
  8304  00CCFE  1603               	andwf	(__div_to_l_@f1+2)^0,f,c
  8305  00CD00  0E00               	movlw	0
  8306  00CD02  1604               	andwf	(__div_to_l_@f1+3)^0,f,c
  8307  00CD04  8E07               	bsf	(__div_to_l_@f2+2)^0,7,c
  8308  00CD06  0EFF               	movlw	255
  8309  00CD08  1605               	andwf	__div_to_l_@f2^0,f,c
  8310  00CD0A  0EFF               	movlw	255
  8311  00CD0C  1606               	andwf	(__div_to_l_@f2+1)^0,f,c
  8312  00CD0E  0EFF               	movlw	255
  8313  00CD10  1607               	andwf	(__div_to_l_@f2+2)^0,f,c
  8314  00CD12  0E00               	movlw	0
  8315  00CD14  1608               	andwf	(__div_to_l_@f2+3)^0,f,c
  8316  00CD16  0E00               	movlw	0
  8317  00CD18  6E09               	movwf	__div_to_l_@quot^0,c
  8318  00CD1A  0E00               	movlw	0
  8319  00CD1C  6E0A               	movwf	(__div_to_l_@quot+1)^0,c
  8320  00CD1E  0E00               	movlw	0
  8321  00CD20  6E0B               	movwf	(__div_to_l_@quot+2)^0,c
  8322  00CD22  0E00               	movlw	0
  8323  00CD24  6E0C               	movwf	(__div_to_l_@quot+3)^0,c
  8324  00CD26  0E7F               	movlw	127
  8325  00CD28  5E0E               	subwf	__div_to_l_@exp1^0,f,c
  8326  00CD2A  500D               	movf	__div_to_l_@cntr^0,w,c
  8327  00CD2C  0FA0               	addlw	160
  8328  00CD2E  5E0E               	subwf	__div_to_l_@exp1^0,f,c
  8329  00CD30  0E20               	movlw	32
  8330  00CD32  6E0D               	movwf	__div_to_l_@cntr^0,c
  8331  00CD34                     l3940:
  8332  00CD34  90D8               	bcf	status,0,c
  8333  00CD36  3609               	rlcf	__div_to_l_@quot^0,f,c
  8334  00CD38  360A               	rlcf	(__div_to_l_@quot+1)^0,f,c
  8335  00CD3A  360B               	rlcf	(__div_to_l_@quot+2)^0,f,c
  8336  00CD3C  360C               	rlcf	(__div_to_l_@quot+3)^0,f,c
  8337  00CD3E  5005               	movf	__div_to_l_@f2^0,w,c
  8338  00CD40  5C01               	subwf	__div_to_l_@f1^0,w,c
  8339  00CD42  5006               	movf	(__div_to_l_@f2+1)^0,w,c
  8340  00CD44  5802               	subwfb	(__div_to_l_@f1+1)^0,w,c
  8341  00CD46  5007               	movf	(__div_to_l_@f2+2)^0,w,c
  8342  00CD48  5803               	subwfb	(__div_to_l_@f1+2)^0,w,c
  8343  00CD4A  5008               	movf	(__div_to_l_@f2+3)^0,w,c
  8344  00CD4C  5804               	subwfb	(__div_to_l_@f1+3)^0,w,c
  8345  00CD4E  A0D8               	btfss	status,0,c
  8346  00CD50  EFAC  F066         	goto	u3851
  8347  00CD54  EFAE  F066         	goto	u3850
  8348  00CD58                     u3851:
  8349  00CD58  EFB7  F066         	goto	l3948
  8350  00CD5C                     u3850:
  8351  00CD5C  5005               	movf	__div_to_l_@f2^0,w,c
  8352  00CD5E  5E01               	subwf	__div_to_l_@f1^0,f,c
  8353  00CD60  5006               	movf	(__div_to_l_@f2+1)^0,w,c
  8354  00CD62  5A02               	subwfb	(__div_to_l_@f1+1)^0,f,c
  8355  00CD64  5007               	movf	(__div_to_l_@f2+2)^0,w,c
  8356  00CD66  5A03               	subwfb	(__div_to_l_@f1+2)^0,f,c
  8357  00CD68  5008               	movf	(__div_to_l_@f2+3)^0,w,c
  8358  00CD6A  5A04               	subwfb	(__div_to_l_@f1+3)^0,f,c
  8359  00CD6C  8009               	bsf	__div_to_l_@quot^0,0,c
  8360  00CD6E                     l3948:
  8361  00CD6E  90D8               	bcf	status,0,c
  8362  00CD70  3601               	rlcf	__div_to_l_@f1^0,f,c
  8363  00CD72  3602               	rlcf	(__div_to_l_@f1+1)^0,f,c
  8364  00CD74  3603               	rlcf	(__div_to_l_@f1+2)^0,f,c
  8365  00CD76  3604               	rlcf	(__div_to_l_@f1+3)^0,f,c
  8366  00CD78  2E0D               	decfsz	__div_to_l_@cntr^0,f,c
  8367  00CD7A  EF9A  F066         	goto	l3940
  8368  00CD7E  BE0E               	btfsc	__div_to_l_@exp1^0,7,c
  8369  00CD80  EFC6  F066         	goto	u3860
  8370  00CD84  EFC4  F066         	goto	u3861
  8371  00CD88                     u3861:
  8372  00CD88  EFDC  F066         	goto	l3964
  8373  00CD8C                     u3860:
  8374  00CD8C  500E               	movf	__div_to_l_@exp1^0,w,c
  8375  00CD8E  0A80               	xorlw	128
  8376  00CD90  0F9F               	addlw	159
  8377  00CD92  B0D8               	btfsc	status,0,c
  8378  00CD94  EFCE  F066         	goto	u3871
  8379  00CD98  EFD0  F066         	goto	u3870
  8380  00CD9C                     u3871:
  8381  00CD9C  EFD2  F066         	goto	l3960
  8382  00CDA0                     u3870:
  8383  00CDA0  EF62  F066         	goto	l3916
  8384  00CDA4                     l3960:
  8385  00CDA4  90D8               	bcf	status,0,c
  8386  00CDA6  320C               	rrcf	(__div_to_l_@quot+3)^0,f,c
  8387  00CDA8  320B               	rrcf	(__div_to_l_@quot+2)^0,f,c
  8388  00CDAA  320A               	rrcf	(__div_to_l_@quot+1)^0,f,c
  8389  00CDAC  3209               	rrcf	__div_to_l_@quot^0,f,c
  8390  00CDAE  3E0E               	incfsz	__div_to_l_@exp1^0,f,c
  8391  00CDB0  EFD2  F066         	goto	l3960
  8392  00CDB4  EFF4  F066         	goto	l812
  8393  00CDB8                     l3964:
  8394  00CDB8  0E1F               	movlw	31
  8395  00CDBA  640E               	cpfsgt	__div_to_l_@exp1^0,c
  8396  00CDBC  EFE2  F066         	goto	u3881
  8397  00CDC0  EFE4  F066         	goto	u3880
  8398  00CDC4                     u3881:
  8399  00CDC4  EFEC  F066         	goto	l3972
  8400  00CDC8                     u3880:
  8401  00CDC8  EF62  F066         	goto	l3916
  8402  00CDCC                     l3970:
  8403  00CDCC  90D8               	bcf	status,0,c
  8404  00CDCE  3609               	rlcf	__div_to_l_@quot^0,f,c
  8405  00CDD0  360A               	rlcf	(__div_to_l_@quot+1)^0,f,c
  8406  00CDD2  360B               	rlcf	(__div_to_l_@quot+2)^0,f,c
  8407  00CDD4  360C               	rlcf	(__div_to_l_@quot+3)^0,f,c
  8408  00CDD6  060E               	decf	__div_to_l_@exp1^0,f,c
  8409  00CDD8                     l3972:
  8410  00CDD8  500E               	movf	__div_to_l_@exp1^0,w,c
  8411  00CDDA  A4D8               	btfss	status,2,c
  8412  00CDDC  EFF2  F066         	goto	u3891
  8413  00CDE0  EFF4  F066         	goto	u3890
  8414  00CDE4                     u3891:
  8415  00CDE4  EFE6  F066         	goto	l3970
  8416  00CDE8                     u3890:
  8417  00CDE8                     l812:
  8418  00CDE8  C009  F001         	movff	__div_to_l_@quot,?__div_to_l_
  8419  00CDEC  C00A  F002         	movff	__div_to_l_@quot+1,?__div_to_l_+1
  8420  00CDF0  C00B  F003         	movff	__div_to_l_@quot+2,?__div_to_l_+2
  8421  00CDF4  C00C  F004         	movff	__div_to_l_@quot+3,?__div_to_l_+3
  8422  00CDF8                     l803:
  8423  00CDF8  0012               	return		;funcret
  8424  00CDFA                     __end_of__div_to_l_:
  8425                           	callstack 0
  8426                           
  8427 ;; *************** function ___xxtofl *****************
  8428 ;; Defined at:
  8429 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\xxtofl.c"
  8430 ;; Parameters:    Size  Location     Type
  8431 ;;  sign            1    wreg     unsigned char 
  8432 ;;  val             4   24[COMRAM] long 
  8433 ;; Auto vars:     Size  Location     Type
  8434 ;;  sign            1   32[COMRAM] unsigned char 
  8435 ;;  arg             4   34[COMRAM] unsigned long 
  8436 ;;  exp             1   33[COMRAM] unsigned char 
  8437 ;; Return value:  Size  Location     Type
  8438 ;;                  4   24[COMRAM] unsigned char 
  8439 ;; Registers used:
  8440 ;;		wreg, status,2, status,0
  8441 ;; Tracked objects:
  8442 ;;		On entry : 0/0
  8443 ;;		On exit  : 0/0
  8444 ;;		Unchanged: 0/0
  8445 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8446 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8447 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8448 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8449 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8450 ;;Total ram usage:       14 bytes
  8451 ;; Hardware stack levels used:    1
  8452 ;; This function calls:
  8453 ;;		Nothing
  8454 ;; This function is called by:
  8455 ;;		_main
  8456 ;;		_printf
  8457 ;;		_pow
  8458 ;;		_exp
  8459 ;;		_floor
  8460 ;;		_log
  8461 ;; This function uses a non-reentrant model
  8462 ;;
  8463                           
  8464                           	psect	text24
  8465  00D0F4                     __ptext24:
  8466                           	callstack 0
  8467  00D0F4                     ___xxtofl:
  8468                           	callstack 29
  8469                           
  8470                           ;incstack = 0
  8471                           ;___xxtofl@sign stored from wreg
  8472  00D0F4  6E21               	movwf	___xxtofl@sign^0,c
  8473  00D0F6  5021               	movf	___xxtofl@sign^0,w,c
  8474  00D0F8  B4D8               	btfsc	status,2,c
  8475  00D0FA  EF81  F068         	goto	u3531
  8476  00D0FE  EF83  F068         	goto	u3530
  8477  00D102                     u3531:
  8478  00D102  EFA5  F068         	goto	l1226
  8479  00D106                     u3530:
  8480  00D106  BE1C               	btfsc	(___xxtofl@val+3)^0,7,c
  8481  00D108  EF8A  F068         	goto	u3540
  8482  00D10C  EF88  F068         	goto	u3541
  8483  00D110                     u3541:
  8484  00D110  EFA5  F068         	goto	l1226
  8485  00D114                     u3540:
  8486  00D114  C019  F01D         	movff	___xxtofl@val,??___xxtofl
  8487  00D118  C01A  F01E         	movff	___xxtofl@val+1,??___xxtofl+1
  8488  00D11C  C01B  F01F         	movff	___xxtofl@val+2,??___xxtofl+2
  8489  00D120  C01C  F020         	movff	___xxtofl@val+3,??___xxtofl+3
  8490  00D124  1E1D               	comf	??___xxtofl^0,f,c
  8491  00D126  1E1E               	comf	(??___xxtofl+1)^0,f,c
  8492  00D128  1E1F               	comf	(??___xxtofl+2)^0,f,c
  8493  00D12A  1E20               	comf	(??___xxtofl+3)^0,f,c
  8494  00D12C  2A1D               	incf	??___xxtofl^0,f,c
  8495  00D12E  0E00               	movlw	0
  8496  00D130  221E               	addwfc	(??___xxtofl+1)^0,f,c
  8497  00D132  221F               	addwfc	(??___xxtofl+2)^0,f,c
  8498  00D134  2220               	addwfc	(??___xxtofl+3)^0,f,c
  8499  00D136  C01D  F023         	movff	??___xxtofl,___xxtofl@arg
  8500  00D13A  C01E  F024         	movff	??___xxtofl+1,___xxtofl@arg+1
  8501  00D13E  C01F  F025         	movff	??___xxtofl+2,___xxtofl@arg+2
  8502  00D142  C020  F026         	movff	??___xxtofl+3,___xxtofl@arg+3
  8503  00D146  EFAD  F068         	goto	l3722
  8504  00D14A                     l1226:
  8505  00D14A  C019  F023         	movff	___xxtofl@val,___xxtofl@arg
  8506  00D14E  C01A  F024         	movff	___xxtofl@val+1,___xxtofl@arg+1
  8507  00D152  C01B  F025         	movff	___xxtofl@val+2,___xxtofl@arg+2
  8508  00D156  C01C  F026         	movff	___xxtofl@val+3,___xxtofl@arg+3
  8509  00D15A                     l3722:
  8510  00D15A  5019               	movf	___xxtofl@val^0,w,c
  8511  00D15C  101A               	iorwf	(___xxtofl@val+1)^0,w,c
  8512  00D15E  101B               	iorwf	(___xxtofl@val+2)^0,w,c
  8513  00D160  101C               	iorwf	(___xxtofl@val+3)^0,w,c
  8514  00D162  A4D8               	btfss	status,2,c
  8515  00D164  EFB6  F068         	goto	u3551
  8516  00D168  EFB8  F068         	goto	u3550
  8517  00D16C                     u3551:
  8518  00D16C  EFC2  F068         	goto	l3728
  8519  00D170                     u3550:
  8520  00D170  0E00               	movlw	0
  8521  00D172  6E19               	movwf	?___xxtofl^0,c
  8522  00D174  0E00               	movlw	0
  8523  00D176  6E1A               	movwf	(?___xxtofl+1)^0,c
  8524  00D178  0E00               	movlw	0
  8525  00D17A  6E1B               	movwf	(?___xxtofl+2)^0,c
  8526  00D17C  0E00               	movlw	0
  8527  00D17E  6E1C               	movwf	(?___xxtofl+3)^0,c
  8528  00D180  EF53  F069         	goto	l1229
  8529  00D184                     l3728:
  8530  00D184  0E96               	movlw	150
  8531  00D186  6E22               	movwf	___xxtofl@exp^0,c
  8532  00D188  EFCC  F068         	goto	l3732
  8533  00D18C                     l3730:
  8534  00D18C  2A22               	incf	___xxtofl@exp^0,f,c
  8535  00D18E  90D8               	bcf	status,0,c
  8536  00D190  3226               	rrcf	(___xxtofl@arg+3)^0,f,c
  8537  00D192  3225               	rrcf	(___xxtofl@arg+2)^0,f,c
  8538  00D194  3224               	rrcf	(___xxtofl@arg+1)^0,f,c
  8539  00D196  3223               	rrcf	___xxtofl@arg^0,f,c
  8540  00D198                     l3732:
  8541  00D198  0E00               	movlw	0
  8542  00D19A  1423               	andwf	___xxtofl@arg^0,w,c
  8543  00D19C  6E1D               	movwf	??___xxtofl^0,c
  8544  00D19E  0E00               	movlw	0
  8545  00D1A0  1424               	andwf	(___xxtofl@arg+1)^0,w,c
  8546  00D1A2  6E1E               	movwf	(??___xxtofl+1)^0,c
  8547  00D1A4  0E00               	movlw	0
  8548  00D1A6  1425               	andwf	(___xxtofl@arg+2)^0,w,c
  8549  00D1A8  6E1F               	movwf	(??___xxtofl+2)^0,c
  8550  00D1AA  0EFE               	movlw	254
  8551  00D1AC  1426               	andwf	(___xxtofl@arg+3)^0,w,c
  8552  00D1AE  6E20               	movwf	(??___xxtofl+3)^0,c
  8553  00D1B0  501D               	movf	??___xxtofl^0,w,c
  8554  00D1B2  101E               	iorwf	(??___xxtofl+1)^0,w,c
  8555  00D1B4  101F               	iorwf	(??___xxtofl+2)^0,w,c
  8556  00D1B6  1020               	iorwf	(??___xxtofl+3)^0,w,c
  8557  00D1B8  A4D8               	btfss	status,2,c
  8558  00D1BA  EFE1  F068         	goto	u3561
  8559  00D1BE  EFE3  F068         	goto	u3560
  8560  00D1C2                     u3561:
  8561  00D1C2  EFC6  F068         	goto	l3730
  8562  00D1C6                     u3560:
  8563  00D1C6  EFF1  F068         	goto	l1233
  8564  00D1CA                     l3734:
  8565  00D1CA  2A22               	incf	___xxtofl@exp^0,f,c
  8566  00D1CC  0E01               	movlw	1
  8567  00D1CE  2623               	addwf	___xxtofl@arg^0,f,c
  8568  00D1D0  0E00               	movlw	0
  8569  00D1D2  2224               	addwfc	(___xxtofl@arg+1)^0,f,c
  8570  00D1D4  2225               	addwfc	(___xxtofl@arg+2)^0,f,c
  8571  00D1D6  2226               	addwfc	(___xxtofl@arg+3)^0,f,c
  8572  00D1D8  90D8               	bcf	status,0,c
  8573  00D1DA  3226               	rrcf	(___xxtofl@arg+3)^0,f,c
  8574  00D1DC  3225               	rrcf	(___xxtofl@arg+2)^0,f,c
  8575  00D1DE  3224               	rrcf	(___xxtofl@arg+1)^0,f,c
  8576  00D1E0  3223               	rrcf	___xxtofl@arg^0,f,c
  8577  00D1E2                     l1233:
  8578  00D1E2  0E00               	movlw	0
  8579  00D1E4  1423               	andwf	___xxtofl@arg^0,w,c
  8580  00D1E6  6E1D               	movwf	??___xxtofl^0,c
  8581  00D1E8  0E00               	movlw	0
  8582  00D1EA  1424               	andwf	(___xxtofl@arg+1)^0,w,c
  8583  00D1EC  6E1E               	movwf	(??___xxtofl+1)^0,c
  8584  00D1EE  0E00               	movlw	0
  8585  00D1F0  1425               	andwf	(___xxtofl@arg+2)^0,w,c
  8586  00D1F2  6E1F               	movwf	(??___xxtofl+2)^0,c
  8587  00D1F4  0EFF               	movlw	255
  8588  00D1F6  1426               	andwf	(___xxtofl@arg+3)^0,w,c
  8589  00D1F8  6E20               	movwf	(??___xxtofl+3)^0,c
  8590  00D1FA  501D               	movf	??___xxtofl^0,w,c
  8591  00D1FC  101E               	iorwf	(??___xxtofl+1)^0,w,c
  8592  00D1FE  101F               	iorwf	(??___xxtofl+2)^0,w,c
  8593  00D200  1020               	iorwf	(??___xxtofl+3)^0,w,c
  8594  00D202  A4D8               	btfss	status,2,c
  8595  00D204  EF06  F069         	goto	u3571
  8596  00D208  EF08  F069         	goto	u3570
  8597  00D20C                     u3571:
  8598  00D20C  EFE5  F068         	goto	l3734
  8599  00D210                     u3570:
  8600  00D210  EF10  F069         	goto	l3742
  8601  00D214                     l3740:
  8602  00D214  0622               	decf	___xxtofl@exp^0,f,c
  8603  00D216  90D8               	bcf	status,0,c
  8604  00D218  3623               	rlcf	___xxtofl@arg^0,f,c
  8605  00D21A  3624               	rlcf	(___xxtofl@arg+1)^0,f,c
  8606  00D21C  3625               	rlcf	(___xxtofl@arg+2)^0,f,c
  8607  00D21E  3626               	rlcf	(___xxtofl@arg+3)^0,f,c
  8608  00D220                     l3742:
  8609  00D220  BE25               	btfsc	(___xxtofl@arg+2)^0,7,c
  8610  00D222  EF15  F069         	goto	u3581
  8611  00D226  EF17  F069         	goto	u3580
  8612  00D22A                     u3581:
  8613  00D22A  EF1F  F069         	goto	l1240
  8614  00D22E                     u3580:
  8615  00D22E  0E02               	movlw	2
  8616  00D230  6022               	cpfslt	___xxtofl@exp^0,c
  8617  00D232  EF1D  F069         	goto	u3591
  8618  00D236  EF1F  F069         	goto	u3590
  8619  00D23A                     u3591:
  8620  00D23A  EF0A  F069         	goto	l3740
  8621  00D23E                     u3590:
  8622  00D23E                     l1240:
  8623  00D23E  B022               	btfsc	___xxtofl@exp^0,0,c
  8624  00D240  EF24  F069         	goto	u3601
  8625  00D244  EF26  F069         	goto	u3600
  8626  00D248                     u3601:
  8627  00D248  EF27  F069         	goto	l3748
  8628  00D24C                     u3600:
  8629  00D24C  9E25               	bcf	(___xxtofl@arg+2)^0,7,c
  8630  00D24E                     l3748:
  8631  00D24E  90D8               	bcf	status,0,c
  8632  00D250  3222               	rrcf	___xxtofl@exp^0,f,c
  8633  00D252  C022  F01D         	movff	___xxtofl@exp,??___xxtofl
  8634  00D256  6A1E               	clrf	(??___xxtofl+1)^0,c
  8635  00D258  6A1F               	clrf	(??___xxtofl+2)^0,c
  8636  00D25A  6A20               	clrf	(??___xxtofl+3)^0,c
  8637  00D25C  C01D  F020         	movff	??___xxtofl,??___xxtofl+3
  8638  00D260  6A1F               	clrf	(??___xxtofl+2)^0,c
  8639  00D262  6A1E               	clrf	(??___xxtofl+1)^0,c
  8640  00D264  6A1D               	clrf	??___xxtofl^0,c
  8641  00D266  501D               	movf	??___xxtofl^0,w,c
  8642  00D268  1223               	iorwf	___xxtofl@arg^0,f,c
  8643  00D26A  501E               	movf	(??___xxtofl+1)^0,w,c
  8644  00D26C  1224               	iorwf	(___xxtofl@arg+1)^0,f,c
  8645  00D26E  501F               	movf	(??___xxtofl+2)^0,w,c
  8646  00D270  1225               	iorwf	(___xxtofl@arg+2)^0,f,c
  8647  00D272  5020               	movf	(??___xxtofl+3)^0,w,c
  8648  00D274  1226               	iorwf	(___xxtofl@arg+3)^0,f,c
  8649  00D276  5021               	movf	___xxtofl@sign^0,w,c
  8650  00D278  B4D8               	btfsc	status,2,c
  8651  00D27A  EF41  F069         	goto	u3611
  8652  00D27E  EF43  F069         	goto	u3610
  8653  00D282                     u3611:
  8654  00D282  EF4B  F069         	goto	l3758
  8655  00D286                     u3610:
  8656  00D286  BE1C               	btfsc	(___xxtofl@val+3)^0,7,c
  8657  00D288  EF4A  F069         	goto	u3620
  8658  00D28C  EF48  F069         	goto	u3621
  8659  00D290                     u3621:
  8660  00D290  EF4B  F069         	goto	l3758
  8661  00D294                     u3620:
  8662  00D294  8E26               	bsf	(___xxtofl@arg+3)^0,7,c
  8663  00D296                     l3758:
  8664  00D296  C023  F019         	movff	___xxtofl@arg,?___xxtofl
  8665  00D29A  C024  F01A         	movff	___xxtofl@arg+1,?___xxtofl+1
  8666  00D29E  C025  F01B         	movff	___xxtofl@arg+2,?___xxtofl+2
  8667  00D2A2  C026  F01C         	movff	___xxtofl@arg+3,?___xxtofl+3
  8668  00D2A6                     l1229:
  8669  00D2A6  0012               	return		;funcret
  8670  00D2A8                     __end_of___xxtofl:
  8671                           	callstack 0
  8672                           
  8673 ;; *************** function ___wmul *****************
  8674 ;; Defined at:
  8675 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\Umul16.c"
  8676 ;; Parameters:    Size  Location     Type
  8677 ;;  multiplier      2    0[COMRAM] unsigned int 
  8678 ;;  multiplicand    2    2[COMRAM] unsigned int 
  8679 ;; Auto vars:     Size  Location     Type
  8680 ;;  product         2    4[COMRAM] unsigned int 
  8681 ;; Return value:  Size  Location     Type
  8682 ;;                  2    0[COMRAM] unsigned int 
  8683 ;; Registers used:
  8684 ;;		wreg, status,2, status,0, prodl, prodh
  8685 ;; Tracked objects:
  8686 ;;		On entry : 0/0
  8687 ;;		On exit  : 0/0
  8688 ;;		Unchanged: 0/0
  8689 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8690 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8691 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8692 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8693 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8694 ;;Total ram usage:        6 bytes
  8695 ;; Hardware stack levels used:    1
  8696 ;; This function calls:
  8697 ;;		Nothing
  8698 ;; This function is called by:
  8699 ;;		_printf
  8700 ;; This function uses a non-reentrant model
  8701 ;;
  8702                           
  8703                           	psect	text25
  8704  00BE52                     __ptext25:
  8705                           	callstack 0
  8706  00BE52                     ___wmul:
  8707                           	callstack 29
  8708  00BE52  5001               	movf	___wmul@multiplier^0,w,c
  8709  00BE54  0203               	mulwf	___wmul@multiplicand^0,c
  8710  00BE56  006F FFCC  F005    	movff	prodl,___wmul@product
  8711  00BE5C  006F FFD0  F006    	movff	prodh,___wmul@product+1
  8712  00BE62  5001               	movf	___wmul@multiplier^0,w,c
  8713  00BE64  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  8714  00BE66  50F3               	movf	243,w,c
  8715  00BE68  2606               	addwf	(___wmul@product+1)^0,f,c
  8716  00BE6A  5002               	movf	(___wmul@multiplier+1)^0,w,c
  8717  00BE6C  0203               	mulwf	___wmul@multiplicand^0,c
  8718  00BE6E  50F3               	movf	243,w,c
  8719  00BE70  2606               	addwf	(___wmul@product+1)^0,f,c
  8720  00BE72  C005  F001         	movff	___wmul@product,?___wmul
  8721  00BE76  C006  F002         	movff	___wmul@product+1,?___wmul+1
  8722  00BE7A  0012               	return		;funcret
  8723  00BE7C                     __end_of___wmul:
  8724                           	callstack 0
  8725                           
  8726 ;; *************** function ___llmod *****************
  8727 ;; Defined at:
  8728 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\llmod.c"
  8729 ;; Parameters:    Size  Location     Type
  8730 ;;  dividend        4   13[COMRAM] unsigned long 
  8731 ;;  divisor         4   17[COMRAM] unsigned long 
  8732 ;; Auto vars:     Size  Location     Type
  8733 ;;  counter         1   21[COMRAM] unsigned char 
  8734 ;; Return value:  Size  Location     Type
  8735 ;;                  4   13[COMRAM] unsigned long 
  8736 ;; Registers used:
  8737 ;;		wreg, status,2, status,0
  8738 ;; Tracked objects:
  8739 ;;		On entry : 0/0
  8740 ;;		On exit  : 0/0
  8741 ;;		Unchanged: 0/0
  8742 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8743 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8744 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8745 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8746 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8747 ;;Total ram usage:        9 bytes
  8748 ;; Hardware stack levels used:    1
  8749 ;; This function calls:
  8750 ;;		Nothing
  8751 ;; This function is called by:
  8752 ;;		_printf
  8753 ;; This function uses a non-reentrant model
  8754 ;;
  8755                           
  8756                           	psect	text26
  8757  00C244                     __ptext26:
  8758                           	callstack 0
  8759  00C244                     ___llmod:
  8760                           	callstack 29
  8761  00C244  5012               	movf	___llmod@divisor^0,w,c
  8762  00C246  1013               	iorwf	(___llmod@divisor+1)^0,w,c
  8763  00C248  1014               	iorwf	(___llmod@divisor+2)^0,w,c
  8764  00C24A  1015               	iorwf	(___llmod@divisor+3)^0,w,c
  8765  00C24C  B4D8               	btfsc	status,2,c
  8766  00C24E  EF2B  F061         	goto	u4171
  8767  00C252  EF2D  F061         	goto	u4170
  8768  00C256                     u4171:
  8769  00C256  EF5D  F061         	goto	l991
  8770  00C25A                     u4170:
  8771  00C25A  0E01               	movlw	1
  8772  00C25C  6E16               	movwf	___llmod@counter^0,c
  8773  00C25E  EF37  F061         	goto	l4160
  8774  00C262                     l4158:
  8775  00C262  90D8               	bcf	status,0,c
  8776  00C264  3612               	rlcf	___llmod@divisor^0,f,c
  8777  00C266  3613               	rlcf	(___llmod@divisor+1)^0,f,c
  8778  00C268  3614               	rlcf	(___llmod@divisor+2)^0,f,c
  8779  00C26A  3615               	rlcf	(___llmod@divisor+3)^0,f,c
  8780  00C26C  2A16               	incf	___llmod@counter^0,f,c
  8781  00C26E                     l4160:
  8782  00C26E  AE15               	btfss	(___llmod@divisor+3)^0,7,c
  8783  00C270  EF3C  F061         	goto	u4181
  8784  00C274  EF3E  F061         	goto	u4180
  8785  00C278                     u4181:
  8786  00C278  EF31  F061         	goto	l4158
  8787  00C27C                     u4180:
  8788  00C27C                     l4162:
  8789  00C27C  5012               	movf	___llmod@divisor^0,w,c
  8790  00C27E  5C0E               	subwf	___llmod@dividend^0,w,c
  8791  00C280  5013               	movf	(___llmod@divisor+1)^0,w,c
  8792  00C282  580F               	subwfb	(___llmod@dividend+1)^0,w,c
  8793  00C284  5014               	movf	(___llmod@divisor+2)^0,w,c
  8794  00C286  5810               	subwfb	(___llmod@dividend+2)^0,w,c
  8795  00C288  5015               	movf	(___llmod@divisor+3)^0,w,c
  8796  00C28A  5811               	subwfb	(___llmod@dividend+3)^0,w,c
  8797  00C28C  A0D8               	btfss	status,0,c
  8798  00C28E  EF4B  F061         	goto	u4191
  8799  00C292  EF4D  F061         	goto	u4190
  8800  00C296                     u4191:
  8801  00C296  EF55  F061         	goto	l4166
  8802  00C29A                     u4190:
  8803  00C29A  5012               	movf	___llmod@divisor^0,w,c
  8804  00C29C  5E0E               	subwf	___llmod@dividend^0,f,c
  8805  00C29E  5013               	movf	(___llmod@divisor+1)^0,w,c
  8806  00C2A0  5A0F               	subwfb	(___llmod@dividend+1)^0,f,c
  8807  00C2A2  5014               	movf	(___llmod@divisor+2)^0,w,c
  8808  00C2A4  5A10               	subwfb	(___llmod@dividend+2)^0,f,c
  8809  00C2A6  5015               	movf	(___llmod@divisor+3)^0,w,c
  8810  00C2A8  5A11               	subwfb	(___llmod@dividend+3)^0,f,c
  8811  00C2AA                     l4166:
  8812  00C2AA  90D8               	bcf	status,0,c
  8813  00C2AC  3215               	rrcf	(___llmod@divisor+3)^0,f,c
  8814  00C2AE  3214               	rrcf	(___llmod@divisor+2)^0,f,c
  8815  00C2B0  3213               	rrcf	(___llmod@divisor+1)^0,f,c
  8816  00C2B2  3212               	rrcf	___llmod@divisor^0,f,c
  8817  00C2B4  2E16               	decfsz	___llmod@counter^0,f,c
  8818  00C2B6  EF3E  F061         	goto	l4162
  8819  00C2BA                     l991:
  8820  00C2BA  C00E  F00E         	movff	___llmod@dividend,?___llmod
  8821  00C2BE  C00F  F00F         	movff	___llmod@dividend+1,?___llmod+1
  8822  00C2C2  C010  F010         	movff	___llmod@dividend+2,?___llmod+2
  8823  00C2C6  C011  F011         	movff	___llmod@dividend+3,?___llmod+3
  8824  00C2CA  0012               	return		;funcret
  8825  00C2CC                     __end_of___llmod:
  8826                           	callstack 0
  8827                           
  8828 ;; *************** function ___lldiv *****************
  8829 ;; Defined at:
  8830 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\__lldiv.c"
  8831 ;; Parameters:    Size  Location     Type
  8832 ;;  dividend        4    0[COMRAM] unsigned long 
  8833 ;;  divisor         4    4[COMRAM] unsigned long 
  8834 ;; Auto vars:     Size  Location     Type
  8835 ;;  quotient        4    8[COMRAM] unsigned long 
  8836 ;;  counter         1   12[COMRAM] unsigned char 
  8837 ;; Return value:  Size  Location     Type
  8838 ;;                  4    0[COMRAM] unsigned long 
  8839 ;; Registers used:
  8840 ;;		wreg, status,2, status,0
  8841 ;; Tracked objects:
  8842 ;;		On entry : 0/0
  8843 ;;		On exit  : 0/0
  8844 ;;		Unchanged: 0/0
  8845 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8846 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8847 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8848 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8849 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8850 ;;Total ram usage:       13 bytes
  8851 ;; Hardware stack levels used:    1
  8852 ;; This function calls:
  8853 ;;		Nothing
  8854 ;; This function is called by:
  8855 ;;		_printf
  8856 ;; This function uses a non-reentrant model
  8857 ;;
  8858                           
  8859                           	psect	text27
  8860  00C36C                     __ptext27:
  8861                           	callstack 0
  8862  00C36C                     ___lldiv:
  8863                           	callstack 29
  8864  00C36C  0E00               	movlw	0
  8865  00C36E  6E09               	movwf	___lldiv@quotient^0,c
  8866  00C370  0E00               	movlw	0
  8867  00C372  6E0A               	movwf	(___lldiv@quotient+1)^0,c
  8868  00C374  0E00               	movlw	0
  8869  00C376  6E0B               	movwf	(___lldiv@quotient+2)^0,c
  8870  00C378  0E00               	movlw	0
  8871  00C37A  6E0C               	movwf	(___lldiv@quotient+3)^0,c
  8872  00C37C  5005               	movf	___lldiv@divisor^0,w,c
  8873  00C37E  1006               	iorwf	(___lldiv@divisor+1)^0,w,c
  8874  00C380  1007               	iorwf	(___lldiv@divisor+2)^0,w,c
  8875  00C382  1008               	iorwf	(___lldiv@divisor+3)^0,w,c
  8876  00C384  B4D8               	btfsc	status,2,c
  8877  00C386  EFC7  F061         	goto	u3901
  8878  00C38A  EFC9  F061         	goto	u3900
  8879  00C38E                     u3901:
  8880  00C38E  EFFF  F061         	goto	l576
  8881  00C392                     u3900:
  8882  00C392  0E01               	movlw	1
  8883  00C394  6E0D               	movwf	___lldiv@counter^0,c
  8884  00C396  EFD3  F061         	goto	l3988
  8885  00C39A                     l3986:
  8886  00C39A  90D8               	bcf	status,0,c
  8887  00C39C  3605               	rlcf	___lldiv@divisor^0,f,c
  8888  00C39E  3606               	rlcf	(___lldiv@divisor+1)^0,f,c
  8889  00C3A0  3607               	rlcf	(___lldiv@divisor+2)^0,f,c
  8890  00C3A2  3608               	rlcf	(___lldiv@divisor+3)^0,f,c
  8891  00C3A4  2A0D               	incf	___lldiv@counter^0,f,c
  8892  00C3A6                     l3988:
  8893  00C3A6  AE08               	btfss	(___lldiv@divisor+3)^0,7,c
  8894  00C3A8  EFD8  F061         	goto	u3911
  8895  00C3AC  EFDA  F061         	goto	u3910
  8896  00C3B0                     u3911:
  8897  00C3B0  EFCD  F061         	goto	l3986
  8898  00C3B4                     u3910:
  8899  00C3B4                     l3990:
  8900  00C3B4  90D8               	bcf	status,0,c
  8901  00C3B6  3609               	rlcf	___lldiv@quotient^0,f,c
  8902  00C3B8  360A               	rlcf	(___lldiv@quotient+1)^0,f,c
  8903  00C3BA  360B               	rlcf	(___lldiv@quotient+2)^0,f,c
  8904  00C3BC  360C               	rlcf	(___lldiv@quotient+3)^0,f,c
  8905  00C3BE  5005               	movf	___lldiv@divisor^0,w,c
  8906  00C3C0  5C01               	subwf	___lldiv@dividend^0,w,c
  8907  00C3C2  5006               	movf	(___lldiv@divisor+1)^0,w,c
  8908  00C3C4  5802               	subwfb	(___lldiv@dividend+1)^0,w,c
  8909  00C3C6  5007               	movf	(___lldiv@divisor+2)^0,w,c
  8910  00C3C8  5803               	subwfb	(___lldiv@dividend+2)^0,w,c
  8911  00C3CA  5008               	movf	(___lldiv@divisor+3)^0,w,c
  8912  00C3CC  5804               	subwfb	(___lldiv@dividend+3)^0,w,c
  8913  00C3CE  A0D8               	btfss	status,0,c
  8914  00C3D0  EFEC  F061         	goto	u3921
  8915  00C3D4  EFEE  F061         	goto	u3920
  8916  00C3D8                     u3921:
  8917  00C3D8  EFF7  F061         	goto	l3998
  8918  00C3DC                     u3920:
  8919  00C3DC  5005               	movf	___lldiv@divisor^0,w,c
  8920  00C3DE  5E01               	subwf	___lldiv@dividend^0,f,c
  8921  00C3E0  5006               	movf	(___lldiv@divisor+1)^0,w,c
  8922  00C3E2  5A02               	subwfb	(___lldiv@dividend+1)^0,f,c
  8923  00C3E4  5007               	movf	(___lldiv@divisor+2)^0,w,c
  8924  00C3E6  5A03               	subwfb	(___lldiv@dividend+2)^0,f,c
  8925  00C3E8  5008               	movf	(___lldiv@divisor+3)^0,w,c
  8926  00C3EA  5A04               	subwfb	(___lldiv@dividend+3)^0,f,c
  8927  00C3EC  8009               	bsf	___lldiv@quotient^0,0,c
  8928  00C3EE                     l3998:
  8929  00C3EE  90D8               	bcf	status,0,c
  8930  00C3F0  3208               	rrcf	(___lldiv@divisor+3)^0,f,c
  8931  00C3F2  3207               	rrcf	(___lldiv@divisor+2)^0,f,c
  8932  00C3F4  3206               	rrcf	(___lldiv@divisor+1)^0,f,c
  8933  00C3F6  3205               	rrcf	___lldiv@divisor^0,f,c
  8934  00C3F8  2E0D               	decfsz	___lldiv@counter^0,f,c
  8935  00C3FA  EFDA  F061         	goto	l3990
  8936  00C3FE                     l576:
  8937  00C3FE  C009  F001         	movff	___lldiv@quotient,?___lldiv
  8938  00C402  C00A  F002         	movff	___lldiv@quotient+1,?___lldiv+1
  8939  00C406  C00B  F003         	movff	___lldiv@quotient+2,?___lldiv+2
  8940  00C40A  C00C  F004         	movff	___lldiv@quotient+3,?___lldiv+3
  8941  00C40E  0012               	return		;funcret
  8942  00C410                     __end_of___lldiv:
  8943                           	callstack 0
  8944                           
  8945 ;; *************** function ___fltol *****************
  8946 ;; Defined at:
  8947 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\fltol.c"
  8948 ;; Parameters:    Size  Location     Type
  8949 ;;  f1              4   14[COMRAM] unsigned long 
  8950 ;; Auto vars:     Size  Location     Type
  8951 ;;  exp1            1   23[COMRAM] unsigned char 
  8952 ;;  sign1           1   22[COMRAM] unsigned char 
  8953 ;; Return value:  Size  Location     Type
  8954 ;;                  4   14[COMRAM] long 
  8955 ;; Registers used:
  8956 ;;		wreg, status,2, status,0
  8957 ;; Tracked objects:
  8958 ;;		On entry : 0/0
  8959 ;;		On exit  : 0/0
  8960 ;;		Unchanged: 0/0
  8961 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8962 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8963 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8964 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8965 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8966 ;;Total ram usage:       10 bytes
  8967 ;; Hardware stack levels used:    1
  8968 ;; This function calls:
  8969 ;;		Nothing
  8970 ;; This function is called by:
  8971 ;;		_printf
  8972 ;;		_pow
  8973 ;;		_exp
  8974 ;;		_floor
  8975 ;; This function uses a non-reentrant model
  8976 ;;
  8977                           
  8978                           	psect	text28
  8979  00C80A                     __ptext28:
  8980                           	callstack 0
  8981  00C80A                     ___fltol:
  8982                           	callstack 29
  8983  00C80A  3411               	rlcf	(___fltol@f1+2)^0,w,c
  8984  00C80C  3412               	rlcf	(___fltol@f1+3)^0,w,c
  8985  00C80E  6E18               	movwf	___fltol@exp1^0,c
  8986  00C810  5018               	movf	___fltol@exp1^0,w,c
  8987  00C812  A4D8               	btfss	status,2,c
  8988  00C814  EF0E  F064         	goto	u3401
  8989  00C818  EF10  F064         	goto	u3400
  8990  00C81C                     u3401:
  8991  00C81C  EF1A  F064         	goto	l3640
  8992  00C820                     u3400:
  8993  00C820                     l3636:
  8994  00C820  0E00               	movlw	0
  8995  00C822  6E0F               	movwf	?___fltol^0,c
  8996  00C824  0E00               	movlw	0
  8997  00C826  6E10               	movwf	(?___fltol+1)^0,c
  8998  00C828  0E00               	movlw	0
  8999  00C82A  6E11               	movwf	(?___fltol+2)^0,c
  9000  00C82C  0E00               	movlw	0
  9001  00C82E  6E12               	movwf	(?___fltol+3)^0,c
  9002  00C830  EF87  F064         	goto	l855
  9003  00C834                     l3640:
  9004  00C834  C00F  F013         	movff	___fltol@f1,??___fltol
  9005  00C838  C010  F014         	movff	___fltol@f1+1,??___fltol+1
  9006  00C83C  C011  F015         	movff	___fltol@f1+2,??___fltol+2
  9007  00C840  C012  F016         	movff	___fltol@f1+3,??___fltol+3
  9008  00C844  0E20               	movlw	32
  9009  00C846  EF2A  F064         	goto	u3410
  9010  00C84A                     u3415:
  9011  00C84A  90D8               	bcf	status,0,c
  9012  00C84C  3216               	rrcf	(??___fltol+3)^0,f,c
  9013  00C84E  3215               	rrcf	(??___fltol+2)^0,f,c
  9014  00C850  3214               	rrcf	(??___fltol+1)^0,f,c
  9015  00C852  3213               	rrcf	??___fltol^0,f,c
  9016  00C854                     u3410:
  9017  00C854  2EE8               	decfsz	wreg,f,c
  9018  00C856  EF25  F064         	goto	u3415
  9019  00C85A  5013               	movf	??___fltol^0,w,c
  9020  00C85C  6E17               	movwf	___fltol@sign1^0,c
  9021  00C85E  8E11               	bsf	(___fltol@f1+2)^0,7,c
  9022  00C860  0EFF               	movlw	255
  9023  00C862  160F               	andwf	___fltol@f1^0,f,c
  9024  00C864  0EFF               	movlw	255
  9025  00C866  1610               	andwf	(___fltol@f1+1)^0,f,c
  9026  00C868  0EFF               	movlw	255
  9027  00C86A  1611               	andwf	(___fltol@f1+2)^0,f,c
  9028  00C86C  0E00               	movlw	0
  9029  00C86E  1612               	andwf	(___fltol@f1+3)^0,f,c
  9030  00C870  0E96               	movlw	150
  9031  00C872  5E18               	subwf	___fltol@exp1^0,f,c
  9032  00C874  BE18               	btfsc	___fltol@exp1^0,7,c
  9033  00C876  EF41  F064         	goto	u3420
  9034  00C87A  EF3F  F064         	goto	u3421
  9035  00C87E                     u3421:
  9036  00C87E  EF57  F064         	goto	l3660
  9037  00C882                     u3420:
  9038  00C882  5018               	movf	___fltol@exp1^0,w,c
  9039  00C884  0A80               	xorlw	128
  9040  00C886  0F97               	addlw	151
  9041  00C888  B0D8               	btfsc	status,0,c
  9042  00C88A  EF49  F064         	goto	u3431
  9043  00C88E  EF4B  F064         	goto	u3430
  9044  00C892                     u3431:
  9045  00C892  EF4D  F064         	goto	l3656
  9046  00C896                     u3430:
  9047  00C896  EF10  F064         	goto	l3636
  9048  00C89A                     l3656:
  9049  00C89A  90D8               	bcf	status,0,c
  9050  00C89C  3212               	rrcf	(___fltol@f1+3)^0,f,c
  9051  00C89E  3211               	rrcf	(___fltol@f1+2)^0,f,c
  9052  00C8A0  3210               	rrcf	(___fltol@f1+1)^0,f,c
  9053  00C8A2  320F               	rrcf	___fltol@f1^0,f,c
  9054  00C8A4  3E18               	incfsz	___fltol@exp1^0,f,c
  9055  00C8A6  EF4D  F064         	goto	l3656
  9056  00C8AA  EF6F  F064         	goto	l3670
  9057  00C8AE                     l3660:
  9058  00C8AE  0E1F               	movlw	31
  9059  00C8B0  6418               	cpfsgt	___fltol@exp1^0,c
  9060  00C8B2  EF5D  F064         	goto	u3441
  9061  00C8B6  EF5F  F064         	goto	u3440
  9062  00C8BA                     u3441:
  9063  00C8BA  EF67  F064         	goto	l3668
  9064  00C8BE                     u3440:
  9065  00C8BE  EF10  F064         	goto	l3636
  9066  00C8C2                     l3666:
  9067  00C8C2  90D8               	bcf	status,0,c
  9068  00C8C4  360F               	rlcf	___fltol@f1^0,f,c
  9069  00C8C6  3610               	rlcf	(___fltol@f1+1)^0,f,c
  9070  00C8C8  3611               	rlcf	(___fltol@f1+2)^0,f,c
  9071  00C8CA  3612               	rlcf	(___fltol@f1+3)^0,f,c
  9072  00C8CC  0618               	decf	___fltol@exp1^0,f,c
  9073  00C8CE                     l3668:
  9074  00C8CE  5018               	movf	___fltol@exp1^0,w,c
  9075  00C8D0  A4D8               	btfss	status,2,c
  9076  00C8D2  EF6D  F064         	goto	u3451
  9077  00C8D6  EF6F  F064         	goto	u3450
  9078  00C8DA                     u3451:
  9079  00C8DA  EF61  F064         	goto	l3666
  9080  00C8DE                     u3450:
  9081  00C8DE                     l3670:
  9082  00C8DE  5017               	movf	___fltol@sign1^0,w,c
  9083  00C8E0  B4D8               	btfsc	status,2,c
  9084  00C8E2  EF75  F064         	goto	u3461
  9085  00C8E6  EF77  F064         	goto	u3460
  9086  00C8EA                     u3461:
  9087  00C8EA  EF7F  F064         	goto	l3674
  9088  00C8EE                     u3460:
  9089  00C8EE  1E12               	comf	(___fltol@f1+3)^0,f,c
  9090  00C8F0  1E11               	comf	(___fltol@f1+2)^0,f,c
  9091  00C8F2  1E10               	comf	(___fltol@f1+1)^0,f,c
  9092  00C8F4  6C0F               	negf	___fltol@f1^0,c
  9093  00C8F6  0E00               	movlw	0
  9094  00C8F8  2210               	addwfc	(___fltol@f1+1)^0,f,c
  9095  00C8FA  2211               	addwfc	(___fltol@f1+2)^0,f,c
  9096  00C8FC  2212               	addwfc	(___fltol@f1+3)^0,f,c
  9097  00C8FE                     l3674:
  9098  00C8FE  C00F  F00F         	movff	___fltol@f1,?___fltol
  9099  00C902  C010  F010         	movff	___fltol@f1+1,?___fltol+1
  9100  00C906  C011  F011         	movff	___fltol@f1+2,?___fltol+2
  9101  00C90A  C012  F012         	movff	___fltol@f1+3,?___fltol+3
  9102  00C90E                     l855:
  9103  00C90E  0012               	return		;funcret
  9104  00C910                     __end_of___fltol:
  9105                           	callstack 0
  9106                           
  9107 ;; *************** function ___flsub *****************
  9108 ;; Defined at:
  9109 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\sprcadd.c"
  9110 ;; Parameters:    Size  Location     Type
  9111 ;;  b               4   86[COMRAM] long 
  9112 ;;  a               4   90[COMRAM] long 
  9113 ;; Auto vars:     Size  Location     Type
  9114 ;;		None
  9115 ;; Return value:  Size  Location     Type
  9116 ;;                  4   86[COMRAM] long 
  9117 ;; Registers used:
  9118 ;;		wreg, status,2, status,0, cstack
  9119 ;; Tracked objects:
  9120 ;;		On entry : 0/0
  9121 ;;		On exit  : 0/0
  9122 ;;		Unchanged: 0/0
  9123 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9124 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9125 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9126 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9127 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9128 ;;Total ram usage:        8 bytes
  9129 ;; Hardware stack levels used:    1
  9130 ;; Hardware stack levels required when called:    1
  9131 ;; This function calls:
  9132 ;;		___fladd
  9133 ;; This function is called by:
  9134 ;;		_main
  9135 ;;		_printf
  9136 ;;		_exp
  9137 ;; This function uses a non-reentrant model
  9138 ;;
  9139                           
  9140                           	psect	text29
  9141  00BF44                     __ptext29:
  9142                           	callstack 0
  9143  00BF44                     ___flsub:
  9144                           	callstack 28
  9145  00BF44  0E00               	movlw	0
  9146  00BF46  1A5B               	xorwf	___flsub@a^0,f,c
  9147  00BF48  0E00               	movlw	0
  9148  00BF4A  1A5C               	xorwf	(___flsub@a+1)^0,f,c
  9149  00BF4C  0E00               	movlw	0
  9150  00BF4E  1A5D               	xorwf	(___flsub@a+2)^0,f,c
  9151  00BF50  0E80               	movlw	128
  9152  00BF52  1A5E               	xorwf	(___flsub@a+3)^0,f,c
  9153  00BF54  C057  F03B         	movff	___flsub@b,___fladd@b
  9154  00BF58  C058  F03C         	movff	___flsub@b+1,___fladd@b+1
  9155  00BF5C  C059  F03D         	movff	___flsub@b+2,___fladd@b+2
  9156  00BF60  C05A  F03E         	movff	___flsub@b+3,___fladd@b+3
  9157  00BF64  C05B  F03F         	movff	___flsub@a,___fladd@a
  9158  00BF68  C05C  F040         	movff	___flsub@a+1,___fladd@a+1
  9159  00BF6C  C05D  F041         	movff	___flsub@a+2,___fladd@a+2
  9160  00BF70  C05E  F042         	movff	___flsub@a+3,___fladd@a+3
  9161  00BF74  ECC8  F073         	call	___fladd	;wreg free
  9162  00BF78  C03B  F057         	movff	?___fladd,?___flsub
  9163  00BF7C  C03C  F058         	movff	?___fladd+1,?___flsub+1
  9164  00BF80  C03D  F059         	movff	?___fladd+2,?___flsub+2
  9165  00BF84  C03E  F05A         	movff	?___fladd+3,?___flsub+3
  9166  00BF88  0012               	return		;funcret
  9167  00BF8A                     __end_of___flsub:
  9168                           	callstack 0
  9169                           
  9170 ;; *************** function ___fladd *****************
  9171 ;; Defined at:
  9172 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\sprcadd.c"
  9173 ;; Parameters:    Size  Location     Type
  9174 ;;  b               4   58[COMRAM] long 
  9175 ;;  a               4   62[COMRAM] long 
  9176 ;; Auto vars:     Size  Location     Type
  9177 ;;  grs             1   73[COMRAM] unsigned char 
  9178 ;;  bexp            1   72[COMRAM] unsigned char 
  9179 ;;  aexp            1   71[COMRAM] unsigned char 
  9180 ;;  signs           1   70[COMRAM] unsigned char 
  9181 ;; Return value:  Size  Location     Type
  9182 ;;                  4   58[COMRAM] unsigned char 
  9183 ;; Registers used:
  9184 ;;		wreg, status,2, status,0
  9185 ;; Tracked objects:
  9186 ;;		On entry : 0/0
  9187 ;;		On exit  : 0/0
  9188 ;;		Unchanged: 0/0
  9189 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9190 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9191 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9192 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9193 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9194 ;;Total ram usage:       16 bytes
  9195 ;; Hardware stack levels used:    1
  9196 ;; This function calls:
  9197 ;;		Nothing
  9198 ;; This function is called by:
  9199 ;;		_main
  9200 ;;		_printf
  9201 ;;		___flsub
  9202 ;;		_eval_poly
  9203 ;;		_floor
  9204 ;;		_log
  9205 ;; This function uses a non-reentrant model
  9206 ;;
  9207                           
  9208                           	psect	text30
  9209  00E790                     __ptext30:
  9210                           	callstack 0
  9211  00E790                     ___fladd:
  9212                           	callstack 28
  9213  00E790  503E               	movf	(___fladd@b+3)^0,w,c
  9214  00E792  0B80               	andlw	128
  9215  00E794  6E47               	movwf	___fladd@signs^0,c
  9216  00E796  503E               	movf	(___fladd@b+3)^0,w,c
  9217  00E798  243E               	addwf	(___fladd@b+3)^0,w,c
  9218  00E79A  6E49               	movwf	___fladd@bexp^0,c
  9219  00E79C  AE3D               	btfss	(___fladd@b+2)^0,7,c
  9220  00E79E  EFD3  F073         	goto	u2651
  9221  00E7A2  EFD5  F073         	goto	u2650
  9222  00E7A6                     u2651:
  9223  00E7A6  EFD6  F073         	goto	l3206
  9224  00E7AA                     u2650:
  9225  00E7AA  8049               	bsf	___fladd@bexp^0,0,c
  9226  00E7AC                     l3206:
  9227  00E7AC  5049               	movf	___fladd@bexp^0,w,c
  9228  00E7AE  B4D8               	btfsc	status,2,c
  9229  00E7B0  EFDC  F073         	goto	u2661
  9230  00E7B4  EFDE  F073         	goto	u2660
  9231  00E7B8                     u2661:
  9232  00E7B8  EFF3  F073         	goto	l3216
  9233  00E7BC                     u2660:
  9234  00E7BC  2849               	incf	___fladd@bexp^0,w,c
  9235  00E7BE  A4D8               	btfss	status,2,c
  9236  00E7C0  EFE4  F073         	goto	u2671
  9237  00E7C4  EFE6  F073         	goto	u2670
  9238  00E7C8                     u2671:
  9239  00E7C8  EFEE  F073         	goto	l3212
  9240  00E7CC                     u2670:
  9241  00E7CC  0E00               	movlw	0
  9242  00E7CE  6E3B               	movwf	___fladd@b^0,c
  9243  00E7D0  0E00               	movlw	0
  9244  00E7D2  6E3C               	movwf	(___fladd@b+1)^0,c
  9245  00E7D4  0E00               	movlw	0
  9246  00E7D6  6E3D               	movwf	(___fladd@b+2)^0,c
  9247  00E7D8  0E00               	movlw	0
  9248  00E7DA  6E3E               	movwf	(___fladd@b+3)^0,c
  9249  00E7DC                     l3212:
  9250  00E7DC  8E3D               	bsf	(___fladd@b+2)^0,7,c
  9251  00E7DE  0E00               	movlw	0
  9252  00E7E0  6E3E               	movwf	(___fladd@b+3)^0,c
  9253  00E7E2  EFFB  F073         	goto	l3218
  9254  00E7E6                     l3216:
  9255  00E7E6  0E00               	movlw	0
  9256  00E7E8  6E3B               	movwf	___fladd@b^0,c
  9257  00E7EA  0E00               	movlw	0
  9258  00E7EC  6E3C               	movwf	(___fladd@b+1)^0,c
  9259  00E7EE  0E00               	movlw	0
  9260  00E7F0  6E3D               	movwf	(___fladd@b+2)^0,c
  9261  00E7F2  0E00               	movlw	0
  9262  00E7F4  6E3E               	movwf	(___fladd@b+3)^0,c
  9263  00E7F6                     l3218:
  9264  00E7F6  5042               	movf	(___fladd@a+3)^0,w,c
  9265  00E7F8  0B80               	andlw	128
  9266  00E7FA  6E48               	movwf	___fladd@aexp^0,c
  9267  00E7FC  5047               	movf	___fladd@signs^0,w,c
  9268  00E7FE  1848               	xorwf	___fladd@aexp^0,w,c
  9269  00E800  B4D8               	btfsc	status,2,c
  9270  00E802  EF05  F074         	goto	u2681
  9271  00E806  EF07  F074         	goto	u2680
  9272  00E80A                     u2681:
  9273  00E80A  EF08  F074         	goto	l3224
  9274  00E80E                     u2680:
  9275  00E80E  8C47               	bsf	___fladd@signs^0,6,c
  9276  00E810                     l3224:
  9277  00E810  5042               	movf	(___fladd@a+3)^0,w,c
  9278  00E812  2442               	addwf	(___fladd@a+3)^0,w,c
  9279  00E814  6E48               	movwf	___fladd@aexp^0,c
  9280  00E816  AE41               	btfss	(___fladd@a+2)^0,7,c
  9281  00E818  EF10  F074         	goto	u2691
  9282  00E81C  EF12  F074         	goto	u2690
  9283  00E820                     u2691:
  9284  00E820  EF13  F074         	goto	l3230
  9285  00E824                     u2690:
  9286  00E824  8048               	bsf	___fladd@aexp^0,0,c
  9287  00E826                     l3230:
  9288  00E826  5048               	movf	___fladd@aexp^0,w,c
  9289  00E828  B4D8               	btfsc	status,2,c
  9290  00E82A  EF19  F074         	goto	u2701
  9291  00E82E  EF1B  F074         	goto	u2700
  9292  00E832                     u2701:
  9293  00E832  EF30  F074         	goto	l3240
  9294  00E836                     u2700:
  9295  00E836  2848               	incf	___fladd@aexp^0,w,c
  9296  00E838  A4D8               	btfss	status,2,c
  9297  00E83A  EF21  F074         	goto	u2711
  9298  00E83E  EF23  F074         	goto	u2710
  9299  00E842                     u2711:
  9300  00E842  EF2B  F074         	goto	l3236
  9301  00E846                     u2710:
  9302  00E846  0E00               	movlw	0
  9303  00E848  6E3F               	movwf	___fladd@a^0,c
  9304  00E84A  0E00               	movlw	0
  9305  00E84C  6E40               	movwf	(___fladd@a+1)^0,c
  9306  00E84E  0E00               	movlw	0
  9307  00E850  6E41               	movwf	(___fladd@a+2)^0,c
  9308  00E852  0E00               	movlw	0
  9309  00E854  6E42               	movwf	(___fladd@a+3)^0,c
  9310  00E856                     l3236:
  9311  00E856  8E41               	bsf	(___fladd@a+2)^0,7,c
  9312  00E858  0E00               	movlw	0
  9313  00E85A  6E42               	movwf	(___fladd@a+3)^0,c
  9314  00E85C  EF38  F074         	goto	l3242
  9315  00E860                     l3240:
  9316  00E860  0E00               	movlw	0
  9317  00E862  6E3F               	movwf	___fladd@a^0,c
  9318  00E864  0E00               	movlw	0
  9319  00E866  6E40               	movwf	(___fladd@a+1)^0,c
  9320  00E868  0E00               	movlw	0
  9321  00E86A  6E41               	movwf	(___fladd@a+2)^0,c
  9322  00E86C  0E00               	movlw	0
  9323  00E86E  6E42               	movwf	(___fladd@a+3)^0,c
  9324  00E870                     l3242:
  9325  00E870  5049               	movf	___fladd@bexp^0,w,c
  9326  00E872  5C48               	subwf	___fladd@aexp^0,w,c
  9327  00E874  B0D8               	btfsc	status,0,c
  9328  00E876  EF3F  F074         	goto	u2721
  9329  00E87A  EF41  F074         	goto	u2720
  9330  00E87E                     u2721:
  9331  00E87E  EF68  F074         	goto	l3278
  9332  00E882                     u2720:
  9333  00E882  AC47               	btfss	___fladd@signs^0,6,c
  9334  00E884  EF46  F074         	goto	u2731
  9335  00E888  EF48  F074         	goto	u2730
  9336  00E88C                     u2731:
  9337  00E88C  EF4A  F074         	goto	l3248
  9338  00E890                     u2730:
  9339  00E890  0E80               	movlw	128
  9340  00E892  1A47               	xorwf	___fladd@signs^0,f,c
  9341  00E894                     l3248:
  9342  00E894  C049  F04A         	movff	___fladd@bexp,___fladd@grs
  9343  00E898  C048  F049         	movff	___fladd@aexp,___fladd@bexp
  9344  00E89C  C04A  F048         	movff	___fladd@grs,___fladd@aexp
  9345  00E8A0  C03B  F04A         	movff	___fladd@b,___fladd@grs
  9346  00E8A4  C03F  F03B         	movff	___fladd@a,___fladd@b
  9347  00E8A8  C04A  F03F         	movff	___fladd@grs,___fladd@a
  9348  00E8AC  C03C  F04A         	movff	___fladd@b+1,___fladd@grs
  9349  00E8B0  C040  F03C         	movff	___fladd@a+1,___fladd@b+1
  9350  00E8B4  C04A  F040         	movff	___fladd@grs,___fladd@a+1
  9351  00E8B8  C03D  F04A         	movff	___fladd@b+2,___fladd@grs
  9352  00E8BC  C041  F03D         	movff	___fladd@a+2,___fladd@b+2
  9353  00E8C0  C04A  F041         	movff	___fladd@grs,___fladd@a+2
  9354  00E8C4  C03E  F04A         	movff	___fladd@b+3,___fladd@grs
  9355  00E8C8  C042  F03E         	movff	___fladd@a+3,___fladd@b+3
  9356  00E8CC  C04A  F042         	movff	___fladd@grs,___fladd@a+3
  9357  00E8D0                     l3278:
  9358  00E8D0  0E00               	movlw	0
  9359  00E8D2  6E4A               	movwf	___fladd@grs^0,c
  9360  00E8D4  5049               	movf	___fladd@bexp^0,w,c
  9361  00E8D6  C048  F043         	movff	___fladd@aexp,??___fladd
  9362  00E8DA  6A44               	clrf	(??___fladd+1)^0,c
  9363  00E8DC  5E43               	subwf	??___fladd^0,f,c
  9364  00E8DE  0E00               	movlw	0
  9365  00E8E0  5A44               	subwfb	(??___fladd+1)^0,f,c
  9366  00E8E2  BE44               	btfsc	(??___fladd+1)^0,7,c
  9367  00E8E4  EF7D  F074         	goto	u2741
  9368  00E8E8  5044               	movf	(??___fladd+1)^0,w,c
  9369  00E8EA  E109               	bnz	u2740
  9370  00E8EC  0E1A               	movlw	26
  9371  00E8EE  5C43               	subwf	??___fladd^0,w,c
  9372  00E8F0  A0D8               	btfss	status,0,c
  9373  00E8F2  EF7D  F074         	goto	u2741
  9374  00E8F6  EF7F  F074         	goto	u2740
  9375  00E8FA                     u2741:
  9376  00E8FA  EFB6  F074         	goto	l1100
  9377  00E8FE                     u2740:
  9378  00E8FE  503B               	movf	___fladd@b^0,w,c
  9379  00E900  103C               	iorwf	(___fladd@b+1)^0,w,c
  9380  00E902  103D               	iorwf	(___fladd@b+2)^0,w,c
  9381  00E904  103E               	iorwf	(___fladd@b+3)^0,w,c
  9382  00E906  A4D8               	btfss	status,2,c
  9383  00E908  EF88  F074         	goto	u2751
  9384  00E90C  EF8B  F074         	goto	u2750
  9385  00E910                     u2751:
  9386  00E910  0E01               	movlw	1
  9387  00E912  EF8C  F074         	goto	u2760
  9388  00E916                     u2750:
  9389  00E916  0E00               	movlw	0
  9390  00E918                     u2760:
  9391  00E918  6E4A               	movwf	___fladd@grs^0,c
  9392  00E91A  0E00               	movlw	0
  9393  00E91C  6E3B               	movwf	___fladd@b^0,c
  9394  00E91E  0E00               	movlw	0
  9395  00E920  6E3C               	movwf	(___fladd@b+1)^0,c
  9396  00E922  0E00               	movlw	0
  9397  00E924  6E3D               	movwf	(___fladd@b+2)^0,c
  9398  00E926  0E00               	movlw	0
  9399  00E928  6E3E               	movwf	(___fladd@b+3)^0,c
  9400  00E92A  C048  F049         	movff	___fladd@aexp,___fladd@bexp
  9401  00E92E  EFBF  F074         	goto	l1099
  9402  00E932                     l1101:
  9403  00E932  A04A               	btfss	___fladd@grs^0,0,c
  9404  00E934  EF9E  F074         	goto	u2771
  9405  00E938  EFA0  F074         	goto	u2770
  9406  00E93C                     u2771:
  9407  00E93C  EFA6  F074         	goto	l3290
  9408  00E940                     u2770:
  9409  00E940  90D8               	bcf	status,0,c
  9410  00E942  304A               	rrcf	___fladd@grs^0,w,c
  9411  00E944  0901               	iorlw	1
  9412  00E946  6E4A               	movwf	___fladd@grs^0,c
  9413  00E948  EFA8  F074         	goto	l3292
  9414  00E94C                     l3290:
  9415  00E94C  90D8               	bcf	status,0,c
  9416  00E94E  324A               	rrcf	___fladd@grs^0,f,c
  9417  00E950                     l3292:
  9418  00E950  A03B               	btfss	___fladd@b^0,0,c
  9419  00E952  EFAD  F074         	goto	u2781
  9420  00E956  EFAF  F074         	goto	u2780
  9421  00E95A                     u2781:
  9422  00E95A  EFB0  F074         	goto	l3296
  9423  00E95E                     u2780:
  9424  00E95E  8E4A               	bsf	___fladd@grs^0,7,c
  9425  00E960                     l3296:
  9426  00E960  343E               	rlcf	(___fladd@b+3)^0,w,c
  9427  00E962  323E               	rrcf	(___fladd@b+3)^0,f,c
  9428  00E964  323D               	rrcf	(___fladd@b+2)^0,f,c
  9429  00E966  323C               	rrcf	(___fladd@b+1)^0,f,c
  9430  00E968  323B               	rrcf	___fladd@b^0,f,c
  9431  00E96A  2A49               	incf	___fladd@bexp^0,f,c
  9432  00E96C                     l1100:
  9433  00E96C  5048               	movf	___fladd@aexp^0,w,c
  9434  00E96E  5C49               	subwf	___fladd@bexp^0,w,c
  9435  00E970  A0D8               	btfss	status,0,c
  9436  00E972  EFBD  F074         	goto	u2791
  9437  00E976  EFBF  F074         	goto	u2790
  9438  00E97A                     u2791:
  9439  00E97A  EF99  F074         	goto	l1101
  9440  00E97E                     u2790:
  9441  00E97E                     l1099:
  9442  00E97E  BC47               	btfsc	___fladd@signs^0,6,c
  9443  00E980  EFC4  F074         	goto	u2801
  9444  00E984  EFC6  F074         	goto	u2800
  9445  00E988                     u2801:
  9446  00E988  EF06  F075         	goto	l3324
  9447  00E98C                     u2800:
  9448  00E98C  5049               	movf	___fladd@bexp^0,w,c
  9449  00E98E  A4D8               	btfss	status,2,c
  9450  00E990  EFCC  F074         	goto	u2811
  9451  00E994  EFCE  F074         	goto	u2810
  9452  00E998                     u2811:
  9453  00E998  EFD8  F074         	goto	l3306
  9454  00E99C                     u2810:
  9455  00E99C  0E00               	movlw	0
  9456  00E99E  6E3B               	movwf	?___fladd^0,c
  9457  00E9A0  0E00               	movlw	0
  9458  00E9A2  6E3C               	movwf	(?___fladd+1)^0,c
  9459  00E9A4  0E00               	movlw	0
  9460  00E9A6  6E3D               	movwf	(?___fladd+2)^0,c
  9461  00E9A8  0E00               	movlw	0
  9462  00E9AA  6E3E               	movwf	(?___fladd+3)^0,c
  9463  00E9AC  EF27  F076         	goto	l1108
  9464  00E9B0                     l3306:
  9465  00E9B0  503F               	movf	___fladd@a^0,w,c
  9466  00E9B2  263B               	addwf	___fladd@b^0,f,c
  9467  00E9B4  5040               	movf	(___fladd@a+1)^0,w,c
  9468  00E9B6  223C               	addwfc	(___fladd@b+1)^0,f,c
  9469  00E9B8  5041               	movf	(___fladd@a+2)^0,w,c
  9470  00E9BA  223D               	addwfc	(___fladd@b+2)^0,f,c
  9471  00E9BC  5042               	movf	(___fladd@a+3)^0,w,c
  9472  00E9BE  223E               	addwfc	(___fladd@b+3)^0,f,c
  9473  00E9C0  A03E               	btfss	(___fladd@b+3)^0,0,c
  9474  00E9C2  EFE5  F074         	goto	u2821
  9475  00E9C6  EFE7  F074         	goto	u2820
  9476  00E9CA                     u2821:
  9477  00E9CA  EF93  F075         	goto	l3360
  9478  00E9CE                     u2820:
  9479  00E9CE  A04A               	btfss	___fladd@grs^0,0,c
  9480  00E9D0  EFEC  F074         	goto	u2831
  9481  00E9D4  EFEE  F074         	goto	u2830
  9482  00E9D8                     u2831:
  9483  00E9D8  EFF4  F074         	goto	l3314
  9484  00E9DC                     u2830:
  9485  00E9DC  90D8               	bcf	status,0,c
  9486  00E9DE  304A               	rrcf	___fladd@grs^0,w,c
  9487  00E9E0  0901               	iorlw	1
  9488  00E9E2  6E4A               	movwf	___fladd@grs^0,c
  9489  00E9E4  EFF6  F074         	goto	l3316
  9490  00E9E8                     l3314:
  9491  00E9E8  90D8               	bcf	status,0,c
  9492  00E9EA  324A               	rrcf	___fladd@grs^0,f,c
  9493  00E9EC                     l3316:
  9494  00E9EC  A03B               	btfss	___fladd@b^0,0,c
  9495  00E9EE  EFFB  F074         	goto	u2841
  9496  00E9F2  EFFD  F074         	goto	u2840
  9497  00E9F6                     u2841:
  9498  00E9F6  EFFE  F074         	goto	l3320
  9499  00E9FA                     u2840:
  9500  00E9FA  8E4A               	bsf	___fladd@grs^0,7,c
  9501  00E9FC                     l3320:
  9502  00E9FC  343E               	rlcf	(___fladd@b+3)^0,w,c
  9503  00E9FE  323E               	rrcf	(___fladd@b+3)^0,f,c
  9504  00EA00  323D               	rrcf	(___fladd@b+2)^0,f,c
  9505  00EA02  323C               	rrcf	(___fladd@b+1)^0,f,c
  9506  00EA04  323B               	rrcf	___fladd@b^0,f,c
  9507  00EA06  2A49               	incf	___fladd@bexp^0,f,c
  9508  00EA08  EF93  F075         	goto	l3360
  9509  00EA0C                     l3324:
  9510  00EA0C  503F               	movf	___fladd@a^0,w,c
  9511  00EA0E  5C3B               	subwf	___fladd@b^0,w,c
  9512  00EA10  5040               	movf	(___fladd@a+1)^0,w,c
  9513  00EA12  583C               	subwfb	(___fladd@b+1)^0,w,c
  9514  00EA14  5041               	movf	(___fladd@a+2)^0,w,c
  9515  00EA16  583D               	subwfb	(___fladd@b+2)^0,w,c
  9516  00EA18  503E               	movf	(___fladd@b+3)^0,w,c
  9517  00EA1A  0A80               	xorlw	128
  9518  00EA1C  6E43               	movwf	??___fladd^0,c
  9519  00EA1E  5042               	movf	(___fladd@a+3)^0,w,c
  9520  00EA20  0A80               	xorlw	128
  9521  00EA22  5843               	subwfb	??___fladd^0,w,c
  9522  00EA24  B0D8               	btfsc	status,0,c
  9523  00EA26  EF17  F075         	goto	u2851
  9524  00EA2A  EF19  F075         	goto	u2850
  9525  00EA2E                     u2851:
  9526  00EA2E  EF44  F075         	goto	l3334
  9527  00EA32                     u2850:
  9528  00EA32  503B               	movf	___fladd@b^0,w,c
  9529  00EA34  5C3F               	subwf	___fladd@a^0,w,c
  9530  00EA36  6E43               	movwf	??___fladd^0,c
  9531  00EA38  503C               	movf	(___fladd@b+1)^0,w,c
  9532  00EA3A  5840               	subwfb	(___fladd@a+1)^0,w,c
  9533  00EA3C  6E44               	movwf	(??___fladd+1)^0,c
  9534  00EA3E  503D               	movf	(___fladd@b+2)^0,w,c
  9535  00EA40  5841               	subwfb	(___fladd@a+2)^0,w,c
  9536  00EA42  6E45               	movwf	(??___fladd+2)^0,c
  9537  00EA44  503E               	movf	(___fladd@b+3)^0,w,c
  9538  00EA46  5842               	subwfb	(___fladd@a+3)^0,w,c
  9539  00EA48  6E46               	movwf	(??___fladd+3)^0,c
  9540  00EA4A  0EFF               	movlw	255
  9541  00EA4C  2443               	addwf	??___fladd^0,w,c
  9542  00EA4E  6E3B               	movwf	___fladd@b^0,c
  9543  00EA50  0EFF               	movlw	255
  9544  00EA52  2044               	addwfc	(??___fladd+1)^0,w,c
  9545  00EA54  6E3C               	movwf	(___fladd@b+1)^0,c
  9546  00EA56  0EFF               	movlw	255
  9547  00EA58  2045               	addwfc	(??___fladd+2)^0,w,c
  9548  00EA5A  6E3D               	movwf	(___fladd@b+2)^0,c
  9549  00EA5C  0EFF               	movlw	255
  9550  00EA5E  2046               	addwfc	(??___fladd+3)^0,w,c
  9551  00EA60  6E3E               	movwf	(___fladd@b+3)^0,c
  9552  00EA62  0E80               	movlw	128
  9553  00EA64  1A47               	xorwf	___fladd@signs^0,f,c
  9554  00EA66  6C4A               	negf	___fladd@grs^0,c
  9555  00EA68  504A               	movf	___fladd@grs^0,w,c
  9556  00EA6A  A4D8               	btfss	status,2,c
  9557  00EA6C  EF3A  F075         	goto	u2861
  9558  00EA70  EF3C  F075         	goto	u2860
  9559  00EA74                     u2861:
  9560  00EA74  EF4C  F075         	goto	l1116
  9561  00EA78                     u2860:
  9562  00EA78  0E01               	movlw	1
  9563  00EA7A  263B               	addwf	___fladd@b^0,f,c
  9564  00EA7C  0E00               	movlw	0
  9565  00EA7E  223C               	addwfc	(___fladd@b+1)^0,f,c
  9566  00EA80  223D               	addwfc	(___fladd@b+2)^0,f,c
  9567  00EA82  223E               	addwfc	(___fladd@b+3)^0,f,c
  9568  00EA84  EF4C  F075         	goto	l1116
  9569  00EA88                     l3334:
  9570  00EA88  503F               	movf	___fladd@a^0,w,c
  9571  00EA8A  5E3B               	subwf	___fladd@b^0,f,c
  9572  00EA8C  5040               	movf	(___fladd@a+1)^0,w,c
  9573  00EA8E  5A3C               	subwfb	(___fladd@b+1)^0,f,c
  9574  00EA90  5041               	movf	(___fladd@a+2)^0,w,c
  9575  00EA92  5A3D               	subwfb	(___fladd@b+2)^0,f,c
  9576  00EA94  5042               	movf	(___fladd@a+3)^0,w,c
  9577  00EA96  5A3E               	subwfb	(___fladd@b+3)^0,f,c
  9578  00EA98                     l1116:
  9579  00EA98  503B               	movf	___fladd@b^0,w,c
  9580  00EA9A  103C               	iorwf	(___fladd@b+1)^0,w,c
  9581  00EA9C  103D               	iorwf	(___fladd@b+2)^0,w,c
  9582  00EA9E  103E               	iorwf	(___fladd@b+3)^0,w,c
  9583  00EAA0  A4D8               	btfss	status,2,c
  9584  00EAA2  EF55  F075         	goto	u2871
  9585  00EAA6  EF57  F075         	goto	u2870
  9586  00EAAA                     u2871:
  9587  00EAAA  EF8C  F075         	goto	l3358
  9588  00EAAE                     u2870:
  9589  00EAAE  504A               	movf	___fladd@grs^0,w,c
  9590  00EAB0  A4D8               	btfss	status,2,c
  9591  00EAB2  EF5D  F075         	goto	u2881
  9592  00EAB6  EF5F  F075         	goto	u2880
  9593  00EABA                     u2881:
  9594  00EABA  EF8C  F075         	goto	l3358
  9595  00EABE                     u2880:
  9596  00EABE  0E00               	movlw	0
  9597  00EAC0  6E3B               	movwf	?___fladd^0,c
  9598  00EAC2  0E00               	movlw	0
  9599  00EAC4  6E3C               	movwf	(?___fladd+1)^0,c
  9600  00EAC6  0E00               	movlw	0
  9601  00EAC8  6E3D               	movwf	(?___fladd+2)^0,c
  9602  00EACA  0E00               	movlw	0
  9603  00EACC  6E3E               	movwf	(?___fladd+3)^0,c
  9604  00EACE  EF27  F076         	goto	l1108
  9605  00EAD2                     l3342:
  9606  00EAD2  90D8               	bcf	status,0,c
  9607  00EAD4  363B               	rlcf	___fladd@b^0,f,c
  9608  00EAD6  363C               	rlcf	(___fladd@b+1)^0,f,c
  9609  00EAD8  363D               	rlcf	(___fladd@b+2)^0,f,c
  9610  00EADA  363E               	rlcf	(___fladd@b+3)^0,f,c
  9611  00EADC  AE4A               	btfss	___fladd@grs^0,7,c
  9612  00EADE  EF73  F075         	goto	u2891
  9613  00EAE2  EF75  F075         	goto	u2890
  9614  00EAE6                     u2891:
  9615  00EAE6  EF76  F075         	goto	l3348
  9616  00EAEA                     u2890:
  9617  00EAEA  803B               	bsf	___fladd@b^0,0,c
  9618  00EAEC                     l3348:
  9619  00EAEC  A04A               	btfss	___fladd@grs^0,0,c
  9620  00EAEE  EF7B  F075         	goto	u2901
  9621  00EAF2  EF7D  F075         	goto	u2900
  9622  00EAF6                     u2901:
  9623  00EAF6  EF81  F075         	goto	l3352
  9624  00EAFA                     u2900:
  9625  00EAFA  80D8               	bsf	status,0,c
  9626  00EAFC  364A               	rlcf	___fladd@grs^0,f,c
  9627  00EAFE  EF83  F075         	goto	l3354
  9628  00EB02                     l3352:
  9629  00EB02  90D8               	bcf	status,0,c
  9630  00EB04  364A               	rlcf	___fladd@grs^0,f,c
  9631  00EB06                     l3354:
  9632  00EB06  5049               	movf	___fladd@bexp^0,w,c
  9633  00EB08  B4D8               	btfsc	status,2,c
  9634  00EB0A  EF89  F075         	goto	u2911
  9635  00EB0E  EF8B  F075         	goto	u2910
  9636  00EB12                     u2911:
  9637  00EB12  EF8C  F075         	goto	l3358
  9638  00EB16                     u2910:
  9639  00EB16  0649               	decf	___fladd@bexp^0,f,c
  9640  00EB18                     l3358:
  9641  00EB18  AE3D               	btfss	(___fladd@b+2)^0,7,c
  9642  00EB1A  EF91  F075         	goto	u2921
  9643  00EB1E  EF93  F075         	goto	u2920
  9644  00EB22                     u2921:
  9645  00EB22  EF69  F075         	goto	l3342
  9646  00EB26                     u2920:
  9647  00EB26                     l3360:
  9648  00EB26  0E00               	movlw	0
  9649  00EB28  6E48               	movwf	___fladd@aexp^0,c
  9650  00EB2A  AE4A               	btfss	___fladd@grs^0,7,c
  9651  00EB2C  EF9A  F075         	goto	u2931
  9652  00EB30  EF9C  F075         	goto	u2930
  9653  00EB34                     u2931:
  9654  00EB34  EFB4  F075         	goto	l1125
  9655  00EB38                     u2930:
  9656  00EB38  C04A  F043         	movff	___fladd@grs,??___fladd
  9657  00EB3C  0E7F               	movlw	127
  9658  00EB3E  1643               	andwf	??___fladd^0,f,c
  9659  00EB40  B4D8               	btfsc	status,2,c
  9660  00EB42  EFA5  F075         	goto	u2941
  9661  00EB46  EFA7  F075         	goto	u2940
  9662  00EB4A                     u2941:
  9663  00EB4A  EFAB  F075         	goto	l1126
  9664  00EB4E                     u2940:
  9665  00EB4E                     l3366:
  9666  00EB4E  0E01               	movlw	1
  9667  00EB50  6E48               	movwf	___fladd@aexp^0,c
  9668  00EB52  EFB4  F075         	goto	l1125
  9669  00EB56                     l1126:
  9670  00EB56  A03B               	btfss	___fladd@b^0,0,c
  9671  00EB58  EFB0  F075         	goto	u2951
  9672  00EB5C  EFB2  F075         	goto	u2950
  9673  00EB60                     u2951:
  9674  00EB60  EFB4  F075         	goto	l1125
  9675  00EB64                     u2950:
  9676  00EB64  EFA7  F075         	goto	l3366
  9677  00EB68                     l1125:
  9678  00EB68  5048               	movf	___fladd@aexp^0,w,c
  9679  00EB6A  B4D8               	btfsc	status,2,c
  9680  00EB6C  EFBA  F075         	goto	u2961
  9681  00EB70  EFBC  F075         	goto	u2960
  9682  00EB74                     u2961:
  9683  00EB74  EFE7  F075         	goto	l3378
  9684  00EB78                     u2960:
  9685  00EB78  0E01               	movlw	1
  9686  00EB7A  263B               	addwf	___fladd@b^0,f,c
  9687  00EB7C  0E00               	movlw	0
  9688  00EB7E  223C               	addwfc	(___fladd@b+1)^0,f,c
  9689  00EB80  223D               	addwfc	(___fladd@b+2)^0,f,c
  9690  00EB82  223E               	addwfc	(___fladd@b+3)^0,f,c
  9691  00EB84  A03E               	btfss	(___fladd@b+3)^0,0,c
  9692  00EB86  EFC7  F075         	goto	u2971
  9693  00EB8A  EFC9  F075         	goto	u2970
  9694  00EB8E                     u2971:
  9695  00EB8E  EFE7  F075         	goto	l3378
  9696  00EB92                     u2970:
  9697  00EB92  C03B  F043         	movff	___fladd@b,??___fladd
  9698  00EB96  C03C  F044         	movff	___fladd@b+1,??___fladd+1
  9699  00EB9A  C03D  F045         	movff	___fladd@b+2,??___fladd+2
  9700  00EB9E  C03E  F046         	movff	___fladd@b+3,??___fladd+3
  9701  00EBA2  3446               	rlcf	(??___fladd+3)^0,w,c
  9702  00EBA4  3246               	rrcf	(??___fladd+3)^0,f,c
  9703  00EBA6  3245               	rrcf	(??___fladd+2)^0,f,c
  9704  00EBA8  3244               	rrcf	(??___fladd+1)^0,f,c
  9705  00EBAA  3243               	rrcf	??___fladd^0,f,c
  9706  00EBAC  C043  F03B         	movff	??___fladd,___fladd@b
  9707  00EBB0  C044  F03C         	movff	??___fladd+1,___fladd@b+1
  9708  00EBB4  C045  F03D         	movff	??___fladd+2,___fladd@b+2
  9709  00EBB8  C046  F03E         	movff	??___fladd+3,___fladd@b+3
  9710  00EBBC  2849               	incf	___fladd@bexp^0,w,c
  9711  00EBBE  B4D8               	btfsc	status,2,c
  9712  00EBC0  EFE4  F075         	goto	u2981
  9713  00EBC4  EFE6  F075         	goto	u2980
  9714  00EBC8                     u2981:
  9715  00EBC8  EFE7  F075         	goto	l3378
  9716  00EBCC                     u2980:
  9717  00EBCC  2A49               	incf	___fladd@bexp^0,f,c
  9718  00EBCE                     l3378:
  9719  00EBCE  2849               	incf	___fladd@bexp^0,w,c
  9720  00EBD0  B4D8               	btfsc	status,2,c
  9721  00EBD2  EFED  F075         	goto	u2991
  9722  00EBD6  EFEF  F075         	goto	u2990
  9723  00EBDA                     u2991:
  9724  00EBDA  EFF7  F075         	goto	l3382
  9725  00EBDE                     u2990:
  9726  00EBDE  5049               	movf	___fladd@bexp^0,w,c
  9727  00EBE0  A4D8               	btfss	status,2,c
  9728  00EBE2  EFF5  F075         	goto	u3001
  9729  00EBE6  EFF7  F075         	goto	u3000
  9730  00EBEA                     u3001:
  9731  00EBEA  EF09  F076         	goto	l3386
  9732  00EBEE                     u3000:
  9733  00EBEE                     l3382:
  9734  00EBEE  0E00               	movlw	0
  9735  00EBF0  6E3B               	movwf	___fladd@b^0,c
  9736  00EBF2  0E00               	movlw	0
  9737  00EBF4  6E3C               	movwf	(___fladd@b+1)^0,c
  9738  00EBF6  0E00               	movlw	0
  9739  00EBF8  6E3D               	movwf	(___fladd@b+2)^0,c
  9740  00EBFA  0E00               	movlw	0
  9741  00EBFC  6E3E               	movwf	(___fladd@b+3)^0,c
  9742  00EBFE  5049               	movf	___fladd@bexp^0,w,c
  9743  00EC00  A4D8               	btfss	status,2,c
  9744  00EC02  EF05  F076         	goto	u3011
  9745  00EC06  EF07  F076         	goto	u3010
  9746  00EC0A                     u3011:
  9747  00EC0A  EF09  F076         	goto	l3386
  9748  00EC0E                     u3010:
  9749  00EC0E  0E00               	movlw	0
  9750  00EC10  6E47               	movwf	___fladd@signs^0,c
  9751  00EC12                     l3386:
  9752  00EC12  A049               	btfss	___fladd@bexp^0,0,c
  9753  00EC14  EF0E  F076         	goto	u3021
  9754  00EC18  EF10  F076         	goto	u3020
  9755  00EC1C                     u3021:
  9756  00EC1C  EF13  F076         	goto	l3390
  9757  00EC20                     u3020:
  9758  00EC20  8E3D               	bsf	(___fladd@b+2)^0,7,c
  9759  00EC22  EF14  F076         	goto	l3392
  9760  00EC26                     l3390:
  9761  00EC26  9E3D               	bcf	(___fladd@b+2)^0,7,c
  9762  00EC28                     l3392:
  9763  00EC28  90D8               	bcf	status,0,c
  9764  00EC2A  3049               	rrcf	___fladd@bexp^0,w,c
  9765  00EC2C  6E3E               	movwf	(___fladd@b+3)^0,c
  9766  00EC2E  AE47               	btfss	___fladd@signs^0,7,c
  9767  00EC30  EF1C  F076         	goto	u3031
  9768  00EC34  EF1E  F076         	goto	u3030
  9769  00EC38                     u3031:
  9770  00EC38  EF1F  F076         	goto	l3398
  9771  00EC3C                     u3030:
  9772  00EC3C  8E3E               	bsf	(___fladd@b+3)^0,7,c
  9773  00EC3E                     l3398:
  9774  00EC3E  C03B  F03B         	movff	___fladd@b,?___fladd
  9775  00EC42  C03C  F03C         	movff	___fladd@b+1,?___fladd+1
  9776  00EC46  C03D  F03D         	movff	___fladd@b+2,?___fladd+2
  9777  00EC4A  C03E  F03E         	movff	___fladd@b+3,?___fladd+3
  9778  00EC4E                     l1108:
  9779  00EC4E  0012               	return		;funcret
  9780  00EC50                     __end_of___fladd:
  9781                           	callstack 0
  9782                           
  9783 ;; *************** function ___flneg *****************
  9784 ;; Defined at:
  9785 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\flneg.c"
  9786 ;; Parameters:    Size  Location     Type
  9787 ;;  f1              4    0[COMRAM] unsigned char 
  9788 ;; Auto vars:     Size  Location     Type
  9789 ;;		None
  9790 ;; Return value:  Size  Location     Type
  9791 ;;                  4    0[COMRAM] unsigned char 
  9792 ;; Registers used:
  9793 ;;		wreg, status,2, status,0
  9794 ;; Tracked objects:
  9795 ;;		On entry : 0/0
  9796 ;;		On exit  : 0/0
  9797 ;;		Unchanged: 0/0
  9798 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9799 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9800 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9801 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9802 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9803 ;;Total ram usage:        4 bytes
  9804 ;; Hardware stack levels used:    1
  9805 ;; This function calls:
  9806 ;;		Nothing
  9807 ;; This function is called by:
  9808 ;;		_printf
  9809 ;;		_pow
  9810 ;;		_exp
  9811 ;; This function uses a non-reentrant model
  9812 ;;
  9813                           
  9814                           	psect	text31
  9815  00BF0C                     __ptext31:
  9816                           	callstack 0
  9817  00BF0C                     ___flneg:
  9818                           	callstack 29
  9819  00BF0C  5001               	movf	___flneg@f1^0,w,c
  9820  00BF0E  1002               	iorwf	(___flneg@f1+1)^0,w,c
  9821  00BF10  1003               	iorwf	(___flneg@f1+2)^0,w,c
  9822  00BF12  1004               	iorwf	(___flneg@f1+3)^0,w,c
  9823  00BF14  B4D8               	btfsc	status,2,c
  9824  00BF16  EF8F  F05F         	goto	u4161
  9825  00BF1A  EF91  F05F         	goto	u4160
  9826  00BF1E                     u4161:
  9827  00BF1E  EF99  F05F         	goto	l4150
  9828  00BF22                     u4160:
  9829  00BF22  0E00               	movlw	0
  9830  00BF24  1A01               	xorwf	___flneg@f1^0,f,c
  9831  00BF26  0E00               	movlw	0
  9832  00BF28  1A02               	xorwf	(___flneg@f1+1)^0,f,c
  9833  00BF2A  0E00               	movlw	0
  9834  00BF2C  1A03               	xorwf	(___flneg@f1+2)^0,f,c
  9835  00BF2E  0E80               	movlw	128
  9836  00BF30  1A04               	xorwf	(___flneg@f1+3)^0,f,c
  9837  00BF32                     l4150:
  9838  00BF32  C001  F001         	movff	___flneg@f1,?___flneg
  9839  00BF36  C002  F002         	movff	___flneg@f1+1,?___flneg+1
  9840  00BF3A  C003  F003         	movff	___flneg@f1+2,?___flneg+2
  9841  00BF3E  C004  F004         	movff	___flneg@f1+3,?___flneg+3
  9842  00BF42  0012               	return		;funcret
  9843  00BF44                     __end_of___flneg:
  9844                           	callstack 0
  9845                           
  9846 ;; *************** function ___flge *****************
  9847 ;; Defined at:
  9848 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\flge.c"
  9849 ;; Parameters:    Size  Location     Type
  9850 ;;  ff1             4    0[COMRAM] unsigned char 
  9851 ;;  ff2             4    4[COMRAM] unsigned char 
  9852 ;; Auto vars:     Size  Location     Type
  9853 ;;		None
  9854 ;; Return value:  Size  Location     Type
  9855 ;;		None               void
  9856 ;; Registers used:
  9857 ;;		wreg, status,2, status,0
  9858 ;; Tracked objects:
  9859 ;;		On entry : 0/0
  9860 ;;		On exit  : 0/0
  9861 ;;		Unchanged: 0/0
  9862 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9863 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9864 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9865 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9866 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9867 ;;Total ram usage:       12 bytes
  9868 ;; Hardware stack levels used:    1
  9869 ;; This function calls:
  9870 ;;		Nothing
  9871 ;; This function is called by:
  9872 ;;		_printf
  9873 ;;		_pow
  9874 ;;		_exp
  9875 ;;		_floor
  9876 ;; This function uses a non-reentrant model
  9877 ;;
  9878                           
  9879                           	psect	text32
  9880  00C706                     __ptext32:
  9881                           	callstack 0
  9882  00C706                     ___flge:
  9883                           	callstack 29
  9884  00C706  0E00               	movlw	0
  9885  00C708  1401               	andwf	___flge@ff1^0,w,c
  9886  00C70A  6E09               	movwf	??___flge^0,c
  9887  00C70C  0E00               	movlw	0
  9888  00C70E  1402               	andwf	(___flge@ff1+1)^0,w,c
  9889  00C710  6E0A               	movwf	(??___flge+1)^0,c
  9890  00C712  0E80               	movlw	128
  9891  00C714  1403               	andwf	(___flge@ff1+2)^0,w,c
  9892  00C716  6E0B               	movwf	(??___flge+2)^0,c
  9893  00C718  0E7F               	movlw	127
  9894  00C71A  1404               	andwf	(___flge@ff1+3)^0,w,c
  9895  00C71C  6E0C               	movwf	(??___flge+3)^0,c
  9896  00C71E  5009               	movf	??___flge^0,w,c
  9897  00C720  100A               	iorwf	(??___flge+1)^0,w,c
  9898  00C722  100B               	iorwf	(??___flge+2)^0,w,c
  9899  00C724  100C               	iorwf	(??___flge+3)^0,w,c
  9900  00C726  A4D8               	btfss	status,2,c
  9901  00C728  EF98  F063         	goto	u3351
  9902  00C72C  EF9A  F063         	goto	u3350
  9903  00C730                     u3351:
  9904  00C730  EFA2  F063         	goto	l3616
  9905  00C734                     u3350:
  9906  00C734  0E00               	movlw	0
  9907  00C736  6E01               	movwf	___flge@ff1^0,c
  9908  00C738  0E00               	movlw	0
  9909  00C73A  6E02               	movwf	(___flge@ff1+1)^0,c
  9910  00C73C  0E00               	movlw	0
  9911  00C73E  6E03               	movwf	(___flge@ff1+2)^0,c
  9912  00C740  0E00               	movlw	0
  9913  00C742  6E04               	movwf	(___flge@ff1+3)^0,c
  9914  00C744                     l3616:
  9915  00C744  0E00               	movlw	0
  9916  00C746  1405               	andwf	___flge@ff2^0,w,c
  9917  00C748  6E09               	movwf	??___flge^0,c
  9918  00C74A  0E00               	movlw	0
  9919  00C74C  1406               	andwf	(___flge@ff2+1)^0,w,c
  9920  00C74E  6E0A               	movwf	(??___flge+1)^0,c
  9921  00C750  0E80               	movlw	128
  9922  00C752  1407               	andwf	(___flge@ff2+2)^0,w,c
  9923  00C754  6E0B               	movwf	(??___flge+2)^0,c
  9924  00C756  0E7F               	movlw	127
  9925  00C758  1408               	andwf	(___flge@ff2+3)^0,w,c
  9926  00C75A  6E0C               	movwf	(??___flge+3)^0,c
  9927  00C75C  5009               	movf	??___flge^0,w,c
  9928  00C75E  100A               	iorwf	(??___flge+1)^0,w,c
  9929  00C760  100B               	iorwf	(??___flge+2)^0,w,c
  9930  00C762  100C               	iorwf	(??___flge+3)^0,w,c
  9931  00C764  A4D8               	btfss	status,2,c
  9932  00C766  EFB7  F063         	goto	u3361
  9933  00C76A  EFB9  F063         	goto	u3360
  9934  00C76E                     u3361:
  9935  00C76E  EFC1  F063         	goto	l3620
  9936  00C772                     u3360:
  9937  00C772  0E00               	movlw	0
  9938  00C774  6E05               	movwf	___flge@ff2^0,c
  9939  00C776  0E00               	movlw	0
  9940  00C778  6E06               	movwf	(___flge@ff2+1)^0,c
  9941  00C77A  0E00               	movlw	0
  9942  00C77C  6E07               	movwf	(___flge@ff2+2)^0,c
  9943  00C77E  0E00               	movlw	0
  9944  00C780  6E08               	movwf	(___flge@ff2+3)^0,c
  9945  00C782                     l3620:
  9946  00C782  AE04               	btfss	(___flge@ff1+3)^0,7,c
  9947  00C784  EFC6  F063         	goto	u3371
  9948  00C788  EFC8  F063         	goto	u3370
  9949  00C78C                     u3371:
  9950  00C78C  EFD1  F063         	goto	l3624
  9951  00C790                     u3370:
  9952  00C790  6C01               	negf	___flge@ff1^0,c
  9953  00C792  1E02               	comf	(___flge@ff1+1)^0,f,c
  9954  00C794  B0D8               	btfsc	status,0,c
  9955  00C796  2A02               	incf	(___flge@ff1+1)^0,f,c
  9956  00C798  1E03               	comf	(___flge@ff1+2)^0,f,c
  9957  00C79A  B0D8               	btfsc	status,0,c
  9958  00C79C  2A03               	incf	(___flge@ff1+2)^0,f,c
  9959  00C79E  0E80               	movlw	128
  9960  00C7A0  5604               	subfwb	(___flge@ff1+3)^0,f,c
  9961  00C7A2                     l3624:
  9962  00C7A2  AE08               	btfss	(___flge@ff2+3)^0,7,c
  9963  00C7A4  EFD6  F063         	goto	u3381
  9964  00C7A8  EFD8  F063         	goto	u3380
  9965  00C7AC                     u3381:
  9966  00C7AC  EFE1  F063         	goto	l827
  9967  00C7B0                     u3380:
  9968  00C7B0  6C05               	negf	___flge@ff2^0,c
  9969  00C7B2  1E06               	comf	(___flge@ff2+1)^0,f,c
  9970  00C7B4  B0D8               	btfsc	status,0,c
  9971  00C7B6  2A06               	incf	(___flge@ff2+1)^0,f,c
  9972  00C7B8  1E07               	comf	(___flge@ff2+2)^0,f,c
  9973  00C7BA  B0D8               	btfsc	status,0,c
  9974  00C7BC  2A07               	incf	(___flge@ff2+2)^0,f,c
  9975  00C7BE  0E80               	movlw	128
  9976  00C7C0  5608               	subfwb	(___flge@ff2+3)^0,f,c
  9977  00C7C2                     l827:
  9978  00C7C2  0E00               	movlw	0
  9979  00C7C4  1A01               	xorwf	___flge@ff1^0,f,c
  9980  00C7C6  0E00               	movlw	0
  9981  00C7C8  1A02               	xorwf	(___flge@ff1+1)^0,f,c
  9982  00C7CA  0E00               	movlw	0
  9983  00C7CC  1A03               	xorwf	(___flge@ff1+2)^0,f,c
  9984  00C7CE  0E80               	movlw	128
  9985  00C7D0  1A04               	xorwf	(___flge@ff1+3)^0,f,c
  9986  00C7D2  0E00               	movlw	0
  9987  00C7D4  1A05               	xorwf	___flge@ff2^0,f,c
  9988  00C7D6  0E00               	movlw	0
  9989  00C7D8  1A06               	xorwf	(___flge@ff2+1)^0,f,c
  9990  00C7DA  0E00               	movlw	0
  9991  00C7DC  1A07               	xorwf	(___flge@ff2+2)^0,f,c
  9992  00C7DE  0E80               	movlw	128
  9993  00C7E0  1A08               	xorwf	(___flge@ff2+3)^0,f,c
  9994  00C7E2  5005               	movf	___flge@ff2^0,w,c
  9995  00C7E4  5C01               	subwf	___flge@ff1^0,w,c
  9996  00C7E6  5006               	movf	(___flge@ff2+1)^0,w,c
  9997  00C7E8  5802               	subwfb	(___flge@ff1+1)^0,w,c
  9998  00C7EA  5007               	movf	(___flge@ff2+2)^0,w,c
  9999  00C7EC  5803               	subwfb	(___flge@ff1+2)^0,w,c
 10000  00C7EE  5008               	movf	(___flge@ff2+3)^0,w,c
 10001  00C7F0  5804               	subwfb	(___flge@ff1+3)^0,w,c
 10002  00C7F2  B0D8               	btfsc	status,0,c
 10003  00C7F4  EFFE  F063         	goto	u3391
 10004  00C7F8  EF00  F064         	goto	u3390
 10005  00C7FC                     u3391:
 10006  00C7FC  EF03  F064         	goto	l3630
 10007  00C800                     u3390:
 10008  00C800  90D8               	bcf	status,0,c
 10009  00C802  EF04  F064         	goto	l828
 10010  00C806                     l3630:
 10011  00C806  80D8               	bsf	status,0,c
 10012  00C808                     l828:
 10013  00C808  0012               	return		;funcret
 10014  00C80A                     __end_of___flge:
 10015                           	callstack 0
 10016                           
 10017 ;; *************** function ___fleq *****************
 10018 ;; Defined at:
 10019 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\fleq.c"
 10020 ;; Parameters:    Size  Location     Type
 10021 ;;  ff1             4   38[COMRAM] unsigned char 
 10022 ;;  ff2             4   42[COMRAM] unsigned char 
 10023 ;; Auto vars:     Size  Location     Type
 10024 ;;		None
 10025 ;; Return value:  Size  Location     Type
 10026 ;;		None               void
 10027 ;; Registers used:
 10028 ;;		wreg, status,2, status,0
 10029 ;; Tracked objects:
 10030 ;;		On entry : 0/0
 10031 ;;		On exit  : 0/0
 10032 ;;		Unchanged: 0/0
 10033 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10034 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10035 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10036 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10037 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10038 ;;Total ram usage:       12 bytes
 10039 ;; Hardware stack levels used:    1
 10040 ;; This function calls:
 10041 ;;		Nothing
 10042 ;; This function is called by:
 10043 ;;		_printf
 10044 ;;		_pow
 10045 ;;		_exp
 10046 ;;		_frexp
 10047 ;;		_ldexp
 10048 ;;		_log
 10049 ;; This function uses a non-reentrant model
 10050 ;;
 10051                           
 10052                           	psect	text33
 10053  00C410                     __ptext33:
 10054                           	callstack 0
 10055  00C410                     ___fleq:
 10056                           	callstack 29
 10057  00C410  0E00               	movlw	0
 10058  00C412  1427               	andwf	___fleq@ff1^0,w,c
 10059  00C414  6E2F               	movwf	??___fleq^0,c
 10060  00C416  0E00               	movlw	0
 10061  00C418  1428               	andwf	(___fleq@ff1+1)^0,w,c
 10062  00C41A  6E30               	movwf	(??___fleq+1)^0,c
 10063  00C41C  0E80               	movlw	128
 10064  00C41E  1429               	andwf	(___fleq@ff1+2)^0,w,c
 10065  00C420  6E31               	movwf	(??___fleq+2)^0,c
 10066  00C422  0E7F               	movlw	127
 10067  00C424  142A               	andwf	(___fleq@ff1+3)^0,w,c
 10068  00C426  6E32               	movwf	(??___fleq+3)^0,c
 10069  00C428  502F               	movf	??___fleq^0,w,c
 10070  00C42A  1030               	iorwf	(??___fleq+1)^0,w,c
 10071  00C42C  1031               	iorwf	(??___fleq+2)^0,w,c
 10072  00C42E  1032               	iorwf	(??___fleq+3)^0,w,c
 10073  00C430  A4D8               	btfss	status,2,c
 10074  00C432  EF1D  F062         	goto	u2611
 10075  00C436  EF1F  F062         	goto	u2610
 10076  00C43A                     u2611:
 10077  00C43A  EF27  F062         	goto	l3184
 10078  00C43E                     u2610:
 10079  00C43E  0E00               	movlw	0
 10080  00C440  6E27               	movwf	___fleq@ff1^0,c
 10081  00C442  0E00               	movlw	0
 10082  00C444  6E28               	movwf	(___fleq@ff1+1)^0,c
 10083  00C446  0E00               	movlw	0
 10084  00C448  6E29               	movwf	(___fleq@ff1+2)^0,c
 10085  00C44A  0E00               	movlw	0
 10086  00C44C  6E2A               	movwf	(___fleq@ff1+3)^0,c
 10087  00C44E                     l3184:
 10088  00C44E  0E00               	movlw	0
 10089  00C450  142B               	andwf	___fleq@ff2^0,w,c
 10090  00C452  6E2F               	movwf	??___fleq^0,c
 10091  00C454  0E00               	movlw	0
 10092  00C456  142C               	andwf	(___fleq@ff2+1)^0,w,c
 10093  00C458  6E30               	movwf	(??___fleq+1)^0,c
 10094  00C45A  0E80               	movlw	128
 10095  00C45C  142D               	andwf	(___fleq@ff2+2)^0,w,c
 10096  00C45E  6E31               	movwf	(??___fleq+2)^0,c
 10097  00C460  0E7F               	movlw	127
 10098  00C462  142E               	andwf	(___fleq@ff2+3)^0,w,c
 10099  00C464  6E32               	movwf	(??___fleq+3)^0,c
 10100  00C466  502F               	movf	??___fleq^0,w,c
 10101  00C468  1030               	iorwf	(??___fleq+1)^0,w,c
 10102  00C46A  1031               	iorwf	(??___fleq+2)^0,w,c
 10103  00C46C  1032               	iorwf	(??___fleq+3)^0,w,c
 10104  00C46E  A4D8               	btfss	status,2,c
 10105  00C470  EF3C  F062         	goto	u2621
 10106  00C474  EF3E  F062         	goto	u2620
 10107  00C478                     u2621:
 10108  00C478  EF46  F062         	goto	l3188
 10109  00C47C                     u2620:
 10110  00C47C  0E00               	movlw	0
 10111  00C47E  6E2B               	movwf	___fleq@ff2^0,c
 10112  00C480  0E00               	movlw	0
 10113  00C482  6E2C               	movwf	(___fleq@ff2+1)^0,c
 10114  00C484  0E00               	movlw	0
 10115  00C486  6E2D               	movwf	(___fleq@ff2+2)^0,c
 10116  00C488  0E00               	movlw	0
 10117  00C48A  6E2E               	movwf	(___fleq@ff2+3)^0,c
 10118  00C48C                     l3188:
 10119  00C48C  502B               	movf	___fleq@ff2^0,w,c
 10120  00C48E  1827               	xorwf	___fleq@ff1^0,w,c
 10121  00C490  E10F               	bnz	u2630
 10122  00C492  502C               	movf	(___fleq@ff2+1)^0,w,c
 10123  00C494  1828               	xorwf	(___fleq@ff1+1)^0,w,c
 10124  00C496  E10C               	bnz	u2630
 10125  00C498  502D               	movf	(___fleq@ff2+2)^0,w,c
 10126  00C49A  1829               	xorwf	(___fleq@ff1+2)^0,w,c
 10127  00C49C  E109               	bnz	u2630
 10128  00C49E  502E               	movf	(___fleq@ff2+3)^0,w,c
 10129  00C4A0  182A               	xorwf	(___fleq@ff1+3)^0,w,c
 10130  00C4A2  B4D8               	btfsc	status,2,c
 10131  00C4A4  EF56  F062         	goto	u2631
 10132  00C4A8  EF58  F062         	goto	u2630
 10133  00C4AC                     u2631:
 10134  00C4AC  EF5B  F062         	goto	l3192
 10135  00C4B0                     u2630:
 10136  00C4B0  90D8               	bcf	status,0,c
 10137  00C4B2  EF5C  F062         	goto	l821
 10138  00C4B6                     l3192:
 10139  00C4B6  80D8               	bsf	status,0,c
 10140  00C4B8                     l821:
 10141  00C4B8  0012               	return		;funcret
 10142  00C4BA                     __end_of___fleq:
 10143                           	callstack 0
 10144                           
 10145 ;; *************** function _poll_switch1_for_edges *****************
 10146 ;; Defined at:
 10147 ;;		line 22 in file "buttons.c"
 10148 ;; Parameters:    Size  Location     Type
 10149 ;;  digitalinput    2    0[COMRAM] unsigned int 
 10150 ;; Auto vars:     Size  Location     Type
 10151 ;;  has_switch1_    2    2[COMRAM] unsigned int 
 10152 ;; Return value:  Size  Location     Type
 10153 ;;                  2    0[COMRAM] unsigned int 
 10154 ;; Registers used:
 10155 ;;		wreg, status,2, status,0
 10156 ;; Tracked objects:
 10157 ;;		On entry : 0/0
 10158 ;;		On exit  : 0/0
 10159 ;;		Unchanged: 0/0
 10160 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10161 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10162 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10163 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10164 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10165 ;;Total ram usage:        4 bytes
 10166 ;; Hardware stack levels used:    1
 10167 ;; This function calls:
 10168 ;;		Nothing
 10169 ;; This function is called by:
 10170 ;;		_buttonResponse
 10171 ;; This function uses a non-reentrant model
 10172 ;;
 10173                           
 10174                           	psect	text34
 10175  00C0C0                     __ptext34:
 10176                           	callstack 0
 10177  00C0C0                     _poll_switch1_for_edges:
 10178                           	callstack 29
 10179  00C0C0                     
 10180                           ;buttons.c: 25: unsigned int has_switch1_changed = 0;
 10181  00C0C0  0E00               	movlw	0
 10182  00C0C2  6E04               	movwf	(poll_switch1_for_edges@has_switch1_changed+1)^0,c
 10183  00C0C4  0E00               	movlw	0
 10184  00C0C6  6E03               	movwf	poll_switch1_for_edges@has_switch1_changed^0,c
 10185  00C0C8                     
 10186                           ;buttons.c: 27: if (last_switch1_value == 0 && digitalinputpin >> 0)
 10187  00C0C8  0101               	movlb	1	; () banked
 10188  00C0CA  510A               	movf	_last_switch1_value& (0+255),w,b
 10189  00C0CC  110B               	iorwf	(_last_switch1_value+1)& (0+255),w,b
 10190  00C0CE  A4D8               	btfss	status,2,c
 10191  00C0D0  EF6C  F060         	goto	u4701
 10192  00C0D4  EF6E  F060         	goto	u4700
 10193  00C0D8                     u4701:
 10194  00C0D8  EF7F  F060         	goto	l4554
 10195  00C0DC                     u4700:
 10196  00C0DC                     
 10197                           ; BSR set to: 1
 10198  00C0DC  5001               	movf	poll_switch1_for_edges@digitalinputpin^0,w,c
 10199  00C0DE  1002               	iorwf	(poll_switch1_for_edges@digitalinputpin+1)^0,w,c
 10200  00C0E0  B4D8               	btfsc	status,2,c
 10201  00C0E2  EF75  F060         	goto	u4711
 10202  00C0E6  EF77  F060         	goto	u4710
 10203  00C0EA                     u4711:
 10204  00C0EA  EF7F  F060         	goto	l4554
 10205  00C0EE                     u4710:
 10206  00C0EE                     
 10207                           ; BSR set to: 1
 10208                           ;buttons.c: 28: {;buttons.c: 29: last_switch1_value = 1;
 10209  00C0EE  0E00               	movlw	0
 10210  00C0F0  6F0B               	movwf	(_last_switch1_value+1)& (0+255),b
 10211  00C0F2  0E01               	movlw	1
 10212  00C0F4  6F0A               	movwf	_last_switch1_value& (0+255),b
 10213                           
 10214                           ;buttons.c: 30: has_switch1_changed = 1;
 10215  00C0F6  0E00               	movlw	0
 10216  00C0F8  6E04               	movwf	(poll_switch1_for_edges@has_switch1_changed+1)^0,c
 10217  00C0FA  0E01               	movlw	1
 10218  00C0FC  6E03               	movwf	poll_switch1_for_edges@has_switch1_changed^0,c
 10219  00C0FE                     l4554:
 10220                           
 10221                           ; BSR set to: 1
 10222                           ;buttons.c: 31: };buttons.c: 32: if (last_switch1_value == 1 && digitalinputpin == 0)
 10223  00C0FE  050A               	decf	_last_switch1_value& (0+255),w,b
 10224  00C100  110B               	iorwf	(_last_switch1_value+1)& (0+255),w,b
 10225  00C102  A4D8               	btfss	status,2,c
 10226  00C104  EF86  F060         	goto	u4721
 10227  00C108  EF88  F060         	goto	u4720
 10228  00C10C                     u4721:
 10229  00C10C  EF99  F060         	goto	l4560
 10230  00C110                     u4720:
 10231  00C110                     
 10232                           ; BSR set to: 1
 10233  00C110  5001               	movf	poll_switch1_for_edges@digitalinputpin^0,w,c
 10234  00C112  1002               	iorwf	(poll_switch1_for_edges@digitalinputpin+1)^0,w,c
 10235  00C114  A4D8               	btfss	status,2,c
 10236  00C116  EF8F  F060         	goto	u4731
 10237  00C11A  EF91  F060         	goto	u4730
 10238  00C11E                     u4731:
 10239  00C11E  EF99  F060         	goto	l4560
 10240  00C122                     u4730:
 10241  00C122                     
 10242                           ; BSR set to: 1
 10243                           ;buttons.c: 33: {;buttons.c: 34: last_switch1_value = 0;
 10244  00C122  0E00               	movlw	0
 10245  00C124  6F0B               	movwf	(_last_switch1_value+1)& (0+255),b
 10246  00C126  0E00               	movlw	0
 10247  00C128  6F0A               	movwf	_last_switch1_value& (0+255),b
 10248                           
 10249                           ;buttons.c: 35: has_switch1_changed = 2;
 10250  00C12A  0E00               	movlw	0
 10251  00C12C  6E04               	movwf	(poll_switch1_for_edges@has_switch1_changed+1)^0,c
 10252  00C12E  0E02               	movlw	2
 10253  00C130  6E03               	movwf	poll_switch1_for_edges@has_switch1_changed^0,c
 10254  00C132                     l4560:
 10255                           
 10256                           ; BSR set to: 1
 10257                           ;buttons.c: 36: };buttons.c: 38: return has_switch1_changed;
 10258  00C132  C003  F001         	movff	poll_switch1_for_edges@has_switch1_changed,?_poll_switch1_for_edges
 10259  00C136  C004  F002         	movff	poll_switch1_for_edges@has_switch1_changed+1,?_poll_switch1_for_edges+1
 10260  00C13A                     
 10261                           ; BSR set to: 1
 10262  00C13A  0012               	return		;funcret
 10263  00C13C                     __end_of_poll_switch1_for_edges:
 10264                           	callstack 0
 10265                           
 10266 ;; *************** function _DELAY_milliseconds *****************
 10267 ;; Defined at:
 10268 ;;		line 38 in file "mcc_generated_files/delay.c"
 10269 ;; Parameters:    Size  Location     Type
 10270 ;;  milliseconds    2    0[COMRAM] unsigned int 
 10271 ;; Auto vars:     Size  Location     Type
 10272 ;;		None
 10273 ;; Return value:  Size  Location     Type
 10274 ;;                  1    wreg      void 
 10275 ;; Registers used:
 10276 ;;		wreg, status,2, status,0
 10277 ;; Tracked objects:
 10278 ;;		On entry : 0/0
 10279 ;;		On exit  : 0/0
 10280 ;;		Unchanged: 0/0
 10281 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10282 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10283 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10284 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10285 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10286 ;;Total ram usage:        3 bytes
 10287 ;; Hardware stack levels used:    1
 10288 ;; This function calls:
 10289 ;;		Nothing
 10290 ;; This function is called by:
 10291 ;;		_buttonResponse
 10292 ;; This function uses a non-reentrant model
 10293 ;;
 10294                           
 10295                           	psect	text35
 10296  00BE7C                     __ptext35:
 10297                           	callstack 0
 10298  00BE7C                     _DELAY_milliseconds:
 10299                           	callstack 29
 10300  00BE7C                     
 10301                           ;delay.c: 39: while(milliseconds--){
 10302  00BE7C  EF47  F05F         	goto	l4284
 10303  00BE80                     l4282:
 10304                           
 10305                           ;delay.c: 40: _delay((unsigned long)((1)*(8000000/4000.0)));
 10306  00BE80  0E03               	movlw	3
 10307  00BE82  6E03               	movwf	??_DELAY_milliseconds^0,c
 10308  00BE84  0E98               	movlw	152
 10309  00BE86                     u5167:
 10310  00BE86  2EE8               	decfsz	wreg,f,c
 10311  00BE88  D7FE               	bra	u5167
 10312  00BE8A  2E03               	decfsz	??_DELAY_milliseconds^0,f,c
 10313  00BE8C  D7FC               	bra	u5167
 10314  00BE8E                     l4284:
 10315  00BE8E  0601               	decf	DELAY_milliseconds@milliseconds^0,f,c
 10316  00BE90  A0D8               	btfss	status,0,c
 10317  00BE92  0602               	decf	(DELAY_milliseconds@milliseconds+1)^0,f,c
 10318  00BE94  2801               	incf	DELAY_milliseconds@milliseconds^0,w,c
 10319  00BE96  E106               	bnz	u4301
 10320  00BE98  2802               	incf	(DELAY_milliseconds@milliseconds+1)^0,w,c
 10321  00BE9A  A4D8               	btfss	status,2,c
 10322  00BE9C  EF52  F05F         	goto	u4301
 10323  00BEA0  EF54  F05F         	goto	u4300
 10324  00BEA4                     u4301:
 10325  00BEA4  EF40  F05F         	goto	l4282
 10326  00BEA8                     u4300:
 10327  00BEA8  0012               	return		;funcret
 10328  00BEAA                     __end_of_DELAY_milliseconds:
 10329                           	callstack 0
 10330                           
 10331 ;; *************** function _TMR0_WriteTimer *****************
 10332 ;; Defined at:
 10333 ;;		line 113 in file "mcc_generated_files/tmr0.c"
 10334 ;; Parameters:    Size  Location     Type
 10335 ;;  timerVal        2    0[COMRAM] unsigned int 
 10336 ;; Auto vars:     Size  Location     Type
 10337 ;;		None
 10338 ;; Return value:  Size  Location     Type
 10339 ;;                  1    wreg      void 
 10340 ;; Registers used:
 10341 ;;		wreg, status,2
 10342 ;; Tracked objects:
 10343 ;;		On entry : 0/0
 10344 ;;		On exit  : 0/0
 10345 ;;		Unchanged: 0/0
 10346 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10347 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10348 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10349 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10350 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10351 ;;Total ram usage:        2 bytes
 10352 ;; Hardware stack levels used:    1
 10353 ;; This function calls:
 10354 ;;		Nothing
 10355 ;; This function is called by:
 10356 ;;		_main
 10357 ;; This function uses a non-reentrant model
 10358 ;;
 10359                           
 10360                           	psect	text36
 10361  00BDC8                     __ptext36:
 10362                           	callstack 0
 10363  00BDC8                     _TMR0_WriteTimer:
 10364                           	callstack 30
 10365  00BDC8                     
 10366                           ;tmr0.c: 116: TMR0H = timerVal >> 8;
 10367  00BDC8  5002               	movf	(TMR0_WriteTimer@timerVal+1)^0,w,c
 10368  00BDCA  6EB7               	movwf	183,c	;volatile
 10369  00BDCC                     
 10370                           ;tmr0.c: 117: TMR0L = (uint8_t) timerVal;
 10371  00BDCC  0060  F007  FFB6   	movff	TMR0_WriteTimer@timerVal,16310	;volatile
 10372  00BDD2  0012               	return		;funcret
 10373  00BDD4                     __end_of_TMR0_WriteTimer:
 10374                           	callstack 0
 10375                           
 10376 ;; *************** function _SYSTEM_Initialize *****************
 10377 ;; Defined at:
 10378 ;;		line 50 in file "mcc_generated_files/mcc.c"
 10379 ;; Parameters:    Size  Location     Type
 10380 ;;		None
 10381 ;; Auto vars:     Size  Location     Type
 10382 ;;		None
 10383 ;; Return value:  Size  Location     Type
 10384 ;;                  1    wreg      void 
 10385 ;; Registers used:
 10386 ;;		wreg, status,2, status,0, cstack
 10387 ;; Tracked objects:
 10388 ;;		On entry : 0/0
 10389 ;;		On exit  : 0/0
 10390 ;;		Unchanged: 0/0
 10391 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10392 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10393 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10394 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10395 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10396 ;;Total ram usage:        0 bytes
 10397 ;; Hardware stack levels used:    1
 10398 ;; Hardware stack levels required when called:    2
 10399 ;; This function calls:
 10400 ;;		_OSCILLATOR_Initialize
 10401 ;;		_PIN_MANAGER_Initialize
 10402 ;;		_PMD_Initialize
 10403 ;;		_TMR0_Initialize
 10404 ;;		_UART2_Initialize
 10405 ;; This function is called by:
 10406 ;;		_main
 10407 ;; This function uses a non-reentrant model
 10408 ;;
 10409                           
 10410                           	psect	text37
 10411  00BDE6                     __ptext37:
 10412                           	callstack 0
 10413  00BDE6                     _SYSTEM_Initialize:
 10414                           	callstack 28
 10415  00BDE6                     
 10416                           ;mcc.c: 52: PMD_Initialize();
 10417  00BDE6  EC17  F05F         	call	_PMD_Initialize	;wreg free
 10418                           
 10419                           ;mcc.c: 53: PIN_MANAGER_Initialize();
 10420  00BDEA  EC66  F061         	call	_PIN_MANAGER_Initialize	;wreg free
 10421                           
 10422                           ;mcc.c: 54: OSCILLATOR_Initialize();
 10423  00BDEE  ECFE  F05E         	call	_OSCILLATOR_Initialize	;wreg free
 10424  00BDF2                     
 10425                           ;mcc.c: 55: TMR0_Initialize();
 10426  00BDF2  EC55  F05F         	call	_TMR0_Initialize	;wreg free
 10427  00BDF6                     
 10428                           ;mcc.c: 56: UART2_Initialize();
 10429  00BDF6  ECC5  F05F         	call	_UART2_Initialize	;wreg free
 10430  00BDFA  0012               	return		;funcret
 10431  00BDFC                     __end_of_SYSTEM_Initialize:
 10432                           	callstack 0
 10433                           
 10434 ;; *************** function _UART2_Initialize *****************
 10435 ;; Defined at:
 10436 ;;		line 66 in file "mcc_generated_files/uart2.c"
 10437 ;; Parameters:    Size  Location     Type
 10438 ;;		None
 10439 ;; Auto vars:     Size  Location     Type
 10440 ;;		None
 10441 ;; Return value:  Size  Location     Type
 10442 ;;                  1    wreg      void 
 10443 ;; Registers used:
 10444 ;;		wreg, status,2, status,0, cstack
 10445 ;; Tracked objects:
 10446 ;;		On entry : 0/0
 10447 ;;		On exit  : 0/0
 10448 ;;		Unchanged: 0/0
 10449 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10450 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10451 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10452 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10453 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10454 ;;Total ram usage:        0 bytes
 10455 ;; Hardware stack levels used:    1
 10456 ;; Hardware stack levels required when called:    1
 10457 ;; This function calls:
 10458 ;;		_UART2_SetErrorHandler
 10459 ;;		_UART2_SetFramingErrorHandler
 10460 ;;		_UART2_SetOverrunErrorHandler
 10461 ;; This function is called by:
 10462 ;;		_SYSTEM_Initialize
 10463 ;; This function uses a non-reentrant model
 10464 ;;
 10465                           
 10466                           	psect	text38
 10467  00BF8A                     __ptext38:
 10468                           	callstack 0
 10469  00BF8A                     _UART2_Initialize:
 10470                           	callstack 28
 10471  00BF8A                     
 10472                           ;uart2.c: 73: U2P1L = 0x00;
 10473  00BF8A  0E00               	movlw	0
 10474  00BF8C  013D               	movlb	61	; () banked
 10475  00BF8E  6FD4               	movwf	212,b	;volatile
 10476                           
 10477                           ;uart2.c: 76: U2P2L = 0x00;
 10478  00BF90  0E00               	movlw	0
 10479  00BF92  6FD6               	movwf	214,b	;volatile
 10480                           
 10481                           ;uart2.c: 79: U2P3L = 0x00;
 10482  00BF94  0E00               	movlw	0
 10483  00BF96  6FD8               	movwf	216,b	;volatile
 10484                           
 10485                           ;uart2.c: 82: U2CON0 = 0xB0;
 10486  00BF98  0EB0               	movlw	176
 10487  00BF9A  6FDA               	movwf	218,b	;volatile
 10488                           
 10489                           ;uart2.c: 85: U2CON1 = 0x80;
 10490  00BF9C  0E80               	movlw	128
 10491  00BF9E  6FDB               	movwf	219,b	;volatile
 10492                           
 10493                           ;uart2.c: 88: U2CON2 = 0x00;
 10494  00BFA0  0E00               	movlw	0
 10495  00BFA2  6FDC               	movwf	220,b	;volatile
 10496                           
 10497                           ;uart2.c: 91: U2BRGL = 0xCF;
 10498  00BFA4  0ECF               	movlw	207
 10499  00BFA6  6FDD               	movwf	221,b	;volatile
 10500                           
 10501                           ;uart2.c: 94: U2BRGH = 0x00;
 10502  00BFA8  0E00               	movlw	0
 10503  00BFAA  6FDE               	movwf	222,b	;volatile
 10504                           
 10505                           ;uart2.c: 97: U2FIFO = 0x00;
 10506  00BFAC  0E00               	movlw	0
 10507  00BFAE  6FDF               	movwf	223,b	;volatile
 10508                           
 10509                           ;uart2.c: 100: U2UIR = 0x00;
 10510  00BFB0  0E00               	movlw	0
 10511  00BFB2  6FE0               	movwf	224,b	;volatile
 10512                           
 10513                           ;uart2.c: 103: U2ERRIR = 0x00;
 10514  00BFB4  0E00               	movlw	0
 10515  00BFB6  6FE1               	movwf	225,b	;volatile
 10516                           
 10517                           ;uart2.c: 106: U2ERRIE = 0x00;
 10518  00BFB8  0E00               	movlw	0
 10519  00BFBA  6FE2               	movwf	226,b	;volatile
 10520  00BFBC                     
 10521                           ; BSR set to: 61
 10522                           ;uart2.c: 109: UART2_SetFramingErrorHandler(UART2_DefaultFramingErrorHandler);
 10523  00BFBC  0E00               	movlw	0
 10524  00BFBE  6E01               	movwf	UART2_SetFramingErrorHandler@interruptHandler^0,c
 10525  00BFC0  0E00               	movlw	0
 10526  00BFC2  6E02               	movwf	(UART2_SetFramingErrorHandler@interruptHandler+1)^0,c
 10527  00BFC4  ECD5  F05E         	call	_UART2_SetFramingErrorHandler	;wreg free
 10528  00BFC8                     
 10529                           ;uart2.c: 110: UART2_SetOverrunErrorHandler(UART2_DefaultOverrunErrorHandler);
 10530  00BFC8  0E00               	movlw	0
 10531  00BFCA  6E01               	movwf	UART2_SetOverrunErrorHandler@interruptHandler^0,c
 10532  00BFCC  0E00               	movlw	0
 10533  00BFCE  6E02               	movwf	(UART2_SetOverrunErrorHandler@interruptHandler+1)^0,c
 10534  00BFD0  ECDA  F05E         	call	_UART2_SetOverrunErrorHandler	;wreg free
 10535  00BFD4                     
 10536                           ;uart2.c: 111: UART2_SetErrorHandler(UART2_DefaultErrorHandler);
 10537  00BFD4  0E00               	movlw	0
 10538  00BFD6  6E01               	movwf	UART2_SetErrorHandler@interruptHandler^0,c
 10539  00BFD8  0E00               	movlw	0
 10540  00BFDA  6E02               	movwf	(UART2_SetErrorHandler@interruptHandler+1)^0,c
 10541  00BFDC  ECD0  F05E         	call	_UART2_SetErrorHandler	;wreg free
 10542  00BFE0                     
 10543                           ;uart2.c: 113: uart2RxLastError.status = 0;
 10544  00BFE0  0E00               	movlw	0
 10545  00BFE2  0101               	movlb	1	; () banked
 10546  00BFE4  6F0F               	movwf	_uart2RxLastError& (0+255),b	;volatile
 10547  00BFE6                     
 10548                           ; BSR set to: 1
 10549  00BFE6  0012               	return		;funcret
 10550  00BFE8                     __end_of_UART2_Initialize:
 10551                           	callstack 0
 10552                           
 10553 ;; *************** function _UART2_SetOverrunErrorHandler *****************
 10554 ;; Defined at:
 10555 ;;		line 195 in file "mcc_generated_files/uart2.c"
 10556 ;; Parameters:    Size  Location     Type
 10557 ;;  interruptHan    2    0[COMRAM] PTR FTN()void 
 10558 ;;		 -> UART2_DefaultOverrunErrorHandler(1), 
 10559 ;; Auto vars:     Size  Location     Type
 10560 ;;		None
 10561 ;; Return value:  Size  Location     Type
 10562 ;;                  1    wreg      void 
 10563 ;; Registers used:
 10564 ;;		wreg, status,2, status,0
 10565 ;; Tracked objects:
 10566 ;;		On entry : 0/0
 10567 ;;		On exit  : 0/0
 10568 ;;		Unchanged: 0/0
 10569 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10570 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10571 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10572 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10573 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10574 ;;Total ram usage:        2 bytes
 10575 ;; Hardware stack levels used:    1
 10576 ;; This function calls:
 10577 ;;		Nothing
 10578 ;; This function is called by:
 10579 ;;		_UART2_Initialize
 10580 ;; This function uses a non-reentrant model
 10581 ;;
 10582                           
 10583                           	psect	text39
 10584  00BDB4                     __ptext39:
 10585                           	callstack 0
 10586  00BDB4                     _UART2_SetOverrunErrorHandler:
 10587                           	callstack 28
 10588  00BDB4                     
 10589                           ;uart2.c: 196: UART2_OverrunErrorHandler = interruptHandler;
 10590  00BDB4  C001  F102         	movff	UART2_SetOverrunErrorHandler@interruptHandler,_UART2_OverrunErrorHandler
 10591  00BDB8  C002  F103         	movff	UART2_SetOverrunErrorHandler@interruptHandler+1,_UART2_OverrunErrorHandler+1
 10592  00BDBC  0012               	return		;funcret
 10593  00BDBE                     __end_of_UART2_SetOverrunErrorHandler:
 10594                           	callstack 0
 10595                           
 10596 ;; *************** function _UART2_SetFramingErrorHandler *****************
 10597 ;; Defined at:
 10598 ;;		line 191 in file "mcc_generated_files/uart2.c"
 10599 ;; Parameters:    Size  Location     Type
 10600 ;;  interruptHan    2    0[COMRAM] PTR FTN()void 
 10601 ;;		 -> UART2_DefaultFramingErrorHandler(1), 
 10602 ;; Auto vars:     Size  Location     Type
 10603 ;;		None
 10604 ;; Return value:  Size  Location     Type
 10605 ;;                  1    wreg      void 
 10606 ;; Registers used:
 10607 ;;		wreg, status,2, status,0
 10608 ;; Tracked objects:
 10609 ;;		On entry : 0/0
 10610 ;;		On exit  : 0/0
 10611 ;;		Unchanged: 0/0
 10612 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10613 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10614 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10615 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10616 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10617 ;;Total ram usage:        2 bytes
 10618 ;; Hardware stack levels used:    1
 10619 ;; This function calls:
 10620 ;;		Nothing
 10621 ;; This function is called by:
 10622 ;;		_UART2_Initialize
 10623 ;; This function uses a non-reentrant model
 10624 ;;
 10625                           
 10626                           	psect	text40
 10627  00BDAA                     __ptext40:
 10628                           	callstack 0
 10629  00BDAA                     _UART2_SetFramingErrorHandler:
 10630                           	callstack 28
 10631  00BDAA                     
 10632                           ;uart2.c: 192: UART2_FramingErrorHandler = interruptHandler;
 10633  00BDAA  C001  F104         	movff	UART2_SetFramingErrorHandler@interruptHandler,_UART2_FramingErrorHandler
 10634  00BDAE  C002  F105         	movff	UART2_SetFramingErrorHandler@interruptHandler+1,_UART2_FramingErrorHandler+1
 10635  00BDB2  0012               	return		;funcret
 10636  00BDB4                     __end_of_UART2_SetFramingErrorHandler:
 10637                           	callstack 0
 10638                           
 10639 ;; *************** function _UART2_SetErrorHandler *****************
 10640 ;; Defined at:
 10641 ;;		line 199 in file "mcc_generated_files/uart2.c"
 10642 ;; Parameters:    Size  Location     Type
 10643 ;;  interruptHan    2    0[COMRAM] PTR FTN()void 
 10644 ;;		 -> UART2_DefaultErrorHandler(1), 
 10645 ;; Auto vars:     Size  Location     Type
 10646 ;;		None
 10647 ;; Return value:  Size  Location     Type
 10648 ;;                  1    wreg      void 
 10649 ;; Registers used:
 10650 ;;		wreg, status,2, status,0
 10651 ;; Tracked objects:
 10652 ;;		On entry : 0/0
 10653 ;;		On exit  : 0/0
 10654 ;;		Unchanged: 0/0
 10655 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10656 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10657 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10658 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10659 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10660 ;;Total ram usage:        2 bytes
 10661 ;; Hardware stack levels used:    1
 10662 ;; This function calls:
 10663 ;;		Nothing
 10664 ;; This function is called by:
 10665 ;;		_UART2_Initialize
 10666 ;; This function uses a non-reentrant model
 10667 ;;
 10668                           
 10669                           	psect	text41
 10670  00BDA0                     __ptext41:
 10671                           	callstack 0
 10672  00BDA0                     _UART2_SetErrorHandler:
 10673                           	callstack 28
 10674  00BDA0                     
 10675                           ;uart2.c: 200: UART2_ErrorHandler = interruptHandler;
 10676  00BDA0  C001  F100         	movff	UART2_SetErrorHandler@interruptHandler,_UART2_ErrorHandler
 10677  00BDA4  C002  F101         	movff	UART2_SetErrorHandler@interruptHandler+1,_UART2_ErrorHandler+1
 10678  00BDA8  0012               	return		;funcret
 10679  00BDAA                     __end_of_UART2_SetErrorHandler:
 10680                           	callstack 0
 10681                           
 10682 ;; *************** function _TMR0_Initialize *****************
 10683 ;; Defined at:
 10684 ;;		line 65 in file "mcc_generated_files/tmr0.c"
 10685 ;; Parameters:    Size  Location     Type
 10686 ;;		None
 10687 ;; Auto vars:     Size  Location     Type
 10688 ;;		None
 10689 ;; Return value:  Size  Location     Type
 10690 ;;                  1    wreg      void 
 10691 ;; Registers used:
 10692 ;;		wreg, status,2, status,0
 10693 ;; Tracked objects:
 10694 ;;		On entry : 0/0
 10695 ;;		On exit  : 0/0
 10696 ;;		Unchanged: 0/0
 10697 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10698 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10699 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10700 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10701 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10702 ;;Total ram usage:        2 bytes
 10703 ;; Hardware stack levels used:    1
 10704 ;; This function calls:
 10705 ;;		Nothing
 10706 ;; This function is called by:
 10707 ;;		_SYSTEM_Initialize
 10708 ;; This function uses a non-reentrant model
 10709 ;;
 10710                           
 10711                           	psect	text42
 10712  00BEAA                     __ptext42:
 10713                           	callstack 0
 10714  00BEAA                     _TMR0_Initialize:
 10715                           	callstack 29
 10716  00BEAA                     
 10717                           ;tmr0.c: 70: T0CON1 = 0x40;
 10718  00BEAA  0E40               	movlw	64
 10719  00BEAC  6EB9               	movwf	185,c	;volatile
 10720                           
 10721                           ;tmr0.c: 73: TMR0H = 0xF0;
 10722  00BEAE  0EF0               	movlw	240
 10723  00BEB0  6EB7               	movwf	183,c	;volatile
 10724                           
 10725                           ;tmr0.c: 76: TMR0L = 0x60;
 10726  00BEB2  0E60               	movlw	96
 10727  00BEB4  6EB6               	movwf	182,c	;volatile
 10728  00BEB6                     
 10729                           ;tmr0.c: 79: timer0ReloadVal16bit = (TMR0H << 8) | TMR0L;
 10730  00BEB6  50B6               	movf	182,w,c	;volatile
 10731  00BEB8  006F FEDC  F001    	movff	16311,??_TMR0_Initialize	;volatile
 10732  00BEBE  6A02               	clrf	(??_TMR0_Initialize+1)^0,c
 10733  00BEC0  C001  F002         	movff	??_TMR0_Initialize,??_TMR0_Initialize+1
 10734  00BEC4  6A01               	clrf	??_TMR0_Initialize^0,c
 10735  00BEC6  1001               	iorwf	??_TMR0_Initialize^0,w,c
 10736  00BEC8  0101               	movlb	1	; () banked
 10737  00BECA  6F06               	movwf	_timer0ReloadVal16bit& (0+255),b	;volatile
 10738  00BECC  5002               	movf	(??_TMR0_Initialize+1)^0,w,c
 10739  00BECE  6F07               	movwf	(_timer0ReloadVal16bit+1)& (0+255),b	;volatile
 10740  00BED0                     
 10741                           ; BSR set to: 1
 10742                           ;tmr0.c: 82: PIR3bits.TMR0IF = 0;
 10743  00BED0  0139               	movlb	57	; () banked
 10744  00BED2  9FA3               	bcf	163,7,b	;volatile
 10745  00BED4                     
 10746                           ; BSR set to: 57
 10747                           ;tmr0.c: 85: T0CON0 = 0x90;
 10748  00BED4  0E90               	movlw	144
 10749  00BED6  6EB8               	movwf	184,c	;volatile
 10750  00BED8                     
 10751                           ; BSR set to: 57
 10752  00BED8  0012               	return		;funcret
 10753  00BEDA                     __end_of_TMR0_Initialize:
 10754                           	callstack 0
 10755                           
 10756 ;; *************** function _PMD_Initialize *****************
 10757 ;; Defined at:
 10758 ;;		line 73 in file "mcc_generated_files/mcc.c"
 10759 ;; Parameters:    Size  Location     Type
 10760 ;;		None
 10761 ;; Auto vars:     Size  Location     Type
 10762 ;;		None
 10763 ;; Return value:  Size  Location     Type
 10764 ;;                  1    wreg      void 
 10765 ;; Registers used:
 10766 ;;		wreg, status,2
 10767 ;; Tracked objects:
 10768 ;;		On entry : 0/0
 10769 ;;		On exit  : 0/0
 10770 ;;		Unchanged: 0/0
 10771 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10772 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10773 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10774 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10775 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10776 ;;Total ram usage:        0 bytes
 10777 ;; Hardware stack levels used:    1
 10778 ;; This function calls:
 10779 ;;		Nothing
 10780 ;; This function is called by:
 10781 ;;		_SYSTEM_Initialize
 10782 ;; This function uses a non-reentrant model
 10783 ;;
 10784                           
 10785                           	psect	text43
 10786  00BE2E                     __ptext43:
 10787                           	callstack 0
 10788  00BE2E                     _PMD_Initialize:
 10789                           	callstack 29
 10790  00BE2E                     
 10791                           ;mcc.c: 76: PMD0 = 0x00;
 10792  00BE2E  0E00               	movlw	0
 10793  00BE30  0139               	movlb	57	; () banked
 10794  00BE32  6FC0               	movwf	192,b	;volatile
 10795                           
 10796                           ;mcc.c: 78: PMD1 = 0x00;
 10797  00BE34  0E00               	movlw	0
 10798  00BE36  6FC1               	movwf	193,b	;volatile
 10799                           
 10800                           ;mcc.c: 80: PMD2 = 0x00;
 10801  00BE38  0E00               	movlw	0
 10802  00BE3A  6FC2               	movwf	194,b	;volatile
 10803                           
 10804                           ;mcc.c: 82: PMD3 = 0x00;
 10805  00BE3C  0E00               	movlw	0
 10806  00BE3E  6FC3               	movwf	195,b	;volatile
 10807                           
 10808                           ;mcc.c: 84: PMD4 = 0x00;
 10809  00BE40  0E00               	movlw	0
 10810  00BE42  6FC4               	movwf	196,b	;volatile
 10811                           
 10812                           ;mcc.c: 86: PMD5 = 0x00;
 10813  00BE44  0E00               	movlw	0
 10814  00BE46  6FC5               	movwf	197,b	;volatile
 10815                           
 10816                           ;mcc.c: 88: PMD6 = 0x00;
 10817  00BE48  0E00               	movlw	0
 10818  00BE4A  6FC6               	movwf	198,b	;volatile
 10819                           
 10820                           ;mcc.c: 90: PMD7 = 0x00;
 10821  00BE4C  0E00               	movlw	0
 10822  00BE4E  6FC7               	movwf	199,b	;volatile
 10823  00BE50                     
 10824                           ; BSR set to: 57
 10825  00BE50  0012               	return		;funcret
 10826  00BE52                     __end_of_PMD_Initialize:
 10827                           	callstack 0
 10828                           
 10829 ;; *************** function _PIN_MANAGER_Initialize *****************
 10830 ;; Defined at:
 10831 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
 10832 ;; Parameters:    Size  Location     Type
 10833 ;;		None
 10834 ;; Auto vars:     Size  Location     Type
 10835 ;;		None
 10836 ;; Return value:  Size  Location     Type
 10837 ;;                  1    wreg      void 
 10838 ;; Registers used:
 10839 ;;		wreg, status,2
 10840 ;; Tracked objects:
 10841 ;;		On entry : 0/0
 10842 ;;		On exit  : 0/0
 10843 ;;		Unchanged: 0/0
 10844 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10845 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10846 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10847 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10848 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10849 ;;Total ram usage:        0 bytes
 10850 ;; Hardware stack levels used:    1
 10851 ;; This function calls:
 10852 ;;		Nothing
 10853 ;; This function is called by:
 10854 ;;		_SYSTEM_Initialize
 10855 ;; This function uses a non-reentrant model
 10856 ;;
 10857                           
 10858                           	psect	text44
 10859  00C2CC                     __ptext44:
 10860                           	callstack 0
 10861  00C2CC                     _PIN_MANAGER_Initialize:
 10862                           	callstack 29
 10863  00C2CC                     
 10864                           ;pin_manager.c: 60: LATE = 0x00;
 10865  00C2CC  0E00               	movlw	0
 10866  00C2CE  6EBE               	movwf	190,c	;volatile
 10867                           
 10868                           ;pin_manager.c: 61: LATD = 0x00;
 10869  00C2D0  0E00               	movlw	0
 10870  00C2D2  6EBD               	movwf	189,c	;volatile
 10871                           
 10872                           ;pin_manager.c: 62: LATA = 0x00;
 10873  00C2D4  0E00               	movlw	0
 10874  00C2D6  6EBA               	movwf	186,c	;volatile
 10875                           
 10876                           ;pin_manager.c: 63: LATB = 0x00;
 10877  00C2D8  0E00               	movlw	0
 10878  00C2DA  6EBB               	movwf	187,c	;volatile
 10879                           
 10880                           ;pin_manager.c: 64: LATC = 0x00;
 10881  00C2DC  0E00               	movlw	0
 10882  00C2DE  6EBC               	movwf	188,c	;volatile
 10883                           
 10884                           ;pin_manager.c: 69: TRISE = 0x07;
 10885  00C2E0  0E07               	movlw	7
 10886  00C2E2  6EC6               	movwf	198,c	;volatile
 10887  00C2E4                     
 10888                           ;pin_manager.c: 70: TRISA = 0xFF;
 10889  00C2E4  68C2               	setf	194,c	;volatile
 10890                           
 10891                           ;pin_manager.c: 71: TRISB = 0xBF;
 10892  00C2E6  0EBF               	movlw	191
 10893  00C2E8  6EC3               	movwf	195,c	;volatile
 10894                           
 10895                           ;pin_manager.c: 72: TRISC = 0xFA;
 10896  00C2EA  0EFA               	movlw	250
 10897  00C2EC  6EC4               	movwf	196,c	;volatile
 10898                           
 10899                           ;pin_manager.c: 73: TRISD = 0xFB;
 10900  00C2EE  0EFB               	movlw	251
 10901  00C2F0  6EC5               	movwf	197,c	;volatile
 10902                           
 10903                           ;pin_manager.c: 78: ANSELD = 0xF9;
 10904  00C2F2  0EF9               	movlw	249
 10905  00C2F4  013A               	movlb	58	; () banked
 10906  00C2F6  6F70               	movwf	112,b	;volatile
 10907                           
 10908                           ;pin_manager.c: 79: ANSELC = 0xFA;
 10909  00C2F8  0EFA               	movlw	250
 10910  00C2FA  6F60               	movwf	96,b	;volatile
 10911                           
 10912                           ;pin_manager.c: 80: ANSELB = 0x3F;
 10913  00C2FC  0E3F               	movlw	63
 10914  00C2FE  6F50               	movwf	80,b	;volatile
 10915                           
 10916                           ;pin_manager.c: 81: ANSELE = 0x07;
 10917  00C300  0E07               	movlw	7
 10918  00C302  6F80               	movwf	128,b	;volatile
 10919  00C304                     
 10920                           ; BSR set to: 58
 10921                           ;pin_manager.c: 82: ANSELA = 0xFF;
 10922  00C304  6940               	setf	64,b	;volatile
 10923                           
 10924                           ;pin_manager.c: 87: WPUD = 0x00;
 10925  00C306  0E00               	movlw	0
 10926  00C308  6F71               	movwf	113,b	;volatile
 10927                           
 10928                           ;pin_manager.c: 88: WPUE = 0x00;
 10929  00C30A  0E00               	movlw	0
 10930  00C30C  6F81               	movwf	129,b	;volatile
 10931                           
 10932                           ;pin_manager.c: 89: WPUB = 0x00;
 10933  00C30E  0E00               	movlw	0
 10934  00C310  6F51               	movwf	81,b	;volatile
 10935                           
 10936                           ;pin_manager.c: 90: WPUA = 0x00;
 10937  00C312  0E00               	movlw	0
 10938  00C314  6F41               	movwf	65,b	;volatile
 10939                           
 10940                           ;pin_manager.c: 91: WPUC = 0x00;
 10941  00C316  0E00               	movlw	0
 10942  00C318  6F61               	movwf	97,b	;volatile
 10943                           
 10944                           ;pin_manager.c: 96: RB1I2C = 0x00;
 10945  00C31A  0E00               	movlw	0
 10946  00C31C  6F5A               	movwf	90,b	;volatile
 10947                           
 10948                           ;pin_manager.c: 97: RB2I2C = 0x00;
 10949  00C31E  0E00               	movlw	0
 10950  00C320  6F5B               	movwf	91,b	;volatile
 10951                           
 10952                           ;pin_manager.c: 98: RC3I2C = 0x00;
 10953  00C322  0E00               	movlw	0
 10954  00C324  6F6A               	movwf	106,b	;volatile
 10955                           
 10956                           ;pin_manager.c: 99: RC4I2C = 0x00;
 10957  00C326  0E00               	movlw	0
 10958  00C328  6F6B               	movwf	107,b	;volatile
 10959                           
 10960                           ;pin_manager.c: 100: RD0I2C = 0x00;
 10961  00C32A  0E00               	movlw	0
 10962  00C32C  6F7A               	movwf	122,b	;volatile
 10963                           
 10964                           ;pin_manager.c: 101: RD1I2C = 0x00;
 10965  00C32E  0E00               	movlw	0
 10966  00C330  6F7B               	movwf	123,b	;volatile
 10967                           
 10968                           ;pin_manager.c: 106: ODCONE = 0x00;
 10969  00C332  0E00               	movlw	0
 10970  00C334  6F82               	movwf	130,b	;volatile
 10971                           
 10972                           ;pin_manager.c: 107: ODCONA = 0x00;
 10973  00C336  0E00               	movlw	0
 10974  00C338  6F42               	movwf	66,b	;volatile
 10975                           
 10976                           ;pin_manager.c: 108: ODCONB = 0x00;
 10977  00C33A  0E00               	movlw	0
 10978  00C33C  6F52               	movwf	82,b	;volatile
 10979                           
 10980                           ;pin_manager.c: 109: ODCONC = 0x00;
 10981  00C33E  0E00               	movlw	0
 10982  00C340  6F62               	movwf	98,b	;volatile
 10983                           
 10984                           ;pin_manager.c: 110: ODCOND = 0x00;
 10985  00C342  0E00               	movlw	0
 10986  00C344  6F72               	movwf	114,b	;volatile
 10987  00C346                     
 10988                           ; BSR set to: 58
 10989                           ;pin_manager.c: 115: SLRCONA = 0xFF;
 10990  00C346  6943               	setf	67,b	;volatile
 10991  00C348                     
 10992                           ; BSR set to: 58
 10993                           ;pin_manager.c: 116: SLRCONB = 0xFF;
 10994  00C348  6953               	setf	83,b	;volatile
 10995  00C34A                     
 10996                           ; BSR set to: 58
 10997                           ;pin_manager.c: 117: SLRCONC = 0xFF;
 10998  00C34A  6963               	setf	99,b	;volatile
 10999  00C34C                     
 11000                           ; BSR set to: 58
 11001                           ;pin_manager.c: 118: SLRCOND = 0xFF;
 11002  00C34C  6973               	setf	115,b	;volatile
 11003                           
 11004                           ;pin_manager.c: 119: SLRCONE = 0x07;
 11005  00C34E  0E07               	movlw	7
 11006  00C350  6F83               	movwf	131,b	;volatile
 11007  00C352                     
 11008                           ; BSR set to: 58
 11009                           ;pin_manager.c: 124: INLVLA = 0xFF;
 11010  00C352  6944               	setf	68,b	;volatile
 11011  00C354                     
 11012                           ; BSR set to: 58
 11013                           ;pin_manager.c: 125: INLVLB = 0xFF;
 11014  00C354  6954               	setf	84,b	;volatile
 11015  00C356                     
 11016                           ; BSR set to: 58
 11017                           ;pin_manager.c: 126: INLVLC = 0xFF;
 11018  00C356  6964               	setf	100,b	;volatile
 11019  00C358                     
 11020                           ; BSR set to: 58
 11021                           ;pin_manager.c: 127: INLVLD = 0xFF;
 11022  00C358  6974               	setf	116,b	;volatile
 11023                           
 11024                           ;pin_manager.c: 128: INLVLE = 0x0F;
 11025  00C35A  0E0F               	movlw	15
 11026  00C35C  6F84               	movwf	132,b	;volatile
 11027                           
 11028                           ;pin_manager.c: 137: U2RXPPS = 0x0F;
 11029  00C35E  0E0F               	movlw	15
 11030  00C360  6FE8               	movwf	232,b	;volatile
 11031                           
 11032                           ;pin_manager.c: 138: RC0PPS = 0x25;
 11033  00C362  0E25               	movlw	37
 11034  00C364  6F10               	movwf	16,b	;volatile
 11035                           
 11036                           ;pin_manager.c: 139: RB6PPS = 0x16;
 11037  00C366  0E16               	movlw	22
 11038  00C368  6F0E               	movwf	14,b	;volatile
 11039  00C36A                     
 11040                           ; BSR set to: 58
 11041  00C36A  0012               	return		;funcret
 11042  00C36C                     __end_of_PIN_MANAGER_Initialize:
 11043                           	callstack 0
 11044                           
 11045 ;; *************** function _OSCILLATOR_Initialize *****************
 11046 ;; Defined at:
 11047 ;;		line 59 in file "mcc_generated_files/mcc.c"
 11048 ;; Parameters:    Size  Location     Type
 11049 ;;		None
 11050 ;; Auto vars:     Size  Location     Type
 11051 ;;		None
 11052 ;; Return value:  Size  Location     Type
 11053 ;;                  1    wreg      void 
 11054 ;; Registers used:
 11055 ;;		wreg, status,2
 11056 ;; Tracked objects:
 11057 ;;		On entry : 0/0
 11058 ;;		On exit  : 0/0
 11059 ;;		Unchanged: 0/0
 11060 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11061 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11062 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11063 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11064 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11065 ;;Total ram usage:        0 bytes
 11066 ;; Hardware stack levels used:    1
 11067 ;; This function calls:
 11068 ;;		Nothing
 11069 ;; This function is called by:
 11070 ;;		_SYSTEM_Initialize
 11071 ;; This function uses a non-reentrant model
 11072 ;;
 11073                           
 11074                           	psect	text45
 11075  00BDFC                     __ptext45:
 11076                           	callstack 0
 11077  00BDFC                     _OSCILLATOR_Initialize:
 11078                           	callstack 29
 11079  00BDFC                     
 11080                           ;mcc.c: 62: OSCCON1 = 0x62;
 11081  00BDFC  0E62               	movlw	98
 11082  00BDFE  0139               	movlb	57	; () banked
 11083  00BE00  6FD9               	movwf	217,b	;volatile
 11084                           
 11085                           ;mcc.c: 64: OSCCON3 = 0x00;
 11086  00BE02  0E00               	movlw	0
 11087  00BE04  6FDB               	movwf	219,b	;volatile
 11088                           
 11089                           ;mcc.c: 66: OSCEN = 0x00;
 11090  00BE06  0E00               	movlw	0
 11091  00BE08  6FDD               	movwf	221,b	;volatile
 11092                           
 11093                           ;mcc.c: 68: OSCFRQ = 0x06;
 11094  00BE0A  0E06               	movlw	6
 11095  00BE0C  6FDF               	movwf	223,b	;volatile
 11096                           
 11097                           ;mcc.c: 70: OSCTUNE = 0x00;
 11098  00BE0E  0E00               	movlw	0
 11099  00BE10  6FDE               	movwf	222,b	;volatile
 11100  00BE12                     
 11101                           ; BSR set to: 57
 11102  00BE12  0012               	return		;funcret
 11103  00BE14                     __end_of_OSCILLATOR_Initialize:
 11104                           	callstack 0
 11105                           
 11106                           	psect	rparam
 11107  0000                     
 11108                           	psect	idloc
 11109                           
 11110                           ;Config register IDLOC0 @ 0x200000
 11111                           ;	unspecified, using default values
 11112  200000                     	org	2097152
 11113  200000  0FFF               	dw	4095
 11114                           
 11115                           ;Config register IDLOC1 @ 0x200002
 11116                           ;	unspecified, using default values
 11117  200002                     	org	2097154
 11118  200002  0FFF               	dw	4095
 11119                           
 11120                           ;Config register IDLOC2 @ 0x200004
 11121                           ;	unspecified, using default values
 11122  200004                     	org	2097156
 11123  200004  0FFF               	dw	4095
 11124                           
 11125                           ;Config register IDLOC3 @ 0x200006
 11126                           ;	unspecified, using default values
 11127  200006                     	org	2097158
 11128  200006  0FFF               	dw	4095
 11129                           
 11130                           ;Config register IDLOC4 @ 0x200008
 11131                           ;	unspecified, using default values
 11132  200008                     	org	2097160
 11133  200008  0FFF               	dw	4095
 11134                           
 11135                           ;Config register IDLOC5 @ 0x20000A
 11136                           ;	unspecified, using default values
 11137  20000A                     	org	2097162
 11138  20000A  0FFF               	dw	4095
 11139                           
 11140                           ;Config register IDLOC6 @ 0x20000C
 11141                           ;	unspecified, using default values
 11142  20000C                     	org	2097164
 11143  20000C  0FFF               	dw	4095
 11144                           
 11145                           ;Config register IDLOC7 @ 0x20000E
 11146                           ;	unspecified, using default values
 11147  20000E                     	org	2097166
 11148  20000E  0FFF               	dw	4095
 11149                           
 11150                           	psect	config
 11151                           
 11152                           ;Config register CONFIG1L @ 0x300000
 11153                           ;	External Oscillator Selection
 11154                           ;	FEXTOSC = OFF, Oscillator not enabled
 11155                           ;	Reset Oscillator Selection
 11156                           ;	RSTOSC = HFINTOSC_1MHZ, HFINTOSC with HFFRQ = 4 MHz and CDIV = 4:1
 11157  300000                     	org	3145728
 11158  300000  EC                 	db	236
 11159                           
 11160                           ;Config register CONFIG1H @ 0x300001
 11161                           ;	Clock out Enable bit
 11162                           ;	CLKOUTEN = ON, CLKOUT function is enabled
 11163                           ;	PRLOCKED One-Way Set Enable bit
 11164                           ;	PR1WAY = ON, PRLOCK bit can be cleared and set only once
 11165                           ;	Clock Switch Enable bit
 11166                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
 11167                           ;	Fail-Safe Clock Monitor Enable bit
 11168                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
 11169  300001                     	org	3145729
 11170  300001  FE                 	db	254
 11171                           
 11172                           ;Config register CONFIG2L @ 0x300002
 11173                           ;	MCLR Enable bit
 11174                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RE3 pin function is MCLR
 11175                           ;	Power-up timer selection bits
 11176                           ;	PWRTS = PWRT_OFF, PWRT is disabled
 11177                           ;	Multi-vector enable bit
 11178                           ;	MVECEN = OFF, Interrupt contoller does not use vector table to prioritze interrupts
 11179                           ;	IVTLOCK bit One-way set enable bit
 11180                           ;	IVT1WAY = ON, IVTLOCK bit can be cleared and set only once
 11181                           ;	Low Power BOR Enable bit
 11182                           ;	LPBOREN = OFF, ULPBOR disabled
 11183                           ;	Brown-out Reset Enable bits
 11184                           ;	BOREN = SBORDIS, Brown-out Reset enabled , SBOREN bit is ignored
 11185  300002                     	org	3145730
 11186  300002  F7                 	db	247
 11187                           
 11188                           ;Config register CONFIG2H @ 0x300003
 11189                           ;	Brown-out Reset Voltage Selection bits
 11190                           ;	BORV = VBOR_2P45, Brown-out Reset Voltage (VBOR) set to 2.45V
 11191                           ;	ZCD Disable bit
 11192                           ;	ZCD = OFF, ZCD disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCDCON
 11193                           ;	PPSLOCK bit One-Way Set Enable bit
 11194                           ;	PPS1WAY = ON, PPSLOCK bit can be cleared and set only once; PPS registers remain locke
      +                          d after one clear/set cycle
 11195                           ;	Stack Full/Underflow Reset Enable bit
 11196                           ;	STVREN = ON, Stack full/underflow will cause Reset
 11197                           ;	Debugger Enable bit
 11198                           ;	DEBUG = OFF, Background debugger disabled
 11199                           ;	Extended Instruction Set Enable bit
 11200                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
 11201  300003                     	org	3145731
 11202  300003  FF                 	db	255
 11203                           
 11204                           ;Config register CONFIG3L @ 0x300004
 11205                           ;	WDT Period selection bits
 11206                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
 11207                           ;	WDT operating mode
 11208                           ;	WDTE = OFF, WDT Disabled; SWDTEN is ignored
 11209  300004                     	org	3145732
 11210  300004  9F                 	db	159
 11211                           
 11212                           ;Config register CONFIG3H @ 0x300005
 11213                           ;	WDT Window Select bits
 11214                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
 11215                           ;	WDT input clock selector
 11216                           ;	WDTCCS = SC, Software Control
 11217  300005                     	org	3145733
 11218  300005  FF                 	db	255
 11219                           
 11220                           ;Config register CONFIG4L @ 0x300006
 11221                           ;	Boot Block Size selection bits
 11222                           ;	BBSIZE = BBSIZE_512, Boot Block size is 512 words
 11223                           ;	Boot Block enable bit
 11224                           ;	BBEN = OFF, Boot block disabled
 11225                           ;	Storage Area Flash enable bit
 11226                           ;	SAFEN = OFF, SAF disabled
 11227                           ;	Application Block write protection bit
 11228                           ;	WRTAPP = OFF, Application Block not write protected
 11229  300006                     	org	3145734
 11230  300006  FF                 	db	255
 11231                           
 11232                           ;Config register CONFIG4H @ 0x300007
 11233                           ;	Configuration Register Write Protection bit
 11234                           ;	WRTB = OFF, Configuration registers (300000-30000Bh) not write-protected
 11235                           ;	Boot Block Write Protection bit
 11236                           ;	WRTC = OFF, Boot Block (000000-0007FFh) not write-protected
 11237                           ;	Data EEPROM Write Protection bit
 11238                           ;	WRTD = OFF, Data EEPROM not write-protected
 11239                           ;	SAF Write protection bit
 11240                           ;	WRTSAF = OFF, SAF not Write Protected
 11241                           ;	Low Voltage Programming Enable bit
 11242                           ;	LVP = ON, Low voltage programming enabled. MCLR/VPP pin function is MCLR. MCLRE config
      +                          uration bit is ignored
 11243  300007                     	org	3145735
 11244  300007  FF                 	db	255
 11245                           
 11246                           ;Config register CONFIG5L @ 0x300008
 11247                           ;	PFM and Data EEPROM Code Protection bit
 11248                           ;	CP = OFF, PFM and Data EEPROM code protection disabled
 11249  300008                     	org	3145736
 11250  300008  FF                 	db	255
 11251                           
 11252                           ;Config register CONFIG5H @ 0x300009
 11253                           ;	unspecified, using default values
 11254  300009                     	org	3145737
 11255  300009  FF                 	db	255
 11256                           tosu	equ	0x3FFF
 11257                           tosh	equ	0x3FFE
 11258                           tosl	equ	0x3FFD
 11259                           stkptr	equ	0x3FFC
 11260                           pclatu	equ	0x3FFB
 11261                           pclath	equ	0x3FFA
 11262                           pcl	equ	0x3FF9
 11263                           tblptru	equ	0x3FF8
 11264                           tblptrh	equ	0x3FF7
 11265                           tblptrl	equ	0x3FF6
 11266                           tablat	equ	0x3FF5
 11267                           prodh	equ	0x3FF4
 11268                           prodl	equ	0x3FF3
 11269                           indf0	equ	0x3FEF
 11270                           postinc0	equ	0x3FEE
 11271                           postdec0	equ	0x3FED
 11272                           preinc0	equ	0x3FEC
 11273                           plusw0	equ	0x3FEB
 11274                           fsr0h	equ	0x3FEA
 11275                           fsr0l	equ	0x3FE9
 11276                           wreg	equ	0x3FE8
 11277                           indf1	equ	0x3FE7
 11278                           postinc1	equ	0x3FE6
 11279                           postdec1	equ	0x3FE5
 11280                           preinc1	equ	0x3FE4
 11281                           plusw1	equ	0x3FE3
 11282                           fsr1h	equ	0x3FE2
 11283                           fsr1l	equ	0x3FE1
 11284                           bsr	equ	0x3FE0
 11285                           indf2	equ	0x3FDF
 11286                           postinc2	equ	0x3FDE
 11287                           postdec2	equ	0x3FDD
 11288                           preinc2	equ	0x3FDC
 11289                           plusw2	equ	0x3FDB
 11290                           fsr2h	equ	0x3FDA
 11291                           fsr2l	equ	0x3FD9
 11292                           status	equ	0x3FD8

Data Sizes:
    Strings     194
    Constant    252
    Data        0
    BSS         8
    Persistent  8
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     95      95
    BANK0           160    160     160
    BANK1           256      0      16
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0

Pointer List with Targets:

    frexp@eptr	PTR int  size(2) Largest target is 2
		 -> log@exponent(BANK0[2]), floor@expon(COMRAM[2]), 

    eval_poly@d	PTR const  size(2) Largest target is 40
		 -> log@coeff(CODE[36]), exp@coeff(CODE[40]), 

    printf@cp	PTR const unsigned char  size(2) Largest target is 1
		 -> printf@c(BANK0[1]), 

    printf@f	PTR const unsigned char  size(2) Largest target is 69
		 -> STR_7(CODE[7]), STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[18]), 
		 -> STR_3(CODE[58]), STR_2(CODE[69]), STR_1(CODE[23]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    UART2_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART2_DefaultErrorHandler(), 

    UART2_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART2_DefaultOverrunErrorHandler(), 

    UART2_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART2_DefaultFramingErrorHandler(), 

    UART2_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), UART2_DefaultErrorHandler(), 

    UART2_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), UART2_DefaultOverrunErrorHandler(), 

    UART2_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), UART2_DefaultFramingErrorHandler(), 


Critical Paths under _main in COMRAM

    _log->_eval_poly
    _exp->___flsub
    _exp->_eval_poly
    _ldexp->_eval_poly
    _floor->___fladd
    _frexp->___fleq
    _eval_poly->___flmul
    ___fldiv->___flsub
    _printf->_scale
    _scale->___flmul
    ___awdiv->___awmod
    _putch->_UART2_Write
    _fround->___flmul
    ___lwdiv->___lwmod
    ___flmul->___fladd
    ___xxtofl->___fltol
    ___llmod->___lldiv
    ___fltol->___awdiv
    ___flsub->___flmul
    ___fladd->_frexp
    ___fleq->___xxtofl
    _SYSTEM_Initialize->_TMR0_Initialize
    _UART2_Initialize->_UART2_SetErrorHandler
    _UART2_Initialize->_UART2_SetFramingErrorHandler
    _UART2_Initialize->_UART2_SetOverrunErrorHandler

Critical Paths under _main in BANK0

    _main->_buttonResponse
    _pow->_exp
    _log->_eval_poly
    _exp->___fldiv
    _ldexp->_eval_poly
    _eval_poly->___flmul
    ___fldiv->___flmul
    _clearPuTTY->_printf
    _buttonResponse->_printf
    _printf->_pow
    _scale->___flmul
    _fround->___flmul
    ___flsub->___flmul

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                39    39      0  217343
                                            121 BANK0     39    39      0
                  _SYSTEM_Initialize
                    _TMR0_WriteTimer
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___flsub
                           ___xxtofl
                     _buttonResponse
                         _clearPuTTY
                                _pow
                             _printf
 ---------------------------------------------------------------------------------
 (1) _pow                                                 21    13      8   75144
                                             49 BANK0     21    13      8
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___fltol
                           ___xxtofl
                                _exp
                                _log
 ---------------------------------------------------------------------------------
 (2) _log                                                  6     2      4   24644
                                             21 BANK0      6     2      4
                            ___fladd
                             ___fleq
                            ___flmul
                           ___xxtofl
                          _eval_poly
                              _frexp
 ---------------------------------------------------------------------------------
 (2) _exp                                                 11     7      4   38867
                                             38 BANK0     11     7      4
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                           ___xxtofl
                          _eval_poly
                              _floor
                              _ldexp
                                _log (ARG)
 ---------------------------------------------------------------------------------
 (3) _ldexp                                                8     2      6    2262
                                             21 BANK0      8     2      6
                             ___fleq
                          _eval_poly (ARG)
 ---------------------------------------------------------------------------------
 (3) _floor                                               10     6      4    9436
                                             74 COMRAM    10     6      4
                            ___fladd
                             ___flge
                            ___fltol
                           ___xxtofl
                              _frexp
 ---------------------------------------------------------------------------------
 (3) _frexp                                                8     2      6    2390
                                             50 COMRAM     8     2      6
                             ___fleq
 ---------------------------------------------------------------------------------
 (3) _eval_poly                                           16     8      8    9782
                                             86 COMRAM     8     0      8
                                             13 BANK0      8     8      0
                            ___fladd
                            ___flmul
 ---------------------------------------------------------------------------------
 (3) ___fldiv                                             25    17      8    1855
                                             13 BANK0     25    17      8
                            ___fladd (ARG)
                            ___flmul (ARG)
                            ___flsub (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _clearPuTTY                                           0     0      0   41425
                             _printf
 ---------------------------------------------------------------------------------
 (1) _buttonResponse                                       1     1      0   41744
                                            120 BANK0      1     1      0
                 _DELAY_milliseconds
             _poll_switch1_for_edges
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                              53    37     16   41425
                                             70 BANK0     50    34     16
                            ___awdiv
                            ___fladd
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                            ___lldiv
                            ___llmod
                             ___wmul
                           ___xxtofl
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                                _pow (ARG)
                              _putch
                              _scale
 ---------------------------------------------------------------------------------
 (2) _scale                                                9     5      4    8533
                                             86 COMRAM     9     5      4
                            ___awdiv
                            ___awmod
                            ___flmul
                            ___fltol (ARG)
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              6     2      4    1208
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4    1364
                                              6 COMRAM     8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) _putch                                                1     1      0      44
                                              1 COMRAM     1     1      0
                        _UART2_Write
 ---------------------------------------------------------------------------------
 (3) _UART2_Write                                          1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              3     3      0      68
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) _fround                                              13     9      4    6996
                                             86 COMRAM     4     0      4
                                             13 BANK0      9     9      0
                            ___fladd (ARG)
                            ___flmul
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              5     1      4     615
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     618
                                              5 COMRAM     7     3      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             25    17      8    5518
                                             74 COMRAM    12     4      8
                                              0 BANK0     13    13      0
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___fladd (ARG)
                            ___fltol (ARG)
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
                           ___xxtofl (ARG)
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (2) __tdiv_to_l_                                         17     9      8     455
                                              0 COMRAM    17     9      8
 ---------------------------------------------------------------------------------
 (2) __div_to_l_                                          14     6      8     455
                                              0 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4    1158
                                             24 COMRAM    14    10      4
                            ___fltol (ARG)
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     463
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___llmod                                              9     1      8     767
                                             13 COMRAM     9     1      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8     770
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             10     6      4     685
                                             14 COMRAM    10     6      4
                            ___awdiv (ARG)
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flsub                                              8     0      8    4257
                                             86 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             16     8      8    3630
                                             58 COMRAM    16     8      8
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
                           ___xxtofl (ARG)
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flneg                                              4     0      4     349
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8    1246
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (2) ___fleq                                              12     4      8    1862
                                             38 COMRAM    12     4      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) _poll_switch1_for_edges                               4     2      2     145
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) _DELAY_milliseconds                                   3     1      2     174
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (1) _TMR0_WriteTimer                                      2     0      2     348
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     294
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _TMR0_Initialize
                   _UART2_Initialize
 ---------------------------------------------------------------------------------
 (2) _UART2_Initialize                                     0     0      0     294
              _UART2_SetErrorHandler
       _UART2_SetFramingErrorHandler
       _UART2_SetOverrunErrorHandler
 ---------------------------------------------------------------------------------
 (3) _UART2_SetOverrunErrorHandler                         2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _UART2_SetFramingErrorHandler                         2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _UART2_SetErrorHandler                                2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _TMR0_Initialize
     _UART2_Initialize
       _UART2_SetErrorHandler
       _UART2_SetFramingErrorHandler
       _UART2_SetOverrunErrorHandler
   _TMR0_WriteTimer
   ___fladd
     ___lwdiv (ARG)
       ___lwmod (ARG)
     ___lwmod (ARG)
     ___xxtofl (ARG)
       ___fltol (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
     _frexp (ARG)
       ___fleq
         ___xxtofl (ARG)
           ___fltol (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
   ___fldiv
     ___fladd (ARG)
       ___lwdiv (ARG)
         ___lwmod (ARG)
       ___lwmod (ARG)
       ___xxtofl (ARG)
         ___fltol (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       _frexp (ARG)
         ___fleq
           ___xxtofl (ARG)
             ___fltol (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
     ___flmul (ARG)
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___fladd (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
           ___fltol (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         _frexp (ARG)
           ___fleq
             ___xxtofl (ARG)
               ___fltol (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
       ___fltol (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
       ___lwdiv (ARG)
         ___lwmod (ARG)
       ___lwmod (ARG)
       ___xxtofl (ARG)
         ___fltol (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       _frexp (ARG)
         ___fleq
           ___xxtofl (ARG)
             ___fltol (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
     ___flsub (ARG)
       ___fladd
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
           ___fltol (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         _frexp (ARG)
           ___fleq
             ___xxtofl (ARG)
               ___fltol (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
       ___flmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___fladd (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
             ___fltol (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           _frexp (ARG)
             ___fleq
               ___xxtofl (ARG)
                 ___fltol (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
         ___fltol (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
           ___fltol (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         _frexp (ARG)
           ___fleq
             ___xxtofl (ARG)
               ___fltol (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
       ___xxtofl (ARG)
         ___fltol (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
     ___xxtofl (ARG)
       ___fltol (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
   ___flmul
     ___awdiv (ARG)
       ___awmod (ARG)
     ___awmod (ARG)
     ___fladd (ARG)
       ___lwdiv (ARG)
         ___lwmod (ARG)
       ___lwmod (ARG)
       ___xxtofl (ARG)
         ___fltol (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       _frexp (ARG)
         ___fleq
           ___xxtofl (ARG)
             ___fltol (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
     ___fltol (ARG)
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
     ___lwdiv (ARG)
       ___lwmod (ARG)
     ___lwmod (ARG)
     ___xxtofl (ARG)
       ___fltol (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
     _frexp (ARG)
       ___fleq
         ___xxtofl (ARG)
           ___fltol (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
   ___flsub
     ___fladd
       ___lwdiv (ARG)
         ___lwmod (ARG)
       ___lwmod (ARG)
       ___xxtofl (ARG)
         ___fltol (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       _frexp (ARG)
         ___fleq
           ___xxtofl (ARG)
             ___fltol (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
     ___flmul (ARG)
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___fladd (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
           ___fltol (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         _frexp (ARG)
           ___fleq
             ___xxtofl (ARG)
               ___fltol (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
       ___fltol (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
       ___lwdiv (ARG)
         ___lwmod (ARG)
       ___lwmod (ARG)
       ___xxtofl (ARG)
         ___fltol (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       _frexp (ARG)
         ___fleq
           ___xxtofl (ARG)
             ___fltol (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
     ___xxtofl (ARG)
       ___fltol (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
   ___xxtofl
     ___fltol (ARG)
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
   _buttonResponse
     _DELAY_milliseconds
     _poll_switch1_for_edges
     _printf
       ___awdiv
         ___awmod (ARG)
       ___fladd
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
           ___fltol (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         _frexp (ARG)
           ___fleq
             ___xxtofl (ARG)
               ___fltol (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
       ___fleq
         ___xxtofl (ARG)
           ___fltol (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___flge
       ___flmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___fladd (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
             ___fltol (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           _frexp (ARG)
             ___fleq
               ___xxtofl (ARG)
                 ___fltol (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
         ___fltol (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
           ___fltol (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         _frexp (ARG)
           ___fleq
             ___xxtofl (ARG)
               ___fltol (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
       ___flneg
       ___flsub
         ___fladd
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
             ___fltol (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           _frexp (ARG)
             ___fleq
               ___xxtofl (ARG)
                 ___fltol (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
         ___flmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fladd (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
             ___xxtofl (ARG)
               ___fltol (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             _frexp (ARG)
               ___fleq
                 ___xxtofl (ARG)
                   ___fltol (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
           ___fltol (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
             ___fltol (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           _frexp (ARG)
             ___fleq
               ___xxtofl (ARG)
                 ___fltol (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
         ___xxtofl (ARG)
           ___fltol (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___fltol
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
       ___lldiv
       ___llmod
         ___lldiv (ARG)
       ___wmul
       ___xxtofl
         ___fltol (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       __div_to_l_
       __tdiv_to_l_
       _fround
         ___fladd (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
             ___fltol (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           _frexp (ARG)
             ___fleq
               ___xxtofl (ARG)
                 ___fltol (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
         ___flmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fladd (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
             ___xxtofl (ARG)
               ___fltol (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             _frexp (ARG)
               ___fleq
                 ___xxtofl (ARG)
                   ___fltol (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
           ___fltol (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
             ___fltol (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           _frexp (ARG)
             ___fleq
               ___xxtofl (ARG)
                 ___fltol (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
       _isdigit
       _pow (ARG)
         ___fleq
           ___xxtofl (ARG)
             ___fltol (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___flge
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fladd (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
             ___xxtofl (ARG)
               ___fltol (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             _frexp (ARG)
               ___fleq
                 ___xxtofl (ARG)
                   ___fltol (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
           ___fltol (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
             ___fltol (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           _frexp (ARG)
             ___fleq
               ___xxtofl (ARG)
                 ___fltol (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
         ___flneg
         ___fltol
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         ___xxtofl
           ___fltol (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         _exp
           ___fldiv
             ___fladd (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
               ___xxtofl (ARG)
                 ___fltol (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               _frexp (ARG)
                 ___fleq
                   ___xxtofl (ARG)
                     ___fltol (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fladd (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
                 ___xxtofl (ARG)
                   ___fltol (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 _frexp (ARG)
                   ___fleq
                     ___xxtofl (ARG)
                       ___fltol (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
               ___fltol (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
               ___xxtofl (ARG)
                 ___fltol (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               _frexp (ARG)
                 ___fleq
                   ___xxtofl (ARG)
                     ___fltol (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
             ___flsub (ARG)
               ___fladd
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
                 ___xxtofl (ARG)
                   ___fltol (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 _frexp (ARG)
                   ___fleq
                     ___xxtofl (ARG)
                       ___fltol (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___fladd (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                   ___xxtofl (ARG)
                     ___fltol (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                   _frexp (ARG)
                     ___fleq
                       ___xxtofl (ARG)
                         ___fltol (ARG)
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                 ___fltol (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
                 ___xxtofl (ARG)
                   ___fltol (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 _frexp (ARG)
                   ___fleq
                     ___xxtofl (ARG)
                       ___fltol (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
               ___xxtofl (ARG)
                 ___fltol (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
             ___xxtofl (ARG)
               ___fltol (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           ___fleq
             ___xxtofl (ARG)
               ___fltol (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           ___flge
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fladd (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
               ___xxtofl (ARG)
                 ___fltol (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               _frexp (ARG)
                 ___fleq
                   ___xxtofl (ARG)
                     ___fltol (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
             ___fltol (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
             ___xxtofl (ARG)
               ___fltol (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             _frexp (ARG)
               ___fleq
                 ___xxtofl (ARG)
                   ___fltol (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
           ___flneg
           ___flsub
             ___fladd
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
               ___xxtofl (ARG)
                 ___fltol (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               _frexp (ARG)
                 ___fleq
                   ___xxtofl (ARG)
                     ___fltol (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fladd (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
                 ___xxtofl (ARG)
                   ___fltol (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 _frexp (ARG)
                   ___fleq
                     ___xxtofl (ARG)
                       ___fltol (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
               ___fltol (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
               ___xxtofl (ARG)
                 ___fltol (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               _frexp (ARG)
                 ___fleq
                   ___xxtofl (ARG)
                     ___fltol (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
             ___xxtofl (ARG)
               ___fltol (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           ___fltol
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           ___xxtofl
             ___fltol (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           _eval_poly
             ___fladd
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
               ___xxtofl (ARG)
                 ___fltol (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               _frexp (ARG)
                 ___fleq
                   ___xxtofl (ARG)
                     ___fltol (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fladd (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
                 ___xxtofl (ARG)
                   ___fltol (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 _frexp (ARG)
                   ___fleq
                     ___xxtofl (ARG)
                       ___fltol (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
               ___fltol (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
               ___xxtofl (ARG)
                 ___fltol (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               _frexp (ARG)
                 ___fleq
                   ___xxtofl (ARG)
                     ___fltol (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
           _floor
             ___fladd
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
               ___xxtofl (ARG)
                 ___fltol (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               _frexp (ARG)
                 ___fleq
                   ___xxtofl (ARG)
                     ___fltol (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
             ___flge
             ___fltol
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             ___xxtofl
               ___fltol (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             _frexp
               ___fleq
                 ___xxtofl (ARG)
                   ___fltol (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
           _ldexp
             ___fleq
               ___xxtofl (ARG)
                 ___fltol (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
             _eval_poly (ARG)
               ___fladd
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
                 ___xxtofl (ARG)
                   ___fltol (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 _frexp (ARG)
                   ___fleq
                     ___xxtofl (ARG)
                       ___fltol (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___fladd (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                   ___xxtofl (ARG)
                     ___fltol (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                   _frexp (ARG)
                     ___fleq
                       ___xxtofl (ARG)
                         ___fltol (ARG)
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                 ___fltol (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
                 ___xxtofl (ARG)
                   ___fltol (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 _frexp (ARG)
                   ___fleq
                     ___xxtofl (ARG)
                       ___fltol (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
           _log (ARG)
             ___fladd
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
               ___xxtofl (ARG)
                 ___fltol (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               _frexp (ARG)
                 ___fleq
                   ___xxtofl (ARG)
                     ___fltol (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
             ___fleq
               ___xxtofl (ARG)
                 ___fltol (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fladd (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
                 ___xxtofl (ARG)
                   ___fltol (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 _frexp (ARG)
                   ___fleq
                     ___xxtofl (ARG)
                       ___fltol (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
               ___fltol (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
               ___xxtofl (ARG)
                 ___fltol (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               _frexp (ARG)
                 ___fleq
                   ___xxtofl (ARG)
                     ___fltol (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
             ___xxtofl
               ___fltol (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             _eval_poly
               ___fladd
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
                 ___xxtofl (ARG)
                   ___fltol (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 _frexp (ARG)
                   ___fleq
                     ___xxtofl (ARG)
                       ___fltol (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___fladd (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                   ___xxtofl (ARG)
                     ___fltol (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                   _frexp (ARG)
                     ___fleq
                       ___xxtofl (ARG)
                         ___fltol (ARG)
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                 ___fltol (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
                 ___xxtofl (ARG)
                   ___fltol (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 _frexp (ARG)
                   ___fleq
                     ___xxtofl (ARG)
                       ___fltol (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
             _frexp
               ___fleq
                 ___xxtofl (ARG)
                   ___fltol (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
         _log
           ___fladd
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
             ___xxtofl (ARG)
               ___fltol (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             _frexp (ARG)
               ___fleq
                 ___xxtofl (ARG)
                   ___fltol (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
           ___fleq
             ___xxtofl (ARG)
               ___fltol (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fladd (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
               ___xxtofl (ARG)
                 ___fltol (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               _frexp (ARG)
                 ___fleq
                   ___xxtofl (ARG)
                     ___fltol (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
             ___fltol (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
             ___xxtofl (ARG)
               ___fltol (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             _frexp (ARG)
               ___fleq
                 ___xxtofl (ARG)
                   ___fltol (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
           ___xxtofl
             ___fltol (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           _eval_poly
             ___fladd
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
               ___xxtofl (ARG)
                 ___fltol (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               _frexp (ARG)
                 ___fleq
                   ___xxtofl (ARG)
                     ___fltol (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fladd (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
                 ___xxtofl (ARG)
                   ___fltol (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 _frexp (ARG)
                   ___fleq
                     ___xxtofl (ARG)
                       ___fltol (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
               ___fltol (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
               ___xxtofl (ARG)
                 ___fltol (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               _frexp (ARG)
                 ___fleq
                   ___xxtofl (ARG)
                     ___fltol (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
           _frexp
             ___fleq
               ___xxtofl (ARG)
                 ___fltol (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
       _putch (ARG)
         _UART2_Write
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fladd (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
             ___xxtofl (ARG)
               ___fltol (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             _frexp (ARG)
               ___fleq
                 ___xxtofl (ARG)
                   ___fltol (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
           ___fltol (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
             ___fltol (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           _frexp (ARG)
             ___fleq
               ___xxtofl (ARG)
                 ___fltol (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
         ___fltol (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
   _clearPuTTY
     _printf
       ___awdiv
         ___awmod (ARG)
       ___fladd
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
           ___fltol (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         _frexp (ARG)
           ___fleq
             ___xxtofl (ARG)
               ___fltol (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
       ___fleq
         ___xxtofl (ARG)
           ___fltol (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___flge
       ___flmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___fladd (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
             ___fltol (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           _frexp (ARG)
             ___fleq
               ___xxtofl (ARG)
                 ___fltol (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
         ___fltol (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
           ___fltol (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         _frexp (ARG)
           ___fleq
             ___xxtofl (ARG)
               ___fltol (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
       ___flneg
       ___flsub
         ___fladd
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
             ___fltol (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           _frexp (ARG)
             ___fleq
               ___xxtofl (ARG)
                 ___fltol (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
         ___flmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fladd (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
             ___xxtofl (ARG)
               ___fltol (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             _frexp (ARG)
               ___fleq
                 ___xxtofl (ARG)
                   ___fltol (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
           ___fltol (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
             ___fltol (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           _frexp (ARG)
             ___fleq
               ___xxtofl (ARG)
                 ___fltol (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
         ___xxtofl (ARG)
           ___fltol (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___fltol
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
       ___lldiv
       ___llmod
         ___lldiv (ARG)
       ___wmul
       ___xxtofl
         ___fltol (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       __div_to_l_
       __tdiv_to_l_
       _fround
         ___fladd (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
             ___fltol (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           _frexp (ARG)
             ___fleq
               ___xxtofl (ARG)
                 ___fltol (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
         ___flmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fladd (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
             ___xxtofl (ARG)
               ___fltol (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             _frexp (ARG)
               ___fleq
                 ___xxtofl (ARG)
                   ___fltol (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
           ___fltol (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
             ___fltol (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           _frexp (ARG)
             ___fleq
               ___xxtofl (ARG)
                 ___fltol (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
       _isdigit
       _pow (ARG)
         ___fleq
           ___xxtofl (ARG)
             ___fltol (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___flge
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fladd (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
             ___xxtofl (ARG)
               ___fltol (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             _frexp (ARG)
               ___fleq
                 ___xxtofl (ARG)
                   ___fltol (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
           ___fltol (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
             ___fltol (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           _frexp (ARG)
             ___fleq
               ___xxtofl (ARG)
                 ___fltol (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
         ___flneg
         ___fltol
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         ___xxtofl
           ___fltol (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         _exp
           ___fldiv
             ___fladd (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
               ___xxtofl (ARG)
                 ___fltol (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               _frexp (ARG)
                 ___fleq
                   ___xxtofl (ARG)
                     ___fltol (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fladd (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
                 ___xxtofl (ARG)
                   ___fltol (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 _frexp (ARG)
                   ___fleq
                     ___xxtofl (ARG)
                       ___fltol (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
               ___fltol (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
               ___xxtofl (ARG)
                 ___fltol (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               _frexp (ARG)
                 ___fleq
                   ___xxtofl (ARG)
                     ___fltol (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
             ___flsub (ARG)
               ___fladd
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
                 ___xxtofl (ARG)
                   ___fltol (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 _frexp (ARG)
                   ___fleq
                     ___xxtofl (ARG)
                       ___fltol (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___fladd (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                   ___xxtofl (ARG)
                     ___fltol (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                   _frexp (ARG)
                     ___fleq
                       ___xxtofl (ARG)
                         ___fltol (ARG)
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                 ___fltol (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
                 ___xxtofl (ARG)
                   ___fltol (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 _frexp (ARG)
                   ___fleq
                     ___xxtofl (ARG)
                       ___fltol (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
               ___xxtofl (ARG)
                 ___fltol (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
             ___xxtofl (ARG)
               ___fltol (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           ___fleq
             ___xxtofl (ARG)
               ___fltol (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           ___flge
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fladd (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
               ___xxtofl (ARG)
                 ___fltol (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               _frexp (ARG)
                 ___fleq
                   ___xxtofl (ARG)
                     ___fltol (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
             ___fltol (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
             ___xxtofl (ARG)
               ___fltol (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             _frexp (ARG)
               ___fleq
                 ___xxtofl (ARG)
                   ___fltol (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
           ___flneg
           ___flsub
             ___fladd
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
               ___xxtofl (ARG)
                 ___fltol (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               _frexp (ARG)
                 ___fleq
                   ___xxtofl (ARG)
                     ___fltol (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fladd (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
                 ___xxtofl (ARG)
                   ___fltol (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 _frexp (ARG)
                   ___fleq
                     ___xxtofl (ARG)
                       ___fltol (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
               ___fltol (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
               ___xxtofl (ARG)
                 ___fltol (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               _frexp (ARG)
                 ___fleq
                   ___xxtofl (ARG)
                     ___fltol (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
             ___xxtofl (ARG)
               ___fltol (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           ___fltol
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           ___xxtofl
             ___fltol (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           _eval_poly
             ___fladd
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
               ___xxtofl (ARG)
                 ___fltol (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               _frexp (ARG)
                 ___fleq
                   ___xxtofl (ARG)
                     ___fltol (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fladd (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
                 ___xxtofl (ARG)
                   ___fltol (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 _frexp (ARG)
                   ___fleq
                     ___xxtofl (ARG)
                       ___fltol (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
               ___fltol (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
               ___xxtofl (ARG)
                 ___fltol (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               _frexp (ARG)
                 ___fleq
                   ___xxtofl (ARG)
                     ___fltol (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
           _floor
             ___fladd
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
               ___xxtofl (ARG)
                 ___fltol (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               _frexp (ARG)
                 ___fleq
                   ___xxtofl (ARG)
                     ___fltol (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
             ___flge
             ___fltol
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             ___xxtofl
               ___fltol (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             _frexp
               ___fleq
                 ___xxtofl (ARG)
                   ___fltol (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
           _ldexp
             ___fleq
               ___xxtofl (ARG)
                 ___fltol (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
             _eval_poly (ARG)
               ___fladd
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
                 ___xxtofl (ARG)
                   ___fltol (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 _frexp (ARG)
                   ___fleq
                     ___xxtofl (ARG)
                       ___fltol (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___fladd (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                   ___xxtofl (ARG)
                     ___fltol (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                   _frexp (ARG)
                     ___fleq
                       ___xxtofl (ARG)
                         ___fltol (ARG)
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                 ___fltol (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
                 ___xxtofl (ARG)
                   ___fltol (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 _frexp (ARG)
                   ___fleq
                     ___xxtofl (ARG)
                       ___fltol (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
           _log (ARG)
             ___fladd
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
               ___xxtofl (ARG)
                 ___fltol (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               _frexp (ARG)
                 ___fleq
                   ___xxtofl (ARG)
                     ___fltol (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
             ___fleq
               ___xxtofl (ARG)
                 ___fltol (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fladd (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
                 ___xxtofl (ARG)
                   ___fltol (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 _frexp (ARG)
                   ___fleq
                     ___xxtofl (ARG)
                       ___fltol (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
               ___fltol (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
               ___xxtofl (ARG)
                 ___fltol (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               _frexp (ARG)
                 ___fleq
                   ___xxtofl (ARG)
                     ___fltol (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
             ___xxtofl
               ___fltol (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             _eval_poly
               ___fladd
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
                 ___xxtofl (ARG)
                   ___fltol (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 _frexp (ARG)
                   ___fleq
                     ___xxtofl (ARG)
                       ___fltol (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___fladd (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                   ___xxtofl (ARG)
                     ___fltol (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                   _frexp (ARG)
                     ___fleq
                       ___xxtofl (ARG)
                         ___fltol (ARG)
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                 ___fltol (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
                 ___xxtofl (ARG)
                   ___fltol (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 _frexp (ARG)
                   ___fleq
                     ___xxtofl (ARG)
                       ___fltol (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
             _frexp
               ___fleq
                 ___xxtofl (ARG)
                   ___fltol (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
         _log
           ___fladd
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
             ___xxtofl (ARG)
               ___fltol (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             _frexp (ARG)
               ___fleq
                 ___xxtofl (ARG)
                   ___fltol (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
           ___fleq
             ___xxtofl (ARG)
               ___fltol (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fladd (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
               ___xxtofl (ARG)
                 ___fltol (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               _frexp (ARG)
                 ___fleq
                   ___xxtofl (ARG)
                     ___fltol (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
             ___fltol (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
             ___xxtofl (ARG)
               ___fltol (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             _frexp (ARG)
               ___fleq
                 ___xxtofl (ARG)
                   ___fltol (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
           ___xxtofl
             ___fltol (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           _eval_poly
             ___fladd
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
               ___xxtofl (ARG)
                 ___fltol (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               _frexp (ARG)
                 ___fleq
                   ___xxtofl (ARG)
                     ___fltol (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fladd (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
                 ___xxtofl (ARG)
                   ___fltol (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 _frexp (ARG)
                   ___fleq
                     ___xxtofl (ARG)
                       ___fltol (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
               ___fltol (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
               ___xxtofl (ARG)
                 ___fltol (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               _frexp (ARG)
                 ___fleq
                   ___xxtofl (ARG)
                     ___fltol (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
           _frexp
             ___fleq
               ___xxtofl (ARG)
                 ___fltol (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
       _putch (ARG)
         _UART2_Write
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fladd (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
             ___xxtofl (ARG)
               ___fltol (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             _frexp (ARG)
               ___fleq
                 ___xxtofl (ARG)
                   ___fltol (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
           ___fltol (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
             ___fltol (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           _frexp (ARG)
             ___fleq
               ___xxtofl (ARG)
                 ___fltol (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
         ___fltol (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
   _pow
     ___fleq
       ___xxtofl (ARG)
         ___fltol (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
     ___flge
     ___flmul
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___fladd (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
           ___fltol (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         _frexp (ARG)
           ___fleq
             ___xxtofl (ARG)
               ___fltol (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
       ___fltol (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
       ___lwdiv (ARG)
         ___lwmod (ARG)
       ___lwmod (ARG)
       ___xxtofl (ARG)
         ___fltol (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       _frexp (ARG)
         ___fleq
           ___xxtofl (ARG)
             ___fltol (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
     ___flneg
     ___fltol
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
     ___xxtofl
       ___fltol (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
     _exp
       ___fldiv
         ___fladd (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
             ___fltol (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           _frexp (ARG)
             ___fleq
               ___xxtofl (ARG)
                 ___fltol (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
         ___flmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fladd (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
             ___xxtofl (ARG)
               ___fltol (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             _frexp (ARG)
               ___fleq
                 ___xxtofl (ARG)
                   ___fltol (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
           ___fltol (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
             ___fltol (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           _frexp (ARG)
             ___fleq
               ___xxtofl (ARG)
                 ___fltol (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
         ___flsub (ARG)
           ___fladd
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
             ___xxtofl (ARG)
               ___fltol (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             _frexp (ARG)
               ___fleq
                 ___xxtofl (ARG)
                   ___fltol (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fladd (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
               ___xxtofl (ARG)
                 ___fltol (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               _frexp (ARG)
                 ___fleq
                   ___xxtofl (ARG)
                     ___fltol (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
             ___fltol (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
             ___xxtofl (ARG)
               ___fltol (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             _frexp (ARG)
               ___fleq
                 ___xxtofl (ARG)
                   ___fltol (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
           ___xxtofl (ARG)
             ___fltol (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___xxtofl (ARG)
           ___fltol (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___fleq
         ___xxtofl (ARG)
           ___fltol (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___flge
       ___flmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___fladd (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
             ___fltol (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           _frexp (ARG)
             ___fleq
               ___xxtofl (ARG)
                 ___fltol (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
         ___fltol (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
           ___fltol (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         _frexp (ARG)
           ___fleq
             ___xxtofl (ARG)
               ___fltol (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
       ___flneg
       ___flsub
         ___fladd
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
             ___fltol (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           _frexp (ARG)
             ___fleq
               ___xxtofl (ARG)
                 ___fltol (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
         ___flmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fladd (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
             ___xxtofl (ARG)
               ___fltol (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             _frexp (ARG)
               ___fleq
                 ___xxtofl (ARG)
                   ___fltol (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
           ___fltol (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
             ___fltol (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           _frexp (ARG)
             ___fleq
               ___xxtofl (ARG)
                 ___fltol (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
         ___xxtofl (ARG)
           ___fltol (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___fltol
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
       ___xxtofl
         ___fltol (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       _eval_poly
         ___fladd
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
             ___fltol (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           _frexp (ARG)
             ___fleq
               ___xxtofl (ARG)
                 ___fltol (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fladd (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
             ___xxtofl (ARG)
               ___fltol (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             _frexp (ARG)
               ___fleq
                 ___xxtofl (ARG)
                   ___fltol (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
           ___fltol (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
             ___fltol (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           _frexp (ARG)
             ___fleq
               ___xxtofl (ARG)
                 ___fltol (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
       _floor
         ___fladd
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
             ___fltol (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           _frexp (ARG)
             ___fleq
               ___xxtofl (ARG)
                 ___fltol (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
         ___flge
         ___fltol
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         ___xxtofl
           ___fltol (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         _frexp
           ___fleq
             ___xxtofl (ARG)
               ___fltol (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
       _ldexp
         ___fleq
           ___xxtofl (ARG)
             ___fltol (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         _eval_poly (ARG)
           ___fladd
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
             ___xxtofl (ARG)
               ___fltol (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             _frexp (ARG)
               ___fleq
                 ___xxtofl (ARG)
                   ___fltol (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fladd (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
               ___xxtofl (ARG)
                 ___fltol (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               _frexp (ARG)
                 ___fleq
                   ___xxtofl (ARG)
                     ___fltol (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
             ___fltol (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
             ___xxtofl (ARG)
               ___fltol (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             _frexp (ARG)
               ___fleq
                 ___xxtofl (ARG)
                   ___fltol (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
       _log (ARG)
         ___fladd
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
             ___fltol (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           _frexp (ARG)
             ___fleq
               ___xxtofl (ARG)
                 ___fltol (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
         ___fleq
           ___xxtofl (ARG)
             ___fltol (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fladd (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
             ___xxtofl (ARG)
               ___fltol (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             _frexp (ARG)
               ___fleq
                 ___xxtofl (ARG)
                   ___fltol (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
           ___fltol (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
             ___fltol (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           _frexp (ARG)
             ___fleq
               ___xxtofl (ARG)
                 ___fltol (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
         ___xxtofl
           ___fltol (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         _eval_poly
           ___fladd
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
             ___xxtofl (ARG)
               ___fltol (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             _frexp (ARG)
               ___fleq
                 ___xxtofl (ARG)
                   ___fltol (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fladd (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
               ___xxtofl (ARG)
                 ___fltol (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               _frexp (ARG)
                 ___fleq
                   ___xxtofl (ARG)
                     ___fltol (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
             ___fltol (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
             ___xxtofl (ARG)
               ___fltol (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             _frexp (ARG)
               ___fleq
                 ___xxtofl (ARG)
                   ___fltol (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
         _frexp
           ___fleq
             ___xxtofl (ARG)
               ___fltol (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
     _log
       ___fladd
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
           ___fltol (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         _frexp (ARG)
           ___fleq
             ___xxtofl (ARG)
               ___fltol (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
       ___fleq
         ___xxtofl (ARG)
           ___fltol (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___flmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___fladd (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
             ___fltol (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           _frexp (ARG)
             ___fleq
               ___xxtofl (ARG)
                 ___fltol (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
         ___fltol (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
           ___fltol (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         _frexp (ARG)
           ___fleq
             ___xxtofl (ARG)
               ___fltol (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
       ___xxtofl
         ___fltol (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       _eval_poly
         ___fladd
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
             ___fltol (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           _frexp (ARG)
             ___fleq
               ___xxtofl (ARG)
                 ___fltol (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fladd (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
             ___xxtofl (ARG)
               ___fltol (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             _frexp (ARG)
               ___fleq
                 ___xxtofl (ARG)
                   ___fltol (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
           ___fltol (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
             ___fltol (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           _frexp (ARG)
             ___fleq
               ___xxtofl (ARG)
                 ___fltol (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
       _frexp
         ___fleq
           ___xxtofl (ARG)
             ___fltol (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
   _printf
     ___awdiv
       ___awmod (ARG)
     ___fladd
       ___lwdiv (ARG)
         ___lwmod (ARG)
       ___lwmod (ARG)
       ___xxtofl (ARG)
         ___fltol (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       _frexp (ARG)
         ___fleq
           ___xxtofl (ARG)
             ___fltol (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
     ___fleq
       ___xxtofl (ARG)
         ___fltol (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
     ___flge
     ___flmul
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___fladd (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
           ___fltol (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         _frexp (ARG)
           ___fleq
             ___xxtofl (ARG)
               ___fltol (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
       ___fltol (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
       ___lwdiv (ARG)
         ___lwmod (ARG)
       ___lwmod (ARG)
       ___xxtofl (ARG)
         ___fltol (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       _frexp (ARG)
         ___fleq
           ___xxtofl (ARG)
             ___fltol (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
     ___flneg
     ___flsub
       ___fladd
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
           ___fltol (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         _frexp (ARG)
           ___fleq
             ___xxtofl (ARG)
               ___fltol (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
       ___flmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___fladd (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
             ___fltol (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           _frexp (ARG)
             ___fleq
               ___xxtofl (ARG)
                 ___fltol (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
         ___fltol (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
           ___fltol (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         _frexp (ARG)
           ___fleq
             ___xxtofl (ARG)
               ___fltol (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
       ___xxtofl (ARG)
         ___fltol (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
     ___fltol
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
     ___lldiv
     ___llmod
       ___lldiv (ARG)
     ___wmul
     ___xxtofl
       ___fltol (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
     __div_to_l_
     __tdiv_to_l_
     _fround
       ___fladd (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
           ___fltol (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         _frexp (ARG)
           ___fleq
             ___xxtofl (ARG)
               ___fltol (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
       ___flmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___fladd (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
             ___fltol (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           _frexp (ARG)
             ___fleq
               ___xxtofl (ARG)
                 ___fltol (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
         ___fltol (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
           ___fltol (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         _frexp (ARG)
           ___fleq
             ___xxtofl (ARG)
               ___fltol (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
       ___lwdiv (ARG)
         ___lwmod (ARG)
       ___lwmod (ARG)
     _isdigit
     _pow (ARG)
       ___fleq
         ___xxtofl (ARG)
           ___fltol (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___flge
       ___flmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___fladd (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
             ___fltol (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           _frexp (ARG)
             ___fleq
               ___xxtofl (ARG)
                 ___fltol (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
         ___fltol (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
           ___fltol (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         _frexp (ARG)
           ___fleq
             ___xxtofl (ARG)
               ___fltol (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
       ___flneg
       ___fltol
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
       ___xxtofl
         ___fltol (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       _exp
         ___fldiv
           ___fladd (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
             ___xxtofl (ARG)
               ___fltol (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             _frexp (ARG)
               ___fleq
                 ___xxtofl (ARG)
                   ___fltol (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fladd (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
               ___xxtofl (ARG)
                 ___fltol (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               _frexp (ARG)
                 ___fleq
                   ___xxtofl (ARG)
                     ___fltol (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
             ___fltol (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
             ___xxtofl (ARG)
               ___fltol (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             _frexp (ARG)
               ___fleq
                 ___xxtofl (ARG)
                   ___fltol (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
           ___flsub (ARG)
             ___fladd
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
               ___xxtofl (ARG)
                 ___fltol (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               _frexp (ARG)
                 ___fleq
                   ___xxtofl (ARG)
                     ___fltol (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fladd (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
                 ___xxtofl (ARG)
                   ___fltol (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 _frexp (ARG)
                   ___fleq
                     ___xxtofl (ARG)
                       ___fltol (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
               ___fltol (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
               ___xxtofl (ARG)
                 ___fltol (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               _frexp (ARG)
                 ___fleq
                   ___xxtofl (ARG)
                     ___fltol (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
             ___xxtofl (ARG)
               ___fltol (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           ___xxtofl (ARG)
             ___fltol (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___fleq
           ___xxtofl (ARG)
             ___fltol (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___flge
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fladd (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
             ___xxtofl (ARG)
               ___fltol (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             _frexp (ARG)
               ___fleq
                 ___xxtofl (ARG)
                   ___fltol (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
           ___fltol (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
             ___fltol (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           _frexp (ARG)
             ___fleq
               ___xxtofl (ARG)
                 ___fltol (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
         ___flneg
         ___flsub
           ___fladd
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
             ___xxtofl (ARG)
               ___fltol (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             _frexp (ARG)
               ___fleq
                 ___xxtofl (ARG)
                   ___fltol (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fladd (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
               ___xxtofl (ARG)
                 ___fltol (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               _frexp (ARG)
                 ___fleq
                   ___xxtofl (ARG)
                     ___fltol (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
             ___fltol (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
             ___xxtofl (ARG)
               ___fltol (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             _frexp (ARG)
               ___fleq
                 ___xxtofl (ARG)
                   ___fltol (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
           ___xxtofl (ARG)
             ___fltol (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___fltol
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         ___xxtofl
           ___fltol (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         _eval_poly
           ___fladd
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
             ___xxtofl (ARG)
               ___fltol (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             _frexp (ARG)
               ___fleq
                 ___xxtofl (ARG)
                   ___fltol (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fladd (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
               ___xxtofl (ARG)
                 ___fltol (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               _frexp (ARG)
                 ___fleq
                   ___xxtofl (ARG)
                     ___fltol (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
             ___fltol (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
             ___xxtofl (ARG)
               ___fltol (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             _frexp (ARG)
               ___fleq
                 ___xxtofl (ARG)
                   ___fltol (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
         _floor
           ___fladd
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
             ___xxtofl (ARG)
               ___fltol (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             _frexp (ARG)
               ___fleq
                 ___xxtofl (ARG)
                   ___fltol (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
           ___flge
           ___fltol
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           ___xxtofl
             ___fltol (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           _frexp
             ___fleq
               ___xxtofl (ARG)
                 ___fltol (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
         _ldexp
           ___fleq
             ___xxtofl (ARG)
               ___fltol (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           _eval_poly (ARG)
             ___fladd
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
               ___xxtofl (ARG)
                 ___fltol (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               _frexp (ARG)
                 ___fleq
                   ___xxtofl (ARG)
                     ___fltol (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fladd (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
                 ___xxtofl (ARG)
                   ___fltol (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 _frexp (ARG)
                   ___fleq
                     ___xxtofl (ARG)
                       ___fltol (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
               ___fltol (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
               ___xxtofl (ARG)
                 ___fltol (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               _frexp (ARG)
                 ___fleq
                   ___xxtofl (ARG)
                     ___fltol (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
         _log (ARG)
           ___fladd
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
             ___xxtofl (ARG)
               ___fltol (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             _frexp (ARG)
               ___fleq
                 ___xxtofl (ARG)
                   ___fltol (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
           ___fleq
             ___xxtofl (ARG)
               ___fltol (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fladd (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
               ___xxtofl (ARG)
                 ___fltol (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               _frexp (ARG)
                 ___fleq
                   ___xxtofl (ARG)
                     ___fltol (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
             ___fltol (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
             ___xxtofl (ARG)
               ___fltol (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             _frexp (ARG)
               ___fleq
                 ___xxtofl (ARG)
                   ___fltol (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
           ___xxtofl
             ___fltol (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           _eval_poly
             ___fladd
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
               ___xxtofl (ARG)
                 ___fltol (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               _frexp (ARG)
                 ___fleq
                   ___xxtofl (ARG)
                     ___fltol (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fladd (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
                 ___xxtofl (ARG)
                   ___fltol (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 _frexp (ARG)
                   ___fleq
                     ___xxtofl (ARG)
                       ___fltol (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
               ___fltol (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
               ___xxtofl (ARG)
                 ___fltol (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               _frexp (ARG)
                 ___fleq
                   ___xxtofl (ARG)
                     ___fltol (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
           _frexp
             ___fleq
               ___xxtofl (ARG)
                 ___fltol (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
       _log
         ___fladd
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
             ___fltol (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           _frexp (ARG)
             ___fleq
               ___xxtofl (ARG)
                 ___fltol (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
         ___fleq
           ___xxtofl (ARG)
             ___fltol (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fladd (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
             ___xxtofl (ARG)
               ___fltol (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             _frexp (ARG)
               ___fleq
                 ___xxtofl (ARG)
                   ___fltol (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
           ___fltol (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
             ___fltol (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           _frexp (ARG)
             ___fleq
               ___xxtofl (ARG)
                 ___fltol (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
         ___xxtofl
           ___fltol (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         _eval_poly
           ___fladd
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
             ___xxtofl (ARG)
               ___fltol (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             _frexp (ARG)
               ___fleq
                 ___xxtofl (ARG)
                   ___fltol (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fladd (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
               ___xxtofl (ARG)
                 ___fltol (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               _frexp (ARG)
                 ___fleq
                   ___xxtofl (ARG)
                     ___fltol (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
             ___fltol (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
             ___xxtofl (ARG)
               ___fltol (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             _frexp (ARG)
               ___fleq
                 ___xxtofl (ARG)
                   ___fltol (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
         _frexp
           ___fleq
             ___xxtofl (ARG)
               ___fltol (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
     _putch (ARG)
       _UART2_Write
     _scale (ARG)
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___flmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___fladd (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
             ___fltol (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           _frexp (ARG)
             ___fleq
               ___xxtofl (ARG)
                 ___fltol (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
         ___fltol (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
           ___fltol (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         _frexp (ARG)
           ___fleq
             ___xxtofl (ARG)
               ___fltol (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
       ___fltol (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             FFF      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK15          100      0       0      30        0.0%
BANK15             100      0       0      31        0.0%
BITBANK14          100      0       0      28        0.0%
BANK14             100      0       0      29        0.0%
BITBANK13          100      0       0      36        0.0%
BANK13             100      0       0      27        0.0%
BITBANK12          100      0       0      35        0.0%
BANK12             100      0       0      26        0.0%
BITBANK11          100      0       0      34        0.0%
BANK11             100      0       0      25        0.0%
BITBANK10          100      0       0      33        0.0%
BANK10             100      0       0      24        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      10       7        6.2%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     A0      A0       5      100.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5F      5F       1      100.0%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     10F      32        0.0%
DATA                 0      0     10F       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.30 build 20200825195618 
Symbol Table                                                                                   Tue Dec 01 14:22:01 2020

                                ___fldiv@aexp 0085                                  ___fldiv@bexp 0084  
                                ___fldiv@sign 007D                                            l42 BE12  
                                          l45 BE50                                            l53 BEA8  
                                          l39 BDFA                                            l91 BDD2  
                                          l79 BED8                                  ___awdiv@sign 000C  
                         ___wmul@multiplicand 0003                                           l201 BDB2  
                                         l204 BDBC                                           l207 BDA8  
                                         l154 BFE6                                           l180 BE16  
                                         l183 BE2C                                           l351 F110  
                                         l343 F0CC                                           l424 C13A  
                                         l417 C242                                           l361 F158  
                                         l353 F112                                           l345 F0CE  
                                         l514 F962                                           l354 F114  
                                         l346 F0D0                                           l371 F19C  
                                         l363 F15A                                           l355 F144  
                                         l347 F100                                           l372 F19E  
                                         l364 F15C                                           l189 BDC6  
                                         l373 F1CC                                           l365 F18A  
                                         l455 E78E                                           l448 DAEE  
                                         l384 C1BE                                           l369 F19A  
                                         l298 C36A                                           l546 FE3A  
                                         l803 CDF8                                           l812 CDE8  
                                         l821 C4B8                                           l549 BE7A  
                                         l583 C40E                                           l832 BF42  
                                         l576 C3FE                                           l912 CF4E  
                                         l921 CF3E                                           l914 CE94  
                                         l827 C7C2                                           l915 CEC6  
                                         l828 C808                                           l780 C62C  
                                         l855 C90E                                           l793 C568  
                                         l991 C2BA                                           l998 C2CA  
                  __end_of_DELAY_milliseconds BEAA                                           _exp D50A  
                                         _log CF50                                           _pow D2A8  
                     __size_of_PMD_Initialize 0024                                  ___awmod@sign 0006  
                                         wreg 003FE8                                  ___flmul@aexp 0065  
                                ___flmul@bexp 0066                                  ___flmul@sign 0060  
                                ___flmul@temp 006B                                  ___flmul@prod 0067  
                                ___fltol@exp1 0018                                          l1100 E96C  
                                        l1101 E932                                          l1202 E29C  
                                        l1116 EA98                                          l1108 EC4E  
                                        l1125 EB68                                          l1141 BF88  
                                        l1126 EB56                                          l1062 C0B6  
                                        l1240 D23E                                          l1072 C042  
                                        l1304 C704                                          l1233 D1E2  
                                        l1153 DE8A                                          l1226 D14A  
                                        l1155 DCEA                                          l1164 DD30  
                                        l1308 CCAC                                          l1229 D2A6  
                                        l1069 C0BE                                          l1166 DDA8  
                                        l1158 DCAE                                          l1326 D0F2  
                                        l1262 D4F8                                          l1079 C04A  
                                        l1247 BF0A                                          l1167 DD96  
                                        l3200 E790                                          l4000 C3F8  
                                        l1192 E16C                                          l1185 DF52  
                                        l1257 D31C                                          l3210 E7CC  
                                        l3202 E79C                                          l1194 E1E4  
                                        l4010 DB1E                                          l4002 DAF0  
                                        l1282 D7E4                                          l1258 D508  
                                        l1099 E97E                                          l1195 E1D2  
                                        l3300 E98C                                          l3220 E7FC  
                                        l3212 E7DC                                          l3204 E7AA  
                                        l4100 DD52                                          l4020 DB58  
                                        l4012 DB2E                                          l4004 DAFE  
                                        l1189 E2DA                                          l3310 E9CE  
                                        l3302 E99C                                          l3230 E826  
                                        l3222 E80E                                          l3214 E7DE  
                                        l3206 E7AC                                          l4110 DDC4  
                                        l4102 DD60                                          l4030 DB84  
                                        l4022 DB5E                                          l4014 DB3E  
                                        l4006 DB0C                                          l1278 D7F4  
                                        l3320 E9FC                                          l3312 E9DC  
                                        l3232 E836                                          l3240 E860  
                                        l3224 E810                                          l3208 E7BC  
                                        l3216 E7E6                                          l4120 DE30  
                                        l4112 DDD2                                          l4104 DD8E  
                                        l4040 DBBE                                          l4032 DB94  
                                        l4024 DB64                                          l4016 DB40  
                                        l4008 DB0E                                          l1288 CA1C  
                                        l1296 CB6C                                          l4200 CB6E  
                                        l1289 CA2C                                          l3330 EA68  
                                        l3322 EA06                                          l3314 E9E8  
                                        l3306 E9B0                                          l3250 E898  
                                        l3242 E870                                          l3234 E846  
                                        l3226 E816                                          l3218 E7F6  
                                        l3410 DEBA                                          l3402 DE8C  
                                        l4130 DE7E                                          l4122 DE4A  
                                        l4114 DDFC                                          l4042 DBD4  
                                        l4034 DBA4                                          l4026 DB72  
                                        l4018 DB48                                          l1298 CB5C  
                                        l4202 CBA0                                          l3180 C410  
                                        l3332 EA78                                          l3316 E9EC  
                                        l3308 E9C0                                          l3324 EA0C  
                                        l3260 E8AC                                          l3252 E89C  
                                        l3244 E882                                          l3236 E856  
                                        l3228 E824                                          l4140 BF44  
                                        l3420 DEF6                                          l3412 DECA  
                                        l3404 DE9A                                          l4300 F262  
                                        l4132 DE80                                          l4124 DE66  
                                        l4108 DDB8                                          l4116 DE00  
                                        l4060 DC28                                          l4044 DBE4  
                                        l4052 DC04                                          l4036 DBA6  
                                        l4028 DB74                                          l4220 CC4A  
                                        l3190 C4B0                                          l3182 C43E  
                                        l4150 BF32                                          l3350 EAFA  
                                        l3342 EAD2                                          l3326 EA32  
                                        l3334 EA88                                          l3318 E9FA  
                                        l3270 E8C0                                          l3262 E8B0  
                                        l3254 E8A0                                          l3246 E890  
                                        l3238 E858                                          l4142 BF54  
                                        l3502 E1F4                                          l3510 E23C  
                                        l3430 DF2C                                          l3422 DEFC  
                                        l3414 DEDA                                          l3406 DEA8  
                                        l4310 F2E2                                          l4302 F27E  
                                        l4126 DE6A                                          l4118 DE1A  
                                        l4070 DC7A                                          l4062 DC42  
                                        l4054 DC14                                          l4046 DBEC  
                                        l4038 DBAE                                          l4230 CC72  
                                        l4214 CC1A                                          l4206 CBB6  
                                        l4240 C2E4                                          l3192 C4B6  
                                        l3184 C44E                                          l3352 EB02  
                                        l3344 EADC                                          l3336 EAAE  
                                        l3328 EA66                                          l3360 EB26  
                                        l3280 E8D4                                          l3272 E8C4  
                                        l3264 E8B4                                          l3256 E8A4  
                                        l3248 E894                                          l4160 C26E  
                                        l3520 E2B0                                          l3512 E256  
                                        l3504 E200                                          l3432 DF3C  
                                        l3424 DF0A                                          l3416 DEE0  
                                        l3408 DEAA                                          l3600 C53C  
                                        l4400 F6EE                                          l4320 F320  
                                        l4312 F2E8                                          l4304 F2AE  
                                        l4128 DE78                                          l4080 DCD6  
                                        l4072 DC8A                                          l4064 DC52  
                                        l4056 DC14                                          l4048 DBF0  
                                        l4232 CC9C                                          l4216 CC30  
                                        l4208 CBFA                                          l4250 C34C  
                                        l4242 C304                                          l3186 C47C  
                                        l4146 BF0C                                          l3370 EB78  
                                        l3362 EB2A                                          l3354 EB06  
                                        l3346 EAEA                                          l3338 EABE  
                                        l3290 E94C                                          l3282 E8FE  
                                        l3274 E8C8                                          l3266 E8B8  
                                        l3258 E8A8                                          l4162 C27C  
                                        l4154 C244                                          l3522 E2BE  
                                        l3514 E26A                                          l3506 E20E  
                                        l3450 DFC6                                          l3442 DF86  
                                        l3434 DF42                                          l3426 DF0C  
                                        l3418 DEF0                                          l3602 C542  
                                        l4410 F750                                          l4402 F6FC  
                                        l4330 F372                                          l4322 F32C  
                                        l4314 F2EE                                          l4306 F2B2  
                                        l4090 DD16                                          l4082 DCD8  
                                        l4074 DC9E                                          l4066 DC62  
                                        l4170 CA2E                                          l4226 CC5E  
                                        l4218 CC3A                                          l4260 BDFC  
                                        l4252 C352                                          l4244 C346  
                                        l4236 BE2E                                          l3188 C48C  
                                        l3620 C782                                          l3612 C706  
                                        l4148 BF22                                          l3380 EBDE  
                                        l3372 EB84                                          l3364 EB38  
                                        l3356 EB16                                          l3348 EAEC  
                                        l3292 E950                                          l3284 E91A  
                                        l3276 E8CC                                          l3268 E8BC  
                                        l4164 C29A                                          l4156 C25A  
                                        l3524 E2C0                                          l3516 E284  
                                        l3508 E238                                          l3460 E018  
                                        l3452 DFE2                                          l3444 DF96  
                                        l3436 DF62                                          l3428 DF1C  
                                        l3700 BFE8                                          l3196 BE16  
                                        l3540 C588                                          l3532 C56A  
                                        l3604 C548                                          l4500 FBD4  
                                        l4404 F706                                          l4412 F766  
                                        l4332 F37A                                          l4324 F33E  
                                        l4316 F2F4                                          l4340 F396  
                                        l4308 F2DA                                          l4092 DD20  
                                        l4084 DCE8                                          l4076 DCAC  
                                        l4068 DC72                                          l4180 CA7A  
                                        l4172 CA4A                                          l4254 C354  
                                        l4246 C348                                          l4238 C2CC  
                                        l4262 BEAA                                          l4270 BF8A  
                                        l3630 C806                                          l3622 C790  
                                        l3614 C734                                          l3390 EC26  
                                        l3382 EBEE                                          l3374 EB92  
                                        l3366 EB4E                                          l3358 EB18  
                                        l3294 E95E                                          l3286 E92A  
                                        l3278 E8D0                                          l4166 C2AA  
                                        l4158 C262                                          l3518 E2A0  
                                        l3526 E2C6                                          l3470 E076  
                                        l3462 E028                                          l3454 DFEE  
                                        l3446 DFA0                                          l3438 DF72  
                                        l3710 C02E                                          l3702 BFFA  
                                        l3198 BE26                                          l3550 C5BC  
                                        l3542 C596                                          l3534 C56E  
                                        l3606 C558                                          l4510 FC2E  
                                        l4502 FBD8                                          l4430 F83E  
                                        l4422 F7F8                                          l4414 F7D4  
                                        l4406 F71C                                          l4350 F42C  
                                        l4334 F382                                          l4318 F306  
                                        l4326 F344                                          l4342 F3E0  
                                        l4094 DD2E                                          l4086 DCFA  
                                        l4078 DCB8                                          l4190 CB24  
                                        l4174 CA58                                          l4256 C356  
                                        l4248 C34A                                          l4264 BEB6  
                                        l4272 BFBC                                          l4280 BE7C  
                                        l3624 C7A2                                          l3616 C744  
                                        l3392 EC28                                          l3384 EC0E  
                                        l3376 EBCC                                          l3296 E960  
                                        l3288 E940                                          l3640 C834  
                                        l4168 C2B4                                          l3720 D114  
                                        l3528 E2CA                                          l3480 E126  
                                        l3472 E096                                          l3464 E038  
                                        l3456 DFFA                                          l3448 DFBA  
                                        l3712 C036                                          l3704 C002  
                                        l3800 D9A0                                          l3560 C5F6  
                                        l3552 C5C4                                          l3544 C59E  
                                        l3536 C57C                                          l3608 C560  
                                        l4520 FC70                                          l4432 F85C  
                                        l4440 F8FE                                          l4416 F7DE  
                                        l4360 F474                                          l4352 F434  
                                        l4344 F3F2                                          l4336 F38E  
                                        l4328 F362                                          l4088 DD10  
                                        l4096 DD40                                          l4176 CA66  
                                        l4184 CA8E                                          l4600 D5D6  
                                        l4258 C358                                          l4266 BED0  
                                        l4274 BFC8                                          l4282 BE80  
                                        l3626 C7B0                                          l3618 C772  
                                        l3394 EC2E                                          l3386 EC12  
                                        l3378 EBCE                                          l3298 E96A  
                                        l3650 C882                                          l3642 C85E  
                                        l3634 C80A                                          l3730 D18C  
                                        l3722 D15A                                          l3490 E17C  
                                        l3482 E134                                          l3474 E0A6  
                                        l3466 E048                                          l3458 E008  
                                        l3714 C03C                                          l3706 C00A  
                                        l3570 C61C                                          l3562 C5FE  
                                        l3554 C5CC                                          l3546 C5A2  
                                        l3538 C584                                          l3810 E2EC  
                                        l4530 FCCA                                          l4522 FC78  
                                        l4506 FBEE                                          l4450 F95A  
                                        l4442 F916                                          l4434 F866  
                                        l4426 F838                                          l4418 F7E2  
                                        l4370 F4F4                                          l4362 F4A6  
                                        l4354 F442                                          l4346 F400  
                                        l4290 F21C                                          l4098 DD4E  
                                        l4194 C910                                          l4186 CAA4  
                                        l4610 D640                                          l4268 BED4  
                                        l4276 BFD4                                          l4284 BE8E  
                                        l3628 C800                                          l3396 EC3C  
                                        l3388 EC20                                          l3660 C8AE  
                                        l3644 C860                                          l3636 C820  
                                        l3740 D214                                          l3732 D198  
                                        l3724 D170                                          l3716 D0F6  
                                        l3900 CEFA                                          l3492 E18A  
                                        l3484 E152                                          l3476 E0C6  
                                        l3468 E066                                          l3708 C018  
                                        l3804 DA94                                          l3572 C624  
                                        l3564 C600                                          l3556 C5DA  
                                        l3548 C5AA                                          l3580 C4CC  
                                        l3820 E452                                          l3812 E302  
                                        l4532 FD54                                          l4540 FDEC  
                                        l4524 FC9C                                          l4516 FC34  
                                        l4460 F99C                                          l4452 F966  
                                        l4444 F91C                                          l4436 F8C0  
                                        l4380 F588                                          l4372 F504  
                                        l4364 F4B6                                          l4356 F466  
                                        l4348 F408                                          l4292 F226  
                                        l4196 C968                                          l4188 CAB8  
                                        l4620 D750                                          l4612 D674  
                                        l4604 D5F6                                          l4700 D49A  
                                        l4278 BFE0                                          l4550 C0DC  
                                        l3398 EC3E                                          l3670 C8DE  
                                        l3646 C870                                          l3750 D252  
                                        l3742 D220                                          l3734 D1CA  
                                        l3718 D106                                          l3910 CF22  
                                        l3902 CF04                                          l3494 E18E  
                                        l3486 E15C                                          l3478 E0F0  
                                        l3566 C606                                          l3558 C5E0  
                                        l3590 C500                                          l3582 C4D4  
                                        l3830 E554                                          l4534 FDB6  
                                        l4542 FDF2                                          l4526 FCA2  
                                        l4518 FC4C                                          l4470 FAF4  
                                        l4462 F9E8                                          l4454 F96E  
                                        l4446 F924                                          l4438 F8F4  
                                        l4390 F624                                          l4382 F594  
                                        l4374 F50A                                          l4366 F4BC  
                                        l4358 F46C                                          l4294 F22E  
                                        l4286 F1FC                                          l4710 C172  
                                        l4198 CA0A                                          l4622 D762  
                                        l4614 D698                                          l4606 D60C  
                                        l4702 D4BE                                          l4632 BDE6  
                                        l4640 BDCC                                          l4560 C132  
                                        l4552 C0EE                                          l3672 C8EE  
                                        l3656 C89A                                          l3648 C874  
                                        l3752 D276                                          l3744 D22E  
                                        l3736 D1CC                                          l3728 D184  
                                        l3920 CCD8                                          l3912 CF2E  
                                        l3904 CF0E                                          l3496 E19C  
                                        l3488 E16A                                          l3680 C054  
                                        l3568 C60C                                          l3592 C508  
                                        l3584 C4D8                                          l3576 C4BA  
                                        l3824 E506                                          l3808 E2DE  
                                        l4528 FCC0                                          l4480 FB44  
                                        l4472 FAFA                                          l4464 FA42  
                                        l4456 F97E                                          l4448 F93E  
                                        l4392 F642                                          l4384 F5C6  
                                        l4376 F522                                          l4368 F4D8  
                                        l4296 F250                                          l4288 F20A  
                                        l4544 FE0E                                          l4720 C1AA  
                                        l4712 C186                                          l4624 D794  
                                        l4616 D6B4                                          l4608 D61C  
                                        l4704 D4D0                                          l4800 F170  
                                        l4634 BDF2                                          l4554 C0FE  
                                        l4546 C0C0                                          l3674 C8FE  
                                        l3666 C8C2                                          l3658 C8A4  
                                        l3754 D286                                          l3746 D24C  
                                        l3738 D1D8                                          l3930 CD04  
                                        l3914 CCAE                                          l3498 E1CA  
                                        l3690 C08A                                          l3682 C066  
                                        l3850 BEF0                                          l3594 C510  
                                        l3586 C4E6                                          l3578 C4BE  
                                        l3842 E758                                          l3818 E43E  
                                        l4538 FDD4                                          l4482 FB56  
                                        l4474 FB02                                          l4466 FA76  
                                        l4458 F984                                          l4394 F674  
                                        l4378 F556                                          l4386 F5CC  
                                        l4298 F256                                          l4714 C192  
                                        l3770 C688                                          l3762 C62E  
                                        l4618 D700                                          l4570 CF80  
                                        l4810 F1B6                                          l4802 F174  
                                        l4730 EC50                                          l4636 BDF6  
                                        l4556 C110                                          l4548 C0C8  
                                        l3668 C8CE                                          l3756 D294  
                                        l3748 D24E                                          l3940 CD34  
                                        l3932 CD16                                          l3916 CCC4  
                                        l3860 CE1E                                          l3692 C0A0  
                                        l3684 C06E                                          l3852 BF00  
                                        l3596 C51E                                          l3588 C4EE  
                                        l3836 E690                                          l3828 E540  
                                        l4492 FB8E                                          l4484 FB6C  
                                        l4468 FADC                                          l4396 F69E  
                                        l4388 F5EA                                          l4476 FB18  
                                        l4716 C196                                          l4708 C13C  
                                        l3772 C6D6                                          l3764 C660  
                                        l4628 D7AA                                          l4580 D04E  
                                        l4572 CFB2                                          l4564 CF50  
                                        l4740 EC66                                          l4732 EC54  
                                        l3782 BDAA                                          l4638 BDC8  
                                        l4558 C122                                          l3758 D296  
                                        l3950 CD78                                          l3942 CD3E  
                                        l3934 CD26                                          l3926 CCF2  
                                        l3870 CE5A                                          l3694 C0A8  
                                        l3686 C076                                          l3678 C04C  
                                        l3790 D7FA                                          l3854 BF04  
                                        l3846 BEDC                                          l3598 C534  
                                        l3838 E6A4                                          l4486 FB74  
                                        l4478 FB3C                                          l4398 F6BC  
                                        l4718 C1A6                                          l3774 C6EA  
                                        l3766 C674                                          l4582 D082  
                                        l4566 CF60                                          l4670 D2AE  
                                        l4806 F1A2                                          l4750 EC96  
                                        l4742 EC70                                          l4734 EC54  
                                        l3784 BDB4                                          l3960 CDA4  
                                        l3952 CD7E                                          l3944 CD5C  
                                        l3936 CD2A                                          l3928 CCF4  
                                        l3880 CE8A                                          l3872 CE5C  
                                        l3864 CE32                                          l3696 C0AA  
                                        l3688 C084                                          l3792 D80C  
                                        l3848 BEE0                                          l4496 FBCE  
                                        l4488 FB78                                          l3776 C6F2  
                                        l4592 D552                                          l4576 CFD2  
                                        l4680 D364                                          l4672 D2E0  
                                        l4808 F1B2                                          l4816 F1E0  
                                        l4760 EDEA                                          l4752 ECB8  
                                        l4744 EC78                                          l4736 EC54  
                                        l3786 BDA0                                          l3970 CDCC  
                                        l3962 CDAE                                          l3954 CD8C  
                                        l3946 CD6C                                          l3938 CD30  
                                        l3890 CECE                                          l3882 CE90  
                                        l3874 CE6A                                          l3858 CDFA  
                                        l3698 C0B0                                          l4666 C1C0  
                                        l3778 C6F4                                          l4594 D584  
                                        l4586 D50A                                          l4578 D046  
                                        l4674 D312                                          l4770 EF70  
                                        l4762 EE54                                          l4754 ED28  
                                        l4746 EC7C                                          l4738 EC58  
                                        l3980 C36C                                          l3972 CDD8  
                                        l3964 CDB8                                          l3948 CD6E  
                                        l3892 CED4                                          l3884 CE9E  
                                        l3876 CE76                                          l3788 BDC0  
                                        l4588 D53C                                          l4692 D416  
                                        l4684 D37A                                          l4668 D2A8  
                                        l4780 F0BE                                          l4772 EFC8  
                                        l4764 EEAE                                          l4756 ED4A  
                                        l4748 EC8A                                          ?_exp 0086  
                                        ?_log 0075                                          l3990 C3B4  
                                        l3982 C37C                                          l3974 BE52  
                                        l3894 CEE2                                          l3886 CEB8  
                                        l3878 CE86                                          l3798 D990  
                                        l4598 D5A4                                          l4694 D41E  
                                        l4686 D38A                                          l4678 D332  
                                        l4790 F118                                          l4782 F0D4  
                                        l4774 F022                                          l4766 EED0  
                                        l4758 EDB4                                          l3992 C3BE  
                                        l3984 C392                                          l3976 BE72  
                                        l3888 CEC4                                          l4688 D3F6  
                                        l4696 D442                                          l4792 F128  
                                        l4784 F0E4                                          l4776 F07C  
                                        l4768 EF3A                                          l3994 C3DC  
                                        l3986 C39A                                          l4698 D466  
                                        l4794 F12C                                          l4786 F0E8  
                                        l4778 F0BA                                          l3996 C3EC  
                                        l3988 C3A6                                          l3998 C3EE  
                                        l4798 F160                                          ?_pow 0091  
                                        STR_1 FFB8                                          STR_2 FF39  
                                        STR_3 FF7E                                          STR_4 FFCF  
                                        STR_5 FFF2                                          STR_6 FFF2  
                                        STR_7 FFF4                                          STR_8 FFE1  
                                        u3000 EBEE                                          u3001 EBEA  
                                        u3010 EC0E                                          u3011 EC0A  
                                        u3020 EC20                                          u3100 DF62  
                                        u3021 EC1C                                          u3101 DF5E  
                                        _LATA 003FBA                                          u3030 EC3C  
                                        u3110 DF72                                          _LATB 003FBB  
                                        u3031 EC38                                          u3111 DF6E  
                                        _LATC 003FBC                                          u3200 E256  
                                        u3120 E110                                          u3040 DEA8  
                                        u4000 DC14                                          _LATD 003FBD  
                                        u3201 E252                                          u3041 DEA4  
                                        u4001 DC10                                          _LATE 003FBE  
                                        u3210 E284                                          u3130 E16A  
                                        u3050 DEBA                                          u4010 DC8A  
                                        u3211 E280                                          u3131 E166  
                                        u3051 DEB6                                          u4011 DC86  
                                        u3220 E2BE                                          u3140 E18A  
                                        u3060 DECA                                          u3300 C4E6  
                                        u4100 DDA4                                          u4020 DCAC  
                                        u3221 E2BA                                          u3141 E186  
                                        u3125 E106                                          u3061 DEC6  
                                        u3301 C4E2                                          u4101 DDA0  
                                        u4021 DCA8                                          u3150 E19C  
                                        u3070 DF0A                                          u3230 C57C  
                                        u3310 C500                                          u4110 DDB8  
                                        u4030 DCD6                                          u3151 E198  
                                        u3071 DF06                                          u3231 C578  
                                        u3311 C4FC                                          u4111 DDB4  
                                        u4031 DCD2                                          u3400 C820  
                                        u3160 E1CA                                          u3080 DF1C  
                                        u3240 C596                                          u3320 C51E  
                                        u4120 DDD2                                          u4040 DCFA  
                                        u4200 CA58                                          u5000 F0FC  
                                        u3401 C81C                                          u3161 E1C6  
                                        u3081 DF18                                          u3241 C592  
                                        u3321 C51A                                          u4121 DDCE  
                                        u4041 DCF6                                          u4201 CA54  
                                        u5001 F0F8                                          u2610 C43E  
                                        u3410 C854                                          u3170 E1E0  
                                        u3090 DF2C                                          u3250 C5BC  
                                        u3330 C534                                          u4130 DE1A  
                                        u4050 DD10                                          u4210 CA66  
                                        u5010 F110                                          u2611 C43A  
                                        u3171 E1DC                                          u3091 DF28  
                                        u3251 C5B8                                          u3331 C530  
                                        u4131 DE16                                          u4051 DD0C  
                                        u4211 CA62                                          u5011 F10C  
                                        u4300 BEA8                                          u2620 C47C  
                                        u2700 E836                                          u3420 C882  
                                        u3180 E1F4                                          u3500 BFFA  
                                        u3260 C5DA                                          u3340 C558  
                                        u4140 DE4A                                          u4060 DD2E  
                                        u4220 CAA4                                          u5020 F140  
                                        u4301 BEA4                                          u2621 C478  
                                        u2701 E832                                          u3421 C87E  
                                        u3181 E1F0                                          u3501 BFF6  
                                        u3261 C5D6                                          u3341 C554  
                                        u4141 DE46                                          u4061 DD2A  
                                        u4221 CAA0                                          u5021 F13C  
                                        u2630 C4B0                                          u3350 C734  
                                        u2710 E846                                          u3430 C896  
                                        u3190 E20E                                          u3510 C018  
                                        u3270 C5F6                                          u4310 F21C  
                                        u4150 DE78                                          u4070 DD4E  
                                        u4230 CB24                                          u5030 F154  
                                        u2631 C4AC                                          u3351 C730  
                                        u2711 E842                                          u3431 C892  
                                        u3415 C84A                                          u3191 E20A  
                                        u3511 C014                                          u3271 C5F2  
                                        u4311 F218                                          u4151 DE74  
                                        u4071 DD4A                                          u4231 CB20  
                                        u5031 F150                                          u3360 C772  
                                        u4160 BF22                                          u2800 E98C  
                                        u2720 E882                                          u3440 C8BE  
                                        u3600 D24C                                          u3520 C02E  
                                        u2640 BE26                                          u3280 C61C  
                                        u4400 F4A6                                          u4320 F250  
                                        u4080 DD60                                          u4240 CA1C  
                                        u5040 F186                                          u3361 C76E  
                                        u4161 BF1E                                          u2801 E988  
                                        u2721 E87E                                          u3441 C8BA  
                                        u3601 D248                                          u3521 C02A  
                                        u2641 BE22                                          u3281 C618  
                                        u4401 F4A2                                          u4321 F24C  
                                        u4081 DD5C                                          u4241 CA18  
                                        u5041 F182                                          u3370 C790  
                                        u2810 E99C                                          u2730 E890  
                                        u2650 E7AA                                          u3450 C8DE  
                                        u4170 C25A                                          u3610 D286  
                                        u3530 D106                                          u3290 C4CC  
                                        u4410 F504                                          u4330 F2D6  
                                        u4090 DD8E                                          u4250 CBA0  
                                        u5050 F19A                                          u3371 C78C  
                                        u2811 E998                                          u2731 E88C  
                                        u2651 E7A6                                          u3451 C8DA  
                                        u4171 C256                                          u3611 D282  
                                        u3531 D102                                          u3291 C4C8  
                                        u4411 F500                                          u4331 F2D2  
                                        u4091 DD8A                                          u4251 CB9C  
                                        u5051 F196                                  printf@tmpval 00CD  
                                        u3380 C7B0                                          u2900 EAFA  
                                        u2820 E9CE                                          u2740 E8FE  
                                        u2660 E7BC                                          u3460 C8EE  
                                        u4180 C27C                                          u3620 D294  
                                        u3540 D114                                          u3700 E554  
                                        u4500 F7F4                                          u4420 F588  
                                        u4340 F306                                          u4260 CBE0  
                                        u5060 F1C8                                          u3381 C7AC  
                                        u2901 EAF6                                          u2821 E9CA  
                                        u2741 E8FA                                          u2661 E7B8  
                                        u3461 C8EA                                          u4181 C278  
                                        u3621 D290                                          u3541 D110  
                                        u3701 E550                                          u4501 F7F0  
                                        u4421 F584                                          u4341 F302  
                                        u4261 CBD8                                          u5061 F1C4  
                                        u3390 C800                                          u2910 EB16  
                                        u2830 E9DC                                          u2750 E916  
                                        u2670 E7CC                                          u4190 C29A  
                                        u3550 D170                                          u3470 C066  
                                        u3710 E6A4                                          u4510 F834  
                                        u4430 F5C6                                          u4350 F320  
                                        u3630 C660                                          u4270 CBFA  
                                        u5070 F1DC                                          u3391 C7FC  
                                        u2911 EB12                                          u2831 E9D8  
                                        u2751 E910                                          u2671 E7C8  
                                        u4191 C296                                          u3551 D16C  
                                        u3471 C062                                          u3711 E6A0  
                                        u4511 F830                                          u4431 F5C2  
                                        u4351 F31C                                          u3631 C65C  
                                        u4271 CBF6                                          u5071 F1D8  
                                        u2920 EB26                                          u2840 E9FA  
                                        u2760 E918                                          u2680 E80E  
                                        u3560 D1C6                                          u3800 CEF6  
                                        u3480 C084                                          u3720 BEF0  
                                        u4600 FB6C                                          u4520 F85C  
                                        u4440 F5EA                                          u4360 F35E  
                                        u3640 C6C0                                          u4280 CC30  
                                        u2921 EB22                                          u2841 E9F6  
                                        u2681 E80A                                          u3561 D1C2  
                                        u3801 CEF2                                          u3481 C080  
                                        u3721 BEEC                                          u4601 FB68  
                                        u4521 F858                                          u4441 F5E6  
                                        u4361 F35A                                          u3641 C6B8  
                                        u4281 CC2C                                          u2930 EB38  
                                        u2850 EA32                                          u2770 E940  
                                        u2690 E824                                          u3570 D210  
                                        u3810 CF1E                                          u3490 C0A0  
                                        u3650 D80C                                          u3730 BF00  
                                        u4610 FB8A                                          u4530 F912  
                                        u4450 F642                                          u4370 F3F2  
                                        u4290 CC4A                                          u2931 EB34  
                                        u2851 EA2E                                          u2771 E93C  
                                        u2691 E820                                          u3571 D20C  
                                        u3811 CF1A                                          u3491 C09C  
                                        u3651 D808                                          u3731 BEFC  
                                        u4611 FB86                                          u4531 F90E  
                                        u4451 F63E                                          u4371 F3EE  
                                        u4291 CC46                                          u4700 C0DC  
                                        u2940 EB4E                                          u2860 EA78  
                                        u2780 E95E                                          u3900 C392  
                                        u3580 D22E                                          u3820 CF3E  
                                        u3660 D9A0                                          u4620 FBCA  
                                        u4540 F93E                                          u4460 F674  
                                        u4380 F400                                          u4268 CBE4  
                                        _PMD0 0039C0                                          u4701 C0D8  
                                        u2941 EB4A                                          u2861 EA74  
                                        u2781 E95A                                          u3901 C38E  
                                        u3581 D22A                                          u3821 CF3A  
                                        u3741 CE0A                                          u3661 D99C  
                                        u4621 FBC6                                          u4541 F93A  
                                        u4461 F670                                          u4381 F3FC  
                                        _PMD1 0039C1                                          u4710 C0EE  
                                        u2950 EB64                                          u2870 EAAE  
                                        u2790 E97E                                          u3910 C3B4  
                                        u3590 D23E                                          u3830 CCC4  
                                        u3750 CE1E                                          u3670 E2EC  
                                        u4630 FBEA                                          u4550 F95A  
                                        u4470 F69E                                          u4390 F442  
                                        _PMD2 0039C2                                          u5167 BE86  
                                        u4711 C0EA                                          u2951 EB60  
                                        u2871 EAAA                                          u2791 E97A  
                                        u3911 C3B0                                          u3591 D23A  
                                        u3831 CCC0                                          u3751 CE1A  
                                        u3671 E2E8                                          u4631 FBE6  
                                        u4551 F956                                          u4471 F69A  
                                        u4391 F43E                                          _PMD3 0039C3  
                                        u4720 C110                                          u2960 EB78  
                                        u2880 EABE                                          u3920 C3DC  
                                        u3840 CCEE                                          u3680 E302  
                                        u4640 FC2A                                          u4560 F97E  
                                        u4480 F6BC                                          u3648 C6C2  
                                        u4800 D60A                                          _PMD4 0039C4  
                                        u4721 C10C                                          u2961 EB74  
                                        u2881 EABA                                          u3921 C3D8  
                                        u3841 CCEA                                          u3761 CE42  
                                        u3681 E2FE                                          u4641 FC26  
                                        u4561 F97A                                          u4481 F6B8  
                                        _PMD5 0039C5                                          u4730 C122  
                                        u2970 EB92                                          u2890 EAEA  
                                        u3850 CD5C                                          u3770 CE56  
                                        u3690 E452                                          u4650 FC70  
                                        u4570 FAF0                                          u4490 F6EE  
                                        u3930 DB0C                                          u4810 D61C  
                                        _PMD6 0039C6                                          u4731 C11E  
                                        u2971 EB8E                                          u2891 EAE6  
                                        u3851 CD58                                          u3771 CE52  
                                        u3691 E44E                                          u4651 FC6C  
                                        u4571 FAEC                                          u4491 F6EA  
                                        u3931 DB08                                          u4811 D618  
                                        _PMD7 0039C7                                          u2980 EBCC  
                                        u3860 CD8C                                          u3780 CEB8  
                                        u4660 FC9C                                          u4580 FB14  
                                        u3940 DB1E                                          u4820 D762  
                                        u4740 CF60                                          u2981 EBC8  
                                        u3861 CD88                                          u3781 CEB4  
                                        u4661 FC98                                          u4581 FB10  
                                        u3941 DB1A                                          u4821 D75E  
                                        u4741 CF5C                                          u2990 EBDE  
                                        u3870 CDA0                                          u3790 CEE2  
                                        u4670 FCC0                                          u4590 FB56  
                                        u3950 DB2E                                          u4830 D794  
                                        u4750 CFB2                                          u4910 D2E0  
                                        u2991 EBDA                                          u3871 CD9C  
                                        u3791 CEDE                                          u4671 FCBC  
                                        u4591 FB52                                          u3951 DB2A  
                                        u4831 D790                                          u4751 CFAE  
                                        u4911 D2DC                                          u3880 CDC8  
                                        u4680 FE0E                                          u3960 DB72  
                                        u4760 D53C                                          u4920 D312  
                                        u3881 CDC4                                          u4681 FE0A  
                                        u3961 DB6E                                          u4761 D538  
                                        u4921 D30E                                          u3890 CDE8  
                                        u4690 FE3A                                          u3970 DB84  
                                        u4770 D584                                          u4930 D364  
                                        u3891 CDE4                                          u4691 FE36  
                                        u3971 DB80                                          u4771 D580  
                                        u4931 D360                                          u3980 DB94  
                                        u4780 D5D6                                          u4940 D38A  
                                        u3981 DB90                                          u4781 D5D2  
                                        u4941 D386                                          u3990 DBD4  
                                        u4790 D608                                          u4950 D3F6  
                                        u3991 DBD0                                          u4791 D602  
                                        u4951 D3F2                                          u4960 D4D0  
                                        u4961 D4CC                                          u4970 C150  
                                        u4971 C146                                          u4980 C186  
                                        u4981 C182                                          u4990 C1A6  
                                        u4991 C1A2                                          u4978 C154  
                                        _WPUA 003A41                                          _WPUB 003A51  
                                        _WPUC 003A61                                          _WPUD 003A71  
                                        _WPUE 003A81                                          _main EC50  
                                        fsr2h 003FDA                                          indf2 003FDF  
                                        fsr2l 003FD9                                          exp@x 0086  
                                        log@x 0075                                          pow@x 0091  
                                        pow@y 0095                                          prodh 003FF4  
                                        prodl 003FF3                                          start FFFC  
                             ___fldiv@new_exp 007E                                  ___param_bank 000000  
                                       ??_exp 005F                                         ??_log 005F  
                                       ??_pow 005F                       __end_of_TMR0_Initialize BEDA  
              __size_of_OSCILLATOR_Initialize 0018                 __end_of_OSCILLATOR_Initialize BE14  
                               ___fltol@sign1 0017                               __end_of___fladd EC50  
                                       ?_main 0001                               __end_of___fldiv DE8C  
                             __end_of___awdiv C62E                               __end_of___flneg BF44  
                             __end_of___awmod C56A                               __end_of___flmul E2DC  
                             __end_of___flsub BF8A                               __end_of___fltol C910  
                             __end_of___lldiv C410                               ___awdiv@divisor 0009  
                             __end_of___llmod C2CC                                         _U2P1L 003DD4  
                                       _U2P2L 003DD6                                         _U2P3L 003DD8  
                             __end_of___lwdiv C0C0                                         _U2UIR 003DE0  
                             __end_of___lwmod C04C                                         _U2RXB 003DD0  
                                       _U2TXB 003DD2                               _TMR0_WriteTimer BDC8  
                             ___awdiv@counter 000B                                         _OSCEN 0039DD  
                                       _TMR0H 003FB7                                         _TMR0L 003FB6  
                                       _TRISA 003FC2                                         _TRISB 003FC3  
                                       _TRISC 003FC4                                         _TRISD 003FC5  
                                       _TRISE 003FC6                               __end_of_dpowers FF15  
                                       _floor CA2E                                         _ldexp CB6E  
                                       _frexp C62E                                         _errno 0108  
                                       _scale E2DC                               __end_of_isdigit BF0C  
                                       _putch BDBE                                         main@f 00DA  
                                       main@k 00EE                                         main@m 00FE  
                                       main@n 00FC                                         tablat 003FF5  
                                       pow@yi 00A2                                         status 003FD8  
                                 exp@exponent 008E                                   ldexp@newexp 0079  
              ??_UART2_SetOverrunErrorHandler 0003                               __initialization BDD4  
                                 log@exponent 0079                                  __end_of_main F1FC  
                                ?_UART2_Write 0001                                        ??_main 00D9  
                               __activetblptr 000003                          __size_of__tdiv_to_l_ 0156  
                                      ?_floor 004B                                        ?_ldexp 0075  
                                      ?_frexp 0033                              ___llmod@dividend 000E  
                                      ?_scale 0057                              ___awdiv@dividend 0007  
                                      _ANSELA 003A40                                        ?_putch 0001  
                                      _ANSELB 003A50                                        _ANSELC 003A60  
                                      _ANSELD 003A70                                        _ANSELE 003A80  
                                      _T0CON0 003FB8                                        _T0CON1 003FB9  
                                      _RB1I2C 003A5A                                        _RB2I2C 003A5B  
                                      _RD0I2C 003A7A                                        _RC3I2C 003A6A  
                                      _RD1I2C 003A7B                                        _RC4I2C 003A6B  
                                      _U2CON0 003DDA                                        _U2CON1 003DDB  
                                      _U2CON2 003DDC                                        _U2BRGH 003DDE  
                                      _U2FIFO 003DDF                                        _U2BRGL 003DDD  
                                      _RC0PPS 003A10                                        _RB6PPS 003A0E  
                                      _ODCONA 003A42                                        _ODCONB 003A52  
                                      _ODCONC 003A62                                        _ODCOND 003A72  
                                      _ODCONE 003A82                                        _INLVLA 003A44  
                                      _INLVLB 003A54                                        _INLVLC 003A64  
                                      _INLVLD 003A74                                        _INLVLE 003A84  
                                      _OSCFRQ 0039DF                                        _TMR0IF 01CD1F  
                            __end_of___xxtofl D2A8                              _UART2_Initialize BF8A  
                            __end_of__powers_ FE71                     _UART2_OverrunErrorHandler 0102  
                                      ___flge C706                                        ___fleq C410  
                                   ??___fladd 0043                                        ___wmul BE52  
                                   ??___fldiv 0075                                     ??___awdiv 000B  
                                   ??___flneg 0005                                     ??___awmod 0005  
                                   ??___flmul 0053                                     ??___flsub 005F  
                                   ??___fltol 0013                       __end_of_TMR0_WriteTimer BDD4  
                                   ??___lldiv 0009                                     ??___llmod 0016  
                                   ??___lwdiv 000A                                     ??___lwmod 0005  
                            ?_TMR0_Initialize 0001                                        _fround D7F6  
                                      clear_0 BDDA                              ___awdiv@quotient 000D  
                             ___awmod@divisor 0003                               ___awmod@counter 0005  
                                      _printf F1FC                                        floor@i 004F  
                                      floor@x 004B                                _PMD_Initialize BE2E  
                                   ??_isdigit 0001                                  __mediumconst FE3C  
                                      tblptrh 003FF7                                        tblptrl 003FF6  
                                      tblptru 003FF8                                    ___flge@ff1 0001  
                                  ___flge@ff2 0005                                  ___xxtofl@arg 0023  
                            __end_ofexp@coeff FEED                                  ___xxtofl@exp 0022  
                           _SYSTEM_Initialize BDE6                                  ___xxtofl@val 0019  
                                  ___fleq@ff1 0027                                    ___fleq@ff2 002B  
                            __end_oflog@coeff FF39                                    __accesstop 0060  
                     __end_of__initialization BDE0                                    ___flneg@f1 0001  
                          ?_SYSTEM_Initialize 0001                                  eval_poly@res 0071  
                               ___rparam_used 000001                                    ___fltol@f1 000F  
                              __pcstackCOMRAM 0001                         _UART2_SetErrorHandler BDA0  
                         ??_SYSTEM_Initialize 0003                                 __end_of_floor CB6E  
                               __end_of_ldexp CCAE                                 __end_of_frexp C706  
                               __end_of_scale E790                                 __end_of_putch BDC8  
                      __end_of_PMD_Initialize BE52                      ??_poll_switch1_for_edges 0003  
                                  __div_to_l_ CCAE                               __div_to_l_@exp1 000E  
                                     ??_floor 004F                                       ??_ldexp 007B  
                             __div_to_l_@cntr 000D                                       ??_frexp 0039  
                                     ??_scale 005B                     __end_of_SYSTEM_Initialize BDFC  
                             __div_to_l_@quot 0009                                       ??_putch 0002  
                                  __pbssBANK1 0108                            __size_of_eval_poly 011E  
                          _DELAY_milliseconds BE7C                                 __div_to_l_@f1 0001  
                               __div_to_l_@f2 0005                                    _clearPuTTY C1C0  
                         ?_DELAY_milliseconds 0001                                       ?___flge 0001  
                                     ?___fleq 0027                                       ?___wmul 0001  
        __end_of_UART2_SetFramingErrorHandler BDB4         __size_of_UART2_SetFramingErrorHandler 000A  
                _UART2_SetFramingErrorHandler BDAA                              ?_TMR0_WriteTimer 0001  
                                     ?_fround 0057                                       ?_printf 00A6  
                             ?_PMD_Initialize 0001                                       _U2ERRIE 003DE2  
                                     _U2ERRIR 003DE1                          __size_of_UART2_Write 001A  
                                   ?___xxtofl 0019                                       _U2RXPPS 003AE8  
                        ??_DELAY_milliseconds 0003                                       _OSCCON1 0039D9  
                                     _OSCCON3 0039DB                                       _OSCTUNE 0039DE  
                                     _SLRCONA 003A43                                       _SLRCONB 003A53  
                                     _SLRCONC 003A63                                       _SLRCOND 003A73  
                                     _SLRCONE 003A83                             __end_of__npowers_ FEA5  
                                     __Hparam 0000                                    _scale$1579 005B  
                      ?_UART2_SetErrorHandler 0001                                       __Lparam 0000  
                             __size_of___flge 0104                               __size_of___fleq 00AA  
                                     ___fladd E790                                       ___fldiv DAF0  
                                     ___awdiv C56A                                       ___flneg BF0C  
                                     ___awmod C4BA                                       ___flmul DE8C  
                                     ___flsub BF44                                       ___fltol C80A  
                                     ___lldiv C36C                               __size_of___wmul 002A  
                                     ___llmod C244                                       ___lwdiv C04C  
                                     ___lwmod BFE8                 ?_UART2_SetFramingErrorHandler 0001  
                                     __pcinit BDD4                             __end_of_eval_poly CA2E  
                             __size_of_fround 02FA                                       __ramtop 1000  
                                     __ptext0 EC50                                       __ptext1 D2A8  
                                     __ptext2 CF50                                       __ptext3 D50A  
                                     __ptext4 CB6E                                       __ptext5 CA2E  
                                     __ptext6 C62E                                       __ptext7 C910  
                                     __ptext8 DAF0                                       __ptext9 C1C0  
                             __size_of_printf 0C40                       __size_of_buttonResponse 0084  
             __size_of_poll_switch1_for_edges 007C                             __end_of_hexpowers FEC5  
                                 ?__div_to_l_ 0001              _UART2_DefaultOverrunErrorHandler 000000  
                                     _dpowers FEED                         _OSCILLATOR_Initialize BDFC  
                                __size_of_exp 02EC                                  __size_of_log 01A4  
                                     _isdigit BEDA                                  __size_of_pow 0262  
                                  ??___xxtofl 001D                              ___awmod@dividend 0001  
                    ??_PIN_MANAGER_Initialize 0001                      __end_of_UART2_Initialize BFE8  
                  __size_of_SYSTEM_Initialize 0016                          end_of_initialization BDE0  
                                     exp@sign 0090                                   ?_clearPuTTY 0001  
                             ___lldiv@divisor 0005                                       pow@sign 00A1  
                             ___lldiv@counter 000D                                       printf@c 00D7  
                                     printf@f 00A6                                       postdec2 003FDD  
                                     postinc0 003FEE                                       postinc2 003FDE  
                              __tdiv_to_l_@f1 0001                                __tdiv_to_l_@f2 0005  
                               ??__tdiv_to_l_ 0009                                     _PORTDbits 003FCD  
                                 ___fladd@grs 004A                                 ___xxtofl@sign 0021  
                                 ___fldiv@grs 0080                                   ___fldiv@rem 0079  
                                 ___flmul@grs 0061                        _poll_switch1_for_edges C0C0  
                         __size_of__div_to_l_ 014C                          _timer0ReloadVal16bit 0106  
                              __end_of___flge C80A                                __end_of___fleq C4BA  
                              __end_of___wmul BE7C                        ?_OSCILLATOR_Initialize 0001  
                              __end_of_fround DAF0                                    floor@expon 0053  
                              __end_of_printf FE3C                ??_UART2_SetFramingErrorHandler 0003  
                         start_initialization BDD4                                    eval_poly@d 005B  
                                  eval_poly@n 005D                                    eval_poly@x 0057  
                         __size_of_clearPuTTY 0084                      __size_of_TMR0_Initialize 0030  
                                  ldexp@value 0075               __size_of_PIN_MANAGER_Initialize 00A0  
                         __end_of__tdiv_to_l_ CF50                                   __end_of_exp D7F6  
                                 __end_of_log D0F4                                   __end_of_pow D50A  
                   _UART2_DefaultErrorHandler 000000                                   putch@txData 0002  
                                  frexp@value 0033                               ___llmod@divisor 0012  
                             ___llmod@counter 0016     poll_switch1_for_edges@has_switch1_changed 0003  
                                    ??___flge 0009                                      ??___fleq 002F  
                            ??_PMD_Initialize 0001                                      ??___wmul 0005  
                                    ??_fround 005B                             UART2_Write@txData 0001  
                                    ??_printf 00B6                                _buttonResponse C13C  
                                   ___fladd@a 003F                                     ___fladd@b 003B  
                                  fround@prec 0075                                     ___fldiv@a 0071  
                                   ___fldiv@b 006D                                     ___flmul@a 004F  
                                   ___flmul@b 004B                                     ___flsub@a 005B  
                                   ___flsub@b 0057                     _UART2_FramingErrorHandler 0104  
                               __pcstackBANK0 0060                             __size_of___xxtofl 01B4  
                                _isdigit$1245 0002                       ??_UART2_SetErrorHandler 0003  
                                   __pnvBANK1 0100                                     _main$1572 00F8  
                                   _main$1573 00DE                                     _main$1574 00F0  
                                   _main$1575 00F4                                     _main$1576 00E2  
                            ___lwdiv@dividend 0006                        _PIN_MANAGER_Initialize C2CC  
                               __pmediumconst FE3C                                      ?___fladd 003B  
                                    ?___fldiv 006D                                      ?___awdiv 0007  
                                   _blinkrate 010E                                      ?___flneg 0001  
                                    ?___awmod 0001                                      ?___flmul 004B  
                                    ?___flsub 0057                                      ?___fltol 000F  
                                    ?___lldiv 0001                                      ?___llmod 000E  
                                   __npowers_ FE71                                      ?___lwdiv 0006  
                                    ?___lwmod 0001                        __end_of_buttonResponse C1C0  
                               ??_UART2_Write 0001                                   __tdiv_to_l_ CDFA  
                                ??__div_to_l_ 0009                                      ?_isdigit 0001  
                                   _eval_poly C910                      __size_of_TMR0_WriteTimer 000C  
                 __size_of_DELAY_milliseconds 002E                             ?_UART2_Initialize 0001  
                                   _hexpowers FEA5                              ___lwdiv@quotient 000A  
                              __size_of_floor 0140                                __size_of_ldexp 0140  
                              __size_of_frexp 00D8                                __size_of_scale 04B4  
                          ??_UART2_Initialize 0003                                __size_of_putch 000A  
                            _uart2RxLastError 010F                             ??_TMR0_Initialize 0001  
                                 _U2ERRIRbits 003DE1                                ___wmul@product 0005  
       UART2_SetErrorHandler@interruptHandler 0001                                      _LATCbits 003FBC  
                                    _LATDbits 003FBD                            _last_switch1_value 010A  
                                ??_clearPuTTY 0060                            __end_of__div_to_l_ CDFA  
                                    _PIR3bits 0039A3                           _has_switch1_changed 010C  
                                    _PIR6bits 0039A6                DELAY_milliseconds@milliseconds 0001  
                             ?_buttonResponse 0001                             ___wmul@multiplier 0001  
                                   main@T_off 00EA                                    printf@flag 00C5  
                                  printf@eexp 00C7                                    printf@fval 00D1  
                                  printf@prec 00D5                                    ?_eval_poly 0057  
                          _UART2_ErrorHandler 0100                           __end_of_UART2_Write BE2E  
                          __end_of_clearPuTTY C244                       ?_poll_switch1_for_edges 0001  
                                   frexp@eptr 0037                                      __Hrparam 0000  
                                    __Lrparam 0000                       ??_OSCILLATOR_Initialize 0001  
                            __size_of___fladd 04C0                              __size_of___fldiv 039C  
                            __size_of___awdiv 00C4                              __size_of___flneg 0038  
                            __size_of___awmod 00B0                              __size_of___flmul 0450  
                            __size_of___flsub 0046                              __size_of___fltol 0106  
                            __size_of___lldiv 00A4                              __size_of___llmod 0088  
                            __size_of___lwdiv 0074                              __size_of___lwmod 0064  
                                 _fround$1577 0071                                   _fround$1578 006D  
                                    _exp$1583 008A                                      ___xxtofl D0F4  
                                  _T0CON0bits 003FB8                                    _T0CON1bits 003FB9  
                            __size_of_isdigit 0032                               ___lwdiv@divisor 0008  
              __end_of_poll_switch1_for_edges C13C                               ___lwdiv@counter 000C  
                                    __ptext10 C13C                                      __ptext11 F1FC  
                                    __ptext20 C04C                                      __ptext12 E2DC  
                                    __ptext21 DE8C                                      __ptext13 C4BA  
                                    __ptext30 E790                                      __ptext22 CDFA  
                                    __ptext14 C56A                                      __ptext31 BF0C  
                                    __ptext23 CCAE                                      __ptext15 BDBE  
                                    __ptext40 BDAA                                      __ptext32 C706  
                                    __ptext24 D0F4                                      __ptext16 BE14  
                                    __ptext41 BDA0                                      __ptext33 C410  
                                    __ptext25 BE52                                      __ptext17 BEDA  
                                    __ptext42 BEAA                                      __ptext34 C0C0  
                                    __ptext26 C244                                      __ptext18 D7F6  
                                    __ptext43 BE2E                                      __ptext35 BE7C  
                                    __ptext27 C36C                                      __ptext19 BFE8  
                                    __ptext44 C2CC                                      __ptext36 BDC8  
                                    __ptext28 C80A                                      __ptext45 BDFC  
                                    __ptext37 BDE6                                      __ptext29 BF44  
                                    __ptext38 BF8A                                      __ptext39 BDB4  
                                    __powers_ FE3D                                      _pow$1581 0099  
                                    _pow$1582 009D                       TMR0_WriteTimer@timerVal 0001  
                                  _U2CON0bits 003DDA                             ??_TMR0_WriteTimer 0003  
                               __size_of_main 05AC              _UART2_DefaultFramingErrorHandler 000000  
UART2_SetOverrunErrorHandler@interruptHandler 0001                                      main@T_on 00E6  
                                   printf@idx 00C0                                     printf@len 00C1  
                                   printf@val 00C9                                   _UART2_Write BE14  
                                    exp@coeff FEC5                                      log@coeff FF15  
                                 ??_eval_poly 006D                                      isdigit@c 0003  
                                    scale@scl 005F          __end_of_UART2_SetOverrunErrorHandler BDBE  
       __size_of_UART2_SetOverrunErrorHandler 000A                  _UART2_SetOverrunErrorHandler BDB4  
                            __tdiv_to_l_@exp1 0011                              __tdiv_to_l_@cntr 0010  
                            __tdiv_to_l_@quot 000C                              ___lwmod@dividend 0001  
                            ___lldiv@dividend 0001                       ?_PIN_MANAGER_Initialize 0001  
              __size_of_UART2_SetErrorHandler 000A                 __end_of_UART2_SetErrorHandler BDAA  
                                    printf@ap 00C3                                      printf@cp 00BE  
UART2_SetFramingErrorHandler@interruptHandler 0001                                  ?__tdiv_to_l_ 0001  
                                 _printf$1580 00BA                              ___lldiv@quotient 0009  
                             ___lwmod@divisor 0003                               _TMR0_Initialize BEAA  
                             ___lwmod@counter 0005                                 ___fladd@signs 0047  
              __end_of_PIN_MANAGER_Initialize C36C         poll_switch1_for_edges@digitalinputpin 0001  
               ?_UART2_SetOverrunErrorHandler 0001                                  ___fladd@aexp 0048  
                                ___fladd@bexp 0049                              ??_buttonResponse 00D8  
                   __size_of_UART2_Initialize 005E  
