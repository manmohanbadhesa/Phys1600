

Microchip MPLAB XC8 Assembler V2.30 build 20200825195618 
                                                                                               Sat Nov 14 00:44:30 2020

Microchip MPLAB XC8 C Compiler v2.30 (Free license) build 20200825195618 Og1 
     1                           	processor	18F46K42
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=2
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=2
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=2
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1
    41                           	psect	text27,global,reloc=2,class=CODE,delta=1
    42                           	psect	text28,global,reloc=2,class=CODE,delta=1
    43                           	psect	text29,global,reloc=2,class=CODE,delta=1
    44                           	psect	text30,global,reloc=2,class=CODE,delta=1,inline
    45                           	psect	text31,global,reloc=2,class=CODE,delta=1
    46                           	psect	text32,global,reloc=2,class=CODE,delta=1,inline
    47                           	psect	ivt0x8,global,reloc=2,class=CODE,delta=1,noexec,keep,optim=
    48                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1,inline
    50                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    51                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    52                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    53  0000                     
    54                           ; Version 2.20
    55                           ; Generated 05/05/2020 GMT
    56                           ; 
    57                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    58                           ; All rights reserved.
    59                           ; 
    60                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    61                           ; 
    62                           ; Redistribution and use in source and binary forms, with or without modification, are
    63                           ; permitted provided that the following conditions are met:
    64                           ; 
    65                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    66                           ;        conditions and the following disclaimer.
    67                           ; 
    68                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    69                           ;        of conditions and the following disclaimer in the documentation and/or other
    70                           ;        materials provided with the distribution.
    71                           ; 
    72                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    73                           ;        software without specific prior written permission.
    74                           ; 
    75                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    76                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    77                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    78                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    79                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    80                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    81                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    82                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    83                           ; 
    84                           ; 
    85                           ; Code-generator required, PIC18F46K42 Definitions
    86                           ; 
    87                           ; SFR Addresses
    88  0000                     
    89 ;; Function _dummyHandler is unused but had its address taken
    90  0000                     
    91 ;; Function _UART2_DefaultFramingErrorHandler is unused but had its address taken
    92  0000                     
    93 ;; Function _UART2_DefaultOverrunErrorHandler is unused but had its address taken
    94  0000                     
    95 ;; Function _UART2_DefaultErrorHandler is unused but had its address taken
    96  0000                     
    97                           	psect	idataBANK0
    98  001F90                     __pidataBANK0:
    99                           	callstack 0
   100                           
   101                           ;initializer for _dummy_exec
   102  001F90  00                 	db	0
   103  001F91  00                 	db	0
   104  001F92  00                 	db	0
   105  001F93  00                 	db	0
   106  001F94  00                 	db	0
   107  001F95  00                 	db	0
   108  001F96  00                 	db	0
   109  001F97  00                 	db	0
   110  001F98  00                 	db	0
   111  001F99  00                 	db	0
   112                           
   113                           	psect	smallconst
   114  001000                     __psmallconst:
   115                           	callstack 0
   116  001000  00                 	db	0
   117  001001                     _dpowers:
   118                           	callstack 0
   119  001001  0001               	dw	1
   120  001003  0000               	dw	0
   121  001005  000A               	dw	10
   122  001007  0000               	dw	0
   123  001009  0064               	dw	100
   124  00100B  0000               	dw	0
   125  00100D  03E8               	dw	1000
   126  00100F  0000               	dw	0
   127  001011  2710               	dw	10000
   128  001013  0000               	dw	0
   129  001015  86A0               	dw	34464
   130  001017  0001               	dw	1
   131  001019  4240               	dw	16960
   132  00101B  000F               	dw	15
   133  00101D  9680               	dw	38528
   134  00101F  0098               	dw	152
   135  001021  E100               	dw	57600
   136  001023  05F5               	dw	1525
   137  001025  CA00               	dw	51712
   138  001027  3B9A               	dw	15258
   139  001029                     __end_of_dpowers:
   140                           	callstack 0
   141  001029                     _hexpowers:
   142                           	callstack 0
   143  001029  0001               	dw	1
   144  00102B  0000               	dw	0
   145  00102D  0010               	dw	16
   146  00102F  0000               	dw	0
   147  001031  0100               	dw	256
   148  001033  0000               	dw	0
   149  001035  1000               	dw	4096
   150  001037  0000               	dw	0
   151  001039  0000               	dw	0
   152  00103B  0001               	dw	1
   153  00103D  0000               	dw	0
   154  00103F  0010               	dw	16
   155  001041  0000               	dw	0
   156  001043  0100               	dw	256
   157  001045  0000               	dw	0
   158  001047  1000               	dw	4096
   159  001049                     __end_of_hexpowers:
   160                           	callstack 0
   161  001049                     STR_6:
   162  001049  70                 	db	112	;'p'
   163  00104A  72                 	db	114	;'r'
   164  00104B  65                 	db	101	;'e'
   165  00104C  73                 	db	115	;'s'
   166  00104D  73                 	db	115	;'s'
   167  00104E  20                 	db	32
   168  00104F  62                 	db	98	;'b'
   169  001050  75                 	db	117	;'u'
   170  001051  74                 	db	116	;'t'
   171  001052  74                 	db	116	;'t'
   172  001053  6F                 	db	111	;'o'
   173  001054  6E                 	db	110	;'n'
   174  001055  20                 	db	32
   175  001056  6F                 	db	111	;'o'
   176  001057  6E                 	db	110	;'n'
   177  001058  20                 	db	32
   178  001059  62                 	db	98	;'b'
   179  00105A  72                 	db	114	;'r'
   180  00105B  65                 	db	101	;'e'
   181  00105C  61                 	db	97	;'a'
   182  00105D  64                 	db	100	;'d'
   183  00105E  62                 	db	98	;'b'
   184  00105F  6F                 	db	111	;'o'
   185  001060  61                 	db	97	;'a'
   186  001061  72                 	db	114	;'r'
   187  001062  64                 	db	100	;'d'
   188  001063  0A                 	db	10
   189  001064  0D                 	db	13
   190  001065  00                 	db	0
   191  001066                     STR_12:
   192  001066  30                 	db	48	;'0'
   193  001067  31                 	db	49	;'1'
   194  001068  32                 	db	50	;'2'
   195  001069  33                 	db	51	;'3'
   196  00106A  34                 	db	52	;'4'
   197  00106B  35                 	db	53	;'5'
   198  00106C  36                 	db	54	;'6'
   199  00106D  37                 	db	55	;'7'
   200  00106E  38                 	db	56	;'8'
   201  00106F  39                 	db	57	;'9'
   202  001070  61                 	db	97	;'a'
   203  001071  62                 	db	98	;'b'
   204  001072  63                 	db	99	;'c'
   205  001073  64                 	db	100	;'d'
   206  001074  65                 	db	101	;'e'
   207  001075  66                 	db	102	;'f'
   208  001076  00                 	db	0
   209  001077                     STR_7:
   210  001077  20                 	db	32
   211  001078  43                 	db	67	;'C'
   212  001079  6F                 	db	111	;'o'
   213  00107A  75                 	db	117	;'u'
   214  00107B  6E                 	db	110	;'n'
   215  00107C  74                 	db	116	;'t'
   216  00107D  20                 	db	32
   217  00107E  3D                 	db	61	;'='
   218  00107F  20                 	db	32
   219  001080  25                 	db	37
   220  001081  75                 	db	117	;'u'
   221  001082  20                 	db	32
   222  001083  0A                 	db	10
   223  001084  0D                 	db	13
   224  001085  00                 	db	0
   225  001086  25                 	db	37
   226  001087  34                 	db	52	;'4'
   227  001088  70                 	db	112	;'p'
   228  001089  3A                 	db	58	;':'
   229  00108A  25                 	db	37
   230  00108B  6C                 	db	108	;'l'
   231  00108C  75                 	db	117	;'u'
   232  00108D  20                 	db	32
   233  00108E  2D                 	db	45
   234  00108F  3E                 	db	62	;'>'
   235  001090  20                 	db	32
   236  001091  00                 	db	0
   237  001092                     STR_9:
   238  001092  25                 	db	37
   239  001093  63                 	db	99	;'c'
   240  001094  25                 	db	37
   241  001095  63                 	db	99	;'c'
   242  001096  25                 	db	37
   243  001097  63                 	db	99	;'c'
   244  001098  25                 	db	37
   245  001099  63                 	db	99	;'c'
   246  00109A  00                 	db	0
   247  00109B                     STR_5:
   248  00109B  52                 	db	82	;'R'
   249  00109C  65                 	db	101	;'e'
   250  00109D  61                 	db	97	;'a'
   251  00109E  64                 	db	100	;'d'
   252  00109F  79                 	db	121	;'y'
   253  0010A0  0A                 	db	10
   254  0010A1  0D                 	db	13
   255  0010A2  3E                 	db	62	;'>'
   256  0010A3  00                 	db	0
   257  0010A4  25                 	db	37
   258  0010A5  6C                 	db	108	;'l'
   259  0010A6  64                 	db	100	;'d'
   260  0010A7  20                 	db	32
   261  0010A8  2D                 	db	45
   262  0010A9  3E                 	db	62	;'>'
   263  0010AA  20                 	db	32
   264  0010AB  00                 	db	0
   265  0010AC                     STR_2:
   266  0010AC  4E                 	db	78	;'N'
   267  0010AD  55                 	db	85	;'U'
   268  0010AE  4C                 	db	76	;'L'
   269  0010AF  4C                 	db	76	;'L'
   270  0010B0  0A                 	db	10
   271  0010B1  00                 	db	0
   272  0010B2  00                 	db	0	; dummy byte at the end
   273  0000                     
   274                           	psect	nvBANK0
   275  000091                     __pnvBANK0:
   276                           	callstack 0
   277  000091                     _TMR0_InterruptHandler:
   278                           	callstack 0
   279  000091                     	ds	2
   280  000093                     _UART2_ErrorHandler:
   281                           	callstack 0
   282  000093                     	ds	2
   283  000095                     _UART2_OverrunErrorHandler:
   284                           	callstack 0
   285  000095                     	ds	2
   286  000097                     _UART2_FramingErrorHandler:
   287                           	callstack 0
   288  000097                     	ds	2
   289  0000                     _PIR6bits	set	14758
   290  0000                     _PMD7	set	14791
   291  0000                     _PMD6	set	14790
   292  0000                     _PMD5	set	14789
   293  0000                     _PMD4	set	14788
   294  0000                     _PMD3	set	14787
   295  0000                     _PMD2	set	14786
   296  0000                     _PMD1	set	14785
   297  0000                     _PMD0	set	14784
   298  0000                     _OSCTUNE	set	14814
   299  0000                     _OSCFRQ	set	14815
   300  0000                     _OSCEN	set	14813
   301  0000                     _OSCCON3	set	14811
   302  0000                     _OSCCON1	set	14809
   303  0000                     _PIR3bits	set	14755
   304  0000                     _PIE3bits	set	14739
   305  0000                     _T0CKIPPS	set	15043
   306  0000                     _RB6PPS	set	14862
   307  0000                     _U2RXPPS	set	15080
   308  0000                     _INLVLE	set	14980
   309  0000                     _INLVLD	set	14964
   310  0000                     _INLVLC	set	14948
   311  0000                     _INLVLB	set	14932
   312  0000                     _INLVLA	set	14916
   313  0000                     _SLRCONE	set	14979
   314  0000                     _SLRCOND	set	14963
   315  0000                     _SLRCONC	set	14947
   316  0000                     _SLRCONB	set	14931
   317  0000                     _SLRCONA	set	14915
   318  0000                     _ODCOND	set	14962
   319  0000                     _ODCONC	set	14946
   320  0000                     _ODCONB	set	14930
   321  0000                     _ODCONA	set	14914
   322  0000                     _ODCONE	set	14978
   323  0000                     _RD1I2C	set	14971
   324  0000                     _RD0I2C	set	14970
   325  0000                     _RC4I2C	set	14955
   326  0000                     _RC3I2C	set	14954
   327  0000                     _RB2I2C	set	14939
   328  0000                     _RB1I2C	set	14938
   329  0000                     _WPUC	set	14945
   330  0000                     _WPUA	set	14913
   331  0000                     _WPUB	set	14929
   332  0000                     _WPUE	set	14977
   333  0000                     _WPUD	set	14961
   334  0000                     _ANSELA	set	14912
   335  0000                     _ANSELE	set	14976
   336  0000                     _ANSELB	set	14928
   337  0000                     _ANSELC	set	14944
   338  0000                     _ANSELD	set	14960
   339  0000                     _U2TXB	set	15826
   340  0000                     _U2RXB	set	15824
   341  0000                     _U2ERRIRbits	set	15841
   342  0000                     _U2CON0bits	set	15834
   343  0000                     _U2ERRIE	set	15842
   344  0000                     _U2ERRIR	set	15841
   345  0000                     _U2UIR	set	15840
   346  0000                     _U2FIFO	set	15839
   347  0000                     _U2BRGH	set	15838
   348  0000                     _U2BRGL	set	15837
   349  0000                     _U2CON2	set	15836
   350  0000                     _U2CON1	set	15835
   351  0000                     _U2CON0	set	15834
   352  0000                     _U2P3L	set	15832
   353  0000                     _U2P2L	set	15830
   354  0000                     _U2P1L	set	15828
   355  0000                     _LATDbits	set	16317
   356  0000                     _PORTAbits	set	16330
   357  0000                     _T0CON0bits	set	16312
   358  0000                     _T0CON0	set	16312
   359  0000                     _TMR0L	set	16310
   360  0000                     _T0CON1	set	16313
   361  0000                     _INTCON0bits	set	16338
   362  0000                     _TRISD	set	16325
   363  0000                     _TRISC	set	16324
   364  0000                     _TRISB	set	16323
   365  0000                     _TRISA	set	16322
   366  0000                     _TRISE	set	16326
   367  0000                     _LATC	set	16316
   368  0000                     _LATB	set	16315
   369  0000                     _LATA	set	16314
   370  0000                     _LATD	set	16317
   371  0000                     _LATE	set	16318
   372  0000                     _TMR0H	set	16311
   373                           
   374                           ; #config settings
   375                           
   376                           	psect	cinit
   377  001D76                     __pcinit:
   378                           	callstack 0
   379  001D76                     start_initialization:
   380                           	callstack 0
   381  001D76                     __initialization:
   382                           	callstack 0
   383                           
   384                           ; Initialize objects allocated to BANK0 (10 bytes)
   385                           ; load TBLPTR registers with __pidataBANK0
   386  001D76  0E90               	movlw	low __pidataBANK0
   387  001D78  6EF6               	movwf	tblptrl,c
   388  001D7A  0E1F               	movlw	high __pidataBANK0
   389  001D7C  6EF7               	movwf	tblptrh,c
   390  001D7E  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   391  001D80  6EF8               	movwf	tblptru,c
   392  001D82  EE00  F087         	lfsr	0,__pdataBANK0
   393  001D86  EE10 F00A          	lfsr	1,10
   394  001D8A                     copy_data0:
   395  001D8A  0009               	tblrd		*+
   396  001D8C  006F FFD7 FFEE     	movff	tablat,postinc0
   397  001D92  50E5               	movf	postdec1,w,c
   398  001D94  50E1               	movf	fsr1l,w,c
   399  001D96  E1F9               	bnz	copy_data0
   400                           
   401                           ; Clear objects allocated to BANK0 (10 bytes)
   402  001D98  EE00  F07D         	lfsr	0,__pbssBANK0
   403  001D9C  0E0A               	movlw	10
   404  001D9E                     clear_0:
   405  001D9E  6AEE               	clrf	postinc0,c
   406  001DA0  06E8               	decf	wreg,f,c
   407  001DA2  E1FD               	bnz	clear_0
   408                           
   409                           ; Clear objects allocated to COMRAM (23 bytes)
   410  001DA4  EE00  F036         	lfsr	0,__pbssCOMRAM
   411  001DA8  0E17               	movlw	23
   412  001DAA                     clear_1:
   413  001DAA  6AEE               	clrf	postinc0,c
   414  001DAC  06E8               	decf	wreg,f,c
   415  001DAE  E1FD               	bnz	clear_1
   416                           
   417                           ;
   418                           ; Setup IVTBASE
   419                           ;
   420  001DB0  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
   421  001DB2  6ED5               	movwf	213,c
   422  001DB4  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
   423  001DB6  6ED6               	movwf	214,c
   424  001DB8  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
   425  001DBA  6ED7               	movwf	215,c
   426  001DBC                     end_of_initialization:
   427                           	callstack 0
   428  001DBC                     __end_of__initialization:
   429                           	callstack 0
   430  001DBC  0100               	movlb	0
   431  001DBE  EFA1  F00B         	goto	_main	;jump to C main() function
   432                           
   433                           	psect	bssCOMRAM
   434  000036                     __pbssCOMRAM:
   435                           	callstack 0
   436  000036                     _g_rtcounterH:
   437                           	callstack 0
   438  000036                     	ds	4
   439  00003A                     _lastTimerLoad:
   440                           	callstack 0
   441  00003A                     	ds	4
   442  00003E                     _absoluteTimeofLastTimeout:
   443                           	callstack 0
   444  00003E                     	ds	4
   445  000042                     _last_switch1_value:
   446                           	callstack 0
   447  000042                     	ds	2
   448  000044                     _rtcoutListHead:
   449                           	callstack 0
   450  000044                     	ds	2
   451  000046                     _isRunning@rtcounter$F826:
   452                           	callstack 0
   453  000046                     	ds	1
   454  000047                     _uart2RxLastError:
   455                           	callstack 0
   456  000047                     	ds	1
   457  000048                     _isRunning:
   458                           	callstack 0
   459  000048                     	ds	1
   460  000049                     _executeQueueHead:
   461                           	callstack 0
   462  000049                     	ds	2
   463  00004B                     _listHead:
   464                           	callstack 0
   465  00004B                     	ds	2
   466                           
   467                           	psect	bssBANK0
   468  00007D                     __pbssBANK0:
   469                           	callstack 0
   470  00007D                     _dummy:
   471                           	callstack 0
   472  00007D                     	ds	10
   473                           
   474                           	psect	dataBANK0
   475  000087                     __pdataBANK0:
   476                           	callstack 0
   477  000087                     _dummy_exec:
   478                           	callstack 0
   479  000087                     	ds	10
   480                           
   481                           	psect	cstackBANK0
   482  000060                     __pcstackBANK0:
   483                           	callstack 0
   484  000060                     printf@idx:
   485                           	callstack 0
   486                           
   487                           ; 1 bytes @ 0x0
   488  000060                     	ds	1
   489  000061                     printf@cp:
   490                           	callstack 0
   491                           
   492                           ; 2 bytes @ 0x1
   493  000061                     	ds	2
   494  000063                     printf@prec:
   495                           	callstack 0
   496                           
   497                           ; 2 bytes @ 0x3
   498  000063                     	ds	2
   499  000065                     printf@len:
   500                           	callstack 0
   501                           
   502                           ; 2 bytes @ 0x5
   503  000065                     	ds	2
   504  000067                     printf@val:
   505                           	callstack 0
   506                           
   507                           ; 4 bytes @ 0x7
   508  000067                     	ds	4
   509  00006B                     printf@ap:
   510                           	callstack 0
   511                           
   512                           ; 2 bytes @ 0xB
   513  00006B                     	ds	2
   514  00006D                     printf@width:
   515                           	callstack 0
   516                           
   517                           ; 2 bytes @ 0xD
   518  00006D                     	ds	2
   519  00006F                     printf@flag:
   520                           	callstack 0
   521                           
   522                           ; 2 bytes @ 0xF
   523  00006F                     	ds	2
   524  000071                     printf@c:
   525                           	callstack 0
   526                           
   527                           ; 1 bytes @ 0x11
   528  000071                     	ds	7
   529  000078                     main@button:
   530                           	callstack 0
   531                           
   532                           ; 1 bytes @ 0x18
   533  000078                     	ds	1
   534  000079                     main@has_switch1_changed:
   535                           	callstack 0
   536                           
   537                           ; 2 bytes @ 0x19
   538  000079                     	ds	2
   539  00007B                     main@counter:
   540                           	callstack 0
   541                           
   542                           ; 2 bytes @ 0x1B
   543  00007B                     	ds	2
   544                           
   545                           	psect	cstackCOMRAM
   546  000001                     __pcstackCOMRAM:
   547                           	callstack 0
   548  000001                     TMR0_WriteTimer@timerVal:
   549                           	callstack 0
   550  000001                     enqueueCallback@timer:
   551                           	callstack 0
   552                           
   553                           ; 2 bytes @ 0x0
   554  000001                     	ds	1
   555  000002                     setTimerDuration@duration:
   556                           	callstack 0
   557                           
   558                           ; 4 bytes @ 0x1
   559  000002                     	ds	1
   560  000003                     
   561                           ; 1 bytes @ 0x2
   562  000003                     	ds	2
   563  000005                     enqueueCallback@tmp:
   564                           	callstack 0
   565                           
   566                           ; 2 bytes @ 0x4
   567  000005                     	ds	1
   568  000006                     ??_startTimerAtHead:
   569                           
   570                           ; 1 bytes @ 0x5
   571  000006                     	ds	4
   572  00000A                     startTimerAtHead@period:
   573                           	callstack 0
   574                           
   575                           ; 4 bytes @ 0x9
   576  00000A                     	ds	4
   577  00000E                     timeout_isr@next:
   578                           	callstack 0
   579                           
   580                           ; 2 bytes @ 0xD
   581  00000E                     	ds	2
   582  000010                     ??_isdigit:
   583  000010                     ?_poll_switch1_for_edges:
   584                           	callstack 0
   585  000010                     ?___wmul:
   586                           	callstack 0
   587  000010                     ?___lldiv:
   588                           	callstack 0
   589  000010                     UART2_Write@txData:
   590                           	callstack 0
   591  000010                     UART2_SetFramingErrorHandler@interruptHandler:
   592                           	callstack 0
   593  000010                     UART2_SetOverrunErrorHandler@interruptHandler:
   594                           	callstack 0
   595  000010                     UART2_SetErrorHandler@interruptHandler:
   596                           	callstack 0
   597  000010                     TMR0_SetInterruptHandler@InterruptHandler:
   598                           	callstack 0
   599  000010                     poll_switch1_for_edges@digitalinputpin:
   600                           	callstack 0
   601  000010                     ___wmul@multiplier:
   602                           	callstack 0
   603  000010                     ___lldiv@dividend:
   604                           	callstack 0
   605                           
   606                           ; 4 bytes @ 0xF
   607  000010                     	ds	1
   608  000011                     putch@txData:
   609                           	callstack 0
   610  000011                     _isdigit$1671:
   611                           	callstack 0
   612                           
   613                           ; 1 bytes @ 0x10
   614  000011                     	ds	1
   615  000012                     isdigit@c:
   616                           	callstack 0
   617  000012                     poll_switch1_for_edges@has_switch1_changed:
   618                           	callstack 0
   619  000012                     ___wmul@multiplicand:
   620                           	callstack 0
   621                           
   622                           ; 2 bytes @ 0x11
   623  000012                     	ds	2
   624  000014                     ___wmul@product:
   625                           	callstack 0
   626  000014                     ___lldiv@divisor:
   627                           	callstack 0
   628                           
   629                           ; 4 bytes @ 0x13
   630  000014                     	ds	4
   631  000018                     ___lldiv@quotient:
   632                           	callstack 0
   633                           
   634                           ; 4 bytes @ 0x17
   635  000018                     	ds	4
   636  00001C                     ___lldiv@counter:
   637                           	callstack 0
   638                           
   639                           ; 1 bytes @ 0x1B
   640  00001C                     	ds	1
   641  00001D                     ?___llmod:
   642                           	callstack 0
   643  00001D                     ___llmod@dividend:
   644                           	callstack 0
   645                           
   646                           ; 4 bytes @ 0x1C
   647  00001D                     	ds	4
   648  000021                     ___llmod@divisor:
   649                           	callstack 0
   650                           
   651                           ; 4 bytes @ 0x20
   652  000021                     	ds	4
   653  000025                     ___llmod@counter:
   654                           	callstack 0
   655                           
   656                           ; 1 bytes @ 0x24
   657  000025                     	ds	1
   658  000026                     ?_printf:
   659                           	callstack 0
   660  000026                     printf@f:
   661                           	callstack 0
   662                           
   663                           ; 2 bytes @ 0x25
   664  000026                     	ds	10
   665  000030                     ??_printf:
   666                           
   667                           ; 1 bytes @ 0x2F
   668  000030                     	ds	4
   669  000034                     ??_main:
   670                           
   671                           ; 1 bytes @ 0x33
   672  000034                     	ds	2
   673                           
   674 ;;
   675 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   676 ;;
   677 ;; *************** function _main *****************
   678 ;; Defined at:
   679 ;;		line 15 in file "main.c"
   680 ;; Parameters:    Size  Location     Type
   681 ;;		None
   682 ;; Auto vars:     Size  Location     Type
   683 ;;  counter         2   27[BANK0 ] unsigned int 
   684 ;;  has_switch1_    2   25[BANK0 ] unsigned int 
   685 ;;  k               2    0        unsigned int 
   686 ;;  oldcount        2    0        unsigned int 
   687 ;;  newcount        2    0        unsigned int 
   688 ;;  i               2    0        int 
   689 ;;  button          1   24[BANK0 ] unsigned char 
   690 ;; Return value:  Size  Location     Type
   691 ;;                  1    wreg      void 
   692 ;; Registers used:
   693 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   694 ;; Tracked objects:
   695 ;;		On entry : 0/0
   696 ;;		On exit  : 0/0
   697 ;;		Unchanged: 0/0
   698 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   699 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   700 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   701 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   702 ;;      Totals:         2      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   703 ;;Total ram usage:       13 bytes
   704 ;; Hardware stack levels required when called:   10
   705 ;; This function calls:
   706 ;;		_SYSTEM_Initialize
   707 ;;		_clearPuTTY
   708 ;;		_poll_switch1_for_edges
   709 ;;		_printf
   710 ;; This function is called by:
   711 ;;		Startup code after reset
   712 ;; This function uses a non-reentrant model
   713 ;;
   714                           
   715                           	psect	text0
   716  001742                     __ptext0:
   717                           	callstack 0
   718  001742                     _main:
   719                           	callstack 21
   720  001742                     
   721                           ;main.c: 18: SYSTEM_Initialize();
   722  001742  EC76  F00F         	call	_SYSTEM_Initialize	;wreg free
   723  001746                     
   724                           ;main.c: 19: clearPuTTY();
   725  001746  ECD2  F00D         	call	_clearPuTTY	;wreg free
   726  00174A  0E00               	movlw	0
   727  00174C  0100               	movlb	0	; () banked
   728  00174E  6F7C               	movwf	(main@counter+1)& (0+255),b
   729  001750  0E00               	movlw	0
   730  001752  6F7B               	movwf	main@counter& (0+255),b
   731  001754                     
   732                           ; BSR set to: 0
   733                           ;main.c: 24: clearPuTTY();
   734  001754  ECD2  F00D         	call	_clearPuTTY	;wreg free
   735  001758                     
   736                           ;main.c: 27: printf("Ready\n\r>");
   737  001758  0E9B               	movlw	low STR_5
   738  00175A  6E26               	movwf	printf@f^0,c
   739  00175C  0E10               	movlw	high STR_5
   740  00175E  6E27               	movwf	(printf@f+1)^0,c
   741  001760  EC5A  F008         	call	_printf	;wreg free
   742  001764                     
   743                           ;main.c: 28: printf("press button on breadboard\n\r");
   744  001764  0E49               	movlw	low STR_6
   745  001766  6E26               	movwf	printf@f^0,c
   746  001768  0E10               	movlw	high STR_6
   747  00176A  6E27               	movwf	(printf@f+1)^0,c
   748  00176C  EC5A  F008         	call	_printf	;wreg free
   749  001770                     l3508:
   750                           
   751                           ;main.c: 31: {;main.c: 33: button = PORTAbits.RA4;
   752  001770  0E00               	movlw	0
   753  001772  B8CA               	btfsc	202,4,c	;volatile
   754  001774  0E01               	movlw	1
   755  001776  0100               	movlb	0	; () banked
   756  001778  6F78               	movwf	main@button& (0+255),b
   757  00177A                     
   758                           ; BSR set to: 0
   759                           ;main.c: 34: has_switch1_changed = poll_switch1_for_edges(button);
   760  00177A  C078  F010         	movff	main@button,poll_switch1_for_edges@digitalinputpin
   761  00177E  6A11               	clrf	(poll_switch1_for_edges@digitalinputpin+1)^0,c
   762  001780  EC50  F00E         	call	_poll_switch1_for_edges	;wreg free
   763  001784  C010  F079         	movff	?_poll_switch1_for_edges,main@has_switch1_changed
   764  001788  C011  F07A         	movff	?_poll_switch1_for_edges+1,main@has_switch1_changed+1
   765  00178C                     
   766                           ;main.c: 35: if(has_switch1_changed==1){
   767  00178C  0100               	movlb	0	; () banked
   768  00178E  0579               	decf	main@has_switch1_changed& (0+255),w,b
   769  001790  117A               	iorwf	(main@has_switch1_changed+1)& (0+255),w,b
   770  001792  A4D8               	btfss	status,2,c
   771  001794  EFCE  F00B         	goto	u2331
   772  001798  EFD0  F00B         	goto	u2330
   773  00179C                     u2331:
   774  00179C  EFE7  F00B         	goto	l3520
   775  0017A0                     u2330:
   776  0017A0                     
   777                           ; BSR set to: 0
   778                           ;main.c: 36: counter++;
   779  0017A0  4B7B               	infsnz	main@counter& (0+255),f,b
   780  0017A2  2B7C               	incf	(main@counter+1)& (0+255),f,b
   781  0017A4                     
   782                           ; BSR set to: 0
   783                           ;main.c: 37: if(counter<=3)
   784  0017A4  517C               	movf	(main@counter+1)& (0+255),w,b
   785  0017A6  E107               	bnz	u2341
   786  0017A8  0E04               	movlw	4
   787  0017AA  5D7B               	subwf	main@counter& (0+255),w,b
   788  0017AC  B0D8               	btfsc	status,0,c
   789  0017AE  EFDB  F00B         	goto	u2341
   790  0017B2  EFDD  F00B         	goto	u2340
   791  0017B6                     u2341:
   792  0017B6  EFE7  F00B         	goto	l3520
   793  0017BA                     u2340:
   794  0017BA                     
   795                           ; BSR set to: 0
   796                           ;main.c: 38: {;main.c: 39: printf(" Count = %u \n\r", counter);
   797  0017BA  0E77               	movlw	low STR_7
   798  0017BC  6E26               	movwf	printf@f^0,c
   799  0017BE  0E10               	movlw	high STR_7
   800  0017C0  6E27               	movwf	(printf@f+1)^0,c
   801  0017C2  C07B  F028         	movff	main@counter,?_printf+2
   802  0017C6  C07C  F029         	movff	main@counter+1,?_printf+3
   803  0017CA  EC5A  F008         	call	_printf	;wreg free
   804  0017CE                     l3520:
   805                           
   806                           ;main.c: 40: };main.c: 41: };main.c: 42: if(counter>=4)
   807  0017CE  0100               	movlb	0	; () banked
   808  0017D0  517C               	movf	(main@counter+1)& (0+255),w,b
   809  0017D2  E109               	bnz	u2350
   810  0017D4  0E04               	movlw	4
   811  0017D6  5D7B               	subwf	main@counter& (0+255),w,b
   812  0017D8  A0D8               	btfss	status,0,c
   813  0017DA  EFF1  F00B         	goto	u2351
   814  0017DE  EFF3  F00B         	goto	u2350
   815  0017E2                     u2351:
   816  0017E2  EF0F  F00C         	goto	l3528
   817  0017E6                     u2350:
   818  0017E6                     
   819                           ; BSR set to: 0
   820                           ;main.c: 43: {;main.c: 44: counter=1;
   821  0017E6  0E00               	movlw	0
   822  0017E8  6F7C               	movwf	(main@counter+1)& (0+255),b
   823  0017EA  0E01               	movlw	1
   824  0017EC  6F7B               	movwf	main@counter& (0+255),b
   825  0017EE                     
   826                           ; BSR set to: 0
   827                           ;main.c: 45: printf(" Count = %u \n\r", counter);
   828  0017EE  0E77               	movlw	low STR_7
   829  0017F0  6E26               	movwf	printf@f^0,c
   830  0017F2  0E10               	movlw	high STR_7
   831  0017F4  6E27               	movwf	(printf@f+1)^0,c
   832  0017F6  0E00               	movlw	0
   833  0017F8  6E29               	movwf	(?_printf+3)^0,c
   834  0017FA  0E01               	movlw	1
   835  0017FC  6E28               	movwf	(?_printf+2)^0,c
   836  0017FE  EC5A  F008         	call	_printf	;wreg free
   837  001802  EF0F  F00C         	goto	l3528
   838  001806                     l591:
   839  001806  84BD               	bsf	189,2,c	;volatile
   840  001808  92BD               	bcf	189,1,c	;volatile
   841  00180A  EFB8  F00B         	goto	l3508
   842  00180E                     l597:
   843  00180E  82BD               	bsf	189,1,c	;volatile
   844  001810  94BD               	bcf	189,2,c	;volatile
   845  001812  EFB8  F00B         	goto	l3508
   846  001816                     l602:
   847  001816  94BD               	bcf	189,2,c	;volatile
   848  001818  92BD               	bcf	189,1,c	;volatile
   849  00181A  EFB8  F00B         	goto	l3508
   850  00181E                     l3528:
   851  00181E  C07B  F034         	movff	main@counter,??_main
   852  001822  C07C  F035         	movff	main@counter+1,??_main+1
   853                           
   854                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   855                           ; Switch size 1, requested type "simple"
   856                           ; Number of cases is 1, Range of values is 0 to 0
   857                           ; switch strategies available:
   858                           ; Name         Instructions Cycles
   859                           ; simple_byte            4     3 (average)
   860                           ;	Chosen strategy is simple_byte
   861  001826  5035               	movf	(??_main+1)^0,w,c
   862  001828  0A00               	xorlw	0	; case 0
   863  00182A  B4D8               	btfsc	status,2,c
   864  00182C  EF1A  F00C         	goto	l3554
   865  001830  EFB8  F00B         	goto	l3508
   866  001834                     l3554:
   867                           
   868                           ; Switch size 1, requested type "simple"
   869                           ; Number of cases is 3, Range of values is 1 to 3
   870                           ; switch strategies available:
   871                           ; Name         Instructions Cycles
   872                           ; simple_byte           10     6 (average)
   873                           ;	Chosen strategy is simple_byte
   874  001834  5034               	movf	??_main^0,w,c
   875  001836  0A01               	xorlw	1	; case 1
   876  001838  B4D8               	btfsc	status,2,c
   877  00183A  EF03  F00C         	goto	l591
   878  00183E  0A03               	xorlw	3	; case 2
   879  001840  B4D8               	btfsc	status,2,c
   880  001842  EF07  F00C         	goto	l597
   881  001846  0A01               	xorlw	1	; case 3
   882  001848  B4D8               	btfsc	status,2,c
   883  00184A  EF0B  F00C         	goto	l602
   884  00184E  EFB8  F00B         	goto	l3508
   885  001852  EF0D  F000         	goto	start
   886  001856                     __end_of_main:
   887                           	callstack 0
   888                           
   889 ;; *************** function _poll_switch1_for_edges *****************
   890 ;; Defined at:
   891 ;;		line 22 in file "buttons.c"
   892 ;; Parameters:    Size  Location     Type
   893 ;;  digitalinput    2   15[COMRAM] unsigned int 
   894 ;; Auto vars:     Size  Location     Type
   895 ;;  has_switch1_    2   17[COMRAM] unsigned int 
   896 ;; Return value:  Size  Location     Type
   897 ;;                  2   15[COMRAM] unsigned int 
   898 ;; Registers used:
   899 ;;		wreg, status,2, status,0
   900 ;; Tracked objects:
   901 ;;		On entry : 0/0
   902 ;;		On exit  : 0/0
   903 ;;		Unchanged: 0/0
   904 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   905 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   906 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   907 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   908 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   909 ;;Total ram usage:        4 bytes
   910 ;; Hardware stack levels used:    1
   911 ;; Hardware stack levels required when called:    6
   912 ;; This function calls:
   913 ;;		Nothing
   914 ;; This function is called by:
   915 ;;		_main
   916 ;; This function uses a non-reentrant model
   917 ;;
   918                           
   919                           	psect	text1
   920  001CA0                     __ptext1:
   921                           	callstack 0
   922  001CA0                     _poll_switch1_for_edges:
   923                           	callstack 24
   924  001CA0                     
   925                           ;buttons.c: 25: unsigned int has_switch1_changed = 0;
   926  001CA0  0E00               	movlw	0
   927  001CA2  6E13               	movwf	(poll_switch1_for_edges@has_switch1_changed+1)^0,c
   928  001CA4  0E00               	movlw	0
   929  001CA6  6E12               	movwf	poll_switch1_for_edges@has_switch1_changed^0,c
   930  001CA8                     
   931                           ;buttons.c: 27: if (last_switch1_value == 0 && digitalinputpin >> 0)
   932  001CA8  5042               	movf	_last_switch1_value^0,w,c
   933  001CAA  1043               	iorwf	(_last_switch1_value+1)^0,w,c
   934  001CAC  A4D8               	btfss	status,2,c
   935  001CAE  EF5B  F00E         	goto	u1721
   936  001CB2  EF5D  F00E         	goto	u1720
   937  001CB6                     u1721:
   938  001CB6  EF6E  F00E         	goto	l3010
   939  001CBA                     u1720:
   940  001CBA  5010               	movf	poll_switch1_for_edges@digitalinputpin^0,w,c
   941  001CBC  1011               	iorwf	(poll_switch1_for_edges@digitalinputpin+1)^0,w,c
   942  001CBE  B4D8               	btfsc	status,2,c
   943  001CC0  EF64  F00E         	goto	u1731
   944  001CC4  EF66  F00E         	goto	u1730
   945  001CC8                     u1731:
   946  001CC8  EF6E  F00E         	goto	l3010
   947  001CCC                     u1730:
   948  001CCC                     
   949                           ;buttons.c: 28: {;buttons.c: 29: last_switch1_value = 1;
   950  001CCC  0E00               	movlw	0
   951  001CCE  6E43               	movwf	(_last_switch1_value+1)^0,c
   952  001CD0  0E01               	movlw	1
   953  001CD2  6E42               	movwf	_last_switch1_value^0,c
   954                           
   955                           ;buttons.c: 30: has_switch1_changed = 1;
   956  001CD4  0E00               	movlw	0
   957  001CD6  6E13               	movwf	(poll_switch1_for_edges@has_switch1_changed+1)^0,c
   958  001CD8  0E01               	movlw	1
   959  001CDA  6E12               	movwf	poll_switch1_for_edges@has_switch1_changed^0,c
   960  001CDC                     l3010:
   961                           
   962                           ;buttons.c: 31: };buttons.c: 32: if (last_switch1_value == 1 && digitalinputpin == 0)
   963  001CDC  0442               	decf	_last_switch1_value^0,w,c
   964  001CDE  1043               	iorwf	(_last_switch1_value+1)^0,w,c
   965  001CE0  A4D8               	btfss	status,2,c
   966  001CE2  EF75  F00E         	goto	u1741
   967  001CE6  EF77  F00E         	goto	u1740
   968  001CEA                     u1741:
   969  001CEA  EF88  F00E         	goto	l3016
   970  001CEE                     u1740:
   971  001CEE  5010               	movf	poll_switch1_for_edges@digitalinputpin^0,w,c
   972  001CF0  1011               	iorwf	(poll_switch1_for_edges@digitalinputpin+1)^0,w,c
   973  001CF2  A4D8               	btfss	status,2,c
   974  001CF4  EF7E  F00E         	goto	u1751
   975  001CF8  EF80  F00E         	goto	u1750
   976  001CFC                     u1751:
   977  001CFC  EF88  F00E         	goto	l3016
   978  001D00                     u1750:
   979  001D00                     
   980                           ;buttons.c: 33: {;buttons.c: 34: last_switch1_value = 0;
   981  001D00  0E00               	movlw	0
   982  001D02  6E43               	movwf	(_last_switch1_value+1)^0,c
   983  001D04  0E00               	movlw	0
   984  001D06  6E42               	movwf	_last_switch1_value^0,c
   985                           
   986                           ;buttons.c: 35: has_switch1_changed = 2;
   987  001D08  0E00               	movlw	0
   988  001D0A  6E13               	movwf	(poll_switch1_for_edges@has_switch1_changed+1)^0,c
   989  001D0C  0E02               	movlw	2
   990  001D0E  6E12               	movwf	poll_switch1_for_edges@has_switch1_changed^0,c
   991  001D10                     l3016:
   992                           
   993                           ;buttons.c: 36: };buttons.c: 38: return has_switch1_changed;
   994  001D10  C012  F010         	movff	poll_switch1_for_edges@has_switch1_changed,?_poll_switch1_for_edges
   995  001D14  C013  F011         	movff	poll_switch1_for_edges@has_switch1_changed+1,?_poll_switch1_for_edges+1
   996  001D18  0012               	return		;funcret
   997  001D1A                     __end_of_poll_switch1_for_edges:
   998                           	callstack 0
   999                           
  1000 ;; *************** function _clearPuTTY *****************
  1001 ;; Defined at:
  1002 ;;		line 4 in file "putty.c"
  1003 ;; Parameters:    Size  Location     Type
  1004 ;;		None
  1005 ;; Auto vars:     Size  Location     Type
  1006 ;;		None
  1007 ;; Return value:  Size  Location     Type
  1008 ;;                  1    wreg      void 
  1009 ;; Registers used:
  1010 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1011 ;; Tracked objects:
  1012 ;;		On entry : 0/0
  1013 ;;		On exit  : 0/0
  1014 ;;		Unchanged: 0/0
  1015 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1016 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1017 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1018 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1019 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1020 ;;Total ram usage:        0 bytes
  1021 ;; Hardware stack levels used:    1
  1022 ;; Hardware stack levels required when called:    9
  1023 ;; This function calls:
  1024 ;;		_printf
  1025 ;; This function is called by:
  1026 ;;		_main
  1027 ;; This function uses a non-reentrant model
  1028 ;;
  1029                           
  1030                           	psect	text2
  1031  001BA4                     __ptext2:
  1032                           	callstack 0
  1033  001BA4                     _clearPuTTY:
  1034                           	callstack 21
  1035  001BA4                     
  1036                           ;putty.c: 6: printf("%c%c%c%c",27,'[','2','J');
  1037  001BA4  0E92               	movlw	low STR_9
  1038  001BA6  6E26               	movwf	printf@f^0,c
  1039  001BA8  0E10               	movlw	high STR_9
  1040  001BAA  6E27               	movwf	(printf@f+1)^0,c
  1041  001BAC  0E00               	movlw	0
  1042  001BAE  6E29               	movwf	(?_printf+3)^0,c
  1043  001BB0  0E1B               	movlw	27
  1044  001BB2  6E28               	movwf	(?_printf+2)^0,c
  1045  001BB4  0E00               	movlw	0
  1046  001BB6  6E2B               	movwf	(?_printf+5)^0,c
  1047  001BB8  0E5B               	movlw	91
  1048  001BBA  6E2A               	movwf	(?_printf+4)^0,c
  1049  001BBC  0E00               	movlw	0
  1050  001BBE  6E2D               	movwf	(?_printf+7)^0,c
  1051  001BC0  0E32               	movlw	50
  1052  001BC2  6E2C               	movwf	(?_printf+6)^0,c
  1053  001BC4  0E00               	movlw	0
  1054  001BC6  6E2F               	movwf	(?_printf+9)^0,c
  1055  001BC8  0E4A               	movlw	74
  1056  001BCA  6E2E               	movwf	(?_printf+8)^0,c
  1057  001BCC  EC5A  F008         	call	_printf	;wreg free
  1058                           
  1059                           ;putty.c: 7: printf("%c%c%c%c",27,'[','3','J');
  1060  001BD0  0E92               	movlw	low STR_9
  1061  001BD2  6E26               	movwf	printf@f^0,c
  1062  001BD4  0E10               	movlw	high STR_9
  1063  001BD6  6E27               	movwf	(printf@f+1)^0,c
  1064  001BD8  0E00               	movlw	0
  1065  001BDA  6E29               	movwf	(?_printf+3)^0,c
  1066  001BDC  0E1B               	movlw	27
  1067  001BDE  6E28               	movwf	(?_printf+2)^0,c
  1068  001BE0  0E00               	movlw	0
  1069  001BE2  6E2B               	movwf	(?_printf+5)^0,c
  1070  001BE4  0E5B               	movlw	91
  1071  001BE6  6E2A               	movwf	(?_printf+4)^0,c
  1072  001BE8  0E00               	movlw	0
  1073  001BEA  6E2D               	movwf	(?_printf+7)^0,c
  1074  001BEC  0E33               	movlw	51
  1075  001BEE  6E2C               	movwf	(?_printf+6)^0,c
  1076  001BF0  0E00               	movlw	0
  1077  001BF2  6E2F               	movwf	(?_printf+9)^0,c
  1078  001BF4  0E4A               	movlw	74
  1079  001BF6  6E2E               	movwf	(?_printf+8)^0,c
  1080  001BF8  EC5A  F008         	call	_printf	;wreg free
  1081                           
  1082                           ;putty.c: 8: printf("%c%c%c",27,'[','H');
  1083  001BFC  0E94               	movlw	low (STR_9+2)
  1084  001BFE  6E26               	movwf	printf@f^0,c
  1085  001C00  0E10               	movlw	high (STR_9+2)
  1086  001C02  6E27               	movwf	(printf@f+1)^0,c
  1087  001C04  0E00               	movlw	0
  1088  001C06  6E29               	movwf	(?_printf+3)^0,c
  1089  001C08  0E1B               	movlw	27
  1090  001C0A  6E28               	movwf	(?_printf+2)^0,c
  1091  001C0C  0E00               	movlw	0
  1092  001C0E  6E2B               	movwf	(?_printf+5)^0,c
  1093  001C10  0E5B               	movlw	91
  1094  001C12  6E2A               	movwf	(?_printf+4)^0,c
  1095  001C14  0E00               	movlw	0
  1096  001C16  6E2D               	movwf	(?_printf+7)^0,c
  1097  001C18  0E48               	movlw	72
  1098  001C1A  6E2C               	movwf	(?_printf+6)^0,c
  1099  001C1C  EC5A  F008         	call	_printf	;wreg free
  1100  001C20  0012               	return		;funcret
  1101  001C22                     __end_of_clearPuTTY:
  1102                           	callstack 0
  1103                           
  1104 ;; *************** function _printf *****************
  1105 ;; Defined at:
  1106 ;;		line 477 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c"
  1107 ;; Parameters:    Size  Location     Type
  1108 ;;  f               2   37[COMRAM] PTR const unsigned char 
  1109 ;;		 -> STR_11(7), STR_10(9), STR_9(9), STR_8(15), 
  1110 ;;		 -> STR_7(15), STR_6(29), STR_5(9), STR_4(6), 
  1111 ;;		 -> STR_3(12), STR_2(6), STR_1(8), 
  1112 ;; Auto vars:     Size  Location     Type
  1113 ;;  idx             1    0[BANK0 ] unsigned char 
  1114 ;;  val             4    7[BANK0 ] unsigned long 
  1115 ;;  tmpval          4    0        struct .
  1116 ;;  flag            2   15[BANK0 ] unsigned short 
  1117 ;;  width           2   13[BANK0 ] int 
  1118 ;;  ap              2   11[BANK0 ] PTR void [1]
  1119 ;;		 -> ?_printf(2), 
  1120 ;;  len             2    5[BANK0 ] unsigned int 
  1121 ;;  prec            2    3[BANK0 ] int 
  1122 ;;  cp              2    1[BANK0 ] PTR const unsigned char 
  1123 ;;		 -> printf@c(1), 
  1124 ;;  c               1   17[BANK0 ] unsigned char 
  1125 ;; Return value:  Size  Location     Type
  1126 ;;                  2   37[COMRAM] int 
  1127 ;; Registers used:
  1128 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1129 ;; Tracked objects:
  1130 ;;		On entry : 0/0
  1131 ;;		On exit  : 0/0
  1132 ;;		Unchanged: 0/0
  1133 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1134 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1135 ;;      Locals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1136 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1137 ;;      Totals:        14      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1138 ;;Total ram usage:       32 bytes
  1139 ;; Hardware stack levels used:    1
  1140 ;; Hardware stack levels required when called:    8
  1141 ;; This function calls:
  1142 ;;		___lldiv
  1143 ;;		___llmod
  1144 ;;		___wmul
  1145 ;;		_isdigit
  1146 ;;		_putch
  1147 ;; This function is called by:
  1148 ;;		_main
  1149 ;;		_clearPuTTY
  1150 ;;		_printList
  1151 ;;		_rtcount_printList
  1152 ;; This function uses a non-reentrant model
  1153 ;;
  1154                           
  1155                           	psect	text3
  1156  0010B4                     __ptext3:
  1157                           	callstack 0
  1158  0010B4                     _printf:
  1159                           	callstack 22
  1160  0010B4                     
  1161                           ;doprnt.c: 479: va_list ap;;doprnt.c: 512: char c;;doprnt.c: 514: int width;;doprnt.c: 5
      +                          17: int prec;;doprnt.c: 525: unsigned short flag;;doprnt.c: 540: union {;doprnt.c: 541: 
      +                          unsigned long vd;;doprnt.c: 542: double integ;;doprnt.c: 543: } tmpval;;doprnt.c: 545: u
      +                          nsigned long val;;doprnt.c: 546: unsigned len;;doprnt.c: 547: const char * cp;;doprnt.c:
      +                           550: *ap = __va_start();
  1162  0010B4  0E28               	movlw	low (?_printf+2)
  1163  0010B6  0100               	movlb	0	; () banked
  1164  0010B8  6F6B               	movwf	printf@ap& (0+255),b
  1165  0010BA  0E00               	movlw	high (?_printf+2)
  1166  0010BC  6F6C               	movwf	(printf@ap+1)& (0+255),b
  1167                           
  1168                           ;doprnt.c: 553: while((c = *f++)) {
  1169  0010BE  EF8A  F00B         	goto	l3462
  1170  0010C2                     l3310:
  1171                           
  1172                           ; BSR set to: 0
  1173                           ;doprnt.c: 555: if(c != '%')
  1174  0010C2  0E25               	movlw	37
  1175  0010C4  1971               	xorwf	printf@c& (0+255),w,b
  1176  0010C6  B4D8               	btfsc	status,2,c
  1177  0010C8  EF68  F008         	goto	u2081
  1178  0010CC  EF6A  F008         	goto	u2080
  1179  0010D0                     u2081:
  1180  0010D0  EF6F  F008         	goto	l3314
  1181  0010D4                     u2080:
  1182  0010D4                     
  1183                           ; BSR set to: 0
  1184                           ;doprnt.c: 557: {;doprnt.c: 558: (putch(c) );
  1185  0010D4  5171               	movf	printf@c& (0+255),w,b
  1186  0010D6  ECCD  F00F         	call	_putch
  1187                           
  1188                           ;doprnt.c: 559: continue;
  1189  0010DA  EF8A  F00B         	goto	l3462
  1190  0010DE                     l3314:
  1191                           
  1192                           ; BSR set to: 0
  1193                           ;doprnt.c: 560: };doprnt.c: 563: width = 0;
  1194  0010DE  0E00               	movlw	0
  1195  0010E0  6F6E               	movwf	(printf@width+1)& (0+255),b
  1196  0010E2  0E00               	movlw	0
  1197  0010E4  6F6D               	movwf	printf@width& (0+255),b
  1198                           
  1199                           ;doprnt.c: 565: flag = 0;
  1200  0010E6  0E00               	movlw	0
  1201  0010E8  6F70               	movwf	(printf@flag+1)& (0+255),b
  1202  0010EA  0E00               	movlw	0
  1203  0010EC  6F6F               	movwf	printf@flag& (0+255),b
  1204  0010EE                     
  1205                           ; BSR set to: 0
  1206                           ;doprnt.c: 614: if(isdigit((unsigned)*f)) {
  1207  0010EE  0060  F09B  FFF6   	movff	printf@f,tblptrl
  1208  0010F4  0060  F09F  FFF7   	movff	printf@f+1,tblptrh
  1209  0010FA                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1210  0010FA  6AF8               	clrf	tblptru,c
  1211  0010FC                     	endif
  1212  0010FC                     	if	0	;tblptru may be non-zero
  1213  0010FC                     	endif
  1214  0010FC  0008               	tblrd		*
  1215  0010FE  50F5               	movf	tablat,w,c
  1216  001100  ECE1  F00E         	call	_isdigit
  1217  001104  A0D8               	btfss	status,0,c
  1218  001106  EF87  F008         	goto	u2091
  1219  00110A  EF89  F008         	goto	u2090
  1220  00110E                     u2091:
  1221  00110E  EF2F  F009         	goto	l3360
  1222  001112                     u2090:
  1223  001112                     
  1224                           ;doprnt.c: 615: width = 0;
  1225  001112  0E00               	movlw	0
  1226  001114  0100               	movlb	0	; () banked
  1227  001116  6F6E               	movwf	(printf@width+1)& (0+255),b
  1228  001118  0E00               	movlw	0
  1229  00111A  6F6D               	movwf	printf@width& (0+255),b
  1230  00111C                     l3320:
  1231                           
  1232                           ;doprnt.c: 617: width *= 10;
  1233  00111C  C06D  F010         	movff	printf@width,___wmul@multiplier
  1234  001120  C06E  F011         	movff	printf@width+1,___wmul@multiplier+1
  1235  001124  0E00               	movlw	0
  1236  001126  6E13               	movwf	(___wmul@multiplicand+1)^0,c
  1237  001128  0E0A               	movlw	10
  1238  00112A  6E12               	movwf	___wmul@multiplicand^0,c
  1239  00112C  EC13  F00F         	call	___wmul	;wreg free
  1240  001130  C010  F06D         	movff	?___wmul,printf@width
  1241  001134  C011  F06E         	movff	?___wmul+1,printf@width+1
  1242  001138                     
  1243                           ;doprnt.c: 618: width += *f++ - '0';
  1244  001138  0ED0               	movlw	208
  1245  00113A  6E30               	movwf	??_printf^0,c
  1246  00113C  0EFF               	movlw	255
  1247  00113E  6E31               	movwf	(??_printf+1)^0,c
  1248  001140  0060  F09B  FFF6   	movff	printf@f,tblptrl
  1249  001146  0060  F09F  FFF7   	movff	printf@f+1,tblptrh
  1250  00114C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1251  00114C  6AF8               	clrf	tblptru,c
  1252  00114E                     	endif
  1253  00114E                     	if	0	;tblptru may be non-zero
  1254  00114E                     	endif
  1255  00114E  0008               	tblrd		*
  1256  001150  50F5               	movf	tablat,w,c
  1257  001152  6E32               	movwf	(??_printf+2)^0,c
  1258  001154  6A33               	clrf	(??_printf+3)^0,c
  1259  001156  5030               	movf	??_printf^0,w,c
  1260  001158  2632               	addwf	(??_printf+2)^0,f,c
  1261  00115A  5031               	movf	(??_printf+1)^0,w,c
  1262  00115C  2233               	addwfc	(??_printf+3)^0,f,c
  1263  00115E  5032               	movf	(??_printf+2)^0,w,c
  1264  001160  0100               	movlb	0	; () banked
  1265  001162  276D               	addwf	printf@width& (0+255),f,b
  1266  001164  5033               	movf	(??_printf+3)^0,w,c
  1267  001166  236E               	addwfc	(printf@width+1)& (0+255),f,b
  1268  001168                     
  1269                           ; BSR set to: 0
  1270  001168  4A26               	infsnz	printf@f^0,f,c
  1271  00116A  2A27               	incf	(printf@f+1)^0,f,c
  1272  00116C                     
  1273                           ; BSR set to: 0
  1274                           ;doprnt.c: 619: } while(isdigit((unsigned)*f));
  1275  00116C  0060  F09B  FFF6   	movff	printf@f,tblptrl
  1276  001172  0060  F09F  FFF7   	movff	printf@f+1,tblptrh
  1277  001178                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1278  001178  6AF8               	clrf	tblptru,c
  1279  00117A                     	endif
  1280  00117A                     	if	0	;tblptru may be non-zero
  1281  00117A                     	endif
  1282  00117A  0008               	tblrd		*
  1283  00117C  50F5               	movf	tablat,w,c
  1284  00117E  ECE1  F00E         	call	_isdigit
  1285  001182  B0D8               	btfsc	status,0,c
  1286  001184  EFC6  F008         	goto	u2101
  1287  001188  EFC8  F008         	goto	u2100
  1288  00118C                     u2101:
  1289  00118C  EF8E  F008         	goto	l3320
  1290  001190                     u2100:
  1291  001190  EF2F  F009         	goto	l3360
  1292  001194                     l3328:
  1293                           
  1294                           ; BSR set to: 0
  1295                           ;doprnt.c: 669: flag |= 0x10;
  1296  001194  896F               	bsf	printf@flag& (0+255),4,b
  1297                           
  1298                           ;doprnt.c: 670: goto loop;
  1299  001196  EF2F  F009         	goto	l3360
  1300  00119A                     l3330:
  1301                           
  1302                           ; BSR set to: 0
  1303                           ;doprnt.c: 733: flag |= 0x2000;
  1304  00119A  8B70               	bsf	(printf@flag+1)& (0+255),5,b
  1305  00119C                     l678:
  1306                           
  1307                           ; BSR set to: 0
  1308                           ;doprnt.c: 747: flag |= 0x80;
  1309  00119C  8F6F               	bsf	printf@flag& (0+255),7,b
  1310                           
  1311                           ;doprnt.c: 749: break;
  1312  00119E  EF60  F009         	goto	l3362
  1313  0011A2                     l3332:
  1314                           
  1315                           ; BSR set to: 0
  1316                           ;doprnt.c: 783: if(((unsigned)width) > len)
  1317  0011A2  516E               	movf	(printf@width+1)& (0+255),w,b
  1318  0011A4  E109               	bnz	u2110
  1319  0011A6  0E02               	movlw	2
  1320  0011A8  5D6D               	subwf	printf@width& (0+255),w,b
  1321  0011AA  A0D8               	btfss	status,0,c
  1322  0011AC  EFDA  F008         	goto	u2111
  1323  0011B0  EFDC  F008         	goto	u2110
  1324  0011B4                     u2111:
  1325  0011B4  EFE1  F008         	goto	l3336
  1326  0011B8                     u2110:
  1327  0011B8                     
  1328                           ; BSR set to: 0
  1329                           ;doprnt.c: 784: width -= len;
  1330  0011B8  076D               	decf	printf@width& (0+255),f,b
  1331  0011BA  A0D8               	btfss	status,0,c
  1332  0011BC  076E               	decf	(printf@width+1)& (0+255),f,b
  1333  0011BE  EFEA  F008         	goto	l3340
  1334  0011C2                     l3336:
  1335                           
  1336                           ; BSR set to: 0
  1337                           ;doprnt.c: 785: else;doprnt.c: 786: width = 0;
  1338  0011C2  0E00               	movlw	0
  1339  0011C4  6F6E               	movwf	(printf@width+1)& (0+255),b
  1340  0011C6  0E00               	movlw	0
  1341  0011C8  6F6D               	movwf	printf@width& (0+255),b
  1342  0011CA  EFEA  F008         	goto	l3340
  1343  0011CE                     l3338:
  1344                           
  1345                           ; BSR set to: 0
  1346                           ;doprnt.c: 791: (putch(' ') );
  1347  0011CE  0E20               	movlw	32
  1348  0011D0  ECCD  F00F         	call	_putch
  1349  0011D4                     l3340:
  1350  0011D4  0100               	movlb	0	; () banked
  1351  0011D6  076D               	decf	printf@width& (0+255),f,b
  1352  0011D8  A0D8               	btfss	status,0,c
  1353  0011DA  076E               	decf	(printf@width+1)& (0+255),f,b
  1354  0011DC  296D               	incf	printf@width& (0+255),w,b
  1355  0011DE  E106               	bnz	u2121
  1356  0011E0  296E               	incf	(printf@width+1)& (0+255),w,b
  1357  0011E2  A4D8               	btfss	status,2,c
  1358  0011E4  EFF6  F008         	goto	u2121
  1359  0011E8  EFF8  F008         	goto	u2120
  1360  0011EC                     u2121:
  1361  0011EC  EFE7  F008         	goto	l3338
  1362  0011F0                     u2120:
  1363  0011F0  EF06  F009         	goto	l3346
  1364  0011F4                     l3342:
  1365                           
  1366                           ; BSR set to: 0
  1367                           ;doprnt.c: 794: (putch(*cp++) );
  1368  0011F4  0060  F187  FFD9   	movff	printf@cp,fsr2l
  1369  0011FA  0060  F18B  FFDA   	movff	printf@cp+1,fsr2h
  1370  001200  50DF               	movf	indf2,w,c
  1371  001202  ECCD  F00F         	call	_putch
  1372  001206  0100               	movlb	0	; () banked
  1373  001208  4B61               	infsnz	printf@cp& (0+255),f,b
  1374  00120A  2B62               	incf	(printf@cp+1)& (0+255),f,b
  1375  00120C                     l3346:
  1376                           
  1377                           ; BSR set to: 0
  1378  00120C  0765               	decf	printf@len& (0+255),f,b
  1379  00120E  A0D8               	btfss	status,0,c
  1380  001210  0766               	decf	(printf@len+1)& (0+255),f,b
  1381  001212  2965               	incf	printf@len& (0+255),w,b
  1382  001214  E106               	bnz	u2131
  1383  001216  2966               	incf	(printf@len+1)& (0+255),w,b
  1384  001218  A4D8               	btfss	status,2,c
  1385  00121A  EF11  F009         	goto	u2131
  1386  00121E  EF13  F009         	goto	u2130
  1387  001222                     u2131:
  1388  001222  EFFA  F008         	goto	l3342
  1389  001226                     u2130:
  1390  001226  EF8A  F00B         	goto	l3462
  1391  00122A                     l3348:
  1392                           
  1393                           ; BSR set to: 0
  1394                           ;doprnt.c: 825: c = (char)(*(int *)__va_arg((*(int **)ap), (int)0));
  1395  00122A  0060  F1AF  FFD9   	movff	printf@ap,fsr2l
  1396  001230  0060  F1B3  FFDA   	movff	printf@ap+1,fsr2h
  1397  001236  50DF               	movf	indf2,w,c
  1398  001238  6F71               	movwf	printf@c& (0+255),b
  1399  00123A                     
  1400                           ; BSR set to: 0
  1401  00123A  0E02               	movlw	2
  1402  00123C  276B               	addwf	printf@ap& (0+255),f,b
  1403  00123E  0E00               	movlw	0
  1404  001240  236C               	addwfc	(printf@ap+1)& (0+255),f,b
  1405  001242                     l3352:
  1406                           
  1407                           ; BSR set to: 0
  1408                           ;doprnt.c: 831: cp = (char *)&c;
  1409  001242  0E71               	movlw	low printf@c
  1410  001244  6F61               	movwf	printf@cp& (0+255),b
  1411  001246  0E00               	movlw	high printf@c
  1412  001248  6F62               	movwf	(printf@cp+1)& (0+255),b
  1413  00124A                     
  1414                           ; BSR set to: 0
  1415                           ;doprnt.c: 832: len = 1;
  1416  00124A  0E00               	movlw	0
  1417  00124C  6F66               	movwf	(printf@len+1)& (0+255),b
  1418  00124E  0E01               	movlw	1
  1419  001250  6F65               	movwf	printf@len& (0+255),b
  1420                           
  1421                           ;doprnt.c: 833: goto dostring;
  1422  001252  EFD1  F008         	goto	l3332
  1423  001256                     l3356:
  1424                           
  1425                           ; BSR set to: 0
  1426                           ;doprnt.c: 844: flag |= 0xC0;
  1427  001256  0EC0               	movlw	192
  1428  001258  136F               	iorwf	printf@flag& (0+255),f,b
  1429                           
  1430                           ;doprnt.c: 845: break;
  1431  00125A  EF60  F009         	goto	l3362
  1432  00125E                     l3360:
  1433  00125E  0060  F09B  FFF6   	movff	printf@f,tblptrl
  1434  001264  0060  F09F  FFF7   	movff	printf@f+1,tblptrh
  1435  00126A  4A26               	infsnz	printf@f^0,f,c
  1436  00126C  2A27               	incf	(printf@f+1)^0,f,c
  1437  00126E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1438  00126E  6AF8               	clrf	tblptru,c
  1439  001270                     	endif
  1440  001270                     	if	0	;tblptru may be non-zero
  1441  001270                     	endif
  1442  001270  0008               	tblrd		*
  1443  001272  006F FFD4  F071    	movff	tablat,printf@c
  1444  001278  0100               	movlb	0	; () banked
  1445  00127A  5171               	movf	printf@c& (0+255),w,b
  1446                           
  1447                           ; Switch size 1, requested type "simple"
  1448                           ; Number of cases is 8, Range of values is 0 to 120
  1449                           ; switch strategies available:
  1450                           ; Name         Instructions Cycles
  1451                           ; simple_byte           25    13 (average)
  1452                           ;	Chosen strategy is simple_byte
  1453  00127C  0A00               	xorlw	0	; case 0
  1454  00127E  B4D8               	btfsc	status,2,c
  1455  001280  EFA0  F00B         	goto	l727
  1456  001284  0A63               	xorlw	99	; case 99
  1457  001286  B4D8               	btfsc	status,2,c
  1458  001288  EF15  F009         	goto	l3348
  1459  00128C  0A07               	xorlw	7	; case 100
  1460  00128E  B4D8               	btfsc	status,2,c
  1461  001290  EF60  F009         	goto	l3362
  1462  001294  0A0D               	xorlw	13	; case 105
  1463  001296  B4D8               	btfsc	status,2,c
  1464  001298  EF60  F009         	goto	l3362
  1465  00129C  0A05               	xorlw	5	; case 108
  1466  00129E  B4D8               	btfsc	status,2,c
  1467  0012A0  EFCA  F008         	goto	l3328
  1468  0012A4  0A1C               	xorlw	28	; case 112
  1469  0012A6  B4D8               	btfsc	status,2,c
  1470  0012A8  EFCD  F008         	goto	l3330
  1471  0012AC  0A05               	xorlw	5	; case 117
  1472  0012AE  B4D8               	btfsc	status,2,c
  1473  0012B0  EF2B  F009         	goto	l3356
  1474  0012B4  0A0D               	xorlw	13	; case 120
  1475  0012B6  B4D8               	btfsc	status,2,c
  1476  0012B8  EFCE  F008         	goto	l678
  1477  0012BC  EF21  F009         	goto	l3352
  1478  0012C0                     l3362:
  1479                           
  1480                           ; BSR set to: 0
  1481                           ;doprnt.c: 1277: if((flag & (0xC0)) == 0x00)
  1482  0012C0  0EC0               	movlw	192
  1483  0012C2  156F               	andwf	printf@flag& (0+255),w,b
  1484  0012C4  6E30               	movwf	??_printf^0,c
  1485  0012C6  0E00               	movlw	0
  1486  0012C8  1570               	andwf	(printf@flag+1)& (0+255),w,b
  1487  0012CA  6E31               	movwf	(??_printf+1)^0,c
  1488  0012CC  5030               	movf	??_printf^0,w,c
  1489  0012CE  1031               	iorwf	(??_printf+1)^0,w,c
  1490  0012D0  A4D8               	btfss	status,2,c
  1491  0012D2  EF6D  F009         	goto	u2141
  1492  0012D6  EF6F  F009         	goto	u2140
  1493  0012DA                     u2141:
  1494  0012DA  EFB6  F009         	goto	l691
  1495  0012DE                     u2140:
  1496  0012DE                     
  1497                           ; BSR set to: 0
  1498                           ;doprnt.c: 1279: {;doprnt.c: 1281: if(flag & 0x10)
  1499  0012DE  A96F               	btfss	printf@flag& (0+255),4,b
  1500  0012E0  EF74  F009         	goto	u2151
  1501  0012E4  EF76  F009         	goto	u2150
  1502  0012E8                     u2151:
  1503  0012E8  EF8E  F009         	goto	l3370
  1504  0012EC                     u2150:
  1505  0012EC                     
  1506                           ; BSR set to: 0
  1507                           ;doprnt.c: 1282: val = (unsigned long)(*(long *)__va_arg((*(long **)ap), (long)0));
  1508  0012EC  0060  F1AF  FFD9   	movff	printf@ap,fsr2l
  1509  0012F2  0060  F1B3  FFDA   	movff	printf@ap+1,fsr2h
  1510  0012F8  006F FF78  F067    	movff	postinc2,printf@val
  1511  0012FE  006F FF78  F068    	movff	postinc2,printf@val+1
  1512  001304  006F FF78  F069    	movff	postinc2,printf@val+2
  1513  00130A  006F FF78  F06A    	movff	postinc2,printf@val+3
  1514  001310                     
  1515                           ; BSR set to: 0
  1516  001310  0E04               	movlw	4
  1517  001312  276B               	addwf	printf@ap& (0+255),f,b
  1518  001314  0E00               	movlw	0
  1519  001316  236C               	addwfc	(printf@ap+1)& (0+255),f,b
  1520  001318  EFA3  F009         	goto	l3374
  1521  00131C                     l3370:
  1522                           
  1523                           ; BSR set to: 0
  1524                           ;doprnt.c: 1283: else;doprnt.c: 1285: val = (unsigned long)(*(int *)__va_arg((*(int **)a
      +                          p), (int)0));
  1525  00131C  0060  F1AF  FFD9   	movff	printf@ap,fsr2l
  1526  001322  0060  F1B3  FFDA   	movff	printf@ap+1,fsr2h
  1527  001328  006F FF78  F067    	movff	postinc2,printf@val
  1528  00132E  006F FF74  F068    	movff	postdec2,printf@val+1
  1529  001334  0E00               	movlw	0
  1530  001336  BF68               	btfsc	(printf@val+1)& (0+255),7,b
  1531  001338  0EFF               	movlw	-1
  1532  00133A  6F69               	movwf	(printf@val+2)& (0+255),b
  1533  00133C  6F6A               	movwf	(printf@val+3)& (0+255),b
  1534  00133E                     
  1535                           ; BSR set to: 0
  1536  00133E  0E02               	movlw	2
  1537  001340  276B               	addwf	printf@ap& (0+255),f,b
  1538  001342  0E00               	movlw	0
  1539  001344  236C               	addwfc	(printf@ap+1)& (0+255),f,b
  1540  001346                     l3374:
  1541                           
  1542                           ; BSR set to: 0
  1543                           ;doprnt.c: 1287: if((long)val < 0) {
  1544  001346  BF6A               	btfsc	(printf@val+3)& (0+255),7,b
  1545  001348  EFAA  F009         	goto	u2160
  1546  00134C  EFA8  F009         	goto	u2161
  1547  001350                     u2161:
  1548  001350  EF6C  F00A         	goto	l3422
  1549  001354                     u2160:
  1550  001354                     
  1551                           ; BSR set to: 0
  1552                           ;doprnt.c: 1288: flag |= 0x03;
  1553  001354  0E03               	movlw	3
  1554  001356  136F               	iorwf	printf@flag& (0+255),f,b
  1555  001358                     
  1556                           ; BSR set to: 0
  1557                           ;doprnt.c: 1289: val = -val;
  1558  001358  1F6A               	comf	(printf@val+3)& (0+255),f,b
  1559  00135A  1F69               	comf	(printf@val+2)& (0+255),f,b
  1560  00135C  1F68               	comf	(printf@val+1)& (0+255),f,b
  1561  00135E  6D67               	negf	printf@val& (0+255),b
  1562  001360  0E00               	movlw	0
  1563  001362  2368               	addwfc	(printf@val+1)& (0+255),f,b
  1564  001364  2369               	addwfc	(printf@val+2)& (0+255),f,b
  1565  001366  236A               	addwfc	(printf@val+3)& (0+255),f,b
  1566  001368  EF6C  F00A         	goto	l3422
  1567  00136C                     l691:
  1568                           
  1569                           ; BSR set to: 0
  1570                           ;doprnt.c: 1294: else;doprnt.c: 1299: {;doprnt.c: 1302: if(flag & 0x2000)
  1571  00136C  AB70               	btfss	(printf@flag+1)& (0+255),5,b
  1572  00136E  EFBB  F009         	goto	u2171
  1573  001372  EFBD  F009         	goto	u2170
  1574  001376                     u2171:
  1575  001376  EFD5  F009         	goto	l696
  1576  00137A                     u2170:
  1577  00137A                     
  1578                           ; BSR set to: 0
  1579                           ;doprnt.c: 1303: val = (unsigned long)(*(__far char * *)__va_arg((*(__far char * **)ap),
      +                           (__far char *)0));
  1580  00137A  0060  F1AF  FFD9   	movff	printf@ap,fsr2l
  1581  001380  0060  F1B3  FFDA   	movff	printf@ap+1,fsr2h
  1582  001386  006F FF78  F030    	movff	postinc2,??_printf
  1583  00138C  006F FF74  F031    	movff	postdec2,??_printf+1
  1584  001392  C030  F067         	movff	??_printf,printf@val
  1585  001396  C031  F068         	movff	??_printf+1,printf@val+1
  1586  00139A  6B69               	clrf	(printf@val+2)& (0+255),b
  1587  00139C  6B6A               	clrf	(printf@val+3)& (0+255),b
  1588  00139E                     
  1589                           ; BSR set to: 0
  1590  00139E  0E02               	movlw	2
  1591  0013A0  276B               	addwf	printf@ap& (0+255),f,b
  1592  0013A2  0E00               	movlw	0
  1593  0013A4  236C               	addwfc	(printf@ap+1)& (0+255),f,b
  1594  0013A6  EF6C  F00A         	goto	l3422
  1595  0013AA                     l696:
  1596                           
  1597                           ; BSR set to: 0
  1598                           ;doprnt.c: 1304: else;doprnt.c: 1307: if(flag & 0x10)
  1599  0013AA  A96F               	btfss	printf@flag& (0+255),4,b
  1600  0013AC  EFDA  F009         	goto	u2181
  1601  0013B0  EFDC  F009         	goto	u2180
  1602  0013B4                     u2181:
  1603  0013B4  EFF4  F009         	goto	l3388
  1604  0013B8                     u2180:
  1605  0013B8                     
  1606                           ; BSR set to: 0
  1607                           ;doprnt.c: 1308: val = (*(unsigned long *)__va_arg((*(unsigned long **)ap), (unsigned lo
      +                          ng)0));
  1608  0013B8  0060  F1AF  FFD9   	movff	printf@ap,fsr2l
  1609  0013BE  0060  F1B3  FFDA   	movff	printf@ap+1,fsr2h
  1610  0013C4  006F FF78  F067    	movff	postinc2,printf@val
  1611  0013CA  006F FF78  F068    	movff	postinc2,printf@val+1
  1612  0013D0  006F FF78  F069    	movff	postinc2,printf@val+2
  1613  0013D6  006F FF78  F06A    	movff	postinc2,printf@val+3
  1614  0013DC                     
  1615                           ; BSR set to: 0
  1616  0013DC  0E04               	movlw	4
  1617  0013DE  276B               	addwf	printf@ap& (0+255),f,b
  1618  0013E0  0E00               	movlw	0
  1619  0013E2  236C               	addwfc	(printf@ap+1)& (0+255),f,b
  1620  0013E4  EF6C  F00A         	goto	l3422
  1621  0013E8                     l3388:
  1622                           
  1623                           ; BSR set to: 0
  1624                           ;doprnt.c: 1309: else;doprnt.c: 1312: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (
      +                          unsigned)0));
  1625  0013E8  0060  F1AF  FFD9   	movff	printf@ap,fsr2l
  1626  0013EE  0060  F1B3  FFDA   	movff	printf@ap+1,fsr2h
  1627  0013F4  006F FF78  F030    	movff	postinc2,??_printf
  1628  0013FA  006F FF74  F031    	movff	postdec2,??_printf+1
  1629  001400  C030  F067         	movff	??_printf,printf@val
  1630  001404  C031  F068         	movff	??_printf+1,printf@val+1
  1631  001408  6B69               	clrf	(printf@val+2)& (0+255),b
  1632  00140A  6B6A               	clrf	(printf@val+3)& (0+255),b
  1633  00140C                     
  1634                           ; BSR set to: 0
  1635  00140C  0E02               	movlw	2
  1636  00140E  276B               	addwf	printf@ap& (0+255),f,b
  1637  001410  0E00               	movlw	0
  1638  001412  236C               	addwfc	(printf@ap+1)& (0+255),f,b
  1639  001414  EF6C  F00A         	goto	l3422
  1640  001418                     l3392:
  1641                           
  1642                           ; BSR set to: 0
  1643                           ;doprnt.c: 1328: case 0xC0:;doprnt.c: 1331: for(c = 1 ; c != sizeof dpowers/sizeof dpowe
      +                          rs[0] ; c++)
  1644  001418  0E01               	movlw	1
  1645  00141A  6F71               	movwf	printf@c& (0+255),b
  1646  00141C                     l3394:
  1647                           
  1648                           ; BSR set to: 0
  1649  00141C  0E0A               	movlw	10
  1650  00141E  1971               	xorwf	printf@c& (0+255),w,b
  1651  001420  A4D8               	btfss	status,2,c
  1652  001422  EF15  F00A         	goto	u2191
  1653  001426  EF17  F00A         	goto	u2190
  1654  00142A                     u2191:
  1655  00142A  EF19  F00A         	goto	l3398
  1656  00142E                     u2190:
  1657  00142E  EF7C  F00A         	goto	l3424
  1658  001432                     l3398:
  1659                           
  1660                           ; BSR set to: 0
  1661                           ;doprnt.c: 1332: if(val < dpowers[c])
  1662  001432  5171               	movf	printf@c& (0+255),w,b
  1663  001434  0D04               	mullw	4
  1664  001436  0E01               	movlw	low _dpowers
  1665  001438  24F3               	addwf	243,w,c
  1666  00143A  6EF6               	movwf	tblptrl,c
  1667  00143C  0E10               	movlw	high _dpowers
  1668  00143E  20F4               	addwfc	244,w,c
  1669  001440  6EF7               	movwf	tblptrh,c
  1670  001442                     	if	1	;There are 3 active tblptr bytes
  1671  001442  6AF8               	clrf	tblptru,c
  1672  001444  0E00               	movlw	low (__mediumconst shr (0+16))
  1673  001446  22F8               	addwfc	tblptru,f,c
  1674  001448                     	endif
  1675  001448  0009               	tblrd		*+
  1676  00144A  50F5               	movf	tablat,w,c
  1677  00144C  5D67               	subwf	printf@val& (0+255),w,b
  1678  00144E  0009               	tblrd		*+
  1679  001450  50F5               	movf	tablat,w,c
  1680  001452  5968               	subwfb	(printf@val+1)& (0+255),w,b
  1681  001454  0009               	tblrd		*+
  1682  001456  50F5               	movf	tablat,w,c
  1683  001458  5969               	subwfb	(printf@val+2)& (0+255),w,b
  1684  00145A  0009               	tblrd		*+
  1685  00145C  50F5               	movf	tablat,w,c
  1686  00145E  596A               	subwfb	(printf@val+3)& (0+255),w,b
  1687  001460  B0D8               	btfsc	status,0,c
  1688  001462  EF35  F00A         	goto	u2201
  1689  001466  EF37  F00A         	goto	u2200
  1690  00146A                     u2201:
  1691  00146A  EF39  F00A         	goto	l3402
  1692  00146E                     u2200:
  1693  00146E  EF7C  F00A         	goto	l3424
  1694  001472                     l3402:
  1695                           
  1696                           ; BSR set to: 0
  1697  001472  2B71               	incf	printf@c& (0+255),f,b
  1698  001474  EF0E  F00A         	goto	l3394
  1699  001478                     l3406:
  1700                           
  1701                           ; BSR set to: 0
  1702                           ;doprnt.c: 1342: for(c = 1 ; c != sizeof hexpowers/sizeof hexpowers[0] ; c++)
  1703  001478  0E01               	movlw	1
  1704  00147A  6F71               	movwf	printf@c& (0+255),b
  1705  00147C                     l3408:
  1706                           
  1707                           ; BSR set to: 0
  1708  00147C  0E08               	movlw	8
  1709  00147E  1971               	xorwf	printf@c& (0+255),w,b
  1710  001480  A4D8               	btfss	status,2,c
  1711  001482  EF45  F00A         	goto	u2211
  1712  001486  EF47  F00A         	goto	u2210
  1713  00148A                     u2211:
  1714  00148A  EF49  F00A         	goto	l3412
  1715  00148E                     u2210:
  1716  00148E  EF7C  F00A         	goto	l3424
  1717  001492                     l3412:
  1718                           
  1719                           ; BSR set to: 0
  1720                           ;doprnt.c: 1343: if(val < hexpowers[c])
  1721  001492  5171               	movf	printf@c& (0+255),w,b
  1722  001494  0D04               	mullw	4
  1723  001496  0E29               	movlw	low _hexpowers
  1724  001498  24F3               	addwf	243,w,c
  1725  00149A  6EF6               	movwf	tblptrl,c
  1726  00149C  0E10               	movlw	high _hexpowers
  1727  00149E  20F4               	addwfc	244,w,c
  1728  0014A0  6EF7               	movwf	tblptrh,c
  1729  0014A2                     	if	1	;There are 3 active tblptr bytes
  1730  0014A2  6AF8               	clrf	tblptru,c
  1731  0014A4  0E00               	movlw	low (__mediumconst shr (0+16))
  1732  0014A6  22F8               	addwfc	tblptru,f,c
  1733  0014A8                     	endif
  1734  0014A8  0009               	tblrd		*+
  1735  0014AA  50F5               	movf	tablat,w,c
  1736  0014AC  5D67               	subwf	printf@val& (0+255),w,b
  1737  0014AE  0009               	tblrd		*+
  1738  0014B0  50F5               	movf	tablat,w,c
  1739  0014B2  5968               	subwfb	(printf@val+1)& (0+255),w,b
  1740  0014B4  0009               	tblrd		*+
  1741  0014B6  50F5               	movf	tablat,w,c
  1742  0014B8  5969               	subwfb	(printf@val+2)& (0+255),w,b
  1743  0014BA  0009               	tblrd		*+
  1744  0014BC  50F5               	movf	tablat,w,c
  1745  0014BE  596A               	subwfb	(printf@val+3)& (0+255),w,b
  1746  0014C0  B0D8               	btfsc	status,0,c
  1747  0014C2  EF65  F00A         	goto	u2221
  1748  0014C6  EF67  F00A         	goto	u2220
  1749  0014CA                     u2221:
  1750  0014CA  EF69  F00A         	goto	l3416
  1751  0014CE                     u2220:
  1752  0014CE  EF7C  F00A         	goto	l3424
  1753  0014D2                     l3416:
  1754                           
  1755                           ; BSR set to: 0
  1756  0014D2  2B71               	incf	printf@c& (0+255),f,b
  1757  0014D4  EF3E  F00A         	goto	l3408
  1758  0014D8                     l3422:
  1759                           
  1760                           ; BSR set to: 0
  1761  0014D8  516F               	movf	printf@flag& (0+255),w,b
  1762  0014DA  0BC0               	andlw	192
  1763                           
  1764                           ; Switch size 1, requested type "simple"
  1765                           ; Number of cases is 3, Range of values is 0 to 192
  1766                           ; switch strategies available:
  1767                           ; Name         Instructions Cycles
  1768                           ; simple_byte           10     6 (average)
  1769                           ;	Chosen strategy is simple_byte
  1770  0014DC  0A00               	xorlw	0	; case 0
  1771  0014DE  B4D8               	btfsc	status,2,c
  1772  0014E0  EF0C  F00A         	goto	l3392
  1773  0014E4  0A80               	xorlw	128	; case 128
  1774  0014E6  B4D8               	btfsc	status,2,c
  1775  0014E8  EF3C  F00A         	goto	l3406
  1776  0014EC  0A40               	xorlw	64	; case 192
  1777  0014EE  B4D8               	btfsc	status,2,c
  1778  0014F0  EF0C  F00A         	goto	l3392
  1779  0014F4  EF7C  F00A         	goto	l3424
  1780  0014F8                     l3424:
  1781                           
  1782                           ; BSR set to: 0
  1783                           ;doprnt.c: 1371: if(width && flag & 0x03)
  1784  0014F8  516D               	movf	printf@width& (0+255),w,b
  1785  0014FA  116E               	iorwf	(printf@width+1)& (0+255),w,b
  1786  0014FC  B4D8               	btfsc	status,2,c
  1787  0014FE  EF83  F00A         	goto	u2231
  1788  001502  EF85  F00A         	goto	u2230
  1789  001506                     u2231:
  1790  001506  EF97  F00A         	goto	l3430
  1791  00150A                     u2230:
  1792  00150A                     
  1793                           ; BSR set to: 0
  1794  00150A  0E03               	movlw	3
  1795  00150C  156F               	andwf	printf@flag& (0+255),w,b
  1796  00150E  6E30               	movwf	??_printf^0,c
  1797  001510  0E00               	movlw	0
  1798  001512  1570               	andwf	(printf@flag+1)& (0+255),w,b
  1799  001514  6E31               	movwf	(??_printf+1)^0,c
  1800  001516  5030               	movf	??_printf^0,w,c
  1801  001518  1031               	iorwf	(??_printf+1)^0,w,c
  1802  00151A  B4D8               	btfsc	status,2,c
  1803  00151C  EF92  F00A         	goto	u2241
  1804  001520  EF94  F00A         	goto	u2240
  1805  001524                     u2241:
  1806  001524  EF97  F00A         	goto	l3430
  1807  001528                     u2240:
  1808  001528                     
  1809                           ; BSR set to: 0
  1810                           ;doprnt.c: 1372: width--;
  1811  001528  076D               	decf	printf@width& (0+255),f,b
  1812  00152A  A0D8               	btfss	status,0,c
  1813  00152C  076E               	decf	(printf@width+1)& (0+255),f,b
  1814  00152E                     l3430:
  1815                           
  1816                           ; BSR set to: 0
  1817                           ;doprnt.c: 1407: if(width > c)
  1818  00152E  5171               	movf	printf@c& (0+255),w,b
  1819  001530  6E30               	movwf	??_printf^0,c
  1820  001532  6A31               	clrf	(??_printf+1)^0,c
  1821  001534  516D               	movf	printf@width& (0+255),w,b
  1822  001536  5C30               	subwf	??_printf^0,w,c
  1823  001538  5031               	movf	(??_printf+1)^0,w,c
  1824  00153A  0A80               	xorlw	128
  1825  00153C  6E32               	movwf	(??_printf+2)^0,c
  1826  00153E  516E               	movf	(printf@width+1)& (0+255),w,b
  1827  001540  0A80               	xorlw	128
  1828  001542  5832               	subwfb	(??_printf+2)^0,w,c
  1829  001544  B0D8               	btfsc	status,0,c
  1830  001546  EFA7  F00A         	goto	u2251
  1831  00154A  EFA9  F00A         	goto	u2250
  1832  00154E                     u2251:
  1833  00154E  EFAF  F00A         	goto	l3434
  1834  001552                     u2250:
  1835  001552                     
  1836                           ; BSR set to: 0
  1837                           ;doprnt.c: 1408: width -= c;
  1838  001552  5171               	movf	printf@c& (0+255),w,b
  1839  001554  5F6D               	subwf	printf@width& (0+255),f,b
  1840  001556  0E00               	movlw	0
  1841  001558  5B6E               	subwfb	(printf@width+1)& (0+255),f,b
  1842  00155A  EFB3  F00A         	goto	l3436
  1843  00155E                     l3434:
  1844                           
  1845                           ; BSR set to: 0
  1846                           ;doprnt.c: 1409: else;doprnt.c: 1410: width = 0;
  1847  00155E  0E00               	movlw	0
  1848  001560  6F6E               	movwf	(printf@width+1)& (0+255),b
  1849  001562  0E00               	movlw	0
  1850  001564  6F6D               	movwf	printf@width& (0+255),b
  1851  001566                     l3436:
  1852                           
  1853                           ; BSR set to: 0
  1854                           ;doprnt.c: 1448: {;doprnt.c: 1450: if(width;doprnt.c: 1454: )
  1855  001566  516D               	movf	printf@width& (0+255),w,b
  1856  001568  116E               	iorwf	(printf@width+1)& (0+255),w,b
  1857  00156A  B4D8               	btfsc	status,2,c
  1858  00156C  EFBA  F00A         	goto	u2261
  1859  001570  EFBC  F00A         	goto	u2260
  1860  001574                     u2261:
  1861  001574  EFCC  F00A         	goto	l3442
  1862  001578                     u2260:
  1863  001578                     l3438:
  1864                           
  1865                           ; BSR set to: 0
  1866                           ;doprnt.c: 1456: (putch(' ') );
  1867  001578  0E20               	movlw	32
  1868  00157A  ECCD  F00F         	call	_putch
  1869  00157E                     
  1870                           ;doprnt.c: 1457: while(--width);
  1871  00157E  0100               	movlb	0	; () banked
  1872  001580  076D               	decf	printf@width& (0+255),f,b
  1873  001582  A0D8               	btfss	status,0,c
  1874  001584  076E               	decf	(printf@width+1)& (0+255),f,b
  1875  001586  516D               	movf	printf@width& (0+255),w,b
  1876  001588  116E               	iorwf	(printf@width+1)& (0+255),w,b
  1877  00158A  A4D8               	btfss	status,2,c
  1878  00158C  EFCA  F00A         	goto	u2271
  1879  001590  EFCC  F00A         	goto	u2270
  1880  001594                     u2271:
  1881  001594  EFBC  F00A         	goto	l3438
  1882  001598                     u2270:
  1883  001598                     l3442:
  1884                           
  1885                           ; BSR set to: 0
  1886                           ;doprnt.c: 1464: if(flag & 0x03)
  1887  001598  0E03               	movlw	3
  1888  00159A  156F               	andwf	printf@flag& (0+255),w,b
  1889  00159C  6E30               	movwf	??_printf^0,c
  1890  00159E  0E00               	movlw	0
  1891  0015A0  1570               	andwf	(printf@flag+1)& (0+255),w,b
  1892  0015A2  6E31               	movwf	(??_printf+1)^0,c
  1893  0015A4  5030               	movf	??_printf^0,w,c
  1894  0015A6  1031               	iorwf	(??_printf+1)^0,w,c
  1895  0015A8  B4D8               	btfsc	status,2,c
  1896  0015AA  EFD9  F00A         	goto	u2281
  1897  0015AE  EFDB  F00A         	goto	u2280
  1898  0015B2                     u2281:
  1899  0015B2  EFDE  F00A         	goto	l3446
  1900  0015B6                     u2280:
  1901  0015B6                     
  1902                           ; BSR set to: 0
  1903                           ;doprnt.c: 1465: (putch('-') );
  1904  0015B6  0E2D               	movlw	45
  1905  0015B8  ECCD  F00F         	call	_putch
  1906  0015BC                     l3446:
  1907                           
  1908                           ;doprnt.c: 1495: };doprnt.c: 1498: prec = c;
  1909  0015BC  C071  F063         	movff	printf@c,printf@prec
  1910  0015C0  0100               	movlb	0	; () banked
  1911  0015C2  6B64               	clrf	(printf@prec+1)& (0+255),b
  1912                           
  1913                           ;doprnt.c: 1500: while(prec--) {
  1914  0015C4  EF7C  F00B         	goto	l3460
  1915  0015C8                     l3448:
  1916                           
  1917                           ; BSR set to: 0
  1918                           ;doprnt.c: 1512: case 0xC0:;doprnt.c: 1515: c = (val / dpowers[(unsigned int)prec]) % 10
      +                           + '0';
  1919  0015C8  C063  F030         	movff	printf@prec,??_printf
  1920  0015CC  C064  F031         	movff	printf@prec+1,??_printf+1
  1921  0015D0  90D8               	bcf	status,0,c
  1922  0015D2  3630               	rlcf	??_printf^0,f,c
  1923  0015D4  3631               	rlcf	(??_printf+1)^0,f,c
  1924  0015D6  90D8               	bcf	status,0,c
  1925  0015D8  3630               	rlcf	??_printf^0,f,c
  1926  0015DA  3631               	rlcf	(??_printf+1)^0,f,c
  1927  0015DC  0E01               	movlw	low _dpowers
  1928  0015DE  2430               	addwf	??_printf^0,w,c
  1929  0015E0  6EF6               	movwf	tblptrl,c
  1930  0015E2  0E10               	movlw	high _dpowers
  1931  0015E4  2031               	addwfc	(??_printf+1)^0,w,c
  1932  0015E6  6EF7               	movwf	tblptrh,c
  1933  0015E8                     	if	1	;There are 3 active tblptr bytes
  1934  0015E8  6AF8               	clrf	tblptru,c
  1935  0015EA  0E00               	movlw	low (__mediumconst shr (0+16))
  1936  0015EC  22F8               	addwfc	tblptru,f,c
  1937  0015EE                     	endif
  1938  0015EE  0009               	tblrd		*+
  1939  0015F0  006F FFD4  F014    	movff	tablat,___lldiv@divisor
  1940  0015F6  0009               	tblrd		*+
  1941  0015F8  006F FFD4  F015    	movff	tablat,___lldiv@divisor+1
  1942  0015FE  0009               	tblrd		*+
  1943  001600  006F FFD4  F016    	movff	tablat,___lldiv@divisor+2
  1944  001606  000A               	tblrd		*-
  1945  001608  006F FFD4  F017    	movff	tablat,___lldiv@divisor+3
  1946  00160E  C067  F010         	movff	printf@val,___lldiv@dividend
  1947  001612  C068  F011         	movff	printf@val+1,___lldiv@dividend+1
  1948  001616  C069  F012         	movff	printf@val+2,___lldiv@dividend+2
  1949  00161A  C06A  F013         	movff	printf@val+3,___lldiv@dividend+3
  1950  00161E  ECED  F00C         	call	___lldiv	;wreg free
  1951  001622  C010  F01D         	movff	?___lldiv,___llmod@dividend
  1952  001626  C011  F01E         	movff	?___lldiv+1,___llmod@dividend+1
  1953  00162A  C012  F01F         	movff	?___lldiv+2,___llmod@dividend+2
  1954  00162E  C013  F020         	movff	?___lldiv+3,___llmod@dividend+3
  1955  001632  0E0A               	movlw	10
  1956  001634  6E21               	movwf	___llmod@divisor^0,c
  1957  001636  0E00               	movlw	0
  1958  001638  6E22               	movwf	(___llmod@divisor+1)^0,c
  1959  00163A  0E00               	movlw	0
  1960  00163C  6E23               	movwf	(___llmod@divisor+2)^0,c
  1961  00163E  0E00               	movlw	0
  1962  001640  6E24               	movwf	(___llmod@divisor+3)^0,c
  1963  001642  EC8E  F00D         	call	___llmod	;wreg free
  1964  001646  501D               	movf	?___llmod^0,w,c
  1965  001648  0F30               	addlw	48
  1966  00164A  0100               	movlb	0	; () banked
  1967  00164C  6F71               	movwf	printf@c& (0+255),b
  1968                           
  1969                           ;doprnt.c: 1517: break;
  1970  00164E  EF79  F00B         	goto	l3458
  1971  001652                     l3450:
  1972                           
  1973                           ; BSR set to: 0
  1974                           ;doprnt.c: 1525: {;doprnt.c: 1526: unsigned char idx = (val / hexpowers[(unsigned int)pr
      +                          ec]) & 0xF;
  1975  001652  C067  F010         	movff	printf@val,___lldiv@dividend
  1976  001656  C068  F011         	movff	printf@val+1,___lldiv@dividend+1
  1977  00165A  C069  F012         	movff	printf@val+2,___lldiv@dividend+2
  1978  00165E  C06A  F013         	movff	printf@val+3,___lldiv@dividend+3
  1979  001662  C063  F030         	movff	printf@prec,??_printf
  1980  001666  C064  F031         	movff	printf@prec+1,??_printf+1
  1981  00166A  90D8               	bcf	status,0,c
  1982  00166C  3630               	rlcf	??_printf^0,f,c
  1983  00166E  3631               	rlcf	(??_printf+1)^0,f,c
  1984  001670  90D8               	bcf	status,0,c
  1985  001672  3630               	rlcf	??_printf^0,f,c
  1986  001674  3631               	rlcf	(??_printf+1)^0,f,c
  1987  001676  0E29               	movlw	low _hexpowers
  1988  001678  2430               	addwf	??_printf^0,w,c
  1989  00167A  6EF6               	movwf	tblptrl,c
  1990  00167C  0E10               	movlw	high _hexpowers
  1991  00167E  2031               	addwfc	(??_printf+1)^0,w,c
  1992  001680  6EF7               	movwf	tblptrh,c
  1993  001682                     	if	1	;There are 3 active tblptr bytes
  1994  001682  6AF8               	clrf	tblptru,c
  1995  001684  0E00               	movlw	low (__mediumconst shr (0+16))
  1996  001686  22F8               	addwfc	tblptru,f,c
  1997  001688                     	endif
  1998  001688  0009               	tblrd		*+
  1999  00168A  006F FFD4  F014    	movff	tablat,___lldiv@divisor
  2000  001690  0009               	tblrd		*+
  2001  001692  006F FFD4  F015    	movff	tablat,___lldiv@divisor+1
  2002  001698  0009               	tblrd		*+
  2003  00169A  006F FFD4  F016    	movff	tablat,___lldiv@divisor+2
  2004  0016A0  000A               	tblrd		*-
  2005  0016A2  006F FFD4  F017    	movff	tablat,___lldiv@divisor+3
  2006  0016A8  ECED  F00C         	call	___lldiv	;wreg free
  2007  0016AC  5010               	movf	?___lldiv^0,w,c
  2008  0016AE  0B0F               	andlw	15
  2009  0016B0  0100               	movlb	0	; () banked
  2010  0016B2  6F60               	movwf	printf@idx& (0+255),b
  2011  0016B4                     
  2012                           ; BSR set to: 0
  2013                           ;doprnt.c: 1532: c = "0123456789abcdef"[idx];
  2014  0016B4  0E66               	movlw	low STR_12
  2015  0016B6  2560               	addwf	printf@idx& (0+255),w,b
  2016  0016B8  6EF6               	movwf	tblptrl,c
  2017  0016BA  6AF7               	clrf	tblptrh,c
  2018  0016BC  0E10               	movlw	high STR_12
  2019  0016BE  22F7               	addwfc	tblptrh,f,c
  2020  0016C0                     	if	1	;There are 3 active tblptr bytes
  2021  0016C0  6AF8               	clrf	tblptru,c
  2022  0016C2  0E00               	movlw	low (__mediumconst shr (0+16))
  2023  0016C4  22F8               	addwfc	tblptru,f,c
  2024  0016C6                     	endif
  2025  0016C6  0008               	tblrd		*
  2026  0016C8  006F FFD4  F071    	movff	tablat,printf@c
  2027                           
  2028                           ;doprnt.c: 1534: };doprnt.c: 1536: break;
  2029  0016CE  EF79  F00B         	goto	l3458
  2030  0016D2                     l3456:
  2031                           
  2032                           ; BSR set to: 0
  2033  0016D2  516F               	movf	printf@flag& (0+255),w,b
  2034  0016D4  0BC0               	andlw	192
  2035                           
  2036                           ; Switch size 1, requested type "simple"
  2037                           ; Number of cases is 3, Range of values is 0 to 192
  2038                           ; switch strategies available:
  2039                           ; Name         Instructions Cycles
  2040                           ; simple_byte           10     6 (average)
  2041                           ;	Chosen strategy is simple_byte
  2042  0016D6  0A00               	xorlw	0	; case 0
  2043  0016D8  B4D8               	btfsc	status,2,c
  2044  0016DA  EFE4  F00A         	goto	l3448
  2045  0016DE  0A80               	xorlw	128	; case 128
  2046  0016E0  B4D8               	btfsc	status,2,c
  2047  0016E2  EF29  F00B         	goto	l3450
  2048  0016E6  0A40               	xorlw	64	; case 192
  2049  0016E8  B4D8               	btfsc	status,2,c
  2050  0016EA  EFE4  F00A         	goto	l3448
  2051  0016EE  EF79  F00B         	goto	l3458
  2052  0016F2                     l3458:
  2053                           
  2054                           ; BSR set to: 0
  2055                           ;doprnt.c: 1550: (putch(c) );
  2056  0016F2  5171               	movf	printf@c& (0+255),w,b
  2057  0016F4  ECCD  F00F         	call	_putch
  2058  0016F8                     l3460:
  2059  0016F8  0100               	movlb	0	; () banked
  2060  0016FA  0763               	decf	printf@prec& (0+255),f,b
  2061  0016FC  A0D8               	btfss	status,0,c
  2062  0016FE  0764               	decf	(printf@prec+1)& (0+255),f,b
  2063  001700  2963               	incf	printf@prec& (0+255),w,b
  2064  001702  E106               	bnz	u2291
  2065  001704  2964               	incf	(printf@prec+1)& (0+255),w,b
  2066  001706  A4D8               	btfss	status,2,c
  2067  001708  EF88  F00B         	goto	u2291
  2068  00170C  EF8A  F00B         	goto	u2290
  2069  001710                     u2291:
  2070  001710  EF69  F00B         	goto	l3456
  2071  001714                     u2290:
  2072  001714                     l3462:
  2073  001714  0060  F09B  FFF6   	movff	printf@f,tblptrl
  2074  00171A  0060  F09F  FFF7   	movff	printf@f+1,tblptrh
  2075  001720  4A26               	infsnz	printf@f^0,f,c
  2076  001722  2A27               	incf	(printf@f+1)^0,f,c
  2077  001724                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2078  001724  6AF8               	clrf	tblptru,c
  2079  001726                     	endif
  2080  001726                     	if	0	;tblptru may be non-zero
  2081  001726                     	endif
  2082  001726  0008               	tblrd		*
  2083  001728  006F FFD4  F071    	movff	tablat,printf@c
  2084  00172E  0100               	movlb	0	; () banked
  2085  001730  5171               	movf	printf@c& (0+255),w,b
  2086  001732  A4D8               	btfss	status,2,c
  2087  001734  EF9E  F00B         	goto	u2301
  2088  001738  EFA0  F00B         	goto	u2300
  2089  00173C                     u2301:
  2090  00173C  EF61  F008         	goto	l3310
  2091  001740                     u2300:
  2092  001740                     l727:
  2093                           
  2094                           ; BSR set to: 0
  2095  001740  0012               	return		;funcret
  2096  001742                     __end_of_printf:
  2097                           	callstack 0
  2098                           
  2099 ;; *************** function _putch *****************
  2100 ;; Defined at:
  2101 ;;		line 175 in file "mcc_generated_files/uart2.c"
  2102 ;; Parameters:    Size  Location     Type
  2103 ;;  txData          1    wreg     unsigned char 
  2104 ;; Auto vars:     Size  Location     Type
  2105 ;;  txData          1   16[COMRAM] unsigned char 
  2106 ;; Return value:  Size  Location     Type
  2107 ;;                  1    wreg      void 
  2108 ;; Registers used:
  2109 ;;		wreg, status,2, cstack
  2110 ;; Tracked objects:
  2111 ;;		On entry : 0/0
  2112 ;;		On exit  : 0/0
  2113 ;;		Unchanged: 0/0
  2114 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2115 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2116 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2117 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2118 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2119 ;;Total ram usage:        1 bytes
  2120 ;; Hardware stack levels used:    1
  2121 ;; Hardware stack levels required when called:    7
  2122 ;; This function calls:
  2123 ;;		_UART2_Write
  2124 ;; This function is called by:
  2125 ;;		_printf
  2126 ;; This function uses a non-reentrant model
  2127 ;;
  2128                           
  2129                           	psect	text4
  2130  001F9A                     __ptext4:
  2131                           	callstack 0
  2132  001F9A                     _putch:
  2133                           	callstack 22
  2134                           
  2135                           ; BSR set to: 0
  2136                           ;incstack = 0
  2137                           ;putch@txData stored from wreg
  2138  001F9A  6E11               	movwf	putch@txData^0,c
  2139  001F9C                     
  2140                           ;uart2.c: 177: UART2_Write(txData);
  2141  001F9C  5011               	movf	putch@txData^0,w,c
  2142  001F9E  EC98  F00F         	call	_UART2_Write
  2143  001FA2  0012               	return		;funcret
  2144  001FA4                     __end_of_putch:
  2145                           	callstack 0
  2146                           
  2147 ;; *************** function _UART2_Write *****************
  2148 ;; Defined at:
  2149 ;;		line 161 in file "mcc_generated_files/uart2.c"
  2150 ;; Parameters:    Size  Location     Type
  2151 ;;  txData          1    wreg     unsigned char 
  2152 ;; Auto vars:     Size  Location     Type
  2153 ;;  txData          1   15[COMRAM] unsigned char 
  2154 ;; Return value:  Size  Location     Type
  2155 ;;                  1    wreg      void 
  2156 ;; Registers used:
  2157 ;;		wreg
  2158 ;; Tracked objects:
  2159 ;;		On entry : 0/0
  2160 ;;		On exit  : 0/0
  2161 ;;		Unchanged: 0/0
  2162 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2163 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2164 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2165 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2166 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2167 ;;Total ram usage:        1 bytes
  2168 ;; Hardware stack levels used:    1
  2169 ;; Hardware stack levels required when called:    6
  2170 ;; This function calls:
  2171 ;;		Nothing
  2172 ;; This function is called by:
  2173 ;;		_putch
  2174 ;; This function uses a non-reentrant model
  2175 ;;
  2176                           
  2177                           	psect	text5
  2178  001F30                     __ptext5:
  2179                           	callstack 0
  2180  001F30                     _UART2_Write:
  2181                           	callstack 22
  2182                           
  2183                           ;incstack = 0
  2184                           ;UART2_Write@txData stored from wreg
  2185  001F30  6E10               	movwf	UART2_Write@txData^0,c
  2186  001F32                     l295:
  2187  001F32  0139               	movlb	57	; () banked
  2188  001F34  A7A6               	btfss	166,3,b	;volatile
  2189  001F36  EF9F  F00F         	goto	u1991
  2190  001F3A  EFA1  F00F         	goto	u1990
  2191  001F3E                     u1991:
  2192  001F3E  EF99  F00F         	goto	l295
  2193  001F42                     u1990:
  2194  001F42                     
  2195                           ; BSR set to: 57
  2196                           ;uart2.c: 165: };uart2.c: 167: U2TXB = txData;
  2197  001F42  0060  F043  FDD2   	movff	UART2_Write@txData,15826	;volatile
  2198  001F48                     
  2199                           ; BSR set to: 57
  2200  001F48  0012               	return		;funcret
  2201  001F4A                     __end_of_UART2_Write:
  2202                           	callstack 0
  2203                           
  2204 ;; *************** function _isdigit *****************
  2205 ;; Defined at:
  2206 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\isdigit.c"
  2207 ;; Parameters:    Size  Location     Type
  2208 ;;  c               1    wreg     unsigned char 
  2209 ;; Auto vars:     Size  Location     Type
  2210 ;;  c               1   17[COMRAM] unsigned char 
  2211 ;; Return value:  Size  Location     Type
  2212 ;;		None               void
  2213 ;; Registers used:
  2214 ;;		wreg, status,2, status,0
  2215 ;; Tracked objects:
  2216 ;;		On entry : 0/0
  2217 ;;		On exit  : 0/0
  2218 ;;		Unchanged: 0/0
  2219 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2220 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2221 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2222 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2223 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2224 ;;Total ram usage:        3 bytes
  2225 ;; Hardware stack levels used:    1
  2226 ;; Hardware stack levels required when called:    6
  2227 ;; This function calls:
  2228 ;;		Nothing
  2229 ;; This function is called by:
  2230 ;;		_printf
  2231 ;; This function uses a non-reentrant model
  2232 ;;
  2233                           
  2234                           	psect	text6
  2235  001DC2                     __ptext6:
  2236                           	callstack 0
  2237  001DC2                     _isdigit:
  2238                           	callstack 23
  2239                           
  2240                           ; BSR set to: 57
  2241                           ;incstack = 0
  2242                           ;isdigit@c stored from wreg
  2243  001DC2  6E12               	movwf	isdigit@c^0,c
  2244  001DC4  0E00               	movlw	0
  2245  001DC6  6E11               	movwf	_isdigit$1671^0,c
  2246  001DC8  0E3A               	movlw	58
  2247  001DCA  6012               	cpfslt	isdigit@c^0,c
  2248  001DCC  EFEA  F00E         	goto	u2001
  2249  001DD0  EFEC  F00E         	goto	u2000
  2250  001DD4                     u2001:
  2251  001DD4  EFF6  F00E         	goto	l3260
  2252  001DD8                     u2000:
  2253  001DD8  0E2F               	movlw	47
  2254  001DDA  6412               	cpfsgt	isdigit@c^0,c
  2255  001DDC  EFF2  F00E         	goto	u2011
  2256  001DE0  EFF4  F00E         	goto	u2010
  2257  001DE4                     u2011:
  2258  001DE4  EFF6  F00E         	goto	l3260
  2259  001DE8                     u2010:
  2260  001DE8  0E01               	movlw	1
  2261  001DEA  6E11               	movwf	_isdigit$1671^0,c
  2262  001DEC                     l3260:
  2263  001DEC  C011  F010         	movff	_isdigit$1671,??_isdigit
  2264  001DF0  3010               	rrcf	??_isdigit^0,w,c
  2265  001DF2  0012               	return		;funcret
  2266  001DF4                     __end_of_isdigit:
  2267                           	callstack 0
  2268                           
  2269 ;; *************** function ___wmul *****************
  2270 ;; Defined at:
  2271 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\Umul16.c"
  2272 ;; Parameters:    Size  Location     Type
  2273 ;;  multiplier      2   15[COMRAM] unsigned int 
  2274 ;;  multiplicand    2   17[COMRAM] unsigned int 
  2275 ;; Auto vars:     Size  Location     Type
  2276 ;;  product         2   19[COMRAM] unsigned int 
  2277 ;; Return value:  Size  Location     Type
  2278 ;;                  2   15[COMRAM] unsigned int 
  2279 ;; Registers used:
  2280 ;;		wreg, status,2, status,0, prodl, prodh
  2281 ;; Tracked objects:
  2282 ;;		On entry : 0/0
  2283 ;;		On exit  : 0/0
  2284 ;;		Unchanged: 0/0
  2285 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2286 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2287 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2288 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2289 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2290 ;;Total ram usage:        6 bytes
  2291 ;; Hardware stack levels used:    1
  2292 ;; Hardware stack levels required when called:    6
  2293 ;; This function calls:
  2294 ;;		Nothing
  2295 ;; This function is called by:
  2296 ;;		_printf
  2297 ;; This function uses a non-reentrant model
  2298 ;;
  2299                           
  2300                           	psect	text7
  2301  001E26                     __ptext7:
  2302                           	callstack 0
  2303  001E26                     ___wmul:
  2304                           	callstack 23
  2305  001E26  5010               	movf	___wmul@multiplier^0,w,c
  2306  001E28  0212               	mulwf	___wmul@multiplicand^0,c
  2307  001E2A  006F FFCC  F014    	movff	prodl,___wmul@product
  2308  001E30  006F FFD0  F015    	movff	prodh,___wmul@product+1
  2309  001E36  5010               	movf	___wmul@multiplier^0,w,c
  2310  001E38  0213               	mulwf	(___wmul@multiplicand+1)^0,c
  2311  001E3A  50F3               	movf	243,w,c
  2312  001E3C  2615               	addwf	(___wmul@product+1)^0,f,c
  2313  001E3E  5011               	movf	(___wmul@multiplier+1)^0,w,c
  2314  001E40  0212               	mulwf	___wmul@multiplicand^0,c
  2315  001E42  50F3               	movf	243,w,c
  2316  001E44  2615               	addwf	(___wmul@product+1)^0,f,c
  2317  001E46  C014  F010         	movff	___wmul@product,?___wmul
  2318  001E4A  C015  F011         	movff	___wmul@product+1,?___wmul+1
  2319  001E4E  0012               	return		;funcret
  2320  001E50                     __end_of___wmul:
  2321                           	callstack 0
  2322                           
  2323 ;; *************** function ___llmod *****************
  2324 ;; Defined at:
  2325 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\llmod.c"
  2326 ;; Parameters:    Size  Location     Type
  2327 ;;  dividend        4   28[COMRAM] unsigned long 
  2328 ;;  divisor         4   32[COMRAM] unsigned long 
  2329 ;; Auto vars:     Size  Location     Type
  2330 ;;  counter         1   36[COMRAM] unsigned char 
  2331 ;; Return value:  Size  Location     Type
  2332 ;;                  4   28[COMRAM] unsigned long 
  2333 ;; Registers used:
  2334 ;;		wreg, status,2, status,0
  2335 ;; Tracked objects:
  2336 ;;		On entry : 0/0
  2337 ;;		On exit  : 0/0
  2338 ;;		Unchanged: 0/0
  2339 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2340 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2341 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2342 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2343 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2344 ;;Total ram usage:        9 bytes
  2345 ;; Hardware stack levels used:    1
  2346 ;; Hardware stack levels required when called:    6
  2347 ;; This function calls:
  2348 ;;		Nothing
  2349 ;; This function is called by:
  2350 ;;		_printf
  2351 ;; This function uses a non-reentrant model
  2352 ;;
  2353                           
  2354                           	psect	text8
  2355  001B1C                     __ptext8:
  2356                           	callstack 0
  2357  001B1C                     ___llmod:
  2358                           	callstack 23
  2359  001B1C  5021               	movf	___llmod@divisor^0,w,c
  2360  001B1E  1022               	iorwf	(___llmod@divisor+1)^0,w,c
  2361  001B20  1023               	iorwf	(___llmod@divisor+2)^0,w,c
  2362  001B22  1024               	iorwf	(___llmod@divisor+3)^0,w,c
  2363  001B24  B4D8               	btfsc	status,2,c
  2364  001B26  EF97  F00D         	goto	u2051
  2365  001B2A  EF99  F00D         	goto	u2050
  2366  001B2E                     u2051:
  2367  001B2E  EFC9  F00D         	goto	l1138
  2368  001B32                     u2050:
  2369  001B32  0E01               	movlw	1
  2370  001B34  6E25               	movwf	___llmod@counter^0,c
  2371  001B36  EFA3  F00D         	goto	l3298
  2372  001B3A                     l3296:
  2373  001B3A  90D8               	bcf	status,0,c
  2374  001B3C  3621               	rlcf	___llmod@divisor^0,f,c
  2375  001B3E  3622               	rlcf	(___llmod@divisor+1)^0,f,c
  2376  001B40  3623               	rlcf	(___llmod@divisor+2)^0,f,c
  2377  001B42  3624               	rlcf	(___llmod@divisor+3)^0,f,c
  2378  001B44  2A25               	incf	___llmod@counter^0,f,c
  2379  001B46                     l3298:
  2380  001B46  AE24               	btfss	(___llmod@divisor+3)^0,7,c
  2381  001B48  EFA8  F00D         	goto	u2061
  2382  001B4C  EFAA  F00D         	goto	u2060
  2383  001B50                     u2061:
  2384  001B50  EF9D  F00D         	goto	l3296
  2385  001B54                     u2060:
  2386  001B54                     l3300:
  2387  001B54  5021               	movf	___llmod@divisor^0,w,c
  2388  001B56  5C1D               	subwf	___llmod@dividend^0,w,c
  2389  001B58  5022               	movf	(___llmod@divisor+1)^0,w,c
  2390  001B5A  581E               	subwfb	(___llmod@dividend+1)^0,w,c
  2391  001B5C  5023               	movf	(___llmod@divisor+2)^0,w,c
  2392  001B5E  581F               	subwfb	(___llmod@dividend+2)^0,w,c
  2393  001B60  5024               	movf	(___llmod@divisor+3)^0,w,c
  2394  001B62  5820               	subwfb	(___llmod@dividend+3)^0,w,c
  2395  001B64  A0D8               	btfss	status,0,c
  2396  001B66  EFB7  F00D         	goto	u2071
  2397  001B6A  EFB9  F00D         	goto	u2070
  2398  001B6E                     u2071:
  2399  001B6E  EFC1  F00D         	goto	l3304
  2400  001B72                     u2070:
  2401  001B72  5021               	movf	___llmod@divisor^0,w,c
  2402  001B74  5E1D               	subwf	___llmod@dividend^0,f,c
  2403  001B76  5022               	movf	(___llmod@divisor+1)^0,w,c
  2404  001B78  5A1E               	subwfb	(___llmod@dividend+1)^0,f,c
  2405  001B7A  5023               	movf	(___llmod@divisor+2)^0,w,c
  2406  001B7C  5A1F               	subwfb	(___llmod@dividend+2)^0,f,c
  2407  001B7E  5024               	movf	(___llmod@divisor+3)^0,w,c
  2408  001B80  5A20               	subwfb	(___llmod@dividend+3)^0,f,c
  2409  001B82                     l3304:
  2410  001B82  90D8               	bcf	status,0,c
  2411  001B84  3224               	rrcf	(___llmod@divisor+3)^0,f,c
  2412  001B86  3223               	rrcf	(___llmod@divisor+2)^0,f,c
  2413  001B88  3222               	rrcf	(___llmod@divisor+1)^0,f,c
  2414  001B8A  3221               	rrcf	___llmod@divisor^0,f,c
  2415  001B8C  2E25               	decfsz	___llmod@counter^0,f,c
  2416  001B8E  EFAA  F00D         	goto	l3300
  2417  001B92                     l1138:
  2418  001B92  C01D  F01D         	movff	___llmod@dividend,?___llmod
  2419  001B96  C01E  F01E         	movff	___llmod@dividend+1,?___llmod+1
  2420  001B9A  C01F  F01F         	movff	___llmod@dividend+2,?___llmod+2
  2421  001B9E  C020  F020         	movff	___llmod@dividend+3,?___llmod+3
  2422  001BA2  0012               	return		;funcret
  2423  001BA4                     __end_of___llmod:
  2424                           	callstack 0
  2425                           
  2426 ;; *************** function ___lldiv *****************
  2427 ;; Defined at:
  2428 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\__lldiv.c"
  2429 ;; Parameters:    Size  Location     Type
  2430 ;;  dividend        4   15[COMRAM] unsigned long 
  2431 ;;  divisor         4   19[COMRAM] unsigned long 
  2432 ;; Auto vars:     Size  Location     Type
  2433 ;;  quotient        4   23[COMRAM] unsigned long 
  2434 ;;  counter         1   27[COMRAM] unsigned char 
  2435 ;; Return value:  Size  Location     Type
  2436 ;;                  4   15[COMRAM] unsigned long 
  2437 ;; Registers used:
  2438 ;;		wreg, status,2, status,0
  2439 ;; Tracked objects:
  2440 ;;		On entry : 0/0
  2441 ;;		On exit  : 0/0
  2442 ;;		Unchanged: 0/0
  2443 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2444 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2445 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2446 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2447 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2448 ;;Total ram usage:       13 bytes
  2449 ;; Hardware stack levels used:    1
  2450 ;; Hardware stack levels required when called:    6
  2451 ;; This function calls:
  2452 ;;		Nothing
  2453 ;; This function is called by:
  2454 ;;		_printf
  2455 ;; This function uses a non-reentrant model
  2456 ;;
  2457                           
  2458                           	psect	text9
  2459  0019DA                     __ptext9:
  2460                           	callstack 0
  2461  0019DA                     ___lldiv:
  2462                           	callstack 23
  2463  0019DA  0E00               	movlw	0
  2464  0019DC  6E18               	movwf	___lldiv@quotient^0,c
  2465  0019DE  0E00               	movlw	0
  2466  0019E0  6E19               	movwf	(___lldiv@quotient+1)^0,c
  2467  0019E2  0E00               	movlw	0
  2468  0019E4  6E1A               	movwf	(___lldiv@quotient+2)^0,c
  2469  0019E6  0E00               	movlw	0
  2470  0019E8  6E1B               	movwf	(___lldiv@quotient+3)^0,c
  2471  0019EA  5014               	movf	___lldiv@divisor^0,w,c
  2472  0019EC  1015               	iorwf	(___lldiv@divisor+1)^0,w,c
  2473  0019EE  1016               	iorwf	(___lldiv@divisor+2)^0,w,c
  2474  0019F0  1017               	iorwf	(___lldiv@divisor+3)^0,w,c
  2475  0019F2  B4D8               	btfsc	status,2,c
  2476  0019F4  EFFE  F00C         	goto	u2021
  2477  0019F8  EF00  F00D         	goto	u2020
  2478  0019FC                     u2021:
  2479  0019FC  EF36  F00D         	goto	l757
  2480  001A00                     u2020:
  2481  001A00  0E01               	movlw	1
  2482  001A02  6E1C               	movwf	___lldiv@counter^0,c
  2483  001A04  EF0A  F00D         	goto	l3278
  2484  001A08                     l3276:
  2485  001A08  90D8               	bcf	status,0,c
  2486  001A0A  3614               	rlcf	___lldiv@divisor^0,f,c
  2487  001A0C  3615               	rlcf	(___lldiv@divisor+1)^0,f,c
  2488  001A0E  3616               	rlcf	(___lldiv@divisor+2)^0,f,c
  2489  001A10  3617               	rlcf	(___lldiv@divisor+3)^0,f,c
  2490  001A12  2A1C               	incf	___lldiv@counter^0,f,c
  2491  001A14                     l3278:
  2492  001A14  AE17               	btfss	(___lldiv@divisor+3)^0,7,c
  2493  001A16  EF0F  F00D         	goto	u2031
  2494  001A1A  EF11  F00D         	goto	u2030
  2495  001A1E                     u2031:
  2496  001A1E  EF04  F00D         	goto	l3276
  2497  001A22                     u2030:
  2498  001A22                     l3280:
  2499  001A22  90D8               	bcf	status,0,c
  2500  001A24  3618               	rlcf	___lldiv@quotient^0,f,c
  2501  001A26  3619               	rlcf	(___lldiv@quotient+1)^0,f,c
  2502  001A28  361A               	rlcf	(___lldiv@quotient+2)^0,f,c
  2503  001A2A  361B               	rlcf	(___lldiv@quotient+3)^0,f,c
  2504  001A2C  5014               	movf	___lldiv@divisor^0,w,c
  2505  001A2E  5C10               	subwf	___lldiv@dividend^0,w,c
  2506  001A30  5015               	movf	(___lldiv@divisor+1)^0,w,c
  2507  001A32  5811               	subwfb	(___lldiv@dividend+1)^0,w,c
  2508  001A34  5016               	movf	(___lldiv@divisor+2)^0,w,c
  2509  001A36  5812               	subwfb	(___lldiv@dividend+2)^0,w,c
  2510  001A38  5017               	movf	(___lldiv@divisor+3)^0,w,c
  2511  001A3A  5813               	subwfb	(___lldiv@dividend+3)^0,w,c
  2512  001A3C  A0D8               	btfss	status,0,c
  2513  001A3E  EF23  F00D         	goto	u2041
  2514  001A42  EF25  F00D         	goto	u2040
  2515  001A46                     u2041:
  2516  001A46  EF2E  F00D         	goto	l3288
  2517  001A4A                     u2040:
  2518  001A4A  5014               	movf	___lldiv@divisor^0,w,c
  2519  001A4C  5E10               	subwf	___lldiv@dividend^0,f,c
  2520  001A4E  5015               	movf	(___lldiv@divisor+1)^0,w,c
  2521  001A50  5A11               	subwfb	(___lldiv@dividend+1)^0,f,c
  2522  001A52  5016               	movf	(___lldiv@divisor+2)^0,w,c
  2523  001A54  5A12               	subwfb	(___lldiv@dividend+2)^0,f,c
  2524  001A56  5017               	movf	(___lldiv@divisor+3)^0,w,c
  2525  001A58  5A13               	subwfb	(___lldiv@dividend+3)^0,f,c
  2526  001A5A  8018               	bsf	___lldiv@quotient^0,0,c
  2527  001A5C                     l3288:
  2528  001A5C  90D8               	bcf	status,0,c
  2529  001A5E  3217               	rrcf	(___lldiv@divisor+3)^0,f,c
  2530  001A60  3216               	rrcf	(___lldiv@divisor+2)^0,f,c
  2531  001A62  3215               	rrcf	(___lldiv@divisor+1)^0,f,c
  2532  001A64  3214               	rrcf	___lldiv@divisor^0,f,c
  2533  001A66  2E1C               	decfsz	___lldiv@counter^0,f,c
  2534  001A68  EF11  F00D         	goto	l3280
  2535  001A6C                     l757:
  2536  001A6C  C018  F010         	movff	___lldiv@quotient,?___lldiv
  2537  001A70  C019  F011         	movff	___lldiv@quotient+1,?___lldiv+1
  2538  001A74  C01A  F012         	movff	___lldiv@quotient+2,?___lldiv+2
  2539  001A78  C01B  F013         	movff	___lldiv@quotient+3,?___lldiv+3
  2540  001A7C  0012               	return		;funcret
  2541  001A7E                     __end_of___lldiv:
  2542                           	callstack 0
  2543                           
  2544 ;; *************** function _SYSTEM_Initialize *****************
  2545 ;; Defined at:
  2546 ;;		line 50 in file "mcc_generated_files/mcc.c"
  2547 ;; Parameters:    Size  Location     Type
  2548 ;;		None
  2549 ;; Auto vars:     Size  Location     Type
  2550 ;;		None
  2551 ;; Return value:  Size  Location     Type
  2552 ;;                  1    wreg      void 
  2553 ;; Registers used:
  2554 ;;		wreg, status,2, status,0, cstack
  2555 ;; Tracked objects:
  2556 ;;		On entry : 0/0
  2557 ;;		On exit  : 0/0
  2558 ;;		Unchanged: 0/0
  2559 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2560 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2561 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2562 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2563 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2564 ;;Total ram usage:        0 bytes
  2565 ;; Hardware stack levels used:    1
  2566 ;; Hardware stack levels required when called:    8
  2567 ;; This function calls:
  2568 ;;		_INTERRUPT_Initialize
  2569 ;;		_OSCILLATOR_Initialize
  2570 ;;		_PIN_MANAGER_Initialize
  2571 ;;		_PMD_Initialize
  2572 ;;		_TMR0_Initialize
  2573 ;;		_UART2_Initialize
  2574 ;;		_rtcount_initialize
  2575 ;;		_timeout_initialize
  2576 ;; This function is called by:
  2577 ;;		_main
  2578 ;; This function uses a non-reentrant model
  2579 ;;
  2580                           
  2581                           	psect	text10
  2582  001EEC                     __ptext10:
  2583                           	callstack 0
  2584  001EEC                     _SYSTEM_Initialize:
  2585                           	callstack 22
  2586  001EEC                     
  2587                           ;mcc.c: 52: INTERRUPT_Initialize();
  2588  001EEC  ECEB  F00F         	call	_INTERRUPT_Initialize	;wreg free
  2589  001EF0                     
  2590                           ;mcc.c: 53: PMD_Initialize();
  2591  001EF0  EC52  F00F         	call	_PMD_Initialize	;wreg free
  2592  001EF4                     
  2593                           ;mcc.c: 54: PIN_MANAGER_Initialize();
  2594  001EF4  EC3F  F00D         	call	_PIN_MANAGER_Initialize	;wreg free
  2595  001EF8                     
  2596                           ;mcc.c: 55: OSCILLATOR_Initialize();
  2597  001EF8  ECA5  F00F         	call	_OSCILLATOR_Initialize	;wreg free
  2598  001EFC                     
  2599                           ;mcc.c: 56: TMR0_Initialize();
  2600  001EFC  EC87  F00F         	call	_TMR0_Initialize	;wreg free
  2601  001F00                     
  2602                           ;mcc.c: 57: UART2_Initialize();
  2603  001F00  EC8D  F00E         	call	_UART2_Initialize	;wreg free
  2604  001F04                     
  2605                           ;mcc.c: 58: timeout_initialize();
  2606  001F04  ECBA  F00F         	call	_timeout_initialize	;wreg free
  2607  001F08                     
  2608                           ;mcc.c: 59: rtcount_initialize();
  2609  001F08  ECC1  F00F         	call	_rtcount_initialize	;wreg free
  2610  001F0C  0012               	return		;funcret
  2611  001F0E                     __end_of_SYSTEM_Initialize:
  2612                           	callstack 0
  2613                           
  2614 ;; *************** function _timeout_initialize *****************
  2615 ;; Defined at:
  2616 ;;		line 407 in file "mcc_generated_files/drivers/timeout.c"
  2617 ;; Parameters:    Size  Location     Type
  2618 ;;		None
  2619 ;; Auto vars:     Size  Location     Type
  2620 ;;		None
  2621 ;; Return value:  Size  Location     Type
  2622 ;;                  1    wreg      void 
  2623 ;; Registers used:
  2624 ;;		wreg, status,2, status,0, cstack
  2625 ;; Tracked objects:
  2626 ;;		On entry : 0/0
  2627 ;;		On exit  : 0/0
  2628 ;;		Unchanged: 0/0
  2629 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2630 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2631 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2632 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2633 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2634 ;;Total ram usage:        0 bytes
  2635 ;; Hardware stack levels used:    1
  2636 ;; Hardware stack levels required when called:    7
  2637 ;; This function calls:
  2638 ;;		_TMR0_SetInterruptHandler
  2639 ;; This function is called by:
  2640 ;;		_SYSTEM_Initialize
  2641 ;; This function uses a non-reentrant model
  2642 ;;
  2643                           
  2644                           	psect	text11
  2645  001F74                     __ptext11:
  2646                           	callstack 0
  2647  001F74                     _timeout_initialize:
  2648                           	callstack 22
  2649  001F74                     
  2650                           ;timeout.c: 409: TMR0_SetInterruptHandler(timeout_isr);
  2651  001F74  0E22               	movlw	low _timeout_isr
  2652  001F76  6E10               	movwf	TMR0_SetInterruptHandler@InterruptHandler^0,c
  2653  001F78  0E1C               	movlw	high _timeout_isr
  2654  001F7A  6E11               	movwf	(TMR0_SetInterruptHandler@InterruptHandler+1)^0,c
  2655  001F7C  ECE1  F00F         	call	_TMR0_SetInterruptHandler	;wreg free
  2656  001F80  0012               	return		;funcret
  2657  001F82                     __end_of_timeout_initialize:
  2658                           	callstack 0
  2659                           
  2660 ;; *************** function _rtcount_initialize *****************
  2661 ;; Defined at:
  2662 ;;		line 70 in file "mcc_generated_files/rtcounter.c"
  2663 ;; Parameters:    Size  Location     Type
  2664 ;;		None
  2665 ;; Auto vars:     Size  Location     Type
  2666 ;;		None
  2667 ;; Return value:  Size  Location     Type
  2668 ;;                  1    wreg      void 
  2669 ;; Registers used:
  2670 ;;		wreg, status,2, status,0, cstack
  2671 ;; Tracked objects:
  2672 ;;		On entry : 0/0
  2673 ;;		On exit  : 0/0
  2674 ;;		Unchanged: 0/0
  2675 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2676 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2677 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2678 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2679 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2680 ;;Total ram usage:        0 bytes
  2681 ;; Hardware stack levels used:    1
  2682 ;; Hardware stack levels required when called:    7
  2683 ;; This function calls:
  2684 ;;		_TMR0_SetInterruptHandler
  2685 ;; This function is called by:
  2686 ;;		_SYSTEM_Initialize
  2687 ;; This function uses a non-reentrant model
  2688 ;;
  2689                           
  2690                           	psect	text12
  2691  001F82                     __ptext12:
  2692                           	callstack 0
  2693  001F82                     _rtcount_initialize:
  2694                           	callstack 22
  2695  001F82                     
  2696                           ;rtcounter.c: 71: TMR0_SetInterruptHandler(rtcount_isr);
  2697  001F82  0E62               	movlw	low _rtcount_isr
  2698  001F84  6E10               	movwf	TMR0_SetInterruptHandler@InterruptHandler^0,c
  2699  001F86  0E1F               	movlw	high _rtcount_isr
  2700  001F88  6E11               	movwf	(TMR0_SetInterruptHandler@InterruptHandler+1)^0,c
  2701  001F8A  ECE1  F00F         	call	_TMR0_SetInterruptHandler	;wreg free
  2702  001F8E  0012               	return		;funcret
  2703  001F90                     __end_of_rtcount_initialize:
  2704                           	callstack 0
  2705                           
  2706 ;; *************** function _UART2_Initialize *****************
  2707 ;; Defined at:
  2708 ;;		line 66 in file "mcc_generated_files/uart2.c"
  2709 ;; Parameters:    Size  Location     Type
  2710 ;;		None
  2711 ;; Auto vars:     Size  Location     Type
  2712 ;;		None
  2713 ;; Return value:  Size  Location     Type
  2714 ;;                  1    wreg      void 
  2715 ;; Registers used:
  2716 ;;		wreg, status,2, status,0, cstack
  2717 ;; Tracked objects:
  2718 ;;		On entry : 0/0
  2719 ;;		On exit  : 0/0
  2720 ;;		Unchanged: 0/0
  2721 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2722 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2723 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2724 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2725 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2726 ;;Total ram usage:        0 bytes
  2727 ;; Hardware stack levels used:    1
  2728 ;; Hardware stack levels required when called:    7
  2729 ;; This function calls:
  2730 ;;		_UART2_SetErrorHandler
  2731 ;;		_UART2_SetFramingErrorHandler
  2732 ;;		_UART2_SetOverrunErrorHandler
  2733 ;; This function is called by:
  2734 ;;		_SYSTEM_Initialize
  2735 ;; This function uses a non-reentrant model
  2736 ;;
  2737                           
  2738                           	psect	text13
  2739  001D1A                     __ptext13:
  2740                           	callstack 0
  2741  001D1A                     _UART2_Initialize:
  2742                           	callstack 22
  2743  001D1A                     
  2744                           ;uart2.c: 73: U2P1L = 0x00;
  2745  001D1A  0E00               	movlw	0
  2746  001D1C  013D               	movlb	61	; () banked
  2747  001D1E  6FD4               	movwf	212,b	;volatile
  2748                           
  2749                           ;uart2.c: 76: U2P2L = 0x00;
  2750  001D20  0E00               	movlw	0
  2751  001D22  6FD6               	movwf	214,b	;volatile
  2752                           
  2753                           ;uart2.c: 79: U2P3L = 0x00;
  2754  001D24  0E00               	movlw	0
  2755  001D26  6FD8               	movwf	216,b	;volatile
  2756                           
  2757                           ;uart2.c: 82: U2CON0 = 0xB0;
  2758  001D28  0EB0               	movlw	176
  2759  001D2A  6FDA               	movwf	218,b	;volatile
  2760                           
  2761                           ;uart2.c: 85: U2CON1 = 0x80;
  2762  001D2C  0E80               	movlw	128
  2763  001D2E  6FDB               	movwf	219,b	;volatile
  2764                           
  2765                           ;uart2.c: 88: U2CON2 = 0x00;
  2766  001D30  0E00               	movlw	0
  2767  001D32  6FDC               	movwf	220,b	;volatile
  2768                           
  2769                           ;uart2.c: 91: U2BRGL = 0xCF;
  2770  001D34  0ECF               	movlw	207
  2771  001D36  6FDD               	movwf	221,b	;volatile
  2772                           
  2773                           ;uart2.c: 94: U2BRGH = 0x00;
  2774  001D38  0E00               	movlw	0
  2775  001D3A  6FDE               	movwf	222,b	;volatile
  2776                           
  2777                           ;uart2.c: 97: U2FIFO = 0x00;
  2778  001D3C  0E00               	movlw	0
  2779  001D3E  6FDF               	movwf	223,b	;volatile
  2780                           
  2781                           ;uart2.c: 100: U2UIR = 0x00;
  2782  001D40  0E00               	movlw	0
  2783  001D42  6FE0               	movwf	224,b	;volatile
  2784                           
  2785                           ;uart2.c: 103: U2ERRIR = 0x00;
  2786  001D44  0E00               	movlw	0
  2787  001D46  6FE1               	movwf	225,b	;volatile
  2788                           
  2789                           ;uart2.c: 106: U2ERRIE = 0x00;
  2790  001D48  0E00               	movlw	0
  2791  001D4A  6FE2               	movwf	226,b	;volatile
  2792  001D4C                     
  2793                           ; BSR set to: 61
  2794                           ;uart2.c: 109: UART2_SetFramingErrorHandler(UART2_DefaultFramingErrorHandler);
  2795  001D4C  0E00               	movlw	0
  2796  001D4E  6E10               	movwf	UART2_SetFramingErrorHandler@interruptHandler^0,c
  2797  001D50  0E00               	movlw	0
  2798  001D52  6E11               	movwf	(UART2_SetFramingErrorHandler@interruptHandler+1)^0,c
  2799  001D54  ECD7  F00F         	call	_UART2_SetFramingErrorHandler	;wreg free
  2800  001D58                     
  2801                           ;uart2.c: 110: UART2_SetOverrunErrorHandler(UART2_DefaultOverrunErrorHandler);
  2802  001D58  0E00               	movlw	0
  2803  001D5A  6E10               	movwf	UART2_SetOverrunErrorHandler@interruptHandler^0,c
  2804  001D5C  0E00               	movlw	0
  2805  001D5E  6E11               	movwf	(UART2_SetOverrunErrorHandler@interruptHandler+1)^0,c
  2806  001D60  ECD2  F00F         	call	_UART2_SetOverrunErrorHandler	;wreg free
  2807  001D64                     
  2808                           ;uart2.c: 111: UART2_SetErrorHandler(UART2_DefaultErrorHandler);
  2809  001D64  0E00               	movlw	0
  2810  001D66  6E10               	movwf	UART2_SetErrorHandler@interruptHandler^0,c
  2811  001D68  0E00               	movlw	0
  2812  001D6A  6E11               	movwf	(UART2_SetErrorHandler@interruptHandler+1)^0,c
  2813  001D6C  ECDC  F00F         	call	_UART2_SetErrorHandler	;wreg free
  2814  001D70                     
  2815                           ;uart2.c: 113: uart2RxLastError.status = 0;
  2816  001D70  0E00               	movlw	0
  2817  001D72  6E47               	movwf	_uart2RxLastError^0,c	;volatile
  2818  001D74  0012               	return		;funcret
  2819  001D76                     __end_of_UART2_Initialize:
  2820                           	callstack 0
  2821                           
  2822 ;; *************** function _UART2_SetOverrunErrorHandler *****************
  2823 ;; Defined at:
  2824 ;;		line 195 in file "mcc_generated_files/uart2.c"
  2825 ;; Parameters:    Size  Location     Type
  2826 ;;  interruptHan    2   15[COMRAM] PTR FTN()void 
  2827 ;;		 -> UART2_DefaultOverrunErrorHandler(1), 
  2828 ;; Auto vars:     Size  Location     Type
  2829 ;;		None
  2830 ;; Return value:  Size  Location     Type
  2831 ;;                  1    wreg      void 
  2832 ;; Registers used:
  2833 ;;		wreg, status,2, status,0
  2834 ;; Tracked objects:
  2835 ;;		On entry : 0/0
  2836 ;;		On exit  : 0/0
  2837 ;;		Unchanged: 0/0
  2838 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2839 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2840 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2841 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2842 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2843 ;;Total ram usage:        2 bytes
  2844 ;; Hardware stack levels used:    1
  2845 ;; Hardware stack levels required when called:    6
  2846 ;; This function calls:
  2847 ;;		Nothing
  2848 ;; This function is called by:
  2849 ;;		_UART2_Initialize
  2850 ;; This function uses a non-reentrant model
  2851 ;;
  2852                           
  2853                           	psect	text14
  2854  001FA4                     __ptext14:
  2855                           	callstack 0
  2856  001FA4                     _UART2_SetOverrunErrorHandler:
  2857                           	callstack 22
  2858  001FA4                     
  2859                           ;uart2.c: 196: UART2_OverrunErrorHandler = interruptHandler;
  2860  001FA4  C010  F095         	movff	UART2_SetOverrunErrorHandler@interruptHandler,_UART2_OverrunErrorHandler
  2861  001FA8  C011  F096         	movff	UART2_SetOverrunErrorHandler@interruptHandler+1,_UART2_OverrunErrorHandler+1
  2862  001FAC  0012               	return		;funcret
  2863  001FAE                     __end_of_UART2_SetOverrunErrorHandler:
  2864                           	callstack 0
  2865                           
  2866 ;; *************** function _UART2_SetFramingErrorHandler *****************
  2867 ;; Defined at:
  2868 ;;		line 191 in file "mcc_generated_files/uart2.c"
  2869 ;; Parameters:    Size  Location     Type
  2870 ;;  interruptHan    2   15[COMRAM] PTR FTN()void 
  2871 ;;		 -> UART2_DefaultFramingErrorHandler(1), 
  2872 ;; Auto vars:     Size  Location     Type
  2873 ;;		None
  2874 ;; Return value:  Size  Location     Type
  2875 ;;                  1    wreg      void 
  2876 ;; Registers used:
  2877 ;;		wreg, status,2, status,0
  2878 ;; Tracked objects:
  2879 ;;		On entry : 0/0
  2880 ;;		On exit  : 0/0
  2881 ;;		Unchanged: 0/0
  2882 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2883 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2884 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2885 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2886 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2887 ;;Total ram usage:        2 bytes
  2888 ;; Hardware stack levels used:    1
  2889 ;; Hardware stack levels required when called:    6
  2890 ;; This function calls:
  2891 ;;		Nothing
  2892 ;; This function is called by:
  2893 ;;		_UART2_Initialize
  2894 ;; This function uses a non-reentrant model
  2895 ;;
  2896                           
  2897                           	psect	text15
  2898  001FAE                     __ptext15:
  2899                           	callstack 0
  2900  001FAE                     _UART2_SetFramingErrorHandler:
  2901                           	callstack 22
  2902  001FAE                     
  2903                           ;uart2.c: 192: UART2_FramingErrorHandler = interruptHandler;
  2904  001FAE  C010  F097         	movff	UART2_SetFramingErrorHandler@interruptHandler,_UART2_FramingErrorHandler
  2905  001FB2  C011  F098         	movff	UART2_SetFramingErrorHandler@interruptHandler+1,_UART2_FramingErrorHandler+1
  2906  001FB6  0012               	return		;funcret
  2907  001FB8                     __end_of_UART2_SetFramingErrorHandler:
  2908                           	callstack 0
  2909                           
  2910 ;; *************** function _UART2_SetErrorHandler *****************
  2911 ;; Defined at:
  2912 ;;		line 199 in file "mcc_generated_files/uart2.c"
  2913 ;; Parameters:    Size  Location     Type
  2914 ;;  interruptHan    2   15[COMRAM] PTR FTN()void 
  2915 ;;		 -> UART2_DefaultErrorHandler(1), 
  2916 ;; Auto vars:     Size  Location     Type
  2917 ;;		None
  2918 ;; Return value:  Size  Location     Type
  2919 ;;                  1    wreg      void 
  2920 ;; Registers used:
  2921 ;;		wreg, status,2, status,0
  2922 ;; Tracked objects:
  2923 ;;		On entry : 0/0
  2924 ;;		On exit  : 0/0
  2925 ;;		Unchanged: 0/0
  2926 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2927 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2928 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2929 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2930 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2931 ;;Total ram usage:        2 bytes
  2932 ;; Hardware stack levels used:    1
  2933 ;; Hardware stack levels required when called:    6
  2934 ;; This function calls:
  2935 ;;		Nothing
  2936 ;; This function is called by:
  2937 ;;		_UART2_Initialize
  2938 ;; This function uses a non-reentrant model
  2939 ;;
  2940                           
  2941                           	psect	text16
  2942  001FB8                     __ptext16:
  2943                           	callstack 0
  2944  001FB8                     _UART2_SetErrorHandler:
  2945                           	callstack 22
  2946  001FB8                     
  2947                           ;uart2.c: 200: UART2_ErrorHandler = interruptHandler;
  2948  001FB8  C010  F093         	movff	UART2_SetErrorHandler@interruptHandler,_UART2_ErrorHandler
  2949  001FBC  C011  F094         	movff	UART2_SetErrorHandler@interruptHandler+1,_UART2_ErrorHandler+1
  2950  001FC0  0012               	return		;funcret
  2951  001FC2                     __end_of_UART2_SetErrorHandler:
  2952                           	callstack 0
  2953                           
  2954 ;; *************** function _TMR0_Initialize *****************
  2955 ;; Defined at:
  2956 ;;		line 61 in file "mcc_generated_files/tmr0.c"
  2957 ;; Parameters:    Size  Location     Type
  2958 ;;		None
  2959 ;; Auto vars:     Size  Location     Type
  2960 ;;		None
  2961 ;; Return value:  Size  Location     Type
  2962 ;;                  1    wreg      void 
  2963 ;; Registers used:
  2964 ;;		wreg, status,2, status,0, cstack
  2965 ;; Tracked objects:
  2966 ;;		On entry : 0/0
  2967 ;;		On exit  : 0/0
  2968 ;;		Unchanged: 0/0
  2969 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2970 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2971 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2972 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2973 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2974 ;;Total ram usage:        0 bytes
  2975 ;; Hardware stack levels used:    1
  2976 ;; Hardware stack levels required when called:    7
  2977 ;; This function calls:
  2978 ;;		_TMR0_SetInterruptHandler
  2979 ;; This function is called by:
  2980 ;;		_SYSTEM_Initialize
  2981 ;; This function uses a non-reentrant model
  2982 ;;
  2983                           
  2984                           	psect	text17
  2985  001F0E                     __ptext17:
  2986                           	callstack 0
  2987  001F0E                     _TMR0_Initialize:
  2988                           	callstack 22
  2989  001F0E                     
  2990                           ;tmr0.c: 66: T0CON1 = 0x00;
  2991  001F0E  0E00               	movlw	0
  2992  001F10  6EB9               	movwf	185,c	;volatile
  2993  001F12                     
  2994                           ;tmr0.c: 69: TMR0H = 0xFF;
  2995  001F12  68B7               	setf	183,c	;volatile
  2996                           
  2997                           ;tmr0.c: 72: TMR0L = 0x00;
  2998  001F14  0E00               	movlw	0
  2999  001F16  6EB6               	movwf	182,c	;volatile
  3000  001F18                     
  3001                           ;tmr0.c: 75: PIR3bits.TMR0IF = 0;
  3002  001F18  0139               	movlb	57	; () banked
  3003  001F1A  9FA3               	bcf	163,7,b	;volatile
  3004  001F1C                     
  3005                           ; BSR set to: 57
  3006                           ;tmr0.c: 78: PIE3bits.TMR0IE = 1;
  3007  001F1C  8F93               	bsf	147,7,b	;volatile
  3008  001F1E                     
  3009                           ; BSR set to: 57
  3010                           ;tmr0.c: 81: TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandler);
  3011  001F1E  0EDA               	movlw	low _TMR0_DefaultInterruptHandler
  3012  001F20  6E10               	movwf	TMR0_SetInterruptHandler@InterruptHandler^0,c
  3013  001F22  0E1F               	movlw	high _TMR0_DefaultInterruptHandler
  3014  001F24  6E11               	movwf	(TMR0_SetInterruptHandler@InterruptHandler+1)^0,c
  3015  001F26  ECE1  F00F         	call	_TMR0_SetInterruptHandler	;wreg free
  3016  001F2A                     
  3017                           ;tmr0.c: 84: T0CON0 = 0x80;
  3018  001F2A  0E80               	movlw	128
  3019  001F2C  6EB8               	movwf	184,c	;volatile
  3020  001F2E  0012               	return		;funcret
  3021  001F30                     __end_of_TMR0_Initialize:
  3022                           	callstack 0
  3023                           
  3024 ;; *************** function _TMR0_SetInterruptHandler *****************
  3025 ;; Defined at:
  3026 ;;		line 134 in file "mcc_generated_files/tmr0.c"
  3027 ;; Parameters:    Size  Location     Type
  3028 ;;  InterruptHan    2   15[COMRAM] PTR FTN()void 
  3029 ;;		 -> TMR0_DefaultInterruptHandler(1), rtcount_isr(1), timeout_isr(1), 
  3030 ;; Auto vars:     Size  Location     Type
  3031 ;;		None
  3032 ;; Return value:  Size  Location     Type
  3033 ;;                  1    wreg      void 
  3034 ;; Registers used:
  3035 ;;		wreg, status,2, status,0
  3036 ;; Tracked objects:
  3037 ;;		On entry : 0/0
  3038 ;;		On exit  : 0/0
  3039 ;;		Unchanged: 0/0
  3040 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3041 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3042 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3043 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3044 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3045 ;;Total ram usage:        2 bytes
  3046 ;; Hardware stack levels used:    1
  3047 ;; Hardware stack levels required when called:    6
  3048 ;; This function calls:
  3049 ;;		Nothing
  3050 ;; This function is called by:
  3051 ;;		_timeout_initialize
  3052 ;;		_rtcount_initialize
  3053 ;;		_TMR0_Initialize
  3054 ;; This function uses a non-reentrant model
  3055 ;;
  3056                           
  3057                           	psect	text18
  3058  001FC2                     __ptext18:
  3059                           	callstack 0
  3060  001FC2                     _TMR0_SetInterruptHandler:
  3061                           	callstack 22
  3062  001FC2                     
  3063                           ;tmr0.c: 135: TMR0_InterruptHandler = InterruptHandler;
  3064  001FC2  C010  F091         	movff	TMR0_SetInterruptHandler@InterruptHandler,_TMR0_InterruptHandler
  3065  001FC6  C011  F092         	movff	TMR0_SetInterruptHandler@InterruptHandler+1,_TMR0_InterruptHandler+1
  3066  001FCA  0012               	return		;funcret
  3067  001FCC                     __end_of_TMR0_SetInterruptHandler:
  3068                           	callstack 0
  3069                           
  3070 ;; *************** function _PMD_Initialize *****************
  3071 ;; Defined at:
  3072 ;;		line 76 in file "mcc_generated_files/mcc.c"
  3073 ;; Parameters:    Size  Location     Type
  3074 ;;		None
  3075 ;; Auto vars:     Size  Location     Type
  3076 ;;		None
  3077 ;; Return value:  Size  Location     Type
  3078 ;;                  1    wreg      void 
  3079 ;; Registers used:
  3080 ;;		wreg, status,2
  3081 ;; Tracked objects:
  3082 ;;		On entry : 0/0
  3083 ;;		On exit  : 0/0
  3084 ;;		Unchanged: 0/0
  3085 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3086 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3087 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3088 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3089 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3090 ;;Total ram usage:        0 bytes
  3091 ;; Hardware stack levels used:    1
  3092 ;; Hardware stack levels required when called:    6
  3093 ;; This function calls:
  3094 ;;		Nothing
  3095 ;; This function is called by:
  3096 ;;		_SYSTEM_Initialize
  3097 ;; This function uses a non-reentrant model
  3098 ;;
  3099                           
  3100                           	psect	text19
  3101  001EA4                     __ptext19:
  3102                           	callstack 0
  3103  001EA4                     _PMD_Initialize:
  3104                           	callstack 23
  3105  001EA4                     
  3106                           ;mcc.c: 79: PMD0 = 0x00;
  3107  001EA4  0E00               	movlw	0
  3108  001EA6  0139               	movlb	57	; () banked
  3109  001EA8  6FC0               	movwf	192,b	;volatile
  3110                           
  3111                           ;mcc.c: 81: PMD1 = 0x00;
  3112  001EAA  0E00               	movlw	0
  3113  001EAC  6FC1               	movwf	193,b	;volatile
  3114                           
  3115                           ;mcc.c: 83: PMD2 = 0x00;
  3116  001EAE  0E00               	movlw	0
  3117  001EB0  6FC2               	movwf	194,b	;volatile
  3118                           
  3119                           ;mcc.c: 85: PMD3 = 0x00;
  3120  001EB2  0E00               	movlw	0
  3121  001EB4  6FC3               	movwf	195,b	;volatile
  3122                           
  3123                           ;mcc.c: 87: PMD4 = 0x00;
  3124  001EB6  0E00               	movlw	0
  3125  001EB8  6FC4               	movwf	196,b	;volatile
  3126                           
  3127                           ;mcc.c: 89: PMD5 = 0x00;
  3128  001EBA  0E00               	movlw	0
  3129  001EBC  6FC5               	movwf	197,b	;volatile
  3130                           
  3131                           ;mcc.c: 91: PMD6 = 0x00;
  3132  001EBE  0E00               	movlw	0
  3133  001EC0  6FC6               	movwf	198,b	;volatile
  3134                           
  3135                           ;mcc.c: 93: PMD7 = 0x00;
  3136  001EC2  0E00               	movlw	0
  3137  001EC4  6FC7               	movwf	199,b	;volatile
  3138  001EC6                     
  3139                           ; BSR set to: 57
  3140  001EC6  0012               	return		;funcret
  3141  001EC8                     __end_of_PMD_Initialize:
  3142                           	callstack 0
  3143                           
  3144 ;; *************** function _PIN_MANAGER_Initialize *****************
  3145 ;; Defined at:
  3146 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  3147 ;; Parameters:    Size  Location     Type
  3148 ;;		None
  3149 ;; Auto vars:     Size  Location     Type
  3150 ;;		None
  3151 ;; Return value:  Size  Location     Type
  3152 ;;                  1    wreg      void 
  3153 ;; Registers used:
  3154 ;;		wreg, status,2
  3155 ;; Tracked objects:
  3156 ;;		On entry : 0/0
  3157 ;;		On exit  : 0/0
  3158 ;;		Unchanged: 0/0
  3159 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3160 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3161 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3162 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3163 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3164 ;;Total ram usage:        0 bytes
  3165 ;; Hardware stack levels used:    1
  3166 ;; Hardware stack levels required when called:    6
  3167 ;; This function calls:
  3168 ;;		Nothing
  3169 ;; This function is called by:
  3170 ;;		_SYSTEM_Initialize
  3171 ;; This function uses a non-reentrant model
  3172 ;;
  3173                           
  3174                           	psect	text20
  3175  001A7E                     __ptext20:
  3176                           	callstack 0
  3177  001A7E                     _PIN_MANAGER_Initialize:
  3178                           	callstack 23
  3179  001A7E                     
  3180                           ;pin_manager.c: 60: LATE = 0x00;
  3181  001A7E  0E00               	movlw	0
  3182  001A80  6EBE               	movwf	190,c	;volatile
  3183                           
  3184                           ;pin_manager.c: 61: LATD = 0x00;
  3185  001A82  0E00               	movlw	0
  3186  001A84  6EBD               	movwf	189,c	;volatile
  3187                           
  3188                           ;pin_manager.c: 62: LATA = 0x00;
  3189  001A86  0E00               	movlw	0
  3190  001A88  6EBA               	movwf	186,c	;volatile
  3191                           
  3192                           ;pin_manager.c: 63: LATB = 0x00;
  3193  001A8A  0E00               	movlw	0
  3194  001A8C  6EBB               	movwf	187,c	;volatile
  3195                           
  3196                           ;pin_manager.c: 64: LATC = 0x00;
  3197  001A8E  0E00               	movlw	0
  3198  001A90  6EBC               	movwf	188,c	;volatile
  3199                           
  3200                           ;pin_manager.c: 69: TRISE = 0x07;
  3201  001A92  0E07               	movlw	7
  3202  001A94  6EC6               	movwf	198,c	;volatile
  3203  001A96                     
  3204                           ;pin_manager.c: 70: TRISA = 0xFF;
  3205  001A96  68C2               	setf	194,c	;volatile
  3206                           
  3207                           ;pin_manager.c: 71: TRISB = 0xBF;
  3208  001A98  0EBF               	movlw	191
  3209  001A9A  6EC3               	movwf	195,c	;volatile
  3210  001A9C                     
  3211                           ;pin_manager.c: 72: TRISC = 0xFF;
  3212  001A9C  68C4               	setf	196,c	;volatile
  3213                           
  3214                           ;pin_manager.c: 73: TRISD = 0xF9;
  3215  001A9E  0EF9               	movlw	249
  3216  001AA0  6EC5               	movwf	197,c	;volatile
  3217                           
  3218                           ;pin_manager.c: 78: ANSELD = 0xF9;
  3219  001AA2  0EF9               	movlw	249
  3220  001AA4  013A               	movlb	58	; () banked
  3221  001AA6  6F70               	movwf	112,b	;volatile
  3222  001AA8                     
  3223                           ; BSR set to: 58
  3224                           ;pin_manager.c: 79: ANSELC = 0xFF;
  3225  001AA8  6960               	setf	96,b	;volatile
  3226                           
  3227                           ;pin_manager.c: 80: ANSELB = 0x3F;
  3228  001AAA  0E3F               	movlw	63
  3229  001AAC  6F50               	movwf	80,b	;volatile
  3230                           
  3231                           ;pin_manager.c: 81: ANSELE = 0x07;
  3232  001AAE  0E07               	movlw	7
  3233  001AB0  6F80               	movwf	128,b	;volatile
  3234                           
  3235                           ;pin_manager.c: 82: ANSELA = 0xEF;
  3236  001AB2  0EEF               	movlw	239
  3237  001AB4  6F40               	movwf	64,b	;volatile
  3238                           
  3239                           ;pin_manager.c: 87: WPUD = 0x00;
  3240  001AB6  0E00               	movlw	0
  3241  001AB8  6F71               	movwf	113,b	;volatile
  3242                           
  3243                           ;pin_manager.c: 88: WPUE = 0x00;
  3244  001ABA  0E00               	movlw	0
  3245  001ABC  6F81               	movwf	129,b	;volatile
  3246                           
  3247                           ;pin_manager.c: 89: WPUB = 0x00;
  3248  001ABE  0E00               	movlw	0
  3249  001AC0  6F51               	movwf	81,b	;volatile
  3250                           
  3251                           ;pin_manager.c: 90: WPUA = 0x00;
  3252  001AC2  0E00               	movlw	0
  3253  001AC4  6F41               	movwf	65,b	;volatile
  3254                           
  3255                           ;pin_manager.c: 91: WPUC = 0x00;
  3256  001AC6  0E00               	movlw	0
  3257  001AC8  6F61               	movwf	97,b	;volatile
  3258                           
  3259                           ;pin_manager.c: 96: RB1I2C = 0x00;
  3260  001ACA  0E00               	movlw	0
  3261  001ACC  6F5A               	movwf	90,b	;volatile
  3262                           
  3263                           ;pin_manager.c: 97: RB2I2C = 0x00;
  3264  001ACE  0E00               	movlw	0
  3265  001AD0  6F5B               	movwf	91,b	;volatile
  3266                           
  3267                           ;pin_manager.c: 98: RC3I2C = 0x00;
  3268  001AD2  0E00               	movlw	0
  3269  001AD4  6F6A               	movwf	106,b	;volatile
  3270                           
  3271                           ;pin_manager.c: 99: RC4I2C = 0x00;
  3272  001AD6  0E00               	movlw	0
  3273  001AD8  6F6B               	movwf	107,b	;volatile
  3274                           
  3275                           ;pin_manager.c: 100: RD0I2C = 0x00;
  3276  001ADA  0E00               	movlw	0
  3277  001ADC  6F7A               	movwf	122,b	;volatile
  3278                           
  3279                           ;pin_manager.c: 101: RD1I2C = 0x00;
  3280  001ADE  0E00               	movlw	0
  3281  001AE0  6F7B               	movwf	123,b	;volatile
  3282                           
  3283                           ;pin_manager.c: 106: ODCONE = 0x00;
  3284  001AE2  0E00               	movlw	0
  3285  001AE4  6F82               	movwf	130,b	;volatile
  3286                           
  3287                           ;pin_manager.c: 107: ODCONA = 0x00;
  3288  001AE6  0E00               	movlw	0
  3289  001AE8  6F42               	movwf	66,b	;volatile
  3290                           
  3291                           ;pin_manager.c: 108: ODCONB = 0x00;
  3292  001AEA  0E00               	movlw	0
  3293  001AEC  6F52               	movwf	82,b	;volatile
  3294                           
  3295                           ;pin_manager.c: 109: ODCONC = 0x00;
  3296  001AEE  0E00               	movlw	0
  3297  001AF0  6F62               	movwf	98,b	;volatile
  3298                           
  3299                           ;pin_manager.c: 110: ODCOND = 0x00;
  3300  001AF2  0E00               	movlw	0
  3301  001AF4  6F72               	movwf	114,b	;volatile
  3302  001AF6                     
  3303                           ; BSR set to: 58
  3304                           ;pin_manager.c: 115: SLRCONA = 0xFF;
  3305  001AF6  6943               	setf	67,b	;volatile
  3306  001AF8                     
  3307                           ; BSR set to: 58
  3308                           ;pin_manager.c: 116: SLRCONB = 0xFF;
  3309  001AF8  6953               	setf	83,b	;volatile
  3310  001AFA                     
  3311                           ; BSR set to: 58
  3312                           ;pin_manager.c: 117: SLRCONC = 0xFF;
  3313  001AFA  6963               	setf	99,b	;volatile
  3314  001AFC                     
  3315                           ; BSR set to: 58
  3316                           ;pin_manager.c: 118: SLRCOND = 0xFF;
  3317  001AFC  6973               	setf	115,b	;volatile
  3318                           
  3319                           ;pin_manager.c: 119: SLRCONE = 0x07;
  3320  001AFE  0E07               	movlw	7
  3321  001B00  6F83               	movwf	131,b	;volatile
  3322  001B02                     
  3323                           ; BSR set to: 58
  3324                           ;pin_manager.c: 124: INLVLA = 0xFF;
  3325  001B02  6944               	setf	68,b	;volatile
  3326  001B04                     
  3327                           ; BSR set to: 58
  3328                           ;pin_manager.c: 125: INLVLB = 0xFF;
  3329  001B04  6954               	setf	84,b	;volatile
  3330  001B06                     
  3331                           ; BSR set to: 58
  3332                           ;pin_manager.c: 126: INLVLC = 0xFF;
  3333  001B06  6964               	setf	100,b	;volatile
  3334  001B08                     
  3335                           ; BSR set to: 58
  3336                           ;pin_manager.c: 127: INLVLD = 0xFF;
  3337  001B08  6974               	setf	116,b	;volatile
  3338                           
  3339                           ;pin_manager.c: 128: INLVLE = 0x0F;
  3340  001B0A  0E0F               	movlw	15
  3341  001B0C  6F84               	movwf	132,b	;volatile
  3342                           
  3343                           ;pin_manager.c: 137: U2RXPPS = 0x0F;
  3344  001B0E  0E0F               	movlw	15
  3345  001B10  6FE8               	movwf	232,b	;volatile
  3346                           
  3347                           ;pin_manager.c: 138: RB6PPS = 0x16;
  3348  001B12  0E16               	movlw	22
  3349  001B14  6F0E               	movwf	14,b	;volatile
  3350                           
  3351                           ;pin_manager.c: 139: T0CKIPPS = 0x04;
  3352  001B16  0E04               	movlw	4
  3353  001B18  6FC3               	movwf	195,b	;volatile
  3354  001B1A                     
  3355                           ; BSR set to: 58
  3356  001B1A  0012               	return		;funcret
  3357  001B1C                     __end_of_PIN_MANAGER_Initialize:
  3358                           	callstack 0
  3359                           
  3360 ;; *************** function _OSCILLATOR_Initialize *****************
  3361 ;; Defined at:
  3362 ;;		line 62 in file "mcc_generated_files/mcc.c"
  3363 ;; Parameters:    Size  Location     Type
  3364 ;;		None
  3365 ;; Auto vars:     Size  Location     Type
  3366 ;;		None
  3367 ;; Return value:  Size  Location     Type
  3368 ;;                  1    wreg      void 
  3369 ;; Registers used:
  3370 ;;		wreg, status,2
  3371 ;; Tracked objects:
  3372 ;;		On entry : 0/0
  3373 ;;		On exit  : 0/0
  3374 ;;		Unchanged: 0/0
  3375 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3376 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3377 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3378 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3379 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3380 ;;Total ram usage:        0 bytes
  3381 ;; Hardware stack levels used:    1
  3382 ;; Hardware stack levels required when called:    6
  3383 ;; This function calls:
  3384 ;;		Nothing
  3385 ;; This function is called by:
  3386 ;;		_SYSTEM_Initialize
  3387 ;; This function uses a non-reentrant model
  3388 ;;
  3389                           
  3390                           	psect	text21
  3391  001F4A                     __ptext21:
  3392                           	callstack 0
  3393  001F4A                     _OSCILLATOR_Initialize:
  3394                           	callstack 23
  3395  001F4A                     
  3396                           ;mcc.c: 65: OSCCON1 = 0x62;
  3397  001F4A  0E62               	movlw	98
  3398  001F4C  0139               	movlb	57	; () banked
  3399  001F4E  6FD9               	movwf	217,b	;volatile
  3400                           
  3401                           ;mcc.c: 67: OSCCON3 = 0x00;
  3402  001F50  0E00               	movlw	0
  3403  001F52  6FDB               	movwf	219,b	;volatile
  3404                           
  3405                           ;mcc.c: 69: OSCEN = 0x00;
  3406  001F54  0E00               	movlw	0
  3407  001F56  6FDD               	movwf	221,b	;volatile
  3408                           
  3409                           ;mcc.c: 71: OSCFRQ = 0x06;
  3410  001F58  0E06               	movlw	6
  3411  001F5A  6FDF               	movwf	223,b	;volatile
  3412                           
  3413                           ;mcc.c: 73: OSCTUNE = 0x00;
  3414  001F5C  0E00               	movlw	0
  3415  001F5E  6FDE               	movwf	222,b	;volatile
  3416  001F60                     
  3417                           ; BSR set to: 57
  3418  001F60  0012               	return		;funcret
  3419  001F62                     __end_of_OSCILLATOR_Initialize:
  3420                           	callstack 0
  3421                           
  3422 ;; *************** function _INTERRUPT_Initialize *****************
  3423 ;; Defined at:
  3424 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  3425 ;; Parameters:    Size  Location     Type
  3426 ;;		None
  3427 ;; Auto vars:     Size  Location     Type
  3428 ;;		None
  3429 ;; Return value:  Size  Location     Type
  3430 ;;                  1    wreg      void 
  3431 ;; Registers used:
  3432 ;;		None
  3433 ;; Tracked objects:
  3434 ;;		On entry : 0/0
  3435 ;;		On exit  : 0/0
  3436 ;;		Unchanged: 0/0
  3437 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3438 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3439 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3440 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3441 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3442 ;;Total ram usage:        0 bytes
  3443 ;; Hardware stack levels used:    1
  3444 ;; Hardware stack levels required when called:    6
  3445 ;; This function calls:
  3446 ;;		Nothing
  3447 ;; This function is called by:
  3448 ;;		_SYSTEM_Initialize
  3449 ;; This function uses a non-reentrant model
  3450 ;;
  3451                           
  3452                           	psect	text22
  3453  001FD6                     __ptext22:
  3454                           	callstack 0
  3455  001FD6                     _INTERRUPT_Initialize:
  3456                           	callstack 23
  3457  001FD6                     
  3458                           ;interrupt_manager.c: 55: INTCON0bits.IPEN = 0;
  3459  001FD6  9AD2               	bcf	210,5,c	;volatile
  3460  001FD8  0012               	return		;funcret
  3461  001FDA                     __end_of_INTERRUPT_Initialize:
  3462                           	callstack 0
  3463                           
  3464 ;; *************** function _INTERRUPT_InterruptManager *****************
  3465 ;; Defined at:
  3466 ;;		line 58 in file "mcc_generated_files/interrupt_manager.c"
  3467 ;; Parameters:    Size  Location     Type
  3468 ;;		None
  3469 ;; Auto vars:     Size  Location     Type
  3470 ;;		None
  3471 ;; Return value:  Size  Location     Type
  3472 ;;                  1    wreg      void 
  3473 ;; Registers used:
  3474 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
  3475 ;; Tracked objects:
  3476 ;;		On entry : 0/0
  3477 ;;		On exit  : 0/0
  3478 ;;		Unchanged: 0/0
  3479 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3480 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3481 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3482 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3483 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3484 ;;Total ram usage:        0 bytes
  3485 ;; Hardware stack levels used:    1
  3486 ;; Hardware stack levels required when called:    5
  3487 ;; This function calls:
  3488 ;;		_TMR0_ISR
  3489 ;; This function is called by:
  3490 ;;		Interrupt level 2
  3491 ;; This function uses a non-reentrant model
  3492 ;;
  3493                           
  3494                           	psect	text23
  3495  001EC8                     __ptext23:
  3496                           	callstack 0
  3497  001EC8                     _INTERRUPT_InterruptManager:
  3498                           	callstack 21
  3499  001EC8                     
  3500                           ;interrupt_manager.c: 61: if(PIE3bits.TMR0IE == 1 && PIR3bits.TMR0IF == 1)
  3501  001EC8  0139               	movlb	57	; () banked
  3502  001ECA  AF93               	btfss	147,7,b	;volatile
  3503  001ECC  EF6A  F00F         	goto	i2u183_41
  3504  001ED0  EF6C  F00F         	goto	i2u183_40
  3505  001ED4                     i2u183_41:
  3506  001ED4  EF75  F00F         	goto	i2l434
  3507  001ED8                     i2u183_40:
  3508  001ED8                     
  3509                           ; BSR set to: 57
  3510  001ED8  AFA3               	btfss	163,7,b	;volatile
  3511  001EDA  EF71  F00F         	goto	i2u184_41
  3512  001EDE  EF73  F00F         	goto	i2u184_40
  3513  001EE2                     i2u184_41:
  3514  001EE2  EF75  F00F         	goto	i2l434
  3515  001EE6                     i2u184_40:
  3516  001EE6                     
  3517                           ; BSR set to: 57
  3518                           ;interrupt_manager.c: 62: {;interrupt_manager.c: 63: TMR0_ISR();
  3519  001EE6  ECFA  F00E         	call	_TMR0_ISR	;wreg free
  3520  001EEA                     i2l434:
  3521  001EEA  0011               	retfie		f
  3522  001EEC                     __end_of_INTERRUPT_InterruptManager:
  3523                           	callstack 0
  3524                           
  3525 ;; *************** function _TMR0_ISR *****************
  3526 ;; Defined at:
  3527 ;;		line 121 in file "mcc_generated_files/tmr0.c"
  3528 ;; Parameters:    Size  Location     Type
  3529 ;;		None
  3530 ;; Auto vars:     Size  Location     Type
  3531 ;;		None
  3532 ;; Return value:  Size  Location     Type
  3533 ;;                  1    wreg      void 
  3534 ;; Registers used:
  3535 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
  3536 ;; Tracked objects:
  3537 ;;		On entry : 0/0
  3538 ;;		On exit  : 0/0
  3539 ;;		Unchanged: 0/0
  3540 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3541 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3542 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3543 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3544 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3545 ;;Total ram usage:        0 bytes
  3546 ;; Hardware stack levels used:    1
  3547 ;; Hardware stack levels required when called:    4
  3548 ;; This function calls:
  3549 ;;		Absolute function
  3550 ;;		_TMR0_DefaultInterruptHandler
  3551 ;;		_rtcount_isr
  3552 ;;		_timeout_isr
  3553 ;; This function is called by:
  3554 ;;		_INTERRUPT_InterruptManager
  3555 ;; This function uses a non-reentrant model
  3556 ;;
  3557                           
  3558                           	psect	text24
  3559  001DF4                     __ptext24:
  3560                           	callstack 0
  3561  001DF4                     _TMR0_ISR:
  3562                           	callstack 21
  3563  001DF4                     
  3564                           ;tmr0.c: 124: PIR3bits.TMR0IF = 0;
  3565  001DF4  0139               	movlb	57	; () banked
  3566  001DF6  9FA3               	bcf	163,7,b	;volatile
  3567  001DF8                     
  3568                           ; BSR set to: 57
  3569                           ;tmr0.c: 125: if(TMR0_InterruptHandler)
  3570  001DF8  0100               	movlb	0	; () banked
  3571  001DFA  5191               	movf	_TMR0_InterruptHandler& (0+255),w,b
  3572  001DFC  1192               	iorwf	(_TMR0_InterruptHandler+1)& (0+255),w,b
  3573  001DFE  B4D8               	btfsc	status,2,c
  3574  001E00  EF04  F00F         	goto	i2u169_41
  3575  001E04  EF06  F00F         	goto	i2u169_40
  3576  001E08                     i2u169_41:
  3577  001E08  EF12  F00F         	goto	i2l562
  3578  001E0C                     i2u169_40:
  3579  001E0C                     
  3580                           ; BSR set to: 0
  3581                           ;tmr0.c: 126: {;tmr0.c: 127: TMR0_InterruptHandler();
  3582  001E0C  D802               	call	i2u170_48
  3583  001E0E  EF12  F00F         	goto	i2u170_49
  3584  001E12                     i2u170_48:
  3585  001E12  0005               	push	
  3586  001E14  6EFA               	movwf	pclath,c
  3587  001E16  5191               	movf	_TMR0_InterruptHandler& (0+255),w,b
  3588  001E18  6EFD               	movwf	tosl,c
  3589  001E1A  5192               	movf	(_TMR0_InterruptHandler+1)& (0+255),w,b
  3590  001E1C  6EFE               	movwf	tosh,c
  3591  001E1E  6AFF               	clrf	tosu,c
  3592  001E20  50FA               	movf	pclath,w,c
  3593  001E22  0012               	return		;indir
  3594  001E24                     i2u170_49:
  3595  001E24                     i2l562:
  3596  001E24  0012               	return		;funcret
  3597  001E26                     __end_of_TMR0_ISR:
  3598                           	callstack 0
  3599                           
  3600 ;; *************** function _TMR0_DefaultInterruptHandler *****************
  3601 ;; Defined at:
  3602 ;;		line 138 in file "mcc_generated_files/tmr0.c"
  3603 ;; Parameters:    Size  Location     Type
  3604 ;;		None
  3605 ;; Auto vars:     Size  Location     Type
  3606 ;;		None
  3607 ;; Return value:  Size  Location     Type
  3608 ;;                  1    wreg      void 
  3609 ;; Registers used:
  3610 ;;		None
  3611 ;; Tracked objects:
  3612 ;;		On entry : 0/0
  3613 ;;		On exit  : 0/0
  3614 ;;		Unchanged: 0/0
  3615 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3616 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3617 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3618 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3619 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3620 ;;Total ram usage:        0 bytes
  3621 ;; Hardware stack levels used:    1
  3622 ;; This function calls:
  3623 ;;		Nothing
  3624 ;; This function is called by:
  3625 ;;		_TMR0_Initialize
  3626 ;;		_TMR0_ISR
  3627 ;; This function uses a non-reentrant model
  3628 ;;
  3629                           
  3630                           	psect	text25
  3631  001FDA                     __ptext25:
  3632                           	callstack 0
  3633  001FDA                     _TMR0_DefaultInterruptHandler:
  3634                           	callstack 24
  3635  001FDA  0012               	return		;funcret
  3636  001FDC                     __end_of_TMR0_DefaultInterruptHandler:
  3637                           	callstack 0
  3638                           
  3639 ;; *************** function _rtcount_isr *****************
  3640 ;; Defined at:
  3641 ;;		line 60 in file "mcc_generated_files/rtcounter.c"
  3642 ;; Parameters:    Size  Location     Type
  3643 ;;		None
  3644 ;; Auto vars:     Size  Location     Type
  3645 ;;		None
  3646 ;; Return value:  Size  Location     Type
  3647 ;;                  1    wreg      void 
  3648 ;; Registers used:
  3649 ;;		wreg, status,2, status,0
  3650 ;; Tracked objects:
  3651 ;;		On entry : 0/0
  3652 ;;		On exit  : 0/0
  3653 ;;		Unchanged: 0/0
  3654 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3655 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3656 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3657 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3658 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3659 ;;Total ram usage:        0 bytes
  3660 ;; Hardware stack levels used:    1
  3661 ;; This function calls:
  3662 ;;		Nothing
  3663 ;; This function is called by:
  3664 ;;		_rtcount_initialize
  3665 ;;		_TMR0_ISR
  3666 ;; This function uses a non-reentrant model
  3667 ;;
  3668                           
  3669                           	psect	text26
  3670  001F62                     __ptext26:
  3671                           	callstack 0
  3672  001F62                     _rtcount_isr:
  3673                           	callstack 24
  3674  001F62                     
  3675                           ;rtcounter.c: 61: g_rtcounterH++;
  3676  001F62  0E01               	movlw	1
  3677  001F64  2636               	addwf	_g_rtcounterH^0,f,c
  3678  001F66  0E00               	movlw	0
  3679  001F68  2237               	addwfc	(_g_rtcounterH+1)^0,f,c
  3680  001F6A  2238               	addwfc	(_g_rtcounterH+2)^0,f,c
  3681  001F6C  2239               	addwfc	(_g_rtcounterH+3)^0,f,c
  3682  001F6E                     
  3683                           ;rtcounter.c: 62: PIR3bits.TMR0IF = 0;
  3684  001F6E  0139               	movlb	57	; () banked
  3685  001F70  9FA3               	bcf	163,7,b	;volatile
  3686  001F72                     
  3687                           ; BSR set to: 57
  3688  001F72  0012               	return		;funcret
  3689  001F74                     __end_of_rtcount_isr:
  3690                           	callstack 0
  3691                           
  3692 ;; *************** function _timeout_isr *****************
  3693 ;; Defined at:
  3694 ;;		line 445 in file "mcc_generated_files/drivers/timeout.c"
  3695 ;; Parameters:    Size  Location     Type
  3696 ;;		None
  3697 ;; Auto vars:     Size  Location     Type
  3698 ;;  next            2   13[COMRAM] PTR struct tmrStruct
  3699 ;;		 -> dummy(10), dummy_exec(10), NULL(0), 
  3700 ;; Return value:  Size  Location     Type
  3701 ;;                  1    wreg      void 
  3702 ;; Registers used:
  3703 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3704 ;; Tracked objects:
  3705 ;;		On entry : 0/0
  3706 ;;		On exit  : 0/0
  3707 ;;		Unchanged: 0/0
  3708 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3709 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3710 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3711 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3712 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3713 ;;Total ram usage:        2 bytes
  3714 ;; Hardware stack levels used:    1
  3715 ;; Hardware stack levels required when called:    3
  3716 ;; This function calls:
  3717 ;;		_enqueueCallback
  3718 ;;		_startTimerAtHead
  3719 ;; This function is called by:
  3720 ;;		_timeout_initialize
  3721 ;;		_TMR0_ISR
  3722 ;; This function uses a non-reentrant model
  3723 ;;
  3724                           
  3725                           	psect	text27
  3726  001C22                     __ptext27:
  3727                           	callstack 0
  3728  001C22                     _timeout_isr:
  3729                           	callstack 21
  3730  001C22                     
  3731                           ;timeout.c: 447: timerStruct_t *next = listHead->next;
  3732  001C22  EE20 F004          	lfsr	2,4
  3733  001C26  504B               	movf	_listHead^0,w,c
  3734  001C28  26D9               	addwf	fsr2l,f,c
  3735  001C2A  504C               	movf	(_listHead+1)^0,w,c
  3736  001C2C  22DA               	addwfc	fsr2h,f,c
  3737  001C2E  006F FF78  F00E    	movff	postinc2,timeout_isr@next
  3738  001C34  006F FF74  F00F    	movff	postdec2,timeout_isr@next+1
  3739                           
  3740                           ;timeout.c: 448: absoluteTimeofLastTimeout = listHead->absoluteTime;
  3741  001C3A  EE20 F006          	lfsr	2,6
  3742  001C3E  504B               	movf	_listHead^0,w,c
  3743  001C40  26D9               	addwf	fsr2l,f,c
  3744  001C42  504C               	movf	(_listHead+1)^0,w,c
  3745  001C44  22DA               	addwfc	fsr2h,f,c
  3746  001C46  006F FF78  F03E    	movff	postinc2,_absoluteTimeofLastTimeout	;volatile
  3747  001C4C  006F FF78  F03F    	movff	postinc2,_absoluteTimeofLastTimeout+1	;volatile
  3748  001C52  006F FF78  F040    	movff	postinc2,_absoluteTimeofLastTimeout+2	;volatile
  3749  001C58  006F FF78  F041    	movff	postinc2,_absoluteTimeofLastTimeout+3	;volatile
  3750  001C5E                     
  3751                           ;timeout.c: 449: lastTimerLoad = 0;
  3752  001C5E  0E00               	movlw	0
  3753  001C60  6E3A               	movwf	_lastTimerLoad^0,c	;volatile
  3754  001C62  0E00               	movlw	0
  3755  001C64  6E3B               	movwf	(_lastTimerLoad+1)^0,c	;volatile
  3756  001C66  0E00               	movlw	0
  3757  001C68  6E3C               	movwf	(_lastTimerLoad+2)^0,c	;volatile
  3758  001C6A  0E00               	movlw	0
  3759  001C6C  6E3D               	movwf	(_lastTimerLoad+3)^0,c	;volatile
  3760  001C6E                     
  3761                           ;timeout.c: 451: if (listHead != &dummy) {
  3762  001C6E  0E7D               	movlw	low _dummy
  3763  001C70  184B               	xorwf	_listHead^0,w,c
  3764  001C72  E109               	bnz	i2u155_40
  3765  001C74  0E00               	movlw	high _dummy
  3766  001C76  184C               	xorwf	(_listHead+1)^0,w,c
  3767  001C78  B4D8               	btfsc	status,2,c
  3768  001C7A  EF41  F00E         	goto	i2u155_41
  3769  001C7E  EF43  F00E         	goto	i2u155_40
  3770  001C82                     i2u155_41:
  3771  001C82  EF49  F00E         	goto	i2l2824
  3772  001C86                     i2u155_40:
  3773  001C86                     
  3774                           ;timeout.c: 452: enqueueCallback(listHead);
  3775  001C86  C04B  F001         	movff	_listHead,enqueueCallback@timer
  3776  001C8A  C04C  F002         	movff	_listHead+1,enqueueCallback@timer+1
  3777  001C8E  EC96  F00C         	call	_enqueueCallback	;wreg free
  3778  001C92                     i2l2824:
  3779                           
  3780                           ;timeout.c: 453: };timeout.c: 455: listHead = next;
  3781  001C92  C00E  F04B         	movff	timeout_isr@next,_listHead
  3782  001C96  C00F  F04C         	movff	timeout_isr@next+1,_listHead+1
  3783  001C9A                     
  3784                           ;timeout.c: 457: startTimerAtHead();
  3785  001C9A  EC2B  F00C         	call	_startTimerAtHead	;wreg free
  3786  001C9E  0012               	return		;funcret
  3787  001CA0                     __end_of_timeout_isr:
  3788                           	callstack 0
  3789                           
  3790 ;; *************** function _startTimerAtHead *****************
  3791 ;; Defined at:
  3792 ;;		line 228 in file "mcc_generated_files/drivers/timeout.c"
  3793 ;; Parameters:    Size  Location     Type
  3794 ;;		None
  3795 ;; Auto vars:     Size  Location     Type
  3796 ;;  period          4    9[COMRAM] unsigned long 
  3797 ;; Return value:  Size  Location     Type
  3798 ;;                  1    wreg      void 
  3799 ;; Registers used:
  3800 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3801 ;; Tracked objects:
  3802 ;;		On entry : 0/0
  3803 ;;		On exit  : 0/0
  3804 ;;		Unchanged: 0/0
  3805 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3806 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3807 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3808 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3809 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3810 ;;Total ram usage:        8 bytes
  3811 ;; Hardware stack levels used:    1
  3812 ;; Hardware stack levels required when called:    2
  3813 ;; This function calls:
  3814 ;;		_setTimerDuration
  3815 ;;		_stopTimeouts
  3816 ;; This function is called by:
  3817 ;;		_timeout_isr
  3818 ;;		_timeout_deleteHelper
  3819 ;;		_timeout_create
  3820 ;; This function uses a non-reentrant model
  3821 ;;
  3822                           
  3823                           	psect	text28
  3824  001856                     __ptext28:
  3825                           	callstack 0
  3826  001856                     _startTimerAtHead:
  3827                           	callstack 21
  3828  001856                     
  3829                           ;timeout.c: 232: PIE3bits.TMR0IE = 0;
  3830  001856  0139               	movlb	57	; () banked
  3831  001858  9F93               	bcf	147,7,b	;volatile
  3832  00185A                     
  3833                           ; BSR set to: 57
  3834                           ;timeout.c: 234: if(listHead==(0))
  3835  00185A  504B               	movf	_listHead^0,w,c
  3836  00185C  104C               	iorwf	(_listHead+1)^0,w,c
  3837  00185E  A4D8               	btfss	status,2,c
  3838  001860  EF34  F00C         	goto	i2u110_41
  3839  001864  EF36  F00C         	goto	i2u110_40
  3840  001868                     i2u110_41:
  3841  001868  EF3A  F00C         	goto	i2l2466
  3842  00186C                     i2u110_40:
  3843  00186C                     
  3844                           ; BSR set to: 57
  3845                           ;timeout.c: 235: {;timeout.c: 236: stopTimeouts();
  3846  00186C  EC28  F00F         	call	_stopTimeouts	;wreg free
  3847  001870  EF95  F00C         	goto	i2l87
  3848  001874                     i2l2466:
  3849                           
  3850                           ; BSR set to: 57
  3851                           ;timeout.c: 238: };timeout.c: 240: uint32_t period = listHead->absoluteTime - absoluteTi
      +                          meofLastTimeout;
  3852  001874  EE20 F006          	lfsr	2,6
  3853  001878  504B               	movf	_listHead^0,w,c
  3854  00187A  26D9               	addwf	fsr2l,f,c
  3855  00187C  504C               	movf	(_listHead+1)^0,w,c
  3856  00187E  22DA               	addwfc	fsr2h,f,c
  3857  001880  006F FF78  F006    	movff	postinc2,??_startTimerAtHead
  3858  001886  006F FF78  F007    	movff	postinc2,??_startTimerAtHead+1
  3859  00188C  006F FF78  F008    	movff	postinc2,??_startTimerAtHead+2
  3860  001892  006F FF78  F009    	movff	postinc2,??_startTimerAtHead+3
  3861  001898  503E               	movf	_absoluteTimeofLastTimeout^0,w,c	;volatile
  3862  00189A  5C06               	subwf	??_startTimerAtHead^0,w,c
  3863  00189C  6E0A               	movwf	startTimerAtHead@period^0,c
  3864  00189E  503F               	movf	(_absoluteTimeofLastTimeout+1)^0,w,c	;volatile
  3865  0018A0  5807               	subwfb	(??_startTimerAtHead+1)^0,w,c
  3866  0018A2  6E0B               	movwf	(startTimerAtHead@period+1)^0,c
  3867  0018A4  5040               	movf	(_absoluteTimeofLastTimeout+2)^0,w,c	;volatile
  3868  0018A6  5808               	subwfb	(??_startTimerAtHead+2)^0,w,c
  3869  0018A8  6E0C               	movwf	(startTimerAtHead@period+2)^0,c
  3870  0018AA  5041               	movf	(_absoluteTimeofLastTimeout+3)^0,w,c	;volatile
  3871  0018AC  5809               	subwfb	(??_startTimerAtHead+3)^0,w,c
  3872  0018AE  6E0D               	movwf	(startTimerAtHead@period+3)^0,c
  3873  0018B0                     
  3874                           ; BSR set to: 57
  3875                           ;timeout.c: 243: if (period > TMR0H)
  3876  0018B0  006F FEDC  F006    	movff	16311,??_startTimerAtHead	;volatile
  3877  0018B6  6A07               	clrf	(??_startTimerAtHead+1)^0,c
  3878  0018B8  6A08               	clrf	(??_startTimerAtHead+2)^0,c
  3879  0018BA  6A09               	clrf	(??_startTimerAtHead+3)^0,c
  3880  0018BC  500A               	movf	startTimerAtHead@period^0,w,c
  3881  0018BE  5C06               	subwf	??_startTimerAtHead^0,w,c
  3882  0018C0  500B               	movf	(startTimerAtHead@period+1)^0,w,c
  3883  0018C2  5807               	subwfb	(??_startTimerAtHead+1)^0,w,c
  3884  0018C4  500C               	movf	(startTimerAtHead@period+2)^0,w,c
  3885  0018C6  5808               	subwfb	(??_startTimerAtHead+2)^0,w,c
  3886  0018C8  500D               	movf	(startTimerAtHead@period+3)^0,w,c
  3887  0018CA  5809               	subwfb	(??_startTimerAtHead+3)^0,w,c
  3888  0018CC  B0D8               	btfsc	status,0,c
  3889  0018CE  EF6B  F00C         	goto	i2u111_41
  3890  0018D2  EF6D  F00C         	goto	i2u111_40
  3891  0018D6                     i2u111_41:
  3892  0018D6  EF87  F00C         	goto	i2l2474
  3893  0018DA                     i2u111_40:
  3894  0018DA                     
  3895                           ; BSR set to: 57
  3896                           ;timeout.c: 244: {;timeout.c: 245: dummy.absoluteTime = absoluteTimeofLastTimeout + TMR0
      +                          H;
  3897  0018DA  50B7               	movf	183,w,c	;volatile
  3898  0018DC  243E               	addwf	_absoluteTimeofLastTimeout^0,w,c	;volatile
  3899  0018DE  0100               	movlb	0	; () banked
  3900  0018E0  6F83               	movwf	(_dummy+6)& (0+255),b
  3901  0018E2  0E00               	movlw	0
  3902  0018E4  203F               	addwfc	(_absoluteTimeofLastTimeout+1)^0,w,c	;volatile
  3903  0018E6  6F84               	movwf	(_dummy+7)& (0+255),b
  3904  0018E8  0E00               	movlw	0
  3905  0018EA  2040               	addwfc	(_absoluteTimeofLastTimeout+2)^0,w,c	;volatile
  3906  0018EC  6F85               	movwf	(_dummy+8)& (0+255),b
  3907  0018EE  0E00               	movlw	0
  3908  0018F0  2041               	addwfc	(_absoluteTimeofLastTimeout+3)^0,w,c	;volatile
  3909  0018F2  6F86               	movwf	(_dummy+9)& (0+255),b
  3910                           
  3911                           ;timeout.c: 246: dummy.next = listHead;
  3912  0018F4  C04B  F081         	movff	_listHead,_dummy+4
  3913  0018F8  C04C  F082         	movff	_listHead+1,_dummy+5
  3914                           
  3915                           ;timeout.c: 247: listHead = &dummy;
  3916  0018FC  0E7D               	movlw	low _dummy
  3917  0018FE  6E4B               	movwf	_listHead^0,c
  3918  001900  0E00               	movlw	high _dummy
  3919  001902  6E4C               	movwf	(_listHead+1)^0,c
  3920  001904                     
  3921                           ; BSR set to: 0
  3922                           ;timeout.c: 248: period = TMR0H;
  3923  001904  50B7               	movf	183,w,c	;volatile
  3924  001906  6E0A               	movwf	startTimerAtHead@period^0,c
  3925  001908  6A0B               	clrf	(startTimerAtHead@period+1)^0,c
  3926  00190A  6A0C               	clrf	(startTimerAtHead@period+2)^0,c
  3927  00190C  6A0D               	clrf	(startTimerAtHead@period+3)^0,c
  3928  00190E                     i2l2474:
  3929                           
  3930                           ;timeout.c: 249: };timeout.c: 251: setTimerDuration(period);
  3931  00190E  C00A  F002         	movff	startTimerAtHead@period,setTimerDuration@duration
  3932  001912  C00B  F003         	movff	startTimerAtHead@period+1,setTimerDuration@duration+1
  3933  001916  C00C  F004         	movff	startTimerAtHead@period+2,setTimerDuration@duration+2
  3934  00191A  C00D  F005         	movff	startTimerAtHead@period+3,setTimerDuration@duration+3
  3935  00191E  EC3D  F00F         	call	_setTimerDuration	;wreg free
  3936  001922                     
  3937                           ;timeout.c: 253: PIE3bits.TMR0IE = 1;
  3938  001922  0139               	movlb	57	; () banked
  3939  001924  8F93               	bsf	147,7,b	;volatile
  3940  001926                     
  3941                           ; BSR set to: 57
  3942                           ;timeout.c: 254: isRunning = 1;
  3943  001926  0E01               	movlw	1
  3944  001928  6E48               	movwf	_isRunning^0,c	;volatile
  3945  00192A                     i2l87:
  3946  00192A  0012               	return		;funcret
  3947  00192C                     __end_of_startTimerAtHead:
  3948                           	callstack 0
  3949                           
  3950 ;; *************** function _stopTimeouts *****************
  3951 ;; Defined at:
  3952 ;;		line 84 in file "mcc_generated_files/drivers/timeout.c"
  3953 ;; Parameters:    Size  Location     Type
  3954 ;;		None
  3955 ;; Auto vars:     Size  Location     Type
  3956 ;;		None
  3957 ;; Return value:  Size  Location     Type
  3958 ;;                  1    wreg      void 
  3959 ;; Registers used:
  3960 ;;		wreg, status,2
  3961 ;; Tracked objects:
  3962 ;;		On entry : 0/0
  3963 ;;		On exit  : 0/0
  3964 ;;		Unchanged: 0/0
  3965 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3966 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3967 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3968 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3969 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3970 ;;Total ram usage:        0 bytes
  3971 ;; Hardware stack levels used:    1
  3972 ;; This function calls:
  3973 ;;		Nothing
  3974 ;; This function is called by:
  3975 ;;		_startTimerAtHead
  3976 ;;		_timeout_flushAll
  3977 ;; This function uses a non-reentrant model
  3978 ;;
  3979                           
  3980                           	psect	text29
  3981  001E50                     __ptext29:
  3982                           	callstack 0
  3983  001E50                     _stopTimeouts:
  3984                           	callstack 22
  3985  001E50                     
  3986                           ;timeout.c: 86: PIE3bits.TMR0IE = 0;
  3987  001E50  0139               	movlb	57	; () banked
  3988  001E52  9F93               	bcf	147,7,b	;volatile
  3989  001E54                     
  3990                           ; BSR set to: 57
  3991                           ;timeout.c: 87: absoluteTimeofLastTimeout = 0;
  3992  001E54  0E00               	movlw	0
  3993  001E56  6E3E               	movwf	_absoluteTimeofLastTimeout^0,c	;volatile
  3994  001E58  0E00               	movlw	0
  3995  001E5A  6E3F               	movwf	(_absoluteTimeofLastTimeout+1)^0,c	;volatile
  3996  001E5C  0E00               	movlw	0
  3997  001E5E  6E40               	movwf	(_absoluteTimeofLastTimeout+2)^0,c	;volatile
  3998  001E60  0E00               	movlw	0
  3999  001E62  6E41               	movwf	(_absoluteTimeofLastTimeout+3)^0,c	;volatile
  4000                           
  4001                           ;timeout.c: 88: lastTimerLoad = 0;
  4002  001E64  0E00               	movlw	0
  4003  001E66  6E3A               	movwf	_lastTimerLoad^0,c	;volatile
  4004  001E68  0E00               	movlw	0
  4005  001E6A  6E3B               	movwf	(_lastTimerLoad+1)^0,c	;volatile
  4006  001E6C  0E00               	movlw	0
  4007  001E6E  6E3C               	movwf	(_lastTimerLoad+2)^0,c	;volatile
  4008  001E70  0E00               	movlw	0
  4009  001E72  6E3D               	movwf	(_lastTimerLoad+3)^0,c	;volatile
  4010                           
  4011                           ;timeout.c: 89: isRunning = 0;
  4012  001E74  0E00               	movlw	0
  4013  001E76  6E48               	movwf	_isRunning^0,c	;volatile
  4014  001E78                     
  4015                           ; BSR set to: 57
  4016  001E78  0012               	return		;funcret
  4017  001E7A                     __end_of_stopTimeouts:
  4018                           	callstack 0
  4019                           
  4020 ;; *************** function _setTimerDuration *****************
  4021 ;; Defined at:
  4022 ;;		line 97 in file "mcc_generated_files/drivers/timeout.c"
  4023 ;; Parameters:    Size  Location     Type
  4024 ;;  duration        4    1[COMRAM] unsigned long 
  4025 ;; Auto vars:     Size  Location     Type
  4026 ;;		None
  4027 ;; Return value:  Size  Location     Type
  4028 ;;                  1    wreg      void 
  4029 ;; Registers used:
  4030 ;;		wreg, status,2, status,0, cstack
  4031 ;; Tracked objects:
  4032 ;;		On entry : 0/0
  4033 ;;		On exit  : 0/0
  4034 ;;		Unchanged: 0/0
  4035 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4036 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4037 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4038 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4039 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4040 ;;Total ram usage:        4 bytes
  4041 ;; Hardware stack levels used:    1
  4042 ;; Hardware stack levels required when called:    1
  4043 ;; This function calls:
  4044 ;;		_TMR0_WriteTimer
  4045 ;; This function is called by:
  4046 ;;		_startTimerAtHead
  4047 ;;		_sortedInsert
  4048 ;; This function uses a non-reentrant model
  4049 ;;
  4050                           
  4051                           	psect	text30
  4052  001E7A                     __ptext30:
  4053                           	callstack 0
  4054  001E7A                     _setTimerDuration:
  4055                           	callstack 21
  4056  001E7A                     
  4057                           ;timeout.c: 99: lastTimerLoad = TMR0H - duration;
  4058  001E7A  5002               	movf	setTimerDuration@duration^0,w,c
  4059  001E7C  5CB7               	subwf	183,w,c	;volatile
  4060  001E7E  6E3A               	movwf	_lastTimerLoad^0,c	;volatile
  4061  001E80  5003               	movf	(setTimerDuration@duration+1)^0,w,c
  4062  001E82  6A3B               	clrf	(_lastTimerLoad+1)^0,c	;volatile
  4063  001E84  5A3B               	subwfb	(_lastTimerLoad+1)^0,f,c	;volatile
  4064  001E86  5004               	movf	(setTimerDuration@duration+2)^0,w,c
  4065  001E88  6A3C               	clrf	(_lastTimerLoad+2)^0,c	;volatile
  4066  001E8A  5A3C               	subwfb	(_lastTimerLoad+2)^0,f,c	;volatile
  4067  001E8C  5005               	movf	(setTimerDuration@duration+3)^0,w,c
  4068  001E8E  6A3D               	clrf	(_lastTimerLoad+3)^0,c	;volatile
  4069  001E90  5A3D               	subwfb	(_lastTimerLoad+3)^0,f,c	;volatile
  4070  001E92                     
  4071                           ;timeout.c: 101: TMR0_WriteTimer(0);
  4072  001E92  0E00               	movlw	0
  4073  001E94  ECE6  F00F         	call	_TMR0_WriteTimer
  4074  001E98                     
  4075                           ;timeout.c: 103: PIR3bits.TMR0IF = 0;
  4076  001E98  0139               	movlb	57	; () banked
  4077  001E9A  9FA3               	bcf	163,7,b	;volatile
  4078  001E9C                     
  4079                           ; BSR set to: 57
  4080                           ;timeout.c: 104: TMR0_WriteTimer(lastTimerLoad);
  4081  001E9C  503A               	movf	_lastTimerLoad^0,w,c	;volatile
  4082  001E9E  ECE6  F00F         	call	_TMR0_WriteTimer
  4083  001EA2  0012               	return		;funcret
  4084  001EA4                     __end_of_setTimerDuration:
  4085                           	callstack 0
  4086                           
  4087 ;; *************** function _TMR0_WriteTimer *****************
  4088 ;; Defined at:
  4089 ;;		line 109 in file "mcc_generated_files/tmr0.c"
  4090 ;; Parameters:    Size  Location     Type
  4091 ;;  timerVal        1    wreg     unsigned char 
  4092 ;; Auto vars:     Size  Location     Type
  4093 ;;  timerVal        1    0[COMRAM] unsigned char 
  4094 ;; Return value:  Size  Location     Type
  4095 ;;                  1    wreg      void 
  4096 ;; Registers used:
  4097 ;;		wreg
  4098 ;; Tracked objects:
  4099 ;;		On entry : 0/0
  4100 ;;		On exit  : 0/0
  4101 ;;		Unchanged: 0/0
  4102 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4103 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4104 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4105 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4106 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4107 ;;Total ram usage:        1 bytes
  4108 ;; Hardware stack levels used:    1
  4109 ;; This function calls:
  4110 ;;		Nothing
  4111 ;; This function is called by:
  4112 ;;		_setTimerDuration
  4113 ;; This function uses a non-reentrant model
  4114 ;;
  4115                           
  4116                           	psect	text31
  4117  001FCC                     __ptext31:
  4118                           	callstack 0
  4119  001FCC                     _TMR0_WriteTimer:
  4120                           	callstack 21
  4121                           
  4122                           ;incstack = 0
  4123                           ;TMR0_WriteTimer@timerVal stored from wreg
  4124  001FCC  6E01               	movwf	TMR0_WriteTimer@timerVal^0,c
  4125  001FCE                     
  4126                           ;tmr0.c: 112: TMR0L = timerVal;
  4127  001FCE  0060  F007  FFB6   	movff	TMR0_WriteTimer@timerVal,16310	;volatile
  4128  001FD4  0012               	return		;funcret
  4129  001FD6                     __end_of_TMR0_WriteTimer:
  4130                           	callstack 0
  4131                           
  4132 ;; *************** function _enqueueCallback *****************
  4133 ;; Defined at:
  4134 ;;		line 339 in file "mcc_generated_files/drivers/timeout.c"
  4135 ;; Parameters:    Size  Location     Type
  4136 ;;  timer           2    0[COMRAM] PTR struct tmrStruct
  4137 ;;		 -> dummy(10), dummy_exec(10), NULL(0), 
  4138 ;; Auto vars:     Size  Location     Type
  4139 ;;  tmp             2    4[COMRAM] PTR struct tmrStruct
  4140 ;;		 -> dummy(10), dummy_exec(10), NULL(0), 
  4141 ;; Return value:  Size  Location     Type
  4142 ;;                  1    wreg      void 
  4143 ;; Registers used:
  4144 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4145 ;; Tracked objects:
  4146 ;;		On entry : 0/0
  4147 ;;		On exit  : 0/0
  4148 ;;		Unchanged: 0/0
  4149 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4150 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4151 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4152 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4153 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4154 ;;Total ram usage:        6 bytes
  4155 ;; Hardware stack levels used:    1
  4156 ;; This function calls:
  4157 ;;		Nothing
  4158 ;; This function is called by:
  4159 ;;		_timeout_isr
  4160 ;; This function uses a non-reentrant model
  4161 ;;
  4162                           
  4163                           	psect	text32
  4164  00192C                     __ptext32:
  4165                           	callstack 0
  4166  00192C                     _enqueueCallback:
  4167                           	callstack 23
  4168  00192C                     
  4169                           ;timeout.c: 341: timerStruct_t *tmp;;timeout.c: 342: if( timer == &dummy )
  4170  00192C  0E7D               	movlw	low _dummy
  4171  00192E  1801               	xorwf	enqueueCallback@timer^0,w,c
  4172  001930  E107               	bnz	i2u112_41
  4173  001932  0E00               	movlw	high _dummy
  4174  001934  1802               	xorwf	(enqueueCallback@timer+1)^0,w,c
  4175  001936  A4D8               	btfss	status,2,c
  4176  001938  EFA0  F00C         	goto	i2u112_41
  4177  00193C  EFA2  F00C         	goto	i2u112_40
  4178  001940                     i2u112_41:
  4179  001940  EFA6  F00C         	goto	i2l2484
  4180  001944                     i2u112_40:
  4181  001944                     
  4182                           ;timeout.c: 343: {;timeout.c: 344: timer = &dummy_exec;
  4183  001944  0E87               	movlw	low _dummy_exec
  4184  001946  6E01               	movwf	enqueueCallback@timer^0,c
  4185  001948  0E00               	movlw	high _dummy_exec
  4186  00194A  6E02               	movwf	(enqueueCallback@timer+1)^0,c
  4187  00194C                     i2l2484:
  4188                           
  4189                           ;timeout.c: 345: };timeout.c: 346: timer->next = (0);
  4190  00194C  EE20 F004          	lfsr	2,4
  4191  001950  5001               	movf	enqueueCallback@timer^0,w,c
  4192  001952  26D9               	addwf	fsr2l,f,c
  4193  001954  5002               	movf	(enqueueCallback@timer+1)^0,w,c
  4194  001956  22DA               	addwfc	fsr2h,f,c
  4195  001958  0E00               	movlw	0
  4196  00195A  6EDE               	movwf	postinc2,c
  4197  00195C  0E00               	movlw	0
  4198  00195E  6EDD               	movwf	postdec2,c
  4199  001960                     
  4200                           ;timeout.c: 349: if (executeQueueHead == (0))
  4201  001960  5049               	movf	_executeQueueHead^0,w,c	;volatile
  4202  001962  104A               	iorwf	(_executeQueueHead+1)^0,w,c	;volatile
  4203  001964  A4D8               	btfss	status,2,c
  4204  001966  EFB7  F00C         	goto	i2u113_41
  4205  00196A  EFB9  F00C         	goto	i2u113_40
  4206  00196E                     i2u113_41:
  4207  00196E  EFBF  F00C         	goto	i2l2492
  4208  001972                     i2u113_40:
  4209  001972                     
  4210                           ;timeout.c: 350: {;timeout.c: 351: executeQueueHead = timer;
  4211  001972  C001  F049         	movff	enqueueCallback@timer,_executeQueueHead	;volatile
  4212  001976  C002  F04A         	movff	enqueueCallback@timer+1,_executeQueueHead+1	;volatile
  4213  00197A  EFEC  F00C         	goto	i2l116
  4214  00197E                     i2l2492:
  4215                           
  4216                           ;timeout.c: 353: };timeout.c: 356: tmp = executeQueueHead;
  4217  00197E  C049  F005         	movff	_executeQueueHead,enqueueCallback@tmp	;volatile
  4218  001982  C04A  F006         	movff	_executeQueueHead+1,enqueueCallback@tmp+1	;volatile
  4219                           
  4220                           ;timeout.c: 357: while(tmp->next != (0))
  4221  001986  EFD1  F00C         	goto	i2l117
  4222  00198A                     i2l2494:
  4223                           
  4224                           ;timeout.c: 358: tmp = tmp->next;
  4225  00198A  EE20 F004          	lfsr	2,4
  4226  00198E  5005               	movf	enqueueCallback@tmp^0,w,c
  4227  001990  26D9               	addwf	fsr2l,f,c
  4228  001992  5006               	movf	(enqueueCallback@tmp+1)^0,w,c
  4229  001994  22DA               	addwfc	fsr2h,f,c
  4230  001996  006F FF78  F005    	movff	postinc2,enqueueCallback@tmp
  4231  00199C  006F FF74  F006    	movff	postdec2,enqueueCallback@tmp+1
  4232  0019A2                     i2l117:
  4233  0019A2  EE20 F004          	lfsr	2,4
  4234  0019A6  5005               	movf	enqueueCallback@tmp^0,w,c
  4235  0019A8  26D9               	addwf	fsr2l,f,c
  4236  0019AA  5006               	movf	(enqueueCallback@tmp+1)^0,w,c
  4237  0019AC  22DA               	addwfc	fsr2h,f,c
  4238  0019AE  50DE               	movf	postinc2,w,c
  4239  0019B0  10DE               	iorwf	postinc2,w,c
  4240  0019B2  A4D8               	btfss	status,2,c
  4241  0019B4  EFDE  F00C         	goto	i2u114_41
  4242  0019B8  EFE0  F00C         	goto	i2u114_40
  4243  0019BC                     i2u114_41:
  4244  0019BC  EFC5  F00C         	goto	i2l2494
  4245  0019C0                     i2u114_40:
  4246  0019C0                     
  4247                           ;timeout.c: 360: tmp->next = timer;
  4248  0019C0  EE20 F004          	lfsr	2,4
  4249  0019C4  5005               	movf	enqueueCallback@tmp^0,w,c
  4250  0019C6  26D9               	addwf	fsr2l,f,c
  4251  0019C8  5006               	movf	(enqueueCallback@tmp+1)^0,w,c
  4252  0019CA  22DA               	addwfc	fsr2h,f,c
  4253  0019CC  0060  F007  FFDE   	movff	enqueueCallback@timer,postinc2
  4254  0019D2  0060  F00B  FFDD   	movff	enqueueCallback@timer+1,postdec2
  4255  0019D8                     i2l116:
  4256  0019D8  0012               	return		;funcret
  4257  0019DA                     __end_of_enqueueCallback:
  4258                           	callstack 0
  4259                           
  4260                           ;
  4261                           ; Interrupt Vector Table @ 0x8
  4262                           ;
  4263                           
  4264                           	psect	ivt0x8
  4265  000008                     __pivt0x8:
  4266                           	callstack 0
  4267  000008                     ivt0x8_base:
  4268                           	callstack 0
  4269                           
  4270                           ; high-priority vector
  4271  000008  EF64  F00F         	goto	_INTERRUPT_InterruptManager
  4272  000018                     	org	16
  4273                           
  4274                           ; low-priority vector
  4275  000018  00FF               	reset	
  4276                           
  4277                           	psect	text33
  4278  000000                     __ptext33:
  4279                           	callstack 0
  4280  000000                     
  4281                           	psect	rparam
  4282  0000                     
  4283                           	psect	idloc
  4284                           
  4285                           ;Config register IDLOC0 @ 0x200000
  4286                           ;	unspecified, using default values
  4287  200000                     	org	2097152
  4288  200000  0FFF               	dw	4095
  4289                           
  4290                           ;Config register IDLOC1 @ 0x200002
  4291                           ;	unspecified, using default values
  4292  200002                     	org	2097154
  4293  200002  0FFF               	dw	4095
  4294                           
  4295                           ;Config register IDLOC2 @ 0x200004
  4296                           ;	unspecified, using default values
  4297  200004                     	org	2097156
  4298  200004  0FFF               	dw	4095
  4299                           
  4300                           ;Config register IDLOC3 @ 0x200006
  4301                           ;	unspecified, using default values
  4302  200006                     	org	2097158
  4303  200006  0FFF               	dw	4095
  4304                           
  4305                           ;Config register IDLOC4 @ 0x200008
  4306                           ;	unspecified, using default values
  4307  200008                     	org	2097160
  4308  200008  0FFF               	dw	4095
  4309                           
  4310                           ;Config register IDLOC5 @ 0x20000A
  4311                           ;	unspecified, using default values
  4312  20000A                     	org	2097162
  4313  20000A  0FFF               	dw	4095
  4314                           
  4315                           ;Config register IDLOC6 @ 0x20000C
  4316                           ;	unspecified, using default values
  4317  20000C                     	org	2097164
  4318  20000C  0FFF               	dw	4095
  4319                           
  4320                           ;Config register IDLOC7 @ 0x20000E
  4321                           ;	unspecified, using default values
  4322  20000E                     	org	2097166
  4323  20000E  0FFF               	dw	4095
  4324                           
  4325                           	psect	config
  4326                           
  4327                           ;Config register CONFIG1L @ 0x300000
  4328                           ;	External Oscillator Selection
  4329                           ;	FEXTOSC = OFF, Oscillator not enabled
  4330                           ;	Reset Oscillator Selection
  4331                           ;	RSTOSC = HFINTOSC_1MHZ, HFINTOSC with HFFRQ = 4 MHz and CDIV = 4:1
  4332  300000                     	org	3145728
  4333  300000  EC                 	db	236
  4334                           
  4335                           ;Config register CONFIG1H @ 0x300001
  4336                           ;	Clock out Enable bit
  4337                           ;	CLKOUTEN = ON, CLKOUT function is enabled
  4338                           ;	PRLOCKED One-Way Set Enable bit
  4339                           ;	PR1WAY = ON, PRLOCK bit can be cleared and set only once
  4340                           ;	Clock Switch Enable bit
  4341                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
  4342                           ;	Fail-Safe Clock Monitor Enable bit
  4343                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
  4344  300001                     	org	3145729
  4345  300001  FE                 	db	254
  4346                           
  4347                           ;Config register CONFIG2L @ 0x300002
  4348                           ;	MCLR Enable bit
  4349                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RE3 pin function is MCLR
  4350                           ;	Power-up timer selection bits
  4351                           ;	PWRTS = PWRT_OFF, PWRT is disabled
  4352                           ;	Multi-vector enable bit
  4353                           ;	MVECEN = OFF, Interrupt contoller does not use vector table to prioritze interrupts
  4354                           ;	IVTLOCK bit One-way set enable bit
  4355                           ;	IVT1WAY = ON, IVTLOCK bit can be cleared and set only once
  4356                           ;	Low Power BOR Enable bit
  4357                           ;	LPBOREN = OFF, ULPBOR disabled
  4358                           ;	Brown-out Reset Enable bits
  4359                           ;	BOREN = SBORDIS, Brown-out Reset enabled , SBOREN bit is ignored
  4360  300002                     	org	3145730
  4361  300002  F7                 	db	247
  4362                           
  4363                           ;Config register CONFIG2H @ 0x300003
  4364                           ;	Brown-out Reset Voltage Selection bits
  4365                           ;	BORV = VBOR_2P45, Brown-out Reset Voltage (VBOR) set to 2.45V
  4366                           ;	ZCD Disable bit
  4367                           ;	ZCD = OFF, ZCD disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCDCON
  4368                           ;	PPSLOCK bit One-Way Set Enable bit
  4369                           ;	PPS1WAY = ON, PPSLOCK bit can be cleared and set only once; PPS registers remain locke
      +                          d after one clear/set cycle
  4370                           ;	Stack Full/Underflow Reset Enable bit
  4371                           ;	STVREN = ON, Stack full/underflow will cause Reset
  4372                           ;	Debugger Enable bit
  4373                           ;	DEBUG = OFF, Background debugger disabled
  4374                           ;	Extended Instruction Set Enable bit
  4375                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
  4376  300003                     	org	3145731
  4377  300003  FF                 	db	255
  4378                           
  4379                           ;Config register CONFIG3L @ 0x300004
  4380                           ;	WDT Period selection bits
  4381                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  4382                           ;	WDT operating mode
  4383                           ;	WDTE = OFF, WDT Disabled; SWDTEN is ignored
  4384  300004                     	org	3145732
  4385  300004  9F                 	db	159
  4386                           
  4387                           ;Config register CONFIG3H @ 0x300005
  4388                           ;	WDT Window Select bits
  4389                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
  4390                           ;	WDT input clock selector
  4391                           ;	WDTCCS = SC, Software Control
  4392  300005                     	org	3145733
  4393  300005  FF                 	db	255
  4394                           
  4395                           ;Config register CONFIG4L @ 0x300006
  4396                           ;	Boot Block Size selection bits
  4397                           ;	BBSIZE = BBSIZE_512, Boot Block size is 512 words
  4398                           ;	Boot Block enable bit
  4399                           ;	BBEN = OFF, Boot block disabled
  4400                           ;	Storage Area Flash enable bit
  4401                           ;	SAFEN = OFF, SAF disabled
  4402                           ;	Application Block write protection bit
  4403                           ;	WRTAPP = OFF, Application Block not write protected
  4404  300006                     	org	3145734
  4405  300006  FF                 	db	255
  4406                           
  4407                           ;Config register CONFIG4H @ 0x300007
  4408                           ;	Configuration Register Write Protection bit
  4409                           ;	WRTB = OFF, Configuration registers (300000-30000Bh) not write-protected
  4410                           ;	Boot Block Write Protection bit
  4411                           ;	WRTC = OFF, Boot Block (000000-0007FFh) not write-protected
  4412                           ;	Data EEPROM Write Protection bit
  4413                           ;	WRTD = OFF, Data EEPROM not write-protected
  4414                           ;	SAF Write protection bit
  4415                           ;	WRTSAF = OFF, SAF not Write Protected
  4416                           ;	Low Voltage Programming Enable bit
  4417                           ;	LVP = ON, Low voltage programming enabled. MCLR/VPP pin function is MCLR. MCLRE config
      +                          uration bit is ignored
  4418  300007                     	org	3145735
  4419  300007  FF                 	db	255
  4420                           
  4421                           ;Config register CONFIG5L @ 0x300008
  4422                           ;	PFM and Data EEPROM Code Protection bit
  4423                           ;	CP = OFF, PFM and Data EEPROM code protection disabled
  4424  300008                     	org	3145736
  4425  300008  FF                 	db	255
  4426                           
  4427                           ;Config register CONFIG5H @ 0x300009
  4428                           ;	unspecified, using default values
  4429  300009                     	org	3145737
  4430  300009  FF                 	db	255
  4431                           tosu	equ	0x3FFF
  4432                           tosh	equ	0x3FFE
  4433                           tosl	equ	0x3FFD
  4434                           stkptr	equ	0x3FFC
  4435                           pclatu	equ	0x3FFB
  4436                           pclath	equ	0x3FFA
  4437                           pcl	equ	0x3FF9
  4438                           tblptru	equ	0x3FF8
  4439                           tblptrh	equ	0x3FF7
  4440                           tblptrl	equ	0x3FF6
  4441                           tablat	equ	0x3FF5
  4442                           prodh	equ	0x3FF4
  4443                           prodl	equ	0x3FF3
  4444                           indf0	equ	0x3FEF
  4445                           postinc0	equ	0x3FEE
  4446                           postdec0	equ	0x3FED
  4447                           preinc0	equ	0x3FEC
  4448                           plusw0	equ	0x3FEB
  4449                           fsr0h	equ	0x3FEA
  4450                           fsr0l	equ	0x3FE9
  4451                           wreg	equ	0x3FE8
  4452                           indf1	equ	0x3FE7
  4453                           postinc1	equ	0x3FE6
  4454                           postdec1	equ	0x3FE5
  4455                           preinc1	equ	0x3FE4
  4456                           plusw1	equ	0x3FE3
  4457                           fsr1h	equ	0x3FE2
  4458                           fsr1l	equ	0x3FE1
  4459                           bsr	equ	0x3FE0
  4460                           indf2	equ	0x3FDF
  4461                           postinc2	equ	0x3FDE
  4462                           postdec2	equ	0x3FDD
  4463                           preinc2	equ	0x3FDC
  4464                           plusw2	equ	0x3FDB
  4465                           fsr2h	equ	0x3FDA
  4466                           fsr2l	equ	0x3FD9
  4467                           status	equ	0x3FD8

Data Sizes:
    Strings     105
    Constant    72
    Data        10
    BSS         33
    Persistent  8
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     53      76
    BANK0           160     29      57
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0

Pointer List with Targets:

    dummy_exec.next.next	PTR struct tmrStruct size(2) Largest target is 0
		 -> dummy(BANK0[10]), dummy_exec(BANK0[10]), NULL(NULL[0]), 

    dummy_exec.next.payload	PTR void  size(2) Largest target is 0

    dummy_exec.next.callbackPtr	PTR FTN(PTR void ,)unsigned long  size(2) Largest target is 0
		 -> dummyHandler(), 

    S766$0$0	PTR void  size(2) Largest target is 0

    S25$0$0	PTR void  size(2) Largest target is 0

    printf@cp	PTR const unsigned char  size(2) Largest target is 1
		 -> printf@c(BANK0[1]), 

    printf@f	PTR const unsigned char  size(2) Largest target is 29
		 -> STR_11(CODE[7]), STR_10(CODE[9]), STR_9(CODE[9]), STR_8(CODE[15]), 
		 -> STR_7(CODE[15]), STR_6(CODE[29]), STR_5(CODE[9]), STR_4(CODE[6]), 
		 -> STR_3(CODE[12]), STR_2(CODE[6]), STR_1(CODE[8]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), rtcount_isr(), timeout_isr(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), TMR0_DefaultInterruptHandler(), rtcount_isr(), timeout_isr(), 

    rtcount_printList@basePoint.next	volatile PTR struct rtcountStruct size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    rtcount_printList@basePoint.payload	PTR void  size(2) Largest target is 0

    rtcount_printList@basePoint.callbackPtr	PTR FTN(PTR void ,)long  size(2) Largest target is 0

    rtcount_stopTimer@timer.next	volatile PTR struct rtcountStruct size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    rtcount_stopTimer@timer.payload	PTR void  size(2) Largest target is 0

    rtcount_stopTimer@timer.callbackPtr	PTR FTN(PTR void ,)long  size(2) Largest target is 0

    rtcount_callNextCallback@timer.next	volatile PTR struct rtcountStruct size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    rtcount_callNextCallback@timer.payload	PTR void  size(2) Largest target is 0

    rtcount_callNextCallback@timer.callbackPtr	PTR FTN(PTR void ,)long  size(2) Largest target is 0

    rtcount_delete@prevTimer.next.next	volatile PTR struct rtcountStruct size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    rtcount_delete@prevTimer.next.payload	PTR void  size(2) Largest target is 0

    rtcount_delete@prevTimer.next.callbackPtr	PTR FTN(PTR void ,)long  size(2) Largest target is 0

    rtcount_delete@prevTimer.next	volatile PTR struct rtcountStruct size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    rtcount_delete@prevTimer.payload	PTR void  size(2) Largest target is 0

    rtcount_delete@prevTimer.callbackPtr	PTR FTN(PTR void ,)long  size(2) Largest target is 0

    rtcount_delete@findTimer.next	volatile PTR struct rtcountStruct size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    rtcount_delete@findTimer.payload	PTR void  size(2) Largest target is 0

    rtcount_delete@findTimer.callbackPtr	PTR FTN(PTR void ,)long  size(2) Largest target is 0

    rtcount_reschedule@timer.next	volatile PTR struct rtcountStruct size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    rtcount_reschedule@timer.payload	PTR void  size(2) Largest target is 0

    rtcount_reschedule@timer.callbackPtr	PTR FTN(PTR void ,)long  size(2) Largest target is 0

    rtcount_create@timer.next	volatile PTR struct rtcountStruct size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    rtcount_create@timer.payload	PTR void  size(2) Largest target is 0

    rtcount_create@timer.callbackPtr	PTR FTN(PTR void ,)long  size(2) Largest target is 0

    rebase@thisone.next	volatile PTR struct rtcountStruct size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    rebase@thisone.payload	PTR void  size(2) Largest target is 0

    rebase@thisone.callbackPtr	PTR FTN(PTR void ,)long  size(2) Largest target is 0

    rtcount_sortedInsert@prevPoint.next.next	volatile PTR struct rtcountStruct size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    rtcount_sortedInsert@prevPoint.next.payload	PTR void  size(2) Largest target is 0

    rtcount_sortedInsert@prevPoint.next.callbackPtr	PTR FTN(PTR void ,)long  size(2) Largest target is 0

    rtcoutListHead.next	volatile PTR struct rtcountStruct size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    rtcoutListHead.payload	PTR void  size(2) Largest target is 0

    rtcoutListHead.callbackPtr	PTR FTN(PTR void ,)long  size(2) Largest target is 0

    rtcount_sortedInsert@timer.next.next	volatile PTR struct rtcountStruct size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    rtcount_sortedInsert@timer.next.payload	PTR void  size(2) Largest target is 0

    rtcount_sortedInsert@timer.next.callbackPtr	PTR FTN(PTR void ,)long  size(2) Largest target is 0

    rtcount_sortedInsert@prevPoint.next	volatile PTR struct rtcountStruct size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    rtcount_sortedInsert@prevPoint.payload	PTR void  size(2) Largest target is 0

    rtcount_sortedInsert@prevPoint.callbackPtr	PTR FTN(PTR void ,)long  size(2) Largest target is 0

    rtcount_sortedInsert@insertPoint.next	volatile PTR struct rtcountStruct size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    rtcount_sortedInsert@insertPoint.payload	PTR void  size(2) Largest target is 0

    rtcount_sortedInsert@insertPoint.callbackPtr	PTR FTN(PTR void ,)long  size(2) Largest target is 0

    rtcoutListHead	volatile PTR volatile struct rtcountStruct size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S766rtcountStruct$next	volatile PTR struct rtcountStruct size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    rtcount_sortedInsert@timer.next	volatile PTR struct rtcountStruct size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S766rtcountStruct$payload	PTR void  size(2) Largest target is 0

    rtcount_sortedInsert@timer.payload	PTR void  size(2) Largest target is 0

    S766rtcountStruct$callbackPtr	PTR FTN(PTR void ,)long  size(2) Largest target is 0

    rtcount_sortedInsert@timer.callbackPtr	PTR FTN(PTR void ,)long  size(2) Largest target is 0

    UART2_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART2_DefaultErrorHandler(), 

    UART2_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART2_DefaultOverrunErrorHandler(), 

    UART2_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART2_DefaultFramingErrorHandler(), 

    UART2_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), UART2_DefaultErrorHandler(), 

    UART2_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), UART2_DefaultOverrunErrorHandler(), 

    UART2_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), UART2_DefaultFramingErrorHandler(), 

    timeout_stopTimer@timer.next	PTR struct tmrStruct size(2) Largest target is 12
		 -> dummy(BANK0[10]), dummy_exec(BANK0[10]), NULL(NULL[0]), 

    timeout_stopTimer@timer.payload	PTR void  size(2) Largest target is 0

    timeout_stopTimer@timer.callbackPtr	PTR FTN(PTR void ,)unsigned long  size(2) Largest target is 4
		 -> dummyHandler(), 

    timeout_isr@next.next	PTR struct tmrStruct size(2) Largest target is 12
		 -> dummy(BANK0[10]), dummy_exec(BANK0[10]), NULL(NULL[0]), 

    timeout_isr@next.payload	PTR void  size(2) Largest target is 0

    timeout_isr@next.callbackPtr	PTR FTN(PTR void ,)unsigned long  size(2) Largest target is 4
		 -> dummyHandler(), 

    timeout_isr@next	PTR struct tmrStruct size(2) Largest target is 12
		 -> dummy(BANK0[10]), dummy_exec(BANK0[10]), NULL(NULL[0]), 

    timeout_create@timer.next	PTR struct tmrStruct size(2) Largest target is 12
		 -> dummy(BANK0[10]), dummy_exec(BANK0[10]), NULL(NULL[0]), 

    timeout_create@timer.payload	PTR void  size(2) Largest target is 0

    timeout_create@timer.callbackPtr	PTR FTN(PTR void ,)unsigned long  size(2) Largest target is 4
		 -> dummyHandler(), 

    timeout_callNextCallback@callBackTimer.next	PTR struct tmrStruct size(2) Largest target is 12
		 -> dummy(BANK0[10]), dummy_exec(BANK0[10]), NULL(NULL[0]), 

    timeout_callNextCallback@callBackTimer.payload	PTR void  size(2) Largest target is 0

    timeout_callNextCallback@callBackTimer.callbackPtr	PTR FTN(PTR void ,)unsigned long  size(2) Largest target is 4
		 -> dummyHandler(), 

    enqueueCallback@tmp.next.next	PTR struct tmrStruct size(2) Largest target is 12
		 -> dummy(BANK0[10]), dummy_exec(BANK0[10]), NULL(NULL[0]), 

    enqueueCallback@tmp.next.payload	PTR void  size(2) Largest target is 0

    enqueueCallback@tmp.next.callbackPtr	PTR FTN(PTR void ,)unsigned long  size(2) Largest target is 4
		 -> dummyHandler(), 

    enqueueCallback@tmp.next	PTR struct tmrStruct size(2) Largest target is 12
		 -> dummy(BANK0[10]), dummy_exec(BANK0[10]), NULL(NULL[0]), 

    enqueueCallback@tmp.payload	PTR void  size(2) Largest target is 0

    enqueueCallback@tmp.callbackPtr	PTR FTN(PTR void ,)unsigned long  size(2) Largest target is 4
		 -> dummyHandler(), 

    enqueueCallback@tmp	PTR struct tmrStruct size(2) Largest target is 12
		 -> dummy(BANK0[10]), dummy_exec(BANK0[10]), NULL(NULL[0]), 

    executeQueueHead.next	PTR struct tmrStruct size(2) Largest target is 12
		 -> dummy(BANK0[10]), dummy_exec(BANK0[10]), NULL(NULL[0]), 

    executeQueueHead.payload	PTR void  size(2) Largest target is 0

    executeQueueHead.callbackPtr	PTR FTN(PTR void ,)unsigned long  size(2) Largest target is 4
		 -> dummyHandler(), 

    enqueueCallback@timer.next	PTR struct tmrStruct size(2) Largest target is 12
		 -> dummy(BANK0[10]), dummy_exec(BANK0[10]), NULL(NULL[0]), 

    enqueueCallback@timer.payload	PTR void  size(2) Largest target is 0

    enqueueCallback@timer.callbackPtr	PTR FTN(PTR void ,)unsigned long  size(2) Largest target is 4
		 -> dummyHandler(), 

    enqueueCallback@timer	PTR struct tmrStruct size(2) Largest target is 12
		 -> dummy(BANK0[10]), dummy_exec(BANK0[10]), NULL(NULL[0]), 

    timeout_delete@timer.next	PTR struct tmrStruct size(2) Largest target is 12
		 -> dummy(BANK0[10]), dummy_exec(BANK0[10]), NULL(NULL[0]), 

    timeout_delete@timer.payload	PTR void  size(2) Largest target is 0

    timeout_delete@timer.callbackPtr	PTR FTN(PTR void ,)unsigned long  size(2) Largest target is 4
		 -> dummyHandler(), 

    timeout_deleteHelper@prevTimer.next.next	PTR struct tmrStruct size(2) Largest target is 12
		 -> dummy(BANK0[10]), dummy_exec(BANK0[10]), NULL(NULL[0]), 

    timeout_deleteHelper@prevTimer.next.payload	PTR void  size(2) Largest target is 0

    timeout_deleteHelper@prevTimer.next.callbackPtr	PTR FTN(PTR void ,)unsigned long  size(2) Largest target is 4
		 -> dummyHandler(), 

    timeout_deleteHelper@prevTimer.next	PTR struct tmrStruct size(2) Largest target is 12
		 -> dummy(BANK0[10]), dummy_exec(BANK0[10]), NULL(NULL[0]), 

    timeout_deleteHelper@prevTimer.payload	PTR void  size(2) Largest target is 0

    timeout_deleteHelper@prevTimer.callbackPtr	PTR FTN(PTR void ,)unsigned long  size(2) Largest target is 4
		 -> dummyHandler(), 

    timeout_deleteHelper@findTimer.next	PTR struct tmrStruct size(2) Largest target is 12
		 -> dummy(BANK0[10]), dummy_exec(BANK0[10]), NULL(NULL[0]), 

    timeout_deleteHelper@findTimer.payload	PTR void  size(2) Largest target is 0

    timeout_deleteHelper@findTimer.callbackPtr	PTR FTN(PTR void ,)unsigned long  size(2) Largest target is 4
		 -> dummyHandler(), 

    timeout_deleteHelper@list.next	PTR struct tmrStruct size(2) Largest target is 12
		 -> dummy(BANK0[10]), dummy_exec(BANK0[10]), NULL(NULL[0]), 

    timeout_deleteHelper@list.payload	PTR void  size(2) Largest target is 0

    timeout_deleteHelper@list.callbackPtr	PTR FTN(PTR void ,)unsigned long  size(2) Largest target is 4
		 -> dummyHandler(), 

    dummy.next.next	PTR struct tmrStruct size(2) Largest target is 12
		 -> dummy(BANK0[10]), dummy_exec(BANK0[10]), NULL(NULL[0]), 

    dummy.next.payload	PTR void  size(2) Largest target is 0

    dummy.next.callbackPtr	PTR FTN(PTR void ,)unsigned long  size(2) Largest target is 4
		 -> dummyHandler(), 

    sortedInsert@prevPoint.next.next	PTR struct tmrStruct size(2) Largest target is 12
		 -> dummy(BANK0[10]), dummy_exec(BANK0[10]), NULL(NULL[0]), 

    sortedInsert@prevPoint.next.payload	PTR void  size(2) Largest target is 0

    sortedInsert@prevPoint.next.callbackPtr	PTR FTN(PTR void ,)unsigned long  size(2) Largest target is 4
		 -> dummyHandler(), 

    sortedInsert@timer.next.next	PTR struct tmrStruct size(2) Largest target is 12
		 -> dummy(BANK0[10]), dummy_exec(BANK0[10]), NULL(NULL[0]), 

    sortedInsert@timer.next.payload	PTR void  size(2) Largest target is 0

    sortedInsert@timer.next.callbackPtr	PTR FTN(PTR void ,)unsigned long  size(2) Largest target is 4
		 -> dummyHandler(), 

    listHead.next	PTR struct tmrStruct size(2) Largest target is 12
		 -> dummy(BANK0[10]), dummy_exec(BANK0[10]), NULL(NULL[0]), 

    listHead.payload	PTR void  size(2) Largest target is 0

    listHead.callbackPtr	PTR FTN(PTR void ,)unsigned long  size(2) Largest target is 4
		 -> dummyHandler(), 

    sortedInsert$238.next	PTR struct tmrStruct size(2) Largest target is 12
		 -> dummy(BANK0[10]), dummy_exec(BANK0[10]), NULL(NULL[0]), 

    sortedInsert$238.payload	PTR void  size(2) Largest target is 0

    sortedInsert$238.callbackPtr	PTR FTN(PTR void ,)unsigned long  size(2) Largest target is 4
		 -> dummyHandler(), 

    sortedInsert@prevPoint.next	PTR struct tmrStruct size(2) Largest target is 12
		 -> dummy(BANK0[10]), dummy_exec(BANK0[10]), NULL(NULL[0]), 

    sortedInsert@prevPoint.payload	PTR void  size(2) Largest target is 0

    sortedInsert@prevPoint.callbackPtr	PTR FTN(PTR void ,)unsigned long  size(2) Largest target is 4
		 -> dummyHandler(), 

    sortedInsert@insertPoint.next	PTR struct tmrStruct size(2) Largest target is 12
		 -> dummy(BANK0[10]), dummy_exec(BANK0[10]), NULL(NULL[0]), 

    sortedInsert@insertPoint.payload	PTR void  size(2) Largest target is 0

    sortedInsert@insertPoint.callbackPtr	PTR FTN(PTR void ,)unsigned long  size(2) Largest target is 4
		 -> dummyHandler(), 

    sortedInsert@timer.next	PTR struct tmrStruct size(2) Largest target is 12
		 -> dummy(BANK0[10]), dummy_exec(BANK0[10]), NULL(NULL[0]), 

    sortedInsert@timer.payload	PTR void  size(2) Largest target is 0

    sortedInsert@timer.callbackPtr	PTR FTN(PTR void ,)unsigned long  size(2) Largest target is 4
		 -> dummyHandler(), 

    printList@basePoint.next	PTR struct tmrStruct size(2) Largest target is 12
		 -> dummy(BANK0[10]), dummy_exec(BANK0[10]), NULL(NULL[0]), 

    printList@basePoint.payload	PTR void  size(2) Largest target is 0

    printList@basePoint.callbackPtr	PTR FTN(PTR void ,)unsigned long  size(2) Largest target is 4
		 -> dummyHandler(), 

    rebaseList@basePoint.next	PTR struct tmrStruct size(2) Largest target is 12
		 -> dummy(BANK0[10]), dummy_exec(BANK0[10]), NULL(NULL[0]), 

    rebaseList@basePoint.payload	PTR void  size(2) Largest target is 0

    rebaseList@basePoint.callbackPtr	PTR FTN(PTR void ,)unsigned long  size(2) Largest target is 4
		 -> dummyHandler(), 

    timeout_getTimeRemaining@timer.next	PTR struct tmrStruct size(2) Largest target is 12
		 -> dummy(BANK0[10]), dummy_exec(BANK0[10]), NULL(NULL[0]), 

    timeout_getTimeRemaining@timer.payload	PTR void  size(2) Largest target is 0

    timeout_getTimeRemaining@timer.callbackPtr	PTR FTN(PTR void ,)unsigned long  size(2) Largest target is 4
		 -> dummyHandler(), 

    executeQueueHead	volatile PTR struct tmrStruct size(2) Largest target is 12
		 -> dummy(BANK0[10]), dummy_exec(BANK0[10]), NULL(NULL[0]), 

    listHead	PTR struct tmrStruct size(2) Largest target is 12
		 -> dummy(BANK0[10]), dummy_exec(BANK0[10]), NULL(NULL[0]), 

    dummy_exec.next	PTR struct tmrStruct size(2) Largest target is 12
		 -> dummy(BANK0[10]), dummy_exec(BANK0[10]), NULL(NULL[0]), 

    dummy_exec.payload	PTR void  size(2) Largest target is 0

    dummy_exec.callbackPtr	PTR FTN(PTR void ,)unsigned long  size(2) Largest target is 4
		 -> dummyHandler(), 

    S25tmrStruct$next	PTR struct tmrStruct size(2) Largest target is 12
		 -> dummy(BANK0[10]), dummy_exec(BANK0[10]), NULL(NULL[0]), 

    dummy.next	PTR struct tmrStruct size(2) Largest target is 12
		 -> dummy(BANK0[10]), dummy_exec(BANK0[10]), NULL(NULL[0]), 

    S25tmrStruct$payload	PTR void  size(2) Largest target is 0

    dummy.payload	PTR void  size(2) Largest target is 0

    S25tmrStruct$callbackPtr	PTR FTN(PTR void ,)unsigned long  size(2) Largest target is 4
		 -> dummyHandler(), 

    dummy.callbackPtr	PTR FTN(PTR void ,)unsigned long  size(2) Largest target is 4
		 -> dummyHandler(), 


Critical Paths under _main in COMRAM

    _main->_printf
    _clearPuTTY->_printf
    _printf->___llmod
    _putch->_UART2_Write
    ___llmod->___lldiv
    _timeout_initialize->_TMR0_SetInterruptHandler
    _rtcount_initialize->_TMR0_SetInterruptHandler
    _UART2_Initialize->_UART2_SetErrorHandler
    _UART2_Initialize->_UART2_SetFramingErrorHandler
    _UART2_Initialize->_UART2_SetOverrunErrorHandler
    _TMR0_Initialize->_TMR0_SetInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _TMR0_ISR->_timeout_isr
    _timeout_isr->_startTimerAtHead
    _startTimerAtHead->_setTimerDuration
    _setTimerDuration->_TMR0_WriteTimer

Critical Paths under _main in BANK0

    _main->_printf
    _clearPuTTY->_printf

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                15    15      0   10135
                                             51 COMRAM     2     2      0
                                             18 BANK0     11    11      0
                  _SYSTEM_Initialize
                         _clearPuTTY
             _poll_switch1_for_edges
                             _printf
 ---------------------------------------------------------------------------------
 (1) _poll_switch1_for_edges                               4     2      2     145
                                             15 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _clearPuTTY                                           0     0      0    4351
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                              36    26     10    4351
                                             37 COMRAM    14     4     10
                                              0 BANK0     18    18      0
                            ___lldiv
                            ___llmod
                             ___wmul
                            _isdigit
                              _putch
 ---------------------------------------------------------------------------------
 (2) _putch                                                1     1      0      62
                                             16 COMRAM     1     1      0
                        _UART2_Write
 ---------------------------------------------------------------------------------
 (3) _UART2_Write                                          1     1      0      31
                                             15 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              3     3      0      99
                                             15 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     412
                                             15 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___llmod                                              9     1      8     412
                                             28 COMRAM     9     1      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8     601
                                             15 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0    1044
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _TMR0_Initialize
                   _UART2_Initialize
                 _rtcount_initialize
                 _timeout_initialize
 ---------------------------------------------------------------------------------
 (2) _timeout_initialize                                   0     0      0     250
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _rtcount_initialize                                   0     0      0     250
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _UART2_Initialize                                     0     0      0     294
              _UART2_SetErrorHandler
       _UART2_SetFramingErrorHandler
       _UART2_SetOverrunErrorHandler
 ---------------------------------------------------------------------------------
 (3) _UART2_SetOverrunErrorHandler                         2     0      2      98
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _UART2_SetFramingErrorHandler                         2     0      2      98
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _UART2_SetErrorHandler                                2     0      2      98
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0     250
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR0_SetInterruptHandler                             2     0      2     250
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _INTERRUPT_InterruptManager                           0     0      0     498
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (6) _TMR0_ISR                                             0     0      0     498
                   Absolute function *
       _TMR0_DefaultInterruptHandler *
                        _rtcount_isr *
                        _timeout_isr *
 ---------------------------------------------------------------------------------
 (7) _timeout_isr                                          2     2      0     498
                                             13 COMRAM     2     2      0
                    _enqueueCallback
                   _startTimerAtHead
 ---------------------------------------------------------------------------------
 (8) _startTimerAtHead                                     8     8      0     242
                                              5 COMRAM     8     8      0
                   _setTimerDuration
                       _stopTimeouts
 ---------------------------------------------------------------------------------
 (9) _stopTimeouts                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _setTimerDuration                                     4     0      4     196
                                              1 COMRAM     4     0      4
                    _TMR0_WriteTimer
 ---------------------------------------------------------------------------------
 (10) _TMR0_WriteTimer                                     1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (8) _enqueueCallback                                      6     4      2     233
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (7) _rtcount_isr                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _TMR0_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (7) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
     _UART2_Initialize
       _UART2_SetErrorHandler
       _UART2_SetFramingErrorHandler
       _UART2_SetOverrunErrorHandler
     _rtcount_initialize
       _TMR0_SetInterruptHandler
     _timeout_initialize
       _TMR0_SetInterruptHandler
   _clearPuTTY
     _printf
       ___lldiv
       ___llmod
         ___lldiv (ARG)
       ___wmul
       _isdigit
       _putch
         _UART2_Write
   _poll_switch1_for_edges
   _printf
     ___lldiv
     ___llmod
       ___lldiv (ARG)
     ___wmul
     _isdigit
     _putch
       _UART2_Write

 _INTERRUPT_InterruptManager (ROOT)
   _TMR0_ISR
     Absolute function(Fake) *
     _TMR0_DefaultInterruptHandler *
     _rtcount_isr *
     _timeout_isr *
       _enqueueCallback
       _startTimerAtHead
         _setTimerDuration
           _TMR0_WriteTimer
         _stopTimeouts

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             FFF      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK15          100      0       0      30        0.0%
BANK15             100      0       0      31        0.0%
BITBANK14          100      0       0      28        0.0%
BANK14             100      0       0      29        0.0%
BITBANK13          100      0       0      36        0.0%
BANK13             100      0       0      27        0.0%
BITBANK12          100      0       0      35        0.0%
BANK12             100      0       0      26        0.0%
BITBANK11          100      0       0      34        0.0%
BANK11             100      0       0      25        0.0%
BITBANK10          100      0       0      33        0.0%
BANK10             100      0       0      24        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     1D      39       5       35.6%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     35      4C       1       80.0%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      85      32        0.0%
DATA                 0      0      85       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.30 build 20200825195618 
Symbol Table                                                                                   Sat Nov 14 00:44:30 2020

                         ___wmul@multiplicand 0012                                   _rtcount_isr 1F62  
                                         l128 1F80                                           l304 1FA2  
                                         l322 1FC0                                           l316 1FB6  
                                         l413 1B1A                                           l319 1FAC  
                                         l192 1F60                                           l602 1816  
                                         l427 1FD8                                           l195 1EC6  
                                         l604 1818                                           l269 1D74  
                                         l189 1F0C                                           l543 1F2E  
                                         l295 1F32                                           l615 1D18  
                                         l456 1F8E                                           l730 1E4E  
                                         l298 1F48                                           l565 1FCA  
                                         l727 1740                                           l591 1806  
                                         l648 1C20                                           l593 1808  
                                         l691 136C                                           l764 1A7C  
                                         l757 1A6C                                           l597 180E  
                                         l678 119C                                           l599 1810  
                                         l696 13AA                       __size_of_PMD_Initialize 0024  
                                         tosl 003FFD                                           wreg 003FE8  
                                        l1145 1BA2                                          l1138 1B92  
                                        l3010 1CDC                                          l3002 1CA0  
                                        l3012 1CEE                                          l3004 1CA8  
                                        l3014 1D00                                          l3006 1CBA  
                                        l3016 1D10                                          l3008 1CCC  
                                        l2500 1FAE                                          l3300 1B54  
                                        l2502 1FA4                                          l3302 1B72  
                                        l3310 10C2                                          l2504 1FB8  
                                        l3304 1B82                                          l3320 111C  
                                        l3312 10D4                                          l3306 1B8C  
                                        l1394 1DF2                                          l3250 1F9C  
                                        l3402 1472                                          l3330 119A  
                                        l3322 1138                                          l3314 10DE  
                                        l3260 1DEC                                          l3252 1DC4  
                                        l3412 1492                                          l3340 11D4  
                                        l3332 11A2                                          l3324 1168  
                                        l3316 10EE                                          l3308 10B4  
                                        l3500 174A                                          l3270 19DA  
                                        l3254 1DC8                                          l3246 1F32  
                                        l3430 152E                                          l3406 1478  
                                        l3422 14D8                                          l3350 123A  
                                        l3342 11F4                                          l3334 11B8  
                                        l3326 116C                                          l3318 1112  
                                        l3510 177A                                          l3502 1754  
                                        l3280 1A22                                          l3272 19EA  
                                        l3264 1E26                                          l3256 1DD8  
                                        l3248 1F42                                          l3440 157E  
                                        l3432 1552                                          l3416 14D2  
                                        l3408 147C                                          l3424 14F8  
                                        l3352 1242                                          l3344 1206  
                                        l3336 11C2                                          l3328 1194  
                                        l3360 125E                                          l3520 17CE  
                                        l3512 178C                                          l3504 1758  
                                        l3290 1A66                                          l3282 1A2C  
                                        l3274 1A00                                          l3266 1E46  
                                        l3258 1DE8                                          l3450 1652  
                                        l3442 1598                                          l3434 155E  
                                        l3426 150A                                          l3370 131C  
                                        l3354 124A                                          l3346 120C  
                                        l3338 11CE                                          l3362 12C0  
                                        l3522 17E6                                          l3514 17A0  
                                        l3506 1764                                          l3284 1A4A  
                                        l3276 1A08                                          l3292 1B1C  
                                        l3452 16B4                                          l3460 16F8  
                                        l3444 15B6                                          l3436 1566  
                                        l3428 1528                                          l3380 137A  
                                        l3372 133E                                          l3364 12DE  
                                        l3356 1256                                          l3348 122A  
                                        l3524 17EE                                          l3516 17A4  
                                        l3508 1770                                          l2830 1EA4  
                                        l2814 1F74                                          l3286 1A5A  
                                        l3278 1A14                                          l3294 1B32  
                                        l3446 15BC                                          l3438 1578  
                                        l3390 140C                                          l3382 139E  
                                        l3374 1346                                          l3366 12EC  
                                        l3462 1714                                          l3518 17BA  
                                        l2840 1AF6                                          l2832 1A7E  
                                        l3288 1A5C                                          l3296 1B3A  
                                        l3456 16D2                                          l3448 15C8  
                                        l3392 1418                                          l3384 13B8  
                                        l3376 1354                                          l3368 1310  
                                        l3464 1BA4                                          l3528 181E  
                                        l2850 1B04                                          l2842 1AF8  
                                        l2834 1A96                                          l2498 1FC2  
                                        l3298 1B46                                          l3458 16F2  
                                        l3394 141C                                          l3386 13DC  
                                        l3378 1358                                          l3554 1834  
                                        l3490 1746                                          l2828 1FD6  
                                        l2852 1B06                                          l2844 1AFA  
                                        l2836 1A9C                                          l2860 1F12  
                                        l2940 1EF0                                          l3388 13E8  
                                        l3492 174A                                          l2854 1B08  
                                        l2846 1AFC                                          l2838 1AA8  
                                        l2862 1F18                                          l2870 1D1A  
                                        l2950 1F04                                          l2942 1EF4  
                                        l3398 1432                                          l3494 174A  
                                        l2856 1F4A                                          l2848 1B02  
                                        l2864 1F1C                                          l2872 1D4C  
                                        l2880 1F82                                          l2952 1F08  
                                        l2944 1EF8                                          l3496 174A  
                                        l3488 1742                                          l2866 1F1E  
                                        l2858 1F0E                                          l2874 1D58  
                                        l2946 1EFC                                          l2938 1EEC  
                                        l3498 174A                                          l2868 1F2A  
                                        l2876 1D64                                          l2948 1F00  
                                        l2878 1D70                                          STR_1 10A4  
                                        STR_2 10AC                                          STR_3 1086  
                                        STR_5 109B                                          STR_6 1049  
                                        STR_7 1077                                          STR_8 1077  
                                        STR_9 1092                                          u2000 1DD8  
                                        u2001 1DD4                                          u2010 1DE8  
                                        u2011 1DE4                                          u2020 1A00  
                                        u2100 1190                                          u2021 19FC  
                                        u2101 118C                                          u2030 1A22  
                                        u2110 11B8                                          u2031 1A1E  
                                        u2111 11B4                                          u2040 1A4A  
                                        u2200 146E                                          u2120 11F0  
                                        u2041 1A46                                          u2201 146A  
                                        u2121 11EC                                          u2050 1B32  
                                        u2210 148E                                          u2130 1226  
                                        u2051 1B2E                                          u2211 148A  
                                        u2131 1222                                          u2060 1B54  
                                        u2300 1740                                          u2220 14CE  
                                        u2140 12DE                                          u2061 1B50  
                                        u2301 173C                                          u2221 14CA  
                                        u2141 12DA                                          _LATA 003FBA  
                                        u2070 1B72                                          u2230 150A  
                                        u2150 12EC                                          _LATB 003FBB  
                                        u2071 1B6E                                          u2231 1506  
                                        u2151 12E8                                          _LATC 003FBC  
                                        u2240 1528                                          u2160 1354  
                                        u2080 10D4                                          _LATD 003FBD  
                                        u2241 1524                                          u2161 1350  
                                        u2081 10D0                                          _LATE 003FBE  
                                        u2250 1552                                          u2170 137A  
                                        u2090 1112                                          u2330 17A0  
                                        u2251 154E                                          u2171 1376  
                                        u2091 110E                                          u2331 179C  
                                        u2260 1578                                          u2180 13B8  
                                        u2340 17BA                                          u2261 1574  
                                        u2181 13B4                                          u2341 17B6  
                                        u2270 1598                                          u2190 142E  
                                        u2350 17E6                                          u2271 1594  
                                        u2191 142A                                          u2351 17E2  
                                        u2280 15B6                                          u1720 1CBA  
                                        u2281 15B2                                          u1721 1CB6  
                                        u2290 1714                                          u1730 1CCC  
                                        u2291 1710                                          u1731 1CC8  
                                        u1740 1CEE                                          u1741 1CEA  
                                        u1750 1D00                                          u1751 1CFC  
                                 main@counter 007B                                          _PMD0 0039C0  
                                        _PMD1 0039C1                                          u1990 1F42  
                                        _PMD2 0039C2                                          u1991 1F3E  
                                        _PMD3 0039C3                                          _PMD4 0039C4  
                                        _PMD5 0039C5                                          _PMD6 0039C6  
                                        _PMD7 0039C7                                          i2l46 1E78  
                                        i2l49 1EA2                                          i2l87 192A  
                                        _WPUA 003A41                                          _WPUB 003A51  
                                        _WPUC 003A61                                          _WPUD 003A71  
                                        _WPUE 003A81                                          _main 1742  
                                        fsr2h 003FDA                                          indf2 003FDF  
                                        fsr1l 003FE1                                          fsr2l 003FD9  
                       __size_of_stopTimeouts 002A                                          prodh 003FF4  
                                        prodl 003FF3                              ?_enqueueCallback 0001  
                                        start 001A                   __size_of_rtcount_initialize 000E  
                                ___param_bank 000000                       __end_of_TMR0_Initialize 1F30  
              ??_TMR0_DefaultInterruptHandler 0001                __size_of_OSCILLATOR_Initialize 0018  
               __end_of_OSCILLATOR_Initialize 1F62                              _setTimerDuration 1E7A  
                                       ?_main 0001                                         STR_10 1092  
                                       STR_11 1094                                         STR_12 1066  
                             __end_of___lldiv 1A7E                               __end_of___llmod 1BA4  
                                       _U2P1L 003DD4                                         _U2P2L 003DD6  
                                       _U2P3L 003DD8                                         _U2UIR 003DE0  
                                       _U2RXB 003DD0                                         i2l116 19D8  
                                       i2l117 19A2                                         i2l138 1C9E  
                                       _U2TXB 003DD2                               _TMR0_WriteTimer 1FCC  
                                       i2l434 1EEA                                         i2l453 1F72  
                                       i2l562 1E24                                         i2l555 1FD4  
                                       i2l568 1FDA                                         _OSCEN 0039DD  
                                       _TMR0H 003FB7                                         _TMR0L 003FB6  
                                       _TRISA 003FC2                                         _TRISB 003FC3  
                                       _TRISC 003FC4                                         _TRISD 003FC5  
                                       _TRISE 003FC6             __size_of_TMR0_SetInterruptHandler 000A  
                   ?_TMR0_SetInterruptHandler 0010                              _executeQueueHead 0049  
                            __end_of_TMR0_ISR 1E26                               __end_of_dpowers 1029  
                                _stopTimeouts 1E50                                         _dummy 007D  
                             __end_of_isdigit 1DF4                                         _putch 1F9A  
                           ?_startTimerAtHead 0001                                         pclath 003FFA  
                                       tablat 003FF5                            ??_startTimerAtHead 0006  
                                       status 003FD8                                _rtcoutListHead 0044  
              ??_UART2_SetOverrunErrorHandler 0012                               __initialization 1D76  
                                __end_of_main 1856                   ?_INTERRUPT_InterruptManager 0001  
                                ?_UART2_Write 0001                                        ??_main 0034  
                               __activetblptr 000003                              ___llmod@dividend 001D  
                  __end_of_timeout_initialize 1F82                                        _ANSELA 003A40  
                                      ?_putch 0001                                        _ANSELB 003A50  
                                      _ANSELC 003A60                                        _ANSELD 003A70  
                                      _ANSELE 003A80                                        _T0CON0 003FB8  
                                      _T0CON1 003FB9                                        _RB1I2C 003A5A  
                                      _RB2I2C 003A5B                                        _RD0I2C 003A7A  
                                      _RC3I2C 003A6A                                        _RD1I2C 003A7B  
                                      _RC4I2C 003A6B                                        _U2CON0 003DDA  
                                      _U2CON1 003DDB                                        _U2CON2 003DDC  
                                      _U2BRGH 003DDE                                        _U2FIFO 003DDF  
                                      _U2BRGL 003DDD                                        _RB6PPS 003A0E  
                                      _ODCONA 003A42                                        _ODCONB 003A52  
                                      _ODCONC 003A62                                        _ODCOND 003A72  
                                      _ODCONE 003A82                                        i2l2430 1E54  
                                      i2l2432 1E7A                                        i2l2426 1FCE  
                                      i2l2434 1E92                                        i2l2436 1E98  
                                      i2l2428 1E50                                        i2l2460 185A  
                                      i2l2438 1E9C                                        i2l2470 18DA  
                                      i2l2462 186C                                        i2l3094 1EC8  
                                      i2l2480 192C                                        i2l2472 1904  
                                      i2l3096 1ED8                                        i2l2482 1944  
                                      i2l2474 190E                                        i2l2466 1874  
                                      i2l2458 1856                                        i2l3098 1EE6  
                                      i2l2492 197E                                        i2l2484 194C  
                                      i2l2476 1922                                        i2l2468 18B0  
                                      i2l2820 1C6E                                        i2l2494 198A  
                                      i2l2486 1960                                        i2l2478 1926  
                                      i2l2822 1C86                                        i2l2496 19C0  
                                      i2l2488 1972                                        i2l2824 1C92  
                                      i2l2816 1C22                                        i2l2826 1C9A  
                                      i2l2818 1C5E                                        _INLVLA 003A44  
                                      i2l2882 1F62                                        _INLVLB 003A54  
                                      _INLVLC 003A64                                        i2l2884 1F6E  
                                      i2l2980 1DF8                                        _INLVLD 003A74  
                                      _INLVLE 003A84                                        i2l2982 1E0C  
                                      i2l2978 1DF4                                        _OSCFRQ 0039DF  
                               _lastTimerLoad 003A                              _UART2_Initialize 1D1A  
                        enqueueCallback@timer 0001                     _UART2_OverrunErrorHandler 0095  
                              fp__timeout_isr 0000                                        ___wmul 1E26  
                     __end_of_TMR0_WriteTimer 1FD6                                     ??___lldiv 0018  
                                   ??___llmod 0025                              ?_TMR0_Initialize 0001  
                                      clear_0 1D9E                                        clear_1 1DAA  
                                      _printf 10B4                                _PMD_Initialize 1EA4  
                                   ??_isdigit 0010                                  __mediumconst 0000  
                                      tblptrh 003FF7                                        tblptrl 003FF6  
                                      tblptru 003FF8      TMR0_SetInterruptHandler@InterruptHandler 0010  
               __size_of_INTERRUPT_Initialize 0004                                  ?_timeout_isr 0001  
                              fp__rtcount_isr 0000                             _SYSTEM_Initialize 1EEC  
                                  __accesstop 0060                       __end_of__initialization 1DBC  
                          ?_SYSTEM_Initialize 0001                                 ___rparam_used 000001  
                              __pcstackCOMRAM 0001                         _UART2_SetErrorHandler 1FB8  
                                __pidataBANK0 1F90                           ??_SYSTEM_Initialize 0012  
                                   ?_TMR0_ISR 0001                                 __end_of_putch 1FA4  
                      __end_of_PMD_Initialize 1EC8                      ??_poll_switch1_for_edges 0012  
                                ?_rtcount_isr 0001                     __end_of_SYSTEM_Initialize 1F0E  
                                     ??_putch 0011                                    __pbssBANK0 007D  
                    __end_of_setTimerDuration 1EA4                                       IVTBASEH 003FD6  
                                     IVTBASEL 003FD5                                       IVTBASEU 003FD7  
                                  _clearPuTTY 1BA4              __end_of_TMR0_SetInterruptHandler 1FCC  
                                     ?___wmul 0010                                    ??_TMR0_ISR 0010  
        __end_of_UART2_SetFramingErrorHandler 1FB8         __size_of_UART2_SetFramingErrorHandler 000A  
                _UART2_SetFramingErrorHandler 1FAE                              ?_TMR0_WriteTimer 0001  
                                     ?_printf 0026                               ?_PMD_Initialize 0001  
                                     _U2ERRIE 003DE2                                       _U2ERRIR 003DE1  
                        __size_of_UART2_Write 001A                                       _U2RXPPS 003AE8  
                                     _OSCCON1 0039D9                                       _OSCCON3 0039DB  
                                     _OSCTUNE 0039DE                                       _SLRCONA 003A43  
                                     _SLRCONB 003A53                                       _SLRCONC 003A63  
                                     _SLRCOND 003A73                                       _SLRCONE 003A83  
                  __end_of_rtcount_initialize 1F90                                       __Hparam 0000  
                      ?_UART2_SetErrorHandler 0010                                       __Lparam 0000  
                   __size_of_startTimerAtHead 00D6                                       ___lldiv 19DA  
                             __size_of___wmul 002A                                       ___llmod 1B1C  
                                __psmallconst 1000                      __size_of_enqueueCallback 00AE  
                                  _dummy_exec 0087                 ?_UART2_SetFramingErrorHandler 0010  
                                     __pcinit 1D76                                       __ramtop 1000  
                                     __ptext0 1742                                       __ptext1 1CA0  
                                     __ptext2 1BA4                                       __ptext3 10B4  
                                     __ptext4 1F9A                                       __ptext5 1F30  
                                     __ptext6 1DC2                                       __ptext7 1E26  
                                     __ptext8 1B1C                                       __ptext9 19DA  
                             __size_of_printf 068E               __size_of_poll_switch1_for_edges 007A  
                           __end_of_hexpowers 1049              _UART2_DefaultOverrunErrorHandler 000000  
                                     _dpowers 1001                         _OSCILLATOR_Initialize 1F4A  
                                     _isdigit 1DC2                      setTimerDuration@duration 0002  
                                _g_rtcounterH 0036                      ??_PIN_MANAGER_Initialize 0010  
                    __end_of_UART2_Initialize 1D76                    __size_of_SYSTEM_Initialize 0022  
                        end_of_initialization 1DBC                               timeout_isr@next 000E  
                        __size_of_timeout_isr 007E                                   ?_clearPuTTY 0001  
                             ___lldiv@divisor 0014                               ___lldiv@counter 001C  
                          _timeout_initialize 1F74                                       printf@c 0071  
                                     printf@f 0026                                       postdec1 003FE5  
                                     postdec2 003FDD                                       postinc0 003FEE  
                                     postinc2 003FDE                           ?_timeout_initialize 0001  
                    _TMR0_SetInterruptHandler 1FC2                                     _PORTAbits 003FCA  
                        __size_of_rtcount_isr 0012                      _isRunning@rtcounter$F826 0046  
                        ??_timeout_initialize 0012                        _poll_switch1_for_edges 1CA0  
                                 printf@width 006D                                    main@button 0078  
                     main@has_switch1_changed 0079                  __end_of_INTERRUPT_Initialize 1FDA  
                              __end_of___wmul 1E50                             __size_of_TMR0_ISR 0032  
                          enqueueCallback@tmp 0005                        ?_OSCILLATOR_Initialize 0001  
                              __end_of_printf 1742                ??_UART2_SetFramingErrorHandler 0012  
                         start_initialization 1D76                             ??_enqueueCallback 0003  
                         __size_of_clearPuTTY 007E                      __size_of_TMR0_Initialize 0022  
             __size_of_PIN_MANAGER_Initialize 009E                     _UART2_DefaultErrorHandler 000000  
                                 putch@txData 0011                                    ivt0x8_base 0008  
                             ___llmod@divisor 0021                             ?_setTimerDuration 0002  
                             ___llmod@counter 0025                            ??_setTimerDuration 0006  
   poll_switch1_for_edges@has_switch1_changed 0012                              ??_PMD_Initialize 0010  
                                    ??___wmul 0014                              _startTimerAtHead 1856  
                                 __pdataBANK0 0087                             UART2_Write@txData 0010  
                                    ??_printf 0030                                  _dummyHandler 000000  
                                 __pbssCOMRAM 0036                     _UART2_FramingErrorHandler 0097  
                               __pcstackBANK0 0060                                 ?_stopTimeouts 0001  
                                _isdigit$1671 0011                       ??_UART2_SetErrorHandler 0012  
                       _TMR0_InterruptHandler 0091                                     __pnvBANK0 0091  
                      _PIN_MANAGER_Initialize 1A7E                                      ?___lldiv 0010  
                                    ?___llmod 001D                                 ??_UART2_Write 0010  
                          _rtcount_initialize 1F82                  ??_INTERRUPT_InterruptManager 0010  
                   _absoluteTimeofLastTimeout 003E                                   __smallconst 1000  
                                    ?_isdigit 0001                      __size_of_TMR0_WriteTimer 000A  
                                   _isRunning 0048                           ?_rtcount_initialize 0001  
                              ??_stopTimeouts 0001                             ?_UART2_Initialize 0001  
                                   _hexpowers 1029                                      _T0CKIPPS 003AC3  
                          ??_UART2_Initialize 0012                                __size_of_putch 000A  
                        _INTERRUPT_Initialize 1FD6                              _uart2RxLastError 0047  
                           ??_TMR0_Initialize 0012                                   _U2ERRIRbits 003DE1  
                              ___wmul@product 0014         UART2_SetErrorHandler@interruptHandler 0010  
                                    _LATDbits 003FBD                            _last_switch1_value 0042  
                                    _PIE3bits 003993                                  ??_clearPuTTY 0034  
                                    i2u110_40 186C                                      i2u110_41 1868  
                                    i2u111_40 18DA                                      i2u111_41 18D6  
                                    i2u112_40 1944                                      i2u112_41 1940  
                                    i2u113_40 1972                                      i2u113_41 196E  
                                    i2u114_40 19C0                                      i2u114_41 19BC  
                        ??_rtcount_initialize 0012           __size_of_INTERRUPT_InterruptManager 0024  
                                    i2u155_40 1C86                                      i2u170_48 1E12  
                                    i2u155_41 1C82                                      i2u170_49 1E24  
                  ??_TMR0_SetInterruptHandler 0012                                      i2u183_40 1ED8  
                                    i2u183_41 1ED4                                      i2u184_40 1EE6  
                                    i2u184_41 1EE2                                      i2u169_40 1E0C  
                                    i2u169_41 1E08                                      _PIR3bits 0039A3  
                                    _PIR6bits 0039A6                                      _TMR0_ISR 1DF4  
                           ___wmul@multiplier 0010                                    printf@flag 006F  
                                  printf@prec 0063                            _UART2_ErrorHandler 0093  
                         __end_of_UART2_Write 1F4A                            __end_of_clearPuTTY 1C22  
                                 _INTCON0bits 003FD2                       ?_poll_switch1_for_edges 0010  
                                   copy_data0 1D8A                         ?_INTERRUPT_Initialize 0001  
                               ??_timeout_isr 000E                                      __Hrparam 0000  
                                    __Lrparam 0000                               _enqueueCallback 192C  
                     ??_OSCILLATOR_Initialize 0010                              __size_of___lldiv 00A4  
                            __size_of___llmod 0088                                 ??_rtcount_isr 0001  
                                  _T0CON0bits 003FB8                              __size_of_isdigit 0032  
                                    __pivt0x8 0008                __end_of_poll_switch1_for_edges 1D1A  
                                    __ptext10 1EEC                                      __ptext11 1F74  
                                    __ptext20 1A7E                                      __ptext12 1F82  
                                    __ptext21 1F4A                                      __ptext13 1D1A  
                                    __ptext30 1E7A                                      __ptext22 1FD6  
                                    __ptext14 1FA4                                      __ptext31 1FCC  
                                    __ptext23 1EC8                                      __ptext15 1FAE  
                                    __ptext32 192C                                      __ptext24 1DF4  
                                    __ptext16 1FB8                                      __ptext33 0000  
                                    __ptext25 1FDA                                      __ptext17 1F0E  
                                    __ptext26 1F62                                      __ptext18 1FC2  
                                    __ptext27 1C22                                      __ptext19 1EA4  
                                    __ptext28 1856                                      __ptext29 1E50  
                    __end_of_startTimerAtHead 192C                       TMR0_WriteTimer@timerVal 0001  
                                  _U2CON0bits 003DDA                             ??_TMR0_WriteTimer 0001  
                 __size_of_timeout_initialize 000E                                 __size_of_main 0114  
            _UART2_DefaultFramingErrorHandler 000000                                      _listHead 004B  
        __end_of_TMR0_DefaultInterruptHandler 1FDC         __size_of_TMR0_DefaultInterruptHandler 0002  
                _TMR0_DefaultInterruptHandler 1FDA                           __end_of_timeout_isr 1CA0  
UART2_SetOverrunErrorHandler@interruptHandler 0010                          __end_of_stopTimeouts 1E7A  
          __end_of_INTERRUPT_InterruptManager 1EEC                    _INTERRUPT_InterruptManager 1EC8  
                                   printf@idx 0060                                     printf@len 0065  
                                   printf@val 0067                                   _UART2_Write 1F30  
                   __size_of_setTimerDuration 002A                                      isdigit@c 0012  
                         __end_of_rtcount_isr 1F74                        ??_INTERRUPT_Initialize 0010  
        __end_of_UART2_SetOverrunErrorHandler 1FAE         __size_of_UART2_SetOverrunErrorHandler 000A  
                _UART2_SetOverrunErrorHandler 1FA4                        startTimerAtHead@period 000A  
                                    intlevel2 0000                              ___lldiv@dividend 0010  
                     ?_PIN_MANAGER_Initialize 0001                       __end_of_enqueueCallback 19DA  
              __size_of_UART2_SetErrorHandler 000A                 __end_of_UART2_SetErrorHandler 1FC2  
             fp__TMR0_DefaultInterruptHandler 0000                 ?_TMR0_DefaultInterruptHandler 0001  
                                    printf@ap 006B                                      printf@cp 0061  
UART2_SetFramingErrorHandler@interruptHandler 0010                              ___lldiv@quotient 0018  
                             _TMR0_Initialize 1F0E                __end_of_PIN_MANAGER_Initialize 1B1C  
                                 _timeout_isr 1C22         poll_switch1_for_edges@digitalinputpin 0010  
               ?_UART2_SetOverrunErrorHandler 0010                     __size_of_UART2_Initialize 005C  
