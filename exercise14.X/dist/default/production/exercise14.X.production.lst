

Microchip MPLAB XC8 Assembler V2.30 build 20200825195618 
                                                                                               Thu Dec 03 16:09:19 2020

Microchip MPLAB XC8 C Compiler v2.30 (Free license) build 20200825195618 Og1 
     1                           	processor	18F46K42
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=3
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=3
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=3
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=3
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=2
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=2
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=2
    34                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=2
    35                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    36                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=2
    40                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=2
    41                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=2
    42                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=2
    43                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=2
    44                           	psect	text33,global,reloc=2,class=CODE,delta=1
    45                           	psect	text34,global,reloc=2,class=CODE,delta=1
    46                           	psect	text35,global,reloc=2,class=CODE,delta=1
    47                           	psect	text36,global,reloc=2,class=CODE,delta=1
    48                           	psect	text37,global,reloc=2,class=CODE,delta=1
    49                           	psect	text38,global,reloc=2,class=CODE,delta=1
    50                           	psect	text39,global,reloc=2,class=CODE,delta=1
    51                           	psect	text40,global,reloc=2,class=CODE,delta=1
    52                           	psect	text41,global,reloc=2,class=CODE,delta=1
    53                           	psect	text42,global,reloc=2,class=CODE,delta=1
    54                           	psect	text43,global,reloc=2,class=CODE,delta=1
    55                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    56                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    57                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    58                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    59  0000                     
    60                           ; Version 2.20
    61                           ; Generated 05/05/2020 GMT
    62                           ; 
    63                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    64                           ; All rights reserved.
    65                           ; 
    66                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    67                           ; 
    68                           ; Redistribution and use in source and binary forms, with or without modification, are
    69                           ; permitted provided that the following conditions are met:
    70                           ; 
    71                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    72                           ;        conditions and the following disclaimer.
    73                           ; 
    74                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    75                           ;        of conditions and the following disclaimer in the documentation and/or other
    76                           ;        materials provided with the distribution.
    77                           ; 
    78                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    79                           ;        software without specific prior written permission.
    80                           ; 
    81                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    82                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    83                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    84                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    85                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    86                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    87                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    88                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    89                           ; 
    90                           ; 
    91                           ; Code-generator required, PIC18F46K42 Definitions
    92                           ; 
    93                           ; SFR Addresses
    94  0000                     
    95 ;; Function _UART2_DefaultFramingErrorHandler is unused but had its address taken
    96  0000                     
    97 ;; Function _UART2_DefaultOverrunErrorHandler is unused but had its address taken
    98  0000                     
    99 ;; Function _UART2_DefaultErrorHandler is unused but had its address taken
   100  0000                     
   101                           	psect	mediumconst
   102  00FE76                     __pmediumconst:
   103                           	callstack 0
   104  00FE76  00                 	db	0
   105  00FE77                     __powers_:
   106                           	callstack 0
   107  00FE77  0000               	dw	0
   108  00FE79  3F80               	dw	16256
   109  00FE7B  0000               	dw	0
   110  00FE7D  4120               	dw	16672
   111  00FE7F  0000               	dw	0
   112  00FE81  42C8               	dw	17096
   113  00FE83  0000               	dw	0
   114  00FE85  447A               	dw	17530
   115  00FE87  4000               	dw	16384
   116  00FE89  461C               	dw	17948
   117  00FE8B  5000               	dw	20480
   118  00FE8D  47C3               	dw	18371
   119  00FE8F  2400               	dw	9216
   120  00FE91  4974               	dw	18804
   121  00FE93  9680               	dw	38528
   122  00FE95  4B18               	dw	19224
   123  00FE97  BC20               	dw	48160
   124  00FE99  4CBE               	dw	19646
   125  00FE9B  6B28               	dw	27432
   126  00FE9D  4E6E               	dw	20078
   127  00FE9F  02F9               	dw	761
   128  00FEA1  5015               	dw	20501
   129  00FEA3  78EC               	dw	30956
   130  00FEA5  60AD               	dw	24749
   131  00FEA7  F2CA               	dw	62154
   132  00FEA9  7149               	dw	29001
   133  00FEAB                     __end_of__powers_:
   134                           	callstack 0
   135  00FEAB                     __npowers_:
   136                           	callstack 0
   137  00FEAB  0000               	dw	0
   138  00FEAD  3F80               	dw	16256
   139  00FEAF  CCCD               	dw	52429
   140  00FEB1  3DCC               	dw	15820
   141  00FEB3  D70A               	dw	55050
   142  00FEB5  3C23               	dw	15395
   143  00FEB7  126F               	dw	4719
   144  00FEB9  3A83               	dw	14979
   145  00FEBB  B717               	dw	46871
   146  00FEBD  38D1               	dw	14545
   147  00FEBF  C5AC               	dw	50604
   148  00FEC1  3727               	dw	14119
   149  00FEC3  37BD               	dw	14269
   150  00FEC5  3586               	dw	13702
   151  00FEC7  BF95               	dw	49045
   152  00FEC9  33D6               	dw	13270
   153  00FECB  CC77               	dw	52343
   154  00FECD  322B               	dw	12843
   155  00FECF  705F               	dw	28767
   156  00FED1  3089               	dw	12425
   157  00FED3  E6FF               	dw	59135
   158  00FED5  2EDB               	dw	11995
   159  00FED7  E508               	dw	58632
   160  00FED9  1E3C               	dw	7740
   161  00FEDB  4260               	dw	16992
   162  00FEDD  0DA2               	dw	3490
   163  00FEDF                     __end_of__npowers_:
   164                           	callstack 0
   165  00FEDF                     exp@coeff:
   166                           	callstack 0
   167  00FEDF  0000               	dw	0
   168  00FEE1  3F80               	dw	16256
   169  00FEE3  7218               	dw	29208
   170  00FEE5  3F31               	dw	16177
   171  00FEE7  FDF0               	dw	65008
   172  00FEE9  3E75               	dw	15989
   173  00FEEB  5847               	dw	22599
   174  00FEED  3D63               	dw	15715
   175  00FEEF  9558               	dw	38232
   176  00FEF1  3C1D               	dw	15389
   177  00FEF3  C482               	dw	50306
   178  00FEF5  3AAE               	dw	15022
   179  00FEF7  78A8               	dw	30888
   180  00FEF9  3921               	dw	14625
   181  00FEFB  93EF               	dw	37871
   182  00FEFD  3780               	dw	14208
   183  00FEFF  92A0               	dw	37536
   184  00FF01  35A7               	dw	13735
   185  00FF03  5646               	dw	22086
   186  00FF05  3415               	dw	13333
   187  00FF07                     __end_ofexp@coeff:
   188                           	callstack 0
   189  00FF07                     _dpowers:
   190                           	callstack 0
   191  00FF07  0001               	dw	1
   192  00FF09  0000               	dw	0
   193  00FF0B  000A               	dw	10
   194  00FF0D  0000               	dw	0
   195  00FF0F  0064               	dw	100
   196  00FF11  0000               	dw	0
   197  00FF13  03E8               	dw	1000
   198  00FF15  0000               	dw	0
   199  00FF17  2710               	dw	10000
   200  00FF19  0000               	dw	0
   201  00FF1B  86A0               	dw	34464
   202  00FF1D  0001               	dw	1
   203  00FF1F  4240               	dw	16960
   204  00FF21  000F               	dw	15
   205  00FF23  9680               	dw	38528
   206  00FF25  0098               	dw	152
   207  00FF27  E100               	dw	57600
   208  00FF29  05F5               	dw	1525
   209  00FF2B  CA00               	dw	51712
   210  00FF2D  3B9A               	dw	15258
   211  00FF2F                     __end_of_dpowers:
   212                           	callstack 0
   213  00FF2F                     log@coeff:
   214                           	callstack 0
   215  00FF2F  0000               	dw	0
   216  00FF31  0000               	dw	0
   217  00FF33  FFC4               	dw	65476
   218  00FF35  3F7F               	dw	16255
   219  00FF37  EF80               	dw	61312
   220  00FF39  BEFF               	dw	48895
   221  00FF3B  E190               	dw	57744
   222  00FF3D  3EA9               	dw	16041
   223  00FF3F  82EC               	dw	33516
   224  00FF41  BE76               	dw	48758
   225  00FF43  AD82               	dw	44418
   226  00FF45  3E2B               	dw	15915
   227  00FF47  3C0E               	dw	15374
   228  00FF49  BDC3               	dw	48579
   229  00FF4B  D187               	dw	53639
   230  00FF4D  3D13               	dw	15635
   231  00FF4F  7841               	dw	30785
   232  00FF51  BBD3               	dw	48083
   233  00FF53                     __end_oflog@coeff:
   234                           	callstack 0
   235  00FF53                     STR_5:
   236                           
   237                           ; BSR set to: 57
   238  00FF53  0A                 	db	10
   239  00FF54  0D                 	db	13
   240  00FF55  74                 	db	116	;'t'
   241  00FF56  20                 	db	32
   242  00FF57  3D                 	db	61	;'='
   243  00FF58  20                 	db	32
   244  00FF59  25                 	db	37
   245  00FF5A  66                 	db	102	;'f'
   246  00FF5B  20                 	db	32
   247  00FF5C  73                 	db	115	;'s'
   248  00FF5D  20                 	db	32
   249  00FF5E  28                 	db	40
   250  00FF5F  69                 	db	105	;'i'
   251  00FF60  6E                 	db	110	;'n'
   252  00FF61  63                 	db	99	;'c'
   253  00FF62  6F                 	db	111	;'o'
   254  00FF63  72                 	db	114	;'r'
   255  00FF64  72                 	db	114	;'r'
   256  00FF65  65                 	db	101	;'e'
   257  00FF66  63                 	db	99	;'c'
   258  00FF67  74                 	db	116	;'t'
   259  00FF68  20                 	db	32
   260  00FF69  69                 	db	105	;'i'
   261  00FF6A  66                 	db	102	;'f'
   262  00FF6B  20                 	db	32
   263  00FF6C  6F                 	db	111	;'o'
   264  00FF6D  76                 	db	118	;'v'
   265  00FF6E  65                 	db	101	;'e'
   266  00FF6F  72                 	db	114	;'r'
   267  00FF70  66                 	db	102	;'f'
   268  00FF71  6C                 	db	108	;'l'
   269  00FF72  6F                 	db	111	;'o'
   270  00FF73  77                 	db	119	;'w'
   271  00FF74  20                 	db	32
   272  00FF75  6F                 	db	111	;'o'
   273  00FF76  63                 	db	99	;'c'
   274  00FF77  63                 	db	99	;'c'
   275  00FF78  75                 	db	117	;'u'
   276  00FF79  72                 	db	114	;'r'
   277  00FF7A  72                 	db	114	;'r'
   278  00FF7B  65                 	db	101	;'e'
   279  00FF7C  64                 	db	100	;'d'
   280  00FF7D  29                 	db	41
   281  00FF7E  20                 	db	32
   282  00FF7F  66                 	db	102	;'f'
   283  00FF80  6C                 	db	108	;'l'
   284  00FF81  61                 	db	97	;'a'
   285  00FF82  67                 	db	103	;'g'
   286  00FF83  20                 	db	32
   287  00FF84  3D                 	db	61	;'='
   288  00FF85  20                 	db	32
   289  00FF86  25                 	db	37
   290  00FF87  75                 	db	117	;'u'
   291  00FF88  20                 	db	32
   292  00FF89  0A                 	db	10
   293  00FF8A  0D                 	db	13
   294  00FF8B  00                 	db	0
   295  00FF8C                     STR_1:
   296                           
   297                           ; BSR set to: 57
   298  00FF8C  0A                 	db	10
   299  00FF8D  0D                 	db	13
   300  00FF8E  42                 	db	66	;'B'
   301  00FF8F  6C                 	db	108	;'l'
   302  00FF90  6F                 	db	111	;'o'
   303  00FF91  63                 	db	99	;'c'
   304  00FF92  6B                 	db	107	;'k'
   305  00FF93  20                 	db	32
   306  00FF94  70                 	db	112	;'p'
   307  00FF95  68                 	db	104	;'h'
   308  00FF96  6F                 	db	111	;'o'
   309  00FF97  74                 	db	116	;'t'
   310  00FF98  6F                 	db	111	;'o'
   311  00FF99  67                 	db	103	;'g'
   312  00FF9A  61                 	db	97	;'a'
   313  00FF9B  74                 	db	116	;'t'
   314  00FF9C  65                 	db	101	;'e'
   315  00FF9D  20                 	db	32
   316  00FF9E  77                 	db	119	;'w'
   317  00FF9F  68                 	db	104	;'h'
   318  00FFA0  65                 	db	101	;'e'
   319  00FFA1  6E                 	db	110	;'n'
   320  00FFA2  65                 	db	101	;'e'
   321  00FFA3  76                 	db	118	;'v'
   322  00FFA4  65                 	db	101	;'e'
   323  00FFA5  72                 	db	114	;'r'
   324  00FFA6  20                 	db	32
   325  00FFA7  72                 	db	114	;'r'
   326  00FFA8  65                 	db	101	;'e'
   327  00FFA9  61                 	db	97	;'a'
   328  00FFAA  64                 	db	100	;'d'
   329  00FFAB  79                 	db	121	;'y'
   330  00FFAC  20                 	db	32
   331  00FFAD  0A                 	db	10
   332  00FFAE  0A                 	db	10
   333  00FFAF  0D                 	db	13
   334  00FFB0  00                 	db	0
   335  00FFB1                     STR_2:
   336                           
   337                           ; BSR set to: 57
   338  00FFB1  0A                 	db	10
   339  00FFB2  0D                 	db	13
   340  00FFB3  20                 	db	32
   341  00FFB4  6E                 	db	110	;'n'
   342  00FFB5  3D                 	db	61	;'='
   343  00FFB6  20                 	db	32
   344  00FFB7  25                 	db	37
   345  00FFB8  75                 	db	117	;'u'
   346  00FFB9  20                 	db	32
   347  00FFBA  0A                 	db	10
   348  00FFBB  0D                 	db	13
   349  00FFBC  20                 	db	32
   350  00FFBD  78                 	db	120	;'x'
   351  00FFBE  74                 	db	116	;'t'
   352  00FFBF  61                 	db	97	;'a'
   353  00FFC0  6C                 	db	108	;'l'
   354  00FFC1  3D                 	db	61	;'='
   355  00FFC2  20                 	db	32
   356  00FFC3  25                 	db	37
   357  00FFC4  66                 	db	102	;'f'
   358  00FFC5  0A                 	db	10
   359  00FFC6  0D                 	db	13
   360  00FFC7  00                 	db	0
   361  00FFC8                     STR_4:
   362                           
   363                           ; BSR set to: 57
   364  00FFC8  0A                 	db	10
   365  00FFC9  0D                 	db	13
   366  00FFCA  70                 	db	112	;'p'
   367  00FFCB  68                 	db	104	;'h'
   368  00FFCC  6F                 	db	111	;'o'
   369  00FFCD  74                 	db	116	;'t'
   370  00FFCE  6F                 	db	111	;'o'
   371  00FFCF  67                 	db	103	;'g'
   372  00FFD0  61                 	db	97	;'a'
   373  00FFD1  74                 	db	116	;'t'
   374  00FFD2  65                 	db	101	;'e'
   375  00FFD3  20                 	db	32
   376  00FFD4  75                 	db	117	;'u'
   377  00FFD5  6E                 	db	110	;'n'
   378  00FFD6  62                 	db	98	;'b'
   379  00FFD7  6C                 	db	108	;'l'
   380  00FFD8  6F                 	db	111	;'o'
   381  00FFD9  63                 	db	99	;'c'
   382  00FFDA  6B                 	db	107	;'k'
   383  00FFDB  65                 	db	101	;'e'
   384  00FFDC  64                 	db	100	;'d'
   385  00FFDD  00                 	db	0
   386  00FFDE                     STR_3:
   387                           
   388                           ; BSR set to: 57
   389  00FFDE  0A                 	db	10
   390  00FFDF  0D                 	db	13
   391  00FFE0  70                 	db	112	;'p'
   392  00FFE1  68                 	db	104	;'h'
   393  00FFE2  6F                 	db	111	;'o'
   394  00FFE3  74                 	db	116	;'t'
   395  00FFE4  6F                 	db	111	;'o'
   396  00FFE5  67                 	db	103	;'g'
   397  00FFE6  61                 	db	97	;'a'
   398  00FFE7  74                 	db	116	;'t'
   399  00FFE8  65                 	db	101	;'e'
   400  00FFE9  20                 	db	32
   401  00FFEA  62                 	db	98	;'b'
   402  00FFEB  6C                 	db	108	;'l'
   403  00FFEC  6F                 	db	111	;'o'
   404  00FFED  63                 	db	99	;'c'
   405  00FFEE  6B                 	db	107	;'k'
   406  00FFEF  65                 	db	101	;'e'
   407  00FFF0  64                 	db	100	;'d'
   408  00FFF1  00                 	db	0
   409  00FFF2                     STR_6:
   410                           
   411                           ; BSR set to: 57
   412  00FFF2  25                 	db	37
   413  00FFF3  63                 	db	99	;'c'
   414  00FFF4  25                 	db	37
   415  00FFF5  63                 	db	99	;'c'
   416  00FFF6  25                 	db	37
   417  00FFF7  63                 	db	99	;'c'
   418  00FFF8  25                 	db	37
   419  00FFF9  63                 	db	99	;'c'
   420  00FFFA  00                 	db	0
   421  00FFFB  00                 	db	0	; dummy byte at the end
   422  0000                     
   423                           	psect	nvBANK0
   424  0000C5                     __pnvBANK0:
   425                           	callstack 0
   426  0000C5                     _UART2_ErrorHandler:
   427                           	callstack 0
   428  0000C5                     	ds	2
   429  0000C7                     _UART2_OverrunErrorHandler:
   430                           	callstack 0
   431  0000C7                     	ds	2
   432  0000C9                     _UART2_FramingErrorHandler:
   433                           	callstack 0
   434  0000C9                     	ds	2
   435  0000CB                     _timer0ReloadVal16bit:
   436                           	callstack 0
   437  0000CB                     	ds	2
   438  0000                     _PIR6bits	set	14758
   439  0000                     _PMD7	set	14791
   440  0000                     _PMD6	set	14790
   441  0000                     _PMD5	set	14789
   442  0000                     _PMD4	set	14788
   443  0000                     _PMD3	set	14787
   444  0000                     _PMD2	set	14786
   445  0000                     _PMD1	set	14785
   446  0000                     _PMD0	set	14784
   447  0000                     _OSCTUNE	set	14814
   448  0000                     _OSCFRQ	set	14815
   449  0000                     _OSCEN	set	14813
   450  0000                     _OSCCON3	set	14811
   451  0000                     _OSCCON1	set	14809
   452  0000                     _PIR3bits	set	14755
   453  0000                     _TMR0IF	set	118047
   454  0000                     _RB6PPS	set	14862
   455  0000                     _U2RXPPS	set	15080
   456  0000                     _INLVLE	set	14980
   457  0000                     _INLVLD	set	14964
   458  0000                     _INLVLC	set	14948
   459  0000                     _INLVLB	set	14932
   460  0000                     _INLVLA	set	14916
   461  0000                     _SLRCONE	set	14979
   462  0000                     _SLRCOND	set	14963
   463  0000                     _SLRCONC	set	14947
   464  0000                     _SLRCONB	set	14931
   465  0000                     _SLRCONA	set	14915
   466  0000                     _ODCOND	set	14962
   467  0000                     _ODCONC	set	14946
   468  0000                     _ODCONB	set	14930
   469  0000                     _ODCONA	set	14914
   470  0000                     _ODCONE	set	14978
   471  0000                     _RD1I2C	set	14971
   472  0000                     _RD0I2C	set	14970
   473  0000                     _RC4I2C	set	14955
   474  0000                     _RC3I2C	set	14954
   475  0000                     _RB2I2C	set	14939
   476  0000                     _RB1I2C	set	14938
   477  0000                     _WPUC	set	14945
   478  0000                     _WPUA	set	14913
   479  0000                     _WPUB	set	14929
   480  0000                     _WPUE	set	14977
   481  0000                     _WPUD	set	14961
   482  0000                     _ANSELA	set	14912
   483  0000                     _ANSELE	set	14976
   484  0000                     _ANSELB	set	14928
   485  0000                     _ANSELC	set	14944
   486  0000                     _ANSELD	set	14960
   487  0000                     _U2TXB	set	15826
   488  0000                     _U2RXB	set	15824
   489  0000                     _U2ERRIRbits	set	15841
   490  0000                     _U2CON0bits	set	15834
   491  0000                     _U2ERRIE	set	15842
   492  0000                     _U2ERRIR	set	15841
   493  0000                     _U2UIR	set	15840
   494  0000                     _U2FIFO	set	15839
   495  0000                     _U2BRGH	set	15838
   496  0000                     _U2BRGL	set	15837
   497  0000                     _U2CON2	set	15836
   498  0000                     _U2CON1	set	15835
   499  0000                     _U2CON0	set	15834
   500  0000                     _U2P3L	set	15832
   501  0000                     _U2P2L	set	15830
   502  0000                     _U2P1L	set	15828
   503  0000                     _LATDbits	set	16317
   504  0000                     _PORTDbits	set	16333
   505  0000                     _T0CON1bits	set	16313
   506  0000                     _TRISD	set	16325
   507  0000                     _TRISC	set	16324
   508  0000                     _TRISB	set	16323
   509  0000                     _TRISA	set	16322
   510  0000                     _TRISE	set	16326
   511  0000                     _LATC	set	16316
   512  0000                     _LATB	set	16315
   513  0000                     _LATA	set	16314
   514  0000                     _LATD	set	16317
   515  0000                     _LATE	set	16318
   516  0000                     _T0CON0bits	set	16312
   517  0000                     _T0CON0	set	16312
   518  0000                     _TMR0L	set	16310
   519  0000                     _TMR0H	set	16311
   520  0000                     _T0CON1	set	16313
   521                           
   522                           ; #config settings
   523                           
   524                           	psect	cinit
   525  00C594                     __pcinit:
   526                           	callstack 0
   527  00C594                     start_initialization:
   528                           	callstack 0
   529  00C594                     __initialization:
   530                           	callstack 0
   531                           
   532                           ; Clear objects allocated to BANK0 (5 bytes)
   533  00C594  0100               	movlb	0
   534  00C596  6BD1               	clrf	(__pbssBANK0+4)& (0+255),b
   535  00C598  6BD0               	clrf	(__pbssBANK0+3)& (0+255),b
   536  00C59A  6BCF               	clrf	(__pbssBANK0+2)& (0+255),b
   537  00C59C  6BCE               	clrf	(__pbssBANK0+1)& (0+255),b
   538  00C59E  6BCD               	clrf	__pbssBANK0& (0+255),b
   539  00C5A0                     end_of_initialization:
   540                           	callstack 0
   541  00C5A0                     __end_of__initialization:
   542                           	callstack 0
   543  00C5A0  0100               	movlb	0
   544  00C5A2  EFCB  F06C         	goto	_main	;jump to C main() function
   545                           
   546                           	psect	bssBANK0
   547  0000CD                     __pbssBANK0:
   548                           	callstack 0
   549  0000CD                     _errno:
   550                           	callstack 0
   551  0000CD                     	ds	2
   552  0000CF                     _last_switch1_value:
   553                           	callstack 0
   554  0000CF                     	ds	2
   555  0000D1                     _uart2RxLastError:
   556                           	callstack 0
   557  0000D1                     	ds	1
   558                           
   559                           	psect	cstackBANK0
   560  000060                     __pcstackBANK0:
   561                           	callstack 0
   562  000060                     ___fldiv@rem:
   563                           	callstack 0
   564  000060                     _fround$1467:
   565                           	callstack 0
   566                           
   567                           ; 4 bytes @ 0x0
   568  000060                     	ds	4
   569  000064                     ___fldiv@sign:
   570                           	callstack 0
   571  000064                     _fround$1466:
   572                           	callstack 0
   573                           
   574                           ; 4 bytes @ 0x4
   575  000064                     	ds	1
   576  000065                     ___fldiv@new_exp:
   577                           	callstack 0
   578                           
   579                           ; 2 bytes @ 0x5
   580  000065                     	ds	2
   581  000067                     ___fldiv@grs:
   582                           	callstack 0
   583                           
   584                           ; 4 bytes @ 0x7
   585  000067                     	ds	1
   586  000068                     fround@prec:
   587                           	callstack 0
   588                           
   589                           ; 1 bytes @ 0x8
   590  000068                     	ds	1
   591  000069                     ??___fladd:
   592                           
   593                           ; 1 bytes @ 0x9
   594  000069                     	ds	2
   595  00006B                     ___fldiv@bexp:
   596                           	callstack 0
   597                           
   598                           ; 1 bytes @ 0xB
   599  00006B                     	ds	1
   600  00006C                     ___fldiv@aexp:
   601                           	callstack 0
   602                           
   603                           ; 1 bytes @ 0xC
   604  00006C                     	ds	1
   605  00006D                     ___fladd@signs:
   606                           	callstack 0
   607                           
   608                           ; 1 bytes @ 0xD
   609  00006D                     	ds	1
   610  00006E                     ___fladd@aexp:
   611                           	callstack 0
   612                           
   613                           ; 1 bytes @ 0xE
   614  00006E                     	ds	1
   615  00006F                     ___fladd@bexp:
   616                           	callstack 0
   617                           
   618                           ; 1 bytes @ 0xF
   619  00006F                     	ds	1
   620  000070                     ___fladd@grs:
   621                           	callstack 0
   622                           
   623                           ; 1 bytes @ 0x10
   624  000070                     	ds	1
   625  000071                     ?___flsub:
   626                           	callstack 0
   627  000071                     ?_floor:
   628                           	callstack 0
   629  000071                     ?_eval_poly:
   630                           	callstack 0
   631  000071                     ___flsub@b:
   632                           	callstack 0
   633  000071                     eval_poly@x:
   634                           	callstack 0
   635  000071                     floor@x:
   636                           	callstack 0
   637                           
   638                           ; 4 bytes @ 0x11
   639  000071                     	ds	4
   640  000075                     eval_poly@d:
   641                           	callstack 0
   642  000075                     ___flsub@a:
   643                           	callstack 0
   644  000075                     floor@i:
   645                           	callstack 0
   646                           
   647                           ; 4 bytes @ 0x15
   648  000075                     	ds	2
   649  000077                     eval_poly@n:
   650                           	callstack 0
   651                           
   652                           ; 2 bytes @ 0x17
   653  000077                     	ds	2
   654  000079                     ??_eval_poly:
   655  000079                     ?_printf:
   656                           	callstack 0
   657  000079                     printf@f:
   658                           	callstack 0
   659  000079                     floor@expon:
   660                           	callstack 0
   661                           
   662                           ; 2 bytes @ 0x19
   663  000079                     	ds	4
   664  00007D                     eval_poly@res:
   665                           	callstack 0
   666                           
   667                           ; 4 bytes @ 0x1D
   668  00007D                     	ds	4
   669  000081                     ?_log:
   670                           	callstack 0
   671  000081                     ?_ldexp:
   672                           	callstack 0
   673  000081                     ldexp@value:
   674                           	callstack 0
   675  000081                     log@x:
   676                           	callstack 0
   677                           
   678                           ; 4 bytes @ 0x21
   679  000081                     	ds	2
   680  000083                     ??_printf:
   681                           
   682                           ; 1 bytes @ 0x23
   683  000083                     	ds	2
   684  000085                     ldexp@newexp:
   685                           	callstack 0
   686  000085                     log@exponent:
   687                           	callstack 0
   688  000085                     _printf$1469:
   689                           	callstack 0
   690                           
   691                           ; 4 bytes @ 0x25
   692  000085                     	ds	2
   693  000087                     ??_ldexp:
   694                           
   695                           ; 1 bytes @ 0x27
   696  000087                     	ds	2
   697  000089                     ?_exp:
   698                           	callstack 0
   699  000089                     printf@ap:
   700                           	callstack 0
   701  000089                     exp@x:
   702                           	callstack 0
   703                           
   704                           ; 4 bytes @ 0x29
   705  000089                     	ds	2
   706  00008B                     printf@flag:
   707                           	callstack 0
   708                           
   709                           ; 2 bytes @ 0x2B
   710  00008B                     	ds	2
   711  00008D                     printf@prec:
   712                           	callstack 0
   713  00008D                     _exp$1472:
   714                           	callstack 0
   715                           
   716                           ; 4 bytes @ 0x2D
   717  00008D                     	ds	2
   718  00008F                     printf@val:
   719                           	callstack 0
   720                           
   721                           ; 4 bytes @ 0x2F
   722  00008F                     	ds	2
   723  000091                     exp@exponent:
   724                           	callstack 0
   725                           
   726                           ; 2 bytes @ 0x31
   727  000091                     	ds	2
   728  000093                     exp@sign:
   729                           	callstack 0
   730  000093                     printf@eexp:
   731                           	callstack 0
   732                           
   733                           ; 2 bytes @ 0x33
   734  000093                     	ds	1
   735  000094                     ?_pow:
   736                           	callstack 0
   737  000094                     pow@x:
   738                           	callstack 0
   739                           
   740                           ; 4 bytes @ 0x34
   741  000094                     	ds	1
   742  000095                     printf@tmpval:
   743                           	callstack 0
   744                           
   745                           ; 4 bytes @ 0x35
   746  000095                     	ds	3
   747  000098                     pow@y:
   748                           	callstack 0
   749                           
   750                           ; 4 bytes @ 0x38
   751  000098                     	ds	1
   752  000099                     printf@fval:
   753                           	callstack 0
   754                           
   755                           ; 4 bytes @ 0x39
   756  000099                     	ds	3
   757  00009C                     _pow$1470:
   758                           	callstack 0
   759                           
   760                           ; 4 bytes @ 0x3C
   761  00009C                     	ds	1
   762  00009D                     printf@c:
   763                           	callstack 0
   764                           
   765                           ; 1 bytes @ 0x3D
   766  00009D                     	ds	3
   767  0000A0                     _pow$1471:
   768                           	callstack 0
   769                           
   770                           ; 4 bytes @ 0x40
   771  0000A0                     	ds	4
   772  0000A4                     pow@sign:
   773                           	callstack 0
   774                           
   775                           ; 1 bytes @ 0x44
   776  0000A4                     	ds	1
   777  0000A5                     pow@yi:
   778                           	callstack 0
   779                           
   780                           ; 4 bytes @ 0x45
   781  0000A5                     	ds	4
   782  0000A9                     ??_main:
   783                           
   784                           ; 1 bytes @ 0x49
   785  0000A9                     	ds	5
   786  0000AE                     main@time:
   787                           	callstack 0
   788                           
   789                           ; 4 bytes @ 0x4E
   790  0000AE                     	ds	4
   791  0000B2                     _main$1463:
   792                           	callstack 0
   793                           
   794                           ; 4 bytes @ 0x52
   795  0000B2                     	ds	4
   796  0000B6                     _main$1464:
   797                           	callstack 0
   798                           
   799                           ; 4 bytes @ 0x56
   800  0000B6                     	ds	4
   801  0000BA                     _main$1465:
   802                           	callstack 0
   803                           
   804                           ; 4 bytes @ 0x5A
   805  0000BA                     	ds	4
   806  0000BE                     main@flag:
   807                           	callstack 0
   808                           
   809                           ; 2 bytes @ 0x5E
   810  0000BE                     	ds	2
   811  0000C0                     main@value:
   812                           	callstack 0
   813                           
   814                           ; 2 bytes @ 0x60
   815  0000C0                     	ds	2
   816  0000C2                     main@n:
   817                           	callstack 0
   818                           
   819                           ; 2 bytes @ 0x62
   820  0000C2                     	ds	2
   821  0000C4                     main@has_switch1_changed:
   822                           	callstack 0
   823                           
   824                           ; 1 bytes @ 0x64
   825  0000C4                     	ds	1
   826                           
   827                           	psect	cstackCOMRAM
   828  000001                     __pcstackCOMRAM:
   829                           	callstack 0
   830  000001                     ??_TMR0_Initialize:
   831  000001                     ?_poll_switch1_for_edges:
   832                           	callstack 0
   833  000001                     ?_TMR0_ReadTimer:
   834                           	callstack 0
   835  000001                     ?___wmul:
   836                           	callstack 0
   837  000001                     ?___awmod:
   838                           	callstack 0
   839  000001                     ?___lwmod:
   840                           	callstack 0
   841  000001                     ?__tdiv_to_l_:
   842                           	callstack 0
   843  000001                     ?__div_to_l_:
   844                           	callstack 0
   845  000001                     ?___lldiv:
   846                           	callstack 0
   847  000001                     ?___flneg:
   848                           	callstack 0
   849  000001                     UART2_Write@txData:
   850                           	callstack 0
   851  000001                     TMR0_WriteTimer@timerVal:
   852                           	callstack 0
   853  000001                     UART2_SetFramingErrorHandler@interruptHandler:
   854                           	callstack 0
   855  000001                     UART2_SetOverrunErrorHandler@interruptHandler:
   856                           	callstack 0
   857  000001                     UART2_SetErrorHandler@interruptHandler:
   858                           	callstack 0
   859  000001                     poll_switch1_for_edges@digitalinputpin:
   860                           	callstack 0
   861  000001                     ___wmul@multiplier:
   862                           	callstack 0
   863  000001                     ___awmod@dividend:
   864                           	callstack 0
   865  000001                     ___lwmod@dividend:
   866                           	callstack 0
   867  000001                     ___lldiv@dividend:
   868                           	callstack 0
   869  000001                     __div_to_l_@f1:
   870                           	callstack 0
   871  000001                     ___flge@ff1:
   872                           	callstack 0
   873  000001                     ___flneg@f1:
   874                           	callstack 0
   875  000001                     __tdiv_to_l_@f1:
   876                           	callstack 0
   877                           
   878                           ; 4 bytes @ 0x0
   879  000001                     	ds	1
   880  000002                     putch@txData:
   881                           	callstack 0
   882                           
   883                           ; 1 bytes @ 0x1
   884  000002                     	ds	1
   885  000003                     ??_TMR0_ReadTimer:
   886  000003                     poll_switch1_for_edges@has_switch1_changed:
   887                           	callstack 0
   888  000003                     ___wmul@multiplicand:
   889                           	callstack 0
   890  000003                     ___awmod@divisor:
   891                           	callstack 0
   892  000003                     ___lwmod@divisor:
   893                           	callstack 0
   894                           
   895                           ; 2 bytes @ 0x2
   896  000003                     	ds	2
   897  000005                     ___awmod@counter:
   898                           	callstack 0
   899  000005                     ___lwmod@counter:
   900                           	callstack 0
   901  000005                     TMR0_ReadTimer@readVal:
   902                           	callstack 0
   903  000005                     ___wmul@product:
   904                           	callstack 0
   905  000005                     ___lldiv@divisor:
   906                           	callstack 0
   907  000005                     __div_to_l_@f2:
   908                           	callstack 0
   909  000005                     ___flge@ff2:
   910                           	callstack 0
   911  000005                     __tdiv_to_l_@f2:
   912                           	callstack 0
   913                           
   914                           ; 4 bytes @ 0x4
   915  000005                     	ds	1
   916  000006                     ?___lwdiv:
   917                           	callstack 0
   918  000006                     ___awmod@sign:
   919                           	callstack 0
   920  000006                     ___lwdiv@dividend:
   921                           	callstack 0
   922                           
   923                           ; 2 bytes @ 0x5
   924  000006                     	ds	1
   925  000007                     ?___awdiv:
   926                           	callstack 0
   927  000007                     TMR0_ReadTimer@readValLow:
   928                           	callstack 0
   929  000007                     ___awdiv@dividend:
   930                           	callstack 0
   931                           
   932                           ; 2 bytes @ 0x6
   933  000007                     	ds	1
   934  000008                     TMR0_ReadTimer@readValHigh:
   935                           	callstack 0
   936  000008                     ___lwdiv@divisor:
   937                           	callstack 0
   938                           
   939                           ; 2 bytes @ 0x7
   940  000008                     	ds	1
   941  000009                     ??__tdiv_to_l_:
   942  000009                     ??___flge:
   943  000009                     ___awdiv@divisor:
   944                           	callstack 0
   945  000009                     ___lldiv@quotient:
   946                           	callstack 0
   947  000009                     __div_to_l_@quot:
   948                           	callstack 0
   949                           
   950                           ; 4 bytes @ 0x8
   951  000009                     	ds	1
   952  00000A                     ___lwdiv@quotient:
   953                           	callstack 0
   954                           
   955                           ; 2 bytes @ 0x9
   956  00000A                     	ds	1
   957  00000B                     ___awdiv@counter:
   958                           	callstack 0
   959                           
   960                           ; 1 bytes @ 0xA
   961  00000B                     	ds	1
   962  00000C                     ___awdiv@sign:
   963                           	callstack 0
   964  00000C                     ___lwdiv@counter:
   965                           	callstack 0
   966  00000C                     __tdiv_to_l_@quot:
   967                           	callstack 0
   968                           
   969                           ; 4 bytes @ 0xB
   970  00000C                     	ds	1
   971  00000D                     ___lldiv@counter:
   972                           	callstack 0
   973  00000D                     __div_to_l_@cntr:
   974                           	callstack 0
   975  00000D                     ___awdiv@quotient:
   976                           	callstack 0
   977                           
   978                           ; 2 bytes @ 0xC
   979  00000D                     	ds	1
   980  00000E                     ?___llmod:
   981                           	callstack 0
   982  00000E                     __div_to_l_@exp1:
   983                           	callstack 0
   984  00000E                     ___llmod@dividend:
   985                           	callstack 0
   986                           
   987                           ; 4 bytes @ 0xD
   988  00000E                     	ds	1
   989  00000F                     ?___fltol:
   990                           	callstack 0
   991  00000F                     ___fltol@f1:
   992                           	callstack 0
   993                           
   994                           ; 4 bytes @ 0xE
   995  00000F                     	ds	1
   996  000010                     __tdiv_to_l_@cntr:
   997                           	callstack 0
   998                           
   999                           ; 1 bytes @ 0xF
  1000  000010                     	ds	1
  1001  000011                     __tdiv_to_l_@exp1:
  1002                           	callstack 0
  1003                           
  1004                           ; 1 bytes @ 0x10
  1005  000011                     	ds	1
  1006  000012                     ___llmod@divisor:
  1007                           	callstack 0
  1008                           
  1009                           ; 4 bytes @ 0x11
  1010  000012                     	ds	1
  1011  000013                     ??___fltol:
  1012                           
  1013                           ; 1 bytes @ 0x12
  1014  000013                     	ds	3
  1015  000016                     ___llmod@counter:
  1016                           	callstack 0
  1017                           
  1018                           ; 1 bytes @ 0x15
  1019  000016                     	ds	1
  1020  000017                     ___fltol@sign1:
  1021                           	callstack 0
  1022                           
  1023                           ; 1 bytes @ 0x16
  1024  000017                     	ds	1
  1025  000018                     ___fltol@exp1:
  1026                           	callstack 0
  1027                           
  1028                           ; 1 bytes @ 0x17
  1029  000018                     	ds	1
  1030  000019                     ?___xxtofl:
  1031                           	callstack 0
  1032  000019                     ___xxtofl@val:
  1033                           	callstack 0
  1034                           
  1035                           ; 4 bytes @ 0x18
  1036  000019                     	ds	4
  1037  00001D                     ??___xxtofl:
  1038                           
  1039                           ; 1 bytes @ 0x1C
  1040  00001D                     	ds	4
  1041  000021                     ___xxtofl@sign:
  1042                           	callstack 0
  1043                           
  1044                           ; 1 bytes @ 0x20
  1045  000021                     	ds	1
  1046  000022                     ___xxtofl@exp:
  1047                           	callstack 0
  1048                           
  1049                           ; 1 bytes @ 0x21
  1050  000022                     	ds	1
  1051  000023                     ___xxtofl@arg:
  1052                           	callstack 0
  1053                           
  1054                           ; 4 bytes @ 0x22
  1055  000023                     	ds	4
  1056  000027                     ___fleq@ff1:
  1057                           	callstack 0
  1058                           
  1059                           ; 4 bytes @ 0x26
  1060  000027                     	ds	4
  1061  00002B                     ___fleq@ff2:
  1062                           	callstack 0
  1063                           
  1064                           ; 4 bytes @ 0x2A
  1065  00002B                     	ds	4
  1066  00002F                     ??___fleq:
  1067                           
  1068                           ; 1 bytes @ 0x2E
  1069  00002F                     	ds	4
  1070  000033                     ?_frexp:
  1071                           	callstack 0
  1072  000033                     frexp@value:
  1073                           	callstack 0
  1074                           
  1075                           ; 4 bytes @ 0x32
  1076  000033                     	ds	4
  1077  000037                     frexp@eptr:
  1078                           	callstack 0
  1079                           
  1080                           ; 2 bytes @ 0x36
  1081  000037                     	ds	2
  1082  000039                     ??_frexp:
  1083                           
  1084                           ; 1 bytes @ 0x38
  1085  000039                     	ds	2
  1086  00003B                     ?___flmul:
  1087                           	callstack 0
  1088  00003B                     ___flmul@b:
  1089                           	callstack 0
  1090                           
  1091                           ; 4 bytes @ 0x3A
  1092  00003B                     	ds	4
  1093  00003F                     ___flmul@a:
  1094                           	callstack 0
  1095                           
  1096                           ; 4 bytes @ 0x3E
  1097  00003F                     	ds	4
  1098  000043                     ??___flmul:
  1099                           
  1100                           ; 1 bytes @ 0x42
  1101  000043                     	ds	4
  1102  000047                     ___flmul@sign:
  1103                           	callstack 0
  1104                           
  1105                           ; 1 bytes @ 0x46
  1106  000047                     	ds	1
  1107  000048                     ___flmul@grs:
  1108                           	callstack 0
  1109                           
  1110                           ; 4 bytes @ 0x47
  1111  000048                     	ds	4
  1112  00004C                     ___flmul@aexp:
  1113                           	callstack 0
  1114                           
  1115                           ; 1 bytes @ 0x4B
  1116  00004C                     	ds	1
  1117  00004D                     ___flmul@bexp:
  1118                           	callstack 0
  1119                           
  1120                           ; 1 bytes @ 0x4C
  1121  00004D                     	ds	1
  1122  00004E                     ___flmul@prod:
  1123                           	callstack 0
  1124                           
  1125                           ; 4 bytes @ 0x4D
  1126  00004E                     	ds	4
  1127  000052                     ___flmul@temp:
  1128                           	callstack 0
  1129                           
  1130                           ; 2 bytes @ 0x51
  1131  000052                     	ds	2
  1132  000054                     ?___fldiv:
  1133                           	callstack 0
  1134  000054                     ?_fround:
  1135                           	callstack 0
  1136  000054                     ?_scale:
  1137                           	callstack 0
  1138  000054                     ___fldiv@b:
  1139                           	callstack 0
  1140                           
  1141                           ; 4 bytes @ 0x53
  1142  000054                     	ds	4
  1143  000058                     ?___fladd:
  1144                           	callstack 0
  1145  000058                     ___fladd@b:
  1146                           	callstack 0
  1147  000058                     ___fldiv@a:
  1148                           	callstack 0
  1149  000058                     _scale$1468:
  1150                           	callstack 0
  1151                           
  1152                           ; 4 bytes @ 0x57
  1153  000058                     	ds	4
  1154  00005C                     ??___fldiv:
  1155  00005C                     scale@scl:
  1156                           	callstack 0
  1157  00005C                     ___fladd@a:
  1158                           	callstack 0
  1159                           
  1160                           ; 4 bytes @ 0x5B
  1161  00005C                     	ds	4
  1162  000060                     
  1163                           ; 1 bytes @ 0x5F
  1164 ;;
  1165 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  1166 ;;
  1167 ;; *************** function _main *****************
  1168 ;; Defined at:
  1169 ;;		line 12 in file "main.c"
  1170 ;; Parameters:    Size  Location     Type
  1171 ;;		None
  1172 ;; Auto vars:     Size  Location     Type
  1173 ;;  time            4   78[BANK0 ] float 
  1174 ;;  n               2   98[BANK0 ] unsigned int 
  1175 ;;  value           2   96[BANK0 ] unsigned int 
  1176 ;;  flag            2   94[BANK0 ] unsigned int 
  1177 ;;  buttonpress     2    0        unsigned int 
  1178 ;;  counter         2    0        unsigned int 
  1179 ;;  final_time      2    0        unsigned int 
  1180 ;;  has_switch1_    1  100[BANK0 ] unsigned char 
  1181 ;; Return value:  Size  Location     Type
  1182 ;;                  1    wreg      void 
  1183 ;; Registers used:
  1184 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1185 ;; Tracked objects:
  1186 ;;		On entry : 0/0
  1187 ;;		On exit  : 0/0
  1188 ;;		Unchanged: 0/0
  1189 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1190 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1191 ;;      Locals:         0      27       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1192 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1193 ;;      Totals:         0      28       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1194 ;;Total ram usage:       28 bytes
  1195 ;; Hardware stack levels required when called:    5
  1196 ;; This function calls:
  1197 ;;		_SYSTEM_Initialize
  1198 ;;		_TMR0_ReadTimer
  1199 ;;		_TMR0_WriteTimer
  1200 ;;		___fldiv
  1201 ;;		___flmul
  1202 ;;		___xxtofl
  1203 ;;		_clearPuTTY
  1204 ;;		_poll_switch1_for_edges
  1205 ;;		_pow
  1206 ;;		_printf
  1207 ;; This function is called by:
  1208 ;;		Startup code after reset
  1209 ;; This function uses a non-reentrant model
  1210 ;;
  1211                           
  1212                           	psect	text0
  1213  00D996                     __ptext0:
  1214                           	callstack 0
  1215  00D996                     _main:
  1216                           	callstack 26
  1217  00D996                     
  1218                           ;main.c: 15: SYSTEM_Initialize();
  1219  00D996  ECD3  F062         	call	_SYSTEM_Initialize	;wreg free
  1220  00D99A                     
  1221                           ;main.c: 20: n=T0CON1bits.CKPS;
  1222  00D99A  50B9               	movf	185,w,c	;volatile
  1223  00D99C  0B0F               	andlw	15
  1224  00D99E  0100               	movlb	0	; () banked
  1225  00D9A0  6FA9               	movwf	??_main& (0+255),b
  1226  00D9A2  51A9               	movf	??_main& (0+255),w,b
  1227  00D9A4  6FC2               	movwf	main@n& (0+255),b
  1228  00D9A6  6BC3               	clrf	(main@n+1)& (0+255),b
  1229  00D9A8                     
  1230                           ; BSR set to: 0
  1231                           ;main.c: 21: clearPuTTY();
  1232  00D9A8  EC60  F064         	call	_clearPuTTY	;wreg free
  1233  00D9AC                     
  1234                           ;main.c: 22: printf("\n\rBlock photogate whenever ready \n\n\r");
  1235  00D9AC  0E8C               	movlw	low STR_1
  1236  00D9AE  0100               	movlb	0	; () banked
  1237  00D9B0  6F79               	movwf	printf@f& (0+255),b
  1238  00D9B2  0EFF               	movlw	high STR_1
  1239  00D9B4  6F7A               	movwf	(printf@f+1)& (0+255),b
  1240  00D9B6  ECA1  F07A         	call	_printf	;wreg free
  1241  00D9BA                     
  1242                           ;main.c: 23: printf("\n\r n= %u \n\r xtal= %f\n\r",n,(float)8000000);
  1243  00D9BA  0EB1               	movlw	low STR_2
  1244  00D9BC  0100               	movlb	0	; () banked
  1245  00D9BE  6F79               	movwf	printf@f& (0+255),b
  1246  00D9C0  0EFF               	movlw	high STR_2
  1247  00D9C2  6F7A               	movwf	(printf@f+1)& (0+255),b
  1248  00D9C4  C0C2  F07B         	movff	main@n,?_printf+2
  1249  00D9C8  C0C3  F07C         	movff	main@n+1,?_printf+3
  1250  00D9CC  0E00               	movlw	0
  1251  00D9CE  6F7D               	movwf	(?_printf+4)& (0+255),b
  1252  00D9D0  0E24               	movlw	36
  1253  00D9D2  6F7E               	movwf	(?_printf+5)& (0+255),b
  1254  00D9D4  0EF4               	movlw	244
  1255  00D9D6  6F7F               	movwf	(?_printf+6)& (0+255),b
  1256  00D9D8  0E4A               	movlw	74
  1257  00D9DA  6F80               	movwf	(?_printf+7)& (0+255),b
  1258  00D9DC  ECA1  F07A         	call	_printf	;wreg free
  1259  00D9E0                     l4375:
  1260                           
  1261                           ;main.c: 26: {;main.c: 29: has_switch1_changed = poll_switch1_for_edges(PORTDbits.RD1);
  1262  00D9E0  B2CD               	btfsc	205,1,c	;volatile
  1263  00D9E2  EFF5  F06C         	goto	u4511
  1264  00D9E6  EFFA  F06C         	goto	u4510
  1265  00D9EA                     u4511:
  1266  00D9EA  0100               	movlb	0	; () banked
  1267  00D9EC  6BA9               	clrf	??_main& (0+255),b
  1268  00D9EE  2BA9               	incf	??_main& (0+255),f,b
  1269  00D9F0  EFFC  F06C         	goto	u4518
  1270  00D9F4                     u4510:
  1271  00D9F4  0100               	movlb	0	; () banked
  1272  00D9F6  6BA9               	clrf	??_main& (0+255),b
  1273  00D9F8                     u4518:
  1274  00D9F8  51A9               	movf	??_main& (0+255),w,b
  1275  00D9FA  6E01               	movwf	poll_switch1_for_edges@digitalinputpin^0,c
  1276  00D9FC  6A02               	clrf	(poll_switch1_for_edges@digitalinputpin+1)^0,c
  1277  00D9FE  EC22  F064         	call	_poll_switch1_for_edges	;wreg free
  1278  00DA02  5001               	movf	?_poll_switch1_for_edges^0,w,c
  1279  00DA04  0100               	movlb	0	; () banked
  1280  00DA06  6FC4               	movwf	main@has_switch1_changed& (0+255),b
  1281  00DA08                     
  1282                           ; BSR set to: 0
  1283                           ;main.c: 31: if ( has_switch1_changed == 1 )
  1284  00DA08  05C4               	decf	main@has_switch1_changed& (0+255),w,b
  1285  00DA0A  A4D8               	btfss	status,2,c
  1286  00DA0C  EF0A  F06D         	goto	u4521
  1287  00DA10  EF0C  F06D         	goto	u4520
  1288  00DA14                     u4521:
  1289  00DA14  EF1B  F06D         	goto	l4387
  1290  00DA18                     u4520:
  1291  00DA18                     
  1292                           ; BSR set to: 0
  1293                           ;main.c: 32: {;main.c: 33: printf("\n\rphotogate blocked");
  1294  00DA18  0EDE               	movlw	low STR_3
  1295  00DA1A  6F79               	movwf	printf@f& (0+255),b
  1296  00DA1C  0EFF               	movlw	high STR_3
  1297  00DA1E  6F7A               	movwf	(printf@f+1)& (0+255),b
  1298  00DA20  ECA1  F07A         	call	_printf	;wreg free
  1299  00DA24                     
  1300                           ;main.c: 34: TMR0_WriteTimer(0);
  1301  00DA24  0E00               	movlw	0
  1302  00DA26  6E02               	movwf	(TMR0_WriteTimer@timerVal+1)^0,c
  1303  00DA28  0E00               	movlw	0
  1304  00DA2A  6E01               	movwf	TMR0_WriteTimer@timerVal^0,c
  1305  00DA2C  ECC4  F062         	call	_TMR0_WriteTimer	;wreg free
  1306  00DA30                     
  1307                           ;main.c: 35: TMR0IF = 0;
  1308  00DA30  0139               	movlb	57	; () banked
  1309  00DA32  9FA3               	bcf	163,7,b	;volatile
  1310  00DA34                     
  1311                           ; BSR set to: 57
  1312  00DA34  84BD               	bsf	189,2,c	;volatile
  1313  00DA36                     l4387:
  1314                           
  1315                           ;main.c: 37: };main.c: 38: if (has_switch1_changed == 2)
  1316  00DA36  0E02               	movlw	2
  1317  00DA38  0100               	movlb	0	; () banked
  1318  00DA3A  19C4               	xorwf	main@has_switch1_changed& (0+255),w,b
  1319  00DA3C  A4D8               	btfss	status,2,c
  1320  00DA3E  EF23  F06D         	goto	u4531
  1321  00DA42  EF25  F06D         	goto	u4530
  1322  00DA46                     u4531:
  1323  00DA46  EFF0  F06C         	goto	l4375
  1324  00DA4A                     u4530:
  1325  00DA4A                     
  1326                           ; BSR set to: 0
  1327  00DA4A  94BD               	bcf	189,2,c	;volatile
  1328  00DA4C                     
  1329                           ; BSR set to: 0
  1330                           ;main.c: 41: printf("\n\rphotogate unblocked");
  1331  00DA4C  0EC8               	movlw	low STR_4
  1332  00DA4E  6F79               	movwf	printf@f& (0+255),b
  1333  00DA50  0EFF               	movlw	high STR_4
  1334  00DA52  6F7A               	movwf	(printf@f+1)& (0+255),b
  1335  00DA54  ECA1  F07A         	call	_printf	;wreg free
  1336  00DA58                     
  1337                           ;main.c: 42: value=TMR0_ReadTimer();
  1338  00DA58  ECF7  F062         	call	_TMR0_ReadTimer	;wreg free
  1339  00DA5C  C001  F0C0         	movff	?_TMR0_ReadTimer,main@value
  1340  00DA60  C002  F0C1         	movff	?_TMR0_ReadTimer+1,main@value+1
  1341  00DA64                     
  1342                           ;main.c: 43: time = (float)value*4.0*pow(2,n)/(float)8000000;
  1343  00DA64  C0C2  F019         	movff	main@n,___xxtofl@val
  1344  00DA68  C0C3  F01A         	movff	main@n+1,___xxtofl@val+1
  1345  00DA6C  6A1B               	clrf	(___xxtofl@val+2)^0,c
  1346  00DA6E  6A1C               	clrf	(___xxtofl@val+3)^0,c
  1347  00DA70  0E00               	movlw	0
  1348  00DA72  ECF1  F06B         	call	___xxtofl
  1349  00DA76  C019  F0B2         	movff	?___xxtofl,_main$1463
  1350  00DA7A  C01A  F0B3         	movff	?___xxtofl+1,_main$1463+1
  1351  00DA7E  C01B  F0B4         	movff	?___xxtofl+2,_main$1463+2
  1352  00DA82  C01C  F0B5         	movff	?___xxtofl+3,_main$1463+3
  1353  00DA86                     
  1354                           ;main.c: 43: time = (float)value*4.0*pow(2,n)/(float)8000000;
  1355  00DA86  C0B2  F098         	movff	_main$1463,pow@y
  1356  00DA8A  C0B3  F099         	movff	_main$1463+1,pow@y+1
  1357  00DA8E  C0B4  F09A         	movff	_main$1463+2,pow@y+2
  1358  00DA92  C0B5  F09B         	movff	_main$1463+3,pow@y+3
  1359  00DA96  0E00               	movlw	0
  1360  00DA98  0100               	movlb	0	; () banked
  1361  00DA9A  6F94               	movwf	pow@x& (0+255),b
  1362  00DA9C  0E00               	movlw	0
  1363  00DA9E  6F95               	movwf	(pow@x+1)& (0+255),b
  1364  00DAA0  0E00               	movlw	0
  1365  00DAA2  6F96               	movwf	(pow@x+2)& (0+255),b
  1366  00DAA4  0E40               	movlw	64
  1367  00DAA6  6F97               	movwf	(pow@x+3)& (0+255),b
  1368  00DAA8  ECD0  F06D         	call	_pow	;wreg free
  1369  00DAAC  C094  F0B6         	movff	?_pow,_main$1464
  1370  00DAB0  C095  F0B7         	movff	?_pow+1,_main$1464+1
  1371  00DAB4  C096  F0B8         	movff	?_pow+2,_main$1464+2
  1372  00DAB8  C097  F0B9         	movff	?_pow+3,_main$1464+3
  1373  00DABC                     
  1374                           ;main.c: 43: time = (float)value*4.0*pow(2,n)/(float)8000000;
  1375  00DABC  0E00               	movlw	0
  1376  00DABE  6E3F               	movwf	___flmul@a^0,c
  1377  00DAC0  0E00               	movlw	0
  1378  00DAC2  6E40               	movwf	(___flmul@a+1)^0,c
  1379  00DAC4  0E80               	movlw	128
  1380  00DAC6  6E41               	movwf	(___flmul@a+2)^0,c
  1381  00DAC8  0E40               	movlw	64
  1382  00DACA  6E42               	movwf	(___flmul@a+3)^0,c
  1383  00DACC  C0C0  F019         	movff	main@value,___xxtofl@val
  1384  00DAD0  C0C1  F01A         	movff	main@value+1,___xxtofl@val+1
  1385  00DAD4  6A1B               	clrf	(___xxtofl@val+2)^0,c
  1386  00DAD6  6A1C               	clrf	(___xxtofl@val+3)^0,c
  1387  00DAD8  0E00               	movlw	0
  1388  00DADA  ECF1  F06B         	call	___xxtofl
  1389  00DADE  C019  F03B         	movff	?___xxtofl,___flmul@b
  1390  00DAE2  C01A  F03C         	movff	?___xxtofl+1,___flmul@b+1
  1391  00DAE6  C01B  F03D         	movff	?___xxtofl+2,___flmul@b+2
  1392  00DAEA  C01C  F03E         	movff	?___xxtofl+3,___flmul@b+3
  1393  00DAEE  ECBF  F073         	call	___flmul	;wreg free
  1394  00DAF2  C03B  F0BA         	movff	?___flmul,_main$1465
  1395  00DAF6  C03C  F0BB         	movff	?___flmul+1,_main$1465+1
  1396  00DAFA  C03D  F0BC         	movff	?___flmul+2,_main$1465+2
  1397  00DAFE  C03E  F0BD         	movff	?___flmul+3,_main$1465+3
  1398  00DB02                     
  1399                           ;main.c: 43: time = (float)value*4.0*pow(2,n)/(float)8000000;
  1400  00DB02  C0B6  F03F         	movff	_main$1464,___flmul@a
  1401  00DB06  C0B7  F040         	movff	_main$1464+1,___flmul@a+1
  1402  00DB0A  C0B8  F041         	movff	_main$1464+2,___flmul@a+2
  1403  00DB0E  C0B9  F042         	movff	_main$1464+3,___flmul@a+3
  1404  00DB12  C0BA  F03B         	movff	_main$1465,___flmul@b
  1405  00DB16  C0BB  F03C         	movff	_main$1465+1,___flmul@b+1
  1406  00DB1A  C0BC  F03D         	movff	_main$1465+2,___flmul@b+2
  1407  00DB1E  C0BD  F03E         	movff	_main$1465+3,___flmul@b+3
  1408  00DB22  ECBF  F073         	call	___flmul	;wreg free
  1409  00DB26  C03B  F054         	movff	?___flmul,___fldiv@b
  1410  00DB2A  C03C  F055         	movff	?___flmul+1,___fldiv@b+1
  1411  00DB2E  C03D  F056         	movff	?___flmul+2,___fldiv@b+2
  1412  00DB32  C03E  F057         	movff	?___flmul+3,___fldiv@b+3
  1413  00DB36  0E00               	movlw	0
  1414  00DB38  6E58               	movwf	___fldiv@a^0,c
  1415  00DB3A  0E24               	movlw	36
  1416  00DB3C  6E59               	movwf	(___fldiv@a+1)^0,c
  1417  00DB3E  0EF4               	movlw	244
  1418  00DB40  6E5A               	movwf	(___fldiv@a+2)^0,c
  1419  00DB42  0E4A               	movlw	74
  1420  00DB44  6E5B               	movwf	(___fldiv@a+3)^0,c
  1421  00DB46  ECF1  F071         	call	___fldiv	;wreg free
  1422  00DB4A  C054  F0AE         	movff	?___fldiv,main@time
  1423  00DB4E  C055  F0AF         	movff	?___fldiv+1,main@time+1
  1424  00DB52  C056  F0B0         	movff	?___fldiv+2,main@time+2
  1425  00DB56  C057  F0B1         	movff	?___fldiv+3,main@time+3
  1426  00DB5A                     
  1427                           ;main.c: 44: flag = TMR0IF;
  1428  00DB5A  0139               	movlb	57	; () banked
  1429  00DB5C  BFA3               	btfsc	163,7,b	;volatile
  1430  00DB5E  EFB3  F06D         	goto	u4541
  1431  00DB62  EFB6  F06D         	goto	u4540
  1432  00DB66                     u4541:
  1433  00DB66  0E01               	movlw	1
  1434  00DB68  EFB7  F06D         	goto	u4550
  1435  00DB6C                     u4540:
  1436  00DB6C  0E00               	movlw	0
  1437  00DB6E                     u4550:
  1438  00DB6E  0100               	movlb	0	; () banked
  1439  00DB70  6FBE               	movwf	main@flag& (0+255),b
  1440  00DB72  6BBF               	clrf	(main@flag+1)& (0+255),b
  1441  00DB74                     
  1442                           ; BSR set to: 0
  1443                           ;main.c: 46: printf("\n\rt = %f s (incorrect if overflow occurred) flag = %u \n\r",time,
      +                          flag);
  1444  00DB74  0E53               	movlw	low STR_5
  1445  00DB76  6F79               	movwf	printf@f& (0+255),b
  1446  00DB78  0EFF               	movlw	high STR_5
  1447  00DB7A  6F7A               	movwf	(printf@f+1)& (0+255),b
  1448  00DB7C  C0AE  F07B         	movff	main@time,?_printf+2
  1449  00DB80  C0AF  F07C         	movff	main@time+1,?_printf+3
  1450  00DB84  C0B0  F07D         	movff	main@time+2,?_printf+4
  1451  00DB88  C0B1  F07E         	movff	main@time+3,?_printf+5
  1452  00DB8C  C0BE  F07F         	movff	main@flag,?_printf+6
  1453  00DB90  C0BF  F080         	movff	main@flag+1,?_printf+7
  1454  00DB94  ECA1  F07A         	call	_printf	;wreg free
  1455  00DB98  EFF0  F06C         	goto	l4375
  1456  00DB9C  EFFE  F07F         	goto	start
  1457  00DBA0                     __end_of_main:
  1458                           	callstack 0
  1459                           
  1460 ;; *************** function _pow *****************
  1461 ;; Defined at:
  1462 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\pow.c"
  1463 ;; Parameters:    Size  Location     Type
  1464 ;;  x               4   52[BANK0 ] void 
  1465 ;;  y               4   56[BANK0 ] void 
  1466 ;; Auto vars:     Size  Location     Type
  1467 ;;  yi              4   69[BANK0 ] unsigned long 
  1468 ;;  sign            1   68[BANK0 ] unsigned char 
  1469 ;; Return value:  Size  Location     Type
  1470 ;;                  4   52[BANK0 ] unsigned char 
  1471 ;; Registers used:
  1472 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1473 ;; Tracked objects:
  1474 ;;		On entry : 0/0
  1475 ;;		On exit  : 0/0
  1476 ;;		Unchanged: 0/0
  1477 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1478 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1479 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1480 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1481 ;;      Totals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1482 ;;Total ram usage:       21 bytes
  1483 ;; Hardware stack levels used:    1
  1484 ;; Hardware stack levels required when called:    4
  1485 ;; This function calls:
  1486 ;;		___fleq
  1487 ;;		___flge
  1488 ;;		___flmul
  1489 ;;		___flneg
  1490 ;;		___fltol
  1491 ;;		___xxtofl
  1492 ;;		_exp
  1493 ;;		_log
  1494 ;; This function is called by:
  1495 ;;		_main
  1496 ;; This function uses a non-reentrant model
  1497 ;;
  1498                           
  1499                           	psect	text1
  1500  00DBA0                     __ptext1:
  1501                           	callstack 0
  1502  00DBA0                     _pow:
  1503                           	callstack 26
  1504  00DBA0  0E00               	movlw	0
  1505  00DBA2  0100               	movlb	0	; () banked
  1506  00DBA4  6FA4               	movwf	pow@sign& (0+255),b
  1507  00DBA6                     
  1508                           ; BSR set to: 0
  1509  00DBA6  C094  F027         	movff	pow@x,___fleq@ff1
  1510  00DBAA  C095  F028         	movff	pow@x+1,___fleq@ff1+1
  1511  00DBAE  C096  F029         	movff	pow@x+2,___fleq@ff1+2
  1512  00DBB2  C097  F02A         	movff	pow@x+3,___fleq@ff1+3
  1513  00DBB6  0E00               	movlw	0
  1514  00DBB8  6E2B               	movwf	___fleq@ff2^0,c
  1515  00DBBA  0E00               	movlw	0
  1516  00DBBC  6E2C               	movwf	(___fleq@ff2+1)^0,c
  1517  00DBBE  0E00               	movlw	0
  1518  00DBC0  6E2D               	movwf	(___fleq@ff2+2)^0,c
  1519  00DBC2  0E00               	movlw	0
  1520  00DBC4  6E2E               	movwf	(___fleq@ff2+3)^0,c
  1521  00DBC6  EC84  F065         	call	___fleq	;wreg free
  1522  00DBCA  A0D8               	btfss	status,0,c
  1523  00DBCC  EFEA  F06D         	goto	u4451
  1524  00DBD0  EFEC  F06D         	goto	u4450
  1525  00DBD4                     u4451:
  1526  00DBD4  EF15  F06E         	goto	l4317
  1527  00DBD8                     u4450:
  1528  00DBD8  0E00               	movlw	0
  1529  00DBDA  6E01               	movwf	___flge@ff1^0,c
  1530  00DBDC  0E00               	movlw	0
  1531  00DBDE  6E02               	movwf	(___flge@ff1+1)^0,c
  1532  00DBE0  0E00               	movlw	0
  1533  00DBE2  6E03               	movwf	(___flge@ff1+2)^0,c
  1534  00DBE4  0E00               	movlw	0
  1535  00DBE6  6E04               	movwf	(___flge@ff1+3)^0,c
  1536  00DBE8  C098  F005         	movff	pow@y,___flge@ff2
  1537  00DBEC  C099  F006         	movff	pow@y+1,___flge@ff2+1
  1538  00DBF0  C09A  F007         	movff	pow@y+2,___flge@ff2+2
  1539  00DBF4  C09B  F008         	movff	pow@y+3,___flge@ff2+3
  1540  00DBF8  ECFF  F066         	call	___flge	;wreg free
  1541  00DBFC  A0D8               	btfss	status,0,c
  1542  00DBFE  EF03  F06E         	goto	u4461
  1543  00DC02  EF05  F06E         	goto	u4460
  1544  00DC06                     u4461:
  1545  00DC06  EF0A  F06E         	goto	l1144
  1546  00DC0A                     u4460:
  1547  00DC0A  0E00               	movlw	0
  1548  00DC0C  0100               	movlb	0	; () banked
  1549  00DC0E  6FCE               	movwf	(_errno+1)& (0+255),b
  1550  00DC10  0E21               	movlw	33
  1551  00DC12  6FCD               	movwf	_errno& (0+255),b
  1552  00DC14                     l1144:
  1553  00DC14  0E00               	movlw	0
  1554  00DC16  0100               	movlb	0	; () banked
  1555  00DC18  6F94               	movwf	?_pow& (0+255),b
  1556  00DC1A  0E00               	movlw	0
  1557  00DC1C  6F95               	movwf	(?_pow+1)& (0+255),b
  1558  00DC1E  0E00               	movlw	0
  1559  00DC20  6F96               	movwf	(?_pow+2)& (0+255),b
  1560  00DC22  0E00               	movlw	0
  1561  00DC24  6F97               	movwf	(?_pow+3)& (0+255),b
  1562  00DC26  EFFF  F06E         	goto	l1145
  1563  00DC2A                     l4317:
  1564  00DC2A  C098  F027         	movff	pow@y,___fleq@ff1
  1565  00DC2E  C099  F028         	movff	pow@y+1,___fleq@ff1+1
  1566  00DC32  C09A  F029         	movff	pow@y+2,___fleq@ff1+2
  1567  00DC36  C09B  F02A         	movff	pow@y+3,___fleq@ff1+3
  1568  00DC3A  0E00               	movlw	0
  1569  00DC3C  6E2B               	movwf	___fleq@ff2^0,c
  1570  00DC3E  0E00               	movlw	0
  1571  00DC40  6E2C               	movwf	(___fleq@ff2+1)^0,c
  1572  00DC42  0E00               	movlw	0
  1573  00DC44  6E2D               	movwf	(___fleq@ff2+2)^0,c
  1574  00DC46  0E00               	movlw	0
  1575  00DC48  6E2E               	movwf	(___fleq@ff2+3)^0,c
  1576  00DC4A  EC84  F065         	call	___fleq	;wreg free
  1577  00DC4E  A0D8               	btfss	status,0,c
  1578  00DC50  EF2C  F06E         	goto	u4471
  1579  00DC54  EF2E  F06E         	goto	u4470
  1580  00DC58                     u4471:
  1581  00DC58  EF39  F06E         	goto	l4323
  1582  00DC5C                     u4470:
  1583  00DC5C  0E00               	movlw	0
  1584  00DC5E  0100               	movlb	0	; () banked
  1585  00DC60  6F94               	movwf	?_pow& (0+255),b
  1586  00DC62  0E00               	movlw	0
  1587  00DC64  6F95               	movwf	(?_pow+1)& (0+255),b
  1588  00DC66  0E80               	movlw	128
  1589  00DC68  6F96               	movwf	(?_pow+2)& (0+255),b
  1590  00DC6A  0E3F               	movlw	63
  1591  00DC6C  6F97               	movwf	(?_pow+3)& (0+255),b
  1592  00DC6E  EFFF  F06E         	goto	l1145
  1593  00DC72                     l4323:
  1594  00DC72  0100               	movlb	0	; () banked
  1595  00DC74  BF97               	btfsc	(pow@x+3)& (0+255),7,b
  1596  00DC76  EF41  F06E         	goto	u4480
  1597  00DC7A  EF3F  F06E         	goto	u4481
  1598  00DC7E                     u4481:
  1599  00DC7E  EF9C  F06E         	goto	l4335
  1600  00DC82                     u4480:
  1601  00DC82                     
  1602                           ; BSR set to: 0
  1603  00DC82  C098  F00F         	movff	pow@y,___fltol@f1
  1604  00DC86  C099  F010         	movff	pow@y+1,___fltol@f1+1
  1605  00DC8A  C09A  F011         	movff	pow@y+2,___fltol@f1+2
  1606  00DC8E  C09B  F012         	movff	pow@y+3,___fltol@f1+3
  1607  00DC92  EC81  F067         	call	___fltol	;wreg free
  1608  00DC96  C00F  F0A5         	movff	?___fltol,pow@yi
  1609  00DC9A  C010  F0A6         	movff	?___fltol+1,pow@yi+1
  1610  00DC9E  C011  F0A7         	movff	?___fltol+2,pow@yi+2
  1611  00DCA2  C012  F0A8         	movff	?___fltol+3,pow@yi+3
  1612  00DCA6  C0A5  F019         	movff	pow@yi,___xxtofl@val
  1613  00DCAA  C0A6  F01A         	movff	pow@yi+1,___xxtofl@val+1
  1614  00DCAE  C0A7  F01B         	movff	pow@yi+2,___xxtofl@val+2
  1615  00DCB2  C0A8  F01C         	movff	pow@yi+3,___xxtofl@val+3
  1616  00DCB6  0E00               	movlw	0
  1617  00DCB8  ECF1  F06B         	call	___xxtofl
  1618  00DCBC  C019  F027         	movff	?___xxtofl,___fleq@ff1
  1619  00DCC0  C01A  F028         	movff	?___xxtofl+1,___fleq@ff1+1
  1620  00DCC4  C01B  F029         	movff	?___xxtofl+2,___fleq@ff1+2
  1621  00DCC8  C01C  F02A         	movff	?___xxtofl+3,___fleq@ff1+3
  1622  00DCCC  C098  F02B         	movff	pow@y,___fleq@ff2
  1623  00DCD0  C099  F02C         	movff	pow@y+1,___fleq@ff2+1
  1624  00DCD4  C09A  F02D         	movff	pow@y+2,___fleq@ff2+2
  1625  00DCD8  C09B  F02E         	movff	pow@y+3,___fleq@ff2+3
  1626  00DCDC  EC84  F065         	call	___fleq	;wreg free
  1627  00DCE0  B0D8               	btfsc	status,0,c
  1628  00DCE2  EF75  F06E         	goto	u4491
  1629  00DCE6  EF77  F06E         	goto	u4490
  1630  00DCEA                     u4491:
  1631  00DCEA  EF86  F06E         	goto	l4331
  1632  00DCEE                     u4490:
  1633  00DCEE  0E00               	movlw	0
  1634  00DCF0  0100               	movlb	0	; () banked
  1635  00DCF2  6FCE               	movwf	(_errno+1)& (0+255),b
  1636  00DCF4  0E21               	movlw	33
  1637  00DCF6  6FCD               	movwf	_errno& (0+255),b
  1638  00DCF8  0E00               	movlw	0
  1639  00DCFA  6F94               	movwf	?_pow& (0+255),b
  1640  00DCFC  0E00               	movlw	0
  1641  00DCFE  6F95               	movwf	(?_pow+1)& (0+255),b
  1642  00DD00  0E00               	movlw	0
  1643  00DD02  6F96               	movwf	(?_pow+2)& (0+255),b
  1644  00DD04  0E00               	movlw	0
  1645  00DD06  6F97               	movwf	(?_pow+3)& (0+255),b
  1646  00DD08  EFFF  F06E         	goto	l1145
  1647  00DD0C                     l4331:
  1648  00DD0C  0100               	movlb	0	; () banked
  1649  00DD0E  51A5               	movf	pow@yi& (0+255),w,b
  1650  00DD10  0B01               	andlw	1
  1651  00DD12  6FA4               	movwf	pow@sign& (0+255),b
  1652  00DD14                     
  1653                           ; BSR set to: 0
  1654  00DD14  C094  F001         	movff	pow@x,___flneg@f1
  1655  00DD18  C095  F002         	movff	pow@x+1,___flneg@f1+1
  1656  00DD1C  C096  F003         	movff	pow@x+2,___flneg@f1+2
  1657  00DD20  C097  F004         	movff	pow@x+3,___flneg@f1+3
  1658  00DD24  EC47  F063         	call	___flneg	;wreg free
  1659  00DD28  C001  F094         	movff	?___flneg,pow@x
  1660  00DD2C  C002  F095         	movff	?___flneg+1,pow@x+1
  1661  00DD30  C003  F096         	movff	?___flneg+2,pow@x+2
  1662  00DD34  C004  F097         	movff	?___flneg+3,pow@x+3
  1663  00DD38                     l4335:
  1664  00DD38  C094  F081         	movff	pow@x,log@x
  1665  00DD3C  C095  F082         	movff	pow@x+1,log@x+1
  1666  00DD40  C096  F083         	movff	pow@x+2,log@x+2
  1667  00DD44  C097  F084         	movff	pow@x+3,log@x+3
  1668  00DD48  EC22  F06B         	call	_log	;wreg free
  1669  00DD4C  C081  F09C         	movff	?_log,_pow$1470
  1670  00DD50  C082  F09D         	movff	?_log+1,_pow$1470+1
  1671  00DD54  C083  F09E         	movff	?_log+2,_pow$1470+2
  1672  00DD58  C084  F09F         	movff	?_log+3,_pow$1470+3
  1673  00DD5C  C09C  F03B         	movff	_pow$1470,___flmul@b
  1674  00DD60  C09D  F03C         	movff	_pow$1470+1,___flmul@b+1
  1675  00DD64  C09E  F03D         	movff	_pow$1470+2,___flmul@b+2
  1676  00DD68  C09F  F03E         	movff	_pow$1470+3,___flmul@b+3
  1677  00DD6C  C098  F03F         	movff	pow@y,___flmul@a
  1678  00DD70  C099  F040         	movff	pow@y+1,___flmul@a+1
  1679  00DD74  C09A  F041         	movff	pow@y+2,___flmul@a+2
  1680  00DD78  C09B  F042         	movff	pow@y+3,___flmul@a+3
  1681  00DD7C  ECBF  F073         	call	___flmul	;wreg free
  1682  00DD80  C03B  F0A0         	movff	?___flmul,_pow$1471
  1683  00DD84  C03C  F0A1         	movff	?___flmul+1,_pow$1471+1
  1684  00DD88  C03D  F0A2         	movff	?___flmul+2,_pow$1471+2
  1685  00DD8C  C03E  F0A3         	movff	?___flmul+3,_pow$1471+3
  1686  00DD90  C0A0  F089         	movff	_pow$1471,exp@x
  1687  00DD94  C0A1  F08A         	movff	_pow$1471+1,exp@x+1
  1688  00DD98  C0A2  F08B         	movff	_pow$1471+2,exp@x+2
  1689  00DD9C  C0A3  F08C         	movff	_pow$1471+3,exp@x+3
  1690  00DDA0  EC00  F06F         	call	_exp	;wreg free
  1691  00DDA4  C089  F094         	movff	?_exp,pow@x
  1692  00DDA8  C08A  F095         	movff	?_exp+1,pow@x+1
  1693  00DDAC  C08B  F096         	movff	?_exp+2,pow@x+2
  1694  00DDB0  C08C  F097         	movff	?_exp+3,pow@x+3
  1695  00DDB4  0100               	movlb	0	; () banked
  1696  00DDB6  51A4               	movf	pow@sign& (0+255),w,b
  1697  00DDB8  B4D8               	btfsc	status,2,c
  1698  00DDBA  EFE1  F06E         	goto	u4501
  1699  00DDBE  EFE3  F06E         	goto	u4500
  1700  00DDC2                     u4501:
  1701  00DDC2  EFF7  F06E         	goto	l1149
  1702  00DDC6                     u4500:
  1703  00DDC6                     
  1704                           ; BSR set to: 0
  1705  00DDC6  C094  F001         	movff	pow@x,___flneg@f1
  1706  00DDCA  C095  F002         	movff	pow@x+1,___flneg@f1+1
  1707  00DDCE  C096  F003         	movff	pow@x+2,___flneg@f1+2
  1708  00DDD2  C097  F004         	movff	pow@x+3,___flneg@f1+3
  1709  00DDD6  EC47  F063         	call	___flneg	;wreg free
  1710  00DDDA  C001  F094         	movff	?___flneg,?_pow
  1711  00DDDE  C002  F095         	movff	?___flneg+1,?_pow+1
  1712  00DDE2  C003  F096         	movff	?___flneg+2,?_pow+2
  1713  00DDE6  C004  F097         	movff	?___flneg+3,?_pow+3
  1714  00DDEA  EFFF  F06E         	goto	l1145
  1715  00DDEE                     l1149:
  1716                           
  1717                           ; BSR set to: 0
  1718  00DDEE  C094  F094         	movff	pow@x,?_pow
  1719  00DDF2  C095  F095         	movff	pow@x+1,?_pow+1
  1720  00DDF6  C096  F096         	movff	pow@x+2,?_pow+2
  1721  00DDFA  C097  F097         	movff	pow@x+3,?_pow+3
  1722  00DDFE                     l1145:
  1723  00DDFE  0012               	return		;funcret
  1724  00DE00                     __end_of_pow:
  1725                           	callstack 0
  1726                           
  1727 ;; *************** function _log *****************
  1728 ;; Defined at:
  1729 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\log.c"
  1730 ;; Parameters:    Size  Location     Type
  1731 ;;  x               4   33[BANK0 ] unsigned char 
  1732 ;; Auto vars:     Size  Location     Type
  1733 ;;  exponent        2   37[BANK0 ] int 
  1734 ;; Return value:  Size  Location     Type
  1735 ;;                  4   33[BANK0 ] int 
  1736 ;; Registers used:
  1737 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1738 ;; Tracked objects:
  1739 ;;		On entry : 0/0
  1740 ;;		On exit  : 0/0
  1741 ;;		Unchanged: 0/0
  1742 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1743 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1744 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1745 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1746 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1747 ;;Total ram usage:        6 bytes
  1748 ;; Hardware stack levels used:    1
  1749 ;; Hardware stack levels required when called:    2
  1750 ;; This function calls:
  1751 ;;		___fladd
  1752 ;;		___fleq
  1753 ;;		___flmul
  1754 ;;		___xxtofl
  1755 ;;		_eval_poly
  1756 ;;		_frexp
  1757 ;; This function is called by:
  1758 ;;		_pow
  1759 ;; This function uses a non-reentrant model
  1760 ;;
  1761                           
  1762                           	psect	text2
  1763  00D644                     __ptext2:
  1764                           	callstack 0
  1765  00D644                     _log:
  1766                           	callstack 27
  1767  00D644  0100               	movlb	0	; () banked
  1768  00D646  BF84               	btfsc	(log@x+3)& (0+255),7,b
  1769  00D648  EF2A  F06B         	goto	u4240
  1770  00D64C  EF28  F06B         	goto	u4241
  1771  00D650                     u4241:
  1772  00D650  EF38  F06B         	goto	l4183
  1773  00D654                     u4240:
  1774  00D654                     
  1775                           ; BSR set to: 0
  1776  00D654  0E00               	movlw	0
  1777  00D656  6FCE               	movwf	(_errno+1)& (0+255),b
  1778  00D658  0E21               	movlw	33
  1779  00D65A  6FCD               	movwf	_errno& (0+255),b
  1780  00D65C  0E00               	movlw	0
  1781  00D65E  6F81               	movwf	?_log& (0+255),b
  1782  00D660  0E00               	movlw	0
  1783  00D662  6F82               	movwf	(?_log+1)& (0+255),b
  1784  00D664  0E00               	movlw	0
  1785  00D666  6F83               	movwf	(?_log+2)& (0+255),b
  1786  00D668  0E00               	movlw	0
  1787  00D66A  6F84               	movwf	(?_log+3)& (0+255),b
  1788  00D66C  EFF0  F06B         	goto	l1213
  1789  00D670                     l4183:
  1790                           
  1791                           ; BSR set to: 0
  1792  00D670  C081  F027         	movff	log@x,___fleq@ff1
  1793  00D674  C082  F028         	movff	log@x+1,___fleq@ff1+1
  1794  00D678  C083  F029         	movff	log@x+2,___fleq@ff1+2
  1795  00D67C  C084  F02A         	movff	log@x+3,___fleq@ff1+3
  1796  00D680  0E00               	movlw	0
  1797  00D682  6E2B               	movwf	___fleq@ff2^0,c
  1798  00D684  0E00               	movlw	0
  1799  00D686  6E2C               	movwf	(___fleq@ff2+1)^0,c
  1800  00D688  0E00               	movlw	0
  1801  00D68A  6E2D               	movwf	(___fleq@ff2+2)^0,c
  1802  00D68C  0E00               	movlw	0
  1803  00D68E  6E2E               	movwf	(___fleq@ff2+3)^0,c
  1804  00D690  EC84  F065         	call	___fleq	;wreg free
  1805  00D694  A0D8               	btfss	status,0,c
  1806  00D696  EF4F  F06B         	goto	u4251
  1807  00D69A  EF51  F06B         	goto	u4250
  1808  00D69E                     u4251:
  1809  00D69E  EF60  F06B         	goto	l4189
  1810  00D6A2                     u4250:
  1811  00D6A2  0E00               	movlw	0
  1812  00D6A4  0100               	movlb	0	; () banked
  1813  00D6A6  6FCE               	movwf	(_errno+1)& (0+255),b
  1814  00D6A8  0E22               	movlw	34
  1815  00D6AA  6FCD               	movwf	_errno& (0+255),b
  1816  00D6AC  0E00               	movlw	0
  1817  00D6AE  6F81               	movwf	?_log& (0+255),b
  1818  00D6B0  0E00               	movlw	0
  1819  00D6B2  6F82               	movwf	(?_log+1)& (0+255),b
  1820  00D6B4  0E00               	movlw	0
  1821  00D6B6  6F83               	movwf	(?_log+2)& (0+255),b
  1822  00D6B8  0E00               	movlw	0
  1823  00D6BA  6F84               	movwf	(?_log+3)& (0+255),b
  1824  00D6BC  EFF0  F06B         	goto	l1213
  1825  00D6C0                     l4189:
  1826  00D6C0  0E00               	movlw	0
  1827  00D6C2  6E3F               	movwf	___flmul@a^0,c
  1828  00D6C4  0E00               	movlw	0
  1829  00D6C6  6E40               	movwf	(___flmul@a+1)^0,c
  1830  00D6C8  0E00               	movlw	0
  1831  00D6CA  6E41               	movwf	(___flmul@a+2)^0,c
  1832  00D6CC  0E40               	movlw	64
  1833  00D6CE  6E42               	movwf	(___flmul@a+3)^0,c
  1834  00D6D0  0E85               	movlw	low log@exponent
  1835  00D6D2  6E37               	movwf	frexp@eptr^0,c
  1836  00D6D4  0E00               	movlw	high log@exponent
  1837  00D6D6  6E38               	movwf	(frexp@eptr+1)^0,c
  1838  00D6D8  C081  F033         	movff	log@x,frexp@value
  1839  00D6DC  C082  F034         	movff	log@x+1,frexp@value+1
  1840  00D6E0  C083  F035         	movff	log@x+2,frexp@value+2
  1841  00D6E4  C084  F036         	movff	log@x+3,frexp@value+3
  1842  00D6E8  EC93  F066         	call	_frexp	;wreg free
  1843  00D6EC  C033  F03B         	movff	?_frexp,___flmul@b
  1844  00D6F0  C034  F03C         	movff	?_frexp+1,___flmul@b+1
  1845  00D6F4  C035  F03D         	movff	?_frexp+2,___flmul@b+2
  1846  00D6F8  C036  F03E         	movff	?_frexp+3,___flmul@b+3
  1847  00D6FC  ECBF  F073         	call	___flmul	;wreg free
  1848  00D700  C03B  F058         	movff	?___flmul,___fladd@b
  1849  00D704  C03C  F059         	movff	?___flmul+1,___fladd@b+1
  1850  00D708  C03D  F05A         	movff	?___flmul+2,___fladd@b+2
  1851  00D70C  C03E  F05B         	movff	?___flmul+3,___fladd@b+3
  1852  00D710  0E00               	movlw	0
  1853  00D712  6E5C               	movwf	___fladd@a^0,c
  1854  00D714  0E00               	movlw	0
  1855  00D716  6E5D               	movwf	(___fladd@a+1)^0,c
  1856  00D718  0E80               	movlw	128
  1857  00D71A  6E5E               	movwf	(___fladd@a+2)^0,c
  1858  00D71C  0EBF               	movlw	191
  1859  00D71E  6E5F               	movwf	(___fladd@a+3)^0,c
  1860  00D720  EC40  F078         	call	___fladd	;wreg free
  1861  00D724  C058  F081         	movff	?___fladd,log@x
  1862  00D728  C059  F082         	movff	?___fladd+1,log@x+1
  1863  00D72C  C05A  F083         	movff	?___fladd+2,log@x+2
  1864  00D730  C05B  F084         	movff	?___fladd+3,log@x+3
  1865  00D734  0100               	movlb	0	; () banked
  1866  00D736  0785               	decf	log@exponent& (0+255),f,b
  1867  00D738  A0D8               	btfss	status,0,c
  1868  00D73A  0786               	decf	(log@exponent+1)& (0+255),f,b
  1869  00D73C                     
  1870                           ; BSR set to: 0
  1871  00D73C  C081  F071         	movff	log@x,eval_poly@x
  1872  00D740  C082  F072         	movff	log@x+1,eval_poly@x+1
  1873  00D744  C083  F073         	movff	log@x+2,eval_poly@x+2
  1874  00D748  C084  F074         	movff	log@x+3,eval_poly@x+3
  1875  00D74C  0E2F               	movlw	low log@coeff
  1876  00D74E  6F75               	movwf	eval_poly@d& (0+255),b
  1877  00D750  0EFF               	movlw	high log@coeff
  1878  00D752  6F76               	movwf	(eval_poly@d+1)& (0+255),b
  1879  00D754  0E00               	movlw	0
  1880  00D756  6F78               	movwf	(eval_poly@n+1)& (0+255),b
  1881  00D758  0E08               	movlw	8
  1882  00D75A  6F77               	movwf	eval_poly@n& (0+255),b
  1883  00D75C  EC04  F068         	call	_eval_poly	;wreg free
  1884  00D760  C071  F081         	movff	?_eval_poly,log@x
  1885  00D764  C072  F082         	movff	?_eval_poly+1,log@x+1
  1886  00D768  C073  F083         	movff	?_eval_poly+2,log@x+2
  1887  00D76C  C074  F084         	movff	?_eval_poly+3,log@x+3
  1888  00D770  0E18               	movlw	24
  1889  00D772  6E3F               	movwf	___flmul@a^0,c
  1890  00D774  0E72               	movlw	114
  1891  00D776  6E40               	movwf	(___flmul@a+1)^0,c
  1892  00D778  0E31               	movlw	49
  1893  00D77A  6E41               	movwf	(___flmul@a+2)^0,c
  1894  00D77C  0E3F               	movlw	63
  1895  00D77E  6E42               	movwf	(___flmul@a+3)^0,c
  1896  00D780  C085  F019         	movff	log@exponent,___xxtofl@val
  1897  00D784  C086  F01A         	movff	log@exponent+1,___xxtofl@val+1
  1898  00D788  0E00               	movlw	0
  1899  00D78A  BE1A               	btfsc	(___xxtofl@val+1)^0,7,c
  1900  00D78C  0EFF               	movlw	-1
  1901  00D78E  6E1B               	movwf	(___xxtofl@val+2)^0,c
  1902  00D790  6E1C               	movwf	(___xxtofl@val+3)^0,c
  1903  00D792  0E01               	movlw	1
  1904  00D794  ECF1  F06B         	call	___xxtofl
  1905  00D798  C019  F03B         	movff	?___xxtofl,___flmul@b
  1906  00D79C  C01A  F03C         	movff	?___xxtofl+1,___flmul@b+1
  1907  00D7A0  C01B  F03D         	movff	?___xxtofl+2,___flmul@b+2
  1908  00D7A4  C01C  F03E         	movff	?___xxtofl+3,___flmul@b+3
  1909  00D7A8  ECBF  F073         	call	___flmul	;wreg free
  1910  00D7AC  C03B  F058         	movff	?___flmul,___fladd@b
  1911  00D7B0  C03C  F059         	movff	?___flmul+1,___fladd@b+1
  1912  00D7B4  C03D  F05A         	movff	?___flmul+2,___fladd@b+2
  1913  00D7B8  C03E  F05B         	movff	?___flmul+3,___fladd@b+3
  1914  00D7BC  C081  F05C         	movff	log@x,___fladd@a
  1915  00D7C0  C082  F05D         	movff	log@x+1,___fladd@a+1
  1916  00D7C4  C083  F05E         	movff	log@x+2,___fladd@a+2
  1917  00D7C8  C084  F05F         	movff	log@x+3,___fladd@a+3
  1918  00D7CC  EC40  F078         	call	___fladd	;wreg free
  1919  00D7D0  C058  F081         	movff	?___fladd,?_log
  1920  00D7D4  C059  F082         	movff	?___fladd+1,?_log+1
  1921  00D7D8  C05A  F083         	movff	?___fladd+2,?_log+2
  1922  00D7DC  C05B  F084         	movff	?___fladd+3,?_log+3
  1923  00D7E0                     l1213:
  1924  00D7E0  0012               	return		;funcret
  1925  00D7E2                     __end_of_log:
  1926                           	callstack 0
  1927                           
  1928 ;; *************** function _exp *****************
  1929 ;; Defined at:
  1930 ;;		line 12 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\exp.c"
  1931 ;; Parameters:    Size  Location     Type
  1932 ;;  x               4   41[BANK0 ] int 
  1933 ;; Auto vars:     Size  Location     Type
  1934 ;;  exponent        2   49[BANK0 ] int 
  1935 ;;  sign            1   51[BANK0 ] unsigned char 
  1936 ;; Return value:  Size  Location     Type
  1937 ;;                  4   41[BANK0 ] unsigned char 
  1938 ;; Registers used:
  1939 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1940 ;; Tracked objects:
  1941 ;;		On entry : 0/0
  1942 ;;		On exit  : 0/0
  1943 ;;		Unchanged: 0/0
  1944 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1945 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1946 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1947 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1948 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1949 ;;Total ram usage:       11 bytes
  1950 ;; Hardware stack levels used:    1
  1951 ;; Hardware stack levels required when called:    3
  1952 ;; This function calls:
  1953 ;;		___fldiv
  1954 ;;		___fleq
  1955 ;;		___flge
  1956 ;;		___flmul
  1957 ;;		___flneg
  1958 ;;		___flsub
  1959 ;;		___fltol
  1960 ;;		___xxtofl
  1961 ;;		_eval_poly
  1962 ;;		_floor
  1963 ;;		_ldexp
  1964 ;; This function is called by:
  1965 ;;		_pow
  1966 ;; This function uses a non-reentrant model
  1967 ;;
  1968                           
  1969                           	psect	text3
  1970  00DE00                     __ptext3:
  1971                           	callstack 0
  1972  00DE00                     _exp:
  1973                           	callstack 26
  1974  00DE00  C089  F027         	movff	exp@x,___fleq@ff1
  1975  00DE04  C08A  F028         	movff	exp@x+1,___fleq@ff1+1
  1976  00DE08  C08B  F029         	movff	exp@x+2,___fleq@ff1+2
  1977  00DE0C  C08C  F02A         	movff	exp@x+3,___fleq@ff1+3
  1978  00DE10  0E00               	movlw	0
  1979  00DE12  6E2B               	movwf	___fleq@ff2^0,c
  1980  00DE14  0E00               	movlw	0
  1981  00DE16  6E2C               	movwf	(___fleq@ff2+1)^0,c
  1982  00DE18  0E00               	movlw	0
  1983  00DE1A  6E2D               	movwf	(___fleq@ff2+2)^0,c
  1984  00DE1C  0E00               	movlw	0
  1985  00DE1E  6E2E               	movwf	(___fleq@ff2+3)^0,c
  1986  00DE20  EC84  F065         	call	___fleq	;wreg free
  1987  00DE24  A0D8               	btfss	status,0,c
  1988  00DE26  EF17  F06F         	goto	u4261
  1989  00DE2A  EF19  F06F         	goto	u4260
  1990  00DE2E                     u4261:
  1991  00DE2E  EF24  F06F         	goto	l4205
  1992  00DE32                     u4260:
  1993  00DE32  0E00               	movlw	0
  1994  00DE34  0100               	movlb	0	; () banked
  1995  00DE36  6F89               	movwf	?_exp& (0+255),b
  1996  00DE38  0E00               	movlw	0
  1997  00DE3A  6F8A               	movwf	(?_exp+1)& (0+255),b
  1998  00DE3C  0E80               	movlw	128
  1999  00DE3E  6F8B               	movwf	(?_exp+2)& (0+255),b
  2000  00DE40  0E3F               	movlw	63
  2001  00DE42  6F8C               	movwf	(?_exp+3)& (0+255),b
  2002  00DE44  EF73  F070         	goto	l1165
  2003  00DE48                     l4205:
  2004  00DE48  0E18               	movlw	24
  2005  00DE4A  6E01               	movwf	___flge@ff1^0,c
  2006  00DE4C  0E72               	movlw	114
  2007  00DE4E  6E02               	movwf	(___flge@ff1+1)^0,c
  2008  00DE50  0E31               	movlw	49
  2009  00DE52  6E03               	movwf	(___flge@ff1+2)^0,c
  2010  00DE54  0E44               	movlw	68
  2011  00DE56  6E04               	movwf	(___flge@ff1+3)^0,c
  2012  00DE58  C089  F005         	movff	exp@x,___flge@ff2
  2013  00DE5C  C08A  F006         	movff	exp@x+1,___flge@ff2+1
  2014  00DE60  C08B  F007         	movff	exp@x+2,___flge@ff2+2
  2015  00DE64  C08C  F008         	movff	exp@x+3,___flge@ff2+3
  2016  00DE68  ECFF  F066         	call	___flge	;wreg free
  2017  00DE6C  B0D8               	btfsc	status,0,c
  2018  00DE6E  EF3B  F06F         	goto	u4271
  2019  00DE72  EF3D  F06F         	goto	u4270
  2020  00DE76                     u4271:
  2021  00DE76  EF4C  F06F         	goto	l4211
  2022  00DE7A                     u4270:
  2023  00DE7A  0E00               	movlw	0
  2024  00DE7C  0100               	movlb	0	; () banked
  2025  00DE7E  6FCE               	movwf	(_errno+1)& (0+255),b
  2026  00DE80  0E22               	movlw	34
  2027  00DE82  6FCD               	movwf	_errno& (0+255),b
  2028  00DE84  0EFF               	movlw	255
  2029  00DE86  6F89               	movwf	?_exp& (0+255),b
  2030  00DE88  0EFF               	movlw	255
  2031  00DE8A  6F8A               	movwf	(?_exp+1)& (0+255),b
  2032  00DE8C  0E7F               	movlw	127
  2033  00DE8E  6F8B               	movwf	(?_exp+2)& (0+255),b
  2034  00DE90  0E7F               	movlw	127
  2035  00DE92  6F8C               	movwf	(?_exp+3)& (0+255),b
  2036  00DE94  EF73  F070         	goto	l1165
  2037  00DE98                     l4211:
  2038  00DE98  C089  F001         	movff	exp@x,___flge@ff1
  2039  00DE9C  C08A  F002         	movff	exp@x+1,___flge@ff1+1
  2040  00DEA0  C08B  F003         	movff	exp@x+2,___flge@ff1+2
  2041  00DEA4  C08C  F004         	movff	exp@x+3,___flge@ff1+3
  2042  00DEA8  0E87               	movlw	135
  2043  00DEAA  6E05               	movwf	___flge@ff2^0,c
  2044  00DEAC  0E48               	movlw	72
  2045  00DEAE  6E06               	movwf	(___flge@ff2+1)^0,c
  2046  00DEB0  0E3A               	movlw	58
  2047  00DEB2  6E07               	movwf	(___flge@ff2+2)^0,c
  2048  00DEB4  0EC4               	movlw	196
  2049  00DEB6  6E08               	movwf	(___flge@ff2+3)^0,c
  2050  00DEB8  ECFF  F066         	call	___flge	;wreg free
  2051  00DEBC  B0D8               	btfsc	status,0,c
  2052  00DEBE  EF63  F06F         	goto	u4281
  2053  00DEC2  EF65  F06F         	goto	u4280
  2054  00DEC6                     u4281:
  2055  00DEC6  EF74  F06F         	goto	l4217
  2056  00DECA                     u4280:
  2057  00DECA  0E00               	movlw	0
  2058  00DECC  0100               	movlb	0	; () banked
  2059  00DECE  6FCE               	movwf	(_errno+1)& (0+255),b
  2060  00DED0  0E22               	movlw	34
  2061  00DED2  6FCD               	movwf	_errno& (0+255),b
  2062  00DED4  0E00               	movlw	0
  2063  00DED6  6F89               	movwf	?_exp& (0+255),b
  2064  00DED8  0E00               	movlw	0
  2065  00DEDA  6F8A               	movwf	(?_exp+1)& (0+255),b
  2066  00DEDC  0E00               	movlw	0
  2067  00DEDE  6F8B               	movwf	(?_exp+2)& (0+255),b
  2068  00DEE0  0E00               	movlw	0
  2069  00DEE2  6F8C               	movwf	(?_exp+3)& (0+255),b
  2070  00DEE4  EF73  F070         	goto	l1165
  2071  00DEE8                     l4217:
  2072  00DEE8  0100               	movlb	0	; () banked
  2073  00DEEA  BF8C               	btfsc	(exp@x+3)& (0+255),7,b
  2074  00DEEC  EF7A  F06F         	goto	u4291
  2075  00DEF0  EF7D  F06F         	goto	u4290
  2076  00DEF4                     u4291:
  2077  00DEF4  0E01               	movlw	1
  2078  00DEF6  EF7E  F06F         	goto	u4300
  2079  00DEFA                     u4290:
  2080  00DEFA  0E00               	movlw	0
  2081  00DEFC                     u4300:
  2082  00DEFC  6F93               	movwf	exp@sign& (0+255),b
  2083  00DEFE                     
  2084                           ; BSR set to: 0
  2085  00DEFE  5193               	movf	exp@sign& (0+255),w,b
  2086  00DF00  B4D8               	btfsc	status,2,c
  2087  00DF02  EF85  F06F         	goto	u4311
  2088  00DF06  EF87  F06F         	goto	u4310
  2089  00DF0A                     u4311:
  2090  00DF0A  EF99  F06F         	goto	l4223
  2091  00DF0E                     u4310:
  2092  00DF0E                     
  2093                           ; BSR set to: 0
  2094  00DF0E  C089  F001         	movff	exp@x,___flneg@f1
  2095  00DF12  C08A  F002         	movff	exp@x+1,___flneg@f1+1
  2096  00DF16  C08B  F003         	movff	exp@x+2,___flneg@f1+2
  2097  00DF1A  C08C  F004         	movff	exp@x+3,___flneg@f1+3
  2098  00DF1E  EC47  F063         	call	___flneg	;wreg free
  2099  00DF22  C001  F089         	movff	?___flneg,exp@x
  2100  00DF26  C002  F08A         	movff	?___flneg+1,exp@x+1
  2101  00DF2A  C003  F08B         	movff	?___flneg+2,exp@x+2
  2102  00DF2E  C004  F08C         	movff	?___flneg+3,exp@x+3
  2103  00DF32                     l4223:
  2104  00DF32  C089  F03B         	movff	exp@x,___flmul@b
  2105  00DF36  C08A  F03C         	movff	exp@x+1,___flmul@b+1
  2106  00DF3A  C08B  F03D         	movff	exp@x+2,___flmul@b+2
  2107  00DF3E  C08C  F03E         	movff	exp@x+3,___flmul@b+3
  2108  00DF42  0E3B               	movlw	59
  2109  00DF44  6E3F               	movwf	___flmul@a^0,c
  2110  00DF46  0EAA               	movlw	170
  2111  00DF48  6E40               	movwf	(___flmul@a+1)^0,c
  2112  00DF4A  0EB8               	movlw	184
  2113  00DF4C  6E41               	movwf	(___flmul@a+2)^0,c
  2114  00DF4E  0E3F               	movlw	63
  2115  00DF50  6E42               	movwf	(___flmul@a+3)^0,c
  2116  00DF52  ECBF  F073         	call	___flmul	;wreg free
  2117  00DF56  C03B  F089         	movff	?___flmul,exp@x
  2118  00DF5A  C03C  F08A         	movff	?___flmul+1,exp@x+1
  2119  00DF5E  C03D  F08B         	movff	?___flmul+2,exp@x+2
  2120  00DF62  C03E  F08C         	movff	?___flmul+3,exp@x+3
  2121  00DF66  C089  F071         	movff	exp@x,floor@x
  2122  00DF6A  C08A  F072         	movff	exp@x+1,floor@x+1
  2123  00DF6E  C08B  F073         	movff	exp@x+2,floor@x+2
  2124  00DF72  C08C  F074         	movff	exp@x+3,floor@x+3
  2125  00DF76  EC30  F069         	call	_floor	;wreg free
  2126  00DF7A  C071  F08D         	movff	?_floor,_exp$1472
  2127  00DF7E  C072  F08E         	movff	?_floor+1,_exp$1472+1
  2128  00DF82  C073  F08F         	movff	?_floor+2,_exp$1472+2
  2129  00DF86  C074  F090         	movff	?_floor+3,_exp$1472+3
  2130  00DF8A  C08D  F00F         	movff	_exp$1472,___fltol@f1
  2131  00DF8E  C08E  F010         	movff	_exp$1472+1,___fltol@f1+1
  2132  00DF92  C08F  F011         	movff	_exp$1472+2,___fltol@f1+2
  2133  00DF96  C090  F012         	movff	_exp$1472+3,___fltol@f1+3
  2134  00DF9A  EC81  F067         	call	___fltol	;wreg free
  2135  00DF9E  C00F  F091         	movff	?___fltol,exp@exponent
  2136  00DFA2  C010  F092         	movff	?___fltol+1,exp@exponent+1
  2137  00DFA6  C089  F071         	movff	exp@x,___flsub@b
  2138  00DFAA  C08A  F072         	movff	exp@x+1,___flsub@b+1
  2139  00DFAE  C08B  F073         	movff	exp@x+2,___flsub@b+2
  2140  00DFB2  C08C  F074         	movff	exp@x+3,___flsub@b+3
  2141  00DFB6  C091  F019         	movff	exp@exponent,___xxtofl@val
  2142  00DFBA  C092  F01A         	movff	exp@exponent+1,___xxtofl@val+1
  2143  00DFBE  0E00               	movlw	0
  2144  00DFC0  BE1A               	btfsc	(___xxtofl@val+1)^0,7,c
  2145  00DFC2  0EFF               	movlw	-1
  2146  00DFC4  6E1B               	movwf	(___xxtofl@val+2)^0,c
  2147  00DFC6  6E1C               	movwf	(___xxtofl@val+3)^0,c
  2148  00DFC8  0E01               	movlw	1
  2149  00DFCA  ECF1  F06B         	call	___xxtofl
  2150  00DFCE  C019  F075         	movff	?___xxtofl,___flsub@a
  2151  00DFD2  C01A  F076         	movff	?___xxtofl+1,___flsub@a+1
  2152  00DFD6  C01B  F077         	movff	?___xxtofl+2,___flsub@a+2
  2153  00DFDA  C01C  F078         	movff	?___xxtofl+3,___flsub@a+3
  2154  00DFDE  EC63  F063         	call	___flsub	;wreg free
  2155  00DFE2  C071  F089         	movff	?___flsub,exp@x
  2156  00DFE6  C072  F08A         	movff	?___flsub+1,exp@x+1
  2157  00DFEA  C073  F08B         	movff	?___flsub+2,exp@x+2
  2158  00DFEE  C074  F08C         	movff	?___flsub+3,exp@x+3
  2159  00DFF2  C089  F071         	movff	exp@x,eval_poly@x
  2160  00DFF6  C08A  F072         	movff	exp@x+1,eval_poly@x+1
  2161  00DFFA  C08B  F073         	movff	exp@x+2,eval_poly@x+2
  2162  00DFFE  C08C  F074         	movff	exp@x+3,eval_poly@x+3
  2163  00E002  0EDF               	movlw	low exp@coeff
  2164  00E004  0100               	movlb	0	; () banked
  2165  00E006  6F75               	movwf	eval_poly@d& (0+255),b
  2166  00E008  0EFE               	movlw	high exp@coeff
  2167  00E00A  6F76               	movwf	(eval_poly@d+1)& (0+255),b
  2168  00E00C  0E00               	movlw	0
  2169  00E00E  6F78               	movwf	(eval_poly@n+1)& (0+255),b
  2170  00E010  0E09               	movlw	9
  2171  00E012  6F77               	movwf	eval_poly@n& (0+255),b
  2172  00E014  EC04  F068         	call	_eval_poly	;wreg free
  2173  00E018  C071  F081         	movff	?_eval_poly,ldexp@value
  2174  00E01C  C072  F082         	movff	?_eval_poly+1,ldexp@value+1
  2175  00E020  C073  F083         	movff	?_eval_poly+2,ldexp@value+2
  2176  00E024  C074  F084         	movff	?_eval_poly+3,ldexp@value+3
  2177  00E028  C091  F085         	movff	exp@exponent,ldexp@newexp
  2178  00E02C  C092  F086         	movff	exp@exponent+1,ldexp@newexp+1
  2179  00E030  EC94  F068         	call	_ldexp	;wreg free
  2180  00E034  C081  F089         	movff	?_ldexp,exp@x
  2181  00E038  C082  F08A         	movff	?_ldexp+1,exp@x+1
  2182  00E03C  C083  F08B         	movff	?_ldexp+2,exp@x+2
  2183  00E040  C084  F08C         	movff	?_ldexp+3,exp@x+3
  2184  00E044  0100               	movlb	0	; () banked
  2185  00E046  5193               	movf	exp@sign& (0+255),w,b
  2186  00E048  B4D8               	btfsc	status,2,c
  2187  00E04A  EF29  F070         	goto	u4321
  2188  00E04E  EF2B  F070         	goto	u4320
  2189  00E052                     u4321:
  2190  00E052  EF6B  F070         	goto	l1169
  2191  00E056                     u4320:
  2192  00E056                     
  2193                           ; BSR set to: 0
  2194  00E056  C089  F027         	movff	exp@x,___fleq@ff1
  2195  00E05A  C08A  F028         	movff	exp@x+1,___fleq@ff1+1
  2196  00E05E  C08B  F029         	movff	exp@x+2,___fleq@ff1+2
  2197  00E062  C08C  F02A         	movff	exp@x+3,___fleq@ff1+3
  2198  00E066  0EFF               	movlw	255
  2199  00E068  6E2B               	movwf	___fleq@ff2^0,c
  2200  00E06A  0EFF               	movlw	255
  2201  00E06C  6E2C               	movwf	(___fleq@ff2+1)^0,c
  2202  00E06E  0E7F               	movlw	127
  2203  00E070  6E2D               	movwf	(___fleq@ff2+2)^0,c
  2204  00E072  0E7F               	movlw	127
  2205  00E074  6E2E               	movwf	(___fleq@ff2+3)^0,c
  2206  00E076  EC84  F065         	call	___fleq	;wreg free
  2207  00E07A  A0D8               	btfss	status,0,c
  2208  00E07C  EF42  F070         	goto	u4331
  2209  00E080  EF44  F070         	goto	u4330
  2210  00E084                     u4331:
  2211  00E084  EF4F  F070         	goto	l4241
  2212  00E088                     u4330:
  2213  00E088  0E00               	movlw	0
  2214  00E08A  0100               	movlb	0	; () banked
  2215  00E08C  6F89               	movwf	?_exp& (0+255),b
  2216  00E08E  0E00               	movlw	0
  2217  00E090  6F8A               	movwf	(?_exp+1)& (0+255),b
  2218  00E092  0E00               	movlw	0
  2219  00E094  6F8B               	movwf	(?_exp+2)& (0+255),b
  2220  00E096  0E00               	movlw	0
  2221  00E098  6F8C               	movwf	(?_exp+3)& (0+255),b
  2222  00E09A  EF73  F070         	goto	l1165
  2223  00E09E                     l4241:
  2224  00E09E  0E00               	movlw	0
  2225  00E0A0  6E54               	movwf	___fldiv@b^0,c
  2226  00E0A2  0E00               	movlw	0
  2227  00E0A4  6E55               	movwf	(___fldiv@b+1)^0,c
  2228  00E0A6  0E80               	movlw	128
  2229  00E0A8  6E56               	movwf	(___fldiv@b+2)^0,c
  2230  00E0AA  0E3F               	movlw	63
  2231  00E0AC  6E57               	movwf	(___fldiv@b+3)^0,c
  2232  00E0AE  C089  F058         	movff	exp@x,___fldiv@a
  2233  00E0B2  C08A  F059         	movff	exp@x+1,___fldiv@a+1
  2234  00E0B6  C08B  F05A         	movff	exp@x+2,___fldiv@a+2
  2235  00E0BA  C08C  F05B         	movff	exp@x+3,___fldiv@a+3
  2236  00E0BE  ECF1  F071         	call	___fldiv	;wreg free
  2237  00E0C2  C054  F089         	movff	?___fldiv,?_exp
  2238  00E0C6  C055  F08A         	movff	?___fldiv+1,?_exp+1
  2239  00E0CA  C056  F08B         	movff	?___fldiv+2,?_exp+2
  2240  00E0CE  C057  F08C         	movff	?___fldiv+3,?_exp+3
  2241  00E0D2  EF73  F070         	goto	l1165
  2242  00E0D6                     l1169:
  2243                           
  2244                           ; BSR set to: 0
  2245  00E0D6  C089  F089         	movff	exp@x,?_exp
  2246  00E0DA  C08A  F08A         	movff	exp@x+1,?_exp+1
  2247  00E0DE  C08B  F08B         	movff	exp@x+2,?_exp+2
  2248  00E0E2  C08C  F08C         	movff	exp@x+3,?_exp+3
  2249  00E0E6                     l1165:
  2250  00E0E6  0012               	return		;funcret
  2251  00E0E8                     __end_of_exp:
  2252                           	callstack 0
  2253                           
  2254 ;; *************** function _ldexp *****************
  2255 ;; Defined at:
  2256 ;;		line 277 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\frexp.c"
  2257 ;; Parameters:    Size  Location     Type
  2258 ;;  value           4   33[BANK0 ] unsigned char 
  2259 ;;  newexp          2   37[BANK0 ] int 
  2260 ;; Auto vars:     Size  Location     Type
  2261 ;;		None
  2262 ;; Return value:  Size  Location     Type
  2263 ;;                  4   33[BANK0 ] int 
  2264 ;; Registers used:
  2265 ;;		wreg, status,2, status,0, cstack
  2266 ;; Tracked objects:
  2267 ;;		On entry : 0/0
  2268 ;;		On exit  : 0/0
  2269 ;;		Unchanged: 0/0
  2270 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2271 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2272 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2273 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2274 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2275 ;;Total ram usage:        8 bytes
  2276 ;; Hardware stack levels used:    1
  2277 ;; Hardware stack levels required when called:    1
  2278 ;; This function calls:
  2279 ;;		___fleq
  2280 ;; This function is called by:
  2281 ;;		_exp
  2282 ;; This function uses a non-reentrant model
  2283 ;;
  2284                           
  2285                           	psect	text4
  2286  00D128                     __ptext4:
  2287                           	callstack 0
  2288  00D128                     _ldexp:
  2289                           	callstack 27
  2290  00D128  C081  F027         	movff	ldexp@value,___fleq@ff1
  2291  00D12C  C082  F028         	movff	ldexp@value+1,___fleq@ff1+1
  2292  00D130  C083  F029         	movff	ldexp@value+2,___fleq@ff1+2
  2293  00D134  C084  F02A         	movff	ldexp@value+3,___fleq@ff1+3
  2294  00D138  0E00               	movlw	0
  2295  00D13A  6E2B               	movwf	___fleq@ff2^0,c
  2296  00D13C  0E00               	movlw	0
  2297  00D13E  6E2C               	movwf	(___fleq@ff2+1)^0,c
  2298  00D140  0E00               	movlw	0
  2299  00D142  6E2D               	movwf	(___fleq@ff2+2)^0,c
  2300  00D144  0E00               	movlw	0
  2301  00D146  6E2E               	movwf	(___fleq@ff2+3)^0,c
  2302  00D148  EC84  F065         	call	___fleq	;wreg free
  2303  00D14C  A0D8               	btfss	status,0,c
  2304  00D14E  EFAB  F068         	goto	u3931
  2305  00D152  EFAD  F068         	goto	u3930
  2306  00D156                     u3931:
  2307  00D156  EFB8  F068         	goto	l3913
  2308  00D15A                     u3930:
  2309  00D15A  0E00               	movlw	0
  2310  00D15C  0100               	movlb	0	; () banked
  2311  00D15E  6F81               	movwf	?_ldexp& (0+255),b
  2312  00D160  0E00               	movlw	0
  2313  00D162  6F82               	movwf	(?_ldexp+1)& (0+255),b
  2314  00D164  0E00               	movlw	0
  2315  00D166  6F83               	movwf	(?_ldexp+2)& (0+255),b
  2316  00D168  0E00               	movlw	0
  2317  00D16A  6F84               	movwf	(?_ldexp+3)& (0+255),b
  2318  00D16C  EF2F  F069         	goto	l1195
  2319  00D170                     l3913:
  2320  00D170  0100               	movlb	0	; () banked
  2321  00D172  5184               	movf	(ldexp@value+3)& (0+255),w,b
  2322  00D174  0B7F               	andlw	127
  2323  00D176  6F87               	movwf	??_ldexp& (0+255),b
  2324  00D178  6B88               	clrf	(??_ldexp+1)& (0+255),b
  2325  00D17A  90D8               	bcf	status,0,c
  2326  00D17C  3787               	rlcf	??_ldexp& (0+255),f,b
  2327  00D17E  3788               	rlcf	(??_ldexp+1)& (0+255),f,b
  2328  00D180  5187               	movf	??_ldexp& (0+255),w,b
  2329  00D182  2785               	addwf	ldexp@newexp& (0+255),f,b
  2330  00D184  5188               	movf	(??_ldexp+1)& (0+255),w,b
  2331  00D186  2386               	addwfc	(ldexp@newexp+1)& (0+255),f,b
  2332  00D188  BF83               	btfsc	(ldexp@value+2)& (0+255),7,b
  2333  00D18A  EFC9  F068         	goto	u3941
  2334  00D18E  EFCD  F068         	goto	u3940
  2335  00D192                     u3941:
  2336  00D192  6B87               	clrf	??_ldexp& (0+255),b
  2337  00D194  2B87               	incf	??_ldexp& (0+255),f,b
  2338  00D196  EFCF  F068         	goto	u3948
  2339  00D19A                     u3940:
  2340  00D19A  0100               	movlb	0	; () banked
  2341  00D19C  6B87               	clrf	??_ldexp& (0+255),b
  2342  00D19E                     u3948:
  2343  00D19E  5187               	movf	??_ldexp& (0+255),w,b
  2344  00D1A0  2785               	addwf	ldexp@newexp& (0+255),f,b
  2345  00D1A2  0E00               	movlw	0
  2346  00D1A4  2386               	addwfc	(ldexp@newexp+1)& (0+255),f,b
  2347  00D1A6  BF86               	btfsc	(ldexp@newexp+1)& (0+255),7,b
  2348  00D1A8  EFDA  F068         	goto	u3950
  2349  00D1AC  EFD8  F068         	goto	u3951
  2350  00D1B0                     u3951:
  2351  00D1B0  EFE8  F068         	goto	l3921
  2352  00D1B4                     u3950:
  2353  00D1B4                     
  2354                           ; BSR set to: 0
  2355  00D1B4  0E00               	movlw	0
  2356  00D1B6  6FCE               	movwf	(_errno+1)& (0+255),b
  2357  00D1B8  0E22               	movlw	34
  2358  00D1BA  6FCD               	movwf	_errno& (0+255),b
  2359  00D1BC  0E00               	movlw	0
  2360  00D1BE  6F81               	movwf	?_ldexp& (0+255),b
  2361  00D1C0  0E00               	movlw	0
  2362  00D1C2  6F82               	movwf	(?_ldexp+1)& (0+255),b
  2363  00D1C4  0E00               	movlw	0
  2364  00D1C6  6F83               	movwf	(?_ldexp+2)& (0+255),b
  2365  00D1C8  0E00               	movlw	0
  2366  00D1CA  6F84               	movwf	(?_ldexp+3)& (0+255),b
  2367  00D1CC  EF2F  F069         	goto	l1195
  2368  00D1D0                     l3921:
  2369                           
  2370                           ; BSR set to: 0
  2371  00D1D0  BF86               	btfsc	(ldexp@newexp+1)& (0+255),7,b
  2372  00D1D2  EFF1  F068         	goto	u3961
  2373  00D1D6  0586               	decf	(ldexp@newexp+1)& (0+255),w,b
  2374  00D1D8  A0D8               	btfss	status,0,c
  2375  00D1DA  EFF1  F068         	goto	u3961
  2376  00D1DE  EFF3  F068         	goto	u3960
  2377  00D1E2                     u3961:
  2378  00D1E2  EF12  F069         	goto	l3937
  2379  00D1E6                     u3960:
  2380  00D1E6                     
  2381                           ; BSR set to: 0
  2382  00D1E6  0E00               	movlw	0
  2383  00D1E8  6FCE               	movwf	(_errno+1)& (0+255),b
  2384  00D1EA  0E22               	movlw	34
  2385  00D1EC  6FCD               	movwf	_errno& (0+255),b
  2386  00D1EE                     
  2387                           ; BSR set to: 0
  2388  00D1EE  BF84               	btfsc	(ldexp@value+3)& (0+255),7,b
  2389  00D1F0  EFFE  F068         	goto	u3970
  2390  00D1F4  EFFC  F068         	goto	u3971
  2391  00D1F8                     u3971:
  2392  00D1F8  EF08  F069         	goto	l3933
  2393  00D1FC                     u3970:
  2394  00D1FC                     
  2395                           ; BSR set to: 0
  2396  00D1FC  0EFF               	movlw	255
  2397  00D1FE  6F81               	movwf	?_ldexp& (0+255),b
  2398  00D200  0EFF               	movlw	255
  2399  00D202  6F82               	movwf	(?_ldexp+1)& (0+255),b
  2400  00D204  0E7F               	movlw	127
  2401  00D206  6F83               	movwf	(?_ldexp+2)& (0+255),b
  2402  00D208  0EFF               	movlw	255
  2403  00D20A  6F84               	movwf	(?_ldexp+3)& (0+255),b
  2404  00D20C  EF2F  F069         	goto	l1195
  2405  00D210                     l3933:
  2406                           
  2407                           ; BSR set to: 0
  2408  00D210  0EFF               	movlw	255
  2409  00D212  6F81               	movwf	?_ldexp& (0+255),b
  2410  00D214  0EFF               	movlw	255
  2411  00D216  6F82               	movwf	(?_ldexp+1)& (0+255),b
  2412  00D218  0E7F               	movlw	127
  2413  00D21A  6F83               	movwf	(?_ldexp+2)& (0+255),b
  2414  00D21C  0E7F               	movlw	127
  2415  00D21E  6F84               	movwf	(?_ldexp+3)& (0+255),b
  2416  00D220  EF2F  F069         	goto	l1195
  2417  00D224                     l3937:
  2418                           
  2419                           ; BSR set to: 0
  2420  00D224  3586               	rlcf	(ldexp@newexp+1)& (0+255),w,b
  2421  00D226  3186               	rrcf	(ldexp@newexp+1)& (0+255),w,b
  2422  00D228  6F88               	movwf	(??_ldexp+1)& (0+255),b
  2423  00D22A  3185               	rrcf	ldexp@newexp& (0+255),w,b
  2424  00D22C  6F87               	movwf	??_ldexp& (0+255),b
  2425  00D22E  5184               	movf	(ldexp@value+3)& (0+255),w,b
  2426  00D230  1987               	xorwf	??_ldexp& (0+255),w,b
  2427  00D232  0B80               	andlw	-128
  2428  00D234  1987               	xorwf	??_ldexp& (0+255),w,b
  2429  00D236  6F84               	movwf	(ldexp@value+3)& (0+255),b
  2430  00D238  C085  F087         	movff	ldexp@newexp,??_ldexp
  2431  00D23C  0E01               	movlw	1
  2432  00D23E  1787               	andwf	??_ldexp& (0+255),f,b
  2433  00D240  3387               	rrcf	??_ldexp& (0+255),f,b
  2434  00D242  3387               	rrcf	??_ldexp& (0+255),f,b
  2435  00D244  5183               	movf	(ldexp@value+2)& (0+255),w,b
  2436  00D246  1987               	xorwf	??_ldexp& (0+255),w,b
  2437  00D248  0B7F               	andlw	-129
  2438  00D24A  1987               	xorwf	??_ldexp& (0+255),w,b
  2439  00D24C  6F83               	movwf	(ldexp@value+2)& (0+255),b
  2440  00D24E                     
  2441                           ; BSR set to: 0
  2442  00D24E  C081  F081         	movff	ldexp@value,?_ldexp
  2443  00D252  C082  F082         	movff	ldexp@value+1,?_ldexp+1
  2444  00D256  C083  F083         	movff	ldexp@value+2,?_ldexp+2
  2445  00D25A  C084  F084         	movff	ldexp@value+3,?_ldexp+3
  2446  00D25E                     l1195:
  2447                           
  2448                           ; BSR set to: 0
  2449  00D25E  0012               	return		;funcret
  2450  00D260                     __end_of_ldexp:
  2451                           	callstack 0
  2452                           
  2453 ;; *************** function _floor *****************
  2454 ;; Defined at:
  2455 ;;		line 13 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\floor.c"
  2456 ;; Parameters:    Size  Location     Type
  2457 ;;  x               4   17[BANK0 ] int 
  2458 ;; Auto vars:     Size  Location     Type
  2459 ;;  i               4   21[BANK0 ] int 
  2460 ;;  expon           2   25[BANK0 ] int 
  2461 ;; Return value:  Size  Location     Type
  2462 ;;                  4   17[BANK0 ] int 
  2463 ;; Registers used:
  2464 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2465 ;; Tracked objects:
  2466 ;;		On entry : 0/0
  2467 ;;		On exit  : 0/0
  2468 ;;		Unchanged: 0/0
  2469 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2470 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2471 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2472 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2473 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2474 ;;Total ram usage:       10 bytes
  2475 ;; Hardware stack levels used:    1
  2476 ;; Hardware stack levels required when called:    2
  2477 ;; This function calls:
  2478 ;;		___fladd
  2479 ;;		___flge
  2480 ;;		___fltol
  2481 ;;		___xxtofl
  2482 ;;		_frexp
  2483 ;; This function is called by:
  2484 ;;		_exp
  2485 ;; This function uses a non-reentrant model
  2486 ;;
  2487                           
  2488                           	psect	text5
  2489  00D260                     __ptext5:
  2490                           	callstack 0
  2491  00D260                     _floor:
  2492                           	callstack 26
  2493  00D260  C071  F033         	movff	floor@x,frexp@value
  2494  00D264  C072  F034         	movff	floor@x+1,frexp@value+1
  2495  00D268  C073  F035         	movff	floor@x+2,frexp@value+2
  2496  00D26C  C074  F036         	movff	floor@x+3,frexp@value+3
  2497  00D270  0E79               	movlw	low floor@expon
  2498  00D272  6E37               	movwf	frexp@eptr^0,c
  2499  00D274  0E00               	movlw	high floor@expon
  2500  00D276  6E38               	movwf	(frexp@eptr+1)^0,c
  2501  00D278  EC93  F066         	call	_frexp	;wreg free
  2502  00D27C  0100               	movlb	0	; () banked
  2503  00D27E  BF7A               	btfsc	(floor@expon+1)& (0+255),7,b
  2504  00D280  EF46  F069         	goto	u3880
  2505  00D284  EF44  F069         	goto	u3881
  2506  00D288                     u3881:
  2507  00D288  EF61  F069         	goto	l3891
  2508  00D28C                     u3880:
  2509  00D28C                     
  2510                           ; BSR set to: 0
  2511  00D28C  BF74               	btfsc	(floor@x+3)& (0+255),7,b
  2512  00D28E  EF4D  F069         	goto	u3890
  2513  00D292  EF4B  F069         	goto	u3891
  2514  00D296                     u3891:
  2515  00D296  EF57  F069         	goto	l3887
  2516  00D29A                     u3890:
  2517  00D29A                     
  2518                           ; BSR set to: 0
  2519  00D29A  0E00               	movlw	0
  2520  00D29C  6F71               	movwf	?_floor& (0+255),b
  2521  00D29E  0E00               	movlw	0
  2522  00D2A0  6F72               	movwf	(?_floor+1)& (0+255),b
  2523  00D2A2  0E80               	movlw	128
  2524  00D2A4  6F73               	movwf	(?_floor+2)& (0+255),b
  2525  00D2A6  0EBF               	movlw	191
  2526  00D2A8  6F74               	movwf	(?_floor+3)& (0+255),b
  2527  00D2AA  EFD0  F069         	goto	l1183
  2528  00D2AE                     l3887:
  2529                           
  2530                           ; BSR set to: 0
  2531  00D2AE  0E00               	movlw	0
  2532  00D2B0  6F71               	movwf	?_floor& (0+255),b
  2533  00D2B2  0E00               	movlw	0
  2534  00D2B4  6F72               	movwf	(?_floor+1)& (0+255),b
  2535  00D2B6  0E00               	movlw	0
  2536  00D2B8  6F73               	movwf	(?_floor+2)& (0+255),b
  2537  00D2BA  0E00               	movlw	0
  2538  00D2BC  6F74               	movwf	(?_floor+3)& (0+255),b
  2539  00D2BE  EFD0  F069         	goto	l1183
  2540  00D2C2                     l3891:
  2541                           
  2542                           ; BSR set to: 0
  2543  00D2C2  517A               	movf	(floor@expon+1)& (0+255),w,b
  2544  00D2C4  E109               	bnz	u3900
  2545  00D2C6  0E1D               	movlw	29
  2546  00D2C8  5D79               	subwf	floor@expon& (0+255),w,b
  2547  00D2CA  A0D8               	btfss	status,0,c
  2548  00D2CC  EF6A  F069         	goto	u3901
  2549  00D2D0  EF6C  F069         	goto	u3900
  2550  00D2D4                     u3901:
  2551  00D2D4  EF76  F069         	goto	l3895
  2552  00D2D8                     u3900:
  2553  00D2D8                     
  2554                           ; BSR set to: 0
  2555  00D2D8  C071  F071         	movff	floor@x,?_floor
  2556  00D2DC  C072  F072         	movff	floor@x+1,?_floor+1
  2557  00D2E0  C073  F073         	movff	floor@x+2,?_floor+2
  2558  00D2E4  C074  F074         	movff	floor@x+3,?_floor+3
  2559  00D2E8  EFD0  F069         	goto	l1183
  2560  00D2EC                     l3895:
  2561                           
  2562                           ; BSR set to: 0
  2563  00D2EC  C071  F00F         	movff	floor@x,___fltol@f1
  2564  00D2F0  C072  F010         	movff	floor@x+1,___fltol@f1+1
  2565  00D2F4  C073  F011         	movff	floor@x+2,___fltol@f1+2
  2566  00D2F8  C074  F012         	movff	floor@x+3,___fltol@f1+3
  2567  00D2FC  EC81  F067         	call	___fltol	;wreg free
  2568  00D300  C00F  F019         	movff	?___fltol,___xxtofl@val
  2569  00D304  C010  F01A         	movff	?___fltol+1,___xxtofl@val+1
  2570  00D308  C011  F01B         	movff	?___fltol+2,___xxtofl@val+2
  2571  00D30C  C012  F01C         	movff	?___fltol+3,___xxtofl@val+3
  2572  00D310  0E01               	movlw	1
  2573  00D312  ECF1  F06B         	call	___xxtofl
  2574  00D316  C019  F075         	movff	?___xxtofl,floor@i
  2575  00D31A  C01A  F076         	movff	?___xxtofl+1,floor@i+1
  2576  00D31E  C01B  F077         	movff	?___xxtofl+2,floor@i+2
  2577  00D322  C01C  F078         	movff	?___xxtofl+3,floor@i+3
  2578  00D326  C071  F001         	movff	floor@x,___flge@ff1
  2579  00D32A  C072  F002         	movff	floor@x+1,___flge@ff1+1
  2580  00D32E  C073  F003         	movff	floor@x+2,___flge@ff1+2
  2581  00D332  C074  F004         	movff	floor@x+3,___flge@ff1+3
  2582  00D336  C075  F005         	movff	floor@i,___flge@ff2
  2583  00D33A  C076  F006         	movff	floor@i+1,___flge@ff2+1
  2584  00D33E  C077  F007         	movff	floor@i+2,___flge@ff2+2
  2585  00D342  C078  F008         	movff	floor@i+3,___flge@ff2+3
  2586  00D346  ECFF  F066         	call	___flge	;wreg free
  2587  00D34A  B0D8               	btfsc	status,0,c
  2588  00D34C  EFAA  F069         	goto	u3911
  2589  00D350  EFAC  F069         	goto	u3910
  2590  00D354                     u3911:
  2591  00D354  EFC8  F069         	goto	l1185
  2592  00D358                     u3910:
  2593  00D358  C075  F058         	movff	floor@i,___fladd@b
  2594  00D35C  C076  F059         	movff	floor@i+1,___fladd@b+1
  2595  00D360  C077  F05A         	movff	floor@i+2,___fladd@b+2
  2596  00D364  C078  F05B         	movff	floor@i+3,___fladd@b+3
  2597  00D368  0E00               	movlw	0
  2598  00D36A  6E5C               	movwf	___fladd@a^0,c
  2599  00D36C  0E00               	movlw	0
  2600  00D36E  6E5D               	movwf	(___fladd@a+1)^0,c
  2601  00D370  0E80               	movlw	128
  2602  00D372  6E5E               	movwf	(___fladd@a+2)^0,c
  2603  00D374  0EBF               	movlw	191
  2604  00D376  6E5F               	movwf	(___fladd@a+3)^0,c
  2605  00D378  EC40  F078         	call	___fladd	;wreg free
  2606  00D37C  C058  F071         	movff	?___fladd,?_floor
  2607  00D380  C059  F072         	movff	?___fladd+1,?_floor+1
  2608  00D384  C05A  F073         	movff	?___fladd+2,?_floor+2
  2609  00D388  C05B  F074         	movff	?___fladd+3,?_floor+3
  2610  00D38C  EFD0  F069         	goto	l1183
  2611  00D390                     l1185:
  2612  00D390  C075  F071         	movff	floor@i,?_floor
  2613  00D394  C076  F072         	movff	floor@i+1,?_floor+1
  2614  00D398  C077  F073         	movff	floor@i+2,?_floor+2
  2615  00D39C  C078  F074         	movff	floor@i+3,?_floor+3
  2616  00D3A0                     l1183:
  2617  00D3A0  0012               	return		;funcret
  2618  00D3A2                     __end_of_floor:
  2619                           	callstack 0
  2620                           
  2621 ;; *************** function _frexp *****************
  2622 ;; Defined at:
  2623 ;;		line 254 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\frexp.c"
  2624 ;; Parameters:    Size  Location     Type
  2625 ;;  value           4   50[COMRAM] int 
  2626 ;;  eptr            2   54[COMRAM] PTR int 
  2627 ;;		 -> log@exponent(2), floor@expon(2), 
  2628 ;; Auto vars:     Size  Location     Type
  2629 ;;		None
  2630 ;; Return value:  Size  Location     Type
  2631 ;;                  4   50[COMRAM] PTR int 
  2632 ;; Registers used:
  2633 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2634 ;; Tracked objects:
  2635 ;;		On entry : 0/0
  2636 ;;		On exit  : 0/0
  2637 ;;		Unchanged: 0/0
  2638 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2639 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2640 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2641 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2642 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2643 ;;Total ram usage:        8 bytes
  2644 ;; Hardware stack levels used:    1
  2645 ;; Hardware stack levels required when called:    1
  2646 ;; This function calls:
  2647 ;;		___fleq
  2648 ;; This function is called by:
  2649 ;;		_floor
  2650 ;;		_log
  2651 ;; This function uses a non-reentrant model
  2652 ;;
  2653                           
  2654                           	psect	text6
  2655  00CD26                     __ptext6:
  2656                           	callstack 0
  2657  00CD26                     _frexp:
  2658                           	callstack 27
  2659  00CD26  C033  F027         	movff	frexp@value,___fleq@ff1
  2660  00CD2A  C034  F028         	movff	frexp@value+1,___fleq@ff1+1
  2661  00CD2E  C035  F029         	movff	frexp@value+2,___fleq@ff1+2
  2662  00CD32  C036  F02A         	movff	frexp@value+3,___fleq@ff1+3
  2663  00CD36  0E00               	movlw	0
  2664  00CD38  6E2B               	movwf	___fleq@ff2^0,c
  2665  00CD3A  0E00               	movlw	0
  2666  00CD3C  6E2C               	movwf	(___fleq@ff2+1)^0,c
  2667  00CD3E  0E00               	movlw	0
  2668  00CD40  6E2D               	movwf	(___fleq@ff2+2)^0,c
  2669  00CD42  0E00               	movlw	0
  2670  00CD44  6E2E               	movwf	(___fleq@ff2+3)^0,c
  2671  00CD46  EC84  F065         	call	___fleq	;wreg free
  2672  00CD4A  A0D8               	btfss	status,0,c
  2673  00CD4C  EFAA  F066         	goto	u3331
  2674  00CD50  EFAC  F066         	goto	u3330
  2675  00CD54                     u3331:
  2676  00CD54  EFC0  F066         	goto	l3489
  2677  00CD58                     u3330:
  2678  00CD58  0060  F0DF  FFD9   	movff	frexp@eptr,fsr2l
  2679  00CD5E  0060  F0E3  FFDA   	movff	frexp@eptr+1,fsr2h
  2680  00CD64  0E00               	movlw	0
  2681  00CD66  6EDE               	movwf	postinc2,c
  2682  00CD68  0E00               	movlw	0
  2683  00CD6A  6EDD               	movwf	postdec2,c
  2684  00CD6C  0E00               	movlw	0
  2685  00CD6E  6E33               	movwf	?_frexp^0,c
  2686  00CD70  0E00               	movlw	0
  2687  00CD72  6E34               	movwf	(?_frexp+1)^0,c
  2688  00CD74  0E00               	movlw	0
  2689  00CD76  6E35               	movwf	(?_frexp+2)^0,c
  2690  00CD78  0E00               	movlw	0
  2691  00CD7A  6E36               	movwf	(?_frexp+3)^0,c
  2692  00CD7C  EFFE  F066         	goto	l1191
  2693  00CD80                     l3489:
  2694  00CD80  5036               	movf	(frexp@value+3)^0,w,c
  2695  00CD82  0B7F               	andlw	127
  2696  00CD84  6E39               	movwf	??_frexp^0,c
  2697  00CD86  6A3A               	clrf	(??_frexp+1)^0,c
  2698  00CD88  90D8               	bcf	status,0,c
  2699  00CD8A  3639               	rlcf	??_frexp^0,f,c
  2700  00CD8C  363A               	rlcf	(??_frexp+1)^0,f,c
  2701  00CD8E  0060  F0DF  FFD9   	movff	frexp@eptr,fsr2l
  2702  00CD94  0060  F0E3  FFDA   	movff	frexp@eptr+1,fsr2h
  2703  00CD9A  0060  F0E7  FFDE   	movff	??_frexp,postinc2
  2704  00CDA0  0060  F0EB  FFDD   	movff	??_frexp+1,postdec2
  2705  00CDA6  BE35               	btfsc	(frexp@value+2)^0,7,c
  2706  00CDA8  EFD8  F066         	goto	u3341
  2707  00CDAC  EFDC  F066         	goto	u3340
  2708  00CDB0                     u3341:
  2709  00CDB0  6A39               	clrf	??_frexp^0,c
  2710  00CDB2  2A39               	incf	??_frexp^0,f,c
  2711  00CDB4  EFDD  F066         	goto	u3348
  2712  00CDB8                     u3340:
  2713  00CDB8  6A39               	clrf	??_frexp^0,c
  2714  00CDBA                     u3348:
  2715  00CDBA  5039               	movf	??_frexp^0,w,c
  2716  00CDBC  0060  F0DF  FFD9   	movff	frexp@eptr,fsr2l
  2717  00CDC2  0060  F0E3  FFDA   	movff	frexp@eptr+1,fsr2h
  2718  00CDC8  12DE               	iorwf	postinc2,f,c
  2719  00CDCA  0E00               	movlw	0
  2720  00CDCC  12DD               	iorwf	postdec2,f,c
  2721  00CDCE  0060  F0DF  FFD9   	movff	frexp@eptr,fsr2l
  2722  00CDD4  0060  F0E3  FFDA   	movff	frexp@eptr+1,fsr2h
  2723  00CDDA  0E82               	movlw	130
  2724  00CDDC  26DE               	addwf	postinc2,f,c
  2725  00CDDE  0EFF               	movlw	255
  2726  00CDE0  22DD               	addwfc	postdec2,f,c
  2727  00CDE2  5036               	movf	(frexp@value+3)^0,w,c
  2728  00CDE4  0B80               	andlw	-128
  2729  00CDE6  093F               	iorlw	63
  2730  00CDE8  6E36               	movwf	(frexp@value+3)^0,c
  2731  00CDEA  9E35               	bcf	(frexp@value+2)^0,7,c
  2732  00CDEC  C033  F033         	movff	frexp@value,?_frexp
  2733  00CDF0  C034  F034         	movff	frexp@value+1,?_frexp+1
  2734  00CDF4  C035  F035         	movff	frexp@value+2,?_frexp+2
  2735  00CDF8  C036  F036         	movff	frexp@value+3,?_frexp+3
  2736  00CDFC                     l1191:
  2737  00CDFC  0012               	return		;funcret
  2738  00CDFE                     __end_of_frexp:
  2739                           	callstack 0
  2740                           
  2741 ;; *************** function _eval_poly *****************
  2742 ;; Defined at:
  2743 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\evalpoly.c"
  2744 ;; Parameters:    Size  Location     Type
  2745 ;;  x               4   17[BANK0 ] PTR int 
  2746 ;;  d               2   21[BANK0 ] PTR const 
  2747 ;;		 -> log@coeff(36), exp@coeff(40), 
  2748 ;;  n               2   23[BANK0 ] int 
  2749 ;; Auto vars:     Size  Location     Type
  2750 ;;  res             4   29[BANK0 ] int 
  2751 ;; Return value:  Size  Location     Type
  2752 ;;                  4   17[BANK0 ] int 
  2753 ;; Registers used:
  2754 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2755 ;; Tracked objects:
  2756 ;;		On entry : 0/0
  2757 ;;		On exit  : 0/0
  2758 ;;		Unchanged: 0/0
  2759 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2760 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2761 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2762 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2763 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2764 ;;Total ram usage:       16 bytes
  2765 ;; Hardware stack levels used:    1
  2766 ;; Hardware stack levels required when called:    1
  2767 ;; This function calls:
  2768 ;;		___fladd
  2769 ;;		___flmul
  2770 ;; This function is called by:
  2771 ;;		_exp
  2772 ;;		_log
  2773 ;; This function uses a non-reentrant model
  2774 ;;
  2775                           
  2776                           	psect	text7
  2777  00D008                     __ptext7:
  2778                           	callstack 0
  2779  00D008                     _eval_poly:
  2780                           	callstack 27
  2781  00D008  C077  F079         	movff	eval_poly@n,??_eval_poly
  2782  00D00C  C078  F07A         	movff	eval_poly@n+1,??_eval_poly+1
  2783  00D010  0100               	movlb	0	; () banked
  2784  00D012  90D8               	bcf	status,0,c
  2785  00D014  3779               	rlcf	??_eval_poly& (0+255),f,b
  2786  00D016  377A               	rlcf	(??_eval_poly+1)& (0+255),f,b
  2787  00D018  90D8               	bcf	status,0,c
  2788  00D01A  3779               	rlcf	??_eval_poly& (0+255),f,b
  2789  00D01C  377A               	rlcf	(??_eval_poly+1)& (0+255),f,b
  2790  00D01E  C075  F07B         	movff	eval_poly@d,??_eval_poly+2
  2791  00D022  C076  F07C         	movff	eval_poly@d+1,??_eval_poly+3
  2792  00D026  5179               	movf	??_eval_poly& (0+255),w,b
  2793  00D028  277B               	addwf	(??_eval_poly+2)& (0+255),f,b
  2794  00D02A  517A               	movf	(??_eval_poly+1)& (0+255),w,b
  2795  00D02C  237C               	addwfc	(??_eval_poly+3)& (0+255),f,b
  2796  00D02E  0060  F1EF  FFF6   	movff	??_eval_poly+2,tblptrl
  2797  00D034  0060  F1F3  FFF7   	movff	??_eval_poly+3,tblptrh
  2798  00D03A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2799  00D03A  6AF8               	clrf	tblptru,c
  2800  00D03C                     	endif
  2801  00D03C                     	if	0	;tblptru may be non-zero
  2802  00D03C                     	endif
  2803  00D03C  0009               	tblrd		*+
  2804  00D03E  006F FFD4  F07D    	movff	tablat,eval_poly@res
  2805  00D044  0009               	tblrd		*+
  2806  00D046  006F FFD4  F07E    	movff	tablat,eval_poly@res+1
  2807  00D04C  0009               	tblrd		*+
  2808  00D04E  006F FFD4  F07F    	movff	tablat,eval_poly@res+2
  2809  00D054  000A               	tblrd		*-
  2810  00D056  006F FFD4  F080    	movff	tablat,eval_poly@res+3
  2811  00D05C  EF81  F068         	goto	l3905
  2812  00D060                     l3903:
  2813                           
  2814                           ; BSR set to: 0
  2815  00D060  C07D  F03F         	movff	eval_poly@res,___flmul@a
  2816  00D064  C07E  F040         	movff	eval_poly@res+1,___flmul@a+1
  2817  00D068  C07F  F041         	movff	eval_poly@res+2,___flmul@a+2
  2818  00D06C  C080  F042         	movff	eval_poly@res+3,___flmul@a+3
  2819  00D070  C071  F03B         	movff	eval_poly@x,___flmul@b
  2820  00D074  C072  F03C         	movff	eval_poly@x+1,___flmul@b+1
  2821  00D078  C073  F03D         	movff	eval_poly@x+2,___flmul@b+2
  2822  00D07C  C074  F03E         	movff	eval_poly@x+3,___flmul@b+3
  2823  00D080  ECBF  F073         	call	___flmul	;wreg free
  2824  00D084  C03B  F058         	movff	?___flmul,___fladd@b
  2825  00D088  C03C  F059         	movff	?___flmul+1,___fladd@b+1
  2826  00D08C  C03D  F05A         	movff	?___flmul+2,___fladd@b+2
  2827  00D090  C03E  F05B         	movff	?___flmul+3,___fladd@b+3
  2828  00D094  0100               	movlb	0	; () banked
  2829  00D096  0777               	decf	eval_poly@n& (0+255),f,b
  2830  00D098  A0D8               	btfss	status,0,c
  2831  00D09A  0778               	decf	(eval_poly@n+1)& (0+255),f,b
  2832  00D09C  C077  F079         	movff	eval_poly@n,??_eval_poly
  2833  00D0A0  C078  F07A         	movff	eval_poly@n+1,??_eval_poly+1
  2834  00D0A4  90D8               	bcf	status,0,c
  2835  00D0A6  3779               	rlcf	??_eval_poly& (0+255),f,b
  2836  00D0A8  377A               	rlcf	(??_eval_poly+1)& (0+255),f,b
  2837  00D0AA  90D8               	bcf	status,0,c
  2838  00D0AC  3779               	rlcf	??_eval_poly& (0+255),f,b
  2839  00D0AE  377A               	rlcf	(??_eval_poly+1)& (0+255),f,b
  2840  00D0B0  C075  F07B         	movff	eval_poly@d,??_eval_poly+2
  2841  00D0B4  C076  F07C         	movff	eval_poly@d+1,??_eval_poly+3
  2842  00D0B8  5179               	movf	??_eval_poly& (0+255),w,b
  2843  00D0BA  277B               	addwf	(??_eval_poly+2)& (0+255),f,b
  2844  00D0BC  517A               	movf	(??_eval_poly+1)& (0+255),w,b
  2845  00D0BE  237C               	addwfc	(??_eval_poly+3)& (0+255),f,b
  2846  00D0C0  0060  F1EF  FFF6   	movff	??_eval_poly+2,tblptrl
  2847  00D0C6  0060  F1F3  FFF7   	movff	??_eval_poly+3,tblptrh
  2848  00D0CC                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2849  00D0CC  6AF8               	clrf	tblptru,c
  2850  00D0CE                     	endif
  2851  00D0CE                     	if	0	;tblptru may be non-zero
  2852  00D0CE                     	endif
  2853  00D0CE  0009               	tblrd		*+
  2854  00D0D0  006F FFD4  F05C    	movff	tablat,___fladd@a
  2855  00D0D6  0009               	tblrd		*+
  2856  00D0D8  006F FFD4  F05D    	movff	tablat,___fladd@a+1
  2857  00D0DE  0009               	tblrd		*+
  2858  00D0E0  006F FFD4  F05E    	movff	tablat,___fladd@a+2
  2859  00D0E6  000A               	tblrd		*-
  2860  00D0E8  006F FFD4  F05F    	movff	tablat,___fladd@a+3
  2861  00D0EE  EC40  F078         	call	___fladd	;wreg free
  2862  00D0F2  C058  F07D         	movff	?___fladd,eval_poly@res
  2863  00D0F6  C059  F07E         	movff	?___fladd+1,eval_poly@res+1
  2864  00D0FA  C05A  F07F         	movff	?___fladd+2,eval_poly@res+2
  2865  00D0FE  C05B  F080         	movff	?___fladd+3,eval_poly@res+3
  2866  00D102                     l3905:
  2867  00D102  0100               	movlb	0	; () banked
  2868  00D104  5177               	movf	eval_poly@n& (0+255),w,b
  2869  00D106  1178               	iorwf	(eval_poly@n+1)& (0+255),w,b
  2870  00D108  A4D8               	btfss	status,2,c
  2871  00D10A  EF89  F068         	goto	u3921
  2872  00D10E  EF8B  F068         	goto	u3920
  2873  00D112                     u3921:
  2874  00D112  EF30  F068         	goto	l3903
  2875  00D116                     u3920:
  2876  00D116                     
  2877                           ; BSR set to: 0
  2878  00D116  C07D  F071         	movff	eval_poly@res,?_eval_poly
  2879  00D11A  C07E  F072         	movff	eval_poly@res+1,?_eval_poly+1
  2880  00D11E  C07F  F073         	movff	eval_poly@res+2,?_eval_poly+2
  2881  00D122  C080  F074         	movff	eval_poly@res+3,?_eval_poly+3
  2882  00D126                     
  2883                           ; BSR set to: 0
  2884  00D126  0012               	return		;funcret
  2885  00D128                     __end_of_eval_poly:
  2886                           	callstack 0
  2887                           
  2888 ;; *************** function ___fldiv *****************
  2889 ;; Defined at:
  2890 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\sprcdiv.c"
  2891 ;; Parameters:    Size  Location     Type
  2892 ;;  b               4   83[COMRAM] int 
  2893 ;;  a               4   87[COMRAM] int 
  2894 ;; Auto vars:     Size  Location     Type
  2895 ;;  grs             4    7[BANK0 ] unsigned long 
  2896 ;;  rem             4    0[BANK0 ] unsigned long 
  2897 ;;  new_exp         2    5[BANK0 ] int 
  2898 ;;  aexp            1   12[BANK0 ] unsigned char 
  2899 ;;  bexp            1   11[BANK0 ] unsigned char 
  2900 ;;  sign            1    4[BANK0 ] unsigned char 
  2901 ;; Return value:  Size  Location     Type
  2902 ;;                  4   83[COMRAM] unsigned char 
  2903 ;; Registers used:
  2904 ;;		wreg, status,2, status,0
  2905 ;; Tracked objects:
  2906 ;;		On entry : 0/0
  2907 ;;		On exit  : 0/0
  2908 ;;		Unchanged: 0/0
  2909 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2910 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2911 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2912 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2913 ;;      Totals:        12      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2914 ;;Total ram usage:       25 bytes
  2915 ;; Hardware stack levels used:    1
  2916 ;; This function calls:
  2917 ;;		Nothing
  2918 ;; This function is called by:
  2919 ;;		_main
  2920 ;;		_exp
  2921 ;; This function uses a non-reentrant model
  2922 ;;
  2923                           
  2924                           	psect	text8
  2925  00E3E2                     __ptext8:
  2926                           	callstack 0
  2927  00E3E2                     ___fldiv:
  2928                           	callstack 28
  2929  00E3E2  5057               	movf	(___fldiv@b+3)^0,w,c
  2930  00E3E4  0B80               	andlw	128
  2931  00E3E6  0100               	movlb	0	; () banked
  2932  00E3E8  6F64               	movwf	___fldiv@sign& (0+255),b
  2933  00E3EA  5057               	movf	(___fldiv@b+3)^0,w,c
  2934  00E3EC  2457               	addwf	(___fldiv@b+3)^0,w,c
  2935  00E3EE  6F6B               	movwf	___fldiv@bexp& (0+255),b
  2936  00E3F0                     
  2937                           ; BSR set to: 0
  2938  00E3F0  AE56               	btfss	(___fldiv@b+2)^0,7,c
  2939  00E3F2  EFFD  F071         	goto	u3611
  2940  00E3F6  EFFF  F071         	goto	u3610
  2941  00E3FA                     u3611:
  2942  00E3FA  EF00  F072         	goto	l3715
  2943  00E3FE                     u3610:
  2944  00E3FE                     
  2945                           ; BSR set to: 0
  2946  00E3FE  816B               	bsf	___fldiv@bexp& (0+255),0,b
  2947  00E400                     l3715:
  2948                           
  2949                           ; BSR set to: 0
  2950  00E400  516B               	movf	___fldiv@bexp& (0+255),w,b
  2951  00E402  B4D8               	btfsc	status,2,c
  2952  00E404  EF06  F072         	goto	u3621
  2953  00E408  EF08  F072         	goto	u3620
  2954  00E40C                     u3621:
  2955  00E40C  EF1D  F072         	goto	l3725
  2956  00E410                     u3620:
  2957  00E410                     
  2958                           ; BSR set to: 0
  2959  00E410  296B               	incf	___fldiv@bexp& (0+255),w,b
  2960  00E412  A4D8               	btfss	status,2,c
  2961  00E414  EF0E  F072         	goto	u3631
  2962  00E418  EF10  F072         	goto	u3630
  2963  00E41C                     u3631:
  2964  00E41C  EF18  F072         	goto	l3721
  2965  00E420                     u3630:
  2966  00E420                     
  2967                           ; BSR set to: 0
  2968  00E420  0E00               	movlw	0
  2969  00E422  6E54               	movwf	___fldiv@b^0,c
  2970  00E424  0E00               	movlw	0
  2971  00E426  6E55               	movwf	(___fldiv@b+1)^0,c
  2972  00E428  0E00               	movlw	0
  2973  00E42A  6E56               	movwf	(___fldiv@b+2)^0,c
  2974  00E42C  0E00               	movlw	0
  2975  00E42E  6E57               	movwf	(___fldiv@b+3)^0,c
  2976  00E430                     l3721:
  2977                           
  2978                           ; BSR set to: 0
  2979  00E430  8E56               	bsf	(___fldiv@b+2)^0,7,c
  2980  00E432                     
  2981                           ; BSR set to: 0
  2982  00E432  0E00               	movlw	0
  2983  00E434  6E57               	movwf	(___fldiv@b+3)^0,c
  2984  00E436  EF25  F072         	goto	l3727
  2985  00E43A                     l3725:
  2986                           
  2987                           ; BSR set to: 0
  2988  00E43A  0E00               	movlw	0
  2989  00E43C  6E54               	movwf	___fldiv@b^0,c
  2990  00E43E  0E00               	movlw	0
  2991  00E440  6E55               	movwf	(___fldiv@b+1)^0,c
  2992  00E442  0E00               	movlw	0
  2993  00E444  6E56               	movwf	(___fldiv@b+2)^0,c
  2994  00E446  0E00               	movlw	0
  2995  00E448  6E57               	movwf	(___fldiv@b+3)^0,c
  2996  00E44A                     l3727:
  2997                           
  2998                           ; BSR set to: 0
  2999  00E44A  505B               	movf	(___fldiv@a+3)^0,w,c
  3000  00E44C  0B80               	andlw	128
  3001  00E44E  1B64               	xorwf	___fldiv@sign& (0+255),f,b
  3002  00E450                     
  3003                           ; BSR set to: 0
  3004  00E450  505B               	movf	(___fldiv@a+3)^0,w,c
  3005  00E452  245B               	addwf	(___fldiv@a+3)^0,w,c
  3006  00E454  6F6C               	movwf	___fldiv@aexp& (0+255),b
  3007  00E456                     
  3008                           ; BSR set to: 0
  3009  00E456  AE5A               	btfss	(___fldiv@a+2)^0,7,c
  3010  00E458  EF30  F072         	goto	u3641
  3011  00E45C  EF32  F072         	goto	u3640
  3012  00E460                     u3641:
  3013  00E460  EF33  F072         	goto	l3735
  3014  00E464                     u3640:
  3015  00E464                     
  3016                           ; BSR set to: 0
  3017  00E464  816C               	bsf	___fldiv@aexp& (0+255),0,b
  3018  00E466                     l3735:
  3019                           
  3020                           ; BSR set to: 0
  3021  00E466  516C               	movf	___fldiv@aexp& (0+255),w,b
  3022  00E468  B4D8               	btfsc	status,2,c
  3023  00E46A  EF39  F072         	goto	u3651
  3024  00E46E  EF3B  F072         	goto	u3650
  3025  00E472                     u3651:
  3026  00E472  EF50  F072         	goto	l3745
  3027  00E476                     u3650:
  3028  00E476                     
  3029                           ; BSR set to: 0
  3030  00E476  296C               	incf	___fldiv@aexp& (0+255),w,b
  3031  00E478  A4D8               	btfss	status,2,c
  3032  00E47A  EF41  F072         	goto	u3661
  3033  00E47E  EF43  F072         	goto	u3660
  3034  00E482                     u3661:
  3035  00E482  EF4B  F072         	goto	l3741
  3036  00E486                     u3660:
  3037  00E486                     
  3038                           ; BSR set to: 0
  3039  00E486  0E00               	movlw	0
  3040  00E488  6E58               	movwf	___fldiv@a^0,c
  3041  00E48A  0E00               	movlw	0
  3042  00E48C  6E59               	movwf	(___fldiv@a+1)^0,c
  3043  00E48E  0E00               	movlw	0
  3044  00E490  6E5A               	movwf	(___fldiv@a+2)^0,c
  3045  00E492  0E00               	movlw	0
  3046  00E494  6E5B               	movwf	(___fldiv@a+3)^0,c
  3047  00E496                     l3741:
  3048                           
  3049                           ; BSR set to: 0
  3050  00E496  8E5A               	bsf	(___fldiv@a+2)^0,7,c
  3051  00E498                     
  3052                           ; BSR set to: 0
  3053  00E498  0E00               	movlw	0
  3054  00E49A  6E5B               	movwf	(___fldiv@a+3)^0,c
  3055  00E49C  EF58  F072         	goto	l3747
  3056  00E4A0                     l3745:
  3057                           
  3058                           ; BSR set to: 0
  3059  00E4A0  0E00               	movlw	0
  3060  00E4A2  6E58               	movwf	___fldiv@a^0,c
  3061  00E4A4  0E00               	movlw	0
  3062  00E4A6  6E59               	movwf	(___fldiv@a+1)^0,c
  3063  00E4A8  0E00               	movlw	0
  3064  00E4AA  6E5A               	movwf	(___fldiv@a+2)^0,c
  3065  00E4AC  0E00               	movlw	0
  3066  00E4AE  6E5B               	movwf	(___fldiv@a+3)^0,c
  3067  00E4B0                     l3747:
  3068                           
  3069                           ; BSR set to: 0
  3070  00E4B0  5058               	movf	___fldiv@a^0,w,c
  3071  00E4B2  1059               	iorwf	(___fldiv@a+1)^0,w,c
  3072  00E4B4  105A               	iorwf	(___fldiv@a+2)^0,w,c
  3073  00E4B6  105B               	iorwf	(___fldiv@a+3)^0,w,c
  3074  00E4B8  A4D8               	btfss	status,2,c
  3075  00E4BA  EF61  F072         	goto	u3671
  3076  00E4BE  EF63  F072         	goto	u3670
  3077  00E4C2                     u3671:
  3078  00E4C2  EF7B  F072         	goto	l3759
  3079  00E4C6                     u3670:
  3080  00E4C6                     
  3081                           ; BSR set to: 0
  3082  00E4C6  0E00               	movlw	0
  3083  00E4C8  6E54               	movwf	___fldiv@b^0,c
  3084  00E4CA  0E00               	movlw	0
  3085  00E4CC  6E55               	movwf	(___fldiv@b+1)^0,c
  3086  00E4CE  0E00               	movlw	0
  3087  00E4D0  6E56               	movwf	(___fldiv@b+2)^0,c
  3088  00E4D2  0E00               	movlw	0
  3089  00E4D4  6E57               	movwf	(___fldiv@b+3)^0,c
  3090  00E4D6                     
  3091                           ; BSR set to: 0
  3092  00E4D6  0E80               	movlw	128
  3093  00E4D8  1256               	iorwf	(___fldiv@b+2)^0,f,c
  3094  00E4DA  0E7F               	movlw	127
  3095  00E4DC  1257               	iorwf	(___fldiv@b+3)^0,f,c
  3096  00E4DE                     l3753:
  3097                           
  3098                           ; BSR set to: 0
  3099  00E4DE  5164               	movf	___fldiv@sign& (0+255),w,b
  3100  00E4E0  1257               	iorwf	(___fldiv@b+3)^0,f,c
  3101  00E4E2                     
  3102                           ; BSR set to: 0
  3103  00E4E2  C054  F054         	movff	___fldiv@b,?___fldiv
  3104  00E4E6  C055  F055         	movff	___fldiv@b+1,?___fldiv+1
  3105  00E4EA  C056  F056         	movff	___fldiv@b+2,?___fldiv+2
  3106  00E4EE  C057  F057         	movff	___fldiv@b+3,?___fldiv+3
  3107  00E4F2  EFBE  F073         	goto	l1045
  3108  00E4F6                     l3759:
  3109                           
  3110                           ; BSR set to: 0
  3111  00E4F6  516B               	movf	___fldiv@bexp& (0+255),w,b
  3112  00E4F8  A4D8               	btfss	status,2,c
  3113  00E4FA  EF81  F072         	goto	u3681
  3114  00E4FE  EF83  F072         	goto	u3680
  3115  00E502                     u3681:
  3116  00E502  EF8D  F072         	goto	l3767
  3117  00E506                     u3680:
  3118  00E506                     
  3119                           ; BSR set to: 0
  3120  00E506  0E00               	movlw	0
  3121  00E508  6E54               	movwf	?___fldiv^0,c
  3122  00E50A  0E00               	movlw	0
  3123  00E50C  6E55               	movwf	(?___fldiv+1)^0,c
  3124  00E50E  0E00               	movlw	0
  3125  00E510  6E56               	movwf	(?___fldiv+2)^0,c
  3126  00E512  0E00               	movlw	0
  3127  00E514  6E57               	movwf	(?___fldiv+3)^0,c
  3128  00E516  EFBE  F073         	goto	l1045
  3129  00E51A                     l3767:
  3130                           
  3131                           ; BSR set to: 0
  3132  00E51A  516C               	movf	___fldiv@aexp& (0+255),w,b
  3133  00E51C  C06B  F05C         	movff	___fldiv@bexp,??___fldiv
  3134  00E520  6A5D               	clrf	(??___fldiv+1)^0,c
  3135  00E522  5E5C               	subwf	??___fldiv^0,f,c
  3136  00E524  0E00               	movlw	0
  3137  00E526  5A5D               	subwfb	(??___fldiv+1)^0,f,c
  3138  00E528  0E7F               	movlw	127
  3139  00E52A  245C               	addwf	??___fldiv^0,w,c
  3140  00E52C  6F65               	movwf	___fldiv@new_exp& (0+255),b
  3141  00E52E  0E00               	movlw	0
  3142  00E530  205D               	addwfc	(??___fldiv+1)^0,w,c
  3143  00E532  6F66               	movwf	(___fldiv@new_exp+1)& (0+255),b
  3144  00E534                     
  3145                           ; BSR set to: 0
  3146  00E534  C054  F060         	movff	___fldiv@b,___fldiv@rem
  3147  00E538  C055  F061         	movff	___fldiv@b+1,___fldiv@rem+1
  3148  00E53C  C056  F062         	movff	___fldiv@b+2,___fldiv@rem+2
  3149  00E540  C057  F063         	movff	___fldiv@b+3,___fldiv@rem+3
  3150  00E544                     
  3151                           ; BSR set to: 0
  3152  00E544  0E00               	movlw	0
  3153  00E546  6E54               	movwf	___fldiv@b^0,c
  3154  00E548  0E00               	movlw	0
  3155  00E54A  6E55               	movwf	(___fldiv@b+1)^0,c
  3156  00E54C  0E00               	movlw	0
  3157  00E54E  6E56               	movwf	(___fldiv@b+2)^0,c
  3158  00E550  0E00               	movlw	0
  3159  00E552  6E57               	movwf	(___fldiv@b+3)^0,c
  3160  00E554                     
  3161                           ; BSR set to: 0
  3162  00E554  0E00               	movlw	0
  3163  00E556  6F67               	movwf	___fldiv@grs& (0+255),b
  3164  00E558  0E00               	movlw	0
  3165  00E55A  6F68               	movwf	(___fldiv@grs+1)& (0+255),b
  3166  00E55C  0E00               	movlw	0
  3167  00E55E  6F69               	movwf	(___fldiv@grs+2)& (0+255),b
  3168  00E560  0E00               	movlw	0
  3169  00E562  6F6A               	movwf	(___fldiv@grs+3)& (0+255),b
  3170  00E564                     
  3171                           ; BSR set to: 0
  3172  00E564  0E00               	movlw	0
  3173  00E566  6F6C               	movwf	___fldiv@aexp& (0+255),b
  3174  00E568  EFEE  F072         	goto	l1047
  3175  00E56C                     l3777:
  3176                           
  3177                           ; BSR set to: 0
  3178  00E56C  516C               	movf	___fldiv@aexp& (0+255),w,b
  3179  00E56E  B4D8               	btfsc	status,2,c
  3180  00E570  EFBC  F072         	goto	u3691
  3181  00E574  EFBE  F072         	goto	u3690
  3182  00E578                     u3691:
  3183  00E578  EFD5  F072         	goto	l3785
  3184  00E57C                     u3690:
  3185  00E57C                     
  3186                           ; BSR set to: 0
  3187  00E57C  90D8               	bcf	status,0,c
  3188  00E57E  3760               	rlcf	___fldiv@rem& (0+255),f,b
  3189  00E580  3761               	rlcf	(___fldiv@rem+1)& (0+255),f,b
  3190  00E582  3762               	rlcf	(___fldiv@rem+2)& (0+255),f,b
  3191  00E584  3763               	rlcf	(___fldiv@rem+3)& (0+255),f,b
  3192  00E586  90D8               	bcf	status,0,c
  3193  00E588  3654               	rlcf	___fldiv@b^0,f,c
  3194  00E58A  3655               	rlcf	(___fldiv@b+1)^0,f,c
  3195  00E58C  3656               	rlcf	(___fldiv@b+2)^0,f,c
  3196  00E58E  3657               	rlcf	(___fldiv@b+3)^0,f,c
  3197  00E590                     
  3198                           ; BSR set to: 0
  3199  00E590  AF6A               	btfss	(___fldiv@grs+3)& (0+255),7,b
  3200  00E592  EFCD  F072         	goto	u3701
  3201  00E596  EFCF  F072         	goto	u3700
  3202  00E59A                     u3701:
  3203  00E59A  EFD0  F072         	goto	l1050
  3204  00E59E                     u3700:
  3205  00E59E                     
  3206                           ; BSR set to: 0
  3207  00E59E  8054               	bsf	___fldiv@b^0,0,c
  3208  00E5A0                     l1050:
  3209                           
  3210                           ; BSR set to: 0
  3211  00E5A0  90D8               	bcf	status,0,c
  3212  00E5A2  3767               	rlcf	___fldiv@grs& (0+255),f,b
  3213  00E5A4  3768               	rlcf	(___fldiv@grs+1)& (0+255),f,b
  3214  00E5A6  3769               	rlcf	(___fldiv@grs+2)& (0+255),f,b
  3215  00E5A8  376A               	rlcf	(___fldiv@grs+3)& (0+255),f,b
  3216  00E5AA                     l3785:
  3217                           
  3218                           ; BSR set to: 0
  3219  00E5AA  5058               	movf	___fldiv@a^0,w,c
  3220  00E5AC  5D60               	subwf	___fldiv@rem& (0+255),w,b
  3221  00E5AE  5059               	movf	(___fldiv@a+1)^0,w,c
  3222  00E5B0  5961               	subwfb	(___fldiv@rem+1)& (0+255),w,b
  3223  00E5B2  505A               	movf	(___fldiv@a+2)^0,w,c
  3224  00E5B4  5962               	subwfb	(___fldiv@rem+2)& (0+255),w,b
  3225  00E5B6  505B               	movf	(___fldiv@a+3)^0,w,c
  3226  00E5B8  5963               	subwfb	(___fldiv@rem+3)& (0+255),w,b
  3227  00E5BA  A0D8               	btfss	status,0,c
  3228  00E5BC  EFE2  F072         	goto	u3711
  3229  00E5C0  EFE4  F072         	goto	u3710
  3230  00E5C4                     u3711:
  3231  00E5C4  EFED  F072         	goto	l3791
  3232  00E5C8                     u3710:
  3233  00E5C8                     
  3234                           ; BSR set to: 0
  3235  00E5C8  8D6A               	bsf	(___fldiv@grs+3)& (0+255),6,b
  3236  00E5CA                     
  3237                           ; BSR set to: 0
  3238  00E5CA  5058               	movf	___fldiv@a^0,w,c
  3239  00E5CC  5F60               	subwf	___fldiv@rem& (0+255),f,b
  3240  00E5CE  5059               	movf	(___fldiv@a+1)^0,w,c
  3241  00E5D0  5B61               	subwfb	(___fldiv@rem+1)& (0+255),f,b
  3242  00E5D2  505A               	movf	(___fldiv@a+2)^0,w,c
  3243  00E5D4  5B62               	subwfb	(___fldiv@rem+2)& (0+255),f,b
  3244  00E5D6  505B               	movf	(___fldiv@a+3)^0,w,c
  3245  00E5D8  5B63               	subwfb	(___fldiv@rem+3)& (0+255),f,b
  3246  00E5DA                     l3791:
  3247                           
  3248                           ; BSR set to: 0
  3249  00E5DA  2B6C               	incf	___fldiv@aexp& (0+255),f,b
  3250  00E5DC                     l1047:
  3251                           
  3252                           ; BSR set to: 0
  3253  00E5DC  0E19               	movlw	25
  3254  00E5DE  656C               	cpfsgt	___fldiv@aexp& (0+255),b
  3255  00E5E0  EFF4  F072         	goto	u3721
  3256  00E5E4  EFF6  F072         	goto	u3720
  3257  00E5E8                     u3721:
  3258  00E5E8  EFB6  F072         	goto	l3777
  3259  00E5EC                     u3720:
  3260  00E5EC                     
  3261                           ; BSR set to: 0
  3262  00E5EC  5160               	movf	___fldiv@rem& (0+255),w,b
  3263  00E5EE  1161               	iorwf	(___fldiv@rem+1)& (0+255),w,b
  3264  00E5F0  1162               	iorwf	(___fldiv@rem+2)& (0+255),w,b
  3265  00E5F2  1163               	iorwf	(___fldiv@rem+3)& (0+255),w,b
  3266  00E5F4  B4D8               	btfsc	status,2,c
  3267  00E5F6  EFFF  F072         	goto	u3731
  3268  00E5FA  EF01  F073         	goto	u3730
  3269  00E5FE                     u3731:
  3270  00E5FE  EF19  F073         	goto	l3803
  3271  00E602                     u3730:
  3272  00E602                     
  3273                           ; BSR set to: 0
  3274  00E602  8167               	bsf	___fldiv@grs& (0+255),0,b
  3275  00E604  EF19  F073         	goto	l3803
  3276  00E608                     l3797:
  3277                           
  3278                           ; BSR set to: 0
  3279  00E608  90D8               	bcf	status,0,c
  3280  00E60A  3654               	rlcf	___fldiv@b^0,f,c
  3281  00E60C  3655               	rlcf	(___fldiv@b+1)^0,f,c
  3282  00E60E  3656               	rlcf	(___fldiv@b+2)^0,f,c
  3283  00E610  3657               	rlcf	(___fldiv@b+3)^0,f,c
  3284  00E612                     
  3285                           ; BSR set to: 0
  3286  00E612  AF6A               	btfss	(___fldiv@grs+3)& (0+255),7,b
  3287  00E614  EF0E  F073         	goto	u3741
  3288  00E618  EF10  F073         	goto	u3740
  3289  00E61C                     u3741:
  3290  00E61C  EF11  F073         	goto	l1056
  3291  00E620                     u3740:
  3292  00E620                     
  3293                           ; BSR set to: 0
  3294  00E620  8054               	bsf	___fldiv@b^0,0,c
  3295  00E622                     l1056:
  3296                           
  3297                           ; BSR set to: 0
  3298  00E622  90D8               	bcf	status,0,c
  3299  00E624  3767               	rlcf	___fldiv@grs& (0+255),f,b
  3300  00E626  3768               	rlcf	(___fldiv@grs+1)& (0+255),f,b
  3301  00E628  3769               	rlcf	(___fldiv@grs+2)& (0+255),f,b
  3302  00E62A  376A               	rlcf	(___fldiv@grs+3)& (0+255),f,b
  3303  00E62C  0765               	decf	___fldiv@new_exp& (0+255),f,b
  3304  00E62E  A0D8               	btfss	status,0,c
  3305  00E630  0766               	decf	(___fldiv@new_exp+1)& (0+255),f,b
  3306  00E632                     l3803:
  3307                           
  3308                           ; BSR set to: 0
  3309  00E632  AE56               	btfss	(___fldiv@b+2)^0,7,c
  3310  00E634  EF1E  F073         	goto	u3751
  3311  00E638  EF20  F073         	goto	u3750
  3312  00E63C                     u3751:
  3313  00E63C  EF04  F073         	goto	l3797
  3314  00E640                     u3750:
  3315  00E640                     
  3316                           ; BSR set to: 0
  3317  00E640  0E00               	movlw	0
  3318  00E642  6F6C               	movwf	___fldiv@aexp& (0+255),b
  3319  00E644                     
  3320                           ; BSR set to: 0
  3321  00E644  AF6A               	btfss	(___fldiv@grs+3)& (0+255),7,b
  3322  00E646  EF27  F073         	goto	u3761
  3323  00E64A  EF29  F073         	goto	u3760
  3324  00E64E                     u3761:
  3325  00E64E  EF4D  F073         	goto	l1058
  3326  00E652                     u3760:
  3327  00E652                     
  3328                           ; BSR set to: 0
  3329  00E652  0EFF               	movlw	255
  3330  00E654  1567               	andwf	___fldiv@grs& (0+255),w,b
  3331  00E656  6E5C               	movwf	??___fldiv^0,c
  3332  00E658  0EFF               	movlw	255
  3333  00E65A  1568               	andwf	(___fldiv@grs+1)& (0+255),w,b
  3334  00E65C  6E5D               	movwf	(??___fldiv+1)^0,c
  3335  00E65E  0EFF               	movlw	255
  3336  00E660  1569               	andwf	(___fldiv@grs+2)& (0+255),w,b
  3337  00E662  6E5E               	movwf	(??___fldiv+2)^0,c
  3338  00E664  0E7F               	movlw	127
  3339  00E666  156A               	andwf	(___fldiv@grs+3)& (0+255),w,b
  3340  00E668  6E5F               	movwf	(??___fldiv+3)^0,c
  3341  00E66A  505C               	movf	??___fldiv^0,w,c
  3342  00E66C  105D               	iorwf	(??___fldiv+1)^0,w,c
  3343  00E66E  105E               	iorwf	(??___fldiv+2)^0,w,c
  3344  00E670  105F               	iorwf	(??___fldiv+3)^0,w,c
  3345  00E672  B4D8               	btfsc	status,2,c
  3346  00E674  EF3E  F073         	goto	u3771
  3347  00E678  EF40  F073         	goto	u3770
  3348  00E67C                     u3771:
  3349  00E67C  EF44  F073         	goto	l1059
  3350  00E680                     u3770:
  3351  00E680                     l3811:
  3352                           
  3353                           ; BSR set to: 0
  3354  00E680  0E01               	movlw	1
  3355  00E682  6F6C               	movwf	___fldiv@aexp& (0+255),b
  3356  00E684  EF4D  F073         	goto	l1058
  3357  00E688                     l1059:
  3358                           
  3359                           ; BSR set to: 0
  3360  00E688  A054               	btfss	___fldiv@b^0,0,c
  3361  00E68A  EF49  F073         	goto	u3781
  3362  00E68E  EF4B  F073         	goto	u3780
  3363  00E692                     u3781:
  3364  00E692  EF4D  F073         	goto	l1058
  3365  00E696                     u3780:
  3366  00E696  EF40  F073         	goto	l3811
  3367  00E69A                     l1058:
  3368                           
  3369                           ; BSR set to: 0
  3370  00E69A  516C               	movf	___fldiv@aexp& (0+255),w,b
  3371  00E69C  B4D8               	btfsc	status,2,c
  3372  00E69E  EF53  F073         	goto	u3791
  3373  00E6A2  EF55  F073         	goto	u3790
  3374  00E6A6                     u3791:
  3375  00E6A6  EF79  F073         	goto	l3823
  3376  00E6AA                     u3790:
  3377  00E6AA                     
  3378                           ; BSR set to: 0
  3379  00E6AA  0E01               	movlw	1
  3380  00E6AC  2654               	addwf	___fldiv@b^0,f,c
  3381  00E6AE  0E00               	movlw	0
  3382  00E6B0  2255               	addwfc	(___fldiv@b+1)^0,f,c
  3383  00E6B2  2256               	addwfc	(___fldiv@b+2)^0,f,c
  3384  00E6B4  2257               	addwfc	(___fldiv@b+3)^0,f,c
  3385  00E6B6                     
  3386                           ; BSR set to: 0
  3387  00E6B6  A057               	btfss	(___fldiv@b+3)^0,0,c
  3388  00E6B8  EF60  F073         	goto	u3801
  3389  00E6BC  EF62  F073         	goto	u3800
  3390  00E6C0                     u3801:
  3391  00E6C0  EF79  F073         	goto	l3823
  3392  00E6C4                     u3800:
  3393  00E6C4                     
  3394                           ; BSR set to: 0
  3395  00E6C4  C054  F05C         	movff	___fldiv@b,??___fldiv
  3396  00E6C8  C055  F05D         	movff	___fldiv@b+1,??___fldiv+1
  3397  00E6CC  C056  F05E         	movff	___fldiv@b+2,??___fldiv+2
  3398  00E6D0  C057  F05F         	movff	___fldiv@b+3,??___fldiv+3
  3399  00E6D4  345F               	rlcf	(??___fldiv+3)^0,w,c
  3400  00E6D6  325F               	rrcf	(??___fldiv+3)^0,f,c
  3401  00E6D8  325E               	rrcf	(??___fldiv+2)^0,f,c
  3402  00E6DA  325D               	rrcf	(??___fldiv+1)^0,f,c
  3403  00E6DC  325C               	rrcf	??___fldiv^0,f,c
  3404  00E6DE  C05C  F054         	movff	??___fldiv,___fldiv@b
  3405  00E6E2  C05D  F055         	movff	??___fldiv+1,___fldiv@b+1
  3406  00E6E6  C05E  F056         	movff	??___fldiv+2,___fldiv@b+2
  3407  00E6EA  C05F  F057         	movff	??___fldiv+3,___fldiv@b+3
  3408  00E6EE                     
  3409                           ; BSR set to: 0
  3410  00E6EE  4B65               	infsnz	___fldiv@new_exp& (0+255),f,b
  3411  00E6F0  2B66               	incf	(___fldiv@new_exp+1)& (0+255),f,b
  3412  00E6F2                     l3823:
  3413                           
  3414                           ; BSR set to: 0
  3415  00E6F2  BF66               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
  3416  00E6F4  EF84  F073         	goto	u3811
  3417  00E6F8  5166               	movf	(___fldiv@new_exp+1)& (0+255),w,b
  3418  00E6FA  E108               	bnz	u3810
  3419  00E6FC  2965               	incf	___fldiv@new_exp& (0+255),w,b
  3420  00E6FE  A0D8               	btfss	status,0,c
  3421  00E700  EF84  F073         	goto	u3811
  3422  00E704  EF86  F073         	goto	u3810
  3423  00E708                     u3811:
  3424  00E708  EF91  F073         	goto	l3827
  3425  00E70C                     u3810:
  3426  00E70C                     
  3427                           ; BSR set to: 0
  3428  00E70C  0E00               	movlw	0
  3429  00E70E  6F66               	movwf	(___fldiv@new_exp+1)& (0+255),b
  3430  00E710  6965               	setf	___fldiv@new_exp& (0+255),b
  3431  00E712  0E00               	movlw	0
  3432  00E714  6E54               	movwf	___fldiv@b^0,c
  3433  00E716  0E00               	movlw	0
  3434  00E718  6E55               	movwf	(___fldiv@b+1)^0,c
  3435  00E71A  0E00               	movlw	0
  3436  00E71C  6E56               	movwf	(___fldiv@b+2)^0,c
  3437  00E71E  0E00               	movlw	0
  3438  00E720  6E57               	movwf	(___fldiv@b+3)^0,c
  3439  00E722                     l3827:
  3440                           
  3441                           ; BSR set to: 0
  3442  00E722  BF66               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
  3443  00E724  EF9E  F073         	goto	u3820
  3444  00E728  5166               	movf	(___fldiv@new_exp+1)& (0+255),w,b
  3445  00E72A  E106               	bnz	u3821
  3446  00E72C  0565               	decf	___fldiv@new_exp& (0+255),w,b
  3447  00E72E  B0D8               	btfsc	status,0,c
  3448  00E730  EF9C  F073         	goto	u3821
  3449  00E734  EF9E  F073         	goto	u3820
  3450  00E738                     u3821:
  3451  00E738  EFAC  F073         	goto	l3831
  3452  00E73C                     u3820:
  3453  00E73C                     
  3454                           ; BSR set to: 0
  3455  00E73C  0E00               	movlw	0
  3456  00E73E  6F66               	movwf	(___fldiv@new_exp+1)& (0+255),b
  3457  00E740  0E00               	movlw	0
  3458  00E742  6F65               	movwf	___fldiv@new_exp& (0+255),b
  3459  00E744  0E00               	movlw	0
  3460  00E746  6E54               	movwf	___fldiv@b^0,c
  3461  00E748  0E00               	movlw	0
  3462  00E74A  6E55               	movwf	(___fldiv@b+1)^0,c
  3463  00E74C  0E00               	movlw	0
  3464  00E74E  6E56               	movwf	(___fldiv@b+2)^0,c
  3465  00E750  0E00               	movlw	0
  3466  00E752  6E57               	movwf	(___fldiv@b+3)^0,c
  3467  00E754  0E00               	movlw	0
  3468  00E756  6F64               	movwf	___fldiv@sign& (0+255),b
  3469  00E758                     l3831:
  3470                           
  3471                           ; BSR set to: 0
  3472  00E758  C065  F06B         	movff	___fldiv@new_exp,___fldiv@bexp
  3473  00E75C                     
  3474                           ; BSR set to: 0
  3475  00E75C  A16B               	btfss	___fldiv@bexp& (0+255),0,b
  3476  00E75E  EFB3  F073         	goto	u3831
  3477  00E762  EFB5  F073         	goto	u3830
  3478  00E766                     u3831:
  3479  00E766  EFB8  F073         	goto	l3837
  3480  00E76A                     u3830:
  3481  00E76A                     
  3482                           ; BSR set to: 0
  3483  00E76A  8E56               	bsf	(___fldiv@b+2)^0,7,c
  3484  00E76C  EFB9  F073         	goto	l3839
  3485  00E770                     l3837:
  3486                           
  3487                           ; BSR set to: 0
  3488  00E770  9E56               	bcf	(___fldiv@b+2)^0,7,c
  3489  00E772                     l3839:
  3490                           
  3491                           ; BSR set to: 0
  3492  00E772  90D8               	bcf	status,0,c
  3493  00E774  316B               	rrcf	___fldiv@bexp& (0+255),w,b
  3494  00E776  6E57               	movwf	(___fldiv@b+3)^0,c
  3495  00E778  EF6F  F072         	goto	l3753
  3496  00E77C                     l1045:
  3497                           
  3498                           ; BSR set to: 0
  3499  00E77C  0012               	return		;funcret
  3500  00E77E                     __end_of___fldiv:
  3501                           	callstack 0
  3502                           
  3503 ;; *************** function _poll_switch1_for_edges *****************
  3504 ;; Defined at:
  3505 ;;		line 22 in file "buttons.c"
  3506 ;; Parameters:    Size  Location     Type
  3507 ;;  digitalinput    2    0[COMRAM] unsigned int 
  3508 ;; Auto vars:     Size  Location     Type
  3509 ;;  has_switch1_    2    2[COMRAM] unsigned int 
  3510 ;; Return value:  Size  Location     Type
  3511 ;;                  2    0[COMRAM] unsigned int 
  3512 ;; Registers used:
  3513 ;;		wreg, status,2, status,0
  3514 ;; Tracked objects:
  3515 ;;		On entry : 0/0
  3516 ;;		On exit  : 0/0
  3517 ;;		Unchanged: 0/0
  3518 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3519 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3520 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3521 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3522 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3523 ;;Total ram usage:        4 bytes
  3524 ;; Hardware stack levels used:    1
  3525 ;; This function calls:
  3526 ;;		Nothing
  3527 ;; This function is called by:
  3528 ;;		_main
  3529 ;; This function uses a non-reentrant model
  3530 ;;
  3531                           
  3532                           	psect	text9
  3533  00C844                     __ptext9:
  3534                           	callstack 0
  3535  00C844                     _poll_switch1_for_edges:
  3536                           	callstack 30
  3537  00C844                     
  3538                           ;buttons.c: 25: unsigned int has_switch1_changed = 0;
  3539  00C844  0E00               	movlw	0
  3540  00C846  6E04               	movwf	(poll_switch1_for_edges@has_switch1_changed+1)^0,c
  3541  00C848  0E00               	movlw	0
  3542  00C84A  6E03               	movwf	poll_switch1_for_edges@has_switch1_changed^0,c
  3543  00C84C                     
  3544                           ;buttons.c: 27: if (last_switch1_value == 0 && digitalinputpin >> 0)
  3545  00C84C  0100               	movlb	0	; () banked
  3546  00C84E  51CF               	movf	_last_switch1_value& (0+255),w,b
  3547  00C850  11D0               	iorwf	(_last_switch1_value+1)& (0+255),w,b
  3548  00C852  A4D8               	btfss	status,2,c
  3549  00C854  EF2E  F064         	goto	u4411
  3550  00C858  EF30  F064         	goto	u4410
  3551  00C85C                     u4411:
  3552  00C85C  EF41  F064         	goto	l4297
  3553  00C860                     u4410:
  3554  00C860                     
  3555                           ; BSR set to: 0
  3556  00C860  5001               	movf	poll_switch1_for_edges@digitalinputpin^0,w,c
  3557  00C862  1002               	iorwf	(poll_switch1_for_edges@digitalinputpin+1)^0,w,c
  3558  00C864  B4D8               	btfsc	status,2,c
  3559  00C866  EF37  F064         	goto	u4421
  3560  00C86A  EF39  F064         	goto	u4420
  3561  00C86E                     u4421:
  3562  00C86E  EF41  F064         	goto	l4297
  3563  00C872                     u4420:
  3564  00C872                     
  3565                           ; BSR set to: 0
  3566                           ;buttons.c: 28: {;buttons.c: 29: last_switch1_value = 1;
  3567  00C872  0E00               	movlw	0
  3568  00C874  6FD0               	movwf	(_last_switch1_value+1)& (0+255),b
  3569  00C876  0E01               	movlw	1
  3570  00C878  6FCF               	movwf	_last_switch1_value& (0+255),b
  3571                           
  3572                           ;buttons.c: 30: has_switch1_changed = 1;
  3573  00C87A  0E00               	movlw	0
  3574  00C87C  6E04               	movwf	(poll_switch1_for_edges@has_switch1_changed+1)^0,c
  3575  00C87E  0E01               	movlw	1
  3576  00C880  6E03               	movwf	poll_switch1_for_edges@has_switch1_changed^0,c
  3577  00C882                     l4297:
  3578                           
  3579                           ; BSR set to: 0
  3580                           ;buttons.c: 31: };buttons.c: 32: if (last_switch1_value == 1 && digitalinputpin == 0)
  3581  00C882  05CF               	decf	_last_switch1_value& (0+255),w,b
  3582  00C884  11D0               	iorwf	(_last_switch1_value+1)& (0+255),w,b
  3583  00C886  A4D8               	btfss	status,2,c
  3584  00C888  EF48  F064         	goto	u4431
  3585  00C88C  EF4A  F064         	goto	u4430
  3586  00C890                     u4431:
  3587  00C890  EF5B  F064         	goto	l4303
  3588  00C894                     u4430:
  3589  00C894                     
  3590                           ; BSR set to: 0
  3591  00C894  5001               	movf	poll_switch1_for_edges@digitalinputpin^0,w,c
  3592  00C896  1002               	iorwf	(poll_switch1_for_edges@digitalinputpin+1)^0,w,c
  3593  00C898  A4D8               	btfss	status,2,c
  3594  00C89A  EF51  F064         	goto	u4441
  3595  00C89E  EF53  F064         	goto	u4440
  3596  00C8A2                     u4441:
  3597  00C8A2  EF5B  F064         	goto	l4303
  3598  00C8A6                     u4440:
  3599  00C8A6                     
  3600                           ; BSR set to: 0
  3601                           ;buttons.c: 33: {;buttons.c: 34: last_switch1_value = 0;
  3602  00C8A6  0E00               	movlw	0
  3603  00C8A8  6FD0               	movwf	(_last_switch1_value+1)& (0+255),b
  3604  00C8AA  0E00               	movlw	0
  3605  00C8AC  6FCF               	movwf	_last_switch1_value& (0+255),b
  3606                           
  3607                           ;buttons.c: 35: has_switch1_changed = 2;
  3608  00C8AE  0E00               	movlw	0
  3609  00C8B0  6E04               	movwf	(poll_switch1_for_edges@has_switch1_changed+1)^0,c
  3610  00C8B2  0E02               	movlw	2
  3611  00C8B4  6E03               	movwf	poll_switch1_for_edges@has_switch1_changed^0,c
  3612  00C8B6                     l4303:
  3613                           
  3614                           ; BSR set to: 0
  3615                           ;buttons.c: 36: };buttons.c: 38: return has_switch1_changed;
  3616  00C8B6  C003  F001         	movff	poll_switch1_for_edges@has_switch1_changed,?_poll_switch1_for_edges
  3617  00C8BA  C004  F002         	movff	poll_switch1_for_edges@has_switch1_changed+1,?_poll_switch1_for_edges+1
  3618  00C8BE                     
  3619                           ; BSR set to: 0
  3620  00C8BE  0012               	return		;funcret
  3621  00C8C0                     __end_of_poll_switch1_for_edges:
  3622                           	callstack 0
  3623                           
  3624 ;; *************** function _clearPuTTY *****************
  3625 ;; Defined at:
  3626 ;;		line 4 in file "putty.c"
  3627 ;; Parameters:    Size  Location     Type
  3628 ;;		None
  3629 ;; Auto vars:     Size  Location     Type
  3630 ;;		None
  3631 ;; Return value:  Size  Location     Type
  3632 ;;                  1    wreg      void 
  3633 ;; Registers used:
  3634 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3635 ;; Tracked objects:
  3636 ;;		On entry : 0/0
  3637 ;;		On exit  : 0/0
  3638 ;;		Unchanged: 0/0
  3639 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3640 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3641 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3642 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3643 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3644 ;;Total ram usage:        0 bytes
  3645 ;; Hardware stack levels used:    1
  3646 ;; Hardware stack levels required when called:    3
  3647 ;; This function calls:
  3648 ;;		_printf
  3649 ;; This function is called by:
  3650 ;;		_main
  3651 ;; This function uses a non-reentrant model
  3652 ;;
  3653                           
  3654                           	psect	text10
  3655  00C8C0                     __ptext10:
  3656                           	callstack 0
  3657  00C8C0                     _clearPuTTY:
  3658                           	callstack 27
  3659  00C8C0                     
  3660                           ;putty.c: 6: printf("%c%c%c%c",27,'[','2','J');
  3661  00C8C0  0EF2               	movlw	low STR_6
  3662  00C8C2  0100               	movlb	0	; () banked
  3663  00C8C4  6F79               	movwf	printf@f& (0+255),b
  3664  00C8C6  0EFF               	movlw	high STR_6
  3665  00C8C8  6F7A               	movwf	(printf@f+1)& (0+255),b
  3666  00C8CA  0E00               	movlw	0
  3667  00C8CC  6F7C               	movwf	(?_printf+3)& (0+255),b
  3668  00C8CE  0E1B               	movlw	27
  3669  00C8D0  6F7B               	movwf	(?_printf+2)& (0+255),b
  3670  00C8D2  0E00               	movlw	0
  3671  00C8D4  6F7E               	movwf	(?_printf+5)& (0+255),b
  3672  00C8D6  0E5B               	movlw	91
  3673  00C8D8  6F7D               	movwf	(?_printf+4)& (0+255),b
  3674  00C8DA  0E00               	movlw	0
  3675  00C8DC  6F80               	movwf	(?_printf+7)& (0+255),b
  3676  00C8DE  0E32               	movlw	50
  3677  00C8E0  6F7F               	movwf	(?_printf+6)& (0+255),b
  3678  00C8E2  0E00               	movlw	0
  3679  00C8E4  6F82               	movwf	(?_printf+9)& (0+255),b
  3680  00C8E6  0E4A               	movlw	74
  3681  00C8E8  6F81               	movwf	(?_printf+8)& (0+255),b
  3682  00C8EA  ECA1  F07A         	call	_printf	;wreg free
  3683                           
  3684                           ;putty.c: 7: printf("%c%c%c%c",27,'[','3','J');
  3685  00C8EE  0EF2               	movlw	low STR_6
  3686  00C8F0  0100               	movlb	0	; () banked
  3687  00C8F2  6F79               	movwf	printf@f& (0+255),b
  3688  00C8F4  0EFF               	movlw	high STR_6
  3689  00C8F6  6F7A               	movwf	(printf@f+1)& (0+255),b
  3690  00C8F8  0E00               	movlw	0
  3691  00C8FA  6F7C               	movwf	(?_printf+3)& (0+255),b
  3692  00C8FC  0E1B               	movlw	27
  3693  00C8FE  6F7B               	movwf	(?_printf+2)& (0+255),b
  3694  00C900  0E00               	movlw	0
  3695  00C902  6F7E               	movwf	(?_printf+5)& (0+255),b
  3696  00C904  0E5B               	movlw	91
  3697  00C906  6F7D               	movwf	(?_printf+4)& (0+255),b
  3698  00C908  0E00               	movlw	0
  3699  00C90A  6F80               	movwf	(?_printf+7)& (0+255),b
  3700  00C90C  0E33               	movlw	51
  3701  00C90E  6F7F               	movwf	(?_printf+6)& (0+255),b
  3702  00C910  0E00               	movlw	0
  3703  00C912  6F82               	movwf	(?_printf+9)& (0+255),b
  3704  00C914  0E4A               	movlw	74
  3705  00C916  6F81               	movwf	(?_printf+8)& (0+255),b
  3706  00C918  ECA1  F07A         	call	_printf	;wreg free
  3707                           
  3708                           ;putty.c: 8: printf("%c%c%c",27,'[','H');
  3709  00C91C  0EF4               	movlw	low (STR_6+2)
  3710  00C91E  0100               	movlb	0	; () banked
  3711  00C920  6F79               	movwf	printf@f& (0+255),b
  3712  00C922  0EFF               	movlw	high (STR_6+2)
  3713  00C924  6F7A               	movwf	(printf@f+1)& (0+255),b
  3714  00C926  0E00               	movlw	0
  3715  00C928  6F7C               	movwf	(?_printf+3)& (0+255),b
  3716  00C92A  0E1B               	movlw	27
  3717  00C92C  6F7B               	movwf	(?_printf+2)& (0+255),b
  3718  00C92E  0E00               	movlw	0
  3719  00C930  6F7E               	movwf	(?_printf+5)& (0+255),b
  3720  00C932  0E5B               	movlw	91
  3721  00C934  6F7D               	movwf	(?_printf+4)& (0+255),b
  3722  00C936  0E00               	movlw	0
  3723  00C938  6F80               	movwf	(?_printf+7)& (0+255),b
  3724  00C93A  0E48               	movlw	72
  3725  00C93C  6F7F               	movwf	(?_printf+6)& (0+255),b
  3726  00C93E  ECA1  F07A         	call	_printf	;wreg free
  3727  00C942  0012               	return		;funcret
  3728  00C944                     __end_of_clearPuTTY:
  3729                           	callstack 0
  3730                           
  3731 ;; *************** function _printf *****************
  3732 ;; Defined at:
  3733 ;;		line 477 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c"
  3734 ;; Parameters:    Size  Location     Type
  3735 ;;  f               2   25[BANK0 ] PTR const unsigned char 
  3736 ;;		 -> STR_8(7), STR_7(9), STR_6(9), STR_5(57), 
  3737 ;;		 -> STR_4(22), STR_3(20), STR_2(23), STR_1(37), 
  3738 ;; Auto vars:     Size  Location     Type
  3739 ;;  fval            4   57[BANK0 ] PTR const unsigned char 
  3740 ;;  tmpval          4   53[BANK0 ] struct .
  3741 ;;  val             4   47[BANK0 ] unsigned long 
  3742 ;;  cp              3    0        PTR const unsigned char 
  3743 ;;  eexp            2   51[BANK0 ] int 
  3744 ;;  prec            2   45[BANK0 ] int 
  3745 ;;  flag            2   43[BANK0 ] unsigned short 
  3746 ;;  ap              2   41[BANK0 ] PTR void [1]
  3747 ;;		 -> ?_printf(2), 
  3748 ;;  len             2    0        unsigned int 
  3749 ;;  width           2    0        int 
  3750 ;;  c               1   61[BANK0 ] unsigned char 
  3751 ;;  d               1    0        unsigned char 
  3752 ;; Return value:  Size  Location     Type
  3753 ;;                  2   25[BANK0 ] int 
  3754 ;; Registers used:
  3755 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3756 ;; Tracked objects:
  3757 ;;		On entry : 0/0
  3758 ;;		On exit  : 0/0
  3759 ;;		Unchanged: 0/0
  3760 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3761 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3762 ;;      Locals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3763 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3764 ;;      Totals:         0      37       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3765 ;;Total ram usage:       37 bytes
  3766 ;; Hardware stack levels used:    1
  3767 ;; Hardware stack levels required when called:    2
  3768 ;; This function calls:
  3769 ;;		___awdiv
  3770 ;;		___fladd
  3771 ;;		___fleq
  3772 ;;		___flge
  3773 ;;		___flmul
  3774 ;;		___flneg
  3775 ;;		___flsub
  3776 ;;		___fltol
  3777 ;;		___lldiv
  3778 ;;		___llmod
  3779 ;;		___wmul
  3780 ;;		___xxtofl
  3781 ;;		__div_to_l_
  3782 ;;		__tdiv_to_l_
  3783 ;;		_fround
  3784 ;;		_putch
  3785 ;;		_scale
  3786 ;; This function is called by:
  3787 ;;		_main
  3788 ;;		_clearPuTTY
  3789 ;; This function uses a non-reentrant model
  3790 ;;
  3791                           
  3792                           	psect	text11
  3793  00F542                     __ptext11:
  3794                           	callstack 0
  3795  00F542                     _printf:
  3796                           	callstack 28
  3797  00F542                     
  3798                           ;doprnt.c: 479: va_list ap;;doprnt.c: 512: char c;;doprnt.c: 514: int width;;doprnt.c: 5
      +                          17: int prec;;doprnt.c: 525: unsigned short flag;;doprnt.c: 532: char d;;doprnt.c: 533: 
      +                          double fval;;doprnt.c: 534: int eexp;;doprnt.c: 540: union {;doprnt.c: 541: unsigned lon
      +                          g vd;;doprnt.c: 542: double integ;;doprnt.c: 543: } tmpval;;doprnt.c: 545: unsigned long
      +                           val;;doprnt.c: 546: unsigned len;;doprnt.c: 547: const char * cp;;doprnt.c: 550: *ap = 
      +                          __va_start();
  3799  00F542  0E7B               	movlw	low (?_printf+2)
  3800  00F544  0100               	movlb	0	; () banked
  3801  00F546  6F89               	movwf	printf@ap& (0+255),b
  3802  00F548  0E00               	movlw	high (?_printf+2)
  3803  00F54A  6F8A               	movwf	(printf@ap+1)& (0+255),b
  3804                           
  3805                           ;doprnt.c: 553: while((c = *f++)) {
  3806  00F54C  EF24  F07F         	goto	l4175
  3807  00F550                     l3993:
  3808                           
  3809                           ; BSR set to: 0
  3810                           ;doprnt.c: 555: if(c != '%')
  3811  00F550  0E25               	movlw	37
  3812  00F552  199D               	xorwf	printf@c& (0+255),w,b
  3813  00F554  B4D8               	btfsc	status,2,c
  3814  00F556  EFAF  F07A         	goto	u3981
  3815  00F55A  EFB1  F07A         	goto	u3980
  3816  00F55E                     u3981:
  3817  00F55E  EFB6  F07A         	goto	l3997
  3818  00F562                     u3980:
  3819  00F562                     
  3820                           ; BSR set to: 0
  3821                           ;doprnt.c: 557: {;doprnt.c: 558: (putch(c) );
  3822  00F562  519D               	movf	printf@c& (0+255),w,b
  3823  00F564  ECBF  F062         	call	_putch
  3824                           
  3825                           ;doprnt.c: 559: continue;
  3826  00F568  EF24  F07F         	goto	l4175
  3827  00F56C                     l3997:
  3828                           
  3829                           ; BSR set to: 0
  3830                           ;doprnt.c: 560: };doprnt.c: 565: flag = 0;
  3831  00F56C  0E00               	movlw	0
  3832  00F56E  6F8C               	movwf	(printf@flag+1)& (0+255),b
  3833  00F570  0E00               	movlw	0
  3834  00F572  6F8B               	movwf	printf@flag& (0+255),b
  3835                           
  3836                           ;doprnt.c: 661: switch(c = *f++) {
  3837  00F574  EFD4  F07A         	goto	l4011
  3838  00F578                     l3999:
  3839                           
  3840                           ; BSR set to: 0
  3841                           ;doprnt.c: 689: flag |= 0x400;
  3842  00F578  858C               	bsf	(printf@flag+1)& (0+255),2,b
  3843                           
  3844                           ;doprnt.c: 690: break;
  3845  00F57A  EFF4  F07A         	goto	l4013
  3846  00F57E                     l4001:
  3847                           
  3848                           ; BSR set to: 0
  3849                           ;doprnt.c: 825: c = (char)(*(int *)__va_arg((*(int **)ap), (int)0));
  3850  00F57E  0060  F227  FFD9   	movff	printf@ap,fsr2l
  3851  00F584  0060  F22B  FFDA   	movff	printf@ap+1,fsr2h
  3852  00F58A  50DF               	movf	indf2,w,c
  3853  00F58C  6F9D               	movwf	printf@c& (0+255),b
  3854  00F58E                     
  3855                           ; BSR set to: 0
  3856  00F58E  0E02               	movlw	2
  3857  00F590  2789               	addwf	printf@ap& (0+255),f,b
  3858  00F592  0E00               	movlw	0
  3859  00F594  238A               	addwfc	(printf@ap+1)& (0+255),f,b
  3860  00F596                     l4005:
  3861                           
  3862                           ; BSR set to: 0
  3863                           ;doprnt.c: 835: (putch(c) );
  3864  00F596  519D               	movf	printf@c& (0+255),w,b
  3865  00F598  ECBF  F062         	call	_putch
  3866                           
  3867                           ;doprnt.c: 836: continue;
  3868  00F59C  EF24  F07F         	goto	l4175
  3869  00F5A0                     l4007:
  3870                           
  3871                           ; BSR set to: 0
  3872                           ;doprnt.c: 844: flag |= 0xC0;
  3873  00F5A0  0EC0               	movlw	192
  3874  00F5A2  138B               	iorwf	printf@flag& (0+255),f,b
  3875                           
  3876                           ;doprnt.c: 845: break;
  3877  00F5A4  EFF4  F07A         	goto	l4013
  3878  00F5A8                     l4011:
  3879                           
  3880                           ; BSR set to: 0
  3881  00F5A8  0060  F1E7  FFF6   	movff	printf@f,tblptrl
  3882  00F5AE  0060  F1EB  FFF7   	movff	printf@f+1,tblptrh
  3883  00F5B4  4B79               	infsnz	printf@f& (0+255),f,b
  3884  00F5B6  2B7A               	incf	(printf@f+1)& (0+255),f,b
  3885  00F5B8                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3886  00F5B8  6AF8               	clrf	tblptru,c
  3887  00F5BA                     	endif
  3888  00F5BA                     	if	0	;tblptru may be non-zero
  3889  00F5BA                     	endif
  3890  00F5BA  0008               	tblrd		*
  3891  00F5BC  006F FFD4  F09D    	movff	tablat,printf@c
  3892  00F5C2  519D               	movf	printf@c& (0+255),w,b
  3893                           
  3894                           ; Switch size 1, requested type "simple"
  3895                           ; Number of cases is 4, Range of values is 0 to 117
  3896                           ; switch strategies available:
  3897                           ; Name         Instructions Cycles
  3898                           ; simple_byte           13     7 (average)
  3899                           ;	Chosen strategy is simple_byte
  3900  00F5C4  0A00               	xorlw	0	; case 0
  3901  00F5C6  B4D8               	btfsc	status,2,c
  3902  00F5C8  EF3A  F07F         	goto	l438
  3903  00F5CC  0A63               	xorlw	99	; case 99
  3904  00F5CE  B4D8               	btfsc	status,2,c
  3905  00F5D0  EFBF  F07A         	goto	l4001
  3906  00F5D4  0A05               	xorlw	5	; case 102
  3907  00F5D6  B4D8               	btfsc	status,2,c
  3908  00F5D8  EFBC  F07A         	goto	l3999
  3909  00F5DC  0A13               	xorlw	19	; case 117
  3910  00F5DE  B4D8               	btfsc	status,2,c
  3911  00F5E0  EFD0  F07A         	goto	l4007
  3912  00F5E4  EFCB  F07A         	goto	l4005
  3913  00F5E8                     l4013:
  3914                           
  3915                           ; BSR set to: 0
  3916                           ;doprnt.c: 851: if(flag & (0x700)) {
  3917  00F5E8  0E07               	movlw	7
  3918  00F5EA  158C               	andwf	(printf@flag+1)& (0+255),w,b
  3919  00F5EC  B4D8               	btfsc	status,2,c
  3920  00F5EE  EFFB  F07A         	goto	u3991
  3921  00F5F2  EFFD  F07A         	goto	u3990
  3922  00F5F6                     u3991:
  3923  00F5F6  EF76  F07E         	goto	l4145
  3924  00F5FA                     u3990:
  3925  00F5FA                     
  3926                           ; BSR set to: 0
  3927                           ;doprnt.c: 855: prec = 6;
  3928  00F5FA  0E00               	movlw	0
  3929  00F5FC  6F8E               	movwf	(printf@prec+1)& (0+255),b
  3930  00F5FE  0E06               	movlw	6
  3931  00F600  6F8D               	movwf	printf@prec& (0+255),b
  3932  00F602                     
  3933                           ; BSR set to: 0
  3934                           ;doprnt.c: 856: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
  3935  00F602  0060  F227  FFD9   	movff	printf@ap,fsr2l
  3936  00F608  0060  F22B  FFDA   	movff	printf@ap+1,fsr2h
  3937  00F60E  006F FF78  F099    	movff	postinc2,printf@fval
  3938  00F614  006F FF78  F09A    	movff	postinc2,printf@fval+1
  3939  00F61A  006F FF78  F09B    	movff	postinc2,printf@fval+2
  3940  00F620  006F FF78  F09C    	movff	postinc2,printf@fval+3
  3941  00F626                     
  3942                           ; BSR set to: 0
  3943  00F626  0E04               	movlw	4
  3944  00F628  2789               	addwf	printf@ap& (0+255),f,b
  3945  00F62A  0E00               	movlw	0
  3946  00F62C  238A               	addwfc	(printf@ap+1)& (0+255),f,b
  3947  00F62E                     
  3948                           ; BSR set to: 0
  3949                           ;doprnt.c: 857: if(fval < 0.0) {
  3950  00F62E  BF9C               	btfsc	(printf@fval+3)& (0+255),7,b
  3951  00F630  EF1E  F07B         	goto	u4000
  3952  00F634  EF1C  F07B         	goto	u4001
  3953  00F638                     u4001:
  3954  00F638  EF33  F07B         	goto	l4027
  3955  00F63C                     u4000:
  3956  00F63C                     
  3957                           ; BSR set to: 0
  3958                           ;doprnt.c: 858: fval = -fval;
  3959  00F63C  C099  F001         	movff	printf@fval,___flneg@f1
  3960  00F640  C09A  F002         	movff	printf@fval+1,___flneg@f1+1
  3961  00F644  C09B  F003         	movff	printf@fval+2,___flneg@f1+2
  3962  00F648  C09C  F004         	movff	printf@fval+3,___flneg@f1+3
  3963  00F64C  EC47  F063         	call	___flneg	;wreg free
  3964  00F650  C001  F099         	movff	?___flneg,printf@fval
  3965  00F654  C002  F09A         	movff	?___flneg+1,printf@fval+1
  3966  00F658  C003  F09B         	movff	?___flneg+2,printf@fval+2
  3967  00F65C  C004  F09C         	movff	?___flneg+3,printf@fval+3
  3968  00F660                     
  3969                           ;doprnt.c: 859: flag |= 0x03;
  3970  00F660  0E03               	movlw	3
  3971  00F662  0100               	movlb	0	; () banked
  3972  00F664  138B               	iorwf	printf@flag& (0+255),f,b
  3973  00F666                     l4027:
  3974                           
  3975                           ; BSR set to: 0
  3976                           ;doprnt.c: 860: };doprnt.c: 861: eexp = 0;
  3977  00F666  0E00               	movlw	0
  3978  00F668  6F94               	movwf	(printf@eexp+1)& (0+255),b
  3979  00F66A  0E00               	movlw	0
  3980  00F66C  6F93               	movwf	printf@eexp& (0+255),b
  3981  00F66E                     
  3982                           ; BSR set to: 0
  3983                           ;doprnt.c: 862: if( fval!=0) {
  3984  00F66E  C099  F027         	movff	printf@fval,___fleq@ff1
  3985  00F672  C09A  F028         	movff	printf@fval+1,___fleq@ff1+1
  3986  00F676  C09B  F029         	movff	printf@fval+2,___fleq@ff1+2
  3987  00F67A  C09C  F02A         	movff	printf@fval+3,___fleq@ff1+3
  3988  00F67E  0E00               	movlw	0
  3989  00F680  6E2B               	movwf	___fleq@ff2^0,c
  3990  00F682  0E00               	movlw	0
  3991  00F684  6E2C               	movwf	(___fleq@ff2+1)^0,c
  3992  00F686  0E00               	movlw	0
  3993  00F688  6E2D               	movwf	(___fleq@ff2+2)^0,c
  3994  00F68A  0E00               	movlw	0
  3995  00F68C  6E2E               	movwf	(___fleq@ff2+3)^0,c
  3996  00F68E  EC84  F065         	call	___fleq	;wreg free
  3997  00F692  B0D8               	btfsc	status,0,c
  3998  00F694  EF4E  F07B         	goto	u4011
  3999  00F698  EF50  F07B         	goto	u4010
  4000  00F69C                     u4011:
  4001  00F69C  EFE3  F07B         	goto	l4055
  4002  00F6A0                     u4010:
  4003  00F6A0                     
  4004                           ;doprnt.c: 863: (void)(*(&eexp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255)
      +                           - 126);
  4005  00F6A0  0100               	movlb	0	; () banked
  4006  00F6A2  359B               	rlcf	(printf@fval+2)& (0+255),w,b
  4007  00F6A4  359C               	rlcf	(printf@fval+3)& (0+255),w,b
  4008  00F6A6  0F82               	addlw	130
  4009  00F6A8  6F93               	movwf	printf@eexp& (0+255),b
  4010  00F6AA  6B94               	clrf	(printf@eexp+1)& (0+255),b
  4011  00F6AC  0EFF               	movlw	255
  4012  00F6AE  2394               	addwfc	(printf@eexp+1)& (0+255),f,b
  4013  00F6B0                     
  4014                           ; BSR set to: 0
  4015                           ;doprnt.c: 864: eexp--;
  4016  00F6B0  0793               	decf	printf@eexp& (0+255),f,b
  4017  00F6B2  A0D8               	btfss	status,0,c
  4018  00F6B4  0794               	decf	(printf@eexp+1)& (0+255),f,b
  4019  00F6B6                     
  4020                           ; BSR set to: 0
  4021                           ;doprnt.c: 865: eexp *= 3;
  4022  00F6B6  C093  F001         	movff	printf@eexp,___wmul@multiplier
  4023  00F6BA  C094  F002         	movff	printf@eexp+1,___wmul@multiplier+1
  4024  00F6BE  0E00               	movlw	0
  4025  00F6C0  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  4026  00F6C2  0E03               	movlw	3
  4027  00F6C4  6E03               	movwf	___wmul@multiplicand^0,c
  4028  00F6C6  EC1A  F063         	call	___wmul	;wreg free
  4029  00F6CA  C001  F093         	movff	?___wmul,printf@eexp
  4030  00F6CE  C002  F094         	movff	?___wmul+1,printf@eexp+1
  4031  00F6D2                     
  4032                           ;doprnt.c: 866: eexp /= 10;
  4033  00F6D2  C093  F007         	movff	printf@eexp,___awdiv@dividend
  4034  00F6D6  C094  F008         	movff	printf@eexp+1,___awdiv@dividend+1
  4035  00F6DA  0E00               	movlw	0
  4036  00F6DC  6E0A               	movwf	(___awdiv@divisor+1)^0,c
  4037  00F6DE  0E0A               	movlw	10
  4038  00F6E0  6E09               	movwf	___awdiv@divisor^0,c
  4039  00F6E2  EC31  F066         	call	___awdiv	;wreg free
  4040  00F6E6  C007  F093         	movff	?___awdiv,printf@eexp
  4041  00F6EA  C008  F094         	movff	?___awdiv+1,printf@eexp+1
  4042  00F6EE                     
  4043                           ;doprnt.c: 867: if(eexp < 0)
  4044  00F6EE  0100               	movlb	0	; () banked
  4045  00F6F0  BF94               	btfsc	(printf@eexp+1)& (0+255),7,b
  4046  00F6F2  EF7F  F07B         	goto	u4020
  4047  00F6F6  EF7D  F07B         	goto	u4021
  4048  00F6FA                     u4021:
  4049  00F6FA  EF82  F07B         	goto	l4043
  4050  00F6FE                     u4020:
  4051  00F6FE                     
  4052                           ; BSR set to: 0
  4053                           ;doprnt.c: 868: eexp--;
  4054  00F6FE  0793               	decf	printf@eexp& (0+255),f,b
  4055  00F700  A0D8               	btfss	status,0,c
  4056  00F702  0794               	decf	(printf@eexp+1)& (0+255),f,b
  4057  00F704                     l4043:
  4058                           
  4059                           ; BSR set to: 0
  4060                           ;doprnt.c: 872: tmpval.integ = scale(-eexp);
  4061  00F704  5193               	movf	printf@eexp& (0+255),w,b
  4062  00F706  0800               	sublw	0
  4063  00F708  ECE6  F075         	call	_scale
  4064  00F70C  C054  F095         	movff	?_scale,printf@tmpval
  4065  00F710  C055  F096         	movff	?_scale+1,printf@tmpval+1
  4066  00F714  C056  F097         	movff	?_scale+2,printf@tmpval+2
  4067  00F718  C057  F098         	movff	?_scale+3,printf@tmpval+3
  4068  00F71C                     
  4069                           ;doprnt.c: 873: tmpval.integ *= fval;
  4070  00F71C  C095  F03B         	movff	printf@tmpval,___flmul@b
  4071  00F720  C096  F03C         	movff	printf@tmpval+1,___flmul@b+1
  4072  00F724  C097  F03D         	movff	printf@tmpval+2,___flmul@b+2
  4073  00F728  C098  F03E         	movff	printf@tmpval+3,___flmul@b+3
  4074  00F72C  C099  F03F         	movff	printf@fval,___flmul@a
  4075  00F730  C09A  F040         	movff	printf@fval+1,___flmul@a+1
  4076  00F734  C09B  F041         	movff	printf@fval+2,___flmul@a+2
  4077  00F738  C09C  F042         	movff	printf@fval+3,___flmul@a+3
  4078  00F73C  ECBF  F073         	call	___flmul	;wreg free
  4079  00F740  C03B  F095         	movff	?___flmul,printf@tmpval
  4080  00F744  C03C  F096         	movff	?___flmul+1,printf@tmpval+1
  4081  00F748  C03D  F097         	movff	?___flmul+2,printf@tmpval+2
  4082  00F74C  C03E  F098         	movff	?___flmul+3,printf@tmpval+3
  4083  00F750                     
  4084                           ;doprnt.c: 874: if(tmpval.integ < 1.0)
  4085  00F750  C095  F001         	movff	printf@tmpval,___flge@ff1
  4086  00F754  C096  F002         	movff	printf@tmpval+1,___flge@ff1+1
  4087  00F758  C097  F003         	movff	printf@tmpval+2,___flge@ff1+2
  4088  00F75C  C098  F004         	movff	printf@tmpval+3,___flge@ff1+3
  4089  00F760  0E00               	movlw	0
  4090  00F762  6E05               	movwf	___flge@ff2^0,c
  4091  00F764  0E00               	movlw	0
  4092  00F766  6E06               	movwf	(___flge@ff2+1)^0,c
  4093  00F768  0E80               	movlw	128
  4094  00F76A  6E07               	movwf	(___flge@ff2+2)^0,c
  4095  00F76C  0E3F               	movlw	63
  4096  00F76E  6E08               	movwf	(___flge@ff2+3)^0,c
  4097  00F770  ECFF  F066         	call	___flge	;wreg free
  4098  00F774  B0D8               	btfsc	status,0,c
  4099  00F776  EFBF  F07B         	goto	u4031
  4100  00F77A  EFC1  F07B         	goto	u4030
  4101  00F77E                     u4031:
  4102  00F77E  EFC7  F07B         	goto	l4051
  4103  00F782                     u4030:
  4104  00F782                     
  4105                           ;doprnt.c: 875: eexp--;
  4106  00F782  0100               	movlb	0	; () banked
  4107  00F784  0793               	decf	printf@eexp& (0+255),f,b
  4108  00F786  A0D8               	btfss	status,0,c
  4109  00F788  0794               	decf	(printf@eexp+1)& (0+255),f,b
  4110  00F78A  EFE3  F07B         	goto	l4055
  4111  00F78E                     l4051:
  4112                           
  4113                           ;doprnt.c: 876: else if(tmpval.integ >= 10.0)
  4114  00F78E  C095  F001         	movff	printf@tmpval,___flge@ff1
  4115  00F792  C096  F002         	movff	printf@tmpval+1,___flge@ff1+1
  4116  00F796  C097  F003         	movff	printf@tmpval+2,___flge@ff1+2
  4117  00F79A  C098  F004         	movff	printf@tmpval+3,___flge@ff1+3
  4118  00F79E  0E00               	movlw	0
  4119  00F7A0  6E05               	movwf	___flge@ff2^0,c
  4120  00F7A2  0E00               	movlw	0
  4121  00F7A4  6E06               	movwf	(___flge@ff2+1)^0,c
  4122  00F7A6  0E20               	movlw	32
  4123  00F7A8  6E07               	movwf	(___flge@ff2+2)^0,c
  4124  00F7AA  0E41               	movlw	65
  4125  00F7AC  6E08               	movwf	(___flge@ff2+3)^0,c
  4126  00F7AE  ECFF  F066         	call	___flge	;wreg free
  4127  00F7B2  A0D8               	btfss	status,0,c
  4128  00F7B4  EFDE  F07B         	goto	u4041
  4129  00F7B8  EFE0  F07B         	goto	u4040
  4130  00F7BC                     u4041:
  4131  00F7BC  EFE3  F07B         	goto	l4055
  4132  00F7C0                     u4040:
  4133  00F7C0                     
  4134                           ;doprnt.c: 877: eexp++;
  4135  00F7C0  0100               	movlb	0	; () banked
  4136  00F7C2  4B93               	infsnz	printf@eexp& (0+255),f,b
  4137  00F7C4  2B94               	incf	(printf@eexp+1)& (0+255),f,b
  4138  00F7C6                     l4055:
  4139  00F7C6                     
  4140                           ;doprnt.c: 1139: fval += fround((unsigned int)prec);
  4141  00F7C6  C099  F058         	movff	printf@fval,___fladd@b
  4142  00F7CA  C09A  F059         	movff	printf@fval+1,___fladd@b+1
  4143  00F7CE  C09B  F05A         	movff	printf@fval+2,___fladd@b+2
  4144  00F7D2  C09C  F05B         	movff	printf@fval+3,___fladd@b+3
  4145  00F7D6  0E06               	movlw	6
  4146  00F7D8  EC74  F070         	call	_fround
  4147  00F7DC  C054  F05C         	movff	?_fround,___fladd@a
  4148  00F7E0  C055  F05D         	movff	?_fround+1,___fladd@a+1
  4149  00F7E4  C056  F05E         	movff	?_fround+2,___fladd@a+2
  4150  00F7E8  C057  F05F         	movff	?_fround+3,___fladd@a+3
  4151  00F7EC  EC40  F078         	call	___fladd	;wreg free
  4152  00F7F0  C058  F099         	movff	?___fladd,printf@fval
  4153  00F7F4  C059  F09A         	movff	?___fladd+1,printf@fval+1
  4154  00F7F8  C05A  F09B         	movff	?___fladd+2,printf@fval+2
  4155  00F7FC  C05B  F09C         	movff	?___fladd+3,printf@fval+3
  4156  00F800                     
  4157                           ;doprnt.c: 1142: if((eexp > 9)||(fval != 0 && (unsigned long)fval == 0 && eexp > 1)) {
  4158  00F800  0100               	movlb	0	; () banked
  4159  00F802  BF94               	btfsc	(printf@eexp+1)& (0+255),7,b
  4160  00F804  EF0F  F07C         	goto	u4050
  4161  00F808  5194               	movf	(printf@eexp+1)& (0+255),w,b
  4162  00F80A  E107               	bnz	u4051
  4163  00F80C  0E0A               	movlw	10
  4164  00F80E  5D93               	subwf	printf@eexp& (0+255),w,b
  4165  00F810  B0D8               	btfsc	status,0,c
  4166  00F812  EF0D  F07C         	goto	u4051
  4167  00F816  EF0F  F07C         	goto	u4050
  4168  00F81A                     u4051:
  4169  00F81A  EF4C  F07C         	goto	l4067
  4170  00F81E                     u4050:
  4171  00F81E                     
  4172                           ; BSR set to: 0
  4173  00F81E  C099  F027         	movff	printf@fval,___fleq@ff1
  4174  00F822  C09A  F028         	movff	printf@fval+1,___fleq@ff1+1
  4175  00F826  C09B  F029         	movff	printf@fval+2,___fleq@ff1+2
  4176  00F82A  C09C  F02A         	movff	printf@fval+3,___fleq@ff1+3
  4177  00F82E  0E00               	movlw	0
  4178  00F830  6E2B               	movwf	___fleq@ff2^0,c
  4179  00F832  0E00               	movlw	0
  4180  00F834  6E2C               	movwf	(___fleq@ff2+1)^0,c
  4181  00F836  0E00               	movlw	0
  4182  00F838  6E2D               	movwf	(___fleq@ff2+2)^0,c
  4183  00F83A  0E00               	movlw	0
  4184  00F83C  6E2E               	movwf	(___fleq@ff2+3)^0,c
  4185  00F83E  EC84  F065         	call	___fleq	;wreg free
  4186  00F842  B0D8               	btfsc	status,0,c
  4187  00F844  EF26  F07C         	goto	u4061
  4188  00F848  EF28  F07C         	goto	u4060
  4189  00F84C                     u4061:
  4190  00F84C  EFA1  F07C         	goto	l4081
  4191  00F850                     u4060:
  4192  00F850  C099  F00F         	movff	printf@fval,___fltol@f1
  4193  00F854  C09A  F010         	movff	printf@fval+1,___fltol@f1+1
  4194  00F858  C09B  F011         	movff	printf@fval+2,___fltol@f1+2
  4195  00F85C  C09C  F012         	movff	printf@fval+3,___fltol@f1+3
  4196  00F860  EC81  F067         	call	___fltol	;wreg free
  4197  00F864  500F               	movf	?___fltol^0,w,c
  4198  00F866  1010               	iorwf	(?___fltol+1)^0,w,c
  4199  00F868  1011               	iorwf	(?___fltol+2)^0,w,c
  4200  00F86A  1012               	iorwf	(?___fltol+3)^0,w,c
  4201  00F86C  A4D8               	btfss	status,2,c
  4202  00F86E  EF3B  F07C         	goto	u4071
  4203  00F872  EF3D  F07C         	goto	u4070
  4204  00F876                     u4071:
  4205  00F876  EFA1  F07C         	goto	l4081
  4206  00F87A                     u4070:
  4207  00F87A  0100               	movlb	0	; () banked
  4208  00F87C  BF94               	btfsc	(printf@eexp+1)& (0+255),7,b
  4209  00F87E  EF4A  F07C         	goto	u4081
  4210  00F882  5194               	movf	(printf@eexp+1)& (0+255),w,b
  4211  00F884  E109               	bnz	u4080
  4212  00F886  0E02               	movlw	2
  4213  00F888  5D93               	subwf	printf@eexp& (0+255),w,b
  4214  00F88A  A0D8               	btfss	status,0,c
  4215  00F88C  EF4A  F07C         	goto	u4081
  4216  00F890  EF4C  F07C         	goto	u4080
  4217  00F894                     u4081:
  4218  00F894  EFA1  F07C         	goto	l4081
  4219  00F898                     u4080:
  4220  00F898                     l4067:
  4221                           
  4222                           ; BSR set to: 0
  4223                           ;doprnt.c: 1146: if(tmpval.integ < 4.294967296){
  4224  00F898  C095  F001         	movff	printf@tmpval,___flge@ff1
  4225  00F89C  C096  F002         	movff	printf@tmpval+1,___flge@ff1+1
  4226  00F8A0  C097  F003         	movff	printf@tmpval+2,___flge@ff1+2
  4227  00F8A4  C098  F004         	movff	printf@tmpval+3,___flge@ff1+3
  4228  00F8A8  0E5F               	movlw	95
  4229  00F8AA  6E05               	movwf	___flge@ff2^0,c
  4230  00F8AC  0E70               	movlw	112
  4231  00F8AE  6E06               	movwf	(___flge@ff2+1)^0,c
  4232  00F8B0  0E89               	movlw	137
  4233  00F8B2  6E07               	movwf	(___flge@ff2+2)^0,c
  4234  00F8B4  0E40               	movlw	64
  4235  00F8B6  6E08               	movwf	(___flge@ff2+3)^0,c
  4236  00F8B8  ECFF  F066         	call	___flge	;wreg free
  4237  00F8BC  B0D8               	btfsc	status,0,c
  4238  00F8BE  EF63  F07C         	goto	u4091
  4239  00F8C2  EF65  F07C         	goto	u4090
  4240  00F8C6                     u4091:
  4241  00F8C6  EF6C  F07C         	goto	l4071
  4242  00F8CA                     u4090:
  4243  00F8CA                     
  4244                           ;doprnt.c: 1147: eexp -= (sizeof dpowers/sizeof dpowers[0])-1;
  4245  00F8CA  0100               	movlb	0	; () banked
  4246  00F8CC  0EF7               	movlw	247
  4247  00F8CE  2793               	addwf	printf@eexp& (0+255),f,b
  4248  00F8D0  0EFF               	movlw	255
  4249  00F8D2  2394               	addwfc	(printf@eexp+1)& (0+255),f,b
  4250                           
  4251                           ;doprnt.c: 1148: }else{
  4252  00F8D4  EF71  F07C         	goto	l4073
  4253  00F8D8                     l4071:
  4254                           
  4255                           ;doprnt.c: 1149: eexp -= (sizeof dpowers/sizeof dpowers[0])-2;
  4256  00F8D8  0100               	movlb	0	; () banked
  4257  00F8DA  0EF8               	movlw	248
  4258  00F8DC  2793               	addwf	printf@eexp& (0+255),f,b
  4259  00F8DE  0EFF               	movlw	255
  4260  00F8E0  2394               	addwfc	(printf@eexp+1)& (0+255),f,b
  4261  00F8E2                     l4073:
  4262                           
  4263                           ; BSR set to: 0
  4264                           ;doprnt.c: 1152: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
  4265  00F8E2  5193               	movf	printf@eexp& (0+255),w,b
  4266  00F8E4  ECE6  F075         	call	_scale
  4267  00F8E8  C054  F095         	movff	?_scale,printf@tmpval
  4268  00F8EC  C055  F096         	movff	?_scale+1,printf@tmpval+1
  4269  00F8F0  C056  F097         	movff	?_scale+2,printf@tmpval+2
  4270  00F8F4  C057  F098         	movff	?_scale+3,printf@tmpval+3
  4271  00F8F8  C099  F001         	movff	printf@fval,__div_to_l_@f1
  4272  00F8FC  C09A  F002         	movff	printf@fval+1,__div_to_l_@f1+1
  4273  00F900  C09B  F003         	movff	printf@fval+2,__div_to_l_@f1+2
  4274  00F904  C09C  F004         	movff	printf@fval+3,__div_to_l_@f1+3
  4275  00F908  C095  F005         	movff	printf@tmpval,__div_to_l_@f2
  4276  00F90C  C096  F006         	movff	printf@tmpval+1,__div_to_l_@f2+1
  4277  00F910  C097  F007         	movff	printf@tmpval+2,__div_to_l_@f2+2
  4278  00F914  C098  F008         	movff	printf@tmpval+3,__div_to_l_@f2+3
  4279  00F918  ECD1  F069         	call	__div_to_l_	;wreg free
  4280  00F91C  C001  F08F         	movff	?__div_to_l_,printf@val
  4281  00F920  C002  F090         	movff	?__div_to_l_+1,printf@val+1
  4282  00F924  C003  F091         	movff	?__div_to_l_+2,printf@val+2
  4283  00F928  C004  F092         	movff	?__div_to_l_+3,printf@val+3
  4284  00F92C                     
  4285                           ;doprnt.c: 1155: fval = 0.0;
  4286  00F92C  0E00               	movlw	0
  4287  00F92E  0100               	movlb	0	; () banked
  4288  00F930  6F99               	movwf	printf@fval& (0+255),b
  4289  00F932  0E00               	movlw	0
  4290  00F934  6F9A               	movwf	(printf@fval+1)& (0+255),b
  4291  00F936  0E00               	movlw	0
  4292  00F938  6F9B               	movwf	(printf@fval+2)& (0+255),b
  4293  00F93A  0E00               	movlw	0
  4294  00F93C  6F9C               	movwf	(printf@fval+3)& (0+255),b
  4295                           
  4296                           ;doprnt.c: 1156: } else {
  4297  00F93E  EFDD  F07C         	goto	l4085
  4298  00F942                     l4081:
  4299                           
  4300                           ;doprnt.c: 1157: val = (unsigned long)fval;
  4301  00F942  C099  F00F         	movff	printf@fval,___fltol@f1
  4302  00F946  C09A  F010         	movff	printf@fval+1,___fltol@f1+1
  4303  00F94A  C09B  F011         	movff	printf@fval+2,___fltol@f1+2
  4304  00F94E  C09C  F012         	movff	printf@fval+3,___fltol@f1+3
  4305  00F952  EC81  F067         	call	___fltol	;wreg free
  4306  00F956  C00F  F08F         	movff	?___fltol,printf@val
  4307  00F95A  C010  F090         	movff	?___fltol+1,printf@val+1
  4308  00F95E  C011  F091         	movff	?___fltol+2,printf@val+2
  4309  00F962  C012  F092         	movff	?___fltol+3,printf@val+3
  4310                           
  4311                           ;doprnt.c: 1158: fval -= (double)val;
  4312  00F966  C099  F071         	movff	printf@fval,___flsub@b
  4313  00F96A  C09A  F072         	movff	printf@fval+1,___flsub@b+1
  4314  00F96E  C09B  F073         	movff	printf@fval+2,___flsub@b+2
  4315  00F972  C09C  F074         	movff	printf@fval+3,___flsub@b+3
  4316  00F976  C08F  F019         	movff	printf@val,___xxtofl@val
  4317  00F97A  C090  F01A         	movff	printf@val+1,___xxtofl@val+1
  4318  00F97E  C091  F01B         	movff	printf@val+2,___xxtofl@val+2
  4319  00F982  C092  F01C         	movff	printf@val+3,___xxtofl@val+3
  4320  00F986  0E00               	movlw	0
  4321  00F988  ECF1  F06B         	call	___xxtofl
  4322  00F98C  C019  F075         	movff	?___xxtofl,___flsub@a
  4323  00F990  C01A  F076         	movff	?___xxtofl+1,___flsub@a+1
  4324  00F994  C01B  F077         	movff	?___xxtofl+2,___flsub@a+2
  4325  00F998  C01C  F078         	movff	?___xxtofl+3,___flsub@a+3
  4326  00F99C  EC63  F063         	call	___flsub	;wreg free
  4327  00F9A0  C071  F099         	movff	?___flsub,printf@fval
  4328  00F9A4  C072  F09A         	movff	?___flsub+1,printf@fval+1
  4329  00F9A8  C073  F09B         	movff	?___flsub+2,printf@fval+2
  4330  00F9AC  C074  F09C         	movff	?___flsub+3,printf@fval+3
  4331  00F9B0                     
  4332                           ;doprnt.c: 1159: eexp = 0;
  4333  00F9B0  0E00               	movlw	0
  4334  00F9B2  0100               	movlb	0	; () banked
  4335  00F9B4  6F94               	movwf	(printf@eexp+1)& (0+255),b
  4336  00F9B6  0E00               	movlw	0
  4337  00F9B8  6F93               	movwf	printf@eexp& (0+255),b
  4338  00F9BA                     l4085:
  4339                           
  4340                           ; BSR set to: 0
  4341                           ;doprnt.c: 1160: };doprnt.c: 1162: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ;
      +                           c++)
  4342  00F9BA  0E01               	movlw	1
  4343  00F9BC  6F9D               	movwf	printf@c& (0+255),b
  4344  00F9BE                     l4091:
  4345                           
  4346                           ; BSR set to: 0
  4347                           ;doprnt.c: 1163: if(val < dpowers[c])
  4348  00F9BE  519D               	movf	printf@c& (0+255),w,b
  4349  00F9C0  0D04               	mullw	4
  4350  00F9C2  0E07               	movlw	low _dpowers
  4351  00F9C4  24F3               	addwf	243,w,c
  4352  00F9C6  6EF6               	movwf	tblptrl,c
  4353  00F9C8  0EFF               	movlw	high _dpowers
  4354  00F9CA  20F4               	addwfc	244,w,c
  4355  00F9CC  6EF7               	movwf	tblptrh,c
  4356  00F9CE                     	if	1	;There are 3 active tblptr bytes
  4357  00F9CE  6AF8               	clrf	tblptru,c
  4358  00F9D0  0E00               	movlw	low (__mediumconst shr (0+16))
  4359  00F9D2  22F8               	addwfc	tblptru,f,c
  4360  00F9D4                     	endif
  4361  00F9D4  0009               	tblrd		*+
  4362  00F9D6  50F5               	movf	tablat,w,c
  4363  00F9D8  5D8F               	subwf	printf@val& (0+255),w,b
  4364  00F9DA  0009               	tblrd		*+
  4365  00F9DC  50F5               	movf	tablat,w,c
  4366  00F9DE  5990               	subwfb	(printf@val+1)& (0+255),w,b
  4367  00F9E0  0009               	tblrd		*+
  4368  00F9E2  50F5               	movf	tablat,w,c
  4369  00F9E4  5991               	subwfb	(printf@val+2)& (0+255),w,b
  4370  00F9E6  0009               	tblrd		*+
  4371  00F9E8  50F5               	movf	tablat,w,c
  4372  00F9EA  5992               	subwfb	(printf@val+3)& (0+255),w,b
  4373  00F9EC  B0D8               	btfsc	status,0,c
  4374  00F9EE  EFFB  F07C         	goto	u4101
  4375  00F9F2  EFFD  F07C         	goto	u4100
  4376  00F9F6                     u4101:
  4377  00F9F6  EFFF  F07C         	goto	l4095
  4378  00F9FA                     u4100:
  4379  00F9FA  EF09  F07D         	goto	l4099
  4380  00F9FE                     l4095:
  4381                           
  4382                           ; BSR set to: 0
  4383  00F9FE  2B9D               	incf	printf@c& (0+255),f,b
  4384  00FA00                     
  4385                           ; BSR set to: 0
  4386  00FA00  0E0A               	movlw	10
  4387  00FA02  199D               	xorwf	printf@c& (0+255),w,b
  4388  00FA04  A4D8               	btfss	status,2,c
  4389  00FA06  EF07  F07D         	goto	u4111
  4390  00FA0A  EF09  F07D         	goto	u4110
  4391  00FA0E                     u4111:
  4392  00FA0E  EFDF  F07C         	goto	l4091
  4393  00FA12                     u4110:
  4394  00FA12                     l4099:
  4395                           
  4396                           ; BSR set to: 0
  4397                           ;doprnt.c: 1201: {;doprnt.c: 1214: if(flag & 0x03)
  4398  00FA12  0E03               	movlw	3
  4399  00FA14  158B               	andwf	printf@flag& (0+255),w,b
  4400  00FA16  6F83               	movwf	??_printf& (0+255),b
  4401  00FA18  0E00               	movlw	0
  4402  00FA1A  158C               	andwf	(printf@flag+1)& (0+255),w,b
  4403  00FA1C  6F84               	movwf	(??_printf+1)& (0+255),b
  4404  00FA1E  5183               	movf	??_printf& (0+255),w,b
  4405  00FA20  1184               	iorwf	(??_printf+1)& (0+255),w,b
  4406  00FA22  B4D8               	btfsc	status,2,c
  4407  00FA24  EF16  F07D         	goto	u4121
  4408  00FA28  EF18  F07D         	goto	u4120
  4409  00FA2C                     u4121:
  4410  00FA2C  EF69  F07D         	goto	l4109
  4411  00FA30                     u4120:
  4412  00FA30                     
  4413                           ; BSR set to: 0
  4414                           ;doprnt.c: 1216: (putch('-') );
  4415  00FA30  0E2D               	movlw	45
  4416  00FA32  ECBF  F062         	call	_putch
  4417  00FA36  EF69  F07D         	goto	l4109
  4418  00FA3A                     l4103:
  4419                           
  4420                           ; BSR set to: 0
  4421                           ;doprnt.c: 1226: {;doprnt.c: 1227: tmpval.vd = val/dpowers[c];
  4422  00FA3A  C08F  F001         	movff	printf@val,___lldiv@dividend
  4423  00FA3E  C090  F002         	movff	printf@val+1,___lldiv@dividend+1
  4424  00FA42  C091  F003         	movff	printf@val+2,___lldiv@dividend+2
  4425  00FA46  C092  F004         	movff	printf@val+3,___lldiv@dividend+3
  4426  00FA4A  519D               	movf	printf@c& (0+255),w,b
  4427  00FA4C  0D04               	mullw	4
  4428  00FA4E  0E07               	movlw	low _dpowers
  4429  00FA50  24F3               	addwf	243,w,c
  4430  00FA52  6EF6               	movwf	tblptrl,c
  4431  00FA54  0EFF               	movlw	high _dpowers
  4432  00FA56  20F4               	addwfc	244,w,c
  4433  00FA58  6EF7               	movwf	tblptrh,c
  4434  00FA5A                     	if	1	;There are 3 active tblptr bytes
  4435  00FA5A  6AF8               	clrf	tblptru,c
  4436  00FA5C  0E00               	movlw	low (__mediumconst shr (0+16))
  4437  00FA5E  22F8               	addwfc	tblptru,f,c
  4438  00FA60                     	endif
  4439  00FA60  0009               	tblrd		*+
  4440  00FA62  006F FFD4  F005    	movff	tablat,___lldiv@divisor
  4441  00FA68  0009               	tblrd		*+
  4442  00FA6A  006F FFD4  F006    	movff	tablat,___lldiv@divisor+1
  4443  00FA70  0009               	tblrd		*+
  4444  00FA72  006F FFD4  F007    	movff	tablat,___lldiv@divisor+2
  4445  00FA78  000A               	tblrd		*-
  4446  00FA7A  006F FFD4  F008    	movff	tablat,___lldiv@divisor+3
  4447  00FA80  EC32  F065         	call	___lldiv	;wreg free
  4448  00FA84  C001  F095         	movff	?___lldiv,printf@tmpval
  4449  00FA88  C002  F096         	movff	?___lldiv+1,printf@tmpval+1
  4450  00FA8C  C003  F097         	movff	?___lldiv+2,printf@tmpval+2
  4451  00FA90  C004  F098         	movff	?___lldiv+3,printf@tmpval+3
  4452  00FA94                     
  4453                           ;doprnt.c: 1228: tmpval.vd %= 10;
  4454  00FA94  C095  F00E         	movff	printf@tmpval,___llmod@dividend
  4455  00FA98  C096  F00F         	movff	printf@tmpval+1,___llmod@dividend+1
  4456  00FA9C  C097  F010         	movff	printf@tmpval+2,___llmod@dividend+2
  4457  00FAA0  C098  F011         	movff	printf@tmpval+3,___llmod@dividend+3
  4458  00FAA4  0E0A               	movlw	10
  4459  00FAA6  6E12               	movwf	___llmod@divisor^0,c
  4460  00FAA8  0E00               	movlw	0
  4461  00FAAA  6E13               	movwf	(___llmod@divisor+1)^0,c
  4462  00FAAC  0E00               	movlw	0
  4463  00FAAE  6E14               	movwf	(___llmod@divisor+2)^0,c
  4464  00FAB0  0E00               	movlw	0
  4465  00FAB2  6E15               	movwf	(___llmod@divisor+3)^0,c
  4466  00FAB4  ECA2  F064         	call	___llmod	;wreg free
  4467  00FAB8  C00E  F095         	movff	?___llmod,printf@tmpval
  4468  00FABC  C00F  F096         	movff	?___llmod+1,printf@tmpval+1
  4469  00FAC0  C010  F097         	movff	?___llmod+2,printf@tmpval+2
  4470  00FAC4  C011  F098         	movff	?___llmod+3,printf@tmpval+3
  4471  00FAC8                     
  4472                           ;doprnt.c: 1229: (putch('0' + tmpval.vd) );
  4473  00FAC8  0100               	movlb	0	; () banked
  4474  00FACA  5195               	movf	printf@tmpval& (0+255),w,b
  4475  00FACC  0F30               	addlw	48
  4476  00FACE  ECBF  F062         	call	_putch
  4477  00FAD2                     l4109:
  4478  00FAD2  0100               	movlb	0	; () banked
  4479  00FAD4  079D               	decf	printf@c& (0+255),f,b
  4480  00FAD6  299D               	incf	printf@c& (0+255),w,b
  4481  00FAD8  A4D8               	btfss	status,2,c
  4482  00FADA  EF71  F07D         	goto	u4131
  4483  00FADE  EF73  F07D         	goto	u4130
  4484  00FAE2                     u4131:
  4485  00FAE2  EF1D  F07D         	goto	l4103
  4486  00FAE6                     u4130:
  4487  00FAE6  EF7C  F07D         	goto	l4115
  4488  00FAEA                     l4111:
  4489                           
  4490                           ; BSR set to: 0
  4491                           ;doprnt.c: 1234: (putch('0') );
  4492  00FAEA  0E30               	movlw	48
  4493  00FAEC  ECBF  F062         	call	_putch
  4494  00FAF0                     
  4495                           ;doprnt.c: 1235: eexp--;
  4496  00FAF0  0100               	movlb	0	; () banked
  4497  00FAF2  0793               	decf	printf@eexp& (0+255),f,b
  4498  00FAF4  A0D8               	btfss	status,0,c
  4499  00FAF6  0794               	decf	(printf@eexp+1)& (0+255),f,b
  4500  00FAF8                     l4115:
  4501                           
  4502                           ; BSR set to: 0
  4503  00FAF8  BF94               	btfsc	(printf@eexp+1)& (0+255),7,b
  4504  00FAFA  EF89  F07D         	goto	u4140
  4505  00FAFE  5194               	movf	(printf@eexp+1)& (0+255),w,b
  4506  00FB00  E106               	bnz	u4141
  4507  00FB02  0593               	decf	printf@eexp& (0+255),w,b
  4508  00FB04  B0D8               	btfsc	status,0,c
  4509  00FB06  EF87  F07D         	goto	u4141
  4510  00FB0A  EF89  F07D         	goto	u4140
  4511  00FB0E                     u4141:
  4512  00FB0E  EF75  F07D         	goto	l4111
  4513  00FB12                     u4140:
  4514  00FB12                     
  4515                           ; BSR set to: 0
  4516                           ;doprnt.c: 1236: };doprnt.c: 1237: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2)
      +                          )
  4517  00FB12  BF8E               	btfsc	(printf@prec+1)& (0+255),7,b
  4518  00FB14  EF95  F07D         	goto	u4151
  4519  00FB18  518E               	movf	(printf@prec+1)& (0+255),w,b
  4520  00FB1A  E109               	bnz	u4150
  4521  00FB1C  0E09               	movlw	9
  4522  00FB1E  5D8D               	subwf	printf@prec& (0+255),w,b
  4523  00FB20  A0D8               	btfss	status,0,c
  4524  00FB22  EF95  F07D         	goto	u4151
  4525  00FB26  EF97  F07D         	goto	u4150
  4526  00FB2A                     u4151:
  4527  00FB2A  EF9B  F07D         	goto	l421
  4528  00FB2E                     u4150:
  4529  00FB2E                     
  4530                           ; BSR set to: 0
  4531                           ;doprnt.c: 1238: c = (sizeof dpowers/sizeof dpowers[0])-2;
  4532  00FB2E  0E08               	movlw	8
  4533  00FB30  6F9D               	movwf	printf@c& (0+255),b
  4534  00FB32  EF9D  F07D         	goto	l4121
  4535  00FB36                     l421:
  4536                           
  4537                           ; BSR set to: 0
  4538                           ;doprnt.c: 1239: else;doprnt.c: 1240: c = (char)prec;
  4539  00FB36  C08D  F09D         	movff	printf@prec,printf@c
  4540  00FB3A                     l4121:
  4541                           
  4542                           ; BSR set to: 0
  4543                           ;doprnt.c: 1241: prec -= (int)c;
  4544  00FB3A  519D               	movf	printf@c& (0+255),w,b
  4545  00FB3C  5F8D               	subwf	printf@prec& (0+255),f,b
  4546  00FB3E  0E00               	movlw	0
  4547  00FB40  5B8E               	subwfb	(printf@prec+1)& (0+255),f,b
  4548  00FB42                     
  4549                           ; BSR set to: 0
  4550                           ;doprnt.c: 1245: if(c)
  4551  00FB42  519D               	movf	printf@c& (0+255),w,b
  4552  00FB44  B4D8               	btfsc	status,2,c
  4553  00FB46  EFA7  F07D         	goto	u4161
  4554  00FB4A  EFA9  F07D         	goto	u4160
  4555  00FB4E                     u4161:
  4556  00FB4E  EFAC  F07D         	goto	l4127
  4557  00FB52                     u4160:
  4558  00FB52                     
  4559                           ; BSR set to: 0
  4560                           ;doprnt.c: 1247: (putch('.') );
  4561  00FB52  0E2E               	movlw	46
  4562  00FB54  ECBF  F062         	call	_putch
  4563  00FB58                     l4127:
  4564                           
  4565                           ;doprnt.c: 1253: val = (unsigned long)(fval * scale((signed char)c));
  4566  00FB58  0100               	movlb	0	; () banked
  4567  00FB5A  519D               	movf	printf@c& (0+255),w,b
  4568  00FB5C  ECE6  F075         	call	_scale
  4569  00FB60  C054  F085         	movff	?_scale,_printf$1469
  4570  00FB64  C055  F086         	movff	?_scale+1,_printf$1469+1
  4571  00FB68  C056  F087         	movff	?_scale+2,_printf$1469+2
  4572  00FB6C  C057  F088         	movff	?_scale+3,_printf$1469+3
  4573  00FB70                     
  4574                           ;doprnt.c: 1253: val = (unsigned long)(fval * scale((signed char)c));
  4575  00FB70  C099  F03F         	movff	printf@fval,___flmul@a
  4576  00FB74  C09A  F040         	movff	printf@fval+1,___flmul@a+1
  4577  00FB78  C09B  F041         	movff	printf@fval+2,___flmul@a+2
  4578  00FB7C  C09C  F042         	movff	printf@fval+3,___flmul@a+3
  4579  00FB80  C085  F03B         	movff	_printf$1469,___flmul@b
  4580  00FB84  C086  F03C         	movff	_printf$1469+1,___flmul@b+1
  4581  00FB88  C087  F03D         	movff	_printf$1469+2,___flmul@b+2
  4582  00FB8C  C088  F03E         	movff	_printf$1469+3,___flmul@b+3
  4583  00FB90  ECBF  F073         	call	___flmul	;wreg free
  4584  00FB94  C03B  F00F         	movff	?___flmul,___fltol@f1
  4585  00FB98  C03C  F010         	movff	?___flmul+1,___fltol@f1+1
  4586  00FB9C  C03D  F011         	movff	?___flmul+2,___fltol@f1+2
  4587  00FBA0  C03E  F012         	movff	?___flmul+3,___fltol@f1+3
  4588  00FBA4  EC81  F067         	call	___fltol	;wreg free
  4589  00FBA8  C00F  F08F         	movff	?___fltol,printf@val
  4590  00FBAC  C010  F090         	movff	?___fltol+1,printf@val+1
  4591  00FBB0  C011  F091         	movff	?___fltol+2,printf@val+2
  4592  00FBB4  C012  F092         	movff	?___fltol+3,printf@val+3
  4593                           
  4594                           ;doprnt.c: 1254: while(c--) {
  4595  00FBB8  EF58  F07E         	goto	l4137
  4596  00FBBC                     l4131:
  4597                           
  4598                           ; BSR set to: 0
  4599                           ;doprnt.c: 1255: tmpval.vd = val/dpowers[c];
  4600  00FBBC  C08F  F001         	movff	printf@val,___lldiv@dividend
  4601  00FBC0  C090  F002         	movff	printf@val+1,___lldiv@dividend+1
  4602  00FBC4  C091  F003         	movff	printf@val+2,___lldiv@dividend+2
  4603  00FBC8  C092  F004         	movff	printf@val+3,___lldiv@dividend+3
  4604  00FBCC  519D               	movf	printf@c& (0+255),w,b
  4605  00FBCE  0D04               	mullw	4
  4606  00FBD0  0E07               	movlw	low _dpowers
  4607  00FBD2  24F3               	addwf	243,w,c
  4608  00FBD4  6EF6               	movwf	tblptrl,c
  4609  00FBD6  0EFF               	movlw	high _dpowers
  4610  00FBD8  20F4               	addwfc	244,w,c
  4611  00FBDA  6EF7               	movwf	tblptrh,c
  4612  00FBDC                     	if	1	;There are 3 active tblptr bytes
  4613  00FBDC  6AF8               	clrf	tblptru,c
  4614  00FBDE  0E00               	movlw	low (__mediumconst shr (0+16))
  4615  00FBE0  22F8               	addwfc	tblptru,f,c
  4616  00FBE2                     	endif
  4617  00FBE2  0009               	tblrd		*+
  4618  00FBE4  006F FFD4  F005    	movff	tablat,___lldiv@divisor
  4619  00FBEA  0009               	tblrd		*+
  4620  00FBEC  006F FFD4  F006    	movff	tablat,___lldiv@divisor+1
  4621  00FBF2  0009               	tblrd		*+
  4622  00FBF4  006F FFD4  F007    	movff	tablat,___lldiv@divisor+2
  4623  00FBFA  000A               	tblrd		*-
  4624  00FBFC  006F FFD4  F008    	movff	tablat,___lldiv@divisor+3
  4625  00FC02  EC32  F065         	call	___lldiv	;wreg free
  4626  00FC06  C001  F095         	movff	?___lldiv,printf@tmpval
  4627  00FC0A  C002  F096         	movff	?___lldiv+1,printf@tmpval+1
  4628  00FC0E  C003  F097         	movff	?___lldiv+2,printf@tmpval+2
  4629  00FC12  C004  F098         	movff	?___lldiv+3,printf@tmpval+3
  4630  00FC16                     
  4631                           ;doprnt.c: 1256: tmpval.vd %= 10;
  4632  00FC16  C095  F00E         	movff	printf@tmpval,___llmod@dividend
  4633  00FC1A  C096  F00F         	movff	printf@tmpval+1,___llmod@dividend+1
  4634  00FC1E  C097  F010         	movff	printf@tmpval+2,___llmod@dividend+2
  4635  00FC22  C098  F011         	movff	printf@tmpval+3,___llmod@dividend+3
  4636  00FC26  0E0A               	movlw	10
  4637  00FC28  6E12               	movwf	___llmod@divisor^0,c
  4638  00FC2A  0E00               	movlw	0
  4639  00FC2C  6E13               	movwf	(___llmod@divisor+1)^0,c
  4640  00FC2E  0E00               	movlw	0
  4641  00FC30  6E14               	movwf	(___llmod@divisor+2)^0,c
  4642  00FC32  0E00               	movlw	0
  4643  00FC34  6E15               	movwf	(___llmod@divisor+3)^0,c
  4644  00FC36  ECA2  F064         	call	___llmod	;wreg free
  4645  00FC3A  C00E  F095         	movff	?___llmod,printf@tmpval
  4646  00FC3E  C00F  F096         	movff	?___llmod+1,printf@tmpval+1
  4647  00FC42  C010  F097         	movff	?___llmod+2,printf@tmpval+2
  4648  00FC46  C011  F098         	movff	?___llmod+3,printf@tmpval+3
  4649  00FC4A                     
  4650                           ;doprnt.c: 1257: (putch('0' + tmpval.vd) );
  4651  00FC4A  0100               	movlb	0	; () banked
  4652  00FC4C  5195               	movf	printf@tmpval& (0+255),w,b
  4653  00FC4E  0F30               	addlw	48
  4654  00FC50  ECBF  F062         	call	_putch
  4655                           
  4656                           ;doprnt.c: 1258: val %= dpowers[c];
  4657  00FC54  C08F  F00E         	movff	printf@val,___llmod@dividend
  4658  00FC58  C090  F00F         	movff	printf@val+1,___llmod@dividend+1
  4659  00FC5C  C091  F010         	movff	printf@val+2,___llmod@dividend+2
  4660  00FC60  C092  F011         	movff	printf@val+3,___llmod@dividend+3
  4661  00FC64  0100               	movlb	0	; () banked
  4662  00FC66  519D               	movf	printf@c& (0+255),w,b
  4663  00FC68  0D04               	mullw	4
  4664  00FC6A  0E07               	movlw	low _dpowers
  4665  00FC6C  24F3               	addwf	243,w,c
  4666  00FC6E  6EF6               	movwf	tblptrl,c
  4667  00FC70  0EFF               	movlw	high _dpowers
  4668  00FC72  20F4               	addwfc	244,w,c
  4669  00FC74  6EF7               	movwf	tblptrh,c
  4670  00FC76                     	if	1	;There are 3 active tblptr bytes
  4671  00FC76  6AF8               	clrf	tblptru,c
  4672  00FC78  0E00               	movlw	low (__mediumconst shr (0+16))
  4673  00FC7A  22F8               	addwfc	tblptru,f,c
  4674  00FC7C                     	endif
  4675  00FC7C  0009               	tblrd		*+
  4676  00FC7E  006F FFD4  F012    	movff	tablat,___llmod@divisor
  4677  00FC84  0009               	tblrd		*+
  4678  00FC86  006F FFD4  F013    	movff	tablat,___llmod@divisor+1
  4679  00FC8C  0009               	tblrd		*+
  4680  00FC8E  006F FFD4  F014    	movff	tablat,___llmod@divisor+2
  4681  00FC94  000A               	tblrd		*-
  4682  00FC96  006F FFD4  F015    	movff	tablat,___llmod@divisor+3
  4683  00FC9C  ECA2  F064         	call	___llmod	;wreg free
  4684  00FCA0  C00E  F08F         	movff	?___llmod,printf@val
  4685  00FCA4  C00F  F090         	movff	?___llmod+1,printf@val+1
  4686  00FCA8  C010  F091         	movff	?___llmod+2,printf@val+2
  4687  00FCAC  C011  F092         	movff	?___llmod+3,printf@val+3
  4688  00FCB0                     l4137:
  4689  00FCB0  0100               	movlb	0	; () banked
  4690  00FCB2  079D               	decf	printf@c& (0+255),f,b
  4691  00FCB4  299D               	incf	printf@c& (0+255),w,b
  4692  00FCB6  A4D8               	btfss	status,2,c
  4693  00FCB8  EF60  F07E         	goto	u4171
  4694  00FCBC  EF62  F07E         	goto	u4170
  4695  00FCC0                     u4171:
  4696  00FCC0  EFDE  F07D         	goto	l4131
  4697  00FCC4                     u4170:
  4698  00FCC4  EF6B  F07E         	goto	l4143
  4699  00FCC8                     l4139:
  4700                           
  4701                           ; BSR set to: 0
  4702                           ;doprnt.c: 1262: (putch('0') );
  4703  00FCC8  0E30               	movlw	48
  4704  00FCCA  ECBF  F062         	call	_putch
  4705  00FCCE                     
  4706                           ;doprnt.c: 1263: prec--;
  4707  00FCCE  0100               	movlb	0	; () banked
  4708  00FCD0  078D               	decf	printf@prec& (0+255),f,b
  4709  00FCD2  A0D8               	btfss	status,0,c
  4710  00FCD4  078E               	decf	(printf@prec+1)& (0+255),f,b
  4711  00FCD6                     l4143:
  4712                           
  4713                           ; BSR set to: 0
  4714  00FCD6  518D               	movf	printf@prec& (0+255),w,b
  4715  00FCD8  118E               	iorwf	(printf@prec+1)& (0+255),w,b
  4716  00FCDA  A4D8               	btfss	status,2,c
  4717  00FCDC  EF72  F07E         	goto	u4181
  4718  00FCE0  EF74  F07E         	goto	u4180
  4719  00FCE4                     u4181:
  4720  00FCE4  EF64  F07E         	goto	l4139
  4721  00FCE8                     u4180:
  4722  00FCE8  EF24  F07F         	goto	l4175
  4723  00FCEC                     l4145:
  4724                           
  4725                           ; BSR set to: 0
  4726                           ;doprnt.c: 1272: };doprnt.c: 1299: {;doprnt.c: 1312: val = (*(unsigned *)__va_arg((*(uns
      +                          igned **)ap), (unsigned)0));
  4727  00FCEC  0060  F227  FFD9   	movff	printf@ap,fsr2l
  4728  00FCF2  0060  F22B  FFDA   	movff	printf@ap+1,fsr2h
  4729  00FCF8  006F FF78  F083    	movff	postinc2,??_printf
  4730  00FCFE  006F FF74  F084    	movff	postdec2,??_printf+1
  4731  00FD04  C083  F08F         	movff	??_printf,printf@val
  4732  00FD08  C084  F090         	movff	??_printf+1,printf@val+1
  4733  00FD0C  6B91               	clrf	(printf@val+2)& (0+255),b
  4734  00FD0E  6B92               	clrf	(printf@val+3)& (0+255),b
  4735  00FD10                     
  4736                           ; BSR set to: 0
  4737  00FD10  0E02               	movlw	2
  4738  00FD12  2789               	addwf	printf@ap& (0+255),f,b
  4739  00FD14  0E00               	movlw	0
  4740  00FD16  238A               	addwfc	(printf@ap+1)& (0+255),f,b
  4741  00FD18                     
  4742                           ; BSR set to: 0
  4743                           ;doprnt.c: 1313: };doprnt.c: 1331: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c
      +                          ++)
  4744  00FD18  0E01               	movlw	1
  4745  00FD1A  6F9D               	movwf	printf@c& (0+255),b
  4746  00FD1C                     l4155:
  4747                           
  4748                           ; BSR set to: 0
  4749                           ;doprnt.c: 1332: if(val < dpowers[c])
  4750  00FD1C  519D               	movf	printf@c& (0+255),w,b
  4751  00FD1E  0D04               	mullw	4
  4752  00FD20  0E07               	movlw	low _dpowers
  4753  00FD22  24F3               	addwf	243,w,c
  4754  00FD24  6EF6               	movwf	tblptrl,c
  4755  00FD26  0EFF               	movlw	high _dpowers
  4756  00FD28  20F4               	addwfc	244,w,c
  4757  00FD2A  6EF7               	movwf	tblptrh,c
  4758  00FD2C                     	if	1	;There are 3 active tblptr bytes
  4759  00FD2C  6AF8               	clrf	tblptru,c
  4760  00FD2E  0E00               	movlw	low (__mediumconst shr (0+16))
  4761  00FD30  22F8               	addwfc	tblptru,f,c
  4762  00FD32                     	endif
  4763  00FD32  0009               	tblrd		*+
  4764  00FD34  50F5               	movf	tablat,w,c
  4765  00FD36  5D8F               	subwf	printf@val& (0+255),w,b
  4766  00FD38  0009               	tblrd		*+
  4767  00FD3A  50F5               	movf	tablat,w,c
  4768  00FD3C  5990               	subwfb	(printf@val+1)& (0+255),w,b
  4769  00FD3E  0009               	tblrd		*+
  4770  00FD40  50F5               	movf	tablat,w,c
  4771  00FD42  5991               	subwfb	(printf@val+2)& (0+255),w,b
  4772  00FD44  0009               	tblrd		*+
  4773  00FD46  50F5               	movf	tablat,w,c
  4774  00FD48  5992               	subwfb	(printf@val+3)& (0+255),w,b
  4775  00FD4A  B0D8               	btfsc	status,0,c
  4776  00FD4C  EFAA  F07E         	goto	u4191
  4777  00FD50  EFAC  F07E         	goto	u4190
  4778  00FD54                     u4191:
  4779  00FD54  EFAE  F07E         	goto	l4159
  4780  00FD58                     u4190:
  4781  00FD58  EFB8  F07E         	goto	l4163
  4782  00FD5C                     l4159:
  4783                           
  4784                           ; BSR set to: 0
  4785  00FD5C  2B9D               	incf	printf@c& (0+255),f,b
  4786  00FD5E                     
  4787                           ; BSR set to: 0
  4788  00FD5E  0E0A               	movlw	10
  4789  00FD60  199D               	xorwf	printf@c& (0+255),w,b
  4790  00FD62  A4D8               	btfss	status,2,c
  4791  00FD64  EFB6  F07E         	goto	u4201
  4792  00FD68  EFB8  F07E         	goto	u4200
  4793  00FD6C                     u4201:
  4794  00FD6C  EF8E  F07E         	goto	l4155
  4795  00FD70                     u4200:
  4796  00FD70                     l4163:
  4797                           
  4798                           ; BSR set to: 0
  4799                           ;doprnt.c: 1448: {;doprnt.c: 1464: if(flag & 0x03)
  4800  00FD70  0E03               	movlw	3
  4801  00FD72  158B               	andwf	printf@flag& (0+255),w,b
  4802  00FD74  6F83               	movwf	??_printf& (0+255),b
  4803  00FD76  0E00               	movlw	0
  4804  00FD78  158C               	andwf	(printf@flag+1)& (0+255),w,b
  4805  00FD7A  6F84               	movwf	(??_printf+1)& (0+255),b
  4806  00FD7C  5183               	movf	??_printf& (0+255),w,b
  4807  00FD7E  1184               	iorwf	(??_printf+1)& (0+255),w,b
  4808  00FD80  B4D8               	btfsc	status,2,c
  4809  00FD82  EFC5  F07E         	goto	u4211
  4810  00FD86  EFC7  F07E         	goto	u4210
  4811  00FD8A                     u4211:
  4812  00FD8A  EFCA  F07E         	goto	l4167
  4813  00FD8E                     u4210:
  4814  00FD8E                     
  4815                           ; BSR set to: 0
  4816                           ;doprnt.c: 1465: (putch('-') );
  4817  00FD8E  0E2D               	movlw	45
  4818  00FD90  ECBF  F062         	call	_putch
  4819  00FD94                     l4167:
  4820                           
  4821                           ;doprnt.c: 1495: };doprnt.c: 1498: prec = c;
  4822  00FD94  C09D  F08D         	movff	printf@c,printf@prec
  4823  00FD98  0100               	movlb	0	; () banked
  4824  00FD9A  6B8E               	clrf	(printf@prec+1)& (0+255),b
  4825                           
  4826                           ;doprnt.c: 1500: while(prec--) {
  4827  00FD9C  EF16  F07F         	goto	l4173
  4828  00FDA0                     l4169:
  4829                           
  4830                           ; BSR set to: 0
  4831                           ;doprnt.c: 1504: {;doprnt.c: 1515: c = (val / dpowers[(unsigned int)prec]) % 10 + '0';
  4832  00FDA0  C08D  F083         	movff	printf@prec,??_printf
  4833  00FDA4  C08E  F084         	movff	printf@prec+1,??_printf+1
  4834  00FDA8  90D8               	bcf	status,0,c
  4835  00FDAA  3783               	rlcf	??_printf& (0+255),f,b
  4836  00FDAC  3784               	rlcf	(??_printf+1)& (0+255),f,b
  4837  00FDAE  90D8               	bcf	status,0,c
  4838  00FDB0  3783               	rlcf	??_printf& (0+255),f,b
  4839  00FDB2  3784               	rlcf	(??_printf+1)& (0+255),f,b
  4840  00FDB4  0E07               	movlw	low _dpowers
  4841  00FDB6  2583               	addwf	??_printf& (0+255),w,b
  4842  00FDB8  6EF6               	movwf	tblptrl,c
  4843  00FDBA  0EFF               	movlw	high _dpowers
  4844  00FDBC  2184               	addwfc	(??_printf+1)& (0+255),w,b
  4845  00FDBE  6EF7               	movwf	tblptrh,c
  4846  00FDC0                     	if	1	;There are 3 active tblptr bytes
  4847  00FDC0  6AF8               	clrf	tblptru,c
  4848  00FDC2  0E00               	movlw	low (__mediumconst shr (0+16))
  4849  00FDC4  22F8               	addwfc	tblptru,f,c
  4850  00FDC6                     	endif
  4851  00FDC6  0009               	tblrd		*+
  4852  00FDC8  006F FFD4  F005    	movff	tablat,___lldiv@divisor
  4853  00FDCE  0009               	tblrd		*+
  4854  00FDD0  006F FFD4  F006    	movff	tablat,___lldiv@divisor+1
  4855  00FDD6  0009               	tblrd		*+
  4856  00FDD8  006F FFD4  F007    	movff	tablat,___lldiv@divisor+2
  4857  00FDDE  000A               	tblrd		*-
  4858  00FDE0  006F FFD4  F008    	movff	tablat,___lldiv@divisor+3
  4859  00FDE6  C08F  F001         	movff	printf@val,___lldiv@dividend
  4860  00FDEA  C090  F002         	movff	printf@val+1,___lldiv@dividend+1
  4861  00FDEE  C091  F003         	movff	printf@val+2,___lldiv@dividend+2
  4862  00FDF2  C092  F004         	movff	printf@val+3,___lldiv@dividend+3
  4863  00FDF6  EC32  F065         	call	___lldiv	;wreg free
  4864  00FDFA  C001  F00E         	movff	?___lldiv,___llmod@dividend
  4865  00FDFE  C002  F00F         	movff	?___lldiv+1,___llmod@dividend+1
  4866  00FE02  C003  F010         	movff	?___lldiv+2,___llmod@dividend+2
  4867  00FE06  C004  F011         	movff	?___lldiv+3,___llmod@dividend+3
  4868  00FE0A  0E0A               	movlw	10
  4869  00FE0C  6E12               	movwf	___llmod@divisor^0,c
  4870  00FE0E  0E00               	movlw	0
  4871  00FE10  6E13               	movwf	(___llmod@divisor+1)^0,c
  4872  00FE12  0E00               	movlw	0
  4873  00FE14  6E14               	movwf	(___llmod@divisor+2)^0,c
  4874  00FE16  0E00               	movlw	0
  4875  00FE18  6E15               	movwf	(___llmod@divisor+3)^0,c
  4876  00FE1A  ECA2  F064         	call	___llmod	;wreg free
  4877  00FE1E  500E               	movf	?___llmod^0,w,c
  4878  00FE20  0F30               	addlw	48
  4879  00FE22  0100               	movlb	0	; () banked
  4880  00FE24  6F9D               	movwf	printf@c& (0+255),b
  4881  00FE26                     
  4882                           ; BSR set to: 0
  4883                           ;doprnt.c: 1549: };doprnt.c: 1550: (putch(c) );
  4884  00FE26  519D               	movf	printf@c& (0+255),w,b
  4885  00FE28  ECBF  F062         	call	_putch
  4886  00FE2C                     l4173:
  4887  00FE2C  0100               	movlb	0	; () banked
  4888  00FE2E  078D               	decf	printf@prec& (0+255),f,b
  4889  00FE30  A0D8               	btfss	status,0,c
  4890  00FE32  078E               	decf	(printf@prec+1)& (0+255),f,b
  4891  00FE34  298D               	incf	printf@prec& (0+255),w,b
  4892  00FE36  E106               	bnz	u4221
  4893  00FE38  298E               	incf	(printf@prec+1)& (0+255),w,b
  4894  00FE3A  A4D8               	btfss	status,2,c
  4895  00FE3C  EF22  F07F         	goto	u4221
  4896  00FE40  EF24  F07F         	goto	u4220
  4897  00FE44                     u4221:
  4898  00FE44  EFD0  F07E         	goto	l4169
  4899  00FE48                     u4220:
  4900  00FE48                     l4175:
  4901  00FE48  0060  F1E7  FFF6   	movff	printf@f,tblptrl
  4902  00FE4E  0060  F1EB  FFF7   	movff	printf@f+1,tblptrh
  4903  00FE54  0100               	movlb	0	; () banked
  4904  00FE56  4B79               	infsnz	printf@f& (0+255),f,b
  4905  00FE58  2B7A               	incf	(printf@f+1)& (0+255),f,b
  4906  00FE5A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4907  00FE5A  6AF8               	clrf	tblptru,c
  4908  00FE5C                     	endif
  4909  00FE5C                     	if	0	;tblptru may be non-zero
  4910  00FE5C                     	endif
  4911  00FE5C  0008               	tblrd		*
  4912  00FE5E  006F FFD4  F09D    	movff	tablat,printf@c
  4913  00FE64  519D               	movf	printf@c& (0+255),w,b
  4914  00FE66  A4D8               	btfss	status,2,c
  4915  00FE68  EF38  F07F         	goto	u4231
  4916  00FE6C  EF3A  F07F         	goto	u4230
  4917  00FE70                     u4231:
  4918  00FE70  EFA8  F07A         	goto	l3993
  4919  00FE74                     u4230:
  4920  00FE74                     l438:
  4921                           
  4922                           ; BSR set to: 0
  4923  00FE74  0012               	return		;funcret
  4924  00FE76                     __end_of_printf:
  4925                           	callstack 0
  4926                           
  4927 ;; *************** function _scale *****************
  4928 ;; Defined at:
  4929 ;;		line 433 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c"
  4930 ;; Parameters:    Size  Location     Type
  4931 ;;  scl             1    wreg     char 
  4932 ;; Auto vars:     Size  Location     Type
  4933 ;;  scl             1   91[COMRAM] char 
  4934 ;; Return value:  Size  Location     Type
  4935 ;;                  4   83[COMRAM] char 
  4936 ;; Registers used:
  4937 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4938 ;; Tracked objects:
  4939 ;;		On entry : 0/0
  4940 ;;		On exit  : 0/0
  4941 ;;		Unchanged: 0/0
  4942 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4943 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4944 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4945 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4946 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4947 ;;Total ram usage:        9 bytes
  4948 ;; Hardware stack levels used:    1
  4949 ;; Hardware stack levels required when called:    1
  4950 ;; This function calls:
  4951 ;;		___awdiv
  4952 ;;		___awmod
  4953 ;;		___flmul
  4954 ;; This function is called by:
  4955 ;;		_printf
  4956 ;; This function uses a non-reentrant model
  4957 ;;
  4958                           
  4959                           	psect	text12
  4960  00EBCC                     __ptext12:
  4961                           	callstack 0
  4962  00EBCC                     _scale:
  4963                           	callstack 28
  4964                           
  4965                           ; BSR set to: 0
  4966                           ;incstack = 0
  4967                           ;scale@scl stored from wreg
  4968  00EBCC  6E5C               	movwf	scale@scl^0,c
  4969  00EBCE                     
  4970                           ;doprnt.c: 436: if(scl < 0) {
  4971  00EBCE  BE5C               	btfsc	scale@scl^0,7,c
  4972  00EBD0  EFEE  F075         	goto	u3370
  4973  00EBD4  EFEC  F075         	goto	u3371
  4974  00EBD8                     u3371:
  4975  00EBD8  EF18  F077         	goto	l3547
  4976  00EBDC                     u3370:
  4977  00EBDC                     
  4978                           ;doprnt.c: 437: scl = -scl;
  4979  00EBDC  6C5C               	negf	scale@scl^0,c
  4980                           
  4981                           ;doprnt.c: 438: if(scl>=110)
  4982  00EBDE  505C               	movf	scale@scl^0,w,c
  4983  00EBE0  0A80               	xorlw	128
  4984  00EBE2  0F12               	addlw	-238
  4985  00EBE4  A0D8               	btfss	status,0,c
  4986  00EBE6  EFF7  F075         	goto	u3381
  4987  00EBEA  EFF9  F075         	goto	u3380
  4988  00EBEE                     u3381:
  4989  00EBEE  EF97  F076         	goto	l3537
  4990  00EBF2                     u3380:
  4991  00EBF2                     
  4992                           ;doprnt.c: 439: return _npowers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char
      +                          )((scl%100)/10+9)] * _npowers_[(unsigned char)(scl%10)];
  4993  00EBF2  0E00               	movlw	0
  4994  00EBF4  6E0A               	movwf	(___awdiv@divisor+1)^0,c
  4995  00EBF6  0E0A               	movlw	10
  4996  00EBF8  6E09               	movwf	___awdiv@divisor^0,c
  4997  00EBFA  0E00               	movlw	0
  4998  00EBFC  6E04               	movwf	(___awmod@divisor+1)^0,c
  4999  00EBFE  0E64               	movlw	100
  5000  00EC00  6E03               	movwf	___awmod@divisor^0,c
  5001  00EC02  505C               	movf	scale@scl^0,w,c
  5002  00EC04  6E01               	movwf	___awmod@dividend^0,c
  5003  00EC06  6A02               	clrf	(___awmod@dividend+1)^0,c
  5004  00EC08  BE01               	btfsc	___awmod@dividend^0,7,c
  5005  00EC0A  0602               	decf	(___awmod@dividend+1)^0,f,c
  5006  00EC0C  ECD9  F065         	call	___awmod	;wreg free
  5007  00EC10  C001  F007         	movff	?___awmod,___awdiv@dividend
  5008  00EC14  C002  F008         	movff	?___awmod+1,___awdiv@dividend+1
  5009  00EC18  EC31  F066         	call	___awdiv	;wreg free
  5010  00EC1C  0E09               	movlw	9
  5011  00EC1E  2607               	addwf	?___awdiv^0,f,c
  5012  00EC20  5007               	movf	?___awdiv^0,w,c
  5013  00EC22  0D04               	mullw	4
  5014  00EC24  0EAB               	movlw	low __npowers_
  5015  00EC26  24F3               	addwf	243,w,c
  5016  00EC28  6EF6               	movwf	tblptrl,c
  5017  00EC2A  0EFE               	movlw	high __npowers_
  5018  00EC2C  20F4               	addwfc	244,w,c
  5019  00EC2E  6EF7               	movwf	tblptrh,c
  5020  00EC30                     	if	1	;There are 3 active tblptr bytes
  5021  00EC30  6AF8               	clrf	tblptru,c
  5022  00EC32  0E00               	movlw	low (__mediumconst shr (0+16))
  5023  00EC34  22F8               	addwfc	tblptru,f,c
  5024  00EC36                     	endif
  5025  00EC36  0009               	tblrd		*+
  5026  00EC38  006F FFD4  F03F    	movff	tablat,___flmul@a
  5027  00EC3E  0009               	tblrd		*+
  5028  00EC40  006F FFD4  F040    	movff	tablat,___flmul@a+1
  5029  00EC46  0009               	tblrd		*+
  5030  00EC48  006F FFD4  F041    	movff	tablat,___flmul@a+2
  5031  00EC4E  000A               	tblrd		*-
  5032  00EC50  006F FFD4  F042    	movff	tablat,___flmul@a+3
  5033  00EC56  0E00               	movlw	0
  5034  00EC58  6E0A               	movwf	(___awdiv@divisor+1)^0,c
  5035  00EC5A  0E64               	movlw	100
  5036  00EC5C  6E09               	movwf	___awdiv@divisor^0,c
  5037  00EC5E  505C               	movf	scale@scl^0,w,c
  5038  00EC60  6E07               	movwf	___awdiv@dividend^0,c
  5039  00EC62  6A08               	clrf	(___awdiv@dividend+1)^0,c
  5040  00EC64  BE07               	btfsc	___awdiv@dividend^0,7,c
  5041  00EC66  0608               	decf	(___awdiv@dividend+1)^0,f,c
  5042  00EC68  EC31  F066         	call	___awdiv	;wreg free
  5043  00EC6C  0E12               	movlw	18
  5044  00EC6E  2607               	addwf	?___awdiv^0,f,c
  5045  00EC70  5007               	movf	?___awdiv^0,w,c
  5046  00EC72  0D04               	mullw	4
  5047  00EC74  0EAB               	movlw	low __npowers_
  5048  00EC76  24F3               	addwf	243,w,c
  5049  00EC78  6EF6               	movwf	tblptrl,c
  5050  00EC7A  0EFE               	movlw	high __npowers_
  5051  00EC7C  20F4               	addwfc	244,w,c
  5052  00EC7E  6EF7               	movwf	tblptrh,c
  5053  00EC80                     	if	1	;There are 3 active tblptr bytes
  5054  00EC80  6AF8               	clrf	tblptru,c
  5055  00EC82  0E00               	movlw	low (__mediumconst shr (0+16))
  5056  00EC84  22F8               	addwfc	tblptru,f,c
  5057  00EC86                     	endif
  5058  00EC86  0009               	tblrd		*+
  5059  00EC88  006F FFD4  F03B    	movff	tablat,___flmul@b
  5060  00EC8E  0009               	tblrd		*+
  5061  00EC90  006F FFD4  F03C    	movff	tablat,___flmul@b+1
  5062  00EC96  0009               	tblrd		*+
  5063  00EC98  006F FFD4  F03D    	movff	tablat,___flmul@b+2
  5064  00EC9E  000A               	tblrd		*-
  5065  00ECA0  006F FFD4  F03E    	movff	tablat,___flmul@b+3
  5066  00ECA6  ECBF  F073         	call	___flmul	;wreg free
  5067  00ECAA  C03B  F058         	movff	?___flmul,_scale$1468
  5068  00ECAE  C03C  F059         	movff	?___flmul+1,_scale$1468+1
  5069  00ECB2  C03D  F05A         	movff	?___flmul+2,_scale$1468+2
  5070  00ECB6  C03E  F05B         	movff	?___flmul+3,_scale$1468+3
  5071                           
  5072                           ;doprnt.c: 439: return _npowers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char
      +                          )((scl%100)/10+9)] * _npowers_[(unsigned char)(scl%10)];
  5073  00ECBA  C058  F03B         	movff	_scale$1468,___flmul@b
  5074  00ECBE  C059  F03C         	movff	_scale$1468+1,___flmul@b+1
  5075  00ECC2  C05A  F03D         	movff	_scale$1468+2,___flmul@b+2
  5076  00ECC6  C05B  F03E         	movff	_scale$1468+3,___flmul@b+3
  5077  00ECCA  0E00               	movlw	0
  5078  00ECCC  6E04               	movwf	(___awmod@divisor+1)^0,c
  5079  00ECCE  0E0A               	movlw	10
  5080  00ECD0  6E03               	movwf	___awmod@divisor^0,c
  5081  00ECD2  505C               	movf	scale@scl^0,w,c
  5082  00ECD4  6E01               	movwf	___awmod@dividend^0,c
  5083  00ECD6  6A02               	clrf	(___awmod@dividend+1)^0,c
  5084  00ECD8  BE01               	btfsc	___awmod@dividend^0,7,c
  5085  00ECDA  0602               	decf	(___awmod@dividend+1)^0,f,c
  5086  00ECDC  ECD9  F065         	call	___awmod	;wreg free
  5087  00ECE0  5001               	movf	?___awmod^0,w,c
  5088  00ECE2  0D04               	mullw	4
  5089  00ECE4  0EAB               	movlw	low __npowers_
  5090  00ECE6  24F3               	addwf	243,w,c
  5091  00ECE8  6EF6               	movwf	tblptrl,c
  5092  00ECEA  0EFE               	movlw	high __npowers_
  5093  00ECEC  20F4               	addwfc	244,w,c
  5094  00ECEE  6EF7               	movwf	tblptrh,c
  5095  00ECF0                     	if	1	;There are 3 active tblptr bytes
  5096  00ECF0  6AF8               	clrf	tblptru,c
  5097  00ECF2  0E00               	movlw	low (__mediumconst shr (0+16))
  5098  00ECF4  22F8               	addwfc	tblptru,f,c
  5099  00ECF6                     	endif
  5100  00ECF6  0009               	tblrd		*+
  5101  00ECF8  006F FFD4  F03F    	movff	tablat,___flmul@a
  5102  00ECFE  0009               	tblrd		*+
  5103  00ED00  006F FFD4  F040    	movff	tablat,___flmul@a+1
  5104  00ED06  0009               	tblrd		*+
  5105  00ED08  006F FFD4  F041    	movff	tablat,___flmul@a+2
  5106  00ED0E  000A               	tblrd		*-
  5107  00ED10  006F FFD4  F042    	movff	tablat,___flmul@a+3
  5108  00ED16  ECBF  F073         	call	___flmul	;wreg free
  5109  00ED1A  C03B  F054         	movff	?___flmul,?_scale
  5110  00ED1E  C03C  F055         	movff	?___flmul+1,?_scale+1
  5111  00ED22  C03D  F056         	movff	?___flmul+2,?_scale+2
  5112  00ED26  C03E  F057         	movff	?___flmul+3,?_scale+3
  5113  00ED2A  EF3F  F078         	goto	l374
  5114  00ED2E                     l3537:
  5115                           
  5116                           ;doprnt.c: 440: else if(scl > 10)
  5117  00ED2E  505C               	movf	scale@scl^0,w,c
  5118  00ED30  0A80               	xorlw	128
  5119  00ED32  0F75               	addlw	-139
  5120  00ED34  A0D8               	btfss	status,0,c
  5121  00ED36  EF9F  F076         	goto	u3391
  5122  00ED3A  EFA1  F076         	goto	u3390
  5123  00ED3E                     u3391:
  5124  00ED3E  EFFB  F076         	goto	l3543
  5125  00ED42                     u3390:
  5126  00ED42                     
  5127                           ;doprnt.c: 441: return _npowers_[(unsigned char)(scl/10+9)] * _npowers_[(unsigned char)(
      +                          scl%10)];
  5128  00ED42  0E00               	movlw	0
  5129  00ED44  6E0A               	movwf	(___awdiv@divisor+1)^0,c
  5130  00ED46  0E0A               	movlw	10
  5131  00ED48  6E09               	movwf	___awdiv@divisor^0,c
  5132  00ED4A  505C               	movf	scale@scl^0,w,c
  5133  00ED4C  6E07               	movwf	___awdiv@dividend^0,c
  5134  00ED4E  6A08               	clrf	(___awdiv@dividend+1)^0,c
  5135  00ED50  BE07               	btfsc	___awdiv@dividend^0,7,c
  5136  00ED52  0608               	decf	(___awdiv@dividend+1)^0,f,c
  5137  00ED54  EC31  F066         	call	___awdiv	;wreg free
  5138  00ED58  0E09               	movlw	9
  5139  00ED5A  2607               	addwf	?___awdiv^0,f,c
  5140  00ED5C  5007               	movf	?___awdiv^0,w,c
  5141  00ED5E  0D04               	mullw	4
  5142  00ED60  0EAB               	movlw	low __npowers_
  5143  00ED62  24F3               	addwf	243,w,c
  5144  00ED64  6EF6               	movwf	tblptrl,c
  5145  00ED66  0EFE               	movlw	high __npowers_
  5146  00ED68  20F4               	addwfc	244,w,c
  5147  00ED6A  6EF7               	movwf	tblptrh,c
  5148  00ED6C                     	if	1	;There are 3 active tblptr bytes
  5149  00ED6C  6AF8               	clrf	tblptru,c
  5150  00ED6E  0E00               	movlw	low (__mediumconst shr (0+16))
  5151  00ED70  22F8               	addwfc	tblptru,f,c
  5152  00ED72                     	endif
  5153  00ED72  0009               	tblrd		*+
  5154  00ED74  006F FFD4  F03B    	movff	tablat,___flmul@b
  5155  00ED7A  0009               	tblrd		*+
  5156  00ED7C  006F FFD4  F03C    	movff	tablat,___flmul@b+1
  5157  00ED82  0009               	tblrd		*+
  5158  00ED84  006F FFD4  F03D    	movff	tablat,___flmul@b+2
  5159  00ED8A  000A               	tblrd		*-
  5160  00ED8C  006F FFD4  F03E    	movff	tablat,___flmul@b+3
  5161  00ED92  0E00               	movlw	0
  5162  00ED94  6E04               	movwf	(___awmod@divisor+1)^0,c
  5163  00ED96  0E0A               	movlw	10
  5164  00ED98  6E03               	movwf	___awmod@divisor^0,c
  5165  00ED9A  505C               	movf	scale@scl^0,w,c
  5166  00ED9C  6E01               	movwf	___awmod@dividend^0,c
  5167  00ED9E  6A02               	clrf	(___awmod@dividend+1)^0,c
  5168  00EDA0  BE01               	btfsc	___awmod@dividend^0,7,c
  5169  00EDA2  0602               	decf	(___awmod@dividend+1)^0,f,c
  5170  00EDA4  ECD9  F065         	call	___awmod	;wreg free
  5171  00EDA8  5001               	movf	?___awmod^0,w,c
  5172  00EDAA  0D04               	mullw	4
  5173  00EDAC  0EAB               	movlw	low __npowers_
  5174  00EDAE  24F3               	addwf	243,w,c
  5175  00EDB0  6EF6               	movwf	tblptrl,c
  5176  00EDB2  0EFE               	movlw	high __npowers_
  5177  00EDB4  20F4               	addwfc	244,w,c
  5178  00EDB6  6EF7               	movwf	tblptrh,c
  5179  00EDB8                     	if	1	;There are 3 active tblptr bytes
  5180  00EDB8  6AF8               	clrf	tblptru,c
  5181  00EDBA  0E00               	movlw	low (__mediumconst shr (0+16))
  5182  00EDBC  22F8               	addwfc	tblptru,f,c
  5183  00EDBE                     	endif
  5184  00EDBE  0009               	tblrd		*+
  5185  00EDC0  006F FFD4  F03F    	movff	tablat,___flmul@a
  5186  00EDC6  0009               	tblrd		*+
  5187  00EDC8  006F FFD4  F040    	movff	tablat,___flmul@a+1
  5188  00EDCE  0009               	tblrd		*+
  5189  00EDD0  006F FFD4  F041    	movff	tablat,___flmul@a+2
  5190  00EDD6  000A               	tblrd		*-
  5191  00EDD8  006F FFD4  F042    	movff	tablat,___flmul@a+3
  5192  00EDDE  ECBF  F073         	call	___flmul	;wreg free
  5193  00EDE2  C03B  F054         	movff	?___flmul,?_scale
  5194  00EDE6  C03C  F055         	movff	?___flmul+1,?_scale+1
  5195  00EDEA  C03D  F056         	movff	?___flmul+2,?_scale+2
  5196  00EDEE  C03E  F057         	movff	?___flmul+3,?_scale+3
  5197  00EDF2  EF3F  F078         	goto	l374
  5198  00EDF6                     l3543:
  5199                           
  5200                           ;doprnt.c: 442: return _npowers_[(unsigned char)scl];
  5201  00EDF6  505C               	movf	scale@scl^0,w,c
  5202  00EDF8  0D04               	mullw	4
  5203  00EDFA  0EAB               	movlw	low __npowers_
  5204  00EDFC  24F3               	addwf	243,w,c
  5205  00EDFE  6EF6               	movwf	tblptrl,c
  5206  00EE00  0EFE               	movlw	high __npowers_
  5207  00EE02  20F4               	addwfc	244,w,c
  5208  00EE04  6EF7               	movwf	tblptrh,c
  5209  00EE06                     	if	1	;There are 3 active tblptr bytes
  5210  00EE06  6AF8               	clrf	tblptru,c
  5211  00EE08  0E00               	movlw	low (__mediumconst shr (0+16))
  5212  00EE0A  22F8               	addwfc	tblptru,f,c
  5213  00EE0C                     	endif
  5214  00EE0C  0009               	tblrd		*+
  5215  00EE0E  006F FFD4  F054    	movff	tablat,?_scale
  5216  00EE14  0009               	tblrd		*+
  5217  00EE16  006F FFD4  F055    	movff	tablat,?_scale+1
  5218  00EE1C  0009               	tblrd		*+
  5219  00EE1E  006F FFD4  F056    	movff	tablat,?_scale+2
  5220  00EE24  000A               	tblrd		*-
  5221  00EE26  006F FFD4  F057    	movff	tablat,?_scale+3
  5222  00EE2C  EF3F  F078         	goto	l374
  5223  00EE30                     l3547:
  5224                           
  5225                           ;doprnt.c: 443: };doprnt.c: 444: if(scl>=110)
  5226  00EE30  505C               	movf	scale@scl^0,w,c
  5227  00EE32  0A80               	xorlw	128
  5228  00EE34  0F12               	addlw	-238
  5229  00EE36  A0D8               	btfss	status,0,c
  5230  00EE38  EF20  F077         	goto	u3401
  5231  00EE3C  EF22  F077         	goto	u3400
  5232  00EE40                     u3401:
  5233  00EE40  EFC0  F077         	goto	l3555
  5234  00EE44                     u3400:
  5235  00EE44                     
  5236                           ;doprnt.c: 445: return _powers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)(
      +                          (scl%100)/10+9)] * _powers_[(unsigned char)(scl%10)];
  5237  00EE44  0E00               	movlw	0
  5238  00EE46  6E0A               	movwf	(___awdiv@divisor+1)^0,c
  5239  00EE48  0E0A               	movlw	10
  5240  00EE4A  6E09               	movwf	___awdiv@divisor^0,c
  5241  00EE4C  0E00               	movlw	0
  5242  00EE4E  6E04               	movwf	(___awmod@divisor+1)^0,c
  5243  00EE50  0E64               	movlw	100
  5244  00EE52  6E03               	movwf	___awmod@divisor^0,c
  5245  00EE54  505C               	movf	scale@scl^0,w,c
  5246  00EE56  6E01               	movwf	___awmod@dividend^0,c
  5247  00EE58  6A02               	clrf	(___awmod@dividend+1)^0,c
  5248  00EE5A  BE01               	btfsc	___awmod@dividend^0,7,c
  5249  00EE5C  0602               	decf	(___awmod@dividend+1)^0,f,c
  5250  00EE5E  ECD9  F065         	call	___awmod	;wreg free
  5251  00EE62  C001  F007         	movff	?___awmod,___awdiv@dividend
  5252  00EE66  C002  F008         	movff	?___awmod+1,___awdiv@dividend+1
  5253  00EE6A  EC31  F066         	call	___awdiv	;wreg free
  5254  00EE6E  0E09               	movlw	9
  5255  00EE70  2607               	addwf	?___awdiv^0,f,c
  5256  00EE72  5007               	movf	?___awdiv^0,w,c
  5257  00EE74  0D04               	mullw	4
  5258  00EE76  0E77               	movlw	low __powers_
  5259  00EE78  24F3               	addwf	243,w,c
  5260  00EE7A  6EF6               	movwf	tblptrl,c
  5261  00EE7C  0EFE               	movlw	high __powers_
  5262  00EE7E  20F4               	addwfc	244,w,c
  5263  00EE80  6EF7               	movwf	tblptrh,c
  5264  00EE82                     	if	1	;There are 3 active tblptr bytes
  5265  00EE82  6AF8               	clrf	tblptru,c
  5266  00EE84  0E00               	movlw	low (__mediumconst shr (0+16))
  5267  00EE86  22F8               	addwfc	tblptru,f,c
  5268  00EE88                     	endif
  5269  00EE88  0009               	tblrd		*+
  5270  00EE8A  006F FFD4  F03F    	movff	tablat,___flmul@a
  5271  00EE90  0009               	tblrd		*+
  5272  00EE92  006F FFD4  F040    	movff	tablat,___flmul@a+1
  5273  00EE98  0009               	tblrd		*+
  5274  00EE9A  006F FFD4  F041    	movff	tablat,___flmul@a+2
  5275  00EEA0  000A               	tblrd		*-
  5276  00EEA2  006F FFD4  F042    	movff	tablat,___flmul@a+3
  5277  00EEA8  0E00               	movlw	0
  5278  00EEAA  6E0A               	movwf	(___awdiv@divisor+1)^0,c
  5279  00EEAC  0E64               	movlw	100
  5280  00EEAE  6E09               	movwf	___awdiv@divisor^0,c
  5281  00EEB0  505C               	movf	scale@scl^0,w,c
  5282  00EEB2  6E07               	movwf	___awdiv@dividend^0,c
  5283  00EEB4  6A08               	clrf	(___awdiv@dividend+1)^0,c
  5284  00EEB6  BE07               	btfsc	___awdiv@dividend^0,7,c
  5285  00EEB8  0608               	decf	(___awdiv@dividend+1)^0,f,c
  5286  00EEBA  EC31  F066         	call	___awdiv	;wreg free
  5287  00EEBE  0E12               	movlw	18
  5288  00EEC0  2607               	addwf	?___awdiv^0,f,c
  5289  00EEC2  5007               	movf	?___awdiv^0,w,c
  5290  00EEC4  0D04               	mullw	4
  5291  00EEC6  0E77               	movlw	low __powers_
  5292  00EEC8  24F3               	addwf	243,w,c
  5293  00EECA  6EF6               	movwf	tblptrl,c
  5294  00EECC  0EFE               	movlw	high __powers_
  5295  00EECE  20F4               	addwfc	244,w,c
  5296  00EED0  6EF7               	movwf	tblptrh,c
  5297  00EED2                     	if	1	;There are 3 active tblptr bytes
  5298  00EED2  6AF8               	clrf	tblptru,c
  5299  00EED4  0E00               	movlw	low (__mediumconst shr (0+16))
  5300  00EED6  22F8               	addwfc	tblptru,f,c
  5301  00EED8                     	endif
  5302  00EED8  0009               	tblrd		*+
  5303  00EEDA  006F FFD4  F03B    	movff	tablat,___flmul@b
  5304  00EEE0  0009               	tblrd		*+
  5305  00EEE2  006F FFD4  F03C    	movff	tablat,___flmul@b+1
  5306  00EEE8  0009               	tblrd		*+
  5307  00EEEA  006F FFD4  F03D    	movff	tablat,___flmul@b+2
  5308  00EEF0  000A               	tblrd		*-
  5309  00EEF2  006F FFD4  F03E    	movff	tablat,___flmul@b+3
  5310  00EEF8  ECBF  F073         	call	___flmul	;wreg free
  5311  00EEFC  C03B  F058         	movff	?___flmul,_scale$1468
  5312  00EF00  C03C  F059         	movff	?___flmul+1,_scale$1468+1
  5313  00EF04  C03D  F05A         	movff	?___flmul+2,_scale$1468+2
  5314  00EF08  C03E  F05B         	movff	?___flmul+3,_scale$1468+3
  5315                           
  5316                           ;doprnt.c: 445: return _powers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)(
      +                          (scl%100)/10+9)] * _powers_[(unsigned char)(scl%10)];
  5317  00EF0C  C058  F03B         	movff	_scale$1468,___flmul@b
  5318  00EF10  C059  F03C         	movff	_scale$1468+1,___flmul@b+1
  5319  00EF14  C05A  F03D         	movff	_scale$1468+2,___flmul@b+2
  5320  00EF18  C05B  F03E         	movff	_scale$1468+3,___flmul@b+3
  5321  00EF1C  0E00               	movlw	0
  5322  00EF1E  6E04               	movwf	(___awmod@divisor+1)^0,c
  5323  00EF20  0E0A               	movlw	10
  5324  00EF22  6E03               	movwf	___awmod@divisor^0,c
  5325  00EF24  505C               	movf	scale@scl^0,w,c
  5326  00EF26  6E01               	movwf	___awmod@dividend^0,c
  5327  00EF28  6A02               	clrf	(___awmod@dividend+1)^0,c
  5328  00EF2A  BE01               	btfsc	___awmod@dividend^0,7,c
  5329  00EF2C  0602               	decf	(___awmod@dividend+1)^0,f,c
  5330  00EF2E  ECD9  F065         	call	___awmod	;wreg free
  5331  00EF32  5001               	movf	?___awmod^0,w,c
  5332  00EF34  0D04               	mullw	4
  5333  00EF36  0E77               	movlw	low __powers_
  5334  00EF38  24F3               	addwf	243,w,c
  5335  00EF3A  6EF6               	movwf	tblptrl,c
  5336  00EF3C  0EFE               	movlw	high __powers_
  5337  00EF3E  20F4               	addwfc	244,w,c
  5338  00EF40  6EF7               	movwf	tblptrh,c
  5339  00EF42                     	if	1	;There are 3 active tblptr bytes
  5340  00EF42  6AF8               	clrf	tblptru,c
  5341  00EF44  0E00               	movlw	low (__mediumconst shr (0+16))
  5342  00EF46  22F8               	addwfc	tblptru,f,c
  5343  00EF48                     	endif
  5344  00EF48  0009               	tblrd		*+
  5345  00EF4A  006F FFD4  F03F    	movff	tablat,___flmul@a
  5346  00EF50  0009               	tblrd		*+
  5347  00EF52  006F FFD4  F040    	movff	tablat,___flmul@a+1
  5348  00EF58  0009               	tblrd		*+
  5349  00EF5A  006F FFD4  F041    	movff	tablat,___flmul@a+2
  5350  00EF60  000A               	tblrd		*-
  5351  00EF62  006F FFD4  F042    	movff	tablat,___flmul@a+3
  5352  00EF68  ECBF  F073         	call	___flmul	;wreg free
  5353  00EF6C  C03B  F054         	movff	?___flmul,?_scale
  5354  00EF70  C03C  F055         	movff	?___flmul+1,?_scale+1
  5355  00EF74  C03D  F056         	movff	?___flmul+2,?_scale+2
  5356  00EF78  C03E  F057         	movff	?___flmul+3,?_scale+3
  5357  00EF7C  EF3F  F078         	goto	l374
  5358  00EF80                     l3555:
  5359                           
  5360                           ;doprnt.c: 446: else if(scl > 10)
  5361  00EF80  505C               	movf	scale@scl^0,w,c
  5362  00EF82  0A80               	xorlw	128
  5363  00EF84  0F75               	addlw	-139
  5364  00EF86  A0D8               	btfss	status,0,c
  5365  00EF88  EFC8  F077         	goto	u3411
  5366  00EF8C  EFCA  F077         	goto	u3410
  5367  00EF90                     u3411:
  5368  00EF90  EF24  F078         	goto	l3561
  5369  00EF94                     u3410:
  5370  00EF94                     
  5371                           ;doprnt.c: 447: return _powers_[(unsigned char)(scl/10+9)] * _powers_[(unsigned char)(sc
      +                          l%10)];
  5372  00EF94  0E00               	movlw	0
  5373  00EF96  6E0A               	movwf	(___awdiv@divisor+1)^0,c
  5374  00EF98  0E0A               	movlw	10
  5375  00EF9A  6E09               	movwf	___awdiv@divisor^0,c
  5376  00EF9C  505C               	movf	scale@scl^0,w,c
  5377  00EF9E  6E07               	movwf	___awdiv@dividend^0,c
  5378  00EFA0  6A08               	clrf	(___awdiv@dividend+1)^0,c
  5379  00EFA2  BE07               	btfsc	___awdiv@dividend^0,7,c
  5380  00EFA4  0608               	decf	(___awdiv@dividend+1)^0,f,c
  5381  00EFA6  EC31  F066         	call	___awdiv	;wreg free
  5382  00EFAA  0E09               	movlw	9
  5383  00EFAC  2607               	addwf	?___awdiv^0,f,c
  5384  00EFAE  5007               	movf	?___awdiv^0,w,c
  5385  00EFB0  0D04               	mullw	4
  5386  00EFB2  0E77               	movlw	low __powers_
  5387  00EFB4  24F3               	addwf	243,w,c
  5388  00EFB6  6EF6               	movwf	tblptrl,c
  5389  00EFB8  0EFE               	movlw	high __powers_
  5390  00EFBA  20F4               	addwfc	244,w,c
  5391  00EFBC  6EF7               	movwf	tblptrh,c
  5392  00EFBE                     	if	1	;There are 3 active tblptr bytes
  5393  00EFBE  6AF8               	clrf	tblptru,c
  5394  00EFC0  0E00               	movlw	low (__mediumconst shr (0+16))
  5395  00EFC2  22F8               	addwfc	tblptru,f,c
  5396  00EFC4                     	endif
  5397  00EFC4  0009               	tblrd		*+
  5398  00EFC6  006F FFD4  F03B    	movff	tablat,___flmul@b
  5399  00EFCC  0009               	tblrd		*+
  5400  00EFCE  006F FFD4  F03C    	movff	tablat,___flmul@b+1
  5401  00EFD4  0009               	tblrd		*+
  5402  00EFD6  006F FFD4  F03D    	movff	tablat,___flmul@b+2
  5403  00EFDC  000A               	tblrd		*-
  5404  00EFDE  006F FFD4  F03E    	movff	tablat,___flmul@b+3
  5405  00EFE4  0E00               	movlw	0
  5406  00EFE6  6E04               	movwf	(___awmod@divisor+1)^0,c
  5407  00EFE8  0E0A               	movlw	10
  5408  00EFEA  6E03               	movwf	___awmod@divisor^0,c
  5409  00EFEC  505C               	movf	scale@scl^0,w,c
  5410  00EFEE  6E01               	movwf	___awmod@dividend^0,c
  5411  00EFF0  6A02               	clrf	(___awmod@dividend+1)^0,c
  5412  00EFF2  BE01               	btfsc	___awmod@dividend^0,7,c
  5413  00EFF4  0602               	decf	(___awmod@dividend+1)^0,f,c
  5414  00EFF6  ECD9  F065         	call	___awmod	;wreg free
  5415  00EFFA  5001               	movf	?___awmod^0,w,c
  5416  00EFFC  0D04               	mullw	4
  5417  00EFFE  0E77               	movlw	low __powers_
  5418  00F000  24F3               	addwf	243,w,c
  5419  00F002  6EF6               	movwf	tblptrl,c
  5420  00F004  0EFE               	movlw	high __powers_
  5421  00F006  20F4               	addwfc	244,w,c
  5422  00F008  6EF7               	movwf	tblptrh,c
  5423  00F00A                     	if	1	;There are 3 active tblptr bytes
  5424  00F00A  6AF8               	clrf	tblptru,c
  5425  00F00C  0E00               	movlw	low (__mediumconst shr (0+16))
  5426  00F00E  22F8               	addwfc	tblptru,f,c
  5427  00F010                     	endif
  5428  00F010  0009               	tblrd		*+
  5429  00F012  006F FFD4  F03F    	movff	tablat,___flmul@a
  5430  00F018  0009               	tblrd		*+
  5431  00F01A  006F FFD4  F040    	movff	tablat,___flmul@a+1
  5432  00F020  0009               	tblrd		*+
  5433  00F022  006F FFD4  F041    	movff	tablat,___flmul@a+2
  5434  00F028  000A               	tblrd		*-
  5435  00F02A  006F FFD4  F042    	movff	tablat,___flmul@a+3
  5436  00F030  ECBF  F073         	call	___flmul	;wreg free
  5437  00F034  C03B  F054         	movff	?___flmul,?_scale
  5438  00F038  C03C  F055         	movff	?___flmul+1,?_scale+1
  5439  00F03C  C03D  F056         	movff	?___flmul+2,?_scale+2
  5440  00F040  C03E  F057         	movff	?___flmul+3,?_scale+3
  5441  00F044  EF3F  F078         	goto	l374
  5442  00F048                     l3561:
  5443                           
  5444                           ;doprnt.c: 448: return _powers_[(unsigned char)scl];
  5445  00F048  505C               	movf	scale@scl^0,w,c
  5446  00F04A  0D04               	mullw	4
  5447  00F04C  0E77               	movlw	low __powers_
  5448  00F04E  24F3               	addwf	243,w,c
  5449  00F050  6EF6               	movwf	tblptrl,c
  5450  00F052  0EFE               	movlw	high __powers_
  5451  00F054  20F4               	addwfc	244,w,c
  5452  00F056  6EF7               	movwf	tblptrh,c
  5453  00F058                     	if	1	;There are 3 active tblptr bytes
  5454  00F058  6AF8               	clrf	tblptru,c
  5455  00F05A  0E00               	movlw	low (__mediumconst shr (0+16))
  5456  00F05C  22F8               	addwfc	tblptru,f,c
  5457  00F05E                     	endif
  5458  00F05E  0009               	tblrd		*+
  5459  00F060  006F FFD4  F054    	movff	tablat,?_scale
  5460  00F066  0009               	tblrd		*+
  5461  00F068  006F FFD4  F055    	movff	tablat,?_scale+1
  5462  00F06E  0009               	tblrd		*+
  5463  00F070  006F FFD4  F056    	movff	tablat,?_scale+2
  5464  00F076  000A               	tblrd		*-
  5465  00F078  006F FFD4  F057    	movff	tablat,?_scale+3
  5466  00F07E                     l374:
  5467  00F07E  0012               	return		;funcret
  5468  00F080                     __end_of_scale:
  5469                           	callstack 0
  5470                           
  5471 ;; *************** function ___awmod *****************
  5472 ;; Defined at:
  5473 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\awmod.c"
  5474 ;; Parameters:    Size  Location     Type
  5475 ;;  dividend        2    0[COMRAM] int 
  5476 ;;  divisor         2    2[COMRAM] int 
  5477 ;; Auto vars:     Size  Location     Type
  5478 ;;  sign            1    5[COMRAM] unsigned char 
  5479 ;;  counter         1    4[COMRAM] unsigned char 
  5480 ;; Return value:  Size  Location     Type
  5481 ;;                  2    0[COMRAM] int 
  5482 ;; Registers used:
  5483 ;;		wreg, status,2, status,0
  5484 ;; Tracked objects:
  5485 ;;		On entry : 0/0
  5486 ;;		On exit  : 0/0
  5487 ;;		Unchanged: 0/0
  5488 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5489 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5490 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5491 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5492 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5493 ;;Total ram usage:        6 bytes
  5494 ;; Hardware stack levels used:    1
  5495 ;; This function calls:
  5496 ;;		Nothing
  5497 ;; This function is called by:
  5498 ;;		_scale
  5499 ;; This function uses a non-reentrant model
  5500 ;;
  5501                           
  5502                           	psect	text13
  5503  00CBB2                     __ptext13:
  5504                           	callstack 0
  5505  00CBB2                     ___awmod:
  5506                           	callstack 28
  5507  00CBB2  0E00               	movlw	0
  5508  00CBB4  6E06               	movwf	___awmod@sign^0,c
  5509  00CBB6  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
  5510  00CBB8  EFE2  F065         	goto	u2990
  5511  00CBBC  EFE0  F065         	goto	u2991
  5512  00CBC0                     u2991:
  5513  00CBC0  EFE8  F065         	goto	l3303
  5514  00CBC4                     u2990:
  5515  00CBC4  6C01               	negf	___awmod@dividend^0,c
  5516  00CBC6  1E02               	comf	(___awmod@dividend+1)^0,f,c
  5517  00CBC8  B0D8               	btfsc	status,0,c
  5518  00CBCA  2A02               	incf	(___awmod@dividend+1)^0,f,c
  5519  00CBCC  0E01               	movlw	1
  5520  00CBCE  6E06               	movwf	___awmod@sign^0,c
  5521  00CBD0                     l3303:
  5522  00CBD0  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
  5523  00CBD2  EFEF  F065         	goto	u3000
  5524  00CBD6  EFED  F065         	goto	u3001
  5525  00CBDA                     u3001:
  5526  00CBDA  EFF3  F065         	goto	l3307
  5527  00CBDE                     u3000:
  5528  00CBDE  6C03               	negf	___awmod@divisor^0,c
  5529  00CBE0  1E04               	comf	(___awmod@divisor+1)^0,f,c
  5530  00CBE2  B0D8               	btfsc	status,0,c
  5531  00CBE4  2A04               	incf	(___awmod@divisor+1)^0,f,c
  5532  00CBE6                     l3307:
  5533  00CBE6  5003               	movf	___awmod@divisor^0,w,c
  5534  00CBE8  1004               	iorwf	(___awmod@divisor+1)^0,w,c
  5535  00CBEA  B4D8               	btfsc	status,2,c
  5536  00CBEC  EFFA  F065         	goto	u3011
  5537  00CBF0  EFFC  F065         	goto	u3010
  5538  00CBF4                     u3011:
  5539  00CBF4  EF20  F066         	goto	l3323
  5540  00CBF8                     u3010:
  5541  00CBF8  0E01               	movlw	1
  5542  00CBFA  6E05               	movwf	___awmod@counter^0,c
  5543  00CBFC  EF04  F066         	goto	l3313
  5544  00CC00                     l3311:
  5545  00CC00  90D8               	bcf	status,0,c
  5546  00CC02  3603               	rlcf	___awmod@divisor^0,f,c
  5547  00CC04  3604               	rlcf	(___awmod@divisor+1)^0,f,c
  5548  00CC06  2A05               	incf	___awmod@counter^0,f,c
  5549  00CC08                     l3313:
  5550  00CC08  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  5551  00CC0A  EF09  F066         	goto	u3021
  5552  00CC0E  EF0B  F066         	goto	u3020
  5553  00CC12                     u3021:
  5554  00CC12  EF00  F066         	goto	l3311
  5555  00CC16                     u3020:
  5556  00CC16                     l3315:
  5557  00CC16  5003               	movf	___awmod@divisor^0,w,c
  5558  00CC18  5C01               	subwf	___awmod@dividend^0,w,c
  5559  00CC1A  5004               	movf	(___awmod@divisor+1)^0,w,c
  5560  00CC1C  5802               	subwfb	(___awmod@dividend+1)^0,w,c
  5561  00CC1E  A0D8               	btfss	status,0,c
  5562  00CC20  EF14  F066         	goto	u3031
  5563  00CC24  EF16  F066         	goto	u3030
  5564  00CC28                     u3031:
  5565  00CC28  EF1A  F066         	goto	l3319
  5566  00CC2C                     u3030:
  5567  00CC2C  5003               	movf	___awmod@divisor^0,w,c
  5568  00CC2E  5E01               	subwf	___awmod@dividend^0,f,c
  5569  00CC30  5004               	movf	(___awmod@divisor+1)^0,w,c
  5570  00CC32  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
  5571  00CC34                     l3319:
  5572  00CC34  90D8               	bcf	status,0,c
  5573  00CC36  3204               	rrcf	(___awmod@divisor+1)^0,f,c
  5574  00CC38  3203               	rrcf	___awmod@divisor^0,f,c
  5575  00CC3A  2E05               	decfsz	___awmod@counter^0,f,c
  5576  00CC3C  EF0B  F066         	goto	l3315
  5577  00CC40                     l3323:
  5578  00CC40  5006               	movf	___awmod@sign^0,w,c
  5579  00CC42  B4D8               	btfsc	status,2,c
  5580  00CC44  EF26  F066         	goto	u3041
  5581  00CC48  EF28  F066         	goto	u3040
  5582  00CC4C                     u3041:
  5583  00CC4C  EF2C  F066         	goto	l3327
  5584  00CC50                     u3040:
  5585  00CC50  6C01               	negf	___awmod@dividend^0,c
  5586  00CC52  1E02               	comf	(___awmod@dividend+1)^0,f,c
  5587  00CC54  B0D8               	btfsc	status,0,c
  5588  00CC56  2A02               	incf	(___awmod@dividend+1)^0,f,c
  5589  00CC58                     l3327:
  5590  00CC58  C001  F001         	movff	___awmod@dividend,?___awmod
  5591  00CC5C  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  5592  00CC60  0012               	return		;funcret
  5593  00CC62                     __end_of___awmod:
  5594                           	callstack 0
  5595                           
  5596 ;; *************** function ___awdiv *****************
  5597 ;; Defined at:
  5598 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\awdiv.c"
  5599 ;; Parameters:    Size  Location     Type
  5600 ;;  dividend        2    6[COMRAM] int 
  5601 ;;  divisor         2    8[COMRAM] int 
  5602 ;; Auto vars:     Size  Location     Type
  5603 ;;  quotient        2   12[COMRAM] int 
  5604 ;;  sign            1   11[COMRAM] unsigned char 
  5605 ;;  counter         1   10[COMRAM] unsigned char 
  5606 ;; Return value:  Size  Location     Type
  5607 ;;                  2    6[COMRAM] int 
  5608 ;; Registers used:
  5609 ;;		wreg, status,2, status,0
  5610 ;; Tracked objects:
  5611 ;;		On entry : 0/0
  5612 ;;		On exit  : 0/0
  5613 ;;		Unchanged: 0/0
  5614 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5615 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5616 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5617 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5618 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5619 ;;Total ram usage:        8 bytes
  5620 ;; Hardware stack levels used:    1
  5621 ;; This function calls:
  5622 ;;		Nothing
  5623 ;; This function is called by:
  5624 ;;		_scale
  5625 ;;		_printf
  5626 ;; This function uses a non-reentrant model
  5627 ;;
  5628                           
  5629                           	psect	text14
  5630  00CC62                     __ptext14:
  5631                           	callstack 0
  5632  00CC62                     ___awdiv:
  5633                           	callstack 28
  5634  00CC62  0E00               	movlw	0
  5635  00CC64  6E0C               	movwf	___awdiv@sign^0,c
  5636  00CC66  BE0A               	btfsc	(___awdiv@divisor+1)^0,7,c
  5637  00CC68  EF3A  F066         	goto	u2930
  5638  00CC6C  EF38  F066         	goto	u2931
  5639  00CC70                     u2931:
  5640  00CC70  EF40  F066         	goto	l3259
  5641  00CC74                     u2930:
  5642  00CC74  6C09               	negf	___awdiv@divisor^0,c
  5643  00CC76  1E0A               	comf	(___awdiv@divisor+1)^0,f,c
  5644  00CC78  B0D8               	btfsc	status,0,c
  5645  00CC7A  2A0A               	incf	(___awdiv@divisor+1)^0,f,c
  5646  00CC7C  0E01               	movlw	1
  5647  00CC7E  6E0C               	movwf	___awdiv@sign^0,c
  5648  00CC80                     l3259:
  5649  00CC80  BE08               	btfsc	(___awdiv@dividend+1)^0,7,c
  5650  00CC82  EF47  F066         	goto	u2940
  5651  00CC86  EF45  F066         	goto	u2941
  5652  00CC8A                     u2941:
  5653  00CC8A  EF4D  F066         	goto	l3265
  5654  00CC8E                     u2940:
  5655  00CC8E  6C07               	negf	___awdiv@dividend^0,c
  5656  00CC90  1E08               	comf	(___awdiv@dividend+1)^0,f,c
  5657  00CC92  B0D8               	btfsc	status,0,c
  5658  00CC94  2A08               	incf	(___awdiv@dividend+1)^0,f,c
  5659  00CC96  0E01               	movlw	1
  5660  00CC98  1A0C               	xorwf	___awdiv@sign^0,f,c
  5661  00CC9A                     l3265:
  5662  00CC9A  0E00               	movlw	0
  5663  00CC9C  6E0E               	movwf	(___awdiv@quotient+1)^0,c
  5664  00CC9E  0E00               	movlw	0
  5665  00CCA0  6E0D               	movwf	___awdiv@quotient^0,c
  5666  00CCA2  5009               	movf	___awdiv@divisor^0,w,c
  5667  00CCA4  100A               	iorwf	(___awdiv@divisor+1)^0,w,c
  5668  00CCA6  B4D8               	btfsc	status,2,c
  5669  00CCA8  EF58  F066         	goto	u2951
  5670  00CCAC  EF5A  F066         	goto	u2950
  5671  00CCB0                     u2951:
  5672  00CCB0  EF82  F066         	goto	l3287
  5673  00CCB4                     u2950:
  5674  00CCB4  0E01               	movlw	1
  5675  00CCB6  6E0B               	movwf	___awdiv@counter^0,c
  5676  00CCB8  EF62  F066         	goto	l3273
  5677  00CCBC                     l3271:
  5678  00CCBC  90D8               	bcf	status,0,c
  5679  00CCBE  3609               	rlcf	___awdiv@divisor^0,f,c
  5680  00CCC0  360A               	rlcf	(___awdiv@divisor+1)^0,f,c
  5681  00CCC2  2A0B               	incf	___awdiv@counter^0,f,c
  5682  00CCC4                     l3273:
  5683  00CCC4  AE0A               	btfss	(___awdiv@divisor+1)^0,7,c
  5684  00CCC6  EF67  F066         	goto	u2961
  5685  00CCCA  EF69  F066         	goto	u2960
  5686  00CCCE                     u2961:
  5687  00CCCE  EF5E  F066         	goto	l3271
  5688  00CCD2                     u2960:
  5689  00CCD2                     l3275:
  5690  00CCD2  90D8               	bcf	status,0,c
  5691  00CCD4  360D               	rlcf	___awdiv@quotient^0,f,c
  5692  00CCD6  360E               	rlcf	(___awdiv@quotient+1)^0,f,c
  5693  00CCD8  5009               	movf	___awdiv@divisor^0,w,c
  5694  00CCDA  5C07               	subwf	___awdiv@dividend^0,w,c
  5695  00CCDC  500A               	movf	(___awdiv@divisor+1)^0,w,c
  5696  00CCDE  5808               	subwfb	(___awdiv@dividend+1)^0,w,c
  5697  00CCE0  A0D8               	btfss	status,0,c
  5698  00CCE2  EF75  F066         	goto	u2971
  5699  00CCE6  EF77  F066         	goto	u2970
  5700  00CCEA                     u2971:
  5701  00CCEA  EF7C  F066         	goto	l3283
  5702  00CCEE                     u2970:
  5703  00CCEE  5009               	movf	___awdiv@divisor^0,w,c
  5704  00CCF0  5E07               	subwf	___awdiv@dividend^0,f,c
  5705  00CCF2  500A               	movf	(___awdiv@divisor+1)^0,w,c
  5706  00CCF4  5A08               	subwfb	(___awdiv@dividend+1)^0,f,c
  5707  00CCF6  800D               	bsf	___awdiv@quotient^0,0,c
  5708  00CCF8                     l3283:
  5709  00CCF8  90D8               	bcf	status,0,c
  5710  00CCFA  320A               	rrcf	(___awdiv@divisor+1)^0,f,c
  5711  00CCFC  3209               	rrcf	___awdiv@divisor^0,f,c
  5712  00CCFE  2E0B               	decfsz	___awdiv@counter^0,f,c
  5713  00CD00  EF69  F066         	goto	l3275
  5714  00CD04                     l3287:
  5715  00CD04  500C               	movf	___awdiv@sign^0,w,c
  5716  00CD06  B4D8               	btfsc	status,2,c
  5717  00CD08  EF88  F066         	goto	u2981
  5718  00CD0C  EF8A  F066         	goto	u2980
  5719  00CD10                     u2981:
  5720  00CD10  EF8E  F066         	goto	l3291
  5721  00CD14                     u2980:
  5722  00CD14  6C0D               	negf	___awdiv@quotient^0,c
  5723  00CD16  1E0E               	comf	(___awdiv@quotient+1)^0,f,c
  5724  00CD18  B0D8               	btfsc	status,0,c
  5725  00CD1A  2A0E               	incf	(___awdiv@quotient+1)^0,f,c
  5726  00CD1C                     l3291:
  5727  00CD1C  C00D  F007         	movff	___awdiv@quotient,?___awdiv
  5728  00CD20  C00E  F008         	movff	___awdiv@quotient+1,?___awdiv+1
  5729  00CD24  0012               	return		;funcret
  5730  00CD26                     __end_of___awdiv:
  5731                           	callstack 0
  5732                           
  5733 ;; *************** function _putch *****************
  5734 ;; Defined at:
  5735 ;;		line 175 in file "mcc_generated_files/uart2.c"
  5736 ;; Parameters:    Size  Location     Type
  5737 ;;  txData          1    wreg     unsigned char 
  5738 ;; Auto vars:     Size  Location     Type
  5739 ;;  txData          1    1[COMRAM] unsigned char 
  5740 ;; Return value:  Size  Location     Type
  5741 ;;                  1    wreg      void 
  5742 ;; Registers used:
  5743 ;;		wreg, status,2, cstack
  5744 ;; Tracked objects:
  5745 ;;		On entry : 0/0
  5746 ;;		On exit  : 0/0
  5747 ;;		Unchanged: 0/0
  5748 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5749 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5750 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5751 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5752 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5753 ;;Total ram usage:        1 bytes
  5754 ;; Hardware stack levels used:    1
  5755 ;; Hardware stack levels required when called:    1
  5756 ;; This function calls:
  5757 ;;		_UART2_Write
  5758 ;; This function is called by:
  5759 ;;		_printf
  5760 ;; This function uses a non-reentrant model
  5761 ;;
  5762                           
  5763                           	psect	text15
  5764  00C57E                     __ptext15:
  5765                           	callstack 0
  5766  00C57E                     _putch:
  5767                           	callstack 28
  5768                           
  5769                           ;incstack = 0
  5770                           ;putch@txData stored from wreg
  5771  00C57E  6E02               	movwf	putch@txData^0,c
  5772  00C580                     
  5773                           ;uart2.c: 177: UART2_Write(txData);
  5774  00C580  5002               	movf	putch@txData^0,w,c
  5775  00C582  ECEA  F062         	call	_UART2_Write
  5776  00C586  0012               	return		;funcret
  5777  00C588                     __end_of_putch:
  5778                           	callstack 0
  5779                           
  5780 ;; *************** function _UART2_Write *****************
  5781 ;; Defined at:
  5782 ;;		line 161 in file "mcc_generated_files/uart2.c"
  5783 ;; Parameters:    Size  Location     Type
  5784 ;;  txData          1    wreg     unsigned char 
  5785 ;; Auto vars:     Size  Location     Type
  5786 ;;  txData          1    0[COMRAM] unsigned char 
  5787 ;; Return value:  Size  Location     Type
  5788 ;;                  1    wreg      void 
  5789 ;; Registers used:
  5790 ;;		wreg
  5791 ;; Tracked objects:
  5792 ;;		On entry : 0/0
  5793 ;;		On exit  : 0/0
  5794 ;;		Unchanged: 0/0
  5795 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5796 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5797 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5798 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5799 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5800 ;;Total ram usage:        1 bytes
  5801 ;; Hardware stack levels used:    1
  5802 ;; This function calls:
  5803 ;;		Nothing
  5804 ;; This function is called by:
  5805 ;;		_putch
  5806 ;; This function uses a non-reentrant model
  5807 ;;
  5808                           
  5809                           	psect	text16
  5810  00C5D4                     __ptext16:
  5811                           	callstack 0
  5812  00C5D4                     _UART2_Write:
  5813                           	callstack 28
  5814                           
  5815                           ;incstack = 0
  5816                           ;UART2_Write@txData stored from wreg
  5817  00C5D4  6E01               	movwf	UART2_Write@txData^0,c
  5818  00C5D6                     l272:
  5819  00C5D6  0139               	movlb	57	; () banked
  5820  00C5D8  A7A6               	btfss	166,3,b	;volatile
  5821  00C5DA  EFF1  F062         	goto	u2341
  5822  00C5DE  EFF3  F062         	goto	u2340
  5823  00C5E2                     u2341:
  5824  00C5E2  EFEB  F062         	goto	l272
  5825  00C5E6                     u2340:
  5826  00C5E6                     
  5827                           ; BSR set to: 57
  5828                           ;uart2.c: 165: };uart2.c: 167: U2TXB = txData;
  5829  00C5E6  0060  F007  FDD2   	movff	UART2_Write@txData,15826	;volatile
  5830  00C5EC                     
  5831                           ; BSR set to: 57
  5832  00C5EC  0012               	return		;funcret
  5833  00C5EE                     __end_of_UART2_Write:
  5834                           	callstack 0
  5835                           
  5836 ;; *************** function _fround *****************
  5837 ;; Defined at:
  5838 ;;		line 417 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c"
  5839 ;; Parameters:    Size  Location     Type
  5840 ;;  prec            1    wreg     unsigned char 
  5841 ;; Auto vars:     Size  Location     Type
  5842 ;;  prec            1    8[BANK0 ] unsigned char 
  5843 ;; Return value:  Size  Location     Type
  5844 ;;                  4   83[COMRAM] unsigned char 
  5845 ;; Registers used:
  5846 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5847 ;; Tracked objects:
  5848 ;;		On entry : 0/0
  5849 ;;		On exit  : 0/0
  5850 ;;		Unchanged: 0/0
  5851 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5852 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5853 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5854 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5855 ;;      Totals:         4       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5856 ;;Total ram usage:       13 bytes
  5857 ;; Hardware stack levels used:    1
  5858 ;; Hardware stack levels required when called:    1
  5859 ;; This function calls:
  5860 ;;		___flmul
  5861 ;;		___lwdiv
  5862 ;;		___lwmod
  5863 ;; This function is called by:
  5864 ;;		_printf
  5865 ;; This function uses a non-reentrant model
  5866 ;;
  5867                           
  5868                           	psect	text17
  5869  00E0E8                     __ptext17:
  5870                           	callstack 0
  5871  00E0E8                     _fround:
  5872                           	callstack 28
  5873                           
  5874                           ; BSR set to: 57
  5875                           ;incstack = 0
  5876                           ;fround@prec stored from wreg
  5877  00E0E8  0100               	movlb	0	; () banked
  5878  00E0EA  6F68               	movwf	fround@prec& (0+255),b
  5879  00E0EC                     
  5880                           ;doprnt.c: 421: if(prec>=110)
  5881  00E0EC  0E6D               	movlw	109
  5882  00E0EE  0100               	movlb	0	; () banked
  5883  00E0F0  6568               	cpfsgt	fround@prec& (0+255),b
  5884  00E0F2  EF7D  F070         	goto	u3351
  5885  00E0F6  EF7F  F070         	goto	u3350
  5886  00E0FA                     u3351:
  5887  00E0FA  EF41  F071         	goto	l3517
  5888  00E0FE                     u3350:
  5889  00E0FE                     
  5890                           ; BSR set to: 0
  5891                           ;doprnt.c: 422: return 0.5 * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * 
      +                          _npowers_[prec%10U];
  5892  00E0FE  0E00               	movlw	0
  5893  00E100  6E3F               	movwf	___flmul@a^0,c
  5894  00E102  0E00               	movlw	0
  5895  00E104  6E40               	movwf	(___flmul@a+1)^0,c
  5896  00E106  0E00               	movlw	0
  5897  00E108  6E41               	movwf	(___flmul@a+2)^0,c
  5898  00E10A  0E3F               	movlw	63
  5899  00E10C  6E42               	movwf	(___flmul@a+3)^0,c
  5900  00E10E  0E00               	movlw	0
  5901  00E110  6E09               	movwf	(___lwdiv@divisor+1)^0,c
  5902  00E112  0E64               	movlw	100
  5903  00E114  6E08               	movwf	___lwdiv@divisor^0,c
  5904  00E116  C068  F006         	movff	fround@prec,___lwdiv@dividend
  5905  00E11A  6A07               	clrf	(___lwdiv@dividend+1)^0,c
  5906  00E11C  ECE8  F063         	call	___lwdiv	;wreg free
  5907  00E120  90D8               	bcf	status,0,c
  5908  00E122  3606               	rlcf	?___lwdiv^0,f,c
  5909  00E124  3607               	rlcf	(?___lwdiv+1)^0,f,c
  5910  00E126  90D8               	bcf	status,0,c
  5911  00E128  3606               	rlcf	?___lwdiv^0,f,c
  5912  00E12A  3607               	rlcf	(?___lwdiv+1)^0,f,c
  5913  00E12C  0E48               	movlw	72
  5914  00E12E  2606               	addwf	?___lwdiv^0,f,c
  5915  00E130  0E00               	movlw	0
  5916  00E132  2207               	addwfc	(?___lwdiv+1)^0,f,c
  5917  00E134  0EAB               	movlw	low __npowers_
  5918  00E136  2406               	addwf	?___lwdiv^0,w,c
  5919  00E138  6EF6               	movwf	tblptrl,c
  5920  00E13A  0EFE               	movlw	high __npowers_
  5921  00E13C  2007               	addwfc	(?___lwdiv+1)^0,w,c
  5922  00E13E  6EF7               	movwf	tblptrh,c
  5923  00E140                     	if	1	;There are 3 active tblptr bytes
  5924  00E140  6AF8               	clrf	tblptru,c
  5925  00E142  0E00               	movlw	low (__mediumconst shr (0+16))
  5926  00E144  22F8               	addwfc	tblptru,f,c
  5927  00E146                     	endif
  5928  00E146  0009               	tblrd		*+
  5929  00E148  006F FFD4  F03B    	movff	tablat,___flmul@b
  5930  00E14E  0009               	tblrd		*+
  5931  00E150  006F FFD4  F03C    	movff	tablat,___flmul@b+1
  5932  00E156  0009               	tblrd		*+
  5933  00E158  006F FFD4  F03D    	movff	tablat,___flmul@b+2
  5934  00E15E  000A               	tblrd		*-
  5935  00E160  006F FFD4  F03E    	movff	tablat,___flmul@b+3
  5936  00E166  ECBF  F073         	call	___flmul	;wreg free
  5937  00E16A  C03B  F064         	movff	?___flmul,_fround$1466
  5938  00E16E  C03C  F065         	movff	?___flmul+1,_fround$1466+1
  5939  00E172  C03D  F066         	movff	?___flmul+2,_fround$1466+2
  5940  00E176  C03E  F067         	movff	?___flmul+3,_fround$1466+3
  5941                           
  5942                           ;doprnt.c: 422: return 0.5 * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * 
      +                          _npowers_[prec%10U];
  5943  00E17A  0E00               	movlw	0
  5944  00E17C  6E09               	movwf	(___lwdiv@divisor+1)^0,c
  5945  00E17E  0E0A               	movlw	10
  5946  00E180  6E08               	movwf	___lwdiv@divisor^0,c
  5947  00E182  0E00               	movlw	0
  5948  00E184  6E04               	movwf	(___lwmod@divisor+1)^0,c
  5949  00E186  0E64               	movlw	100
  5950  00E188  6E03               	movwf	___lwmod@divisor^0,c
  5951  00E18A  C068  F001         	movff	fround@prec,___lwmod@dividend
  5952  00E18E  6A02               	clrf	(___lwmod@dividend+1)^0,c
  5953  00E190  ECB6  F063         	call	___lwmod	;wreg free
  5954  00E194  C001  F006         	movff	?___lwmod,___lwdiv@dividend
  5955  00E198  C002  F007         	movff	?___lwmod+1,___lwdiv@dividend+1
  5956  00E19C  ECE8  F063         	call	___lwdiv	;wreg free
  5957  00E1A0  90D8               	bcf	status,0,c
  5958  00E1A2  3606               	rlcf	?___lwdiv^0,f,c
  5959  00E1A4  3607               	rlcf	(?___lwdiv+1)^0,f,c
  5960  00E1A6  90D8               	bcf	status,0,c
  5961  00E1A8  3606               	rlcf	?___lwdiv^0,f,c
  5962  00E1AA  3607               	rlcf	(?___lwdiv+1)^0,f,c
  5963  00E1AC  0E24               	movlw	36
  5964  00E1AE  2606               	addwf	?___lwdiv^0,f,c
  5965  00E1B0  0E00               	movlw	0
  5966  00E1B2  2207               	addwfc	(?___lwdiv+1)^0,f,c
  5967  00E1B4  0EAB               	movlw	low __npowers_
  5968  00E1B6  2406               	addwf	?___lwdiv^0,w,c
  5969  00E1B8  6EF6               	movwf	tblptrl,c
  5970  00E1BA  0EFE               	movlw	high __npowers_
  5971  00E1BC  2007               	addwfc	(?___lwdiv+1)^0,w,c
  5972  00E1BE  6EF7               	movwf	tblptrh,c
  5973  00E1C0                     	if	1	;There are 3 active tblptr bytes
  5974  00E1C0  6AF8               	clrf	tblptru,c
  5975  00E1C2  0E00               	movlw	low (__mediumconst shr (0+16))
  5976  00E1C4  22F8               	addwfc	tblptru,f,c
  5977  00E1C6                     	endif
  5978  00E1C6  0009               	tblrd		*+
  5979  00E1C8  006F FFD4  F03F    	movff	tablat,___flmul@a
  5980  00E1CE  0009               	tblrd		*+
  5981  00E1D0  006F FFD4  F040    	movff	tablat,___flmul@a+1
  5982  00E1D6  0009               	tblrd		*+
  5983  00E1D8  006F FFD4  F041    	movff	tablat,___flmul@a+2
  5984  00E1DE  000A               	tblrd		*-
  5985  00E1E0  006F FFD4  F042    	movff	tablat,___flmul@a+3
  5986  00E1E6  C064  F03B         	movff	_fround$1466,___flmul@b
  5987  00E1EA  C065  F03C         	movff	_fround$1466+1,___flmul@b+1
  5988  00E1EE  C066  F03D         	movff	_fround$1466+2,___flmul@b+2
  5989  00E1F2  C067  F03E         	movff	_fround$1466+3,___flmul@b+3
  5990  00E1F6  ECBF  F073         	call	___flmul	;wreg free
  5991  00E1FA  C03B  F060         	movff	?___flmul,_fround$1467
  5992  00E1FE  C03C  F061         	movff	?___flmul+1,_fround$1467+1
  5993  00E202  C03D  F062         	movff	?___flmul+2,_fround$1467+2
  5994  00E206  C03E  F063         	movff	?___flmul+3,_fround$1467+3
  5995                           
  5996                           ;doprnt.c: 422: return 0.5 * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * 
      +                          _npowers_[prec%10U];
  5997  00E20A  C060  F03B         	movff	_fround$1467,___flmul@b
  5998  00E20E  C061  F03C         	movff	_fround$1467+1,___flmul@b+1
  5999  00E212  C062  F03D         	movff	_fround$1467+2,___flmul@b+2
  6000  00E216  C063  F03E         	movff	_fround$1467+3,___flmul@b+3
  6001  00E21A  0E00               	movlw	0
  6002  00E21C  6E04               	movwf	(___lwmod@divisor+1)^0,c
  6003  00E21E  0E0A               	movlw	10
  6004  00E220  6E03               	movwf	___lwmod@divisor^0,c
  6005  00E222  C068  F001         	movff	fround@prec,___lwmod@dividend
  6006  00E226  6A02               	clrf	(___lwmod@dividend+1)^0,c
  6007  00E228  ECB6  F063         	call	___lwmod	;wreg free
  6008  00E22C  90D8               	bcf	status,0,c
  6009  00E22E  3601               	rlcf	?___lwmod^0,f,c
  6010  00E230  3602               	rlcf	(?___lwmod+1)^0,f,c
  6011  00E232  90D8               	bcf	status,0,c
  6012  00E234  3601               	rlcf	?___lwmod^0,f,c
  6013  00E236  3602               	rlcf	(?___lwmod+1)^0,f,c
  6014  00E238  0EAB               	movlw	low __npowers_
  6015  00E23A  2401               	addwf	?___lwmod^0,w,c
  6016  00E23C  6EF6               	movwf	tblptrl,c
  6017  00E23E  0EFE               	movlw	high __npowers_
  6018  00E240  2002               	addwfc	(?___lwmod+1)^0,w,c
  6019  00E242  6EF7               	movwf	tblptrh,c
  6020  00E244                     	if	1	;There are 3 active tblptr bytes
  6021  00E244  6AF8               	clrf	tblptru,c
  6022  00E246  0E00               	movlw	low (__mediumconst shr (0+16))
  6023  00E248  22F8               	addwfc	tblptru,f,c
  6024  00E24A                     	endif
  6025  00E24A  0009               	tblrd		*+
  6026  00E24C  006F FFD4  F03F    	movff	tablat,___flmul@a
  6027  00E252  0009               	tblrd		*+
  6028  00E254  006F FFD4  F040    	movff	tablat,___flmul@a+1
  6029  00E25A  0009               	tblrd		*+
  6030  00E25C  006F FFD4  F041    	movff	tablat,___flmul@a+2
  6031  00E262  000A               	tblrd		*-
  6032  00E264  006F FFD4  F042    	movff	tablat,___flmul@a+3
  6033  00E26A  ECBF  F073         	call	___flmul	;wreg free
  6034  00E26E  C03B  F054         	movff	?___flmul,?_fround
  6035  00E272  C03C  F055         	movff	?___flmul+1,?_fround+1
  6036  00E276  C03D  F056         	movff	?___flmul+2,?_fround+2
  6037  00E27A  C03E  F057         	movff	?___flmul+3,?_fround+3
  6038  00E27E  EFF0  F071         	goto	l367
  6039  00E282                     l3517:
  6040                           
  6041                           ; BSR set to: 0
  6042                           ;doprnt.c: 423: else if(prec > 10)
  6043  00E282  0E0A               	movlw	10
  6044  00E284  6568               	cpfsgt	fround@prec& (0+255),b
  6045  00E286  EF47  F071         	goto	u3361
  6046  00E28A  EF49  F071         	goto	u3360
  6047  00E28E                     u3361:
  6048  00E28E  EFC3  F071         	goto	l3523
  6049  00E292                     u3360:
  6050  00E292                     
  6051                           ; BSR set to: 0
  6052                           ;doprnt.c: 424: return 0.5 * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  6053  00E292  0E00               	movlw	0
  6054  00E294  6E3F               	movwf	___flmul@a^0,c
  6055  00E296  0E00               	movlw	0
  6056  00E298  6E40               	movwf	(___flmul@a+1)^0,c
  6057  00E29A  0E00               	movlw	0
  6058  00E29C  6E41               	movwf	(___flmul@a+2)^0,c
  6059  00E29E  0E3F               	movlw	63
  6060  00E2A0  6E42               	movwf	(___flmul@a+3)^0,c
  6061  00E2A2  0E00               	movlw	0
  6062  00E2A4  6E09               	movwf	(___lwdiv@divisor+1)^0,c
  6063  00E2A6  0E0A               	movlw	10
  6064  00E2A8  6E08               	movwf	___lwdiv@divisor^0,c
  6065  00E2AA  C068  F006         	movff	fround@prec,___lwdiv@dividend
  6066  00E2AE  6A07               	clrf	(___lwdiv@dividend+1)^0,c
  6067  00E2B0  ECE8  F063         	call	___lwdiv	;wreg free
  6068  00E2B4  90D8               	bcf	status,0,c
  6069  00E2B6  3606               	rlcf	?___lwdiv^0,f,c
  6070  00E2B8  3607               	rlcf	(?___lwdiv+1)^0,f,c
  6071  00E2BA  90D8               	bcf	status,0,c
  6072  00E2BC  3606               	rlcf	?___lwdiv^0,f,c
  6073  00E2BE  3607               	rlcf	(?___lwdiv+1)^0,f,c
  6074  00E2C0  0E24               	movlw	36
  6075  00E2C2  2606               	addwf	?___lwdiv^0,f,c
  6076  00E2C4  0E00               	movlw	0
  6077  00E2C6  2207               	addwfc	(?___lwdiv+1)^0,f,c
  6078  00E2C8  0EAB               	movlw	low __npowers_
  6079  00E2CA  2406               	addwf	?___lwdiv^0,w,c
  6080  00E2CC  6EF6               	movwf	tblptrl,c
  6081  00E2CE  0EFE               	movlw	high __npowers_
  6082  00E2D0  2007               	addwfc	(?___lwdiv+1)^0,w,c
  6083  00E2D2  6EF7               	movwf	tblptrh,c
  6084  00E2D4                     	if	1	;There are 3 active tblptr bytes
  6085  00E2D4  6AF8               	clrf	tblptru,c
  6086  00E2D6  0E00               	movlw	low (__mediumconst shr (0+16))
  6087  00E2D8  22F8               	addwfc	tblptru,f,c
  6088  00E2DA                     	endif
  6089  00E2DA  0009               	tblrd		*+
  6090  00E2DC  006F FFD4  F03B    	movff	tablat,___flmul@b
  6091  00E2E2  0009               	tblrd		*+
  6092  00E2E4  006F FFD4  F03C    	movff	tablat,___flmul@b+1
  6093  00E2EA  0009               	tblrd		*+
  6094  00E2EC  006F FFD4  F03D    	movff	tablat,___flmul@b+2
  6095  00E2F2  000A               	tblrd		*-
  6096  00E2F4  006F FFD4  F03E    	movff	tablat,___flmul@b+3
  6097  00E2FA  ECBF  F073         	call	___flmul	;wreg free
  6098  00E2FE  C03B  F064         	movff	?___flmul,_fround$1466
  6099  00E302  C03C  F065         	movff	?___flmul+1,_fround$1466+1
  6100  00E306  C03D  F066         	movff	?___flmul+2,_fround$1466+2
  6101  00E30A  C03E  F067         	movff	?___flmul+3,_fround$1466+3
  6102                           
  6103                           ;doprnt.c: 424: return 0.5 * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  6104  00E30E  C064  F03B         	movff	_fround$1466,___flmul@b
  6105  00E312  C065  F03C         	movff	_fround$1466+1,___flmul@b+1
  6106  00E316  C066  F03D         	movff	_fround$1466+2,___flmul@b+2
  6107  00E31A  C067  F03E         	movff	_fround$1466+3,___flmul@b+3
  6108  00E31E  0E00               	movlw	0
  6109  00E320  6E04               	movwf	(___lwmod@divisor+1)^0,c
  6110  00E322  0E0A               	movlw	10
  6111  00E324  6E03               	movwf	___lwmod@divisor^0,c
  6112  00E326  C068  F001         	movff	fround@prec,___lwmod@dividend
  6113  00E32A  6A02               	clrf	(___lwmod@dividend+1)^0,c
  6114  00E32C  ECB6  F063         	call	___lwmod	;wreg free
  6115  00E330  90D8               	bcf	status,0,c
  6116  00E332  3601               	rlcf	?___lwmod^0,f,c
  6117  00E334  3602               	rlcf	(?___lwmod+1)^0,f,c
  6118  00E336  90D8               	bcf	status,0,c
  6119  00E338  3601               	rlcf	?___lwmod^0,f,c
  6120  00E33A  3602               	rlcf	(?___lwmod+1)^0,f,c
  6121  00E33C  0EAB               	movlw	low __npowers_
  6122  00E33E  2401               	addwf	?___lwmod^0,w,c
  6123  00E340  6EF6               	movwf	tblptrl,c
  6124  00E342  0EFE               	movlw	high __npowers_
  6125  00E344  2002               	addwfc	(?___lwmod+1)^0,w,c
  6126  00E346  6EF7               	movwf	tblptrh,c
  6127  00E348                     	if	1	;There are 3 active tblptr bytes
  6128  00E348  6AF8               	clrf	tblptru,c
  6129  00E34A  0E00               	movlw	low (__mediumconst shr (0+16))
  6130  00E34C  22F8               	addwfc	tblptru,f,c
  6131  00E34E                     	endif
  6132  00E34E  0009               	tblrd		*+
  6133  00E350  006F FFD4  F03F    	movff	tablat,___flmul@a
  6134  00E356  0009               	tblrd		*+
  6135  00E358  006F FFD4  F040    	movff	tablat,___flmul@a+1
  6136  00E35E  0009               	tblrd		*+
  6137  00E360  006F FFD4  F041    	movff	tablat,___flmul@a+2
  6138  00E366  000A               	tblrd		*-
  6139  00E368  006F FFD4  F042    	movff	tablat,___flmul@a+3
  6140  00E36E  ECBF  F073         	call	___flmul	;wreg free
  6141  00E372  C03B  F054         	movff	?___flmul,?_fround
  6142  00E376  C03C  F055         	movff	?___flmul+1,?_fround+1
  6143  00E37A  C03D  F056         	movff	?___flmul+2,?_fround+2
  6144  00E37E  C03E  F057         	movff	?___flmul+3,?_fround+3
  6145  00E382  EFF0  F071         	goto	l367
  6146  00E386                     l3523:
  6147                           
  6148                           ; BSR set to: 0
  6149                           ;doprnt.c: 425: return 0.5 * _npowers_[prec];
  6150  00E386  5168               	movf	fround@prec& (0+255),w,b
  6151  00E388  0D04               	mullw	4
  6152  00E38A  0EAB               	movlw	low __npowers_
  6153  00E38C  24F3               	addwf	243,w,c
  6154  00E38E  6EF6               	movwf	tblptrl,c
  6155  00E390  0EFE               	movlw	high __npowers_
  6156  00E392  20F4               	addwfc	244,w,c
  6157  00E394  6EF7               	movwf	tblptrh,c
  6158  00E396                     	if	1	;There are 3 active tblptr bytes
  6159  00E396  6AF8               	clrf	tblptru,c
  6160  00E398  0E00               	movlw	low (__mediumconst shr (0+16))
  6161  00E39A  22F8               	addwfc	tblptru,f,c
  6162  00E39C                     	endif
  6163  00E39C  0009               	tblrd		*+
  6164  00E39E  006F FFD4  F03B    	movff	tablat,___flmul@b
  6165  00E3A4  0009               	tblrd		*+
  6166  00E3A6  006F FFD4  F03C    	movff	tablat,___flmul@b+1
  6167  00E3AC  0009               	tblrd		*+
  6168  00E3AE  006F FFD4  F03D    	movff	tablat,___flmul@b+2
  6169  00E3B4  000A               	tblrd		*-
  6170  00E3B6  006F FFD4  F03E    	movff	tablat,___flmul@b+3
  6171  00E3BC  0E00               	movlw	0
  6172  00E3BE  6E3F               	movwf	___flmul@a^0,c
  6173  00E3C0  0E00               	movlw	0
  6174  00E3C2  6E40               	movwf	(___flmul@a+1)^0,c
  6175  00E3C4  0E00               	movlw	0
  6176  00E3C6  6E41               	movwf	(___flmul@a+2)^0,c
  6177  00E3C8  0E3F               	movlw	63
  6178  00E3CA  6E42               	movwf	(___flmul@a+3)^0,c
  6179  00E3CC  ECBF  F073         	call	___flmul	;wreg free
  6180  00E3D0  C03B  F054         	movff	?___flmul,?_fround
  6181  00E3D4  C03C  F055         	movff	?___flmul+1,?_fround+1
  6182  00E3D8  C03D  F056         	movff	?___flmul+2,?_fround+2
  6183  00E3DC  C03E  F057         	movff	?___flmul+3,?_fround+3
  6184  00E3E0                     l367:
  6185  00E3E0  0012               	return		;funcret
  6186  00E3E2                     __end_of_fround:
  6187                           	callstack 0
  6188                           
  6189 ;; *************** function ___lwmod *****************
  6190 ;; Defined at:
  6191 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\lwmod.c"
  6192 ;; Parameters:    Size  Location     Type
  6193 ;;  dividend        2    0[COMRAM] unsigned int 
  6194 ;;  divisor         2    2[COMRAM] unsigned int 
  6195 ;; Auto vars:     Size  Location     Type
  6196 ;;  counter         1    4[COMRAM] unsigned char 
  6197 ;; Return value:  Size  Location     Type
  6198 ;;                  2    0[COMRAM] unsigned int 
  6199 ;; Registers used:
  6200 ;;		wreg, status,2, status,0
  6201 ;; Tracked objects:
  6202 ;;		On entry : 0/0
  6203 ;;		On exit  : 0/0
  6204 ;;		Unchanged: 0/0
  6205 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6206 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6207 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6208 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6209 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6210 ;;Total ram usage:        5 bytes
  6211 ;; Hardware stack levels used:    1
  6212 ;; This function calls:
  6213 ;;		Nothing
  6214 ;; This function is called by:
  6215 ;;		_fround
  6216 ;; This function uses a non-reentrant model
  6217 ;;
  6218                           
  6219                           	psect	text18
  6220  00C76C                     __ptext18:
  6221                           	callstack 0
  6222  00C76C                     ___lwmod:
  6223                           	callstack 28
  6224  00C76C  5003               	movf	___lwmod@divisor^0,w,c
  6225  00C76E  1004               	iorwf	(___lwmod@divisor+1)^0,w,c
  6226  00C770  B4D8               	btfsc	status,2,c
  6227  00C772  EFBD  F063         	goto	u3201
  6228  00C776  EFBF  F063         	goto	u3200
  6229  00C77A                     u3201:
  6230  00C77A  EFE3  F063         	goto	l964
  6231  00C77E                     u3200:
  6232  00C77E  0E01               	movlw	1
  6233  00C780  6E05               	movwf	___lwmod@counter^0,c
  6234  00C782  EFC7  F063         	goto	l3425
  6235  00C786                     l3423:
  6236  00C786  90D8               	bcf	status,0,c
  6237  00C788  3603               	rlcf	___lwmod@divisor^0,f,c
  6238  00C78A  3604               	rlcf	(___lwmod@divisor+1)^0,f,c
  6239  00C78C  2A05               	incf	___lwmod@counter^0,f,c
  6240  00C78E                     l3425:
  6241  00C78E  AE04               	btfss	(___lwmod@divisor+1)^0,7,c
  6242  00C790  EFCC  F063         	goto	u3211
  6243  00C794  EFCE  F063         	goto	u3210
  6244  00C798                     u3211:
  6245  00C798  EFC3  F063         	goto	l3423
  6246  00C79C                     u3210:
  6247  00C79C                     l3427:
  6248  00C79C  5003               	movf	___lwmod@divisor^0,w,c
  6249  00C79E  5C01               	subwf	___lwmod@dividend^0,w,c
  6250  00C7A0  5004               	movf	(___lwmod@divisor+1)^0,w,c
  6251  00C7A2  5802               	subwfb	(___lwmod@dividend+1)^0,w,c
  6252  00C7A4  A0D8               	btfss	status,0,c
  6253  00C7A6  EFD7  F063         	goto	u3221
  6254  00C7AA  EFD9  F063         	goto	u3220
  6255  00C7AE                     u3221:
  6256  00C7AE  EFDD  F063         	goto	l3431
  6257  00C7B2                     u3220:
  6258  00C7B2  5003               	movf	___lwmod@divisor^0,w,c
  6259  00C7B4  5E01               	subwf	___lwmod@dividend^0,f,c
  6260  00C7B6  5004               	movf	(___lwmod@divisor+1)^0,w,c
  6261  00C7B8  5A02               	subwfb	(___lwmod@dividend+1)^0,f,c
  6262  00C7BA                     l3431:
  6263  00C7BA  90D8               	bcf	status,0,c
  6264  00C7BC  3204               	rrcf	(___lwmod@divisor+1)^0,f,c
  6265  00C7BE  3203               	rrcf	___lwmod@divisor^0,f,c
  6266  00C7C0  2E05               	decfsz	___lwmod@counter^0,f,c
  6267  00C7C2  EFCE  F063         	goto	l3427
  6268  00C7C6                     l964:
  6269  00C7C6  C001  F001         	movff	___lwmod@dividend,?___lwmod
  6270  00C7CA  C002  F002         	movff	___lwmod@dividend+1,?___lwmod+1
  6271  00C7CE  0012               	return		;funcret
  6272  00C7D0                     __end_of___lwmod:
  6273                           	callstack 0
  6274                           
  6275 ;; *************** function ___lwdiv *****************
  6276 ;; Defined at:
  6277 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\lwdiv.c"
  6278 ;; Parameters:    Size  Location     Type
  6279 ;;  dividend        2    5[COMRAM] unsigned int 
  6280 ;;  divisor         2    7[COMRAM] unsigned int 
  6281 ;; Auto vars:     Size  Location     Type
  6282 ;;  quotient        2    9[COMRAM] unsigned int 
  6283 ;;  counter         1   11[COMRAM] unsigned char 
  6284 ;; Return value:  Size  Location     Type
  6285 ;;                  2    5[COMRAM] unsigned int 
  6286 ;; Registers used:
  6287 ;;		wreg, status,2, status,0
  6288 ;; Tracked objects:
  6289 ;;		On entry : 0/0
  6290 ;;		On exit  : 0/0
  6291 ;;		Unchanged: 0/0
  6292 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6293 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6294 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6295 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6296 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6297 ;;Total ram usage:        7 bytes
  6298 ;; Hardware stack levels used:    1
  6299 ;; This function calls:
  6300 ;;		Nothing
  6301 ;; This function is called by:
  6302 ;;		_fround
  6303 ;; This function uses a non-reentrant model
  6304 ;;
  6305                           
  6306                           	psect	text19
  6307  00C7D0                     __ptext19:
  6308                           	callstack 0
  6309  00C7D0                     ___lwdiv:
  6310                           	callstack 28
  6311  00C7D0  0E00               	movlw	0
  6312  00C7D2  6E0B               	movwf	(___lwdiv@quotient+1)^0,c
  6313  00C7D4  0E00               	movlw	0
  6314  00C7D6  6E0A               	movwf	___lwdiv@quotient^0,c
  6315  00C7D8  5008               	movf	___lwdiv@divisor^0,w,c
  6316  00C7DA  1009               	iorwf	(___lwdiv@divisor+1)^0,w,c
  6317  00C7DC  B4D8               	btfsc	status,2,c
  6318  00C7DE  EFF3  F063         	goto	u3171
  6319  00C7E2  EFF5  F063         	goto	u3170
  6320  00C7E6                     u3171:
  6321  00C7E6  EF1D  F064         	goto	l954
  6322  00C7EA                     u3170:
  6323  00C7EA  0E01               	movlw	1
  6324  00C7EC  6E0C               	movwf	___lwdiv@counter^0,c
  6325  00C7EE  EFFD  F063         	goto	l3405
  6326  00C7F2                     l3403:
  6327  00C7F2  90D8               	bcf	status,0,c
  6328  00C7F4  3608               	rlcf	___lwdiv@divisor^0,f,c
  6329  00C7F6  3609               	rlcf	(___lwdiv@divisor+1)^0,f,c
  6330  00C7F8  2A0C               	incf	___lwdiv@counter^0,f,c
  6331  00C7FA                     l3405:
  6332  00C7FA  AE09               	btfss	(___lwdiv@divisor+1)^0,7,c
  6333  00C7FC  EF02  F064         	goto	u3181
  6334  00C800  EF04  F064         	goto	u3180
  6335  00C804                     u3181:
  6336  00C804  EFF9  F063         	goto	l3403
  6337  00C808                     u3180:
  6338  00C808                     l3407:
  6339  00C808  90D8               	bcf	status,0,c
  6340  00C80A  360A               	rlcf	___lwdiv@quotient^0,f,c
  6341  00C80C  360B               	rlcf	(___lwdiv@quotient+1)^0,f,c
  6342  00C80E  5008               	movf	___lwdiv@divisor^0,w,c
  6343  00C810  5C06               	subwf	___lwdiv@dividend^0,w,c
  6344  00C812  5009               	movf	(___lwdiv@divisor+1)^0,w,c
  6345  00C814  5807               	subwfb	(___lwdiv@dividend+1)^0,w,c
  6346  00C816  A0D8               	btfss	status,0,c
  6347  00C818  EF10  F064         	goto	u3191
  6348  00C81C  EF12  F064         	goto	u3190
  6349  00C820                     u3191:
  6350  00C820  EF17  F064         	goto	l3415
  6351  00C824                     u3190:
  6352  00C824  5008               	movf	___lwdiv@divisor^0,w,c
  6353  00C826  5E06               	subwf	___lwdiv@dividend^0,f,c
  6354  00C828  5009               	movf	(___lwdiv@divisor+1)^0,w,c
  6355  00C82A  5A07               	subwfb	(___lwdiv@dividend+1)^0,f,c
  6356  00C82C  800A               	bsf	___lwdiv@quotient^0,0,c
  6357  00C82E                     l3415:
  6358  00C82E  90D8               	bcf	status,0,c
  6359  00C830  3209               	rrcf	(___lwdiv@divisor+1)^0,f,c
  6360  00C832  3208               	rrcf	___lwdiv@divisor^0,f,c
  6361  00C834  2E0C               	decfsz	___lwdiv@counter^0,f,c
  6362  00C836  EF04  F064         	goto	l3407
  6363  00C83A                     l954:
  6364  00C83A  C00A  F006         	movff	___lwdiv@quotient,?___lwdiv
  6365  00C83E  C00B  F007         	movff	___lwdiv@quotient+1,?___lwdiv+1
  6366  00C842  0012               	return		;funcret
  6367  00C844                     __end_of___lwdiv:
  6368                           	callstack 0
  6369                           
  6370 ;; *************** function ___flmul *****************
  6371 ;; Defined at:
  6372 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\sprcmul.c"
  6373 ;; Parameters:    Size  Location     Type
  6374 ;;  b               4   58[COMRAM] unsigned int 
  6375 ;;  a               4   62[COMRAM] unsigned int 
  6376 ;; Auto vars:     Size  Location     Type
  6377 ;;  prod            4   77[COMRAM] struct .
  6378 ;;  grs             4   71[COMRAM] unsigned long 
  6379 ;;  temp            2   81[COMRAM] struct .
  6380 ;;  bexp            1   76[COMRAM] unsigned char 
  6381 ;;  aexp            1   75[COMRAM] unsigned char 
  6382 ;;  sign            1   70[COMRAM] unsigned char 
  6383 ;; Return value:  Size  Location     Type
  6384 ;;                  4   58[COMRAM] unsigned char 
  6385 ;; Registers used:
  6386 ;;		wreg, status,2, status,0, prodl, prodh
  6387 ;; Tracked objects:
  6388 ;;		On entry : 0/0
  6389 ;;		On exit  : 0/0
  6390 ;;		Unchanged: 0/0
  6391 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6392 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6393 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6394 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6395 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6396 ;;Total ram usage:       25 bytes
  6397 ;; Hardware stack levels used:    1
  6398 ;; This function calls:
  6399 ;;		Nothing
  6400 ;; This function is called by:
  6401 ;;		_main
  6402 ;;		_fround
  6403 ;;		_scale
  6404 ;;		_printf
  6405 ;;		_pow
  6406 ;;		_exp
  6407 ;;		_eval_poly
  6408 ;;		_log
  6409 ;; This function uses a non-reentrant model
  6410 ;;
  6411                           
  6412                           	psect	text20
  6413  00E77E                     __ptext20:
  6414                           	callstack 0
  6415  00E77E                     ___flmul:
  6416                           	callstack 28
  6417  00E77E  503E               	movf	(___flmul@b+3)^0,w,c
  6418  00E780  0B80               	andlw	128
  6419  00E782  6E47               	movwf	___flmul@sign^0,c
  6420  00E784  503E               	movf	(___flmul@b+3)^0,w,c
  6421  00E786  243E               	addwf	(___flmul@b+3)^0,w,c
  6422  00E788  6E4D               	movwf	___flmul@bexp^0,c
  6423  00E78A  AE3D               	btfss	(___flmul@b+2)^0,7,c
  6424  00E78C  EFCA  F073         	goto	u2741
  6425  00E790  EFCC  F073         	goto	u2740
  6426  00E794                     u2741:
  6427  00E794  EFCD  F073         	goto	l3127
  6428  00E798                     u2740:
  6429  00E798  804D               	bsf	___flmul@bexp^0,0,c
  6430  00E79A                     l3127:
  6431  00E79A  504D               	movf	___flmul@bexp^0,w,c
  6432  00E79C  B4D8               	btfsc	status,2,c
  6433  00E79E  EFD3  F073         	goto	u2751
  6434  00E7A2  EFD5  F073         	goto	u2750
  6435  00E7A6                     u2751:
  6436  00E7A6  EFE8  F073         	goto	l3135
  6437  00E7AA                     u2750:
  6438  00E7AA  284D               	incf	___flmul@bexp^0,w,c
  6439  00E7AC  A4D8               	btfss	status,2,c
  6440  00E7AE  EFDB  F073         	goto	u2761
  6441  00E7B2  EFDD  F073         	goto	u2760
  6442  00E7B6                     u2761:
  6443  00E7B6  EFE5  F073         	goto	l3133
  6444  00E7BA                     u2760:
  6445  00E7BA  0E00               	movlw	0
  6446  00E7BC  6E3B               	movwf	___flmul@b^0,c
  6447  00E7BE  0E00               	movlw	0
  6448  00E7C0  6E3C               	movwf	(___flmul@b+1)^0,c
  6449  00E7C2  0E00               	movlw	0
  6450  00E7C4  6E3D               	movwf	(___flmul@b+2)^0,c
  6451  00E7C6  0E00               	movlw	0
  6452  00E7C8  6E3E               	movwf	(___flmul@b+3)^0,c
  6453  00E7CA                     l3133:
  6454  00E7CA  8E3D               	bsf	(___flmul@b+2)^0,7,c
  6455  00E7CC  EFF0  F073         	goto	l3137
  6456  00E7D0                     l3135:
  6457  00E7D0  0E00               	movlw	0
  6458  00E7D2  6E3B               	movwf	___flmul@b^0,c
  6459  00E7D4  0E00               	movlw	0
  6460  00E7D6  6E3C               	movwf	(___flmul@b+1)^0,c
  6461  00E7D8  0E00               	movlw	0
  6462  00E7DA  6E3D               	movwf	(___flmul@b+2)^0,c
  6463  00E7DC  0E00               	movlw	0
  6464  00E7DE  6E3E               	movwf	(___flmul@b+3)^0,c
  6465  00E7E0                     l3137:
  6466  00E7E0  5042               	movf	(___flmul@a+3)^0,w,c
  6467  00E7E2  0B80               	andlw	128
  6468  00E7E4  1A47               	xorwf	___flmul@sign^0,f,c
  6469  00E7E6  5042               	movf	(___flmul@a+3)^0,w,c
  6470  00E7E8  2442               	addwf	(___flmul@a+3)^0,w,c
  6471  00E7EA  6E4C               	movwf	___flmul@aexp^0,c
  6472  00E7EC  AE41               	btfss	(___flmul@a+2)^0,7,c
  6473  00E7EE  EFFB  F073         	goto	u2771
  6474  00E7F2  EFFD  F073         	goto	u2770
  6475  00E7F6                     u2771:
  6476  00E7F6  EFFE  F073         	goto	l3145
  6477  00E7FA                     u2770:
  6478  00E7FA  804C               	bsf	___flmul@aexp^0,0,c
  6479  00E7FC                     l3145:
  6480  00E7FC  504C               	movf	___flmul@aexp^0,w,c
  6481  00E7FE  B4D8               	btfsc	status,2,c
  6482  00E800  EF04  F074         	goto	u2781
  6483  00E804  EF06  F074         	goto	u2780
  6484  00E808                     u2781:
  6485  00E808  EF19  F074         	goto	l3153
  6486  00E80C                     u2780:
  6487  00E80C  284C               	incf	___flmul@aexp^0,w,c
  6488  00E80E  A4D8               	btfss	status,2,c
  6489  00E810  EF0C  F074         	goto	u2791
  6490  00E814  EF0E  F074         	goto	u2790
  6491  00E818                     u2791:
  6492  00E818  EF16  F074         	goto	l3151
  6493  00E81C                     u2790:
  6494  00E81C  0E00               	movlw	0
  6495  00E81E  6E3F               	movwf	___flmul@a^0,c
  6496  00E820  0E00               	movlw	0
  6497  00E822  6E40               	movwf	(___flmul@a+1)^0,c
  6498  00E824  0E00               	movlw	0
  6499  00E826  6E41               	movwf	(___flmul@a+2)^0,c
  6500  00E828  0E00               	movlw	0
  6501  00E82A  6E42               	movwf	(___flmul@a+3)^0,c
  6502  00E82C                     l3151:
  6503  00E82C  8E41               	bsf	(___flmul@a+2)^0,7,c
  6504  00E82E  EF21  F074         	goto	l1077
  6505  00E832                     l3153:
  6506  00E832  0E00               	movlw	0
  6507  00E834  6E3F               	movwf	___flmul@a^0,c
  6508  00E836  0E00               	movlw	0
  6509  00E838  6E40               	movwf	(___flmul@a+1)^0,c
  6510  00E83A  0E00               	movlw	0
  6511  00E83C  6E41               	movwf	(___flmul@a+2)^0,c
  6512  00E83E  0E00               	movlw	0
  6513  00E840  6E42               	movwf	(___flmul@a+3)^0,c
  6514  00E842                     l1077:
  6515  00E842  504C               	movf	___flmul@aexp^0,w,c
  6516  00E844  B4D8               	btfsc	status,2,c
  6517  00E846  EF27  F074         	goto	u2801
  6518  00E84A  EF29  F074         	goto	u2800
  6519  00E84E                     u2801:
  6520  00E84E  EF31  F074         	goto	l3157
  6521  00E852                     u2800:
  6522  00E852  504D               	movf	___flmul@bexp^0,w,c
  6523  00E854  A4D8               	btfss	status,2,c
  6524  00E856  EF2F  F074         	goto	u2811
  6525  00E85A  EF31  F074         	goto	u2810
  6526  00E85E                     u2811:
  6527  00E85E  EF3B  F074         	goto	l3161
  6528  00E862                     u2810:
  6529  00E862                     l3157:
  6530  00E862  0E00               	movlw	0
  6531  00E864  6E3B               	movwf	?___flmul^0,c
  6532  00E866  0E00               	movlw	0
  6533  00E868  6E3C               	movwf	(?___flmul+1)^0,c
  6534  00E86A  0E00               	movlw	0
  6535  00E86C  6E3D               	movwf	(?___flmul+2)^0,c
  6536  00E86E  0E00               	movlw	0
  6537  00E870  6E3E               	movwf	(?___flmul+3)^0,c
  6538  00E872  EFE5  F075         	goto	l1081
  6539  00E876                     l3161:
  6540  00E876  5041               	movf	(___flmul@a+2)^0,w,c
  6541  00E878  023B               	mulwf	___flmul@b^0,c
  6542  00E87A  006F FFCC  F052    	movff	prodl,___flmul@temp
  6543  00E880  006F FFD0  F053    	movff	prodh,___flmul@temp+1
  6544  00E886  5052               	movf	___flmul@temp^0,w,c
  6545  00E888  6E48               	movwf	___flmul@grs^0,c
  6546  00E88A  6A49               	clrf	(___flmul@grs+1)^0,c
  6547  00E88C  6A4A               	clrf	(___flmul@grs+2)^0,c
  6548  00E88E  6A4B               	clrf	(___flmul@grs+3)^0,c
  6549  00E890  5053               	movf	(___flmul@temp+1)^0,w,c
  6550  00E892  6E4E               	movwf	___flmul@prod^0,c
  6551  00E894  6A4F               	clrf	(___flmul@prod+1)^0,c
  6552  00E896  6A50               	clrf	(___flmul@prod+2)^0,c
  6553  00E898  6A51               	clrf	(___flmul@prod+3)^0,c
  6554  00E89A  5040               	movf	(___flmul@a+1)^0,w,c
  6555  00E89C  023C               	mulwf	(___flmul@b+1)^0,c
  6556  00E89E  006F FFCC  F052    	movff	prodl,___flmul@temp
  6557  00E8A4  006F FFD0  F053    	movff	prodh,___flmul@temp+1
  6558  00E8AA  5052               	movf	___flmul@temp^0,w,c
  6559  00E8AC  2648               	addwf	___flmul@grs^0,f,c
  6560  00E8AE  0E00               	movlw	0
  6561  00E8B0  2249               	addwfc	(___flmul@grs+1)^0,f,c
  6562  00E8B2  224A               	addwfc	(___flmul@grs+2)^0,f,c
  6563  00E8B4  224B               	addwfc	(___flmul@grs+3)^0,f,c
  6564  00E8B6  5053               	movf	(___flmul@temp+1)^0,w,c
  6565  00E8B8  264E               	addwf	___flmul@prod^0,f,c
  6566  00E8BA  0E00               	movlw	0
  6567  00E8BC  224F               	addwfc	(___flmul@prod+1)^0,f,c
  6568  00E8BE  2250               	addwfc	(___flmul@prod+2)^0,f,c
  6569  00E8C0  2251               	addwfc	(___flmul@prod+3)^0,f,c
  6570  00E8C2  503F               	movf	___flmul@a^0,w,c
  6571  00E8C4  023D               	mulwf	(___flmul@b+2)^0,c
  6572  00E8C6  006F FFCC  F052    	movff	prodl,___flmul@temp
  6573  00E8CC  006F FFD0  F053    	movff	prodh,___flmul@temp+1
  6574  00E8D2  5052               	movf	___flmul@temp^0,w,c
  6575  00E8D4  2648               	addwf	___flmul@grs^0,f,c
  6576  00E8D6  0E00               	movlw	0
  6577  00E8D8  2249               	addwfc	(___flmul@grs+1)^0,f,c
  6578  00E8DA  224A               	addwfc	(___flmul@grs+2)^0,f,c
  6579  00E8DC  224B               	addwfc	(___flmul@grs+3)^0,f,c
  6580  00E8DE  5053               	movf	(___flmul@temp+1)^0,w,c
  6581  00E8E0  264E               	addwf	___flmul@prod^0,f,c
  6582  00E8E2  0E00               	movlw	0
  6583  00E8E4  224F               	addwfc	(___flmul@prod+1)^0,f,c
  6584  00E8E6  2250               	addwfc	(___flmul@prod+2)^0,f,c
  6585  00E8E8  2251               	addwfc	(___flmul@prod+3)^0,f,c
  6586  00E8EA  C04A  F04B         	movff	___flmul@grs+2,___flmul@grs+3
  6587  00E8EE  C049  F04A         	movff	___flmul@grs+1,___flmul@grs+2
  6588  00E8F2  C048  F049         	movff	___flmul@grs,___flmul@grs+1
  6589  00E8F6  6A48               	clrf	___flmul@grs^0,c
  6590  00E8F8  503F               	movf	___flmul@a^0,w,c
  6591  00E8FA  023C               	mulwf	(___flmul@b+1)^0,c
  6592  00E8FC  006F FFCC  F052    	movff	prodl,___flmul@temp
  6593  00E902  006F FFD0  F053    	movff	prodh,___flmul@temp+1
  6594  00E908  5052               	movf	___flmul@temp^0,w,c
  6595  00E90A  2648               	addwf	___flmul@grs^0,f,c
  6596  00E90C  5053               	movf	(___flmul@temp+1)^0,w,c
  6597  00E90E  2249               	addwfc	(___flmul@grs+1)^0,f,c
  6598  00E910  0E00               	movlw	0
  6599  00E912  224A               	addwfc	(___flmul@grs+2)^0,f,c
  6600  00E914  0E00               	movlw	0
  6601  00E916  224B               	addwfc	(___flmul@grs+3)^0,f,c
  6602  00E918  5040               	movf	(___flmul@a+1)^0,w,c
  6603  00E91A  023B               	mulwf	___flmul@b^0,c
  6604  00E91C  006F FFCC  F052    	movff	prodl,___flmul@temp
  6605  00E922  006F FFD0  F053    	movff	prodh,___flmul@temp+1
  6606  00E928  5052               	movf	___flmul@temp^0,w,c
  6607  00E92A  2648               	addwf	___flmul@grs^0,f,c
  6608  00E92C  5053               	movf	(___flmul@temp+1)^0,w,c
  6609  00E92E  2249               	addwfc	(___flmul@grs+1)^0,f,c
  6610  00E930  0E00               	movlw	0
  6611  00E932  224A               	addwfc	(___flmul@grs+2)^0,f,c
  6612  00E934  0E00               	movlw	0
  6613  00E936  224B               	addwfc	(___flmul@grs+3)^0,f,c
  6614  00E938  C04A  F04B         	movff	___flmul@grs+2,___flmul@grs+3
  6615  00E93C  C049  F04A         	movff	___flmul@grs+1,___flmul@grs+2
  6616  00E940  C048  F049         	movff	___flmul@grs,___flmul@grs+1
  6617  00E944  6A48               	clrf	___flmul@grs^0,c
  6618  00E946  503F               	movf	___flmul@a^0,w,c
  6619  00E948  023B               	mulwf	___flmul@b^0,c
  6620  00E94A  006F FFCC  F052    	movff	prodl,___flmul@temp
  6621  00E950  006F FFD0  F053    	movff	prodh,___flmul@temp+1
  6622  00E956  5052               	movf	___flmul@temp^0,w,c
  6623  00E958  2648               	addwf	___flmul@grs^0,f,c
  6624  00E95A  5053               	movf	(___flmul@temp+1)^0,w,c
  6625  00E95C  2249               	addwfc	(___flmul@grs+1)^0,f,c
  6626  00E95E  0E00               	movlw	0
  6627  00E960  224A               	addwfc	(___flmul@grs+2)^0,f,c
  6628  00E962  0E00               	movlw	0
  6629  00E964  224B               	addwfc	(___flmul@grs+3)^0,f,c
  6630  00E966  5041               	movf	(___flmul@a+2)^0,w,c
  6631  00E968  023C               	mulwf	(___flmul@b+1)^0,c
  6632  00E96A  006F FFCC  F052    	movff	prodl,___flmul@temp
  6633  00E970  006F FFD0  F053    	movff	prodh,___flmul@temp+1
  6634  00E976  5052               	movf	___flmul@temp^0,w,c
  6635  00E978  264E               	addwf	___flmul@prod^0,f,c
  6636  00E97A  5053               	movf	(___flmul@temp+1)^0,w,c
  6637  00E97C  224F               	addwfc	(___flmul@prod+1)^0,f,c
  6638  00E97E  0E00               	movlw	0
  6639  00E980  2250               	addwfc	(___flmul@prod+2)^0,f,c
  6640  00E982  0E00               	movlw	0
  6641  00E984  2251               	addwfc	(___flmul@prod+3)^0,f,c
  6642  00E986  5040               	movf	(___flmul@a+1)^0,w,c
  6643  00E988  023D               	mulwf	(___flmul@b+2)^0,c
  6644  00E98A  006F FFCC  F052    	movff	prodl,___flmul@temp
  6645  00E990  006F FFD0  F053    	movff	prodh,___flmul@temp+1
  6646  00E996  5052               	movf	___flmul@temp^0,w,c
  6647  00E998  264E               	addwf	___flmul@prod^0,f,c
  6648  00E99A  5053               	movf	(___flmul@temp+1)^0,w,c
  6649  00E99C  224F               	addwfc	(___flmul@prod+1)^0,f,c
  6650  00E99E  0E00               	movlw	0
  6651  00E9A0  2250               	addwfc	(___flmul@prod+2)^0,f,c
  6652  00E9A2  0E00               	movlw	0
  6653  00E9A4  2251               	addwfc	(___flmul@prod+3)^0,f,c
  6654  00E9A6  5041               	movf	(___flmul@a+2)^0,w,c
  6655  00E9A8  023D               	mulwf	(___flmul@b+2)^0,c
  6656  00E9AA  006F FFCC  F052    	movff	prodl,___flmul@temp
  6657  00E9B0  006F FFD0  F053    	movff	prodh,___flmul@temp+1
  6658  00E9B6  5052               	movf	___flmul@temp^0,w,c
  6659  00E9B8  6E43               	movwf	??___flmul^0,c
  6660  00E9BA  5053               	movf	(___flmul@temp+1)^0,w,c
  6661  00E9BC  6E44               	movwf	(??___flmul+1)^0,c
  6662  00E9BE  6A45               	clrf	(??___flmul+2)^0,c
  6663  00E9C0  6A46               	clrf	(??___flmul+3)^0,c
  6664  00E9C2  C045  F046         	movff	??___flmul+2,??___flmul+3
  6665  00E9C6  C044  F045         	movff	??___flmul+1,??___flmul+2
  6666  00E9CA  C043  F044         	movff	??___flmul,??___flmul+1
  6667  00E9CE  6A43               	clrf	??___flmul^0,c
  6668  00E9D0  5043               	movf	??___flmul^0,w,c
  6669  00E9D2  264E               	addwf	___flmul@prod^0,f,c
  6670  00E9D4  5044               	movf	(??___flmul+1)^0,w,c
  6671  00E9D6  224F               	addwfc	(___flmul@prod+1)^0,f,c
  6672  00E9D8  5045               	movf	(??___flmul+2)^0,w,c
  6673  00E9DA  2250               	addwfc	(___flmul@prod+2)^0,f,c
  6674  00E9DC  5046               	movf	(??___flmul+3)^0,w,c
  6675  00E9DE  2251               	addwfc	(___flmul@prod+3)^0,f,c
  6676  00E9E0  C048  F043         	movff	___flmul@grs,??___flmul
  6677  00E9E4  C049  F044         	movff	___flmul@grs+1,??___flmul+1
  6678  00E9E8  C04A  F045         	movff	___flmul@grs+2,??___flmul+2
  6679  00E9EC  C04B  F046         	movff	___flmul@grs+3,??___flmul+3
  6680  00E9F0  0E19               	movlw	25
  6681  00E9F2  EF00  F075         	goto	u2820
  6682  00E9F6                     u2825:
  6683  00E9F6  90D8               	bcf	status,0,c
  6684  00E9F8  3246               	rrcf	(??___flmul+3)^0,f,c
  6685  00E9FA  3245               	rrcf	(??___flmul+2)^0,f,c
  6686  00E9FC  3244               	rrcf	(??___flmul+1)^0,f,c
  6687  00E9FE  3243               	rrcf	??___flmul^0,f,c
  6688  00EA00                     u2820:
  6689  00EA00  2EE8               	decfsz	wreg,f,c
  6690  00EA02  EFFB  F074         	goto	u2825
  6691  00EA06  5043               	movf	??___flmul^0,w,c
  6692  00EA08  264E               	addwf	___flmul@prod^0,f,c
  6693  00EA0A  5044               	movf	(??___flmul+1)^0,w,c
  6694  00EA0C  224F               	addwfc	(___flmul@prod+1)^0,f,c
  6695  00EA0E  5045               	movf	(??___flmul+2)^0,w,c
  6696  00EA10  2250               	addwfc	(___flmul@prod+2)^0,f,c
  6697  00EA12  5046               	movf	(??___flmul+3)^0,w,c
  6698  00EA14  2251               	addwfc	(___flmul@prod+3)^0,f,c
  6699  00EA16  C04A  F04B         	movff	___flmul@grs+2,___flmul@grs+3
  6700  00EA1A  C049  F04A         	movff	___flmul@grs+1,___flmul@grs+2
  6701  00EA1E  C048  F049         	movff	___flmul@grs,___flmul@grs+1
  6702  00EA22  6A48               	clrf	___flmul@grs^0,c
  6703  00EA24  504C               	movf	___flmul@aexp^0,w,c
  6704  00EA26  C04D  F043         	movff	___flmul@bexp,??___flmul
  6705  00EA2A  6A44               	clrf	(??___flmul+1)^0,c
  6706  00EA2C  2643               	addwf	??___flmul^0,f,c
  6707  00EA2E  0E00               	movlw	0
  6708  00EA30  2244               	addwfc	(??___flmul+1)^0,f,c
  6709  00EA32  0E82               	movlw	130
  6710  00EA34  2443               	addwf	??___flmul^0,w,c
  6711  00EA36  6E52               	movwf	___flmul@temp^0,c
  6712  00EA38  0EFF               	movlw	255
  6713  00EA3A  2044               	addwfc	(??___flmul+1)^0,w,c
  6714  00EA3C  6E53               	movwf	(___flmul@temp+1)^0,c
  6715  00EA3E  EF36  F075         	goto	l3209
  6716  00EA42                     l3203:
  6717  00EA42  90D8               	bcf	status,0,c
  6718  00EA44  364E               	rlcf	___flmul@prod^0,f,c
  6719  00EA46  364F               	rlcf	(___flmul@prod+1)^0,f,c
  6720  00EA48  3650               	rlcf	(___flmul@prod+2)^0,f,c
  6721  00EA4A  3651               	rlcf	(___flmul@prod+3)^0,f,c
  6722  00EA4C  AE4B               	btfss	(___flmul@grs+3)^0,7,c
  6723  00EA4E  EF2B  F075         	goto	u2831
  6724  00EA52  EF2D  F075         	goto	u2830
  6725  00EA56                     u2831:
  6726  00EA56  EF2E  F075         	goto	l1084
  6727  00EA5A                     u2830:
  6728  00EA5A  804E               	bsf	___flmul@prod^0,0,c
  6729  00EA5C                     l1084:
  6730  00EA5C  90D8               	bcf	status,0,c
  6731  00EA5E  3648               	rlcf	___flmul@grs^0,f,c
  6732  00EA60  3649               	rlcf	(___flmul@grs+1)^0,f,c
  6733  00EA62  364A               	rlcf	(___flmul@grs+2)^0,f,c
  6734  00EA64  364B               	rlcf	(___flmul@grs+3)^0,f,c
  6735  00EA66  0652               	decf	___flmul@temp^0,f,c
  6736  00EA68  A0D8               	btfss	status,0,c
  6737  00EA6A  0653               	decf	(___flmul@temp+1)^0,f,c
  6738  00EA6C                     l3209:
  6739  00EA6C  AE50               	btfss	(___flmul@prod+2)^0,7,c
  6740  00EA6E  EF3B  F075         	goto	u2841
  6741  00EA72  EF3D  F075         	goto	u2840
  6742  00EA76                     u2841:
  6743  00EA76  EF21  F075         	goto	l3203
  6744  00EA7A                     u2840:
  6745  00EA7A  0E00               	movlw	0
  6746  00EA7C  6E4C               	movwf	___flmul@aexp^0,c
  6747  00EA7E  AE4B               	btfss	(___flmul@grs+3)^0,7,c
  6748  00EA80  EF44  F075         	goto	u2851
  6749  00EA84  EF46  F075         	goto	u2850
  6750  00EA88                     u2851:
  6751  00EA88  EF6A  F075         	goto	l1086
  6752  00EA8C                     u2850:
  6753  00EA8C  0EFF               	movlw	255
  6754  00EA8E  1448               	andwf	___flmul@grs^0,w,c
  6755  00EA90  6E43               	movwf	??___flmul^0,c
  6756  00EA92  0EFF               	movlw	255
  6757  00EA94  1449               	andwf	(___flmul@grs+1)^0,w,c
  6758  00EA96  6E44               	movwf	(??___flmul+1)^0,c
  6759  00EA98  0EFF               	movlw	255
  6760  00EA9A  144A               	andwf	(___flmul@grs+2)^0,w,c
  6761  00EA9C  6E45               	movwf	(??___flmul+2)^0,c
  6762  00EA9E  0E7F               	movlw	127
  6763  00EAA0  144B               	andwf	(___flmul@grs+3)^0,w,c
  6764  00EAA2  6E46               	movwf	(??___flmul+3)^0,c
  6765  00EAA4  5043               	movf	??___flmul^0,w,c
  6766  00EAA6  1044               	iorwf	(??___flmul+1)^0,w,c
  6767  00EAA8  1045               	iorwf	(??___flmul+2)^0,w,c
  6768  00EAAA  1046               	iorwf	(??___flmul+3)^0,w,c
  6769  00EAAC  B4D8               	btfsc	status,2,c
  6770  00EAAE  EF5B  F075         	goto	u2861
  6771  00EAB2  EF5D  F075         	goto	u2860
  6772  00EAB6                     u2861:
  6773  00EAB6  EF61  F075         	goto	l1087
  6774  00EABA                     u2860:
  6775  00EABA                     l3217:
  6776  00EABA  0E01               	movlw	1
  6777  00EABC  6E4C               	movwf	___flmul@aexp^0,c
  6778  00EABE  EF6A  F075         	goto	l1086
  6779  00EAC2                     l1087:
  6780  00EAC2  A04E               	btfss	___flmul@prod^0,0,c
  6781  00EAC4  EF66  F075         	goto	u2871
  6782  00EAC8  EF68  F075         	goto	u2870
  6783  00EACC                     u2871:
  6784  00EACC  EF6A  F075         	goto	l1086
  6785  00EAD0                     u2870:
  6786  00EAD0  EF5D  F075         	goto	l3217
  6787  00EAD4                     l1086:
  6788  00EAD4  504C               	movf	___flmul@aexp^0,w,c
  6789  00EAD6  B4D8               	btfsc	status,2,c
  6790  00EAD8  EF70  F075         	goto	u2881
  6791  00EADC  EF72  F075         	goto	u2880
  6792  00EAE0                     u2881:
  6793  00EAE0  EF96  F075         	goto	l3229
  6794  00EAE4                     u2880:
  6795  00EAE4  0E01               	movlw	1
  6796  00EAE6  264E               	addwf	___flmul@prod^0,f,c
  6797  00EAE8  0E00               	movlw	0
  6798  00EAEA  224F               	addwfc	(___flmul@prod+1)^0,f,c
  6799  00EAEC  2250               	addwfc	(___flmul@prod+2)^0,f,c
  6800  00EAEE  2251               	addwfc	(___flmul@prod+3)^0,f,c
  6801  00EAF0  A051               	btfss	(___flmul@prod+3)^0,0,c
  6802  00EAF2  EF7D  F075         	goto	u2891
  6803  00EAF6  EF7F  F075         	goto	u2890
  6804  00EAFA                     u2891:
  6805  00EAFA  EF96  F075         	goto	l3229
  6806  00EAFE                     u2890:
  6807  00EAFE  C04E  F043         	movff	___flmul@prod,??___flmul
  6808  00EB02  C04F  F044         	movff	___flmul@prod+1,??___flmul+1
  6809  00EB06  C050  F045         	movff	___flmul@prod+2,??___flmul+2
  6810  00EB0A  C051  F046         	movff	___flmul@prod+3,??___flmul+3
  6811  00EB0E  3446               	rlcf	(??___flmul+3)^0,w,c
  6812  00EB10  3246               	rrcf	(??___flmul+3)^0,f,c
  6813  00EB12  3245               	rrcf	(??___flmul+2)^0,f,c
  6814  00EB14  3244               	rrcf	(??___flmul+1)^0,f,c
  6815  00EB16  3243               	rrcf	??___flmul^0,f,c
  6816  00EB18  C043  F04E         	movff	??___flmul,___flmul@prod
  6817  00EB1C  C044  F04F         	movff	??___flmul+1,___flmul@prod+1
  6818  00EB20  C045  F050         	movff	??___flmul+2,___flmul@prod+2
  6819  00EB24  C046  F051         	movff	??___flmul+3,___flmul@prod+3
  6820  00EB28  4A52               	infsnz	___flmul@temp^0,f,c
  6821  00EB2A  2A53               	incf	(___flmul@temp+1)^0,f,c
  6822  00EB2C                     l3229:
  6823  00EB2C  BE53               	btfsc	(___flmul@temp+1)^0,7,c
  6824  00EB2E  EFA1  F075         	goto	u2901
  6825  00EB32  5053               	movf	(___flmul@temp+1)^0,w,c
  6826  00EB34  E108               	bnz	u2900
  6827  00EB36  2852               	incf	___flmul@temp^0,w,c
  6828  00EB38  A0D8               	btfss	status,0,c
  6829  00EB3A  EFA1  F075         	goto	u2901
  6830  00EB3E  EFA3  F075         	goto	u2900
  6831  00EB42                     u2901:
  6832  00EB42  EFAD  F075         	goto	l3233
  6833  00EB46                     u2900:
  6834  00EB46  0E00               	movlw	0
  6835  00EB48  6E4E               	movwf	___flmul@prod^0,c
  6836  00EB4A  0E00               	movlw	0
  6837  00EB4C  6E4F               	movwf	(___flmul@prod+1)^0,c
  6838  00EB4E  0E80               	movlw	128
  6839  00EB50  6E50               	movwf	(___flmul@prod+2)^0,c
  6840  00EB52  0E7F               	movlw	127
  6841  00EB54  6E51               	movwf	(___flmul@prod+3)^0,c
  6842  00EB56  EFDB  F075         	goto	l3245
  6843  00EB5A                     l3233:
  6844  00EB5A  BE53               	btfsc	(___flmul@temp+1)^0,7,c
  6845  00EB5C  EFBA  F075         	goto	u2910
  6846  00EB60  5053               	movf	(___flmul@temp+1)^0,w,c
  6847  00EB62  E106               	bnz	u2911
  6848  00EB64  0452               	decf	___flmul@temp^0,w,c
  6849  00EB66  B0D8               	btfsc	status,0,c
  6850  00EB68  EFB8  F075         	goto	u2911
  6851  00EB6C  EFBA  F075         	goto	u2910
  6852  00EB70                     u2911:
  6853  00EB70  EFC6  F075         	goto	l1094
  6854  00EB74                     u2910:
  6855  00EB74  0E00               	movlw	0
  6856  00EB76  6E4E               	movwf	___flmul@prod^0,c
  6857  00EB78  0E00               	movlw	0
  6858  00EB7A  6E4F               	movwf	(___flmul@prod+1)^0,c
  6859  00EB7C  0E00               	movlw	0
  6860  00EB7E  6E50               	movwf	(___flmul@prod+2)^0,c
  6861  00EB80  0E00               	movlw	0
  6862  00EB82  6E51               	movwf	(___flmul@prod+3)^0,c
  6863  00EB84  0E00               	movlw	0
  6864  00EB86  6E47               	movwf	___flmul@sign^0,c
  6865  00EB88  EFDB  F075         	goto	l3245
  6866  00EB8C                     l1094:
  6867  00EB8C  C052  F04D         	movff	___flmul@temp,___flmul@bexp
  6868  00EB90  0EFF               	movlw	255
  6869  00EB92  164E               	andwf	___flmul@prod^0,f,c
  6870  00EB94  0EFF               	movlw	255
  6871  00EB96  164F               	andwf	(___flmul@prod+1)^0,f,c
  6872  00EB98  0E7F               	movlw	127
  6873  00EB9A  1650               	andwf	(___flmul@prod+2)^0,f,c
  6874  00EB9C  0E00               	movlw	0
  6875  00EB9E  1651               	andwf	(___flmul@prod+3)^0,f,c
  6876  00EBA0  A04D               	btfss	___flmul@bexp^0,0,c
  6877  00EBA2  EFD5  F075         	goto	u2921
  6878  00EBA6  EFD7  F075         	goto	u2920
  6879  00EBAA                     u2921:
  6880  00EBAA  EFD8  F075         	goto	l3243
  6881  00EBAE                     u2920:
  6882  00EBAE  8E50               	bsf	(___flmul@prod+2)^0,7,c
  6883  00EBB0                     l3243:
  6884  00EBB0  90D8               	bcf	status,0,c
  6885  00EBB2  304D               	rrcf	___flmul@bexp^0,w,c
  6886  00EBB4  6E51               	movwf	(___flmul@prod+3)^0,c
  6887  00EBB6                     l3245:
  6888  00EBB6  5047               	movf	___flmul@sign^0,w,c
  6889  00EBB8  1251               	iorwf	(___flmul@prod+3)^0,f,c
  6890  00EBBA  C04E  F03B         	movff	___flmul@prod,?___flmul
  6891  00EBBE  C04F  F03C         	movff	___flmul@prod+1,?___flmul+1
  6892  00EBC2  C050  F03D         	movff	___flmul@prod+2,?___flmul+2
  6893  00EBC6  C051  F03E         	movff	___flmul@prod+3,?___flmul+3
  6894  00EBCA                     l1081:
  6895  00EBCA  0012               	return		;funcret
  6896  00EBCC                     __end_of___flmul:
  6897                           	callstack 0
  6898                           
  6899 ;; *************** function __tdiv_to_l_ *****************
  6900 ;; Defined at:
  6901 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\ftdivl.c"
  6902 ;; Parameters:    Size  Location     Type
  6903 ;;  f1              4    0[COMRAM] float 
  6904 ;;  f2              4    4[COMRAM] float 
  6905 ;; Auto vars:     Size  Location     Type
  6906 ;;  quot            4   11[COMRAM] unsigned long 
  6907 ;;  exp1            1   16[COMRAM] unsigned char 
  6908 ;;  cntr            1   15[COMRAM] unsigned char 
  6909 ;; Return value:  Size  Location     Type
  6910 ;;                  4    0[COMRAM] unsigned long 
  6911 ;; Registers used:
  6912 ;;		wreg, status,2, status,0
  6913 ;; Tracked objects:
  6914 ;;		On entry : 0/0
  6915 ;;		On exit  : 0/0
  6916 ;;		Unchanged: 0/0
  6917 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6918 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6919 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6920 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6921 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6922 ;;Total ram usage:       17 bytes
  6923 ;; Hardware stack levels used:    1
  6924 ;; This function calls:
  6925 ;;		Nothing
  6926 ;; This function is called by:
  6927 ;;		_printf
  6928 ;; This function uses a non-reentrant model
  6929 ;;
  6930                           
  6931                           	psect	text21
  6932  00D4EE                     __ptext21:
  6933                           	callstack 0
  6934  00D4EE                     __tdiv_to_l_:
  6935                           	callstack 29
  6936  00D4EE  C003  F009         	movff	__tdiv_to_l_@f1+2,??__tdiv_to_l_
  6937  00D4F2  6A0A               	clrf	(??__tdiv_to_l_+1)^0,c
  6938  00D4F4  6A0B               	clrf	(??__tdiv_to_l_+2)^0,c
  6939  00D4F6  3402               	rlcf	(__tdiv_to_l_@f1+1)^0,w,c
  6940  00D4F8  3609               	rlcf	??__tdiv_to_l_^0,f,c
  6941  00D4FA  E301               	bnc	u3421
  6942  00D4FC  800A               	bsf	(??__tdiv_to_l_+1)^0,0,c
  6943  00D4FE                     u3421:
  6944  00D4FE  5009               	movf	??__tdiv_to_l_^0,w,c
  6945  00D500  6E11               	movwf	__tdiv_to_l_@exp1^0,c
  6946  00D502  5011               	movf	__tdiv_to_l_@exp1^0,w,c
  6947  00D504  A4D8               	btfss	status,2,c
  6948  00D506  EF87  F06A         	goto	u3431
  6949  00D50A  EF89  F06A         	goto	u3430
  6950  00D50E                     u3431:
  6951  00D50E  EF93  F06A         	goto	l3571
  6952  00D512                     u3430:
  6953  00D512                     l3567:
  6954  00D512  0E00               	movlw	0
  6955  00D514  6E01               	movwf	?__tdiv_to_l_^0,c
  6956  00D516  0E00               	movlw	0
  6957  00D518  6E02               	movwf	(?__tdiv_to_l_+1)^0,c
  6958  00D51A  0E00               	movlw	0
  6959  00D51C  6E03               	movwf	(?__tdiv_to_l_+2)^0,c
  6960  00D51E  0E00               	movlw	0
  6961  00D520  6E04               	movwf	(?__tdiv_to_l_+3)^0,c
  6962  00D522  EF21  F06B         	goto	l804
  6963  00D526                     l3571:
  6964  00D526  C007  F009         	movff	__tdiv_to_l_@f2+2,??__tdiv_to_l_
  6965  00D52A  6A0A               	clrf	(??__tdiv_to_l_+1)^0,c
  6966  00D52C  6A0B               	clrf	(??__tdiv_to_l_+2)^0,c
  6967  00D52E  3406               	rlcf	(__tdiv_to_l_@f2+1)^0,w,c
  6968  00D530  3609               	rlcf	??__tdiv_to_l_^0,f,c
  6969  00D532  E301               	bnc	u3441
  6970  00D534  800A               	bsf	(??__tdiv_to_l_+1)^0,0,c
  6971  00D536                     u3441:
  6972  00D536  5009               	movf	??__tdiv_to_l_^0,w,c
  6973  00D538  6E10               	movwf	__tdiv_to_l_@cntr^0,c
  6974  00D53A  5010               	movf	__tdiv_to_l_@cntr^0,w,c
  6975  00D53C  A4D8               	btfss	status,2,c
  6976  00D53E  EFA3  F06A         	goto	u3451
  6977  00D542  EFA5  F06A         	goto	u3450
  6978  00D546                     u3451:
  6979  00D546  EFA7  F06A         	goto	l3577
  6980  00D54A                     u3450:
  6981  00D54A  EF89  F06A         	goto	l3567
  6982  00D54E                     l3577:
  6983  00D54E  8E02               	bsf	(__tdiv_to_l_@f1+1)^0,7,c
  6984  00D550  0EFF               	movlw	255
  6985  00D552  1601               	andwf	__tdiv_to_l_@f1^0,f,c
  6986  00D554  0EFF               	movlw	255
  6987  00D556  1602               	andwf	(__tdiv_to_l_@f1+1)^0,f,c
  6988  00D558  0E00               	movlw	0
  6989  00D55A  1603               	andwf	(__tdiv_to_l_@f1+2)^0,f,c
  6990  00D55C  8E06               	bsf	(__tdiv_to_l_@f2+1)^0,7,c
  6991  00D55E  0EFF               	movlw	255
  6992  00D560  1605               	andwf	__tdiv_to_l_@f2^0,f,c
  6993  00D562  0EFF               	movlw	255
  6994  00D564  1606               	andwf	(__tdiv_to_l_@f2+1)^0,f,c
  6995  00D566  0E00               	movlw	0
  6996  00D568  1607               	andwf	(__tdiv_to_l_@f2+2)^0,f,c
  6997  00D56A  0E00               	movlw	0
  6998  00D56C  6E0C               	movwf	__tdiv_to_l_@quot^0,c
  6999  00D56E  0E00               	movlw	0
  7000  00D570  6E0D               	movwf	(__tdiv_to_l_@quot+1)^0,c
  7001  00D572  0E00               	movlw	0
  7002  00D574  6E0E               	movwf	(__tdiv_to_l_@quot+2)^0,c
  7003  00D576  0E00               	movlw	0
  7004  00D578  6E0F               	movwf	(__tdiv_to_l_@quot+3)^0,c
  7005  00D57A  0E7F               	movlw	127
  7006  00D57C  5E11               	subwf	__tdiv_to_l_@exp1^0,f,c
  7007  00D57E  5010               	movf	__tdiv_to_l_@cntr^0,w,c
  7008  00D580  0F98               	addlw	152
  7009  00D582  5E11               	subwf	__tdiv_to_l_@exp1^0,f,c
  7010  00D584  0E18               	movlw	24
  7011  00D586  6E10               	movwf	__tdiv_to_l_@cntr^0,c
  7012  00D588                     l806:
  7013  00D588  90D8               	bcf	status,0,c
  7014  00D58A  360C               	rlcf	__tdiv_to_l_@quot^0,f,c
  7015  00D58C  360D               	rlcf	(__tdiv_to_l_@quot+1)^0,f,c
  7016  00D58E  360E               	rlcf	(__tdiv_to_l_@quot+2)^0,f,c
  7017  00D590  360F               	rlcf	(__tdiv_to_l_@quot+3)^0,f,c
  7018  00D592  5005               	movf	__tdiv_to_l_@f2^0,w,c
  7019  00D594  5C01               	subwf	__tdiv_to_l_@f1^0,w,c
  7020  00D596  5006               	movf	(__tdiv_to_l_@f2+1)^0,w,c
  7021  00D598  5802               	subwfb	(__tdiv_to_l_@f1+1)^0,w,c
  7022  00D59A  5007               	movf	(__tdiv_to_l_@f2+2)^0,w,c
  7023  00D59C  5803               	subwfb	(__tdiv_to_l_@f1+2)^0,w,c
  7024  00D59E  A0D8               	btfss	status,0,c
  7025  00D5A0  EFD4  F06A         	goto	u3461
  7026  00D5A4  EFD6  F06A         	goto	u3460
  7027  00D5A8                     u3461:
  7028  00D5A8  EFDD  F06A         	goto	l807
  7029  00D5AC                     u3460:
  7030  00D5AC  5005               	movf	__tdiv_to_l_@f2^0,w,c
  7031  00D5AE  5E01               	subwf	__tdiv_to_l_@f1^0,f,c
  7032  00D5B0  5006               	movf	(__tdiv_to_l_@f2+1)^0,w,c
  7033  00D5B2  5A02               	subwfb	(__tdiv_to_l_@f1+1)^0,f,c
  7034  00D5B4  5007               	movf	(__tdiv_to_l_@f2+2)^0,w,c
  7035  00D5B6  5A03               	subwfb	(__tdiv_to_l_@f1+2)^0,f,c
  7036  00D5B8  800C               	bsf	__tdiv_to_l_@quot^0,0,c
  7037  00D5BA                     l807:
  7038  00D5BA  90D8               	bcf	status,0,c
  7039  00D5BC  3601               	rlcf	__tdiv_to_l_@f1^0,f,c
  7040  00D5BE  3602               	rlcf	(__tdiv_to_l_@f1+1)^0,f,c
  7041  00D5C0  3603               	rlcf	(__tdiv_to_l_@f1+2)^0,f,c
  7042  00D5C2  2E10               	decfsz	__tdiv_to_l_@cntr^0,f,c
  7043  00D5C4  EFC4  F06A         	goto	l806
  7044  00D5C8  BE11               	btfsc	__tdiv_to_l_@exp1^0,7,c
  7045  00D5CA  EFEB  F06A         	goto	u3470
  7046  00D5CE  EFE9  F06A         	goto	u3471
  7047  00D5D2                     u3471:
  7048  00D5D2  EF01  F06B         	goto	l3611
  7049  00D5D6                     u3470:
  7050  00D5D6  5011               	movf	__tdiv_to_l_@exp1^0,w,c
  7051  00D5D8  0A80               	xorlw	128
  7052  00D5DA  0F97               	addlw	151
  7053  00D5DC  B0D8               	btfsc	status,0,c
  7054  00D5DE  EFF3  F06A         	goto	u3481
  7055  00D5E2  EFF5  F06A         	goto	u3480
  7056  00D5E6                     u3481:
  7057  00D5E6  EFF7  F06A         	goto	l3607
  7058  00D5EA                     u3480:
  7059  00D5EA  EF89  F06A         	goto	l3567
  7060  00D5EE                     l3607:
  7061  00D5EE  90D8               	bcf	status,0,c
  7062  00D5F0  320F               	rrcf	(__tdiv_to_l_@quot+3)^0,f,c
  7063  00D5F2  320E               	rrcf	(__tdiv_to_l_@quot+2)^0,f,c
  7064  00D5F4  320D               	rrcf	(__tdiv_to_l_@quot+1)^0,f,c
  7065  00D5F6  320C               	rrcf	__tdiv_to_l_@quot^0,f,c
  7066  00D5F8  3E11               	incfsz	__tdiv_to_l_@exp1^0,f,c
  7067  00D5FA  EFF7  F06A         	goto	l3607
  7068  00D5FE  EF19  F06B         	goto	l813
  7069  00D602                     l3611:
  7070  00D602  0E17               	movlw	23
  7071  00D604  6411               	cpfsgt	__tdiv_to_l_@exp1^0,c
  7072  00D606  EF07  F06B         	goto	u3491
  7073  00D60A  EF09  F06B         	goto	u3490
  7074  00D60E                     u3491:
  7075  00D60E  EF11  F06B         	goto	l3619
  7076  00D612                     u3490:
  7077  00D612  EF89  F06A         	goto	l3567
  7078  00D616                     l3617:
  7079  00D616  90D8               	bcf	status,0,c
  7080  00D618  360C               	rlcf	__tdiv_to_l_@quot^0,f,c
  7081  00D61A  360D               	rlcf	(__tdiv_to_l_@quot+1)^0,f,c
  7082  00D61C  360E               	rlcf	(__tdiv_to_l_@quot+2)^0,f,c
  7083  00D61E  360F               	rlcf	(__tdiv_to_l_@quot+3)^0,f,c
  7084  00D620  0611               	decf	__tdiv_to_l_@exp1^0,f,c
  7085  00D622                     l3619:
  7086  00D622  5011               	movf	__tdiv_to_l_@exp1^0,w,c
  7087  00D624  A4D8               	btfss	status,2,c
  7088  00D626  EF17  F06B         	goto	u3501
  7089  00D62A  EF19  F06B         	goto	u3500
  7090  00D62E                     u3501:
  7091  00D62E  EF0B  F06B         	goto	l3617
  7092  00D632                     u3500:
  7093  00D632                     l813:
  7094  00D632  C00C  F001         	movff	__tdiv_to_l_@quot,?__tdiv_to_l_
  7095  00D636  C00D  F002         	movff	__tdiv_to_l_@quot+1,?__tdiv_to_l_+1
  7096  00D63A  C00E  F003         	movff	__tdiv_to_l_@quot+2,?__tdiv_to_l_+2
  7097  00D63E  C00F  F004         	movff	__tdiv_to_l_@quot+3,?__tdiv_to_l_+3
  7098  00D642                     l804:
  7099  00D642  0012               	return		;funcret
  7100  00D644                     __end_of__tdiv_to_l_:
  7101                           	callstack 0
  7102                           
  7103 ;; *************** function __div_to_l_ *****************
  7104 ;; Defined at:
  7105 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\fldivl.c"
  7106 ;; Parameters:    Size  Location     Type
  7107 ;;  f1              4    0[COMRAM] unsigned long 
  7108 ;;  f2              4    4[COMRAM] unsigned long 
  7109 ;; Auto vars:     Size  Location     Type
  7110 ;;  quot            4    8[COMRAM] unsigned long 
  7111 ;;  exp1            1   13[COMRAM] unsigned char 
  7112 ;;  cntr            1   12[COMRAM] unsigned char 
  7113 ;; Return value:  Size  Location     Type
  7114 ;;                  4    0[COMRAM] unsigned long 
  7115 ;; Registers used:
  7116 ;;		wreg, status,2, status,0
  7117 ;; Tracked objects:
  7118 ;;		On entry : 0/0
  7119 ;;		On exit  : 0/0
  7120 ;;		Unchanged: 0/0
  7121 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7122 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7123 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7124 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7125 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7126 ;;Total ram usage:       14 bytes
  7127 ;; Hardware stack levels used:    1
  7128 ;; This function calls:
  7129 ;;		Nothing
  7130 ;; This function is called by:
  7131 ;;		_printf
  7132 ;; This function uses a non-reentrant model
  7133 ;;
  7134                           
  7135                           	psect	text22
  7136  00D3A2                     __ptext22:
  7137                           	callstack 0
  7138  00D3A2                     __div_to_l_:
  7139                           	callstack 29
  7140  00D3A2  3403               	rlcf	(__div_to_l_@f1+2)^0,w,c
  7141  00D3A4  3404               	rlcf	(__div_to_l_@f1+3)^0,w,c
  7142  00D3A6  6E0E               	movwf	__div_to_l_@exp1^0,c
  7143  00D3A8  500E               	movf	__div_to_l_@exp1^0,w,c
  7144  00D3AA  A4D8               	btfss	status,2,c
  7145  00D3AC  EFDA  F069         	goto	u3511
  7146  00D3B0  EFDC  F069         	goto	u3510
  7147  00D3B4                     u3511:
  7148  00D3B4  EFE6  F069         	goto	l3627
  7149  00D3B8                     u3510:
  7150  00D3B8                     l3623:
  7151  00D3B8  0E00               	movlw	0
  7152  00D3BA  6E01               	movwf	?__div_to_l_^0,c
  7153  00D3BC  0E00               	movlw	0
  7154  00D3BE  6E02               	movwf	(?__div_to_l_+1)^0,c
  7155  00D3C0  0E00               	movlw	0
  7156  00D3C2  6E03               	movwf	(?__div_to_l_+2)^0,c
  7157  00D3C4  0E00               	movlw	0
  7158  00D3C6  6E04               	movwf	(?__div_to_l_+3)^0,c
  7159  00D3C8  EF76  F06A         	goto	l695
  7160  00D3CC                     l3627:
  7161  00D3CC  3407               	rlcf	(__div_to_l_@f2+2)^0,w,c
  7162  00D3CE  3408               	rlcf	(__div_to_l_@f2+3)^0,w,c
  7163  00D3D0  6E0D               	movwf	__div_to_l_@cntr^0,c
  7164  00D3D2  500D               	movf	__div_to_l_@cntr^0,w,c
  7165  00D3D4  A4D8               	btfss	status,2,c
  7166  00D3D6  EFEF  F069         	goto	u3521
  7167  00D3DA  EFF1  F069         	goto	u3520
  7168  00D3DE                     u3521:
  7169  00D3DE  EFF3  F069         	goto	l3633
  7170  00D3E2                     u3520:
  7171  00D3E2  EFDC  F069         	goto	l3623
  7172  00D3E6                     l3633:
  7173  00D3E6  8E03               	bsf	(__div_to_l_@f1+2)^0,7,c
  7174  00D3E8  0EFF               	movlw	255
  7175  00D3EA  1601               	andwf	__div_to_l_@f1^0,f,c
  7176  00D3EC  0EFF               	movlw	255
  7177  00D3EE  1602               	andwf	(__div_to_l_@f1+1)^0,f,c
  7178  00D3F0  0EFF               	movlw	255
  7179  00D3F2  1603               	andwf	(__div_to_l_@f1+2)^0,f,c
  7180  00D3F4  0E00               	movlw	0
  7181  00D3F6  1604               	andwf	(__div_to_l_@f1+3)^0,f,c
  7182  00D3F8  8E07               	bsf	(__div_to_l_@f2+2)^0,7,c
  7183  00D3FA  0EFF               	movlw	255
  7184  00D3FC  1605               	andwf	__div_to_l_@f2^0,f,c
  7185  00D3FE  0EFF               	movlw	255
  7186  00D400  1606               	andwf	(__div_to_l_@f2+1)^0,f,c
  7187  00D402  0EFF               	movlw	255
  7188  00D404  1607               	andwf	(__div_to_l_@f2+2)^0,f,c
  7189  00D406  0E00               	movlw	0
  7190  00D408  1608               	andwf	(__div_to_l_@f2+3)^0,f,c
  7191  00D40A  0E00               	movlw	0
  7192  00D40C  6E09               	movwf	__div_to_l_@quot^0,c
  7193  00D40E  0E00               	movlw	0
  7194  00D410  6E0A               	movwf	(__div_to_l_@quot+1)^0,c
  7195  00D412  0E00               	movlw	0
  7196  00D414  6E0B               	movwf	(__div_to_l_@quot+2)^0,c
  7197  00D416  0E00               	movlw	0
  7198  00D418  6E0C               	movwf	(__div_to_l_@quot+3)^0,c
  7199  00D41A  0E7F               	movlw	127
  7200  00D41C  5E0E               	subwf	__div_to_l_@exp1^0,f,c
  7201  00D41E  500D               	movf	__div_to_l_@cntr^0,w,c
  7202  00D420  0FA0               	addlw	160
  7203  00D422  5E0E               	subwf	__div_to_l_@exp1^0,f,c
  7204  00D424  0E20               	movlw	32
  7205  00D426  6E0D               	movwf	__div_to_l_@cntr^0,c
  7206  00D428                     l3647:
  7207  00D428  90D8               	bcf	status,0,c
  7208  00D42A  3609               	rlcf	__div_to_l_@quot^0,f,c
  7209  00D42C  360A               	rlcf	(__div_to_l_@quot+1)^0,f,c
  7210  00D42E  360B               	rlcf	(__div_to_l_@quot+2)^0,f,c
  7211  00D430  360C               	rlcf	(__div_to_l_@quot+3)^0,f,c
  7212  00D432  5005               	movf	__div_to_l_@f2^0,w,c
  7213  00D434  5C01               	subwf	__div_to_l_@f1^0,w,c
  7214  00D436  5006               	movf	(__div_to_l_@f2+1)^0,w,c
  7215  00D438  5802               	subwfb	(__div_to_l_@f1+1)^0,w,c
  7216  00D43A  5007               	movf	(__div_to_l_@f2+2)^0,w,c
  7217  00D43C  5803               	subwfb	(__div_to_l_@f1+2)^0,w,c
  7218  00D43E  5008               	movf	(__div_to_l_@f2+3)^0,w,c
  7219  00D440  5804               	subwfb	(__div_to_l_@f1+3)^0,w,c
  7220  00D442  A0D8               	btfss	status,0,c
  7221  00D444  EF26  F06A         	goto	u3531
  7222  00D448  EF28  F06A         	goto	u3530
  7223  00D44C                     u3531:
  7224  00D44C  EF31  F06A         	goto	l3655
  7225  00D450                     u3530:
  7226  00D450  5005               	movf	__div_to_l_@f2^0,w,c
  7227  00D452  5E01               	subwf	__div_to_l_@f1^0,f,c
  7228  00D454  5006               	movf	(__div_to_l_@f2+1)^0,w,c
  7229  00D456  5A02               	subwfb	(__div_to_l_@f1+1)^0,f,c
  7230  00D458  5007               	movf	(__div_to_l_@f2+2)^0,w,c
  7231  00D45A  5A03               	subwfb	(__div_to_l_@f1+2)^0,f,c
  7232  00D45C  5008               	movf	(__div_to_l_@f2+3)^0,w,c
  7233  00D45E  5A04               	subwfb	(__div_to_l_@f1+3)^0,f,c
  7234  00D460  8009               	bsf	__div_to_l_@quot^0,0,c
  7235  00D462                     l3655:
  7236  00D462  90D8               	bcf	status,0,c
  7237  00D464  3601               	rlcf	__div_to_l_@f1^0,f,c
  7238  00D466  3602               	rlcf	(__div_to_l_@f1+1)^0,f,c
  7239  00D468  3603               	rlcf	(__div_to_l_@f1+2)^0,f,c
  7240  00D46A  3604               	rlcf	(__div_to_l_@f1+3)^0,f,c
  7241  00D46C  2E0D               	decfsz	__div_to_l_@cntr^0,f,c
  7242  00D46E  EF14  F06A         	goto	l3647
  7243  00D472  BE0E               	btfsc	__div_to_l_@exp1^0,7,c
  7244  00D474  EF40  F06A         	goto	u3540
  7245  00D478  EF3E  F06A         	goto	u3541
  7246  00D47C                     u3541:
  7247  00D47C  EF56  F06A         	goto	l3671
  7248  00D480                     u3540:
  7249  00D480  500E               	movf	__div_to_l_@exp1^0,w,c
  7250  00D482  0A80               	xorlw	128
  7251  00D484  0F9F               	addlw	159
  7252  00D486  B0D8               	btfsc	status,0,c
  7253  00D488  EF48  F06A         	goto	u3551
  7254  00D48C  EF4A  F06A         	goto	u3550
  7255  00D490                     u3551:
  7256  00D490  EF4C  F06A         	goto	l3667
  7257  00D494                     u3550:
  7258  00D494  EFDC  F069         	goto	l3623
  7259  00D498                     l3667:
  7260  00D498  90D8               	bcf	status,0,c
  7261  00D49A  320C               	rrcf	(__div_to_l_@quot+3)^0,f,c
  7262  00D49C  320B               	rrcf	(__div_to_l_@quot+2)^0,f,c
  7263  00D49E  320A               	rrcf	(__div_to_l_@quot+1)^0,f,c
  7264  00D4A0  3209               	rrcf	__div_to_l_@quot^0,f,c
  7265  00D4A2  3E0E               	incfsz	__div_to_l_@exp1^0,f,c
  7266  00D4A4  EF4C  F06A         	goto	l3667
  7267  00D4A8  EF6E  F06A         	goto	l704
  7268  00D4AC                     l3671:
  7269  00D4AC  0E1F               	movlw	31
  7270  00D4AE  640E               	cpfsgt	__div_to_l_@exp1^0,c
  7271  00D4B0  EF5C  F06A         	goto	u3561
  7272  00D4B4  EF5E  F06A         	goto	u3560
  7273  00D4B8                     u3561:
  7274  00D4B8  EF66  F06A         	goto	l3679
  7275  00D4BC                     u3560:
  7276  00D4BC  EFDC  F069         	goto	l3623
  7277  00D4C0                     l3677:
  7278  00D4C0  90D8               	bcf	status,0,c
  7279  00D4C2  3609               	rlcf	__div_to_l_@quot^0,f,c
  7280  00D4C4  360A               	rlcf	(__div_to_l_@quot+1)^0,f,c
  7281  00D4C6  360B               	rlcf	(__div_to_l_@quot+2)^0,f,c
  7282  00D4C8  360C               	rlcf	(__div_to_l_@quot+3)^0,f,c
  7283  00D4CA  060E               	decf	__div_to_l_@exp1^0,f,c
  7284  00D4CC                     l3679:
  7285  00D4CC  500E               	movf	__div_to_l_@exp1^0,w,c
  7286  00D4CE  A4D8               	btfss	status,2,c
  7287  00D4D0  EF6C  F06A         	goto	u3571
  7288  00D4D4  EF6E  F06A         	goto	u3570
  7289  00D4D8                     u3571:
  7290  00D4D8  EF60  F06A         	goto	l3677
  7291  00D4DC                     u3570:
  7292  00D4DC                     l704:
  7293  00D4DC  C009  F001         	movff	__div_to_l_@quot,?__div_to_l_
  7294  00D4E0  C00A  F002         	movff	__div_to_l_@quot+1,?__div_to_l_+1
  7295  00D4E4  C00B  F003         	movff	__div_to_l_@quot+2,?__div_to_l_+2
  7296  00D4E8  C00C  F004         	movff	__div_to_l_@quot+3,?__div_to_l_+3
  7297  00D4EC                     l695:
  7298  00D4EC  0012               	return		;funcret
  7299  00D4EE                     __end_of__div_to_l_:
  7300                           	callstack 0
  7301                           
  7302 ;; *************** function ___xxtofl *****************
  7303 ;; Defined at:
  7304 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\xxtofl.c"
  7305 ;; Parameters:    Size  Location     Type
  7306 ;;  sign            1    wreg     unsigned char 
  7307 ;;  val             4   24[COMRAM] long 
  7308 ;; Auto vars:     Size  Location     Type
  7309 ;;  sign            1   32[COMRAM] unsigned char 
  7310 ;;  arg             4   34[COMRAM] unsigned long 
  7311 ;;  exp             1   33[COMRAM] unsigned char 
  7312 ;; Return value:  Size  Location     Type
  7313 ;;                  4   24[COMRAM] unsigned char 
  7314 ;; Registers used:
  7315 ;;		wreg, status,2, status,0
  7316 ;; Tracked objects:
  7317 ;;		On entry : 0/0
  7318 ;;		On exit  : 0/0
  7319 ;;		Unchanged: 0/0
  7320 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7321 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7322 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7323 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7324 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7325 ;;Total ram usage:       14 bytes
  7326 ;; Hardware stack levels used:    1
  7327 ;; This function calls:
  7328 ;;		Nothing
  7329 ;; This function is called by:
  7330 ;;		_main
  7331 ;;		_printf
  7332 ;;		_pow
  7333 ;;		_exp
  7334 ;;		_floor
  7335 ;;		_log
  7336 ;; This function uses a non-reentrant model
  7337 ;;
  7338                           
  7339                           	psect	text23
  7340  00D7E2                     __ptext23:
  7341                           	callstack 0
  7342  00D7E2                     ___xxtofl:
  7343                           	callstack 29
  7344                           
  7345                           ;incstack = 0
  7346                           ;___xxtofl@sign stored from wreg
  7347  00D7E2  6E21               	movwf	___xxtofl@sign^0,c
  7348  00D7E4  5021               	movf	___xxtofl@sign^0,w,c
  7349  00D7E6  B4D8               	btfsc	status,2,c
  7350  00D7E8  EFF8  F06B         	goto	u3231
  7351  00D7EC  EFFA  F06B         	goto	u3230
  7352  00D7F0                     u3231:
  7353  00D7F0  EF1C  F06C         	goto	l1118
  7354  00D7F4                     u3230:
  7355  00D7F4  BE1C               	btfsc	(___xxtofl@val+3)^0,7,c
  7356  00D7F6  EF01  F06C         	goto	u3240
  7357  00D7FA  EFFF  F06B         	goto	u3241
  7358  00D7FE                     u3241:
  7359  00D7FE  EF1C  F06C         	goto	l1118
  7360  00D802                     u3240:
  7361  00D802  C019  F01D         	movff	___xxtofl@val,??___xxtofl
  7362  00D806  C01A  F01E         	movff	___xxtofl@val+1,??___xxtofl+1
  7363  00D80A  C01B  F01F         	movff	___xxtofl@val+2,??___xxtofl+2
  7364  00D80E  C01C  F020         	movff	___xxtofl@val+3,??___xxtofl+3
  7365  00D812  1E1D               	comf	??___xxtofl^0,f,c
  7366  00D814  1E1E               	comf	(??___xxtofl+1)^0,f,c
  7367  00D816  1E1F               	comf	(??___xxtofl+2)^0,f,c
  7368  00D818  1E20               	comf	(??___xxtofl+3)^0,f,c
  7369  00D81A  2A1D               	incf	??___xxtofl^0,f,c
  7370  00D81C  0E00               	movlw	0
  7371  00D81E  221E               	addwfc	(??___xxtofl+1)^0,f,c
  7372  00D820  221F               	addwfc	(??___xxtofl+2)^0,f,c
  7373  00D822  2220               	addwfc	(??___xxtofl+3)^0,f,c
  7374  00D824  C01D  F023         	movff	??___xxtofl,___xxtofl@arg
  7375  00D828  C01E  F024         	movff	??___xxtofl+1,___xxtofl@arg+1
  7376  00D82C  C01F  F025         	movff	??___xxtofl+2,___xxtofl@arg+2
  7377  00D830  C020  F026         	movff	??___xxtofl+3,___xxtofl@arg+3
  7378  00D834  EF24  F06C         	goto	l3441
  7379  00D838                     l1118:
  7380  00D838  C019  F023         	movff	___xxtofl@val,___xxtofl@arg
  7381  00D83C  C01A  F024         	movff	___xxtofl@val+1,___xxtofl@arg+1
  7382  00D840  C01B  F025         	movff	___xxtofl@val+2,___xxtofl@arg+2
  7383  00D844  C01C  F026         	movff	___xxtofl@val+3,___xxtofl@arg+3
  7384  00D848                     l3441:
  7385  00D848  5019               	movf	___xxtofl@val^0,w,c
  7386  00D84A  101A               	iorwf	(___xxtofl@val+1)^0,w,c
  7387  00D84C  101B               	iorwf	(___xxtofl@val+2)^0,w,c
  7388  00D84E  101C               	iorwf	(___xxtofl@val+3)^0,w,c
  7389  00D850  A4D8               	btfss	status,2,c
  7390  00D852  EF2D  F06C         	goto	u3251
  7391  00D856  EF2F  F06C         	goto	u3250
  7392  00D85A                     u3251:
  7393  00D85A  EF39  F06C         	goto	l3447
  7394  00D85E                     u3250:
  7395  00D85E  0E00               	movlw	0
  7396  00D860  6E19               	movwf	?___xxtofl^0,c
  7397  00D862  0E00               	movlw	0
  7398  00D864  6E1A               	movwf	(?___xxtofl+1)^0,c
  7399  00D866  0E00               	movlw	0
  7400  00D868  6E1B               	movwf	(?___xxtofl+2)^0,c
  7401  00D86A  0E00               	movlw	0
  7402  00D86C  6E1C               	movwf	(?___xxtofl+3)^0,c
  7403  00D86E  EFCA  F06C         	goto	l1121
  7404  00D872                     l3447:
  7405  00D872  0E96               	movlw	150
  7406  00D874  6E22               	movwf	___xxtofl@exp^0,c
  7407  00D876  EF43  F06C         	goto	l3451
  7408  00D87A                     l3449:
  7409  00D87A  2A22               	incf	___xxtofl@exp^0,f,c
  7410  00D87C  90D8               	bcf	status,0,c
  7411  00D87E  3226               	rrcf	(___xxtofl@arg+3)^0,f,c
  7412  00D880  3225               	rrcf	(___xxtofl@arg+2)^0,f,c
  7413  00D882  3224               	rrcf	(___xxtofl@arg+1)^0,f,c
  7414  00D884  3223               	rrcf	___xxtofl@arg^0,f,c
  7415  00D886                     l3451:
  7416  00D886  0E00               	movlw	0
  7417  00D888  1423               	andwf	___xxtofl@arg^0,w,c
  7418  00D88A  6E1D               	movwf	??___xxtofl^0,c
  7419  00D88C  0E00               	movlw	0
  7420  00D88E  1424               	andwf	(___xxtofl@arg+1)^0,w,c
  7421  00D890  6E1E               	movwf	(??___xxtofl+1)^0,c
  7422  00D892  0E00               	movlw	0
  7423  00D894  1425               	andwf	(___xxtofl@arg+2)^0,w,c
  7424  00D896  6E1F               	movwf	(??___xxtofl+2)^0,c
  7425  00D898  0EFE               	movlw	254
  7426  00D89A  1426               	andwf	(___xxtofl@arg+3)^0,w,c
  7427  00D89C  6E20               	movwf	(??___xxtofl+3)^0,c
  7428  00D89E  501D               	movf	??___xxtofl^0,w,c
  7429  00D8A0  101E               	iorwf	(??___xxtofl+1)^0,w,c
  7430  00D8A2  101F               	iorwf	(??___xxtofl+2)^0,w,c
  7431  00D8A4  1020               	iorwf	(??___xxtofl+3)^0,w,c
  7432  00D8A6  A4D8               	btfss	status,2,c
  7433  00D8A8  EF58  F06C         	goto	u3261
  7434  00D8AC  EF5A  F06C         	goto	u3260
  7435  00D8B0                     u3261:
  7436  00D8B0  EF3D  F06C         	goto	l3449
  7437  00D8B4                     u3260:
  7438  00D8B4  EF68  F06C         	goto	l1125
  7439  00D8B8                     l3453:
  7440  00D8B8  2A22               	incf	___xxtofl@exp^0,f,c
  7441  00D8BA  0E01               	movlw	1
  7442  00D8BC  2623               	addwf	___xxtofl@arg^0,f,c
  7443  00D8BE  0E00               	movlw	0
  7444  00D8C0  2224               	addwfc	(___xxtofl@arg+1)^0,f,c
  7445  00D8C2  2225               	addwfc	(___xxtofl@arg+2)^0,f,c
  7446  00D8C4  2226               	addwfc	(___xxtofl@arg+3)^0,f,c
  7447  00D8C6  90D8               	bcf	status,0,c
  7448  00D8C8  3226               	rrcf	(___xxtofl@arg+3)^0,f,c
  7449  00D8CA  3225               	rrcf	(___xxtofl@arg+2)^0,f,c
  7450  00D8CC  3224               	rrcf	(___xxtofl@arg+1)^0,f,c
  7451  00D8CE  3223               	rrcf	___xxtofl@arg^0,f,c
  7452  00D8D0                     l1125:
  7453  00D8D0  0E00               	movlw	0
  7454  00D8D2  1423               	andwf	___xxtofl@arg^0,w,c
  7455  00D8D4  6E1D               	movwf	??___xxtofl^0,c
  7456  00D8D6  0E00               	movlw	0
  7457  00D8D8  1424               	andwf	(___xxtofl@arg+1)^0,w,c
  7458  00D8DA  6E1E               	movwf	(??___xxtofl+1)^0,c
  7459  00D8DC  0E00               	movlw	0
  7460  00D8DE  1425               	andwf	(___xxtofl@arg+2)^0,w,c
  7461  00D8E0  6E1F               	movwf	(??___xxtofl+2)^0,c
  7462  00D8E2  0EFF               	movlw	255
  7463  00D8E4  1426               	andwf	(___xxtofl@arg+3)^0,w,c
  7464  00D8E6  6E20               	movwf	(??___xxtofl+3)^0,c
  7465  00D8E8  501D               	movf	??___xxtofl^0,w,c
  7466  00D8EA  101E               	iorwf	(??___xxtofl+1)^0,w,c
  7467  00D8EC  101F               	iorwf	(??___xxtofl+2)^0,w,c
  7468  00D8EE  1020               	iorwf	(??___xxtofl+3)^0,w,c
  7469  00D8F0  A4D8               	btfss	status,2,c
  7470  00D8F2  EF7D  F06C         	goto	u3271
  7471  00D8F6  EF7F  F06C         	goto	u3270
  7472  00D8FA                     u3271:
  7473  00D8FA  EF5C  F06C         	goto	l3453
  7474  00D8FE                     u3270:
  7475  00D8FE  EF87  F06C         	goto	l3461
  7476  00D902                     l3459:
  7477  00D902  0622               	decf	___xxtofl@exp^0,f,c
  7478  00D904  90D8               	bcf	status,0,c
  7479  00D906  3623               	rlcf	___xxtofl@arg^0,f,c
  7480  00D908  3624               	rlcf	(___xxtofl@arg+1)^0,f,c
  7481  00D90A  3625               	rlcf	(___xxtofl@arg+2)^0,f,c
  7482  00D90C  3626               	rlcf	(___xxtofl@arg+3)^0,f,c
  7483  00D90E                     l3461:
  7484  00D90E  BE25               	btfsc	(___xxtofl@arg+2)^0,7,c
  7485  00D910  EF8C  F06C         	goto	u3281
  7486  00D914  EF8E  F06C         	goto	u3280
  7487  00D918                     u3281:
  7488  00D918  EF96  F06C         	goto	l1132
  7489  00D91C                     u3280:
  7490  00D91C  0E02               	movlw	2
  7491  00D91E  6022               	cpfslt	___xxtofl@exp^0,c
  7492  00D920  EF94  F06C         	goto	u3291
  7493  00D924  EF96  F06C         	goto	u3290
  7494  00D928                     u3291:
  7495  00D928  EF81  F06C         	goto	l3459
  7496  00D92C                     u3290:
  7497  00D92C                     l1132:
  7498  00D92C  B022               	btfsc	___xxtofl@exp^0,0,c
  7499  00D92E  EF9B  F06C         	goto	u3301
  7500  00D932  EF9D  F06C         	goto	u3300
  7501  00D936                     u3301:
  7502  00D936  EF9E  F06C         	goto	l3467
  7503  00D93A                     u3300:
  7504  00D93A  9E25               	bcf	(___xxtofl@arg+2)^0,7,c
  7505  00D93C                     l3467:
  7506  00D93C  90D8               	bcf	status,0,c
  7507  00D93E  3222               	rrcf	___xxtofl@exp^0,f,c
  7508  00D940  C022  F01D         	movff	___xxtofl@exp,??___xxtofl
  7509  00D944  6A1E               	clrf	(??___xxtofl+1)^0,c
  7510  00D946  6A1F               	clrf	(??___xxtofl+2)^0,c
  7511  00D948  6A20               	clrf	(??___xxtofl+3)^0,c
  7512  00D94A  C01D  F020         	movff	??___xxtofl,??___xxtofl+3
  7513  00D94E  6A1F               	clrf	(??___xxtofl+2)^0,c
  7514  00D950  6A1E               	clrf	(??___xxtofl+1)^0,c
  7515  00D952  6A1D               	clrf	??___xxtofl^0,c
  7516  00D954  501D               	movf	??___xxtofl^0,w,c
  7517  00D956  1223               	iorwf	___xxtofl@arg^0,f,c
  7518  00D958  501E               	movf	(??___xxtofl+1)^0,w,c
  7519  00D95A  1224               	iorwf	(___xxtofl@arg+1)^0,f,c
  7520  00D95C  501F               	movf	(??___xxtofl+2)^0,w,c
  7521  00D95E  1225               	iorwf	(___xxtofl@arg+2)^0,f,c
  7522  00D960  5020               	movf	(??___xxtofl+3)^0,w,c
  7523  00D962  1226               	iorwf	(___xxtofl@arg+3)^0,f,c
  7524  00D964  5021               	movf	___xxtofl@sign^0,w,c
  7525  00D966  B4D8               	btfsc	status,2,c
  7526  00D968  EFB8  F06C         	goto	u3311
  7527  00D96C  EFBA  F06C         	goto	u3310
  7528  00D970                     u3311:
  7529  00D970  EFC2  F06C         	goto	l3477
  7530  00D974                     u3310:
  7531  00D974  BE1C               	btfsc	(___xxtofl@val+3)^0,7,c
  7532  00D976  EFC1  F06C         	goto	u3320
  7533  00D97A  EFBF  F06C         	goto	u3321
  7534  00D97E                     u3321:
  7535  00D97E  EFC2  F06C         	goto	l3477
  7536  00D982                     u3320:
  7537  00D982  8E26               	bsf	(___xxtofl@arg+3)^0,7,c
  7538  00D984                     l3477:
  7539  00D984  C023  F019         	movff	___xxtofl@arg,?___xxtofl
  7540  00D988  C024  F01A         	movff	___xxtofl@arg+1,?___xxtofl+1
  7541  00D98C  C025  F01B         	movff	___xxtofl@arg+2,?___xxtofl+2
  7542  00D990  C026  F01C         	movff	___xxtofl@arg+3,?___xxtofl+3
  7543  00D994                     l1121:
  7544  00D994  0012               	return		;funcret
  7545  00D996                     __end_of___xxtofl:
  7546                           	callstack 0
  7547                           
  7548 ;; *************** function ___wmul *****************
  7549 ;; Defined at:
  7550 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\Umul16.c"
  7551 ;; Parameters:    Size  Location     Type
  7552 ;;  multiplier      2    0[COMRAM] unsigned int 
  7553 ;;  multiplicand    2    2[COMRAM] unsigned int 
  7554 ;; Auto vars:     Size  Location     Type
  7555 ;;  product         2    4[COMRAM] unsigned int 
  7556 ;; Return value:  Size  Location     Type
  7557 ;;                  2    0[COMRAM] unsigned int 
  7558 ;; Registers used:
  7559 ;;		wreg, status,2, status,0, prodl, prodh
  7560 ;; Tracked objects:
  7561 ;;		On entry : 0/0
  7562 ;;		On exit  : 0/0
  7563 ;;		Unchanged: 0/0
  7564 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7565 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7566 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7567 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7568 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7569 ;;Total ram usage:        6 bytes
  7570 ;; Hardware stack levels used:    1
  7571 ;; This function calls:
  7572 ;;		Nothing
  7573 ;; This function is called by:
  7574 ;;		_printf
  7575 ;; This function uses a non-reentrant model
  7576 ;;
  7577                           
  7578                           	psect	text24
  7579  00C634                     __ptext24:
  7580                           	callstack 0
  7581  00C634                     ___wmul:
  7582                           	callstack 29
  7583  00C634  5001               	movf	___wmul@multiplier^0,w,c
  7584  00C636  0203               	mulwf	___wmul@multiplicand^0,c
  7585  00C638  006F FFCC  F005    	movff	prodl,___wmul@product
  7586  00C63E  006F FFD0  F006    	movff	prodh,___wmul@product+1
  7587  00C644  5001               	movf	___wmul@multiplier^0,w,c
  7588  00C646  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  7589  00C648  50F3               	movf	243,w,c
  7590  00C64A  2606               	addwf	(___wmul@product+1)^0,f,c
  7591  00C64C  5002               	movf	(___wmul@multiplier+1)^0,w,c
  7592  00C64E  0203               	mulwf	___wmul@multiplicand^0,c
  7593  00C650  50F3               	movf	243,w,c
  7594  00C652  2606               	addwf	(___wmul@product+1)^0,f,c
  7595  00C654  C005  F001         	movff	___wmul@product,?___wmul
  7596  00C658  C006  F002         	movff	___wmul@product+1,?___wmul+1
  7597  00C65C  0012               	return		;funcret
  7598  00C65E                     __end_of___wmul:
  7599                           	callstack 0
  7600                           
  7601 ;; *************** function ___llmod *****************
  7602 ;; Defined at:
  7603 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\llmod.c"
  7604 ;; Parameters:    Size  Location     Type
  7605 ;;  dividend        4   13[COMRAM] unsigned long 
  7606 ;;  divisor         4   17[COMRAM] unsigned long 
  7607 ;; Auto vars:     Size  Location     Type
  7608 ;;  counter         1   21[COMRAM] unsigned char 
  7609 ;; Return value:  Size  Location     Type
  7610 ;;                  4   13[COMRAM] unsigned long 
  7611 ;; Registers used:
  7612 ;;		wreg, status,2, status,0
  7613 ;; Tracked objects:
  7614 ;;		On entry : 0/0
  7615 ;;		On exit  : 0/0
  7616 ;;		Unchanged: 0/0
  7617 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7618 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7619 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7620 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7621 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7622 ;;Total ram usage:        9 bytes
  7623 ;; Hardware stack levels used:    1
  7624 ;; This function calls:
  7625 ;;		Nothing
  7626 ;; This function is called by:
  7627 ;;		_printf
  7628 ;; This function uses a non-reentrant model
  7629 ;;
  7630                           
  7631                           	psect	text25
  7632  00C944                     __ptext25:
  7633                           	callstack 0
  7634  00C944                     ___llmod:
  7635                           	callstack 29
  7636  00C944  5012               	movf	___llmod@divisor^0,w,c
  7637  00C946  1013               	iorwf	(___llmod@divisor+1)^0,w,c
  7638  00C948  1014               	iorwf	(___llmod@divisor+2)^0,w,c
  7639  00C94A  1015               	iorwf	(___llmod@divisor+3)^0,w,c
  7640  00C94C  B4D8               	btfsc	status,2,c
  7641  00C94E  EFAB  F064         	goto	u3851
  7642  00C952  EFAD  F064         	goto	u3850
  7643  00C956                     u3851:
  7644  00C956  EFDD  F064         	goto	l883
  7645  00C95A                     u3850:
  7646  00C95A  0E01               	movlw	1
  7647  00C95C  6E16               	movwf	___llmod@counter^0,c
  7648  00C95E  EFB7  F064         	goto	l3867
  7649  00C962                     l3865:
  7650  00C962  90D8               	bcf	status,0,c
  7651  00C964  3612               	rlcf	___llmod@divisor^0,f,c
  7652  00C966  3613               	rlcf	(___llmod@divisor+1)^0,f,c
  7653  00C968  3614               	rlcf	(___llmod@divisor+2)^0,f,c
  7654  00C96A  3615               	rlcf	(___llmod@divisor+3)^0,f,c
  7655  00C96C  2A16               	incf	___llmod@counter^0,f,c
  7656  00C96E                     l3867:
  7657  00C96E  AE15               	btfss	(___llmod@divisor+3)^0,7,c
  7658  00C970  EFBC  F064         	goto	u3861
  7659  00C974  EFBE  F064         	goto	u3860
  7660  00C978                     u3861:
  7661  00C978  EFB1  F064         	goto	l3865
  7662  00C97C                     u3860:
  7663  00C97C                     l3869:
  7664  00C97C  5012               	movf	___llmod@divisor^0,w,c
  7665  00C97E  5C0E               	subwf	___llmod@dividend^0,w,c
  7666  00C980  5013               	movf	(___llmod@divisor+1)^0,w,c
  7667  00C982  580F               	subwfb	(___llmod@dividend+1)^0,w,c
  7668  00C984  5014               	movf	(___llmod@divisor+2)^0,w,c
  7669  00C986  5810               	subwfb	(___llmod@dividend+2)^0,w,c
  7670  00C988  5015               	movf	(___llmod@divisor+3)^0,w,c
  7671  00C98A  5811               	subwfb	(___llmod@dividend+3)^0,w,c
  7672  00C98C  A0D8               	btfss	status,0,c
  7673  00C98E  EFCB  F064         	goto	u3871
  7674  00C992  EFCD  F064         	goto	u3870
  7675  00C996                     u3871:
  7676  00C996  EFD5  F064         	goto	l3873
  7677  00C99A                     u3870:
  7678  00C99A  5012               	movf	___llmod@divisor^0,w,c
  7679  00C99C  5E0E               	subwf	___llmod@dividend^0,f,c
  7680  00C99E  5013               	movf	(___llmod@divisor+1)^0,w,c
  7681  00C9A0  5A0F               	subwfb	(___llmod@dividend+1)^0,f,c
  7682  00C9A2  5014               	movf	(___llmod@divisor+2)^0,w,c
  7683  00C9A4  5A10               	subwfb	(___llmod@dividend+2)^0,f,c
  7684  00C9A6  5015               	movf	(___llmod@divisor+3)^0,w,c
  7685  00C9A8  5A11               	subwfb	(___llmod@dividend+3)^0,f,c
  7686  00C9AA                     l3873:
  7687  00C9AA  90D8               	bcf	status,0,c
  7688  00C9AC  3215               	rrcf	(___llmod@divisor+3)^0,f,c
  7689  00C9AE  3214               	rrcf	(___llmod@divisor+2)^0,f,c
  7690  00C9B0  3213               	rrcf	(___llmod@divisor+1)^0,f,c
  7691  00C9B2  3212               	rrcf	___llmod@divisor^0,f,c
  7692  00C9B4  2E16               	decfsz	___llmod@counter^0,f,c
  7693  00C9B6  EFBE  F064         	goto	l3869
  7694  00C9BA                     l883:
  7695  00C9BA  C00E  F00E         	movff	___llmod@dividend,?___llmod
  7696  00C9BE  C00F  F00F         	movff	___llmod@dividend+1,?___llmod+1
  7697  00C9C2  C010  F010         	movff	___llmod@dividend+2,?___llmod+2
  7698  00C9C6  C011  F011         	movff	___llmod@dividend+3,?___llmod+3
  7699  00C9CA  0012               	return		;funcret
  7700  00C9CC                     __end_of___llmod:
  7701                           	callstack 0
  7702                           
  7703 ;; *************** function ___lldiv *****************
  7704 ;; Defined at:
  7705 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\__lldiv.c"
  7706 ;; Parameters:    Size  Location     Type
  7707 ;;  dividend        4    0[COMRAM] unsigned long 
  7708 ;;  divisor         4    4[COMRAM] unsigned long 
  7709 ;; Auto vars:     Size  Location     Type
  7710 ;;  quotient        4    8[COMRAM] unsigned long 
  7711 ;;  counter         1   12[COMRAM] unsigned char 
  7712 ;; Return value:  Size  Location     Type
  7713 ;;                  4    0[COMRAM] unsigned long 
  7714 ;; Registers used:
  7715 ;;		wreg, status,2, status,0
  7716 ;; Tracked objects:
  7717 ;;		On entry : 0/0
  7718 ;;		On exit  : 0/0
  7719 ;;		Unchanged: 0/0
  7720 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7721 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7722 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7723 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7724 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7725 ;;Total ram usage:       13 bytes
  7726 ;; Hardware stack levels used:    1
  7727 ;; This function calls:
  7728 ;;		Nothing
  7729 ;; This function is called by:
  7730 ;;		_printf
  7731 ;; This function uses a non-reentrant model
  7732 ;;
  7733                           
  7734                           	psect	text26
  7735  00CA64                     __ptext26:
  7736                           	callstack 0
  7737  00CA64                     ___lldiv:
  7738                           	callstack 29
  7739  00CA64  0E00               	movlw	0
  7740  00CA66  6E09               	movwf	___lldiv@quotient^0,c
  7741  00CA68  0E00               	movlw	0
  7742  00CA6A  6E0A               	movwf	(___lldiv@quotient+1)^0,c
  7743  00CA6C  0E00               	movlw	0
  7744  00CA6E  6E0B               	movwf	(___lldiv@quotient+2)^0,c
  7745  00CA70  0E00               	movlw	0
  7746  00CA72  6E0C               	movwf	(___lldiv@quotient+3)^0,c
  7747  00CA74  5005               	movf	___lldiv@divisor^0,w,c
  7748  00CA76  1006               	iorwf	(___lldiv@divisor+1)^0,w,c
  7749  00CA78  1007               	iorwf	(___lldiv@divisor+2)^0,w,c
  7750  00CA7A  1008               	iorwf	(___lldiv@divisor+3)^0,w,c
  7751  00CA7C  B4D8               	btfsc	status,2,c
  7752  00CA7E  EF43  F065         	goto	u3581
  7753  00CA82  EF45  F065         	goto	u3580
  7754  00CA86                     u3581:
  7755  00CA86  EF7B  F065         	goto	l468
  7756  00CA8A                     u3580:
  7757  00CA8A  0E01               	movlw	1
  7758  00CA8C  6E0D               	movwf	___lldiv@counter^0,c
  7759  00CA8E  EF4F  F065         	goto	l3695
  7760  00CA92                     l3693:
  7761  00CA92  90D8               	bcf	status,0,c
  7762  00CA94  3605               	rlcf	___lldiv@divisor^0,f,c
  7763  00CA96  3606               	rlcf	(___lldiv@divisor+1)^0,f,c
  7764  00CA98  3607               	rlcf	(___lldiv@divisor+2)^0,f,c
  7765  00CA9A  3608               	rlcf	(___lldiv@divisor+3)^0,f,c
  7766  00CA9C  2A0D               	incf	___lldiv@counter^0,f,c
  7767  00CA9E                     l3695:
  7768  00CA9E  AE08               	btfss	(___lldiv@divisor+3)^0,7,c
  7769  00CAA0  EF54  F065         	goto	u3591
  7770  00CAA4  EF56  F065         	goto	u3590
  7771  00CAA8                     u3591:
  7772  00CAA8  EF49  F065         	goto	l3693
  7773  00CAAC                     u3590:
  7774  00CAAC                     l3697:
  7775  00CAAC  90D8               	bcf	status,0,c
  7776  00CAAE  3609               	rlcf	___lldiv@quotient^0,f,c
  7777  00CAB0  360A               	rlcf	(___lldiv@quotient+1)^0,f,c
  7778  00CAB2  360B               	rlcf	(___lldiv@quotient+2)^0,f,c
  7779  00CAB4  360C               	rlcf	(___lldiv@quotient+3)^0,f,c
  7780  00CAB6  5005               	movf	___lldiv@divisor^0,w,c
  7781  00CAB8  5C01               	subwf	___lldiv@dividend^0,w,c
  7782  00CABA  5006               	movf	(___lldiv@divisor+1)^0,w,c
  7783  00CABC  5802               	subwfb	(___lldiv@dividend+1)^0,w,c
  7784  00CABE  5007               	movf	(___lldiv@divisor+2)^0,w,c
  7785  00CAC0  5803               	subwfb	(___lldiv@dividend+2)^0,w,c
  7786  00CAC2  5008               	movf	(___lldiv@divisor+3)^0,w,c
  7787  00CAC4  5804               	subwfb	(___lldiv@dividend+3)^0,w,c
  7788  00CAC6  A0D8               	btfss	status,0,c
  7789  00CAC8  EF68  F065         	goto	u3601
  7790  00CACC  EF6A  F065         	goto	u3600
  7791  00CAD0                     u3601:
  7792  00CAD0  EF73  F065         	goto	l3705
  7793  00CAD4                     u3600:
  7794  00CAD4  5005               	movf	___lldiv@divisor^0,w,c
  7795  00CAD6  5E01               	subwf	___lldiv@dividend^0,f,c
  7796  00CAD8  5006               	movf	(___lldiv@divisor+1)^0,w,c
  7797  00CADA  5A02               	subwfb	(___lldiv@dividend+1)^0,f,c
  7798  00CADC  5007               	movf	(___lldiv@divisor+2)^0,w,c
  7799  00CADE  5A03               	subwfb	(___lldiv@dividend+2)^0,f,c
  7800  00CAE0  5008               	movf	(___lldiv@divisor+3)^0,w,c
  7801  00CAE2  5A04               	subwfb	(___lldiv@dividend+3)^0,f,c
  7802  00CAE4  8009               	bsf	___lldiv@quotient^0,0,c
  7803  00CAE6                     l3705:
  7804  00CAE6  90D8               	bcf	status,0,c
  7805  00CAE8  3208               	rrcf	(___lldiv@divisor+3)^0,f,c
  7806  00CAEA  3207               	rrcf	(___lldiv@divisor+2)^0,f,c
  7807  00CAEC  3206               	rrcf	(___lldiv@divisor+1)^0,f,c
  7808  00CAEE  3205               	rrcf	___lldiv@divisor^0,f,c
  7809  00CAF0  2E0D               	decfsz	___lldiv@counter^0,f,c
  7810  00CAF2  EF56  F065         	goto	l3697
  7811  00CAF6                     l468:
  7812  00CAF6  C009  F001         	movff	___lldiv@quotient,?___lldiv
  7813  00CAFA  C00A  F002         	movff	___lldiv@quotient+1,?___lldiv+1
  7814  00CAFE  C00B  F003         	movff	___lldiv@quotient+2,?___lldiv+2
  7815  00CB02  C00C  F004         	movff	___lldiv@quotient+3,?___lldiv+3
  7816  00CB06  0012               	return		;funcret
  7817  00CB08                     __end_of___lldiv:
  7818                           	callstack 0
  7819                           
  7820 ;; *************** function ___fltol *****************
  7821 ;; Defined at:
  7822 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\fltol.c"
  7823 ;; Parameters:    Size  Location     Type
  7824 ;;  f1              4   14[COMRAM] unsigned long 
  7825 ;; Auto vars:     Size  Location     Type
  7826 ;;  exp1            1   23[COMRAM] unsigned char 
  7827 ;;  sign1           1   22[COMRAM] unsigned char 
  7828 ;; Return value:  Size  Location     Type
  7829 ;;                  4   14[COMRAM] long 
  7830 ;; Registers used:
  7831 ;;		wreg, status,2, status,0
  7832 ;; Tracked objects:
  7833 ;;		On entry : 0/0
  7834 ;;		On exit  : 0/0
  7835 ;;		Unchanged: 0/0
  7836 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7837 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7838 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7839 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7840 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7841 ;;Total ram usage:       10 bytes
  7842 ;; Hardware stack levels used:    1
  7843 ;; This function calls:
  7844 ;;		Nothing
  7845 ;; This function is called by:
  7846 ;;		_printf
  7847 ;;		_pow
  7848 ;;		_exp
  7849 ;;		_floor
  7850 ;; This function uses a non-reentrant model
  7851 ;;
  7852                           
  7853                           	psect	text27
  7854  00CF02                     __ptext27:
  7855                           	callstack 0
  7856  00CF02                     ___fltol:
  7857                           	callstack 29
  7858  00CF02  3411               	rlcf	(___fltol@f1+2)^0,w,c
  7859  00CF04  3412               	rlcf	(___fltol@f1+3)^0,w,c
  7860  00CF06  6E18               	movwf	___fltol@exp1^0,c
  7861  00CF08  5018               	movf	___fltol@exp1^0,w,c
  7862  00CF0A  A4D8               	btfss	status,2,c
  7863  00CF0C  EF8A  F067         	goto	u3101
  7864  00CF10  EF8C  F067         	goto	u3100
  7865  00CF14                     u3101:
  7866  00CF14  EF96  F067         	goto	l3359
  7867  00CF18                     u3100:
  7868  00CF18                     l3355:
  7869  00CF18  0E00               	movlw	0
  7870  00CF1A  6E0F               	movwf	?___fltol^0,c
  7871  00CF1C  0E00               	movlw	0
  7872  00CF1E  6E10               	movwf	(?___fltol+1)^0,c
  7873  00CF20  0E00               	movlw	0
  7874  00CF22  6E11               	movwf	(?___fltol+2)^0,c
  7875  00CF24  0E00               	movlw	0
  7876  00CF26  6E12               	movwf	(?___fltol+3)^0,c
  7877  00CF28  EF03  F068         	goto	l747
  7878  00CF2C                     l3359:
  7879  00CF2C  C00F  F013         	movff	___fltol@f1,??___fltol
  7880  00CF30  C010  F014         	movff	___fltol@f1+1,??___fltol+1
  7881  00CF34  C011  F015         	movff	___fltol@f1+2,??___fltol+2
  7882  00CF38  C012  F016         	movff	___fltol@f1+3,??___fltol+3
  7883  00CF3C  0E20               	movlw	32
  7884  00CF3E  EFA6  F067         	goto	u3110
  7885  00CF42                     u3115:
  7886  00CF42  90D8               	bcf	status,0,c
  7887  00CF44  3216               	rrcf	(??___fltol+3)^0,f,c
  7888  00CF46  3215               	rrcf	(??___fltol+2)^0,f,c
  7889  00CF48  3214               	rrcf	(??___fltol+1)^0,f,c
  7890  00CF4A  3213               	rrcf	??___fltol^0,f,c
  7891  00CF4C                     u3110:
  7892  00CF4C  2EE8               	decfsz	wreg,f,c
  7893  00CF4E  EFA1  F067         	goto	u3115
  7894  00CF52  5013               	movf	??___fltol^0,w,c
  7895  00CF54  6E17               	movwf	___fltol@sign1^0,c
  7896  00CF56  8E11               	bsf	(___fltol@f1+2)^0,7,c
  7897  00CF58  0EFF               	movlw	255
  7898  00CF5A  160F               	andwf	___fltol@f1^0,f,c
  7899  00CF5C  0EFF               	movlw	255
  7900  00CF5E  1610               	andwf	(___fltol@f1+1)^0,f,c
  7901  00CF60  0EFF               	movlw	255
  7902  00CF62  1611               	andwf	(___fltol@f1+2)^0,f,c
  7903  00CF64  0E00               	movlw	0
  7904  00CF66  1612               	andwf	(___fltol@f1+3)^0,f,c
  7905  00CF68  0E96               	movlw	150
  7906  00CF6A  5E18               	subwf	___fltol@exp1^0,f,c
  7907  00CF6C  BE18               	btfsc	___fltol@exp1^0,7,c
  7908  00CF6E  EFBD  F067         	goto	u3120
  7909  00CF72  EFBB  F067         	goto	u3121
  7910  00CF76                     u3121:
  7911  00CF76  EFD3  F067         	goto	l3379
  7912  00CF7A                     u3120:
  7913  00CF7A  5018               	movf	___fltol@exp1^0,w,c
  7914  00CF7C  0A80               	xorlw	128
  7915  00CF7E  0F97               	addlw	151
  7916  00CF80  B0D8               	btfsc	status,0,c
  7917  00CF82  EFC5  F067         	goto	u3131
  7918  00CF86  EFC7  F067         	goto	u3130
  7919  00CF8A                     u3131:
  7920  00CF8A  EFC9  F067         	goto	l3375
  7921  00CF8E                     u3130:
  7922  00CF8E  EF8C  F067         	goto	l3355
  7923  00CF92                     l3375:
  7924  00CF92  90D8               	bcf	status,0,c
  7925  00CF94  3212               	rrcf	(___fltol@f1+3)^0,f,c
  7926  00CF96  3211               	rrcf	(___fltol@f1+2)^0,f,c
  7927  00CF98  3210               	rrcf	(___fltol@f1+1)^0,f,c
  7928  00CF9A  320F               	rrcf	___fltol@f1^0,f,c
  7929  00CF9C  3E18               	incfsz	___fltol@exp1^0,f,c
  7930  00CF9E  EFC9  F067         	goto	l3375
  7931  00CFA2  EFEB  F067         	goto	l3389
  7932  00CFA6                     l3379:
  7933  00CFA6  0E1F               	movlw	31
  7934  00CFA8  6418               	cpfsgt	___fltol@exp1^0,c
  7935  00CFAA  EFD9  F067         	goto	u3141
  7936  00CFAE  EFDB  F067         	goto	u3140
  7937  00CFB2                     u3141:
  7938  00CFB2  EFE3  F067         	goto	l3387
  7939  00CFB6                     u3140:
  7940  00CFB6  EF8C  F067         	goto	l3355
  7941  00CFBA                     l3385:
  7942  00CFBA  90D8               	bcf	status,0,c
  7943  00CFBC  360F               	rlcf	___fltol@f1^0,f,c
  7944  00CFBE  3610               	rlcf	(___fltol@f1+1)^0,f,c
  7945  00CFC0  3611               	rlcf	(___fltol@f1+2)^0,f,c
  7946  00CFC2  3612               	rlcf	(___fltol@f1+3)^0,f,c
  7947  00CFC4  0618               	decf	___fltol@exp1^0,f,c
  7948  00CFC6                     l3387:
  7949  00CFC6  5018               	movf	___fltol@exp1^0,w,c
  7950  00CFC8  A4D8               	btfss	status,2,c
  7951  00CFCA  EFE9  F067         	goto	u3151
  7952  00CFCE  EFEB  F067         	goto	u3150
  7953  00CFD2                     u3151:
  7954  00CFD2  EFDD  F067         	goto	l3385
  7955  00CFD6                     u3150:
  7956  00CFD6                     l3389:
  7957  00CFD6  5017               	movf	___fltol@sign1^0,w,c
  7958  00CFD8  B4D8               	btfsc	status,2,c
  7959  00CFDA  EFF1  F067         	goto	u3161
  7960  00CFDE  EFF3  F067         	goto	u3160
  7961  00CFE2                     u3161:
  7962  00CFE2  EFFB  F067         	goto	l3393
  7963  00CFE6                     u3160:
  7964  00CFE6  1E12               	comf	(___fltol@f1+3)^0,f,c
  7965  00CFE8  1E11               	comf	(___fltol@f1+2)^0,f,c
  7966  00CFEA  1E10               	comf	(___fltol@f1+1)^0,f,c
  7967  00CFEC  6C0F               	negf	___fltol@f1^0,c
  7968  00CFEE  0E00               	movlw	0
  7969  00CFF0  2210               	addwfc	(___fltol@f1+1)^0,f,c
  7970  00CFF2  2211               	addwfc	(___fltol@f1+2)^0,f,c
  7971  00CFF4  2212               	addwfc	(___fltol@f1+3)^0,f,c
  7972  00CFF6                     l3393:
  7973  00CFF6  C00F  F00F         	movff	___fltol@f1,?___fltol
  7974  00CFFA  C010  F010         	movff	___fltol@f1+1,?___fltol+1
  7975  00CFFE  C011  F011         	movff	___fltol@f1+2,?___fltol+2
  7976  00D002  C012  F012         	movff	___fltol@f1+3,?___fltol+3
  7977  00D006                     l747:
  7978  00D006  0012               	return		;funcret
  7979  00D008                     __end_of___fltol:
  7980                           	callstack 0
  7981                           
  7982 ;; *************** function ___flsub *****************
  7983 ;; Defined at:
  7984 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\sprcadd.c"
  7985 ;; Parameters:    Size  Location     Type
  7986 ;;  b               4   17[BANK0 ] long 
  7987 ;;  a               4   21[BANK0 ] long 
  7988 ;; Auto vars:     Size  Location     Type
  7989 ;;		None
  7990 ;; Return value:  Size  Location     Type
  7991 ;;                  4   17[BANK0 ] long 
  7992 ;; Registers used:
  7993 ;;		wreg, status,2, status,0, cstack
  7994 ;; Tracked objects:
  7995 ;;		On entry : 0/0
  7996 ;;		On exit  : 0/0
  7997 ;;		Unchanged: 0/0
  7998 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7999 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8000 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8001 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8002 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8003 ;;Total ram usage:        8 bytes
  8004 ;; Hardware stack levels used:    1
  8005 ;; Hardware stack levels required when called:    1
  8006 ;; This function calls:
  8007 ;;		___fladd
  8008 ;; This function is called by:
  8009 ;;		_printf
  8010 ;;		_exp
  8011 ;; This function uses a non-reentrant model
  8012 ;;
  8013                           
  8014                           	psect	text28
  8015  00C6C6                     __ptext28:
  8016                           	callstack 0
  8017  00C6C6                     ___flsub:
  8018                           	callstack 28
  8019  00C6C6  0E00               	movlw	0
  8020  00C6C8  0100               	movlb	0	; () banked
  8021  00C6CA  1B75               	xorwf	___flsub@a& (0+255),f,b
  8022  00C6CC  0E00               	movlw	0
  8023  00C6CE  1B76               	xorwf	(___flsub@a+1)& (0+255),f,b
  8024  00C6D0  0E00               	movlw	0
  8025  00C6D2  1B77               	xorwf	(___flsub@a+2)& (0+255),f,b
  8026  00C6D4  0E80               	movlw	128
  8027  00C6D6  1B78               	xorwf	(___flsub@a+3)& (0+255),f,b
  8028  00C6D8                     
  8029                           ; BSR set to: 0
  8030  00C6D8  C071  F058         	movff	___flsub@b,___fladd@b
  8031  00C6DC  C072  F059         	movff	___flsub@b+1,___fladd@b+1
  8032  00C6E0  C073  F05A         	movff	___flsub@b+2,___fladd@b+2
  8033  00C6E4  C074  F05B         	movff	___flsub@b+3,___fladd@b+3
  8034  00C6E8  C075  F05C         	movff	___flsub@a,___fladd@a
  8035  00C6EC  C076  F05D         	movff	___flsub@a+1,___fladd@a+1
  8036  00C6F0  C077  F05E         	movff	___flsub@a+2,___fladd@a+2
  8037  00C6F4  C078  F05F         	movff	___flsub@a+3,___fladd@a+3
  8038  00C6F8  EC40  F078         	call	___fladd	;wreg free
  8039  00C6FC  C058  F071         	movff	?___fladd,?___flsub
  8040  00C700  C059  F072         	movff	?___fladd+1,?___flsub+1
  8041  00C704  C05A  F073         	movff	?___fladd+2,?___flsub+2
  8042  00C708  C05B  F074         	movff	?___fladd+3,?___flsub+3
  8043  00C70C  0012               	return		;funcret
  8044  00C70E                     __end_of___flsub:
  8045                           	callstack 0
  8046                           
  8047 ;; *************** function ___fladd *****************
  8048 ;; Defined at:
  8049 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\sprcadd.c"
  8050 ;; Parameters:    Size  Location     Type
  8051 ;;  b               4   87[COMRAM] long 
  8052 ;;  a               4   91[COMRAM] long 
  8053 ;; Auto vars:     Size  Location     Type
  8054 ;;  grs             1   16[BANK0 ] unsigned char 
  8055 ;;  bexp            1   15[BANK0 ] unsigned char 
  8056 ;;  aexp            1   14[BANK0 ] unsigned char 
  8057 ;;  signs           1   13[BANK0 ] unsigned char 
  8058 ;; Return value:  Size  Location     Type
  8059 ;;                  4   87[COMRAM] unsigned char 
  8060 ;; Registers used:
  8061 ;;		wreg, status,2, status,0
  8062 ;; Tracked objects:
  8063 ;;		On entry : 0/0
  8064 ;;		On exit  : 0/0
  8065 ;;		Unchanged: 0/0
  8066 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8067 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8068 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8069 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8070 ;;      Totals:         8       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8071 ;;Total ram usage:       16 bytes
  8072 ;; Hardware stack levels used:    1
  8073 ;; This function calls:
  8074 ;;		Nothing
  8075 ;; This function is called by:
  8076 ;;		_printf
  8077 ;;		___flsub
  8078 ;;		_eval_poly
  8079 ;;		_floor
  8080 ;;		_log
  8081 ;; This function uses a non-reentrant model
  8082 ;;
  8083                           
  8084                           	psect	text29
  8085  00F080                     __ptext29:
  8086                           	callstack 0
  8087  00F080                     ___fladd:
  8088                           	callstack 28
  8089  00F080  505B               	movf	(___fladd@b+3)^0,w,c
  8090  00F082  0B80               	andlw	128
  8091  00F084  0100               	movlb	0	; () banked
  8092  00F086  6F6D               	movwf	___fladd@signs& (0+255),b
  8093  00F088  505B               	movf	(___fladd@b+3)^0,w,c
  8094  00F08A  245B               	addwf	(___fladd@b+3)^0,w,c
  8095  00F08C  6F6F               	movwf	___fladd@bexp& (0+255),b
  8096  00F08E                     
  8097                           ; BSR set to: 0
  8098  00F08E  AE5A               	btfss	(___fladd@b+2)^0,7,c
  8099  00F090  EF4C  F078         	goto	u2351
  8100  00F094  EF4E  F078         	goto	u2350
  8101  00F098                     u2351:
  8102  00F098  EF4F  F078         	goto	l2925
  8103  00F09C                     u2350:
  8104  00F09C                     
  8105                           ; BSR set to: 0
  8106  00F09C  816F               	bsf	___fladd@bexp& (0+255),0,b
  8107  00F09E                     l2925:
  8108                           
  8109                           ; BSR set to: 0
  8110  00F09E  516F               	movf	___fladd@bexp& (0+255),w,b
  8111  00F0A0  B4D8               	btfsc	status,2,c
  8112  00F0A2  EF55  F078         	goto	u2361
  8113  00F0A6  EF57  F078         	goto	u2360
  8114  00F0AA                     u2361:
  8115  00F0AA  EF6C  F078         	goto	l2935
  8116  00F0AE                     u2360:
  8117  00F0AE                     
  8118                           ; BSR set to: 0
  8119  00F0AE  296F               	incf	___fladd@bexp& (0+255),w,b
  8120  00F0B0  A4D8               	btfss	status,2,c
  8121  00F0B2  EF5D  F078         	goto	u2371
  8122  00F0B6  EF5F  F078         	goto	u2370
  8123  00F0BA                     u2371:
  8124  00F0BA  EF67  F078         	goto	l2931
  8125  00F0BE                     u2370:
  8126  00F0BE                     
  8127                           ; BSR set to: 0
  8128  00F0BE  0E00               	movlw	0
  8129  00F0C0  6E58               	movwf	___fladd@b^0,c
  8130  00F0C2  0E00               	movlw	0
  8131  00F0C4  6E59               	movwf	(___fladd@b+1)^0,c
  8132  00F0C6  0E00               	movlw	0
  8133  00F0C8  6E5A               	movwf	(___fladd@b+2)^0,c
  8134  00F0CA  0E00               	movlw	0
  8135  00F0CC  6E5B               	movwf	(___fladd@b+3)^0,c
  8136  00F0CE                     l2931:
  8137                           
  8138                           ; BSR set to: 0
  8139  00F0CE  8E5A               	bsf	(___fladd@b+2)^0,7,c
  8140  00F0D0                     
  8141                           ; BSR set to: 0
  8142  00F0D0  0E00               	movlw	0
  8143  00F0D2  6E5B               	movwf	(___fladd@b+3)^0,c
  8144  00F0D4  EF74  F078         	goto	l2937
  8145  00F0D8                     l2935:
  8146                           
  8147                           ; BSR set to: 0
  8148  00F0D8  0E00               	movlw	0
  8149  00F0DA  6E58               	movwf	___fladd@b^0,c
  8150  00F0DC  0E00               	movlw	0
  8151  00F0DE  6E59               	movwf	(___fladd@b+1)^0,c
  8152  00F0E0  0E00               	movlw	0
  8153  00F0E2  6E5A               	movwf	(___fladd@b+2)^0,c
  8154  00F0E4  0E00               	movlw	0
  8155  00F0E6  6E5B               	movwf	(___fladd@b+3)^0,c
  8156  00F0E8                     l2937:
  8157                           
  8158                           ; BSR set to: 0
  8159  00F0E8  505F               	movf	(___fladd@a+3)^0,w,c
  8160  00F0EA  0B80               	andlw	128
  8161  00F0EC  6F6E               	movwf	___fladd@aexp& (0+255),b
  8162  00F0EE                     
  8163                           ; BSR set to: 0
  8164  00F0EE  516D               	movf	___fladd@signs& (0+255),w,b
  8165  00F0F0  196E               	xorwf	___fladd@aexp& (0+255),w,b
  8166  00F0F2  B4D8               	btfsc	status,2,c
  8167  00F0F4  EF7E  F078         	goto	u2381
  8168  00F0F8  EF80  F078         	goto	u2380
  8169  00F0FC                     u2381:
  8170  00F0FC  EF81  F078         	goto	l2943
  8171  00F100                     u2380:
  8172  00F100                     
  8173                           ; BSR set to: 0
  8174  00F100  8D6D               	bsf	___fladd@signs& (0+255),6,b
  8175  00F102                     l2943:
  8176                           
  8177                           ; BSR set to: 0
  8178  00F102  505F               	movf	(___fladd@a+3)^0,w,c
  8179  00F104  245F               	addwf	(___fladd@a+3)^0,w,c
  8180  00F106  6F6E               	movwf	___fladd@aexp& (0+255),b
  8181  00F108                     
  8182                           ; BSR set to: 0
  8183  00F108  AE5E               	btfss	(___fladd@a+2)^0,7,c
  8184  00F10A  EF89  F078         	goto	u2391
  8185  00F10E  EF8B  F078         	goto	u2390
  8186  00F112                     u2391:
  8187  00F112  EF8C  F078         	goto	l2949
  8188  00F116                     u2390:
  8189  00F116                     
  8190                           ; BSR set to: 0
  8191  00F116  816E               	bsf	___fladd@aexp& (0+255),0,b
  8192  00F118                     l2949:
  8193                           
  8194                           ; BSR set to: 0
  8195  00F118  516E               	movf	___fladd@aexp& (0+255),w,b
  8196  00F11A  B4D8               	btfsc	status,2,c
  8197  00F11C  EF92  F078         	goto	u2401
  8198  00F120  EF94  F078         	goto	u2400
  8199  00F124                     u2401:
  8200  00F124  EFA9  F078         	goto	l2959
  8201  00F128                     u2400:
  8202  00F128                     
  8203                           ; BSR set to: 0
  8204  00F128  296E               	incf	___fladd@aexp& (0+255),w,b
  8205  00F12A  A4D8               	btfss	status,2,c
  8206  00F12C  EF9A  F078         	goto	u2411
  8207  00F130  EF9C  F078         	goto	u2410
  8208  00F134                     u2411:
  8209  00F134  EFA4  F078         	goto	l2955
  8210  00F138                     u2410:
  8211  00F138                     
  8212                           ; BSR set to: 0
  8213  00F138  0E00               	movlw	0
  8214  00F13A  6E5C               	movwf	___fladd@a^0,c
  8215  00F13C  0E00               	movlw	0
  8216  00F13E  6E5D               	movwf	(___fladd@a+1)^0,c
  8217  00F140  0E00               	movlw	0
  8218  00F142  6E5E               	movwf	(___fladd@a+2)^0,c
  8219  00F144  0E00               	movlw	0
  8220  00F146  6E5F               	movwf	(___fladd@a+3)^0,c
  8221  00F148                     l2955:
  8222                           
  8223                           ; BSR set to: 0
  8224  00F148  8E5E               	bsf	(___fladd@a+2)^0,7,c
  8225  00F14A                     
  8226                           ; BSR set to: 0
  8227  00F14A  0E00               	movlw	0
  8228  00F14C  6E5F               	movwf	(___fladd@a+3)^0,c
  8229  00F14E  EFB1  F078         	goto	l2961
  8230  00F152                     l2959:
  8231                           
  8232                           ; BSR set to: 0
  8233  00F152  0E00               	movlw	0
  8234  00F154  6E5C               	movwf	___fladd@a^0,c
  8235  00F156  0E00               	movlw	0
  8236  00F158  6E5D               	movwf	(___fladd@a+1)^0,c
  8237  00F15A  0E00               	movlw	0
  8238  00F15C  6E5E               	movwf	(___fladd@a+2)^0,c
  8239  00F15E  0E00               	movlw	0
  8240  00F160  6E5F               	movwf	(___fladd@a+3)^0,c
  8241  00F162                     l2961:
  8242                           
  8243                           ; BSR set to: 0
  8244  00F162  516F               	movf	___fladd@bexp& (0+255),w,b
  8245  00F164  5D6E               	subwf	___fladd@aexp& (0+255),w,b
  8246  00F166  B0D8               	btfsc	status,0,c
  8247  00F168  EFB8  F078         	goto	u2421
  8248  00F16C  EFBA  F078         	goto	u2420
  8249  00F170                     u2421:
  8250  00F170  EFE1  F078         	goto	l2997
  8251  00F174                     u2420:
  8252  00F174                     
  8253                           ; BSR set to: 0
  8254  00F174  AD6D               	btfss	___fladd@signs& (0+255),6,b
  8255  00F176  EFBF  F078         	goto	u2431
  8256  00F17A  EFC1  F078         	goto	u2430
  8257  00F17E                     u2431:
  8258  00F17E  EFC3  F078         	goto	l2967
  8259  00F182                     u2430:
  8260  00F182                     
  8261                           ; BSR set to: 0
  8262  00F182  0E80               	movlw	128
  8263  00F184  1B6D               	xorwf	___fladd@signs& (0+255),f,b
  8264  00F186                     l2967:
  8265                           
  8266                           ; BSR set to: 0
  8267  00F186  C06F  F070         	movff	___fladd@bexp,___fladd@grs
  8268  00F18A                     
  8269                           ; BSR set to: 0
  8270  00F18A  C06E  F06F         	movff	___fladd@aexp,___fladd@bexp
  8271  00F18E                     
  8272                           ; BSR set to: 0
  8273  00F18E  C070  F06E         	movff	___fladd@grs,___fladd@aexp
  8274  00F192                     
  8275                           ; BSR set to: 0
  8276  00F192  C058  F070         	movff	___fladd@b,___fladd@grs
  8277  00F196                     
  8278                           ; BSR set to: 0
  8279  00F196  C05C  F058         	movff	___fladd@a,___fladd@b
  8280  00F19A                     
  8281                           ; BSR set to: 0
  8282  00F19A  C070  F05C         	movff	___fladd@grs,___fladd@a
  8283  00F19E                     
  8284                           ; BSR set to: 0
  8285  00F19E  C059  F070         	movff	___fladd@b+1,___fladd@grs
  8286  00F1A2                     
  8287                           ; BSR set to: 0
  8288  00F1A2  C05D  F059         	movff	___fladd@a+1,___fladd@b+1
  8289  00F1A6                     
  8290                           ; BSR set to: 0
  8291  00F1A6  C070  F05D         	movff	___fladd@grs,___fladd@a+1
  8292  00F1AA                     
  8293                           ; BSR set to: 0
  8294  00F1AA  C05A  F070         	movff	___fladd@b+2,___fladd@grs
  8295  00F1AE                     
  8296                           ; BSR set to: 0
  8297  00F1AE  C05E  F05A         	movff	___fladd@a+2,___fladd@b+2
  8298  00F1B2                     
  8299                           ; BSR set to: 0
  8300  00F1B2  C070  F05E         	movff	___fladd@grs,___fladd@a+2
  8301  00F1B6                     
  8302                           ; BSR set to: 0
  8303  00F1B6  C05B  F070         	movff	___fladd@b+3,___fladd@grs
  8304  00F1BA                     
  8305                           ; BSR set to: 0
  8306  00F1BA  C05F  F05B         	movff	___fladd@a+3,___fladd@b+3
  8307  00F1BE                     
  8308                           ; BSR set to: 0
  8309  00F1BE  C070  F05F         	movff	___fladd@grs,___fladd@a+3
  8310  00F1C2                     l2997:
  8311                           
  8312                           ; BSR set to: 0
  8313  00F1C2  0E00               	movlw	0
  8314  00F1C4  6F70               	movwf	___fladd@grs& (0+255),b
  8315  00F1C6                     
  8316                           ; BSR set to: 0
  8317  00F1C6  516F               	movf	___fladd@bexp& (0+255),w,b
  8318  00F1C8  C06E  F069         	movff	___fladd@aexp,??___fladd
  8319  00F1CC  6B6A               	clrf	(??___fladd+1)& (0+255),b
  8320  00F1CE  5F69               	subwf	??___fladd& (0+255),f,b
  8321  00F1D0  0E00               	movlw	0
  8322  00F1D2  5B6A               	subwfb	(??___fladd+1)& (0+255),f,b
  8323  00F1D4  BF6A               	btfsc	(??___fladd+1)& (0+255),7,b
  8324  00F1D6  EFF6  F078         	goto	u2441
  8325  00F1DA  516A               	movf	(??___fladd+1)& (0+255),w,b
  8326  00F1DC  E109               	bnz	u2440
  8327  00F1DE  0E1A               	movlw	26
  8328  00F1E0  5D69               	subwf	??___fladd& (0+255),w,b
  8329  00F1E2  A0D8               	btfss	status,0,c
  8330  00F1E4  EFF6  F078         	goto	u2441
  8331  00F1E8  EFF8  F078         	goto	u2440
  8332  00F1EC                     u2441:
  8333  00F1EC  EF2F  F079         	goto	l992
  8334  00F1F0                     u2440:
  8335  00F1F0                     
  8336                           ; BSR set to: 0
  8337  00F1F0  5058               	movf	___fladd@b^0,w,c
  8338  00F1F2  1059               	iorwf	(___fladd@b+1)^0,w,c
  8339  00F1F4  105A               	iorwf	(___fladd@b+2)^0,w,c
  8340  00F1F6  105B               	iorwf	(___fladd@b+3)^0,w,c
  8341  00F1F8  A4D8               	btfss	status,2,c
  8342  00F1FA  EF01  F079         	goto	u2451
  8343  00F1FE  EF04  F079         	goto	u2450
  8344  00F202                     u2451:
  8345  00F202  0E01               	movlw	1
  8346  00F204  EF05  F079         	goto	u2460
  8347  00F208                     u2450:
  8348  00F208  0E00               	movlw	0
  8349  00F20A                     u2460:
  8350  00F20A  6F70               	movwf	___fladd@grs& (0+255),b
  8351  00F20C                     
  8352                           ; BSR set to: 0
  8353  00F20C  0E00               	movlw	0
  8354  00F20E  6E58               	movwf	___fladd@b^0,c
  8355  00F210  0E00               	movlw	0
  8356  00F212  6E59               	movwf	(___fladd@b+1)^0,c
  8357  00F214  0E00               	movlw	0
  8358  00F216  6E5A               	movwf	(___fladd@b+2)^0,c
  8359  00F218  0E00               	movlw	0
  8360  00F21A  6E5B               	movwf	(___fladd@b+3)^0,c
  8361  00F21C                     
  8362                           ; BSR set to: 0
  8363  00F21C  C06E  F06F         	movff	___fladd@aexp,___fladd@bexp
  8364  00F220  EF38  F079         	goto	l991
  8365  00F224                     l993:
  8366                           
  8367                           ; BSR set to: 0
  8368  00F224  A170               	btfss	___fladd@grs& (0+255),0,b
  8369  00F226  EF17  F079         	goto	u2471
  8370  00F22A  EF19  F079         	goto	u2470
  8371  00F22E                     u2471:
  8372  00F22E  EF1F  F079         	goto	l3009
  8373  00F232                     u2470:
  8374  00F232                     
  8375                           ; BSR set to: 0
  8376  00F232  90D8               	bcf	status,0,c
  8377  00F234  3170               	rrcf	___fladd@grs& (0+255),w,b
  8378  00F236  0901               	iorlw	1
  8379  00F238  6F70               	movwf	___fladd@grs& (0+255),b
  8380  00F23A  EF21  F079         	goto	l3011
  8381  00F23E                     l3009:
  8382                           
  8383                           ; BSR set to: 0
  8384  00F23E  90D8               	bcf	status,0,c
  8385  00F240  3370               	rrcf	___fladd@grs& (0+255),f,b
  8386  00F242                     l3011:
  8387                           
  8388                           ; BSR set to: 0
  8389  00F242  A058               	btfss	___fladd@b^0,0,c
  8390  00F244  EF26  F079         	goto	u2481
  8391  00F248  EF28  F079         	goto	u2480
  8392  00F24C                     u2481:
  8393  00F24C  EF29  F079         	goto	l3015
  8394  00F250                     u2480:
  8395  00F250                     
  8396                           ; BSR set to: 0
  8397  00F250  8F70               	bsf	___fladd@grs& (0+255),7,b
  8398  00F252                     l3015:
  8399                           
  8400                           ; BSR set to: 0
  8401  00F252  345B               	rlcf	(___fladd@b+3)^0,w,c
  8402  00F254  325B               	rrcf	(___fladd@b+3)^0,f,c
  8403  00F256  325A               	rrcf	(___fladd@b+2)^0,f,c
  8404  00F258  3259               	rrcf	(___fladd@b+1)^0,f,c
  8405  00F25A  3258               	rrcf	___fladd@b^0,f,c
  8406  00F25C                     
  8407                           ; BSR set to: 0
  8408  00F25C  2B6F               	incf	___fladd@bexp& (0+255),f,b
  8409  00F25E                     l992:
  8410                           
  8411                           ; BSR set to: 0
  8412  00F25E  516E               	movf	___fladd@aexp& (0+255),w,b
  8413  00F260  5D6F               	subwf	___fladd@bexp& (0+255),w,b
  8414  00F262  A0D8               	btfss	status,0,c
  8415  00F264  EF36  F079         	goto	u2491
  8416  00F268  EF38  F079         	goto	u2490
  8417  00F26C                     u2491:
  8418  00F26C  EF12  F079         	goto	l993
  8419  00F270                     u2490:
  8420  00F270                     l991:
  8421                           
  8422                           ; BSR set to: 0
  8423  00F270  BD6D               	btfsc	___fladd@signs& (0+255),6,b
  8424  00F272  EF3D  F079         	goto	u2501
  8425  00F276  EF3F  F079         	goto	u2500
  8426  00F27A                     u2501:
  8427  00F27A  EF7F  F079         	goto	l3043
  8428  00F27E                     u2500:
  8429  00F27E                     
  8430                           ; BSR set to: 0
  8431  00F27E  516F               	movf	___fladd@bexp& (0+255),w,b
  8432  00F280  A4D8               	btfss	status,2,c
  8433  00F282  EF45  F079         	goto	u2511
  8434  00F286  EF47  F079         	goto	u2510
  8435  00F28A                     u2511:
  8436  00F28A  EF51  F079         	goto	l3025
  8437  00F28E                     u2510:
  8438  00F28E                     
  8439                           ; BSR set to: 0
  8440  00F28E  0E00               	movlw	0
  8441  00F290  6E58               	movwf	?___fladd^0,c
  8442  00F292  0E00               	movlw	0
  8443  00F294  6E59               	movwf	(?___fladd+1)^0,c
  8444  00F296  0E00               	movlw	0
  8445  00F298  6E5A               	movwf	(?___fladd+2)^0,c
  8446  00F29A  0E00               	movlw	0
  8447  00F29C  6E5B               	movwf	(?___fladd+3)^0,c
  8448  00F29E  EFA0  F07A         	goto	l1000
  8449  00F2A2                     l3025:
  8450                           
  8451                           ; BSR set to: 0
  8452  00F2A2  505C               	movf	___fladd@a^0,w,c
  8453  00F2A4  2658               	addwf	___fladd@b^0,f,c
  8454  00F2A6  505D               	movf	(___fladd@a+1)^0,w,c
  8455  00F2A8  2259               	addwfc	(___fladd@b+1)^0,f,c
  8456  00F2AA  505E               	movf	(___fladd@a+2)^0,w,c
  8457  00F2AC  225A               	addwfc	(___fladd@b+2)^0,f,c
  8458  00F2AE  505F               	movf	(___fladd@a+3)^0,w,c
  8459  00F2B0  225B               	addwfc	(___fladd@b+3)^0,f,c
  8460  00F2B2                     
  8461                           ; BSR set to: 0
  8462  00F2B2  A05B               	btfss	(___fladd@b+3)^0,0,c
  8463  00F2B4  EF5E  F079         	goto	u2521
  8464  00F2B8  EF60  F079         	goto	u2520
  8465  00F2BC                     u2521:
  8466  00F2BC  EF0C  F07A         	goto	l3079
  8467  00F2C0                     u2520:
  8468  00F2C0                     
  8469                           ; BSR set to: 0
  8470  00F2C0  A170               	btfss	___fladd@grs& (0+255),0,b
  8471  00F2C2  EF65  F079         	goto	u2531
  8472  00F2C6  EF67  F079         	goto	u2530
  8473  00F2CA                     u2531:
  8474  00F2CA  EF6D  F079         	goto	l3033
  8475  00F2CE                     u2530:
  8476  00F2CE                     
  8477                           ; BSR set to: 0
  8478  00F2CE  90D8               	bcf	status,0,c
  8479  00F2D0  3170               	rrcf	___fladd@grs& (0+255),w,b
  8480  00F2D2  0901               	iorlw	1
  8481  00F2D4  6F70               	movwf	___fladd@grs& (0+255),b
  8482  00F2D6  EF6F  F079         	goto	l3035
  8483  00F2DA                     l3033:
  8484                           
  8485                           ; BSR set to: 0
  8486  00F2DA  90D8               	bcf	status,0,c
  8487  00F2DC  3370               	rrcf	___fladd@grs& (0+255),f,b
  8488  00F2DE                     l3035:
  8489                           
  8490                           ; BSR set to: 0
  8491  00F2DE  A058               	btfss	___fladd@b^0,0,c
  8492  00F2E0  EF74  F079         	goto	u2541
  8493  00F2E4  EF76  F079         	goto	u2540
  8494  00F2E8                     u2541:
  8495  00F2E8  EF77  F079         	goto	l3039
  8496  00F2EC                     u2540:
  8497  00F2EC                     
  8498                           ; BSR set to: 0
  8499  00F2EC  8F70               	bsf	___fladd@grs& (0+255),7,b
  8500  00F2EE                     l3039:
  8501                           
  8502                           ; BSR set to: 0
  8503  00F2EE  345B               	rlcf	(___fladd@b+3)^0,w,c
  8504  00F2F0  325B               	rrcf	(___fladd@b+3)^0,f,c
  8505  00F2F2  325A               	rrcf	(___fladd@b+2)^0,f,c
  8506  00F2F4  3259               	rrcf	(___fladd@b+1)^0,f,c
  8507  00F2F6  3258               	rrcf	___fladd@b^0,f,c
  8508  00F2F8                     
  8509                           ; BSR set to: 0
  8510  00F2F8  2B6F               	incf	___fladd@bexp& (0+255),f,b
  8511  00F2FA  EF0C  F07A         	goto	l3079
  8512  00F2FE                     l3043:
  8513                           
  8514                           ; BSR set to: 0
  8515  00F2FE  505C               	movf	___fladd@a^0,w,c
  8516  00F300  5C58               	subwf	___fladd@b^0,w,c
  8517  00F302  505D               	movf	(___fladd@a+1)^0,w,c
  8518  00F304  5859               	subwfb	(___fladd@b+1)^0,w,c
  8519  00F306  505E               	movf	(___fladd@a+2)^0,w,c
  8520  00F308  585A               	subwfb	(___fladd@b+2)^0,w,c
  8521  00F30A  505B               	movf	(___fladd@b+3)^0,w,c
  8522  00F30C  0A80               	xorlw	128
  8523  00F30E  6F69               	movwf	??___fladd& (0+255),b
  8524  00F310  505F               	movf	(___fladd@a+3)^0,w,c
  8525  00F312  0A80               	xorlw	128
  8526  00F314  5969               	subwfb	??___fladd& (0+255),w,b
  8527  00F316  B0D8               	btfsc	status,0,c
  8528  00F318  EF90  F079         	goto	u2551
  8529  00F31C  EF92  F079         	goto	u2550
  8530  00F320                     u2551:
  8531  00F320  EFBD  F079         	goto	l3053
  8532  00F324                     u2550:
  8533  00F324                     
  8534                           ; BSR set to: 0
  8535  00F324  5058               	movf	___fladd@b^0,w,c
  8536  00F326  5C5C               	subwf	___fladd@a^0,w,c
  8537  00F328  6F69               	movwf	??___fladd& (0+255),b
  8538  00F32A  5059               	movf	(___fladd@b+1)^0,w,c
  8539  00F32C  585D               	subwfb	(___fladd@a+1)^0,w,c
  8540  00F32E  6F6A               	movwf	(??___fladd+1)& (0+255),b
  8541  00F330  505A               	movf	(___fladd@b+2)^0,w,c
  8542  00F332  585E               	subwfb	(___fladd@a+2)^0,w,c
  8543  00F334  6F6B               	movwf	(??___fladd+2)& (0+255),b
  8544  00F336  505B               	movf	(___fladd@b+3)^0,w,c
  8545  00F338  585F               	subwfb	(___fladd@a+3)^0,w,c
  8546  00F33A  6F6C               	movwf	(??___fladd+3)& (0+255),b
  8547  00F33C  0EFF               	movlw	255
  8548  00F33E  2569               	addwf	??___fladd& (0+255),w,b
  8549  00F340  6E58               	movwf	___fladd@b^0,c
  8550  00F342  0EFF               	movlw	255
  8551  00F344  216A               	addwfc	(??___fladd+1)& (0+255),w,b
  8552  00F346  6E59               	movwf	(___fladd@b+1)^0,c
  8553  00F348  0EFF               	movlw	255
  8554  00F34A  216B               	addwfc	(??___fladd+2)& (0+255),w,b
  8555  00F34C  6E5A               	movwf	(___fladd@b+2)^0,c
  8556  00F34E  0EFF               	movlw	255
  8557  00F350  216C               	addwfc	(??___fladd+3)& (0+255),w,b
  8558  00F352  6E5B               	movwf	(___fladd@b+3)^0,c
  8559  00F354  0E80               	movlw	128
  8560  00F356  1B6D               	xorwf	___fladd@signs& (0+255),f,b
  8561  00F358                     
  8562                           ; BSR set to: 0
  8563  00F358  6D70               	negf	___fladd@grs& (0+255),b
  8564  00F35A                     
  8565                           ; BSR set to: 0
  8566  00F35A  5170               	movf	___fladd@grs& (0+255),w,b
  8567  00F35C  A4D8               	btfss	status,2,c
  8568  00F35E  EFB3  F079         	goto	u2561
  8569  00F362  EFB5  F079         	goto	u2560
  8570  00F366                     u2561:
  8571  00F366  EFC5  F079         	goto	l1008
  8572  00F36A                     u2560:
  8573  00F36A                     
  8574                           ; BSR set to: 0
  8575  00F36A  0E01               	movlw	1
  8576  00F36C  2658               	addwf	___fladd@b^0,f,c
  8577  00F36E  0E00               	movlw	0
  8578  00F370  2259               	addwfc	(___fladd@b+1)^0,f,c
  8579  00F372  225A               	addwfc	(___fladd@b+2)^0,f,c
  8580  00F374  225B               	addwfc	(___fladd@b+3)^0,f,c
  8581  00F376  EFC5  F079         	goto	l1008
  8582  00F37A                     l3053:
  8583                           
  8584                           ; BSR set to: 0
  8585  00F37A  505C               	movf	___fladd@a^0,w,c
  8586  00F37C  5E58               	subwf	___fladd@b^0,f,c
  8587  00F37E  505D               	movf	(___fladd@a+1)^0,w,c
  8588  00F380  5A59               	subwfb	(___fladd@b+1)^0,f,c
  8589  00F382  505E               	movf	(___fladd@a+2)^0,w,c
  8590  00F384  5A5A               	subwfb	(___fladd@b+2)^0,f,c
  8591  00F386  505F               	movf	(___fladd@a+3)^0,w,c
  8592  00F388  5A5B               	subwfb	(___fladd@b+3)^0,f,c
  8593  00F38A                     l1008:
  8594                           
  8595                           ; BSR set to: 0
  8596  00F38A  5058               	movf	___fladd@b^0,w,c
  8597  00F38C  1059               	iorwf	(___fladd@b+1)^0,w,c
  8598  00F38E  105A               	iorwf	(___fladd@b+2)^0,w,c
  8599  00F390  105B               	iorwf	(___fladd@b+3)^0,w,c
  8600  00F392  A4D8               	btfss	status,2,c
  8601  00F394  EFCE  F079         	goto	u2571
  8602  00F398  EFD0  F079         	goto	u2570
  8603  00F39C                     u2571:
  8604  00F39C  EF05  F07A         	goto	l3077
  8605  00F3A0                     u2570:
  8606  00F3A0                     
  8607                           ; BSR set to: 0
  8608  00F3A0  5170               	movf	___fladd@grs& (0+255),w,b
  8609  00F3A2  A4D8               	btfss	status,2,c
  8610  00F3A4  EFD6  F079         	goto	u2581
  8611  00F3A8  EFD8  F079         	goto	u2580
  8612  00F3AC                     u2581:
  8613  00F3AC  EF05  F07A         	goto	l3077
  8614  00F3B0                     u2580:
  8615  00F3B0                     
  8616                           ; BSR set to: 0
  8617  00F3B0  0E00               	movlw	0
  8618  00F3B2  6E58               	movwf	?___fladd^0,c
  8619  00F3B4  0E00               	movlw	0
  8620  00F3B6  6E59               	movwf	(?___fladd+1)^0,c
  8621  00F3B8  0E00               	movlw	0
  8622  00F3BA  6E5A               	movwf	(?___fladd+2)^0,c
  8623  00F3BC  0E00               	movlw	0
  8624  00F3BE  6E5B               	movwf	(?___fladd+3)^0,c
  8625  00F3C0  EFA0  F07A         	goto	l1000
  8626  00F3C4                     l3061:
  8627                           
  8628                           ; BSR set to: 0
  8629  00F3C4  90D8               	bcf	status,0,c
  8630  00F3C6  3658               	rlcf	___fladd@b^0,f,c
  8631  00F3C8  3659               	rlcf	(___fladd@b+1)^0,f,c
  8632  00F3CA  365A               	rlcf	(___fladd@b+2)^0,f,c
  8633  00F3CC  365B               	rlcf	(___fladd@b+3)^0,f,c
  8634  00F3CE                     
  8635                           ; BSR set to: 0
  8636  00F3CE  AF70               	btfss	___fladd@grs& (0+255),7,b
  8637  00F3D0  EFEC  F079         	goto	u2591
  8638  00F3D4  EFEE  F079         	goto	u2590
  8639  00F3D8                     u2591:
  8640  00F3D8  EFEF  F079         	goto	l3067
  8641  00F3DC                     u2590:
  8642  00F3DC                     
  8643                           ; BSR set to: 0
  8644  00F3DC  8058               	bsf	___fladd@b^0,0,c
  8645  00F3DE                     l3067:
  8646                           
  8647                           ; BSR set to: 0
  8648  00F3DE  A170               	btfss	___fladd@grs& (0+255),0,b
  8649  00F3E0  EFF4  F079         	goto	u2601
  8650  00F3E4  EFF6  F079         	goto	u2600
  8651  00F3E8                     u2601:
  8652  00F3E8  EFFA  F079         	goto	l3071
  8653  00F3EC                     u2600:
  8654  00F3EC                     
  8655                           ; BSR set to: 0
  8656  00F3EC  80D8               	bsf	status,0,c
  8657  00F3EE  3770               	rlcf	___fladd@grs& (0+255),f,b
  8658  00F3F0  EFFC  F079         	goto	l3073
  8659  00F3F4                     l3071:
  8660                           
  8661                           ; BSR set to: 0
  8662  00F3F4  90D8               	bcf	status,0,c
  8663  00F3F6  3770               	rlcf	___fladd@grs& (0+255),f,b
  8664  00F3F8                     l3073:
  8665                           
  8666                           ; BSR set to: 0
  8667  00F3F8  516F               	movf	___fladd@bexp& (0+255),w,b
  8668  00F3FA  B4D8               	btfsc	status,2,c
  8669  00F3FC  EF02  F07A         	goto	u2611
  8670  00F400  EF04  F07A         	goto	u2610
  8671  00F404                     u2611:
  8672  00F404  EF05  F07A         	goto	l3077
  8673  00F408                     u2610:
  8674  00F408                     
  8675                           ; BSR set to: 0
  8676  00F408  076F               	decf	___fladd@bexp& (0+255),f,b
  8677  00F40A                     l3077:
  8678                           
  8679                           ; BSR set to: 0
  8680  00F40A  AE5A               	btfss	(___fladd@b+2)^0,7,c
  8681  00F40C  EF0A  F07A         	goto	u2621
  8682  00F410  EF0C  F07A         	goto	u2620
  8683  00F414                     u2621:
  8684  00F414  EFE2  F079         	goto	l3061
  8685  00F418                     u2620:
  8686  00F418                     l3079:
  8687                           
  8688                           ; BSR set to: 0
  8689  00F418  0E00               	movlw	0
  8690  00F41A  6F6E               	movwf	___fladd@aexp& (0+255),b
  8691  00F41C                     
  8692                           ; BSR set to: 0
  8693  00F41C  AF70               	btfss	___fladd@grs& (0+255),7,b
  8694  00F41E  EF13  F07A         	goto	u2631
  8695  00F422  EF15  F07A         	goto	u2630
  8696  00F426                     u2631:
  8697  00F426  EF2D  F07A         	goto	l1017
  8698  00F42A                     u2630:
  8699  00F42A                     
  8700                           ; BSR set to: 0
  8701  00F42A  C070  F069         	movff	___fladd@grs,??___fladd
  8702  00F42E  0E7F               	movlw	127
  8703  00F430  1769               	andwf	??___fladd& (0+255),f,b
  8704  00F432  B4D8               	btfsc	status,2,c
  8705  00F434  EF1E  F07A         	goto	u2641
  8706  00F438  EF20  F07A         	goto	u2640
  8707  00F43C                     u2641:
  8708  00F43C  EF24  F07A         	goto	l1018
  8709  00F440                     u2640:
  8710  00F440                     l3085:
  8711                           
  8712                           ; BSR set to: 0
  8713  00F440  0E01               	movlw	1
  8714  00F442  6F6E               	movwf	___fladd@aexp& (0+255),b
  8715  00F444  EF2D  F07A         	goto	l1017
  8716  00F448                     l1018:
  8717                           
  8718                           ; BSR set to: 0
  8719  00F448  A058               	btfss	___fladd@b^0,0,c
  8720  00F44A  EF29  F07A         	goto	u2651
  8721  00F44E  EF2B  F07A         	goto	u2650
  8722  00F452                     u2651:
  8723  00F452  EF2D  F07A         	goto	l1017
  8724  00F456                     u2650:
  8725  00F456  EF20  F07A         	goto	l3085
  8726  00F45A                     l1017:
  8727                           
  8728                           ; BSR set to: 0
  8729  00F45A  516E               	movf	___fladd@aexp& (0+255),w,b
  8730  00F45C  B4D8               	btfsc	status,2,c
  8731  00F45E  EF33  F07A         	goto	u2661
  8732  00F462  EF35  F07A         	goto	u2660
  8733  00F466                     u2661:
  8734  00F466  EF60  F07A         	goto	l3097
  8735  00F46A                     u2660:
  8736  00F46A                     
  8737                           ; BSR set to: 0
  8738  00F46A  0E01               	movlw	1
  8739  00F46C  2658               	addwf	___fladd@b^0,f,c
  8740  00F46E  0E00               	movlw	0
  8741  00F470  2259               	addwfc	(___fladd@b+1)^0,f,c
  8742  00F472  225A               	addwfc	(___fladd@b+2)^0,f,c
  8743  00F474  225B               	addwfc	(___fladd@b+3)^0,f,c
  8744  00F476                     
  8745                           ; BSR set to: 0
  8746  00F476  A05B               	btfss	(___fladd@b+3)^0,0,c
  8747  00F478  EF40  F07A         	goto	u2671
  8748  00F47C  EF42  F07A         	goto	u2670
  8749  00F480                     u2671:
  8750  00F480  EF60  F07A         	goto	l3097
  8751  00F484                     u2670:
  8752  00F484                     
  8753                           ; BSR set to: 0
  8754  00F484  C058  F069         	movff	___fladd@b,??___fladd
  8755  00F488  C059  F06A         	movff	___fladd@b+1,??___fladd+1
  8756  00F48C  C05A  F06B         	movff	___fladd@b+2,??___fladd+2
  8757  00F490  C05B  F06C         	movff	___fladd@b+3,??___fladd+3
  8758  00F494  356C               	rlcf	(??___fladd+3)& (0+255),w,b
  8759  00F496  336C               	rrcf	(??___fladd+3)& (0+255),f,b
  8760  00F498  336B               	rrcf	(??___fladd+2)& (0+255),f,b
  8761  00F49A  336A               	rrcf	(??___fladd+1)& (0+255),f,b
  8762  00F49C  3369               	rrcf	??___fladd& (0+255),f,b
  8763  00F49E  C069  F058         	movff	??___fladd,___fladd@b
  8764  00F4A2  C06A  F059         	movff	??___fladd+1,___fladd@b+1
  8765  00F4A6  C06B  F05A         	movff	??___fladd+2,___fladd@b+2
  8766  00F4AA  C06C  F05B         	movff	??___fladd+3,___fladd@b+3
  8767  00F4AE  296F               	incf	___fladd@bexp& (0+255),w,b
  8768  00F4B0  B4D8               	btfsc	status,2,c
  8769  00F4B2  EF5D  F07A         	goto	u2681
  8770  00F4B6  EF5F  F07A         	goto	u2680
  8771  00F4BA                     u2681:
  8772  00F4BA  EF60  F07A         	goto	l3097
  8773  00F4BE                     u2680:
  8774  00F4BE                     
  8775                           ; BSR set to: 0
  8776  00F4BE  2B6F               	incf	___fladd@bexp& (0+255),f,b
  8777  00F4C0                     l3097:
  8778                           
  8779                           ; BSR set to: 0
  8780  00F4C0  296F               	incf	___fladd@bexp& (0+255),w,b
  8781  00F4C2  B4D8               	btfsc	status,2,c
  8782  00F4C4  EF66  F07A         	goto	u2691
  8783  00F4C8  EF68  F07A         	goto	u2690
  8784  00F4CC                     u2691:
  8785  00F4CC  EF70  F07A         	goto	l3101
  8786  00F4D0                     u2690:
  8787  00F4D0                     
  8788                           ; BSR set to: 0
  8789  00F4D0  516F               	movf	___fladd@bexp& (0+255),w,b
  8790  00F4D2  A4D8               	btfss	status,2,c
  8791  00F4D4  EF6E  F07A         	goto	u2701
  8792  00F4D8  EF70  F07A         	goto	u2700
  8793  00F4DC                     u2701:
  8794  00F4DC  EF82  F07A         	goto	l3105
  8795  00F4E0                     u2700:
  8796  00F4E0                     l3101:
  8797                           
  8798                           ; BSR set to: 0
  8799  00F4E0  0E00               	movlw	0
  8800  00F4E2  6E58               	movwf	___fladd@b^0,c
  8801  00F4E4  0E00               	movlw	0
  8802  00F4E6  6E59               	movwf	(___fladd@b+1)^0,c
  8803  00F4E8  0E00               	movlw	0
  8804  00F4EA  6E5A               	movwf	(___fladd@b+2)^0,c
  8805  00F4EC  0E00               	movlw	0
  8806  00F4EE  6E5B               	movwf	(___fladd@b+3)^0,c
  8807  00F4F0  516F               	movf	___fladd@bexp& (0+255),w,b
  8808  00F4F2  A4D8               	btfss	status,2,c
  8809  00F4F4  EF7E  F07A         	goto	u2711
  8810  00F4F8  EF80  F07A         	goto	u2710
  8811  00F4FC                     u2711:
  8812  00F4FC  EF82  F07A         	goto	l3105
  8813  00F500                     u2710:
  8814  00F500                     
  8815                           ; BSR set to: 0
  8816  00F500  0E00               	movlw	0
  8817  00F502  6F6D               	movwf	___fladd@signs& (0+255),b
  8818  00F504                     l3105:
  8819                           
  8820                           ; BSR set to: 0
  8821  00F504  A16F               	btfss	___fladd@bexp& (0+255),0,b
  8822  00F506  EF87  F07A         	goto	u2721
  8823  00F50A  EF89  F07A         	goto	u2720
  8824  00F50E                     u2721:
  8825  00F50E  EF8C  F07A         	goto	l3109
  8826  00F512                     u2720:
  8827  00F512                     
  8828                           ; BSR set to: 0
  8829  00F512  8E5A               	bsf	(___fladd@b+2)^0,7,c
  8830  00F514  EF8D  F07A         	goto	l3111
  8831  00F518                     l3109:
  8832                           
  8833                           ; BSR set to: 0
  8834  00F518  9E5A               	bcf	(___fladd@b+2)^0,7,c
  8835  00F51A                     l3111:
  8836                           
  8837                           ; BSR set to: 0
  8838  00F51A  90D8               	bcf	status,0,c
  8839  00F51C  316F               	rrcf	___fladd@bexp& (0+255),w,b
  8840  00F51E  6E5B               	movwf	(___fladd@b+3)^0,c
  8841  00F520                     
  8842                           ; BSR set to: 0
  8843  00F520  AF6D               	btfss	___fladd@signs& (0+255),7,b
  8844  00F522  EF95  F07A         	goto	u2731
  8845  00F526  EF97  F07A         	goto	u2730
  8846  00F52A                     u2731:
  8847  00F52A  EF98  F07A         	goto	l3117
  8848  00F52E                     u2730:
  8849  00F52E                     
  8850                           ; BSR set to: 0
  8851  00F52E  8E5B               	bsf	(___fladd@b+3)^0,7,c
  8852  00F530                     l3117:
  8853                           
  8854                           ; BSR set to: 0
  8855  00F530  C058  F058         	movff	___fladd@b,?___fladd
  8856  00F534  C059  F059         	movff	___fladd@b+1,?___fladd+1
  8857  00F538  C05A  F05A         	movff	___fladd@b+2,?___fladd+2
  8858  00F53C  C05B  F05B         	movff	___fladd@b+3,?___fladd+3
  8859  00F540                     l1000:
  8860                           
  8861                           ; BSR set to: 0
  8862  00F540  0012               	return		;funcret
  8863  00F542                     __end_of___fladd:
  8864                           	callstack 0
  8865                           
  8866 ;; *************** function ___flneg *****************
  8867 ;; Defined at:
  8868 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\flneg.c"
  8869 ;; Parameters:    Size  Location     Type
  8870 ;;  f1              4    0[COMRAM] unsigned char 
  8871 ;; Auto vars:     Size  Location     Type
  8872 ;;		None
  8873 ;; Return value:  Size  Location     Type
  8874 ;;                  4    0[COMRAM] unsigned char 
  8875 ;; Registers used:
  8876 ;;		wreg, status,2, status,0
  8877 ;; Tracked objects:
  8878 ;;		On entry : 0/0
  8879 ;;		On exit  : 0/0
  8880 ;;		Unchanged: 0/0
  8881 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8882 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8883 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8884 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8885 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8886 ;;Total ram usage:        4 bytes
  8887 ;; Hardware stack levels used:    1
  8888 ;; This function calls:
  8889 ;;		Nothing
  8890 ;; This function is called by:
  8891 ;;		_printf
  8892 ;;		_pow
  8893 ;;		_exp
  8894 ;; This function uses a non-reentrant model
  8895 ;;
  8896                           
  8897                           	psect	text30
  8898  00C68E                     __ptext30:
  8899                           	callstack 0
  8900  00C68E                     ___flneg:
  8901                           	callstack 29
  8902  00C68E  5001               	movf	___flneg@f1^0,w,c
  8903  00C690  1002               	iorwf	(___flneg@f1+1)^0,w,c
  8904  00C692  1003               	iorwf	(___flneg@f1+2)^0,w,c
  8905  00C694  1004               	iorwf	(___flneg@f1+3)^0,w,c
  8906  00C696  B4D8               	btfsc	status,2,c
  8907  00C698  EF50  F063         	goto	u3841
  8908  00C69C  EF52  F063         	goto	u3840
  8909  00C6A0                     u3841:
  8910  00C6A0  EF5A  F063         	goto	l3857
  8911  00C6A4                     u3840:
  8912  00C6A4  0E00               	movlw	0
  8913  00C6A6  1A01               	xorwf	___flneg@f1^0,f,c
  8914  00C6A8  0E00               	movlw	0
  8915  00C6AA  1A02               	xorwf	(___flneg@f1+1)^0,f,c
  8916  00C6AC  0E00               	movlw	0
  8917  00C6AE  1A03               	xorwf	(___flneg@f1+2)^0,f,c
  8918  00C6B0  0E80               	movlw	128
  8919  00C6B2  1A04               	xorwf	(___flneg@f1+3)^0,f,c
  8920  00C6B4                     l3857:
  8921  00C6B4  C001  F001         	movff	___flneg@f1,?___flneg
  8922  00C6B8  C002  F002         	movff	___flneg@f1+1,?___flneg+1
  8923  00C6BC  C003  F003         	movff	___flneg@f1+2,?___flneg+2
  8924  00C6C0  C004  F004         	movff	___flneg@f1+3,?___flneg+3
  8925  00C6C4  0012               	return		;funcret
  8926  00C6C6                     __end_of___flneg:
  8927                           	callstack 0
  8928                           
  8929 ;; *************** function ___flge *****************
  8930 ;; Defined at:
  8931 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\flge.c"
  8932 ;; Parameters:    Size  Location     Type
  8933 ;;  ff1             4    0[COMRAM] unsigned char 
  8934 ;;  ff2             4    4[COMRAM] unsigned char 
  8935 ;; Auto vars:     Size  Location     Type
  8936 ;;		None
  8937 ;; Return value:  Size  Location     Type
  8938 ;;		None               void
  8939 ;; Registers used:
  8940 ;;		wreg, status,2, status,0
  8941 ;; Tracked objects:
  8942 ;;		On entry : 0/0
  8943 ;;		On exit  : 0/0
  8944 ;;		Unchanged: 0/0
  8945 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8946 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8947 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8948 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8949 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8950 ;;Total ram usage:       12 bytes
  8951 ;; Hardware stack levels used:    1
  8952 ;; This function calls:
  8953 ;;		Nothing
  8954 ;; This function is called by:
  8955 ;;		_printf
  8956 ;;		_pow
  8957 ;;		_exp
  8958 ;;		_floor
  8959 ;; This function uses a non-reentrant model
  8960 ;;
  8961                           
  8962                           	psect	text31
  8963  00CDFE                     __ptext31:
  8964                           	callstack 0
  8965  00CDFE                     ___flge:
  8966                           	callstack 29
  8967  00CDFE  0E00               	movlw	0
  8968  00CE00  1401               	andwf	___flge@ff1^0,w,c
  8969  00CE02  6E09               	movwf	??___flge^0,c
  8970  00CE04  0E00               	movlw	0
  8971  00CE06  1402               	andwf	(___flge@ff1+1)^0,w,c
  8972  00CE08  6E0A               	movwf	(??___flge+1)^0,c
  8973  00CE0A  0E80               	movlw	128
  8974  00CE0C  1403               	andwf	(___flge@ff1+2)^0,w,c
  8975  00CE0E  6E0B               	movwf	(??___flge+2)^0,c
  8976  00CE10  0E7F               	movlw	127
  8977  00CE12  1404               	andwf	(___flge@ff1+3)^0,w,c
  8978  00CE14  6E0C               	movwf	(??___flge+3)^0,c
  8979  00CE16  5009               	movf	??___flge^0,w,c
  8980  00CE18  100A               	iorwf	(??___flge+1)^0,w,c
  8981  00CE1A  100B               	iorwf	(??___flge+2)^0,w,c
  8982  00CE1C  100C               	iorwf	(??___flge+3)^0,w,c
  8983  00CE1E  A4D8               	btfss	status,2,c
  8984  00CE20  EF14  F067         	goto	u3051
  8985  00CE24  EF16  F067         	goto	u3050
  8986  00CE28                     u3051:
  8987  00CE28  EF1E  F067         	goto	l3335
  8988  00CE2C                     u3050:
  8989  00CE2C  0E00               	movlw	0
  8990  00CE2E  6E01               	movwf	___flge@ff1^0,c
  8991  00CE30  0E00               	movlw	0
  8992  00CE32  6E02               	movwf	(___flge@ff1+1)^0,c
  8993  00CE34  0E00               	movlw	0
  8994  00CE36  6E03               	movwf	(___flge@ff1+2)^0,c
  8995  00CE38  0E00               	movlw	0
  8996  00CE3A  6E04               	movwf	(___flge@ff1+3)^0,c
  8997  00CE3C                     l3335:
  8998  00CE3C  0E00               	movlw	0
  8999  00CE3E  1405               	andwf	___flge@ff2^0,w,c
  9000  00CE40  6E09               	movwf	??___flge^0,c
  9001  00CE42  0E00               	movlw	0
  9002  00CE44  1406               	andwf	(___flge@ff2+1)^0,w,c
  9003  00CE46  6E0A               	movwf	(??___flge+1)^0,c
  9004  00CE48  0E80               	movlw	128
  9005  00CE4A  1407               	andwf	(___flge@ff2+2)^0,w,c
  9006  00CE4C  6E0B               	movwf	(??___flge+2)^0,c
  9007  00CE4E  0E7F               	movlw	127
  9008  00CE50  1408               	andwf	(___flge@ff2+3)^0,w,c
  9009  00CE52  6E0C               	movwf	(??___flge+3)^0,c
  9010  00CE54  5009               	movf	??___flge^0,w,c
  9011  00CE56  100A               	iorwf	(??___flge+1)^0,w,c
  9012  00CE58  100B               	iorwf	(??___flge+2)^0,w,c
  9013  00CE5A  100C               	iorwf	(??___flge+3)^0,w,c
  9014  00CE5C  A4D8               	btfss	status,2,c
  9015  00CE5E  EF33  F067         	goto	u3061
  9016  00CE62  EF35  F067         	goto	u3060
  9017  00CE66                     u3061:
  9018  00CE66  EF3D  F067         	goto	l3339
  9019  00CE6A                     u3060:
  9020  00CE6A  0E00               	movlw	0
  9021  00CE6C  6E05               	movwf	___flge@ff2^0,c
  9022  00CE6E  0E00               	movlw	0
  9023  00CE70  6E06               	movwf	(___flge@ff2+1)^0,c
  9024  00CE72  0E00               	movlw	0
  9025  00CE74  6E07               	movwf	(___flge@ff2+2)^0,c
  9026  00CE76  0E00               	movlw	0
  9027  00CE78  6E08               	movwf	(___flge@ff2+3)^0,c
  9028  00CE7A                     l3339:
  9029  00CE7A  AE04               	btfss	(___flge@ff1+3)^0,7,c
  9030  00CE7C  EF42  F067         	goto	u3071
  9031  00CE80  EF44  F067         	goto	u3070
  9032  00CE84                     u3071:
  9033  00CE84  EF4D  F067         	goto	l3343
  9034  00CE88                     u3070:
  9035  00CE88  6C01               	negf	___flge@ff1^0,c
  9036  00CE8A  1E02               	comf	(___flge@ff1+1)^0,f,c
  9037  00CE8C  B0D8               	btfsc	status,0,c
  9038  00CE8E  2A02               	incf	(___flge@ff1+1)^0,f,c
  9039  00CE90  1E03               	comf	(___flge@ff1+2)^0,f,c
  9040  00CE92  B0D8               	btfsc	status,0,c
  9041  00CE94  2A03               	incf	(___flge@ff1+2)^0,f,c
  9042  00CE96  0E80               	movlw	128
  9043  00CE98  5604               	subfwb	(___flge@ff1+3)^0,f,c
  9044  00CE9A                     l3343:
  9045  00CE9A  AE08               	btfss	(___flge@ff2+3)^0,7,c
  9046  00CE9C  EF52  F067         	goto	u3081
  9047  00CEA0  EF54  F067         	goto	u3080
  9048  00CEA4                     u3081:
  9049  00CEA4  EF5D  F067         	goto	l719
  9050  00CEA8                     u3080:
  9051  00CEA8  6C05               	negf	___flge@ff2^0,c
  9052  00CEAA  1E06               	comf	(___flge@ff2+1)^0,f,c
  9053  00CEAC  B0D8               	btfsc	status,0,c
  9054  00CEAE  2A06               	incf	(___flge@ff2+1)^0,f,c
  9055  00CEB0  1E07               	comf	(___flge@ff2+2)^0,f,c
  9056  00CEB2  B0D8               	btfsc	status,0,c
  9057  00CEB4  2A07               	incf	(___flge@ff2+2)^0,f,c
  9058  00CEB6  0E80               	movlw	128
  9059  00CEB8  5608               	subfwb	(___flge@ff2+3)^0,f,c
  9060  00CEBA                     l719:
  9061  00CEBA  0E00               	movlw	0
  9062  00CEBC  1A01               	xorwf	___flge@ff1^0,f,c
  9063  00CEBE  0E00               	movlw	0
  9064  00CEC0  1A02               	xorwf	(___flge@ff1+1)^0,f,c
  9065  00CEC2  0E00               	movlw	0
  9066  00CEC4  1A03               	xorwf	(___flge@ff1+2)^0,f,c
  9067  00CEC6  0E80               	movlw	128
  9068  00CEC8  1A04               	xorwf	(___flge@ff1+3)^0,f,c
  9069  00CECA  0E00               	movlw	0
  9070  00CECC  1A05               	xorwf	___flge@ff2^0,f,c
  9071  00CECE  0E00               	movlw	0
  9072  00CED0  1A06               	xorwf	(___flge@ff2+1)^0,f,c
  9073  00CED2  0E00               	movlw	0
  9074  00CED4  1A07               	xorwf	(___flge@ff2+2)^0,f,c
  9075  00CED6  0E80               	movlw	128
  9076  00CED8  1A08               	xorwf	(___flge@ff2+3)^0,f,c
  9077  00CEDA  5005               	movf	___flge@ff2^0,w,c
  9078  00CEDC  5C01               	subwf	___flge@ff1^0,w,c
  9079  00CEDE  5006               	movf	(___flge@ff2+1)^0,w,c
  9080  00CEE0  5802               	subwfb	(___flge@ff1+1)^0,w,c
  9081  00CEE2  5007               	movf	(___flge@ff2+2)^0,w,c
  9082  00CEE4  5803               	subwfb	(___flge@ff1+2)^0,w,c
  9083  00CEE6  5008               	movf	(___flge@ff2+3)^0,w,c
  9084  00CEE8  5804               	subwfb	(___flge@ff1+3)^0,w,c
  9085  00CEEA  B0D8               	btfsc	status,0,c
  9086  00CEEC  EF7A  F067         	goto	u3091
  9087  00CEF0  EF7C  F067         	goto	u3090
  9088  00CEF4                     u3091:
  9089  00CEF4  EF7F  F067         	goto	l3349
  9090  00CEF8                     u3090:
  9091  00CEF8  90D8               	bcf	status,0,c
  9092  00CEFA  EF80  F067         	goto	l720
  9093  00CEFE                     l3349:
  9094  00CEFE  80D8               	bsf	status,0,c
  9095  00CF00                     l720:
  9096  00CF00  0012               	return		;funcret
  9097  00CF02                     __end_of___flge:
  9098                           	callstack 0
  9099                           
  9100 ;; *************** function ___fleq *****************
  9101 ;; Defined at:
  9102 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\fleq.c"
  9103 ;; Parameters:    Size  Location     Type
  9104 ;;  ff1             4   38[COMRAM] unsigned char 
  9105 ;;  ff2             4   42[COMRAM] unsigned char 
  9106 ;; Auto vars:     Size  Location     Type
  9107 ;;		None
  9108 ;; Return value:  Size  Location     Type
  9109 ;;		None               void
  9110 ;; Registers used:
  9111 ;;		wreg, status,2, status,0
  9112 ;; Tracked objects:
  9113 ;;		On entry : 0/0
  9114 ;;		On exit  : 0/0
  9115 ;;		Unchanged: 0/0
  9116 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9117 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9118 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9119 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9120 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9121 ;;Total ram usage:       12 bytes
  9122 ;; Hardware stack levels used:    1
  9123 ;; This function calls:
  9124 ;;		Nothing
  9125 ;; This function is called by:
  9126 ;;		_printf
  9127 ;;		_pow
  9128 ;;		_exp
  9129 ;;		_frexp
  9130 ;;		_ldexp
  9131 ;;		_log
  9132 ;; This function uses a non-reentrant model
  9133 ;;
  9134                           
  9135                           	psect	text32
  9136  00CB08                     __ptext32:
  9137                           	callstack 0
  9138  00CB08                     ___fleq:
  9139                           	callstack 29
  9140  00CB08  0E00               	movlw	0
  9141  00CB0A  1427               	andwf	___fleq@ff1^0,w,c
  9142  00CB0C  6E2F               	movwf	??___fleq^0,c
  9143  00CB0E  0E00               	movlw	0
  9144  00CB10  1428               	andwf	(___fleq@ff1+1)^0,w,c
  9145  00CB12  6E30               	movwf	(??___fleq+1)^0,c
  9146  00CB14  0E80               	movlw	128
  9147  00CB16  1429               	andwf	(___fleq@ff1+2)^0,w,c
  9148  00CB18  6E31               	movwf	(??___fleq+2)^0,c
  9149  00CB1A  0E7F               	movlw	127
  9150  00CB1C  142A               	andwf	(___fleq@ff1+3)^0,w,c
  9151  00CB1E  6E32               	movwf	(??___fleq+3)^0,c
  9152  00CB20  502F               	movf	??___fleq^0,w,c
  9153  00CB22  1030               	iorwf	(??___fleq+1)^0,w,c
  9154  00CB24  1031               	iorwf	(??___fleq+2)^0,w,c
  9155  00CB26  1032               	iorwf	(??___fleq+3)^0,w,c
  9156  00CB28  A4D8               	btfss	status,2,c
  9157  00CB2A  EF99  F065         	goto	u2311
  9158  00CB2E  EF9B  F065         	goto	u2310
  9159  00CB32                     u2311:
  9160  00CB32  EFA3  F065         	goto	l2903
  9161  00CB36                     u2310:
  9162  00CB36  0E00               	movlw	0
  9163  00CB38  6E27               	movwf	___fleq@ff1^0,c
  9164  00CB3A  0E00               	movlw	0
  9165  00CB3C  6E28               	movwf	(___fleq@ff1+1)^0,c
  9166  00CB3E  0E00               	movlw	0
  9167  00CB40  6E29               	movwf	(___fleq@ff1+2)^0,c
  9168  00CB42  0E00               	movlw	0
  9169  00CB44  6E2A               	movwf	(___fleq@ff1+3)^0,c
  9170  00CB46                     l2903:
  9171  00CB46  0E00               	movlw	0
  9172  00CB48  142B               	andwf	___fleq@ff2^0,w,c
  9173  00CB4A  6E2F               	movwf	??___fleq^0,c
  9174  00CB4C  0E00               	movlw	0
  9175  00CB4E  142C               	andwf	(___fleq@ff2+1)^0,w,c
  9176  00CB50  6E30               	movwf	(??___fleq+1)^0,c
  9177  00CB52  0E80               	movlw	128
  9178  00CB54  142D               	andwf	(___fleq@ff2+2)^0,w,c
  9179  00CB56  6E31               	movwf	(??___fleq+2)^0,c
  9180  00CB58  0E7F               	movlw	127
  9181  00CB5A  142E               	andwf	(___fleq@ff2+3)^0,w,c
  9182  00CB5C  6E32               	movwf	(??___fleq+3)^0,c
  9183  00CB5E  502F               	movf	??___fleq^0,w,c
  9184  00CB60  1030               	iorwf	(??___fleq+1)^0,w,c
  9185  00CB62  1031               	iorwf	(??___fleq+2)^0,w,c
  9186  00CB64  1032               	iorwf	(??___fleq+3)^0,w,c
  9187  00CB66  A4D8               	btfss	status,2,c
  9188  00CB68  EFB8  F065         	goto	u2321
  9189  00CB6C  EFBA  F065         	goto	u2320
  9190  00CB70                     u2321:
  9191  00CB70  EFC2  F065         	goto	l2907
  9192  00CB74                     u2320:
  9193  00CB74  0E00               	movlw	0
  9194  00CB76  6E2B               	movwf	___fleq@ff2^0,c
  9195  00CB78  0E00               	movlw	0
  9196  00CB7A  6E2C               	movwf	(___fleq@ff2+1)^0,c
  9197  00CB7C  0E00               	movlw	0
  9198  00CB7E  6E2D               	movwf	(___fleq@ff2+2)^0,c
  9199  00CB80  0E00               	movlw	0
  9200  00CB82  6E2E               	movwf	(___fleq@ff2+3)^0,c
  9201  00CB84                     l2907:
  9202  00CB84  502B               	movf	___fleq@ff2^0,w,c
  9203  00CB86  1827               	xorwf	___fleq@ff1^0,w,c
  9204  00CB88  E10F               	bnz	u2330
  9205  00CB8A  502C               	movf	(___fleq@ff2+1)^0,w,c
  9206  00CB8C  1828               	xorwf	(___fleq@ff1+1)^0,w,c
  9207  00CB8E  E10C               	bnz	u2330
  9208  00CB90  502D               	movf	(___fleq@ff2+2)^0,w,c
  9209  00CB92  1829               	xorwf	(___fleq@ff1+2)^0,w,c
  9210  00CB94  E109               	bnz	u2330
  9211  00CB96  502E               	movf	(___fleq@ff2+3)^0,w,c
  9212  00CB98  182A               	xorwf	(___fleq@ff1+3)^0,w,c
  9213  00CB9A  B4D8               	btfsc	status,2,c
  9214  00CB9C  EFD2  F065         	goto	u2331
  9215  00CBA0  EFD4  F065         	goto	u2330
  9216  00CBA4                     u2331:
  9217  00CBA4  EFD7  F065         	goto	l2911
  9218  00CBA8                     u2330:
  9219  00CBA8  90D8               	bcf	status,0,c
  9220  00CBAA  EFD8  F065         	goto	l713
  9221  00CBAE                     l2911:
  9222  00CBAE  80D8               	bsf	status,0,c
  9223  00CBB0                     l713:
  9224  00CBB0  0012               	return		;funcret
  9225  00CBB2                     __end_of___fleq:
  9226                           	callstack 0
  9227                           
  9228 ;; *************** function _TMR0_WriteTimer *****************
  9229 ;; Defined at:
  9230 ;;		line 113 in file "mcc_generated_files/tmr0.c"
  9231 ;; Parameters:    Size  Location     Type
  9232 ;;  timerVal        2    0[COMRAM] unsigned int 
  9233 ;; Auto vars:     Size  Location     Type
  9234 ;;		None
  9235 ;; Return value:  Size  Location     Type
  9236 ;;                  1    wreg      void 
  9237 ;; Registers used:
  9238 ;;		wreg, status,2
  9239 ;; Tracked objects:
  9240 ;;		On entry : 0/0
  9241 ;;		On exit  : 0/0
  9242 ;;		Unchanged: 0/0
  9243 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9244 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9245 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9246 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9247 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9248 ;;Total ram usage:        2 bytes
  9249 ;; Hardware stack levels used:    1
  9250 ;; This function calls:
  9251 ;;		Nothing
  9252 ;; This function is called by:
  9253 ;;		_main
  9254 ;; This function uses a non-reentrant model
  9255 ;;
  9256                           
  9257                           	psect	text33
  9258  00C588                     __ptext33:
  9259                           	callstack 0
  9260  00C588                     _TMR0_WriteTimer:
  9261                           	callstack 30
  9262  00C588                     
  9263                           ;tmr0.c: 116: TMR0H = timerVal >> 8;
  9264  00C588  5002               	movf	(TMR0_WriteTimer@timerVal+1)^0,w,c
  9265  00C58A  6EB7               	movwf	183,c	;volatile
  9266  00C58C                     
  9267                           ;tmr0.c: 117: TMR0L = (uint8_t) timerVal;
  9268  00C58C  0060  F007  FFB6   	movff	TMR0_WriteTimer@timerVal,16310	;volatile
  9269  00C592  0012               	return		;funcret
  9270  00C594                     __end_of_TMR0_WriteTimer:
  9271                           	callstack 0
  9272                           
  9273 ;; *************** function _TMR0_ReadTimer *****************
  9274 ;; Defined at:
  9275 ;;		line 100 in file "mcc_generated_files/tmr0.c"
  9276 ;; Parameters:    Size  Location     Type
  9277 ;;		None
  9278 ;; Auto vars:     Size  Location     Type
  9279 ;;  readVal         2    4[COMRAM] unsigned int 
  9280 ;;  readValHigh     1    7[COMRAM] unsigned char 
  9281 ;;  readValLow      1    6[COMRAM] unsigned char 
  9282 ;; Return value:  Size  Location     Type
  9283 ;;                  2    0[COMRAM] unsigned int 
  9284 ;; Registers used:
  9285 ;;		wreg, status,2
  9286 ;; Tracked objects:
  9287 ;;		On entry : 0/0
  9288 ;;		On exit  : 0/0
  9289 ;;		Unchanged: 0/0
  9290 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9291 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9292 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9293 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9294 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9295 ;;Total ram usage:        8 bytes
  9296 ;; Hardware stack levels used:    1
  9297 ;; This function calls:
  9298 ;;		Nothing
  9299 ;; This function is called by:
  9300 ;;		_main
  9301 ;; This function uses a non-reentrant model
  9302 ;;
  9303                           
  9304                           	psect	text34
  9305  00C5EE                     __ptext34:
  9306                           	callstack 0
  9307  00C5EE                     _TMR0_ReadTimer:
  9308                           	callstack 30
  9309  00C5EE                     
  9310                           ;tmr0.c: 102: uint16_t readVal;;tmr0.c: 103: uint8_t readValLow;;tmr0.c: 104: uint8_t re
      +                          adValHigh;;tmr0.c: 106: readValLow = TMR0L;
  9311  00C5EE  006F FED8  F007    	movff	16310,TMR0_ReadTimer@readValLow	;volatile
  9312                           
  9313                           ;tmr0.c: 107: readValHigh = TMR0H;
  9314  00C5F4  006F FEDC  F008    	movff	16311,TMR0_ReadTimer@readValHigh	;volatile
  9315  00C5FA                     
  9316                           ;tmr0.c: 108: readVal = ((uint16_t)readValHigh << 8) + readValLow;
  9317  00C5FA  5008               	movf	TMR0_ReadTimer@readValHigh^0,w,c
  9318  00C5FC  6E03               	movwf	??_TMR0_ReadTimer^0,c
  9319  00C5FE  5007               	movf	TMR0_ReadTimer@readValLow^0,w,c
  9320  00C600  6E05               	movwf	TMR0_ReadTimer@readVal^0,c
  9321  00C602  C003  F006         	movff	??_TMR0_ReadTimer,TMR0_ReadTimer@readVal+1
  9322  00C606                     
  9323                           ;tmr0.c: 110: return readVal;
  9324  00C606  C005  F001         	movff	TMR0_ReadTimer@readVal,?_TMR0_ReadTimer
  9325  00C60A  C006  F002         	movff	TMR0_ReadTimer@readVal+1,?_TMR0_ReadTimer+1
  9326  00C60E  0012               	return		;funcret
  9327  00C610                     __end_of_TMR0_ReadTimer:
  9328                           	callstack 0
  9329                           
  9330 ;; *************** function _SYSTEM_Initialize *****************
  9331 ;; Defined at:
  9332 ;;		line 50 in file "mcc_generated_files/mcc.c"
  9333 ;; Parameters:    Size  Location     Type
  9334 ;;		None
  9335 ;; Auto vars:     Size  Location     Type
  9336 ;;		None
  9337 ;; Return value:  Size  Location     Type
  9338 ;;                  1    wreg      void 
  9339 ;; Registers used:
  9340 ;;		wreg, status,2, status,0, cstack
  9341 ;; Tracked objects:
  9342 ;;		On entry : 0/0
  9343 ;;		On exit  : 0/0
  9344 ;;		Unchanged: 0/0
  9345 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9346 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9347 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9348 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9349 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9350 ;;Total ram usage:        0 bytes
  9351 ;; Hardware stack levels used:    1
  9352 ;; Hardware stack levels required when called:    2
  9353 ;; This function calls:
  9354 ;;		_OSCILLATOR_Initialize
  9355 ;;		_PIN_MANAGER_Initialize
  9356 ;;		_PMD_Initialize
  9357 ;;		_TMR0_Initialize
  9358 ;;		_UART2_Initialize
  9359 ;; This function is called by:
  9360 ;;		_main
  9361 ;; This function uses a non-reentrant model
  9362 ;;
  9363                           
  9364                           	psect	text35
  9365  00C5A6                     __ptext35:
  9366                           	callstack 0
  9367  00C5A6                     _SYSTEM_Initialize:
  9368                           	callstack 28
  9369  00C5A6                     
  9370                           ;mcc.c: 52: PMD_Initialize();
  9371  00C5A6  EC08  F063         	call	_PMD_Initialize	;wreg free
  9372                           
  9373                           ;mcc.c: 53: PIN_MANAGER_Initialize();
  9374  00C5AA  ECE6  F064         	call	_PIN_MANAGER_Initialize	;wreg free
  9375                           
  9376                           ;mcc.c: 54: OSCILLATOR_Initialize();
  9377  00C5AE  ECDE  F062         	call	_OSCILLATOR_Initialize	;wreg free
  9378  00C5B2                     
  9379                           ;mcc.c: 55: TMR0_Initialize();
  9380  00C5B2  EC2F  F063         	call	_TMR0_Initialize	;wreg free
  9381  00C5B6                     
  9382                           ;mcc.c: 56: UART2_Initialize();
  9383  00C5B6  EC87  F063         	call	_UART2_Initialize	;wreg free
  9384  00C5BA  0012               	return		;funcret
  9385  00C5BC                     __end_of_SYSTEM_Initialize:
  9386                           	callstack 0
  9387                           
  9388 ;; *************** function _UART2_Initialize *****************
  9389 ;; Defined at:
  9390 ;;		line 66 in file "mcc_generated_files/uart2.c"
  9391 ;; Parameters:    Size  Location     Type
  9392 ;;		None
  9393 ;; Auto vars:     Size  Location     Type
  9394 ;;		None
  9395 ;; Return value:  Size  Location     Type
  9396 ;;                  1    wreg      void 
  9397 ;; Registers used:
  9398 ;;		wreg, status,2, status,0, cstack
  9399 ;; Tracked objects:
  9400 ;;		On entry : 0/0
  9401 ;;		On exit  : 0/0
  9402 ;;		Unchanged: 0/0
  9403 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9404 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9405 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9406 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9407 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9408 ;;Total ram usage:        0 bytes
  9409 ;; Hardware stack levels used:    1
  9410 ;; Hardware stack levels required when called:    1
  9411 ;; This function calls:
  9412 ;;		_UART2_SetErrorHandler
  9413 ;;		_UART2_SetFramingErrorHandler
  9414 ;;		_UART2_SetOverrunErrorHandler
  9415 ;; This function is called by:
  9416 ;;		_SYSTEM_Initialize
  9417 ;; This function uses a non-reentrant model
  9418 ;;
  9419                           
  9420                           	psect	text36
  9421  00C70E                     __ptext36:
  9422                           	callstack 0
  9423  00C70E                     _UART2_Initialize:
  9424                           	callstack 28
  9425  00C70E                     
  9426                           ;uart2.c: 73: U2P1L = 0x00;
  9427  00C70E  0E00               	movlw	0
  9428  00C710  013D               	movlb	61	; () banked
  9429  00C712  6FD4               	movwf	212,b	;volatile
  9430                           
  9431                           ;uart2.c: 76: U2P2L = 0x00;
  9432  00C714  0E00               	movlw	0
  9433  00C716  6FD6               	movwf	214,b	;volatile
  9434                           
  9435                           ;uart2.c: 79: U2P3L = 0x00;
  9436  00C718  0E00               	movlw	0
  9437  00C71A  6FD8               	movwf	216,b	;volatile
  9438                           
  9439                           ;uart2.c: 82: U2CON0 = 0xB0;
  9440  00C71C  0EB0               	movlw	176
  9441  00C71E  6FDA               	movwf	218,b	;volatile
  9442                           
  9443                           ;uart2.c: 85: U2CON1 = 0x80;
  9444  00C720  0E80               	movlw	128
  9445  00C722  6FDB               	movwf	219,b	;volatile
  9446                           
  9447                           ;uart2.c: 88: U2CON2 = 0x00;
  9448  00C724  0E00               	movlw	0
  9449  00C726  6FDC               	movwf	220,b	;volatile
  9450                           
  9451                           ;uart2.c: 91: U2BRGL = 0xCF;
  9452  00C728  0ECF               	movlw	207
  9453  00C72A  6FDD               	movwf	221,b	;volatile
  9454                           
  9455                           ;uart2.c: 94: U2BRGH = 0x00;
  9456  00C72C  0E00               	movlw	0
  9457  00C72E  6FDE               	movwf	222,b	;volatile
  9458                           
  9459                           ;uart2.c: 97: U2FIFO = 0x00;
  9460  00C730  0E00               	movlw	0
  9461  00C732  6FDF               	movwf	223,b	;volatile
  9462                           
  9463                           ;uart2.c: 100: U2UIR = 0x00;
  9464  00C734  0E00               	movlw	0
  9465  00C736  6FE0               	movwf	224,b	;volatile
  9466                           
  9467                           ;uart2.c: 103: U2ERRIR = 0x00;
  9468  00C738  0E00               	movlw	0
  9469  00C73A  6FE1               	movwf	225,b	;volatile
  9470                           
  9471                           ;uart2.c: 106: U2ERRIE = 0x00;
  9472  00C73C  0E00               	movlw	0
  9473  00C73E  6FE2               	movwf	226,b	;volatile
  9474  00C740                     
  9475                           ; BSR set to: 61
  9476                           ;uart2.c: 109: UART2_SetFramingErrorHandler(UART2_DefaultFramingErrorHandler);
  9477  00C740  0E00               	movlw	0
  9478  00C742  6E01               	movwf	UART2_SetFramingErrorHandler@interruptHandler^0,c
  9479  00C744  0E00               	movlw	0
  9480  00C746  6E02               	movwf	(UART2_SetFramingErrorHandler@interruptHandler+1)^0,c
  9481  00C748  ECB5  F062         	call	_UART2_SetFramingErrorHandler	;wreg free
  9482  00C74C                     
  9483                           ;uart2.c: 110: UART2_SetOverrunErrorHandler(UART2_DefaultOverrunErrorHandler);
  9484  00C74C  0E00               	movlw	0
  9485  00C74E  6E01               	movwf	UART2_SetOverrunErrorHandler@interruptHandler^0,c
  9486  00C750  0E00               	movlw	0
  9487  00C752  6E02               	movwf	(UART2_SetOverrunErrorHandler@interruptHandler+1)^0,c
  9488  00C754  ECBA  F062         	call	_UART2_SetOverrunErrorHandler	;wreg free
  9489  00C758                     
  9490                           ;uart2.c: 111: UART2_SetErrorHandler(UART2_DefaultErrorHandler);
  9491  00C758  0E00               	movlw	0
  9492  00C75A  6E01               	movwf	UART2_SetErrorHandler@interruptHandler^0,c
  9493  00C75C  0E00               	movlw	0
  9494  00C75E  6E02               	movwf	(UART2_SetErrorHandler@interruptHandler+1)^0,c
  9495  00C760  ECB0  F062         	call	_UART2_SetErrorHandler	;wreg free
  9496  00C764                     
  9497                           ;uart2.c: 113: uart2RxLastError.status = 0;
  9498  00C764  0E00               	movlw	0
  9499  00C766  0100               	movlb	0	; () banked
  9500  00C768  6FD1               	movwf	_uart2RxLastError& (0+255),b	;volatile
  9501  00C76A                     
  9502                           ; BSR set to: 0
  9503  00C76A  0012               	return		;funcret
  9504  00C76C                     __end_of_UART2_Initialize:
  9505                           	callstack 0
  9506                           
  9507 ;; *************** function _UART2_SetOverrunErrorHandler *****************
  9508 ;; Defined at:
  9509 ;;		line 195 in file "mcc_generated_files/uart2.c"
  9510 ;; Parameters:    Size  Location     Type
  9511 ;;  interruptHan    2    0[COMRAM] PTR FTN()void 
  9512 ;;		 -> UART2_DefaultOverrunErrorHandler(1), 
  9513 ;; Auto vars:     Size  Location     Type
  9514 ;;		None
  9515 ;; Return value:  Size  Location     Type
  9516 ;;                  1    wreg      void 
  9517 ;; Registers used:
  9518 ;;		wreg, status,2, status,0
  9519 ;; Tracked objects:
  9520 ;;		On entry : 0/0
  9521 ;;		On exit  : 0/0
  9522 ;;		Unchanged: 0/0
  9523 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9524 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9525 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9526 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9527 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9528 ;;Total ram usage:        2 bytes
  9529 ;; Hardware stack levels used:    1
  9530 ;; This function calls:
  9531 ;;		Nothing
  9532 ;; This function is called by:
  9533 ;;		_UART2_Initialize
  9534 ;; This function uses a non-reentrant model
  9535 ;;
  9536                           
  9537                           	psect	text37
  9538  00C574                     __ptext37:
  9539                           	callstack 0
  9540  00C574                     _UART2_SetOverrunErrorHandler:
  9541                           	callstack 28
  9542  00C574                     
  9543                           ;uart2.c: 196: UART2_OverrunErrorHandler = interruptHandler;
  9544  00C574  C001  F0C7         	movff	UART2_SetOverrunErrorHandler@interruptHandler,_UART2_OverrunErrorHandler
  9545  00C578  C002  F0C8         	movff	UART2_SetOverrunErrorHandler@interruptHandler+1,_UART2_OverrunErrorHandler+1
  9546  00C57C  0012               	return		;funcret
  9547  00C57E                     __end_of_UART2_SetOverrunErrorHandler:
  9548                           	callstack 0
  9549                           
  9550 ;; *************** function _UART2_SetFramingErrorHandler *****************
  9551 ;; Defined at:
  9552 ;;		line 191 in file "mcc_generated_files/uart2.c"
  9553 ;; Parameters:    Size  Location     Type
  9554 ;;  interruptHan    2    0[COMRAM] PTR FTN()void 
  9555 ;;		 -> UART2_DefaultFramingErrorHandler(1), 
  9556 ;; Auto vars:     Size  Location     Type
  9557 ;;		None
  9558 ;; Return value:  Size  Location     Type
  9559 ;;                  1    wreg      void 
  9560 ;; Registers used:
  9561 ;;		wreg, status,2, status,0
  9562 ;; Tracked objects:
  9563 ;;		On entry : 0/0
  9564 ;;		On exit  : 0/0
  9565 ;;		Unchanged: 0/0
  9566 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9567 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9568 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9569 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9570 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9571 ;;Total ram usage:        2 bytes
  9572 ;; Hardware stack levels used:    1
  9573 ;; This function calls:
  9574 ;;		Nothing
  9575 ;; This function is called by:
  9576 ;;		_UART2_Initialize
  9577 ;; This function uses a non-reentrant model
  9578 ;;
  9579                           
  9580                           	psect	text38
  9581  00C56A                     __ptext38:
  9582                           	callstack 0
  9583  00C56A                     _UART2_SetFramingErrorHandler:
  9584                           	callstack 28
  9585  00C56A                     
  9586                           ;uart2.c: 192: UART2_FramingErrorHandler = interruptHandler;
  9587  00C56A  C001  F0C9         	movff	UART2_SetFramingErrorHandler@interruptHandler,_UART2_FramingErrorHandler
  9588  00C56E  C002  F0CA         	movff	UART2_SetFramingErrorHandler@interruptHandler+1,_UART2_FramingErrorHandler+1
  9589  00C572  0012               	return		;funcret
  9590  00C574                     __end_of_UART2_SetFramingErrorHandler:
  9591                           	callstack 0
  9592                           
  9593 ;; *************** function _UART2_SetErrorHandler *****************
  9594 ;; Defined at:
  9595 ;;		line 199 in file "mcc_generated_files/uart2.c"
  9596 ;; Parameters:    Size  Location     Type
  9597 ;;  interruptHan    2    0[COMRAM] PTR FTN()void 
  9598 ;;		 -> UART2_DefaultErrorHandler(1), 
  9599 ;; Auto vars:     Size  Location     Type
  9600 ;;		None
  9601 ;; Return value:  Size  Location     Type
  9602 ;;                  1    wreg      void 
  9603 ;; Registers used:
  9604 ;;		wreg, status,2, status,0
  9605 ;; Tracked objects:
  9606 ;;		On entry : 0/0
  9607 ;;		On exit  : 0/0
  9608 ;;		Unchanged: 0/0
  9609 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9610 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9611 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9612 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9613 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9614 ;;Total ram usage:        2 bytes
  9615 ;; Hardware stack levels used:    1
  9616 ;; This function calls:
  9617 ;;		Nothing
  9618 ;; This function is called by:
  9619 ;;		_UART2_Initialize
  9620 ;; This function uses a non-reentrant model
  9621 ;;
  9622                           
  9623                           	psect	text39
  9624  00C560                     __ptext39:
  9625                           	callstack 0
  9626  00C560                     _UART2_SetErrorHandler:
  9627                           	callstack 28
  9628  00C560                     
  9629                           ;uart2.c: 200: UART2_ErrorHandler = interruptHandler;
  9630  00C560  C001  F0C5         	movff	UART2_SetErrorHandler@interruptHandler,_UART2_ErrorHandler
  9631  00C564  C002  F0C6         	movff	UART2_SetErrorHandler@interruptHandler+1,_UART2_ErrorHandler+1
  9632  00C568  0012               	return		;funcret
  9633  00C56A                     __end_of_UART2_SetErrorHandler:
  9634                           	callstack 0
  9635                           
  9636 ;; *************** function _TMR0_Initialize *****************
  9637 ;; Defined at:
  9638 ;;		line 65 in file "mcc_generated_files/tmr0.c"
  9639 ;; Parameters:    Size  Location     Type
  9640 ;;		None
  9641 ;; Auto vars:     Size  Location     Type
  9642 ;;		None
  9643 ;; Return value:  Size  Location     Type
  9644 ;;                  1    wreg      void 
  9645 ;; Registers used:
  9646 ;;		wreg, status,2, status,0
  9647 ;; Tracked objects:
  9648 ;;		On entry : 0/0
  9649 ;;		On exit  : 0/0
  9650 ;;		Unchanged: 0/0
  9651 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9652 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9653 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9654 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9655 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9656 ;;Total ram usage:        2 bytes
  9657 ;; Hardware stack levels used:    1
  9658 ;; This function calls:
  9659 ;;		Nothing
  9660 ;; This function is called by:
  9661 ;;		_SYSTEM_Initialize
  9662 ;; This function uses a non-reentrant model
  9663 ;;
  9664                           
  9665                           	psect	text40
  9666  00C65E                     __ptext40:
  9667                           	callstack 0
  9668  00C65E                     _TMR0_Initialize:
  9669                           	callstack 29
  9670  00C65E                     
  9671                           ;tmr0.c: 70: T0CON1 = 0x4E;
  9672  00C65E  0E4E               	movlw	78
  9673  00C660  6EB9               	movwf	185,c	;volatile
  9674                           
  9675                           ;tmr0.c: 73: TMR0H = 0xF4;
  9676  00C662  0EF4               	movlw	244
  9677  00C664  6EB7               	movwf	183,c	;volatile
  9678                           
  9679                           ;tmr0.c: 76: TMR0L = 0x14;
  9680  00C666  0E14               	movlw	20
  9681  00C668  6EB6               	movwf	182,c	;volatile
  9682  00C66A                     
  9683                           ;tmr0.c: 79: timer0ReloadVal16bit = (TMR0H << 8) | TMR0L;
  9684  00C66A  50B6               	movf	182,w,c	;volatile
  9685  00C66C  006F FEDC  F001    	movff	16311,??_TMR0_Initialize	;volatile
  9686  00C672  6A02               	clrf	(??_TMR0_Initialize+1)^0,c
  9687  00C674  C001  F002         	movff	??_TMR0_Initialize,??_TMR0_Initialize+1
  9688  00C678  6A01               	clrf	??_TMR0_Initialize^0,c
  9689  00C67A  1001               	iorwf	??_TMR0_Initialize^0,w,c
  9690  00C67C  0100               	movlb	0	; () banked
  9691  00C67E  6FCB               	movwf	_timer0ReloadVal16bit& (0+255),b	;volatile
  9692  00C680  5002               	movf	(??_TMR0_Initialize+1)^0,w,c
  9693  00C682  6FCC               	movwf	(_timer0ReloadVal16bit+1)& (0+255),b	;volatile
  9694  00C684                     
  9695                           ; BSR set to: 0
  9696                           ;tmr0.c: 82: PIR3bits.TMR0IF = 0;
  9697  00C684  0139               	movlb	57	; () banked
  9698  00C686  9FA3               	bcf	163,7,b	;volatile
  9699  00C688                     
  9700                           ; BSR set to: 57
  9701                           ;tmr0.c: 85: T0CON0 = 0x90;
  9702  00C688  0E90               	movlw	144
  9703  00C68A  6EB8               	movwf	184,c	;volatile
  9704  00C68C                     
  9705                           ; BSR set to: 57
  9706  00C68C  0012               	return		;funcret
  9707  00C68E                     __end_of_TMR0_Initialize:
  9708                           	callstack 0
  9709                           
  9710 ;; *************** function _PMD_Initialize *****************
  9711 ;; Defined at:
  9712 ;;		line 73 in file "mcc_generated_files/mcc.c"
  9713 ;; Parameters:    Size  Location     Type
  9714 ;;		None
  9715 ;; Auto vars:     Size  Location     Type
  9716 ;;		None
  9717 ;; Return value:  Size  Location     Type
  9718 ;;                  1    wreg      void 
  9719 ;; Registers used:
  9720 ;;		wreg, status,2
  9721 ;; Tracked objects:
  9722 ;;		On entry : 0/0
  9723 ;;		On exit  : 0/0
  9724 ;;		Unchanged: 0/0
  9725 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9726 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9727 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9728 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9729 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9730 ;;Total ram usage:        0 bytes
  9731 ;; Hardware stack levels used:    1
  9732 ;; This function calls:
  9733 ;;		Nothing
  9734 ;; This function is called by:
  9735 ;;		_SYSTEM_Initialize
  9736 ;; This function uses a non-reentrant model
  9737 ;;
  9738                           
  9739                           	psect	text41
  9740  00C610                     __ptext41:
  9741                           	callstack 0
  9742  00C610                     _PMD_Initialize:
  9743                           	callstack 29
  9744  00C610                     
  9745                           ;mcc.c: 76: PMD0 = 0x00;
  9746  00C610  0E00               	movlw	0
  9747  00C612  0139               	movlb	57	; () banked
  9748  00C614  6FC0               	movwf	192,b	;volatile
  9749                           
  9750                           ;mcc.c: 78: PMD1 = 0x00;
  9751  00C616  0E00               	movlw	0
  9752  00C618  6FC1               	movwf	193,b	;volatile
  9753                           
  9754                           ;mcc.c: 80: PMD2 = 0x00;
  9755  00C61A  0E00               	movlw	0
  9756  00C61C  6FC2               	movwf	194,b	;volatile
  9757                           
  9758                           ;mcc.c: 82: PMD3 = 0x00;
  9759  00C61E  0E00               	movlw	0
  9760  00C620  6FC3               	movwf	195,b	;volatile
  9761                           
  9762                           ;mcc.c: 84: PMD4 = 0x00;
  9763  00C622  0E00               	movlw	0
  9764  00C624  6FC4               	movwf	196,b	;volatile
  9765                           
  9766                           ;mcc.c: 86: PMD5 = 0x00;
  9767  00C626  0E00               	movlw	0
  9768  00C628  6FC5               	movwf	197,b	;volatile
  9769                           
  9770                           ;mcc.c: 88: PMD6 = 0x00;
  9771  00C62A  0E00               	movlw	0
  9772  00C62C  6FC6               	movwf	198,b	;volatile
  9773                           
  9774                           ;mcc.c: 90: PMD7 = 0x00;
  9775  00C62E  0E00               	movlw	0
  9776  00C630  6FC7               	movwf	199,b	;volatile
  9777  00C632                     
  9778                           ; BSR set to: 57
  9779  00C632  0012               	return		;funcret
  9780  00C634                     __end_of_PMD_Initialize:
  9781                           	callstack 0
  9782                           
  9783 ;; *************** function _PIN_MANAGER_Initialize *****************
  9784 ;; Defined at:
  9785 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  9786 ;; Parameters:    Size  Location     Type
  9787 ;;		None
  9788 ;; Auto vars:     Size  Location     Type
  9789 ;;		None
  9790 ;; Return value:  Size  Location     Type
  9791 ;;                  1    wreg      void 
  9792 ;; Registers used:
  9793 ;;		wreg, status,2
  9794 ;; Tracked objects:
  9795 ;;		On entry : 0/0
  9796 ;;		On exit  : 0/0
  9797 ;;		Unchanged: 0/0
  9798 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9799 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9800 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9801 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9802 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9803 ;;Total ram usage:        0 bytes
  9804 ;; Hardware stack levels used:    1
  9805 ;; This function calls:
  9806 ;;		Nothing
  9807 ;; This function is called by:
  9808 ;;		_SYSTEM_Initialize
  9809 ;; This function uses a non-reentrant model
  9810 ;;
  9811                           
  9812                           	psect	text42
  9813  00C9CC                     __ptext42:
  9814                           	callstack 0
  9815  00C9CC                     _PIN_MANAGER_Initialize:
  9816                           	callstack 29
  9817  00C9CC                     
  9818                           ;pin_manager.c: 60: LATE = 0x00;
  9819  00C9CC  0E00               	movlw	0
  9820  00C9CE  6EBE               	movwf	190,c	;volatile
  9821                           
  9822                           ;pin_manager.c: 61: LATD = 0x00;
  9823  00C9D0  0E00               	movlw	0
  9824  00C9D2  6EBD               	movwf	189,c	;volatile
  9825                           
  9826                           ;pin_manager.c: 62: LATA = 0x00;
  9827  00C9D4  0E00               	movlw	0
  9828  00C9D6  6EBA               	movwf	186,c	;volatile
  9829                           
  9830                           ;pin_manager.c: 63: LATB = 0x00;
  9831  00C9D8  0E00               	movlw	0
  9832  00C9DA  6EBB               	movwf	187,c	;volatile
  9833                           
  9834                           ;pin_manager.c: 64: LATC = 0x00;
  9835  00C9DC  0E00               	movlw	0
  9836  00C9DE  6EBC               	movwf	188,c	;volatile
  9837                           
  9838                           ;pin_manager.c: 69: TRISE = 0x07;
  9839  00C9E0  0E07               	movlw	7
  9840  00C9E2  6EC6               	movwf	198,c	;volatile
  9841  00C9E4                     
  9842                           ;pin_manager.c: 70: TRISA = 0xFF;
  9843  00C9E4  68C2               	setf	194,c	;volatile
  9844                           
  9845                           ;pin_manager.c: 71: TRISB = 0xBF;
  9846  00C9E6  0EBF               	movlw	191
  9847  00C9E8  6EC3               	movwf	195,c	;volatile
  9848  00C9EA                     
  9849                           ;pin_manager.c: 72: TRISC = 0xFF;
  9850  00C9EA  68C4               	setf	196,c	;volatile
  9851                           
  9852                           ;pin_manager.c: 73: TRISD = 0xFB;
  9853  00C9EC  0EFB               	movlw	251
  9854  00C9EE  6EC5               	movwf	197,c	;volatile
  9855                           
  9856                           ;pin_manager.c: 78: ANSELD = 0xF9;
  9857  00C9F0  0EF9               	movlw	249
  9858  00C9F2  013A               	movlb	58	; () banked
  9859  00C9F4  6F70               	movwf	112,b	;volatile
  9860  00C9F6                     
  9861                           ; BSR set to: 58
  9862                           ;pin_manager.c: 79: ANSELC = 0xFF;
  9863  00C9F6  6960               	setf	96,b	;volatile
  9864                           
  9865                           ;pin_manager.c: 80: ANSELB = 0x3F;
  9866  00C9F8  0E3F               	movlw	63
  9867  00C9FA  6F50               	movwf	80,b	;volatile
  9868                           
  9869                           ;pin_manager.c: 81: ANSELE = 0x07;
  9870  00C9FC  0E07               	movlw	7
  9871  00C9FE  6F80               	movwf	128,b	;volatile
  9872  00CA00                     
  9873                           ; BSR set to: 58
  9874                           ;pin_manager.c: 82: ANSELA = 0xFF;
  9875  00CA00  6940               	setf	64,b	;volatile
  9876                           
  9877                           ;pin_manager.c: 87: WPUD = 0x00;
  9878  00CA02  0E00               	movlw	0
  9879  00CA04  6F71               	movwf	113,b	;volatile
  9880                           
  9881                           ;pin_manager.c: 88: WPUE = 0x00;
  9882  00CA06  0E00               	movlw	0
  9883  00CA08  6F81               	movwf	129,b	;volatile
  9884                           
  9885                           ;pin_manager.c: 89: WPUB = 0x00;
  9886  00CA0A  0E00               	movlw	0
  9887  00CA0C  6F51               	movwf	81,b	;volatile
  9888                           
  9889                           ;pin_manager.c: 90: WPUA = 0x00;
  9890  00CA0E  0E00               	movlw	0
  9891  00CA10  6F41               	movwf	65,b	;volatile
  9892                           
  9893                           ;pin_manager.c: 91: WPUC = 0x00;
  9894  00CA12  0E00               	movlw	0
  9895  00CA14  6F61               	movwf	97,b	;volatile
  9896                           
  9897                           ;pin_manager.c: 96: RB1I2C = 0x00;
  9898  00CA16  0E00               	movlw	0
  9899  00CA18  6F5A               	movwf	90,b	;volatile
  9900                           
  9901                           ;pin_manager.c: 97: RB2I2C = 0x00;
  9902  00CA1A  0E00               	movlw	0
  9903  00CA1C  6F5B               	movwf	91,b	;volatile
  9904                           
  9905                           ;pin_manager.c: 98: RC3I2C = 0x00;
  9906  00CA1E  0E00               	movlw	0
  9907  00CA20  6F6A               	movwf	106,b	;volatile
  9908                           
  9909                           ;pin_manager.c: 99: RC4I2C = 0x00;
  9910  00CA22  0E00               	movlw	0
  9911  00CA24  6F6B               	movwf	107,b	;volatile
  9912                           
  9913                           ;pin_manager.c: 100: RD0I2C = 0x00;
  9914  00CA26  0E00               	movlw	0
  9915  00CA28  6F7A               	movwf	122,b	;volatile
  9916                           
  9917                           ;pin_manager.c: 101: RD1I2C = 0x00;
  9918  00CA2A  0E00               	movlw	0
  9919  00CA2C  6F7B               	movwf	123,b	;volatile
  9920                           
  9921                           ;pin_manager.c: 106: ODCONE = 0x00;
  9922  00CA2E  0E00               	movlw	0
  9923  00CA30  6F82               	movwf	130,b	;volatile
  9924                           
  9925                           ;pin_manager.c: 107: ODCONA = 0x00;
  9926  00CA32  0E00               	movlw	0
  9927  00CA34  6F42               	movwf	66,b	;volatile
  9928                           
  9929                           ;pin_manager.c: 108: ODCONB = 0x00;
  9930  00CA36  0E00               	movlw	0
  9931  00CA38  6F52               	movwf	82,b	;volatile
  9932                           
  9933                           ;pin_manager.c: 109: ODCONC = 0x00;
  9934  00CA3A  0E00               	movlw	0
  9935  00CA3C  6F62               	movwf	98,b	;volatile
  9936                           
  9937                           ;pin_manager.c: 110: ODCOND = 0x00;
  9938  00CA3E  0E00               	movlw	0
  9939  00CA40  6F72               	movwf	114,b	;volatile
  9940  00CA42                     
  9941                           ; BSR set to: 58
  9942                           ;pin_manager.c: 115: SLRCONA = 0xFF;
  9943  00CA42  6943               	setf	67,b	;volatile
  9944  00CA44                     
  9945                           ; BSR set to: 58
  9946                           ;pin_manager.c: 116: SLRCONB = 0xFF;
  9947  00CA44  6953               	setf	83,b	;volatile
  9948  00CA46                     
  9949                           ; BSR set to: 58
  9950                           ;pin_manager.c: 117: SLRCONC = 0xFF;
  9951  00CA46  6963               	setf	99,b	;volatile
  9952  00CA48                     
  9953                           ; BSR set to: 58
  9954                           ;pin_manager.c: 118: SLRCOND = 0xFF;
  9955  00CA48  6973               	setf	115,b	;volatile
  9956                           
  9957                           ;pin_manager.c: 119: SLRCONE = 0x07;
  9958  00CA4A  0E07               	movlw	7
  9959  00CA4C  6F83               	movwf	131,b	;volatile
  9960  00CA4E                     
  9961                           ; BSR set to: 58
  9962                           ;pin_manager.c: 124: INLVLA = 0xFF;
  9963  00CA4E  6944               	setf	68,b	;volatile
  9964  00CA50                     
  9965                           ; BSR set to: 58
  9966                           ;pin_manager.c: 125: INLVLB = 0xFF;
  9967  00CA50  6954               	setf	84,b	;volatile
  9968  00CA52                     
  9969                           ; BSR set to: 58
  9970                           ;pin_manager.c: 126: INLVLC = 0xFF;
  9971  00CA52  6964               	setf	100,b	;volatile
  9972  00CA54                     
  9973                           ; BSR set to: 58
  9974                           ;pin_manager.c: 127: INLVLD = 0xFF;
  9975  00CA54  6974               	setf	116,b	;volatile
  9976                           
  9977                           ;pin_manager.c: 128: INLVLE = 0x0F;
  9978  00CA56  0E0F               	movlw	15
  9979  00CA58  6F84               	movwf	132,b	;volatile
  9980                           
  9981                           ;pin_manager.c: 137: U2RXPPS = 0x0F;
  9982  00CA5A  0E0F               	movlw	15
  9983  00CA5C  6FE8               	movwf	232,b	;volatile
  9984                           
  9985                           ;pin_manager.c: 138: RB6PPS = 0x16;
  9986  00CA5E  0E16               	movlw	22
  9987  00CA60  6F0E               	movwf	14,b	;volatile
  9988  00CA62                     
  9989                           ; BSR set to: 58
  9990  00CA62  0012               	return		;funcret
  9991  00CA64                     __end_of_PIN_MANAGER_Initialize:
  9992                           	callstack 0
  9993                           
  9994 ;; *************** function _OSCILLATOR_Initialize *****************
  9995 ;; Defined at:
  9996 ;;		line 59 in file "mcc_generated_files/mcc.c"
  9997 ;; Parameters:    Size  Location     Type
  9998 ;;		None
  9999 ;; Auto vars:     Size  Location     Type
 10000 ;;		None
 10001 ;; Return value:  Size  Location     Type
 10002 ;;                  1    wreg      void 
 10003 ;; Registers used:
 10004 ;;		wreg, status,2
 10005 ;; Tracked objects:
 10006 ;;		On entry : 0/0
 10007 ;;		On exit  : 0/0
 10008 ;;		Unchanged: 0/0
 10009 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10010 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10011 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10012 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10013 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10014 ;;Total ram usage:        0 bytes
 10015 ;; Hardware stack levels used:    1
 10016 ;; This function calls:
 10017 ;;		Nothing
 10018 ;; This function is called by:
 10019 ;;		_SYSTEM_Initialize
 10020 ;; This function uses a non-reentrant model
 10021 ;;
 10022                           
 10023                           	psect	text43
 10024  00C5BC                     __ptext43:
 10025                           	callstack 0
 10026  00C5BC                     _OSCILLATOR_Initialize:
 10027                           	callstack 29
 10028  00C5BC                     
 10029                           ;mcc.c: 62: OSCCON1 = 0x62;
 10030  00C5BC  0E62               	movlw	98
 10031  00C5BE  0139               	movlb	57	; () banked
 10032  00C5C0  6FD9               	movwf	217,b	;volatile
 10033                           
 10034                           ;mcc.c: 64: OSCCON3 = 0x00;
 10035  00C5C2  0E00               	movlw	0
 10036  00C5C4  6FDB               	movwf	219,b	;volatile
 10037                           
 10038                           ;mcc.c: 66: OSCEN = 0x00;
 10039  00C5C6  0E00               	movlw	0
 10040  00C5C8  6FDD               	movwf	221,b	;volatile
 10041                           
 10042                           ;mcc.c: 68: OSCFRQ = 0x06;
 10043  00C5CA  0E06               	movlw	6
 10044  00C5CC  6FDF               	movwf	223,b	;volatile
 10045                           
 10046                           ;mcc.c: 70: OSCTUNE = 0x00;
 10047  00C5CE  0E00               	movlw	0
 10048  00C5D0  6FDE               	movwf	222,b	;volatile
 10049  00C5D2                     
 10050                           ; BSR set to: 57
 10051  00C5D2  0012               	return		;funcret
 10052  00C5D4                     __end_of_OSCILLATOR_Initialize:
 10053                           	callstack 0
 10054                           
 10055                           	psect	rparam
 10056  0000                     
 10057                           	psect	idloc
 10058                           
 10059                           ;Config register IDLOC0 @ 0x200000
 10060                           ;	unspecified, using default values
 10061  200000                     	org	2097152
 10062  200000  0FFF               	dw	4095
 10063                           
 10064                           ;Config register IDLOC1 @ 0x200002
 10065                           ;	unspecified, using default values
 10066  200002                     	org	2097154
 10067  200002  0FFF               	dw	4095
 10068                           
 10069                           ;Config register IDLOC2 @ 0x200004
 10070                           ;	unspecified, using default values
 10071  200004                     	org	2097156
 10072  200004  0FFF               	dw	4095
 10073                           
 10074                           ;Config register IDLOC3 @ 0x200006
 10075                           ;	unspecified, using default values
 10076  200006                     	org	2097158
 10077  200006  0FFF               	dw	4095
 10078                           
 10079                           ;Config register IDLOC4 @ 0x200008
 10080                           ;	unspecified, using default values
 10081  200008                     	org	2097160
 10082  200008  0FFF               	dw	4095
 10083                           
 10084                           ;Config register IDLOC5 @ 0x20000A
 10085                           ;	unspecified, using default values
 10086  20000A                     	org	2097162
 10087  20000A  0FFF               	dw	4095
 10088                           
 10089                           ;Config register IDLOC6 @ 0x20000C
 10090                           ;	unspecified, using default values
 10091  20000C                     	org	2097164
 10092  20000C  0FFF               	dw	4095
 10093                           
 10094                           ;Config register IDLOC7 @ 0x20000E
 10095                           ;	unspecified, using default values
 10096  20000E                     	org	2097166
 10097  20000E  0FFF               	dw	4095
 10098                           
 10099                           	psect	config
 10100                           
 10101                           ;Config register CONFIG1L @ 0x300000
 10102                           ;	External Oscillator Selection
 10103                           ;	FEXTOSC = OFF, Oscillator not enabled
 10104                           ;	Reset Oscillator Selection
 10105                           ;	RSTOSC = HFINTOSC_1MHZ, HFINTOSC with HFFRQ = 4 MHz and CDIV = 4:1
 10106  300000                     	org	3145728
 10107  300000  EC                 	db	236
 10108                           
 10109                           ;Config register CONFIG1H @ 0x300001
 10110                           ;	Clock out Enable bit
 10111                           ;	CLKOUTEN = ON, CLKOUT function is enabled
 10112                           ;	PRLOCKED One-Way Set Enable bit
 10113                           ;	PR1WAY = ON, PRLOCK bit can be cleared and set only once
 10114                           ;	Clock Switch Enable bit
 10115                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
 10116                           ;	Fail-Safe Clock Monitor Enable bit
 10117                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
 10118  300001                     	org	3145729
 10119  300001  FE                 	db	254
 10120                           
 10121                           ;Config register CONFIG2L @ 0x300002
 10122                           ;	MCLR Enable bit
 10123                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RE3 pin function is MCLR
 10124                           ;	Power-up timer selection bits
 10125                           ;	PWRTS = PWRT_OFF, PWRT is disabled
 10126                           ;	Multi-vector enable bit
 10127                           ;	MVECEN = OFF, Interrupt contoller does not use vector table to prioritze interrupts
 10128                           ;	IVTLOCK bit One-way set enable bit
 10129                           ;	IVT1WAY = ON, IVTLOCK bit can be cleared and set only once
 10130                           ;	Low Power BOR Enable bit
 10131                           ;	LPBOREN = OFF, ULPBOR disabled
 10132                           ;	Brown-out Reset Enable bits
 10133                           ;	BOREN = SBORDIS, Brown-out Reset enabled , SBOREN bit is ignored
 10134  300002                     	org	3145730
 10135  300002  F7                 	db	247
 10136                           
 10137                           ;Config register CONFIG2H @ 0x300003
 10138                           ;	Brown-out Reset Voltage Selection bits
 10139                           ;	BORV = VBOR_2P45, Brown-out Reset Voltage (VBOR) set to 2.45V
 10140                           ;	ZCD Disable bit
 10141                           ;	ZCD = OFF, ZCD disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCDCON
 10142                           ;	PPSLOCK bit One-Way Set Enable bit
 10143                           ;	PPS1WAY = ON, PPSLOCK bit can be cleared and set only once; PPS registers remain locke
      +                          d after one clear/set cycle
 10144                           ;	Stack Full/Underflow Reset Enable bit
 10145                           ;	STVREN = ON, Stack full/underflow will cause Reset
 10146                           ;	Debugger Enable bit
 10147                           ;	DEBUG = OFF, Background debugger disabled
 10148                           ;	Extended Instruction Set Enable bit
 10149                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
 10150  300003                     	org	3145731
 10151  300003  FF                 	db	255
 10152                           
 10153                           ;Config register CONFIG3L @ 0x300004
 10154                           ;	WDT Period selection bits
 10155                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
 10156                           ;	WDT operating mode
 10157                           ;	WDTE = OFF, WDT Disabled; SWDTEN is ignored
 10158  300004                     	org	3145732
 10159  300004  9F                 	db	159
 10160                           
 10161                           ;Config register CONFIG3H @ 0x300005
 10162                           ;	WDT Window Select bits
 10163                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
 10164                           ;	WDT input clock selector
 10165                           ;	WDTCCS = SC, Software Control
 10166  300005                     	org	3145733
 10167  300005  FF                 	db	255
 10168                           
 10169                           ;Config register CONFIG4L @ 0x300006
 10170                           ;	Boot Block Size selection bits
 10171                           ;	BBSIZE = BBSIZE_512, Boot Block size is 512 words
 10172                           ;	Boot Block enable bit
 10173                           ;	BBEN = OFF, Boot block disabled
 10174                           ;	Storage Area Flash enable bit
 10175                           ;	SAFEN = OFF, SAF disabled
 10176                           ;	Application Block write protection bit
 10177                           ;	WRTAPP = OFF, Application Block not write protected
 10178  300006                     	org	3145734
 10179  300006  FF                 	db	255
 10180                           
 10181                           ;Config register CONFIG4H @ 0x300007
 10182                           ;	Configuration Register Write Protection bit
 10183                           ;	WRTB = OFF, Configuration registers (300000-30000Bh) not write-protected
 10184                           ;	Boot Block Write Protection bit
 10185                           ;	WRTC = OFF, Boot Block (000000-0007FFh) not write-protected
 10186                           ;	Data EEPROM Write Protection bit
 10187                           ;	WRTD = OFF, Data EEPROM not write-protected
 10188                           ;	SAF Write protection bit
 10189                           ;	WRTSAF = OFF, SAF not Write Protected
 10190                           ;	Low Voltage Programming Enable bit
 10191                           ;	LVP = ON, Low voltage programming enabled. MCLR/VPP pin function is MCLR. MCLRE config
      +                          uration bit is ignored
 10192  300007                     	org	3145735
 10193  300007  FF                 	db	255
 10194                           
 10195                           ;Config register CONFIG5L @ 0x300008
 10196                           ;	PFM and Data EEPROM Code Protection bit
 10197                           ;	CP = OFF, PFM and Data EEPROM code protection disabled
 10198  300008                     	org	3145736
 10199  300008  FF                 	db	255
 10200                           
 10201                           ;Config register CONFIG5H @ 0x300009
 10202                           ;	unspecified, using default values
 10203  300009                     	org	3145737
 10204  300009  FF                 	db	255
 10205                           tosu	equ	0x3FFF
 10206                           tosh	equ	0x3FFE
 10207                           tosl	equ	0x3FFD
 10208                           stkptr	equ	0x3FFC
 10209                           pclatu	equ	0x3FFB
 10210                           pclath	equ	0x3FFA
 10211                           pcl	equ	0x3FF9
 10212                           tblptru	equ	0x3FF8
 10213                           tblptrh	equ	0x3FF7
 10214                           tblptrl	equ	0x3FF6
 10215                           tablat	equ	0x3FF5
 10216                           prodh	equ	0x3FF4
 10217                           prodl	equ	0x3FF3
 10218                           indf0	equ	0x3FEF
 10219                           postinc0	equ	0x3FEE
 10220                           postdec0	equ	0x3FED
 10221                           preinc0	equ	0x3FEC
 10222                           plusw0	equ	0x3FEB
 10223                           fsr0h	equ	0x3FEA
 10224                           fsr0l	equ	0x3FE9
 10225                           wreg	equ	0x3FE8
 10226                           indf1	equ	0x3FE7
 10227                           postinc1	equ	0x3FE6
 10228                           postdec1	equ	0x3FE5
 10229                           preinc1	equ	0x3FE4
 10230                           plusw1	equ	0x3FE3
 10231                           fsr1h	equ	0x3FE2
 10232                           fsr1l	equ	0x3FE1
 10233                           bsr	equ	0x3FE0
 10234                           indf2	equ	0x3FDF
 10235                           postinc2	equ	0x3FDE
 10236                           postdec2	equ	0x3FDD
 10237                           preinc2	equ	0x3FDC
 10238                           plusw2	equ	0x3FDB
 10239                           fsr2h	equ	0x3FDA
 10240                           fsr2l	equ	0x3FD9
 10241                           status	equ	0x3FD8

Data Sizes:
    Strings     168
    Constant    220
    Data        0
    BSS         5
    Persistent  8
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     95      95
    BANK0           160    101     114
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0

Pointer List with Targets:

    frexp@eptr	PTR int  size(2) Largest target is 2
		 -> log@exponent(BANK0[2]), floor@expon(BANK0[2]), 

    eval_poly@d	PTR const  size(2) Largest target is 40
		 -> log@coeff(CODE[36]), exp@coeff(CODE[40]), 

    printf@f	PTR const unsigned char  size(2) Largest target is 57
		 -> STR_8(CODE[7]), STR_7(CODE[9]), STR_6(CODE[9]), STR_5(CODE[57]), 
		 -> STR_4(CODE[22]), STR_3(CODE[20]), STR_2(CODE[23]), STR_1(CODE[37]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    UART2_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART2_DefaultErrorHandler(), 

    UART2_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART2_DefaultOverrunErrorHandler(), 

    UART2_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART2_DefaultFramingErrorHandler(), 

    UART2_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), UART2_DefaultErrorHandler(), 

    UART2_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), UART2_DefaultOverrunErrorHandler(), 

    UART2_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), UART2_DefaultFramingErrorHandler(), 


Critical Paths under _main in COMRAM

    _main->___fldiv
    _log->___fladd
    _exp->___fldiv
    _floor->___fladd
    _frexp->___fleq
    _eval_poly->___fladd
    ___fldiv->___flmul
    _printf->___fladd
    _scale->___flmul
    ___awdiv->___awmod
    _putch->_UART2_Write
    _fround->___flmul
    ___lwdiv->___lwmod
    ___flmul->_frexp
    ___xxtofl->___fltol
    ___llmod->___lldiv
    ___fltol->___awdiv
    ___flsub->___fladd
    ___fladd->_fround
    ___fleq->___xxtofl
    _SYSTEM_Initialize->_TMR0_Initialize
    _UART2_Initialize->_UART2_SetErrorHandler
    _UART2_Initialize->_UART2_SetFramingErrorHandler
    _UART2_Initialize->_UART2_SetOverrunErrorHandler

Critical Paths under _main in BANK0

    _main->_pow
    _pow->_exp
    _log->_eval_poly
    _exp->_ldexp
    _ldexp->_eval_poly
    _floor->___fladd
    _eval_poly->___fladd
    _clearPuTTY->_printf
    _printf->___flsub
    ___flsub->___fladd
    ___fladd->_fround

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                30    30      0  149302
                                             73 BANK0     28    28      0
                  _SYSTEM_Initialize
                     _TMR0_ReadTimer
                    _TMR0_WriteTimer
                            ___fldiv
                            ___flmul
                           ___xxtofl
                         _clearPuTTY
             _poll_switch1_for_edges
                                _pow
                             _printf
 ---------------------------------------------------------------------------------
 (1) _pow                                                 21    13      8   67088
                                             52 BANK0     21    13      8
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___fltol
                           ___xxtofl
                                _exp
                                _log
 ---------------------------------------------------------------------------------
 (2) _log                                                  6     2      4   21908
                                             33 BANK0      6     2      4
                            ___fladd
                             ___fleq
                            ___flmul
                           ___xxtofl
                          _eval_poly
                              _frexp
 ---------------------------------------------------------------------------------
 (2) _exp                                                 11     7      4   34763
                                             41 BANK0     11     7      4
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                           ___xxtofl
                          _eval_poly
                              _floor
                              _ldexp
                                _log (ARG)
 ---------------------------------------------------------------------------------
 (3) _ldexp                                                8     2      6    2262
                                             33 BANK0      8     2      6
                             ___fleq
                          _eval_poly (ARG)
 ---------------------------------------------------------------------------------
 (3) _floor                                               10     6      4    8524
                                             17 BANK0     10     6      4
                            ___fladd
                             ___flge
                            ___fltol
                           ___xxtofl
                              _frexp
 ---------------------------------------------------------------------------------
 (3) _frexp                                                8     2      6    2390
                                             50 COMRAM     8     2      6
                             ___fleq
 ---------------------------------------------------------------------------------
 (3) _eval_poly                                           16     8      8    8566
                                             17 BANK0     16     8      8
                            ___fladd
                            ___flmul
 ---------------------------------------------------------------------------------
 (3) ___fldiv                                             25    17      8    1551
                                             83 COMRAM    12     4      8
                                              0 BANK0     13    13      0
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _poll_switch1_for_edges                               4     2      2     145
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _clearPuTTY                                           0     0      0   37019
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                              45    35     10   37019
                                             25 BANK0     37    27     10
                            ___awdiv
                            ___fladd
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                            ___lldiv
                            ___llmod
                             ___wmul
                           ___xxtofl
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                              _putch
                              _scale
 ---------------------------------------------------------------------------------
 (2) _scale                                                9     5      4    7925
                                             83 COMRAM     9     5      4
                            ___awdiv
                            ___awmod
                            ___flmul
                            ___fltol (ARG)
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              6     2      4    1208
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4    1364
                                              6 COMRAM     8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) _putch                                                1     1      0      44
                                              1 COMRAM     1     1      0
                        _UART2_Write
 ---------------------------------------------------------------------------------
 (3) _UART2_Write                                          1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _fround                                              13     9      4    6388
                                             83 COMRAM     4     0      4
                                              0 BANK0      9     9      0
                            ___flmul
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              5     1      4     615
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     618
                                              5 COMRAM     7     3      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             25    17      8    4910
                                             58 COMRAM    25    17      8
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___fltol (ARG)
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
                           ___xxtofl (ARG)
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (2) __tdiv_to_l_                                         17     9      8     455
                                              0 COMRAM    17     9      8
 ---------------------------------------------------------------------------------
 (2) __div_to_l_                                          14     6      8     455
                                              0 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     854
                                             24 COMRAM    14    10      4
                            ___fltol (ARG)
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     311
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___llmod                                              9     1      8     767
                                             13 COMRAM     9     1      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8     618
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             10     6      4     685
                                             14 COMRAM    10     6      4
                            ___awdiv (ARG)
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flsub                                              8     0      8    3497
                                             17 BANK0      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             16     8      8    3022
                                             87 COMRAM     8     0      8
                                              9 BANK0      8     8      0
                            ___flmul (ARG)
                           ___xxtofl (ARG)
                              _frexp (ARG)
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flneg                                              4     0      4     349
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8    1246
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (2) ___fleq                                              12     4      8    1862
                                             38 COMRAM    12     4      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _TMR0_WriteTimer                                      2     0      2     120
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _TMR0_ReadTimer                                       8     6      2      69
                                              0 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     294
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _TMR0_Initialize
                   _UART2_Initialize
 ---------------------------------------------------------------------------------
 (2) _UART2_Initialize                                     0     0      0     294
              _UART2_SetErrorHandler
       _UART2_SetFramingErrorHandler
       _UART2_SetOverrunErrorHandler
 ---------------------------------------------------------------------------------
 (3) _UART2_SetOverrunErrorHandler                         2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _UART2_SetFramingErrorHandler                         2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _UART2_SetErrorHandler                                2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _TMR0_Initialize
     _UART2_Initialize
       _UART2_SetErrorHandler
       _UART2_SetFramingErrorHandler
       _UART2_SetOverrunErrorHandler
   _TMR0_ReadTimer
   _TMR0_WriteTimer
   ___fldiv
     ___flmul (ARG)
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___fltol (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
       ___lwdiv (ARG)
         ___lwmod (ARG)
       ___lwmod (ARG)
       ___xxtofl (ARG)
         ___fltol (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       _frexp (ARG)
         ___fleq
           ___xxtofl (ARG)
             ___fltol (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
     ___xxtofl (ARG)
       ___fltol (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
   ___flmul
     ___awdiv (ARG)
       ___awmod (ARG)
     ___awmod (ARG)
     ___fltol (ARG)
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
     ___lwdiv (ARG)
       ___lwmod (ARG)
     ___lwmod (ARG)
     ___xxtofl (ARG)
       ___fltol (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
     _frexp (ARG)
       ___fleq
         ___xxtofl (ARG)
           ___fltol (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
   ___xxtofl
     ___fltol (ARG)
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
   _clearPuTTY
     _printf
       ___awdiv
         ___awmod (ARG)
       ___fladd
         ___flmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fltol (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
             ___fltol (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           _frexp (ARG)
             ___fleq
               ___xxtofl (ARG)
                 ___fltol (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
         ___xxtofl (ARG)
           ___fltol (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         _frexp (ARG)
           ___fleq
             ___xxtofl (ARG)
               ___fltol (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
         _fround (ARG)
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fltol (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
             ___xxtofl (ARG)
               ___fltol (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             _frexp (ARG)
               ___fleq
                 ___xxtofl (ARG)
                   ___fltol (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
           ___lwdiv
             ___lwmod (ARG)
           ___lwmod
       ___fleq
         ___xxtofl (ARG)
           ___fltol (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___flge
       ___flmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___fltol (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
           ___fltol (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         _frexp (ARG)
           ___fleq
             ___xxtofl (ARG)
               ___fltol (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
       ___flneg
       ___flsub
         ___fladd
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fltol (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
             ___xxtofl (ARG)
               ___fltol (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             _frexp (ARG)
               ___fleq
                 ___xxtofl (ARG)
                   ___fltol (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
           ___xxtofl (ARG)
             ___fltol (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           _frexp (ARG)
             ___fleq
               ___xxtofl (ARG)
                 ___fltol (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
           _fround (ARG)
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fltol (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
               ___xxtofl (ARG)
                 ___fltol (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               _frexp (ARG)
                 ___fleq
                   ___xxtofl (ARG)
                     ___fltol (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
             ___lwdiv
               ___lwmod (ARG)
             ___lwmod
         ___xxtofl (ARG)
           ___fltol (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___fltol
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
       ___lldiv
       ___llmod
         ___lldiv (ARG)
       ___wmul
       ___xxtofl
         ___fltol (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       __div_to_l_
       __tdiv_to_l_
       _fround
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fltol (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
             ___fltol (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           _frexp (ARG)
             ___fleq
               ___xxtofl (ARG)
                 ___fltol (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
         ___lwdiv
           ___lwmod (ARG)
         ___lwmod
       _putch
         _UART2_Write
       _scale
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fltol (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
             ___fltol (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           _frexp (ARG)
             ___fleq
               ___xxtofl (ARG)
                 ___fltol (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
         ___fltol (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
   _poll_switch1_for_edges
   _pow
     ___fleq
       ___xxtofl (ARG)
         ___fltol (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
     ___flge
     ___flmul
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___fltol (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
       ___lwdiv (ARG)
         ___lwmod (ARG)
       ___lwmod (ARG)
       ___xxtofl (ARG)
         ___fltol (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       _frexp (ARG)
         ___fleq
           ___xxtofl (ARG)
             ___fltol (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
     ___flneg
     ___fltol
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
     ___xxtofl
       ___fltol (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
     _exp
       ___fldiv
         ___flmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fltol (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
             ___fltol (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           _frexp (ARG)
             ___fleq
               ___xxtofl (ARG)
                 ___fltol (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
         ___xxtofl (ARG)
           ___fltol (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___fleq
         ___xxtofl (ARG)
           ___fltol (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___flge
       ___flmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___fltol (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
           ___fltol (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         _frexp (ARG)
           ___fleq
             ___xxtofl (ARG)
               ___fltol (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
       ___flneg
       ___flsub
         ___fladd
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fltol (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
             ___xxtofl (ARG)
               ___fltol (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             _frexp (ARG)
               ___fleq
                 ___xxtofl (ARG)
                   ___fltol (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
           ___xxtofl (ARG)
             ___fltol (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           _frexp (ARG)
             ___fleq
               ___xxtofl (ARG)
                 ___fltol (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
           _fround (ARG)
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fltol (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
               ___xxtofl (ARG)
                 ___fltol (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               _frexp (ARG)
                 ___fleq
                   ___xxtofl (ARG)
                     ___fltol (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
             ___lwdiv
               ___lwmod (ARG)
             ___lwmod
         ___xxtofl (ARG)
           ___fltol (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___fltol
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
       ___xxtofl
         ___fltol (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       _eval_poly
         ___fladd
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fltol (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
             ___xxtofl (ARG)
               ___fltol (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             _frexp (ARG)
               ___fleq
                 ___xxtofl (ARG)
                   ___fltol (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
           ___xxtofl (ARG)
             ___fltol (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           _frexp (ARG)
             ___fleq
               ___xxtofl (ARG)
                 ___fltol (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
           _fround (ARG)
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fltol (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
               ___xxtofl (ARG)
                 ___fltol (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               _frexp (ARG)
                 ___fleq
                   ___xxtofl (ARG)
                     ___fltol (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
             ___lwdiv
               ___lwmod (ARG)
             ___lwmod
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fltol (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
             ___fltol (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           _frexp (ARG)
             ___fleq
               ___xxtofl (ARG)
                 ___fltol (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
       _floor
         ___fladd
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fltol (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
             ___xxtofl (ARG)
               ___fltol (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             _frexp (ARG)
               ___fleq
                 ___xxtofl (ARG)
                   ___fltol (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
           ___xxtofl (ARG)
             ___fltol (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           _frexp (ARG)
             ___fleq
               ___xxtofl (ARG)
                 ___fltol (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
           _fround (ARG)
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fltol (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
               ___xxtofl (ARG)
                 ___fltol (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               _frexp (ARG)
                 ___fleq
                   ___xxtofl (ARG)
                     ___fltol (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
             ___lwdiv
               ___lwmod (ARG)
             ___lwmod
         ___flge
         ___fltol
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         ___xxtofl
           ___fltol (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         _frexp
           ___fleq
             ___xxtofl (ARG)
               ___fltol (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
       _ldexp
         ___fleq
           ___xxtofl (ARG)
             ___fltol (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         _eval_poly (ARG)
           ___fladd
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fltol (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
               ___xxtofl (ARG)
                 ___fltol (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               _frexp (ARG)
                 ___fleq
                   ___xxtofl (ARG)
                     ___fltol (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
             ___xxtofl (ARG)
               ___fltol (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             _frexp (ARG)
               ___fleq
                 ___xxtofl (ARG)
                   ___fltol (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
             _fround (ARG)
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___fltol (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
                 ___xxtofl (ARG)
                   ___fltol (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 _frexp (ARG)
                   ___fleq
                     ___xxtofl (ARG)
                       ___fltol (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
               ___lwdiv
                 ___lwmod (ARG)
               ___lwmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fltol (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
             ___xxtofl (ARG)
               ___fltol (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             _frexp (ARG)
               ___fleq
                 ___xxtofl (ARG)
                   ___fltol (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
       _log (ARG)
         ___fladd
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fltol (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
             ___xxtofl (ARG)
               ___fltol (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             _frexp (ARG)
               ___fleq
                 ___xxtofl (ARG)
                   ___fltol (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
           ___xxtofl (ARG)
             ___fltol (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           _frexp (ARG)
             ___fleq
               ___xxtofl (ARG)
                 ___fltol (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
           _fround (ARG)
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fltol (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
               ___xxtofl (ARG)
                 ___fltol (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               _frexp (ARG)
                 ___fleq
                   ___xxtofl (ARG)
                     ___fltol (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
             ___lwdiv
               ___lwmod (ARG)
             ___lwmod
         ___fleq
           ___xxtofl (ARG)
             ___fltol (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fltol (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
             ___fltol (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           _frexp (ARG)
             ___fleq
               ___xxtofl (ARG)
                 ___fltol (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
         ___xxtofl
           ___fltol (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         _eval_poly
           ___fladd
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fltol (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
               ___xxtofl (ARG)
                 ___fltol (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               _frexp (ARG)
                 ___fleq
                   ___xxtofl (ARG)
                     ___fltol (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
             ___xxtofl (ARG)
               ___fltol (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             _frexp (ARG)
               ___fleq
                 ___xxtofl (ARG)
                   ___fltol (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
             _fround (ARG)
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___fltol (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
                 ___xxtofl (ARG)
                   ___fltol (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 _frexp (ARG)
                   ___fleq
                     ___xxtofl (ARG)
                       ___fltol (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
               ___lwdiv
                 ___lwmod (ARG)
               ___lwmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fltol (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
             ___xxtofl (ARG)
               ___fltol (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             _frexp (ARG)
               ___fleq
                 ___xxtofl (ARG)
                   ___fltol (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
         _frexp
           ___fleq
             ___xxtofl (ARG)
               ___fltol (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
     _log
       ___fladd
         ___flmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fltol (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
             ___fltol (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           _frexp (ARG)
             ___fleq
               ___xxtofl (ARG)
                 ___fltol (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
         ___xxtofl (ARG)
           ___fltol (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         _frexp (ARG)
           ___fleq
             ___xxtofl (ARG)
               ___fltol (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
         _fround (ARG)
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fltol (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
             ___xxtofl (ARG)
               ___fltol (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             _frexp (ARG)
               ___fleq
                 ___xxtofl (ARG)
                   ___fltol (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
           ___lwdiv
             ___lwmod (ARG)
           ___lwmod
       ___fleq
         ___xxtofl (ARG)
           ___fltol (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___flmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___fltol (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
           ___fltol (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         _frexp (ARG)
           ___fleq
             ___xxtofl (ARG)
               ___fltol (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
       ___xxtofl
         ___fltol (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       _eval_poly
         ___fladd
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fltol (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
             ___xxtofl (ARG)
               ___fltol (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             _frexp (ARG)
               ___fleq
                 ___xxtofl (ARG)
                   ___fltol (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
           ___xxtofl (ARG)
             ___fltol (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           _frexp (ARG)
             ___fleq
               ___xxtofl (ARG)
                 ___fltol (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
           _fround (ARG)
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fltol (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
               ___xxtofl (ARG)
                 ___fltol (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               _frexp (ARG)
                 ___fleq
                   ___xxtofl (ARG)
                     ___fltol (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
             ___lwdiv
               ___lwmod (ARG)
             ___lwmod
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fltol (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
             ___fltol (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           _frexp (ARG)
             ___fleq
               ___xxtofl (ARG)
                 ___fltol (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
       _frexp
         ___fleq
           ___xxtofl (ARG)
             ___fltol (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
   _printf
     ___awdiv
       ___awmod (ARG)
     ___fladd
       ___flmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___fltol (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
           ___fltol (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         _frexp (ARG)
           ___fleq
             ___xxtofl (ARG)
               ___fltol (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
       ___xxtofl (ARG)
         ___fltol (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       _frexp (ARG)
         ___fleq
           ___xxtofl (ARG)
             ___fltol (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
       _fround (ARG)
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fltol (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
             ___fltol (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           _frexp (ARG)
             ___fleq
               ___xxtofl (ARG)
                 ___fltol (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
         ___lwdiv
           ___lwmod (ARG)
         ___lwmod
     ___fleq
       ___xxtofl (ARG)
         ___fltol (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
     ___flge
     ___flmul
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___fltol (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
       ___lwdiv (ARG)
         ___lwmod (ARG)
       ___lwmod (ARG)
       ___xxtofl (ARG)
         ___fltol (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       _frexp (ARG)
         ___fleq
           ___xxtofl (ARG)
             ___fltol (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
     ___flneg
     ___flsub
       ___fladd
         ___flmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fltol (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
             ___fltol (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           _frexp (ARG)
             ___fleq
               ___xxtofl (ARG)
                 ___fltol (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
         ___xxtofl (ARG)
           ___fltol (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         _frexp (ARG)
           ___fleq
             ___xxtofl (ARG)
               ___fltol (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
         _fround (ARG)
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fltol (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
             ___xxtofl (ARG)
               ___fltol (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             _frexp (ARG)
               ___fleq
                 ___xxtofl (ARG)
                   ___fltol (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
           ___lwdiv
             ___lwmod (ARG)
           ___lwmod
       ___xxtofl (ARG)
         ___fltol (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
     ___fltol
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
     ___lldiv
     ___llmod
       ___lldiv (ARG)
     ___wmul
     ___xxtofl
       ___fltol (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
     __div_to_l_
     __tdiv_to_l_
     _fround
       ___flmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___fltol (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
           ___fltol (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         _frexp (ARG)
           ___fleq
             ___xxtofl (ARG)
               ___fltol (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
       ___lwdiv
         ___lwmod (ARG)
       ___lwmod
     _putch
       _UART2_Write
     _scale
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___flmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___fltol (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
           ___fltol (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         _frexp (ARG)
           ___fleq
             ___xxtofl (ARG)
               ___fltol (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
       ___fltol (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             FFF      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK15          100      0       0      30        0.0%
BANK15             100      0       0      31        0.0%
BITBANK14          100      0       0      28        0.0%
BANK14             100      0       0      29        0.0%
BITBANK13          100      0       0      36        0.0%
BANK13             100      0       0      27        0.0%
BITBANK12          100      0       0      35        0.0%
BANK12             100      0       0      26        0.0%
BITBANK11          100      0       0      34        0.0%
BANK11             100      0       0      25        0.0%
BITBANK10          100      0       0      33        0.0%
BANK10             100      0       0      24        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     65      72       5       71.2%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5F      5F       1      100.0%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      D1      32        0.0%
DATA                 0      0      D1       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.30 build 20200825195618 
Symbol Table                                                                                   Thu Dec 03 16:09:19 2020

                                ___fldiv@aexp 006C                                  ___fldiv@bexp 006B  
                                ___fldiv@sign 0064                                            l17 C68C  
                                          l26 C60E                                            l29 C592  
                                ___awdiv@sign 000C                           ___wmul@multiplicand 0003  
                                         l124 CA62                                           l331 DA4A  
                                         l172 C632                                           l421 FB36  
                                         l246 C76A                                           l166 C5BA  
                                         l342 C8BE                                           l272 C5D6  
                                         l169 C5D2                                           l441 C65C  
                                         l281 C586                                           l275 C5EC  
                                         l347 C942                                           l293 C572  
                                         l374 F07E                                           l438 FE74  
                                         l367 E3E0                                           l296 C57C  
                                         l720 CF00                                           l704 D4DC  
                                         l713 CBB0                                           l299 C568  
                                         l475 CB06                                           l724 C6C4  
                                         l468 CAF6                                           l804 D642  
                                         l813 D632                                           l806 D588  
                                         l719 CEBA                                           l807 D5BA  
                                         l672 CD24                                           l747 D006  
                                         l685 CC60                                           l695 D4EC  
                                         l961 C842                                           l890 C9CA  
                                         l954 C83A                                           l883 C9BA  
                                         l971 C7CE                                           l964 C7C6  
                                         l991 F270                                           l992 F25E  
                                         l993 F224                                           _exp DE00  
                                         _log D644                                           _pow DBA0  
                     __size_of_PMD_Initialize 0024                                  ___awmod@sign 0006  
                                         wreg 003FE8                                  ___flmul@aexp 004C  
                                ___flmul@bexp 004D                                  ___flmul@sign 0047  
                                ___flmul@temp 0052                                  ___flmul@prod 004E  
                                ___fltol@exp1 0018                                          l1000 F540  
                                        l1008 F38A                                          l1017 F45A  
                                        l1033 C70C                                          l1121 D994  
                                        l1018 F448                                          l1050 E5A0  
                                        l1132 D92C                                          l1125 D8D0  
                                        l1045 E77C                                          l1213 D7E0  
                                        l1118 D838                                          l1047 E5DC  
                                        l1056 E622                                          l1144 DC14  
                                        l3001 F1F0                                          l1081 EBCA  
                                        l1145 DDFE                                          l1058 E69A  
                                        l3011 F242                                          l3003 F20C  
                                        l1059 E688                                          l1084 EA5C  
                                        l3101 F4E0                                          l3021 F28E  
                                        l3013 F250                                          l3005 F21C  
                                        l1077 E842                                          l1165 E0E6  
                                        l1149 DDEE                                          l1094 EB8C  
                                        l1086 EAD4                                          l3111 F51A  
                                        l3103 F500                                          l3031 F2CE  
                                        l3015 F252                                          l3007 F232  
                                        l1087 EAC2                                          l1175 D116  
                                        l1191 CDFC                                          l1183 D3A0  
                                        l1176 D126                                          l3113 F520  
                                        l3105 F504                                          l3041 F2F8  
                                        l3033 F2DA                                          l3025 F2A2  
                                        l3017 F25C                                          l3009 F23E  
                                        l3201 EA24                                          l3121 E77E  
                                        l4001 F57E                                          l1185 D390  
                                        l1169 E0D6                                          l3115 F52E  
                                        l3107 F512                                          l3051 F36A  
                                        l3035 F2DE                                          l3027 F2B2  
                                        l3019 F27E                                          l3043 F2FE  
                                        l3211 EA7A                                          l3203 EA42  
                                        l3131 E7BA                                          l3123 E78A  
                                        l4003 F58E                                          l4011 F5A8  
                                        l1195 D25E                                          l3117 F530  
                                        l3109 F518                                          l3061 F3C4  
                                        l3045 F324                                          l3053 F37A  
                                        l3037 F2EC                                          l3029 F2C0  
                                        l3221 EAE4                                          l3213 EA7E  
                                        l3205 EA4C                                          l3141 E7EC  
                                        l3133 E7CA                                          l3125 E798  
                                        l3301 CBCC                                          l4101 FA30  
                                        l4021 F62E                                          l4005 F596  
                                        l4013 F5E8                                          l3071 F3F4  
                                        l3063 F3CE                                          l3055 F3A0  
                                        l3047 F358                                          l3039 F2EE  
                                        l3231 EB46                                          l3223 EAF0  
                                        l3215 EA8C                                          l3207 EA5A  
                                        l3151 E82C                                          l3143 E7FA  
                                        l3135 E7D0                                          l3127 E79A  
                                        l3311 CC00                                          l3303 CBD0  
                                        l4111 FAEA                                          l4103 FA3A  
                                        l4031 F6A0                                          l4023 F63C  
                                        l4015 F5FA                                          l4007 F5A0  
                                        l3081 F41C                                          l3073 F3F8  
                                        l3065 F3DC                                          l3057 F3B0  
                                        l3049 F35A                                          l3241 EBAE  
                                        l3233 EB5A                                          l3225 EAFE  
                                        l3217 EABA                                          l3209 EA6C  
                                        l3161 E876                                          l3153 E832  
                                        l3145 E7FC                                          l3137 E7E0  
                                        l3129 E7AA                                          l3401 C7EA  
                                        l3321 CC3A                                          l3313 CC08  
                                        l3305 CBDE                                          l4121 FB3A  
                                        l4113 FAF0                                          l4105 FA94  
                                        l4041 F6FE                                          l4033 F6B0  
                                        l4025 F660                                          l4017 F602  
                                        l4201 DE32                                          l3331 CDFE  
                                        l3091 F476                                          l3083 F42A  
                                        l3075 F408                                          l3067 F3DE  
                                        l3243 EBB0                                          l3235 EB74  
                                        l3227 EB28                                          l3171 E8D2  
                                        l3163 E886                                          l3155 E852  
                                        l3147 E80C                                          l3139 E7E6  
                                        l3411 C824                                          l3403 C7F2  
                                        l3251 CC62                                          l3315 CC16  
                                        l3323 CC40                                          l3307 CBE6  
                                        l4131 FBBC                                          l4123 FB42  
                                        l4115 FAF8                                          l4107 FAC8  
                                        l4051 F78E                                          l4043 F704  
                                        l4035 F6B6                                          l4027 F666  
                                        l4019 F626                                          l4211 DE98  
                                        l3501 C56A                                          l3341 CE88  
                                        l3333 CE2C                                          l3093 F484  
                                        l3085 F440                                          l3069 F3EC  
                                        l3077 F40A                                          l3237 EB90  
                                        l3245 EBB6                                          l3229 EB2C  
                                        l3181 E918                                          l3173 E8DE  
                                        l3165 E890                                          l3157 E862  
                                        l3149 E81C                                          l3413 C82C  
                                        l3405 C7FA                                          l3421 C77E  
                                        l3261 CC8E                                          l3253 CC66  
                                        l3325 CC50                                          l3317 CC2C  
                                        l3309 CBF8                                          l4141 FCCE  
                                        l4133 FC16                                          l4125 FB52  
                                        l4117 FB12                                          l4109 FAD2  
                                        l4061 F81E                                          l4053 F7C0  
                                        l4045 F71C                                          l4037 F6D2  
                                        l4029 F66E                                          l4301 C8A6  
                                        l4221 DF0E                                          l4213 DECA  
                                        l4205 DE48                                          l3503 C574  
                                        l3343 CE9A                                          l3335 CE3C  
                                        l3095 F4BE                                          l3079 F418  
                                        l3247 EBBA                                          l3239 EBA0  
                                        l3191 E986                                          l3183 E928  
                                        l3175 E8EA                                          l3167 E8AA  
                                        l3415 C82E                                          l3407 C808  
                                        l3431 C7BA                                          l3423 C786  
                                        l3511 E0FE                                          l3271 CCBC  
                                        l3263 CC96                                          l3255 CC74  
                                        l3327 CC58                                          l3319 CC34  
                                        l4143 FCD6                                          l4135 FC4A  
                                        l4127 FB58                                          l4119 FB2E  
                                        l4071 F8D8                                          l4063 F850  
                                        l4047 F750                                          l4039 F6EE  
                                        l4055 F7C6                                          l4303 C8B6  
                                        l4231 DFF2                                          l4223 DF32  
                                        l4207 DE7A                                          l4311 DBD8  
                                        l3505 C560                                          l3345 CEA8  
                                        l3337 CE6A                                          l3089 F46A  
                                        l3097 F4C0                                          l3361 CF56  
                                        l3353 CF02                                          l3441 D848  
                                        l3601 D5D6                                          l3193 E996  
                                        l3185 E938                                          l3177 E8F8  
                                        l3169 E8B6                                          l3417 C834  
                                        l3409 C80E                                          l3433 C7C0  
                                        l3425 C78E                                          l3281 CCF6  
                                        l3273 CCC4                                          l3265 CC9A  
                                        l3257 CC7C                                          l4161 FD5E  
                                        l4137 FCB0                                          l4129 FB70  
                                        l4073 F8E2                                          l4065 F87A  
                                        l4081 F942                                          l4057 F7C6  
                                        l4049 F782                                          l4145 FCEC  
                                        l4241 E09E                                          l4233 E044  
                                        l4225 DF66                                          l4217 DEE8  
                                        l4313 DC0A                                          l4401 DB5A  
                                        l3347 CEF8                                          l3339 CE7A  
                                        l3099 F4D0                                          l3363 CF58  
                                        l3355 CF18                                          l3451 D886  
                                        l3443 D85E                                          l3435 D7E4  
                                        l3611 D602                                          l3195 E9B6  
                                        l3187 E956                                          l3179 E908  
                                        l3427 C79C                                          l3419 C76C  
                                        l3523 E386                                          l3507 C580  
                                        l3291 CD1C                                          l3283 CCF8  
                                        l3275 CCD2                                          l3267 CCA2  
                                        l3259 CC80                                          l3531 EBF2  
                                        l4171 FE26                                          l4163 FD70  
                                        l4155 FD1C                                          l4147 FD10  
                                        l4139 FCC8                                          l4091 F9BE  
                                        l4083 F9B0                                          l4075 F8F8  
                                        l4067 F898                                          l4059 F800  
                                        l4235 E056                                          l4227 DF8A  
                                        l4219 DEFE                                          l4331 DD0C  
                                        l4323 DC72                                          l4307 DBA0  
                                        l4403 DB74                                          l4261 C5B6  
                                        l4245 C5EE                                          l4253 C588  
                                        l2901 CB36                                          l3349 CEFE  
                                        l3365 CF68                                          l3701 CAD4  
                                        l3461 D90E                                          l3453 D8B8  
                                        l3437 D7F4                                          l3621 D3A2  
                                        l3197 E9E0                                          l3189 E966  
                                        l3429 C7B2                                          l3517 E282  
                                        l3509 E0EC                                          l3285 CCFE  
                                        l3277 CCD8                                          l3269 CCB4  
                                        l4173 FE2C                                          l4165 FD8E  
                                        l4149 FD18                                          l4085 F9BA  
                                        l4069 F8CA                                          l4237 E088  
                                        l4229 DFA6                                          l4341 DDB4  
                                        l4333 DD14                                          l4325 DC82  
                                        l4317 DC2A                                          l4309 DBA6  
                                        l4247 C5FA                                          l4255 C58C  
                                        l2911 CBAE                                          l2903 CB46  
                                        l3391 CFE6                                          l3375 CF92  
                                        l3367 CF6C                                          l3359 CF2C  
                                        l3703 CAE4                                          l3471 D964  
                                        l3463 D91C                                          l3455 D8BA  
                                        l3447 D872                                          l3439 D802  
                                        l3623 D3B8                                          l3607 D5EE  
                                        l3199 EA16                                          l3519 E292  
                                        l3279 CCEE                                          l3287 CD04  
                                        l3295 CBB2                                          l3543 EDF6  
                                        l3527 EBCE                                          l4167 FD94  
                                        l4159 FD5C                                          l4095 F9FE  
                                        l4079 F92C                                          l4175 FE48  
                                        l3711 E3F0                                          l4191 D734  
                                        l4183 D670                                          l4343 DDC6  
                                        l4327 DCEE                                          l4335 DD38  
                                        l4319 DC5C                                          l4257 C5A6  
                                        l4249 C606                                          l2905 CB74  
                                        l2921 F08E                                          l3393 CFF6  
                                        l3385 CFBA                                          l3377 CF9C  
                                        l3369 CF7A                                          l3705 CAE6  
                                        l3473 D974                                          l3465 D93A  
                                        l3457 D8C6                                          l3449 D87A  
                                        l3641 D41A                                          l3633 D3E6  
                                        l3617 D616                                          l3609 D5F8  
                                        l3289 CD14                                          l3297 CBB6  
                                        l3561 F048                                          l3537 ED2E  
                                        l3529 EBDC                                          l4169 FDA0  
                                        l4097 FA00                                          l3801 E620  
                                        l3721 E430                                          l3713 E3FE  
                                        l3481 CD26                                          l4193 D73C  
                                        l4185 D6A2                                          l4177 D644  
                                        l4337 DD5C                                          l4361 D99A  
                                        l4259 C5B2                                          l2907 CB84  
                                        l2931 F0CE                                          l2923 F09C  
                                        l3387 CFC6                                          l3379 CFA6  
                                        l3707 CAF0                                          l3475 D982  
                                        l3467 D93C                                          l3459 D902  
                                        l3651 D450                                          l3643 D41E  
                                        l3635 D3E8                                          l3627 D3CC  
                                        l3619 D622                                          l3571 D526  
                                        l2915 C5D6                                          l3299 CBC4  
                                        l3555 EF80                                          l3539 ED42  
                                        l3547 EE30                                          l4099 FA12  
                                        l4291 C84C                                          l3811 E680  
                                        l3803 E632                                          l3731 E456  
                                        l3723 E432                                          l3715 E400  
                                        l3491 CDCE                                          l3483 CD58  
                                        l4195 D770                                          l4179 D654  
                                        l4339 DD90                                          l4371 D9AC  
                                        l4363 D99A                                          l4355 D996  
                                        l2909 CBA8                                          l2941 F100  
                                        l2933 F0D0                                          l2925 F09E  
                                        l3389 CFD6                                          l3477 D984  
                                        l3469 D940                                          l3661 D480  
                                        l3653 D460                                          l3645 D424  
                                        l3637 D3F8                                          l3581 D55E  
                                        l3565 D4EE                                          l3397 C7D0  
                                        l2917 C5E6                                          l3557 EF94  
                                        l3549 EE44                                          l4293 C860  
                                        l3821 E6EE                                          l3805 E640  
                                        l3741 E496                                          l3733 E464  
                                        l3717 E410                                          l3725 E43A  
                                        l3709 E3E2                                          l3901 D008  
                                        l3493 CDE2                                          l3485 CD6C  
                                        l4189 D6C0                                          l4381 DA24  
                                        l4373 D9BA                                          l4365 D99A  
                                        l4357 D99A                                          l2951 F128  
                                        l2943 F102                                          l2927 F0AE  
                                        l2935 F0D8                                          l2919 F080  
                                        l3671 D4AC                                          l3655 D462  
                                        l3647 D428                                          l3639 D40A  
                                        l3591 D592                                          l3583 D56A  
                                        l3567 D512                                          l3399 C7D8  
                                        l4287 C8C0                                          l4295 C872  
                                        l3831 E758                                          l3815 E6AA  
                                        l3823 E6F2                                          l3807 E644  
                                        l3751 E4D6                                          l3743 E498  
                                        l3735 E466                                          l3727 E44A  
                                        l3719 E420                                          l3903 D060  
                                        l3495 CDEA                                          l4199 DE00  
                                        l4391 DA58                                          l4383 DA30  
                                        l4375 D9E0                                          l4367 D99A  
                                        l4359 D99A                                          l2961 F162  
                                        l2953 F138                                          l2945 F108  
                                        l2937 F0E8                                          l2929 F0BE  
                                        l3681 C634                                          l3657 D46C  
                                        l3649 D432                                          l3593 D5AC  
                                        l3585 D57A                                          l3577 D54E  
                                        l4297 C882                                          l4289 C844  
                                        l3833 E75C                                          l3825 E70C  
                                        l3817 E6B6                                          l3809 E652  
                                        l3761 E506                                          l3753 E4DE  
                                        l3737 E476                                          l3745 E4A0  
                                        l3729 E450                                          l3905 D102  
                                        l3497 CDEC                                          l3489 CD80  
                                        l3921 D1D0                                          l3913 D170  
                                        l4393 DA64                                          l4385 DA34  
                                        l4377 DA08                                          l4369 D9A8  
                                        l2971 F18E                                          l2963 F174  
                                        l2955 F148                                          l2947 F116  
                                        l2939 F0EE                                          l3691 CA8A  
                                        l3683 C654                                          l3667 D498  
                                        l3659 D472                                          l3595 D5B8  
                                        l3587 D57E                                          l3579 D550  
                                        l4299 C894                                          l3835 E76A  
                                        l3827 E722                                          l3819 E6C4  
                                        l3771 E544                                          l3763 E506  
                                        l3755 E4E2                                          l3747 E4B0  
                                        l3739 E486                                          l3923 D1E6  
                                        l3915 D1B4                                          l3907 D128  
                                        l4395 DA86                                          l4379 DA18  
                                        l4387 DA36                                          l3853 C68E  
                                        l2981 F1A2                                          l2973 F192  
                                        l2965 F182                                          l2957 F14A  
                                        l2949 F118                                          l3693 CA92  
                                        l3861 C944                                          l3677 D4C0  
                                        l3669 D4A2                                          l3597 D5C2  
                                        l3589 D584                                          l3837 E770  
                                        l3829 E73C                                          l3781 E590  
                                        l3773 E554                                          l3749 E4C6  
                                        l3933 D210                                          l3925 D1EE  
                                        l3909 D15A                                          l4397 DABC  
                                        l4389 DA4C                                          l3951 C9CC  
                                        l3943 C65E                                          l3855 C6A4  
                                        l2991 F1B6                                          l2983 F1A6  
                                        l2975 F196                                          l2967 F186  
                                        l2959 F152                                          l3847 C6C6  
                                        l3695 CA9E                                          l3687 CA64  
                                        l3871 C99A                                          l3863 C95A  
                                        l3679 D4CC                                          l3599 D5C8  
                                        l3839 E772                                          l3791 E5DA  
                                        l3783 E59E                                          l3775 E564  
                                        l3767 E51A                                          l3759 E4F6  
                                        l3927 D1FC                                          l4399 DB02  
                                        l3961 CA42                                          l3953 C9E4  
                                        l3945 C66A                                          l3857 C6B4  
                                        l2993 F1BA                                          l2985 F1AA  
                                        l2977 F19A                                          l2969 F18A  
                                        l3849 C6D8                                          l3697 CAAC  
                                        l3689 CA74                                          l3873 C9AA  
                                        l3865 C962                                          l3793 E5EC  
                                        l3785 E5AA                                          l3777 E56C  
                                        l3769 E534                                          l3881 D28C  
                                        l3937 D224                                          l3971 CA50  
                                        l3963 CA44                                          l3955 C9EA  
                                        l3947 C684                                          l2899 CB08  
                                        l2995 F1BE                                          l2987 F1AE  
                                        l2979 F19E                                          l3699 CAB6  
                                        l3875 C9B4                                          l3867 C96E  
                                        l3795 E602                                          l3787 E5C8  
                                        l3779 E57C                                          l3883 D29A  
                                        l3891 D2C2                                          l3939 D24E  
                                        ?_exp 0089                                          l3973 CA52  
                                        l3965 CA46                                          l3957 C9F6  
                                        l3949 C688                                          l3981 C70E  
                                        l2989 F1B2                                          l2997 F1C2  
                                        l3869 C97C                                          l3797 E608  
                                        l3789 E5CA                                          l3893 D2D8  
                                        l3877 D260                                          ?_log 0081  
                                        l3975 CA54                                          l3967 CA48  
                                        l3959 CA00                                          l3983 C740  
                                        l2999 F1C6                                          l3991 F542  
                                        l3799 E612                                          l3895 D2EC  
                                        l3887 D2AE                                          l3879 D27C  
                                        l3969 CA4E                                          l3977 C610  
                                        l3985 C74C                                          l3993 F550  
                                        l3897 D358                                          l3979 C5BC  
                                        l3987 C758                                          l3995 F562  
                                        l3989 C764                                          l3997 F56C  
                                        l3999 F578                                          ?_pow 0094  
                                        STR_1 FF8C                                          STR_2 FFB1  
                                        STR_3 FFDE                                          STR_4 FFC8  
                                        STR_5 FF53                                          STR_6 FFF2  
                                        STR_7 FFF2                                          STR_8 FFF4  
                                        u3000 CBDE                                          u3001 CBDA  
                                        u3010 CBF8                                          u3011 CBF4  
                                        u3100 CF18                                          u3020 CC16  
                                        u3101 CF14                                          u3021 CC12  
                                        _LATA 003FBA                                          u2310 CB36  
                                        u3110 CF4C                                          u3030 CC2C  
                                        _LATB 003FBB                                          u2311 CB32  
                                        u3031 CC28                                          _LATC 003FBC  
                                        u2320 CB74                                          u2400 F128  
                                        u3120 CF7A                                          u3200 C77E  
                                        u3040 CC50                                          u4000 F63C  
                                        _LATD 003FBD                                          u2321 CB70  
                                        u2401 F124                                          u3121 CF76  
                                        u3201 C77A                                          u3041 CC4C  
                                        u4001 F638                                          _LATE 003FBE  
                                        u2330 CBA8                                          u3050 CE2C  
                                        u2410 F138                                          u3130 CF8E  
                                        u3210 C79C                                          u4010 F6A0  
                                        u2331 CBA4                                          u3051 CE28  
                                        u2411 F134                                          u3131 CF8A  
                                        u3115 CF42                                          u3211 C798  
                                        u4011 F69C                                          u3060 CE6A  
                                        u2500 F27E                                          u2420 F174  
                                        u3140 CFB6                                          u3300 D93A  
                                        u3220 C7B2                                          u2340 C5E6  
                                        u4100 F9FA                                          u4020 F6FE  
                                        u3061 CE66                                          u2501 F27A  
                                        u2421 F170                                          u3141 CFB2  
                                        u3301 D936                                          u3221 C7AE  
                                        u2341 C5E2                                          u4101 F9F6  
                                        u4021 F6FA                                          u3070 CE88  
                                        u2510 F28E                                          u2430 F182  
                                        u2350 F09C                                          u3150 CFD6  
                                        u3310 D974                                          u3230 D7F4  
                                        u4110 FA12                                          u4030 F782  
                                        u3071 CE84                                          u2511 F28A  
                                        u2431 F17E                                          u2351 F098  
                                        u3151 CFD2                                          u3311 D970  
                                        u3231 D7F0                                          u4111 FA0E  
                                        u4031 F77E                                          u3080 CEA8  
                                        u2600 F3EC                                          u2520 F2C0  
                                        u2440 F1F0                                          u2360 F0AE  
                                        u3160 CFE6                                          u3320 D982  
                                        u3240 D802                                          u3400 EE44  
                                        u4200 FD70                                          u4120 FA30  
                                        u4040 F7C0                                          u3081 CEA4  
                                        u2601 F3E8                                          u2521 F2BC  
                                        u2441 F1EC                                          u2361 F0AA  
                                        u3161 CFE2                                          u3321 D97E  
                                        u3241 D7FE                                          u3401 EE40  
                                        u4201 FD6C                                          u4121 FA2C  
                                        u4041 F7BC                                          u3090 CEF8  
                                        u2610 F408                                          u2530 F2CE  
                                        u2450 F208                                          u2370 F0BE  
                                        u3250 D85E                                          u3170 C7EA  
                                        u3410 EF94                                          u4210 FD8E  
                                        u4130 FAE6                                          u4050 F81E  
                                        u3330 CD58                                          u3091 CEF4  
                                        u2611 F404                                          u2531 F2CA  
                                        u2451 F202                                          u2371 F0BA  
                                        u3251 D85A                                          u3171 C7E6  
                                        u3411 EF90                                          u4211 FD8A  
                                        u4131 FAE2                                          u4051 F81A  
                                        u3331 CD54                                          u2700 F4E0  
                                        u2620 F418                                          u2540 F2EC  
                                        u2460 F20A                                          u2380 F100  
                                        u3260 D8B4                                          u3500 D632  
                                        u3180 C808                                          u4220 FE48  
                                        u4140 FB12                                          u4060 F850  
                                        u3340 CDB8                                          u4300 DEFC  
                                        u2701 F4DC                                          u2621 F414  
                                        u2541 F2E8                                          u2381 F0FC  
                                        u3261 D8B0                                          u3501 D62E  
                                        u3421 D4FE                                          u3181 C804  
                                        u4221 FE44                                          u4141 FB0E  
                                        u4061 F84C                                          u3341 CDB0  
                                        u2710 F500                                          u2630 F42A  
                                        u2550 F324                                          u2470 F232  
                                        u2390 F116                                          u3270 D8FE  
                                        u3510 D3B8                                          u3430 D512  
                                        u3190 C824                                          u3350 E0FE  
                                        u4230 FE74                                          u4150 FB2E  
                                        u4070 F87A                                          u4310 DF0E  
                                        u2711 F4FC                                          u2631 F426  
                                        u2551 F320                                          u2471 F22E  
                                        u2391 F112                                          u3271 D8FA  
                                        u3511 D3B4                                          u3431 D50E  
                                        u3191 C820                                          u3351 E0FA  
                                        u4231 FE70                                          u4151 FB2A  
                                        u4071 F876                                          u4311 DF0A  
                                        u2720 F512                                          u2640 F440  
                                        u2560 F36A                                          u2480 F250  
                                        u3600 CAD4                                          u3280 D91C  
                                        u3520 D3E2                                          u2800 E852  
                                        u3360 E292                                          u4160 FB52  
                                        u4080 F898                                          u4320 E056  
                                        u4240 D654                                          u2721 F50E  
                                        u2641 F43C                                          u2561 F366  
                                        u2481 F24C                                          u3601 CAD0  
                                        u3281 D918                                          u3521 D3DE  
                                        u3441 D536                                          u2801 E84E  
                                        u3361 E28E                                          u4161 FB4E  
                                        u4081 F894                                          u4321 E052  
                                        u4241 D650                                          u2730 F52E  
                                        u2650 F456                                          u2570 F3A0  
                                        u2490 F270                                          u3290 D92C  
                                        u3530 D450                                          u3450 D54A  
                                        u2810 E862                                          u3370 EBDC  
                                        u4170 FCC4                                          u4090 F8CA  
                                        u4410 C860                                          u3610 E3FE  
                                        u4330 E088                                          u4250 D6A2  
                                        u2731 F52A                                          u2651 F452  
                                        u2571 F39C                                          u2491 F26C  
                                        u3291 D928                                          u3531 D44C  
                                        u3451 D546                                          u2811 E85E  
                                        u3371 EBD8                                          u4171 FCC0  
                                        u4091 F8C6                                          u4411 C85C  
                                        u3611 E3FA                                          u4331 E084  
                                        u4251 D69E                                  printf@tmpval 0095  
                                        u2660 F46A                                          u2580 F3B0  
                                        u3540 D480                                          u3460 D5AC  
                                        u2900 EB46                                          u2820 EA00  
                                        u2740 E798                                          u3380 EBF2  
                                        u4180 FCE8                                          u4420 C872  
                                        u3700 E59E                                          u3620 E410  
                                        u3348 CDBA                                          u4260 DE32  
                                        u4500 DDC6                                          u2661 F466  
                                        u2581 F3AC                                          u3541 D47C  
                                        u3461 D5A8                                          u2901 EB42  
                                        u2741 E794                                          u3381 EBEE  
                                        u4181 FCE4                                          u4421 C86E  
                                        u3701 E59A                                          u3621 E40C  
                                        u4261 DE2E                                          u4501 DDC2  
                                        u2670 F484                                          u2590 F3DC  
                                        u3550 D494                                          u3470 D5D6  
                                        u2910 EB74                                          u2830 EA5A  
                                        u2750 E7AA                                          u3390 ED42  
                                        u4190 FD58                                          u4430 C894  
                                        u3710 E5C8                                          u3630 E420  
                                        u4270 DE7A                                          u4510 D9F4  
                                        u2671 F480                                          u2591 F3D8  
                                        u3551 D490                                          u3471 D5D2  
                                        u2911 EB70                                          u2831 EA56  
                                        u2751 E7A6                                          u3391 ED3E  
                                        u4191 FD54                                          u4431 C890  
                                        u3711 E5C4                                          u3631 E41C  
                                        u4271 DE76                                          u4511 D9EA  
                                        u2680 F4BE                                          u3560 D4BC  
                                        u3480 D5EA                                          u2920 EBAE  
                                        u2840 EA7A                                          u2760 E7BA  
                                        u4440 C8A6                                          u3800 E6C4  
                                        u3720 E5EC                                          u3640 E464  
                                        u4280 DECA                                          u4520 DA18  
                                        u2681 F4BA                                          u3561 D4B8  
                                        u3481 D5E6                                          u2921 EBAA  
                                        u2841 EA76                                          u2825 E9F6  
                                        u2761 E7B6                                          u4441 C8A2  
                                        u3801 E6C0                                          u3721 E5E8  
                                        u3641 E460                                          u4281 DEC6  
                                        u4521 DA14                                          u2690 F4D0  
                                        u3570 D4DC                                          u3490 D612  
                                        u2850 EA8C                                          u2770 E7FA  
                                        u2930 CC74                                          u3810 E70C  
                                        u3730 E602                                          u3650 E476  
                                        u4290 DEFA                                          u4450 DBD8  
                                        u4530 DA4A                                          u2691 F4CC  
                                        u3571 D4D8                                          u3491 D60E  
                                        u2851 EA88                                          u2771 E7F6  
                                        u2931 CC70                                          u3811 E708  
                                        u3731 E5FE                                          u3651 E472  
                                        u4291 DEF4                                          u4451 DBD4  
                                        u4531 DA46                                          u3580 CA8A  
                                        u2860 EABA                                          u2780 E80C  
                                        u2940 CC8E                                          u3820 E73C  
                                        u3740 E620                                          u3660 E486  
                                        u3900 D2D8                                          u4460 DC0A  
                                        u4540 DB6C                                          _PMD0 0039C0  
                                        u3581 CA86                                          u2861 EAB6  
                                        u2781 E808                                          u2941 CC8A  
                                        u3821 E738                                          u3741 E61C  
                                        u3661 E482                                          u3901 D2D4  
                                        u4461 DC06                                          u4541 DB66  
                                        _PMD1 0039C1                                          u3590 CAAC  
                                        u2870 EAD0                                          u2790 E81C  
                                        u2950 CCB4                                          u3830 E76A  
                                        u3750 E640                                          u3670 E4C6  
                                        u3910 D358                                          u4470 DC5C  
                                        u4550 DB6E                                          u4518 D9F8  
                                        _PMD2 0039C2                                          u3591 CAA8  
                                        u2871 EACC                                          u2791 E818  
                                        u2951 CCB0                                          u3831 E766  
                                        u3751 E63C                                          u3671 E4C2  
                                        u3911 D354                                          u4471 DC58  
                                        _PMD3 0039C3                                          u3840 C6A4  
                                        u2880 EAE4                                          u2960 CCD2  
                                        u3760 E652                                          u3680 E506  
                                        u3920 D116                                          u4480 DC82  
                                        _PMD4 0039C4                                          u3841 C6A0  
                                        u2881 EAE0                                          u2961 CCCE  
                                        u3761 E64E                                          u3681 E502  
                                        u3921 D112                                          u4481 DC7E  
                                        _PMD5 0039C5                                          u3850 C95A  
                                        u2890 EAFE                                          u2970 CCEE  
                                        u3770 E680                                          u3690 E57C  
                                        u3930 D15A                                          u4490 DCEE  
                                        _PMD6 0039C6                                          u3851 C956  
                                        u2891 EAFA                                          u2971 CCEA  
                                        u3771 E67C                                          u3691 E578  
                                        u3931 D156                                          u4491 DCEA  
                                        _PMD7 0039C7                                          u3860 C97C  
                                        u2980 CD14                                          u3780 E696  
                                        u3940 D19A                                          u3861 C978  
                                        u2981 CD10                                          u3781 E692  
                                        u3941 D192                                          u3870 C99A  
                                        u2990 CBC4                                          u3790 E6AA  
                                        u3950 D1B4                                          u3871 C996  
                                        u2991 CBC0                                          u3791 E6A6  
                                        u3951 D1B0                                          u3880 D28C  
                                        u3960 D1E6                                          u3881 D288  
                                        u3961 D1E2                                          u3890 D29A  
                                        u3970 D1FC                                          u3891 D296  
                                        u3971 D1F8                                          u3980 F562  
                                        u3948 D19E                                          u3981 F55E  
                                        u3990 F5FA                                          u3991 F5F6  
                                        _WPUA 003A41                                          _WPUB 003A51  
                                        _WPUC 003A61                                          _WPUD 003A71  
                                        _WPUE 003A81                                          _main D996  
                                        fsr2h 003FDA                                          indf2 003FDF  
                                        fsr2l 003FD9                                          exp@x 0089  
                                        log@x 0081                                          pow@x 0094  
                                        pow@y 0098                                          prodh 003FF4  
                                        prodl 003FF3                                          start FFFC  
                             ___fldiv@new_exp 0065                                  ___param_bank 000000  
                                       ??_exp 0060                                         ??_log 0060  
                                       ??_pow 0060                       __end_of_TMR0_Initialize C68E  
              __size_of_OSCILLATOR_Initialize 0018                 __end_of_OSCILLATOR_Initialize C5D4  
                               ___fltol@sign1 0017                               __end_of___fladd F542  
                                       ?_main 0001                               __end_of___fldiv E77E  
                             __end_of___awdiv CD26                               __end_of___flneg C6C6  
                             __end_of___awmod CC62                               __end_of___flmul EBCC  
                   TMR0_ReadTimer@readValHigh 0008                               __end_of___flsub C70E  
                             __end_of___fltol D008                               __end_of___lldiv CB08  
                             ___awdiv@divisor 0009                               __end_of___llmod C9CC  
                                       _U2P1L 003DD4                                         _U2P2L 003DD6  
                                       _U2P3L 003DD8                               __end_of___lwdiv C844  
                                       _U2UIR 003DE0                               __end_of___lwmod C7D0  
                                       _U2RXB 003DD0                                         _U2TXB 003DD2  
                             _TMR0_WriteTimer C588                               ___awdiv@counter 000B  
                                       _OSCEN 0039DD                                         _TMR0H 003FB7  
                                       _TMR0L 003FB6                                         _TRISA 003FC2  
                                       _TRISB 003FC3                                         _TRISC 003FC4  
                                       _TRISD 003FC5                                         _TRISE 003FC6  
                             __end_of_dpowers FF2F                                         _floor D260  
                                       _ldexp D128                                         _frexp CD26  
                                       _errno 00CD                                         _scale EBCC  
                                       _putch C57E                                         main@n 00C2  
                                       tablat 003FF5                                         pow@yi 00A5  
                                       status 003FD8                                   exp@exponent 0091  
                                 ldexp@newexp 0085                ??_UART2_SetOverrunErrorHandler 0003  
                             __initialization C594                                   log@exponent 0085  
                                __end_of_main DBA0                                  ?_UART2_Write 0001  
                                      ??_main 00A9                                 __activetblptr 000003  
                        __size_of__tdiv_to_l_ 0156                                        ?_floor 0071  
                                      ?_ldexp 0081                                        ?_frexp 0033  
                            ___llmod@dividend 000E                                        ?_scale 0054  
                            ___awdiv@dividend 0007                                        _ANSELA 003A40  
                                      ?_putch 0001                                        _ANSELB 003A50  
                                      _ANSELC 003A60                                        _ANSELD 003A70  
                                      _ANSELE 003A80                                        _T0CON0 003FB8  
                                      _T0CON1 003FB9                                        _RB1I2C 003A5A  
                                      _RB2I2C 003A5B                                        _RD0I2C 003A7A  
                                      _RC3I2C 003A6A                                        _RD1I2C 003A7B  
                                      _RC4I2C 003A6B                                        _U2CON0 003DDA  
                                      _U2CON1 003DDB                                        _U2CON2 003DDC  
                                      _U2BRGH 003DDE                                        _U2FIFO 003DDF  
                                      _U2BRGL 003DDD                                        _RB6PPS 003A0E  
                                      _ODCONA 003A42                                        _ODCONB 003A52  
                                      _ODCONC 003A62                                        _ODCOND 003A72  
                                      _ODCONE 003A82                                        _INLVLA 003A44  
                                      _INLVLB 003A54                                        _INLVLC 003A64  
                                      _INLVLD 003A74                                        _INLVLE 003A84  
                                      _OSCFRQ 0039DF                                        _TMR0IF 01CD1F  
                            __end_of___xxtofl D996                              _UART2_Initialize C70E  
                            __end_of__powers_ FEAB                     _UART2_OverrunErrorHandler 00C7  
                                      ___flge CDFE                                        ___fleq CB08  
                                   ??___fladd 0069                                        ___wmul C634  
                                   ??___fldiv 005C                                     ??___awdiv 000B  
                                   ??___flneg 0005                                     ??___awmod 0005  
                                   ??___flmul 0043                                     ??___flsub 0060  
                                   ??___fltol 0013                       __end_of_TMR0_WriteTimer C594  
                                   ??___lldiv 0009                                     ??___llmod 0016  
                                   ??___lwdiv 000A                                     ??___lwmod 0005  
                            ?_TMR0_Initialize 0001                                        _fround E0E8  
                            ___awdiv@quotient 000D                               ___awmod@divisor 0003  
                             ___awmod@counter 0005                                        _printf F542  
                                      floor@i 0075                                        floor@x 0071  
                              _PMD_Initialize C610                                  __mediumconst FE76  
                                      tblptrh 003FF7                                        tblptrl 003FF6  
                                      tblptru 003FF8                                    ___flge@ff1 0001  
                                  ___flge@ff2 0005                                  ___xxtofl@arg 0023  
                            __end_ofexp@coeff FF07                                  ___xxtofl@exp 0022  
                           _SYSTEM_Initialize C5A6                                  ___xxtofl@val 0019  
                                  ___fleq@ff1 0027                                    ___fleq@ff2 002B  
                            __end_oflog@coeff FF53                                    __accesstop 0060  
                     __end_of__initialization C5A0                                    ___flneg@f1 0001  
                          ?_SYSTEM_Initialize 0001                                  eval_poly@res 007D  
                               ___rparam_used 000001                                    ___fltol@f1 000F  
                              __pcstackCOMRAM 0001                         _UART2_SetErrorHandler C560  
                         ??_SYSTEM_Initialize 0003                                 __end_of_floor D3A2  
                               __end_of_ldexp D260                                 __end_of_frexp CDFE  
                               __end_of_scale F080                                 __end_of_putch C588  
                     __size_of_TMR0_ReadTimer 0022                        __end_of_PMD_Initialize C634  
                    ??_poll_switch1_for_edges 0003                                    __div_to_l_ D3A2  
                             __div_to_l_@exp1 000E                                       ??_floor 0060  
                                     ??_ldexp 0087                               __div_to_l_@cntr 000D  
                                     ??_frexp 0039                                       ??_scale 0058  
                   __end_of_SYSTEM_Initialize C5BC                               __div_to_l_@quot 0009  
                                     ??_putch 0002                                    __pbssBANK0 00CD  
                          __size_of_eval_poly 0120                                 __div_to_l_@f1 0001  
                               __div_to_l_@f2 0005                                    _clearPuTTY C8C0  
                                     ?___flge 0001                                       ?___fleq 0027  
                                     ?___wmul 0001          __end_of_UART2_SetFramingErrorHandler C574  
       __size_of_UART2_SetFramingErrorHandler 000A                  _UART2_SetFramingErrorHandler C56A  
                            ?_TMR0_WriteTimer 0001                                       ?_fround 0054  
                                     ?_printf 0079                               ?_PMD_Initialize 0001  
                                     _U2ERRIE 003DE2                                       _U2ERRIR 003DE1  
                        __size_of_UART2_Write 001A                                     ?___xxtofl 0019  
                                     _U2RXPPS 003AE8                                       _OSCCON1 0039D9  
                                     _OSCCON3 0039DB                                       _OSCTUNE 0039DE  
                                     _SLRCONA 003A43                                       _SLRCONB 003A53  
                                     _SLRCONC 003A63                                       _SLRCOND 003A73  
                                     _SLRCONE 003A83                             __end_of__npowers_ FEDF  
                                     __Hparam 0000                                    _scale$1468 0058  
                      ?_UART2_SetErrorHandler 0001                                       __Lparam 0000  
                             __size_of___flge 0104                               __size_of___fleq 00AA  
                                     ___fladd F080                                       ___fldiv E3E2  
                                     ___awdiv CC62                                       ___flneg C68E  
                                     ___awmod CBB2                                       ___flmul E77E  
                                     ___flsub C6C6                                       ___fltol CF02  
                                     ___lldiv CA64                               __size_of___wmul 002A  
                                     ___llmod C944                                       ___lwdiv C7D0  
                                     ___lwmod C76C                 ?_UART2_SetFramingErrorHandler 0001  
                                     __pcinit C594                             __end_of_eval_poly D128  
                             __size_of_fround 02FA                                       __ramtop 1000  
                                     __ptext0 D996                                       __ptext1 DBA0  
                                     __ptext2 D644                                       __ptext3 DE00  
                                     __ptext4 D128                                       __ptext5 D260  
                                     __ptext6 CD26                                       __ptext7 D008  
                                     __ptext8 E3E2                                       __ptext9 C844  
                             __size_of_printf 0934               __size_of_poll_switch1_for_edges 007C  
                                 ?__div_to_l_ 0001              _UART2_DefaultOverrunErrorHandler 000000  
                                     _dpowers FF07                         _OSCILLATOR_Initialize C5BC  
                                __size_of_exp 02E8                                  __size_of_log 019E  
                                __size_of_pow 0260                                    ??___xxtofl 001D  
                            ___awmod@dividend 0001                      ??_PIN_MANAGER_Initialize 0001  
                    __end_of_UART2_Initialize C76C                    __size_of_SYSTEM_Initialize 0016  
                        end_of_initialization C5A0                                       exp@sign 0093  
                                 ?_clearPuTTY 0001                               ___lldiv@divisor 0005  
                                     pow@sign 00A4                               ___lldiv@counter 000D  
                       TMR0_ReadTimer@readVal 0005                                       printf@c 009D  
                                     printf@f 0079                                       postdec2 003FDD  
                                     postinc2 003FDE                                __tdiv_to_l_@f1 0001  
                              __tdiv_to_l_@f2 0005                                _TMR0_ReadTimer C5EE  
                               ??__tdiv_to_l_ 0009                                     _PORTDbits 003FCD  
                                 ___fladd@grs 0070                                 ___xxtofl@sign 0021  
                                 ___fldiv@grs 0067                                   ___fldiv@rem 0060  
                                 ___flmul@grs 0048                        _poll_switch1_for_edges C844  
                     main@has_switch1_changed 00C4                           __size_of__div_to_l_ 014C  
                        _timer0ReloadVal16bit 00CB                        __end_of_TMR0_ReadTimer C610  
                              __end_of___flge CF02                                __end_of___fleq CBB2  
                              __end_of___wmul C65E                        ?_OSCILLATOR_Initialize 0001  
                              __end_of_fround E3E2                                    floor@expon 0079  
                              __end_of_printf FE76                ??_UART2_SetFramingErrorHandler 0003  
                         start_initialization C594                                    eval_poly@d 0075  
                                  eval_poly@n 0077                                    eval_poly@x 0071  
                         __size_of_clearPuTTY 0084                      __size_of_TMR0_Initialize 0030  
                                  ldexp@value 0081               __size_of_PIN_MANAGER_Initialize 0098  
                         __end_of__tdiv_to_l_ D644                                   __end_of_exp E0E8  
                                 __end_of_log D7E2                                   __end_of_pow DE00  
                   _UART2_DefaultErrorHandler 000000                                   putch@txData 0002  
                                  frexp@value 0033                               ___llmod@divisor 0012  
                             ___llmod@counter 0016     poll_switch1_for_edges@has_switch1_changed 0003  
                                    ??___flge 0009                                      ??___fleq 002F  
                            ??_PMD_Initialize 0001                               ?_TMR0_ReadTimer 0001  
                                    ??___wmul 0005                                      ??_fround 0058  
                           UART2_Write@txData 0001                                      ??_printf 0083  
                                   ___fladd@a 005C                                     ___fladd@b 0058  
                                  fround@prec 0068                                     ___fldiv@a 0058  
                                   ___fldiv@b 0054                                     ___flmul@a 003F  
                                   ___flmul@b 003B                                     ___flsub@a 0075  
                                   ___flsub@b 0071                     _UART2_FramingErrorHandler 00C9  
                               __pcstackBANK0 0060                             __size_of___xxtofl 01B4  
                     ??_UART2_SetErrorHandler 0003                                     __pnvBANK0 00C5  
                                   _main$1463 00B2                                     _main$1464 00B6  
                                   _main$1465 00BA                              ___lwdiv@dividend 0006  
                      _PIN_MANAGER_Initialize C9CC                                 __pmediumconst FE76  
                                    ?___fladd 0058                                      ?___fldiv 0054  
                                    ?___awdiv 0007                                      ?___flneg 0001  
                                    ?___awmod 0001                                      ?___flmul 003B  
                                    ?___flsub 0071                                      ?___fltol 000F  
                                    ?___lldiv 0001                                      ?___llmod 000E  
                                   __npowers_ FEAB                                      ?___lwdiv 0006  
                                    ?___lwmod 0001                                 ??_UART2_Write 0001  
                                 __tdiv_to_l_ D4EE                                  ??__div_to_l_ 0009  
                                   _eval_poly D008                      __size_of_TMR0_WriteTimer 000C  
                           ?_UART2_Initialize 0001                              ___lwdiv@quotient 000A  
                              __size_of_floor 0142                                __size_of_ldexp 0138  
                              __size_of_frexp 00D8                                __size_of_scale 04B4  
                          ??_UART2_Initialize 0003                                __size_of_putch 000A  
                            _uart2RxLastError 00D1                             ??_TMR0_Initialize 0001  
                                 _U2ERRIRbits 003DE1                                ___wmul@product 0005  
       UART2_SetErrorHandler@interruptHandler 0001                                      _LATDbits 003FBD  
                          _last_switch1_value 00CF                                  ??_clearPuTTY 0060  
                          __end_of__div_to_l_ D4EE                                      _PIR3bits 0039A3  
                                    _PIR6bits 0039A6                      TMR0_ReadTimer@readValLow 0007  
                           ___wmul@multiplier 0001                                    printf@flag 008B  
                                  printf@eexp 0093                                    printf@fval 0099  
                                  printf@prec 008D                                    ?_eval_poly 0071  
                                   main@value 00C0                            _UART2_ErrorHandler 00C5  
                         __end_of_UART2_Write C5EE                            __end_of_clearPuTTY C944  
                     ?_poll_switch1_for_edges 0001                                     frexp@eptr 0037  
                                    __Hrparam 0000                                      __Lrparam 0000  
                     ??_OSCILLATOR_Initialize 0001                              __size_of___fladd 04C2  
                            __size_of___fldiv 039C                              __size_of___awdiv 00C4  
                            __size_of___flneg 0038                              __size_of___awmod 00B0  
                            __size_of___flmul 044E                              __size_of___flsub 0048  
                            __size_of___fltol 0106                              __size_of___lldiv 00A4  
                            __size_of___llmod 0088                              __size_of___lwdiv 0074  
                            __size_of___lwmod 0064                                   _fround$1466 0064  
                                 _fround$1467 0060                                      _exp$1472 008D  
                                    ___xxtofl D7E2                                    _T0CON0bits 003FB8  
                                  _T0CON1bits 003FB9                               ___lwdiv@divisor 0008  
              __end_of_poll_switch1_for_edges C8C0                               ___lwdiv@counter 000C  
                                    __ptext10 C8C0                                      __ptext11 F542  
                                    __ptext20 E77E                                      __ptext12 EBCC  
                                    __ptext21 D4EE                                      __ptext13 CBB2  
                                    __ptext30 C68E                                      __ptext22 D3A2  
                                    __ptext14 CC62                                      __ptext31 CDFE  
                                    __ptext23 D7E2                                      __ptext15 C57E  
                                    __ptext40 C65E                                      __ptext32 CB08  
                                    __ptext24 C634                                      __ptext16 C5D4  
                                    __ptext41 C610                                      __ptext33 C588  
                                    __ptext25 C944                                      __ptext17 E0E8  
                                    __ptext42 C9CC                                      __ptext34 C5EE  
                                    __ptext26 CA64                                      __ptext18 C76C  
                                    __ptext43 C5BC                                      __ptext35 C5A6  
                                    __ptext27 CF02                                      __ptext19 C7D0  
                                    __ptext36 C70E                                      __ptext28 C6C6  
                                    __ptext37 C574                                      __ptext29 F080  
                                    __ptext38 C56A                                      __ptext39 C560  
                                    __powers_ FE77                                      _pow$1470 009C  
                                    _pow$1471 00A0                       TMR0_WriteTimer@timerVal 0001  
                                  _U2CON0bits 003DDA                             ??_TMR0_WriteTimer 0003  
                               __size_of_main 020A              _UART2_DefaultFramingErrorHandler 000000  
                            ??_TMR0_ReadTimer 0003  UART2_SetOverrunErrorHandler@interruptHandler 0001  
                                    main@flag 00BE                                     printf@val 008F  
                                    main@time 00AE                                   _UART2_Write C5D4  
                                    exp@coeff FEDF                                      log@coeff FF2F  
                                 ??_eval_poly 0079                                      scale@scl 005C  
        __end_of_UART2_SetOverrunErrorHandler C57E         __size_of_UART2_SetOverrunErrorHandler 000A  
                _UART2_SetOverrunErrorHandler C574                              __tdiv_to_l_@exp1 0011  
                            __tdiv_to_l_@cntr 0010                              __tdiv_to_l_@quot 000C  
                            ___lwmod@dividend 0001                              ___lldiv@dividend 0001  
                     ?_PIN_MANAGER_Initialize 0001                __size_of_UART2_SetErrorHandler 000A  
               __end_of_UART2_SetErrorHandler C56A                                      printf@ap 0089  
UART2_SetFramingErrorHandler@interruptHandler 0001                                  ?__tdiv_to_l_ 0001  
                                 _printf$1469 0085                              ___lldiv@quotient 0009  
                             ___lwmod@divisor 0003                               _TMR0_Initialize C65E  
                             ___lwmod@counter 0005                                 ___fladd@signs 006D  
              __end_of_PIN_MANAGER_Initialize CA64         poll_switch1_for_edges@digitalinputpin 0001  
               ?_UART2_SetOverrunErrorHandler 0001                                  ___fladd@aexp 006E  
                                ___fladd@bexp 006F                     __size_of_UART2_Initialize 005E  
